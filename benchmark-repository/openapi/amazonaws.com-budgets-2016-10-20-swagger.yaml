openapi: 3.0.0
info:
  version: 2016-10-20
  x-release: v4
  title: AWS Budgets
  description: <p>The AWS Budgets API enables you to use AWS Budgets to plan your service
    usage, service costs, and instance reservations. The API reference provides
    descriptions, syntax, and usage examples for each of the actions and data
    types for AWS Budgets. </p> <p>Budgets provide you with a way to see the
    following information:</p> <ul> <li> <p>How close your plan is to your
    budgeted amount or to the free tier limits</p> </li> <li> <p>Your
    usage-to-date, including how much you've used of your Reserved Instances
    (RIs)</p> </li> <li> <p>Your current estimated charges from AWS, and how
    much your predicted usage will accrue in charges by the end of the month</p>
    </li> <li> <p>How much of your budget has been used</p> </li> </ul> <p>AWS
    updates your budget status several times a day. Budgets track your unblended
    costs, subscriptions, refunds, and RIs. You can create the following types
    of budgets:</p> <ul> <li> <p> <b>Cost budgets</b> - Plan how much you want
    to spend on a service.</p> </li> <li> <p> <b>Usage budgets</b> - Plan how
    much you want to use one or more services.</p> </li> <li> <p> <b>RI
    utilization budgets</b> - Define a utilization threshold, and receive alerts
    when your RI usage falls below that threshold. This lets you see if your RIs
    are unused or under-utilized.</p> </li> <li> <p> <b>RI coverage budgets</b>
    - Define a coverage threshold, and receive alerts when the number of your
    instance hours that are covered by RIs fall below that threshold. This lets
    you see how much of your instance usage is covered by a reservation.</p>
    </li> </ul> <p>Service Endpoint</p> <p>The AWS Budgets API provides the
    following endpoint:</p> <ul> <li> <p>https://budgets.amazonaws.com</p> </li>
    </ul> <p>For information about costs that are associated with the AWS
    Budgets API, see <a
    href="https://aws.amazon.com/aws-cost-management/pricing/">AWS Cost
    Management Pricing</a>.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: budgets
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/budgets-2016-10-20.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/budgets/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=AWSBudgetServiceGateway.CreateBudget:
    post:
      operationId: CreateBudget
      description: <p>Creates a budget and, if included, notifications and subscribers.
        </p> <important> <p>Only one of <code>BudgetLimit</code> or
        <code>PlannedBudgetLimits</code> can be present in the syntax at one
        time. Use the syntax that matches your case. The Request Syntax section
        shows the <code>BudgetLimit</code> syntax. For
        <code>PlannedBudgetLimits</code>, see the <a
        href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_CreateBudget.html#API_CreateBudget_Examples">Examples</a>
        section. </p> </important>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateBudgetResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: CreationLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreationLimitExceededException"
        "483":
          description: DuplicateRecordException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateRecordException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSBudgetServiceGateway.CreateBudget
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateBudgetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSBudgetServiceGateway.CreateNotification:
    post:
      operationId: CreateNotification
      description: Creates a notification. You must create the budget before you create the
        associated notification.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateNotificationResponse"
        "480":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: CreationLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreationLimitExceededException"
        "484":
          description: DuplicateRecordException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateRecordException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSBudgetServiceGateway.CreateNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateNotificationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSBudgetServiceGateway.CreateSubscriber:
    post:
      operationId: CreateSubscriber
      description: Creates a subscriber. You must create the associated budget and
        notification before you create the subscriber.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateSubscriberResponse"
        "480":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: CreationLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreationLimitExceededException"
        "483":
          description: DuplicateRecordException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateRecordException"
        "484":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSBudgetServiceGateway.CreateSubscriber
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSubscriberRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSBudgetServiceGateway.DeleteBudget:
    post:
      operationId: DeleteBudget
      description: <p>Deletes a budget. You can delete your budget at any time.</p>
        <important> <p>Deleting a budget also deletes the notifications and
        subscribers that are associated with that budget.</p> </important>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteBudgetResponse"
        "480":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSBudgetServiceGateway.DeleteBudget
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteBudgetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSBudgetServiceGateway.DeleteNotification:
    post:
      operationId: DeleteNotification
      description: <p>Deletes a notification.</p> <important> <p>Deleting a notification
        also deletes the subscribers that are associated with the
        notification.</p> </important>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteNotificationResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSBudgetServiceGateway.DeleteNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteNotificationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSBudgetServiceGateway.DeleteSubscriber:
    post:
      operationId: DeleteSubscriber
      description: <p>Deletes a subscriber.</p> <important> <p>Deleting the last subscriber
        to a notification also deletes the notification.</p> </important>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSubscriberResponse"
        "480":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSBudgetServiceGateway.DeleteSubscriber
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteSubscriberRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudget:
    post:
      operationId: DescribeBudget
      description: <p>Describes a budget.</p> <important> <p>The Request Syntax section
        shows the <code>BudgetLimit</code> syntax. For
        <code>PlannedBudgetLimits</code>, see the <a
        href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_DescribeBudget.html#API_DescribeBudget_Examples">Examples</a>
        section. </p> </important>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeBudgetResponse"
        "480":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSBudgetServiceGateway.DescribeBudget
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeBudgetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgetPerformanceHistory:
    post:
      operationId: DescribeBudgetPerformanceHistory
      description: Describes the history for <code>DAILY</code>, <code>MONTHLY</code>, and
        <code>QUARTERLY</code> budgets. Budget history isn't available for
        <code>ANNUAL</code> budgets.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeBudgetPerformanceHistoryResponse"
        "480":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "484":
          description: ExpiredNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpiredNextTokenException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSBudgetServiceGateway.DescribeBudgetPerformanceHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeBudgetPerformanceHistoryRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSBudgetServiceGateway.DescribeBudgets:
    post:
      operationId: DescribeBudgets
      description: <p>Lists the budgets that are associated with an account.</p>
        <important> <p>The Request Syntax section shows the
        <code>BudgetLimit</code> syntax. For <code>PlannedBudgetLimits</code>,
        see the <a
        href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_DescribeBudgets.html#API_DescribeBudgets_Examples">Examples</a>
        section. </p> </important>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeBudgetsResponse"
        "480":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "484":
          description: ExpiredNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpiredNextTokenException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSBudgetServiceGateway.DescribeBudgets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeBudgetsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSBudgetServiceGateway.DescribeNotificationsForBudget:
    post:
      operationId: DescribeNotificationsForBudget
      description: Lists the notifications that are associated with a budget.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeNotificationsForBudgetResponse"
        "480":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "484":
          description: ExpiredNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpiredNextTokenException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSBudgetServiceGateway.DescribeNotificationsForBudget
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeNotificationsForBudgetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSBudgetServiceGateway.DescribeSubscribersForNotification:
    post:
      operationId: DescribeSubscribersForNotification
      description: Lists the subscribers that are associated with a notification.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeSubscribersForNotificationRespo\
                  nse"
        "480":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "484":
          description: ExpiredNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpiredNextTokenException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSBudgetServiceGateway.DescribeSubscribersForNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeSubscribersForNotificationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSBudgetServiceGateway.UpdateBudget:
    post:
      operationId: UpdateBudget
      description: <p>Updates a budget. You can change every part of a budget except for
        the <code>budgetName</code> and the <code>calculatedSpend</code>. When
        you modify a budget, the <code>calculatedSpend</code> drops to zero
        until AWS has new usage data to use for forecasting.</p> <important>
        <p>Only one of <code>BudgetLimit</code> or
        <code>PlannedBudgetLimits</code> can be present in the syntax at one
        time. Use the syntax that matches your case. The Request Syntax section
        shows the <code>BudgetLimit</code> syntax. For
        <code>PlannedBudgetLimits</code>, see the <a
        href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_budgets_UpdateBudget.html#API_UpdateBudget_Examples">Examples</a>
        section. </p> </important>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateBudgetResponse"
        "480":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSBudgetServiceGateway.UpdateBudget
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBudgetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSBudgetServiceGateway.UpdateNotification:
    post:
      operationId: UpdateNotification
      description: Updates a notification.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateNotificationResponse"
        "480":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: DuplicateRecordException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateRecordException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSBudgetServiceGateway.UpdateNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateNotificationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSBudgetServiceGateway.UpdateSubscriber:
    post:
      operationId: UpdateSubscriber
      description: Updates a subscriber.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateSubscriberResponse"
        "480":
          description: InternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: DuplicateRecordException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateRecordException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSBudgetServiceGateway.UpdateSubscriber
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSubscriberRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: https://budgets.amazonaws.com
    variables: {}
    description: The general AWSBudgets multi-region endpoint
  - url: http://budgets.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWSBudgets endpoint for China (Beijing) and China (Ningxia)
  - url: https://budgets.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWSBudgets endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateBudgetResponse:
      type: object
      properties: {}
      description: " Response of CreateBudget "
    CreateBudgetRequest:
      type: object
      required:
        - AccountId
        - Budget
      properties:
        AccountId:
          $ref: "#/components/schemas/AccountId"
        Budget:
          $ref: "#/components/schemas/Budget"
        NotificationsWithSubscribers:
          $ref: "#/components/schemas/NotificationWithSubscribersList"
      description: " Request of CreateBudget "
    InvalidParameterException: {}
    InternalErrorException: {}
    CreationLimitExceededException: {}
    DuplicateRecordException: {}
    CreateNotificationResponse:
      type: object
      properties: {}
      description: " Response of CreateNotification "
    CreateNotificationRequest:
      type: object
      required:
        - AccountId
        - BudgetName
        - Notification
        - Subscribers
      properties:
        AccountId:
          $ref: "#/components/schemas/AccountId"
        BudgetName:
          $ref: "#/components/schemas/BudgetName"
        Notification:
          $ref: "#/components/schemas/Notification"
        Subscribers:
          $ref: "#/components/schemas/Subscribers"
      description: " Request of CreateNotification "
    NotFoundException: {}
    CreateSubscriberResponse:
      type: object
      properties: {}
      description: " Response of CreateSubscriber "
    CreateSubscriberRequest:
      type: object
      required:
        - AccountId
        - BudgetName
        - Notification
        - Subscriber
      properties:
        AccountId:
          $ref: "#/components/schemas/AccountId"
        BudgetName:
          $ref: "#/components/schemas/BudgetName"
        Notification:
          $ref: "#/components/schemas/Notification"
        Subscriber:
          $ref: "#/components/schemas/Subscriber"
      description: " Request of CreateSubscriber "
    DeleteBudgetResponse:
      type: object
      properties: {}
      description: " Response of DeleteBudget "
    DeleteBudgetRequest:
      type: object
      required:
        - AccountId
        - BudgetName
      properties:
        AccountId:
          $ref: "#/components/schemas/AccountId"
        BudgetName:
          $ref: "#/components/schemas/BudgetName"
      description: " Request of DeleteBudget "
    DeleteNotificationResponse:
      type: object
      properties: {}
      description: " Response of DeleteNotification "
    DeleteNotificationRequest:
      type: object
      required:
        - AccountId
        - BudgetName
        - Notification
      properties:
        AccountId:
          $ref: "#/components/schemas/AccountId"
        BudgetName:
          $ref: "#/components/schemas/BudgetName"
        Notification:
          $ref: "#/components/schemas/Notification"
      description: " Request of DeleteNotification "
    DeleteSubscriberResponse:
      type: object
      properties: {}
      description: " Response of DeleteSubscriber "
    DeleteSubscriberRequest:
      type: object
      required:
        - AccountId
        - BudgetName
        - Notification
        - Subscriber
      properties:
        AccountId:
          $ref: "#/components/schemas/AccountId"
        BudgetName:
          $ref: "#/components/schemas/BudgetName"
        Notification:
          $ref: "#/components/schemas/Notification"
        Subscriber:
          $ref: "#/components/schemas/Subscriber"
      description: " Request of DeleteSubscriber "
    DescribeBudgetResponse:
      type: object
      properties:
        Budget:
          $ref: "#/components/schemas/Budget"
      description: " Response of DescribeBudget "
    DescribeBudgetRequest:
      type: object
      required:
        - AccountId
        - BudgetName
      properties:
        AccountId:
          $ref: "#/components/schemas/AccountId"
        BudgetName:
          $ref: "#/components/schemas/BudgetName"
      description: " Request of DescribeBudget "
    DescribeBudgetPerformanceHistoryResponse:
      type: object
      properties:
        BudgetPerformanceHistory:
          $ref: "#/components/schemas/BudgetPerformanceHistory"
        NextToken:
          $ref: "#/components/schemas/GenericString"
    DescribeBudgetPerformanceHistoryRequest:
      type: object
      required:
        - AccountId
        - BudgetName
      properties:
        AccountId:
          $ref: "#/components/schemas/AccountId"
        BudgetName:
          $ref: "#/components/schemas/BudgetName"
        TimePeriod:
          $ref: "#/components/schemas/TimePeriod"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/GenericString"
    InvalidNextTokenException: {}
    ExpiredNextTokenException: {}
    DescribeBudgetsResponse:
      type: object
      properties:
        Budgets:
          $ref: "#/components/schemas/Budgets"
        NextToken:
          $ref: "#/components/schemas/GenericString"
      description: " Response of DescribeBudgets "
    DescribeBudgetsRequest:
      type: object
      required:
        - AccountId
      properties:
        AccountId:
          $ref: "#/components/schemas/AccountId"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/GenericString"
      description: " Request of DescribeBudgets "
    DescribeNotificationsForBudgetResponse:
      type: object
      properties:
        Notifications:
          $ref: "#/components/schemas/Notifications"
        NextToken:
          $ref: "#/components/schemas/GenericString"
      description: " Response of GetNotificationsForBudget "
    DescribeNotificationsForBudgetRequest:
      type: object
      required:
        - AccountId
        - BudgetName
      properties:
        AccountId:
          $ref: "#/components/schemas/AccountId"
        BudgetName:
          $ref: "#/components/schemas/BudgetName"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/GenericString"
      description: " Request of DescribeNotificationsForBudget "
    DescribeSubscribersForNotificationResponse:
      type: object
      properties:
        Subscribers:
          $ref: "#/components/schemas/Subscribers"
        NextToken:
          $ref: "#/components/schemas/GenericString"
      description: " Response of DescribeSubscribersForNotification "
    DescribeSubscribersForNotificationRequest:
      type: object
      required:
        - AccountId
        - BudgetName
        - Notification
      properties:
        AccountId:
          $ref: "#/components/schemas/AccountId"
        BudgetName:
          $ref: "#/components/schemas/BudgetName"
        Notification:
          $ref: "#/components/schemas/Notification"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/GenericString"
      description: " Request of DescribeSubscribersForNotification "
    UpdateBudgetResponse:
      type: object
      properties: {}
      description: " Response of UpdateBudget "
    UpdateBudgetRequest:
      type: object
      required:
        - AccountId
        - NewBudget
      properties:
        AccountId:
          $ref: "#/components/schemas/AccountId"
        NewBudget:
          $ref: "#/components/schemas/Budget"
      description: " Request of UpdateBudget "
    UpdateNotificationResponse:
      type: object
      properties: {}
      description: " Response of UpdateNotification "
    UpdateNotificationRequest:
      type: object
      required:
        - AccountId
        - BudgetName
        - OldNotification
        - NewNotification
      properties:
        AccountId:
          $ref: "#/components/schemas/AccountId"
        BudgetName:
          $ref: "#/components/schemas/BudgetName"
        OldNotification:
          $ref: "#/components/schemas/Notification"
        NewNotification:
          $ref: "#/components/schemas/Notification"
      description: " Request of UpdateNotification "
    UpdateSubscriberResponse:
      type: object
      properties: {}
      description: " Response of UpdateSubscriber "
    UpdateSubscriberRequest:
      type: object
      required:
        - AccountId
        - BudgetName
        - Notification
        - OldSubscriber
        - NewSubscriber
      properties:
        AccountId:
          $ref: "#/components/schemas/AccountId"
        BudgetName:
          $ref: "#/components/schemas/BudgetName"
        Notification:
          $ref: "#/components/schemas/Notification"
        OldSubscriber:
          $ref: "#/components/schemas/Subscriber"
        NewSubscriber:
          $ref: "#/components/schemas/Subscriber"
      description: " Request of UpdateSubscriber "
    AccountId:
      type: string
      pattern: \d{12}
      description: The account ID of the user. It should be a 12-digit number.
      minLength: 12
      maxLength: 12
    BudgetName:
      type: string
      pattern: "[^:\\\\]+"
      description: " A string that represents the budget name. The \":\" and \"\\\"
        characters aren't allowed."
      minLength: 1
      maxLength: 100
    Spend:
      type: object
      required:
        - Amount
        - Unit
      properties:
        Amount:
          $ref: "#/components/schemas/NumericValue"
        Unit:
          $ref: "#/components/schemas/UnitValue"
      description: <p>The amount of cost or usage that is measured for a budget.</p> <p>For
        example, a <code>Spend</code> for <code>3 GB</code> of S3 usage would
        have the following parameters:</p> <ul> <li> <p>An <code>Amount</code>
        of <code>3</code> </p> </li> <li> <p>A <code>unit</code> of
        <code>GB</code> </p> </li> </ul>
    PlannedBudgetLimits:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/Spend"
    CostFilters:
      type: object
      description: " A map that represents the cost filters that are applied to the budget."
      additionalProperties:
        $ref: "#/components/schemas/DimensionValues"
    CostTypes:
      type: object
      properties:
        IncludeTax:
          $ref: "#/components/schemas/NullableBoolean"
        IncludeSubscription:
          $ref: "#/components/schemas/NullableBoolean"
        UseBlended:
          $ref: "#/components/schemas/NullableBoolean"
        IncludeRefund:
          $ref: "#/components/schemas/NullableBoolean"
        IncludeCredit:
          $ref: "#/components/schemas/NullableBoolean"
        IncludeUpfront:
          $ref: "#/components/schemas/NullableBoolean"
        IncludeRecurring:
          $ref: "#/components/schemas/NullableBoolean"
        IncludeOtherSubscription:
          $ref: "#/components/schemas/NullableBoolean"
        IncludeSupport:
          $ref: "#/components/schemas/NullableBoolean"
        IncludeDiscount:
          $ref: "#/components/schemas/NullableBoolean"
        UseAmortized:
          $ref: "#/components/schemas/NullableBoolean"
      description: <p>The types of cost that are included in a <code>COST</code> budget,
        such as tax and subscriptions.</p> <p> <code>USAGE</code>,
        <code>RI_UTILIZATION</code>, and <code>RI_COVERAGE</code> budgets do not
        have <code>CostTypes</code>.</p>
    TimeUnit:
      type: string
      enum:
        - DAILY
        - MONTHLY
        - QUARTERLY
        - ANNUALLY
      description: " The time unit of the budget, such as MONTHLY or QUARTERLY."
    TimePeriod:
      type: object
      properties:
        Start:
          $ref: "#/components/schemas/GenericTimestamp"
        End:
          $ref: "#/components/schemas/GenericTimestamp"
      description: "The period of time that is covered by a budget. The period has a start
        date and an end date. The start date must come before the end date.
        There are no restrictions on the end date. "
    CalculatedSpend:
      type: object
      required:
        - ActualSpend
      properties:
        ActualSpend:
          $ref: "#/components/schemas/Spend"
        ForecastedSpend:
          $ref: "#/components/schemas/Spend"
      description: <p>The spend objects that are associated with this budget. The
        <code>actualSpend</code> tracks how much you've used, cost, usage, or RI
        units, and the <code>forecastedSpend</code> tracks how much you are
        predicted to spend if your current usage remains steady.</p> <p>For
        example, if it is the 20th of the month and you have spent
        <code>50</code> dollars on Amazon EC2, your <code>actualSpend</code> is
        <code>50 USD</code>, and your <code>forecastedSpend</code> is <code>75
        USD</code>.</p>
    BudgetType:
      type: string
      enum:
        - USAGE
        - COST
        - RI_UTILIZATION
        - RI_COVERAGE
      description: "<p> The type of a budget. It must be one of the following types: </p>
        <p> <code>COST</code>, <code>USAGE</code>, <code>RI_UTILIZATION</code>,
        or <code>RI_COVERAGE</code>.</p>"
    GenericTimestamp:
      type: string
      description: " A generic time stamp. In Java, it is transformed to a
        <code>Date</code> object."
      format: date-time
    Budget:
      type: object
      required:
        - BudgetName
        - TimeUnit
        - BudgetType
      properties:
        BudgetName:
          $ref: "#/components/schemas/BudgetName"
        BudgetLimit:
          $ref: "#/components/schemas/Spend"
        PlannedBudgetLimits:
          $ref: "#/components/schemas/PlannedBudgetLimits"
        CostFilters:
          $ref: "#/components/schemas/CostFilters"
        CostTypes:
          $ref: "#/components/schemas/CostTypes"
        TimeUnit:
          $ref: "#/components/schemas/TimeUnit"
        TimePeriod:
          $ref: "#/components/schemas/TimePeriod"
        CalculatedSpend:
          $ref: "#/components/schemas/CalculatedSpend"
        BudgetType:
          $ref: "#/components/schemas/BudgetType"
        LastUpdatedTime:
          $ref: "#/components/schemas/GenericTimestamp"
      description: "<p>Represents the output of the <code>CreateBudget</code> operation.
        The content consists of the detailed metadata and data file information,
        and the current status of the <code>budget</code> object.</p> <p>This is
        the ARN pattern for a budget: </p> <p>
        <code>arn:aws:budgetservice::AccountId:budget/budgetName</code> </p>"
    BudgetedAndActualAmountsList:
      type: array
      items:
        $ref: "#/components/schemas/BudgetedAndActualAmounts"
    BudgetPerformanceHistory:
      type: object
      properties:
        BudgetName:
          $ref: "#/components/schemas/BudgetName"
        BudgetType:
          $ref: "#/components/schemas/BudgetType"
        CostFilters:
          $ref: "#/components/schemas/CostFilters"
        CostTypes:
          $ref: "#/components/schemas/CostTypes"
        TimeUnit:
          $ref: "#/components/schemas/TimeUnit"
        BudgetedAndActualAmountsList:
          $ref: "#/components/schemas/BudgetedAndActualAmountsList"
      description: A history of the state of a budget at the end of the budget's specified
        time period.
    BudgetedAndActualAmounts:
      type: object
      properties:
        BudgetedAmount:
          $ref: "#/components/schemas/Spend"
        ActualAmount:
          $ref: "#/components/schemas/Spend"
        TimePeriod:
          $ref: "#/components/schemas/TimePeriod"
      description: The amount of cost or usage that you created the budget for, compared to
        your actual costs or usage.
    Budgets:
      type: array
      description: " A list of budgets."
      items:
        $ref: "#/components/schemas/Budget"
    ComparisonOperator:
      type: string
      enum:
        - GREATER_THAN
        - LESS_THAN
        - EQUAL_TO
      description: <p> The comparison operator of a notification. Currently the service
        supports the following operators:</p> <p> <code>GREATER_THAN</code>,
        <code>LESS_THAN</code>, <code>EQUAL_TO</code> </p>
    DimensionValues:
      type: array
      items:
        $ref: "#/components/schemas/GenericString"
    NullableBoolean:
      type: boolean
    NotificationWithSubscribersList:
      type: array
      description: " A list of notifications, each with a list of subscribers."
      items:
        $ref: "#/components/schemas/NotificationWithSubscribers"
      maxItems: 5
    Notification:
      type: object
      required:
        - NotificationType
        - ComparisonOperator
        - Threshold
      properties:
        NotificationType:
          $ref: "#/components/schemas/NotificationType"
        ComparisonOperator:
          $ref: "#/components/schemas/ComparisonOperator"
        Threshold:
          $ref: "#/components/schemas/NotificationThreshold"
        ThresholdType:
          $ref: "#/components/schemas/ThresholdType"
        NotificationState:
          $ref: "#/components/schemas/NotificationState"
      description: <p>A notification that is associated with a budget. A budget can have up
        to five notifications. </p> <p>Each notification must have at least one
        subscriber. A notification can have one SNS subscriber and up to 10
        email subscribers, for a total of 11 subscribers.</p> <p>For example, if
        you have a budget for 200 dollars and you want to be notified when you
        go over 160 dollars, create a notification with the following
        parameters:</p> <ul> <li> <p>A notificationType of <code>ACTUAL</code>
        </p> </li> <li> <p>A <code>thresholdType</code> of
        <code>PERCENTAGE</code> </p> </li> <li> <p>A
        <code>comparisonOperator</code> of <code>GREATER_THAN</code> </p> </li>
        <li> <p>A notification <code>threshold</code> of <code>80</code> </p>
        </li> </ul>
    Subscribers:
      type: array
      description: " A list of subscribers."
      items:
        $ref: "#/components/schemas/Subscriber"
      minItems: 1
      maxItems: 11
    Subscriber:
      type: object
      required:
        - SubscriptionType
        - Address
      properties:
        SubscriptionType:
          $ref: "#/components/schemas/SubscriptionType"
        Address:
          $ref: "#/components/schemas/SubscriberAddress"
      description: <p>The subscriber to a budget notification. The subscriber consists of a
        subscription type and either an Amazon SNS topic or an email
        address.</p> <p>For example, an email subscriber would have the
        following parameters:</p> <ul> <li> <p>A <code>subscriptionType</code>
        of <code>EMAIL</code> </p> </li> <li> <p>An <code>address</code> of
        <code>example@example.com</code> </p> </li> </ul>
    MaxResults:
      type: integer
      description: " An integer that represents how many entries a paginated response
        contains. The maximum is 100."
      minimum: 1
      maximum: 100
    GenericString:
      type: string
      pattern: .*
      description: " A generic string."
      minLength: 0
      maxLength: 2147483647
    Notifications:
      type: array
      description: " A list of notifications."
      items:
        $ref: "#/components/schemas/Notification"
    NotificationType:
      type: string
      enum:
        - ACTUAL
        - FORECASTED
      description: " The type of a notification. It must be ACTUAL or FORECASTED."
    NotificationThreshold:
      type: number
      description: " The threshold of a notification. It must be a number between 0 and
        1,000,000,000."
      format: double
      minimum: 0
      maximum: 1000000000
    ThresholdType:
      type: string
      enum:
        - PERCENTAGE
        - ABSOLUTE_VALUE
      description: " The type of threshold for a notification. It can be PERCENTAGE or
        ABSOLUTE_VALUE."
    NotificationState:
      type: string
      enum:
        - OK
        - ALARM
    NotificationWithSubscribers:
      type: object
      required:
        - Notification
        - Subscribers
      properties:
        Notification:
          $ref: "#/components/schemas/Notification"
        Subscribers:
          $ref: "#/components/schemas/Subscribers"
      description: A notification with subscribers. A notification can have one SNS
        subscriber and up to 10 email subscribers, for a total of 11
        subscribers.
    NumericValue:
      type: string
      pattern: ([0-9]*\.)?[0-9]+
      description: " A string that represents a numeric value."
      minLength: 1
      maxLength: 2147483647
    UnitValue:
      type: string
      pattern: .*
      description: " A string that represents the spend unit of a budget. It can't be null
        or empty."
      minLength: 1
      maxLength: 2147483647
    SubscriptionType:
      type: string
      enum:
        - SNS
        - EMAIL
      description: " The subscription type of the subscriber. It can be SMS or EMAIL."
    SubscriberAddress:
      type: string
      pattern: \(\?s\).*
      description: " A string that contains an email address or SNS topic for the
        subscriber's address."
      minLength: 1
      maxLength: 2147483647
      format: password
