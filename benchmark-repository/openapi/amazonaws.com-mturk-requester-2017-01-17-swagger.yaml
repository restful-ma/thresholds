openapi: 3.0.0
info:
  version: 2017-01-17
  x-release: v4
  title: Amazon Mechanical Turk
  description: <fullname>Amazon Mechanical Turk API Reference</fullname>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: mturk-requester
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mturk-requester-2017-01-17.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/mturk-requester/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=MTurkRequesterServiceV20170117.AcceptQualificationRequest:
    post:
      operationId: AcceptQualificationRequest
      description: <p> The <code>AcceptQualificationRequest</code> operation approves a
        Worker's request for a Qualification. </p> <p> Only the owner of the
        Qualification type can grant a Qualification request for that type. </p>
        <p> A successful request for the <code>AcceptQualificationRequest</code>
        operation returns with no errors and an empty body. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcceptQualificationRequestResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.AcceptQualificationRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcceptQualificationRequestRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.ApproveAssignment:
    post:
      operationId: ApproveAssignment
      description: <p> The <code>ApproveAssignment</code> operation approves the results of
        a completed assignment. </p> <p> Approving an assignment initiates two
        payments from the Requester's Amazon.com account </p> <ul> <li> <p> The
        Worker who submitted the results is paid the reward specified in the
        HIT. </p> </li> <li> <p> Amazon Mechanical Turk fees are debited. </p>
        </li> </ul> <p> If the Requester's account does not have adequate funds
        for these payments, the call to ApproveAssignment returns an exception,
        and the approval is not processed. You can include an optional feedback
        message with the approval, which the Worker can see in the Status
        section of the web site. </p> <p> You can also call this operation for
        assignments that were previous rejected and approve them by explicitly
        overriding the previous rejection. This only works on rejected
        assignments that were submitted within the previous 30 days and only if
        the assignment's related HIT has not been deleted. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApproveAssignmentResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.ApproveAssignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApproveAssignmentRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.AssociateQualificationWithWorker:
    post:
      operationId: AssociateQualificationWithWorker
      description: "<p> The <code>AssociateQualificationWithWorker</code> operation gives a
        Worker a Qualification. <code>AssociateQualificationWithWorker</code>
        does not require that the Worker submit a Qualification request. It
        gives the Qualification directly to the Worker. </p> <p> You can only
        assign a Qualification of a Qualification type that you created (using
        the <code>CreateQualificationType</code> operation). </p> <note> <p>
        Note: <code>AssociateQualificationWithWorker</code> does not affect any
        pending Qualification requests for the Qualification by the Worker. If
        you assign a Qualification to a Worker, then later grant a Qualification
        request made by the Worker, the granting of the request may modify the
        Qualification score. To resolve a pending Qualification request without
        affecting the Qualification the Worker already has, reject the request
        with the <code>RejectQualificationRequest</code> operation. </p>
        </note>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateQualificationWithWorkerResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.AssociateQualificationWithWorker
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateQualificationWithWorkerRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.CreateAdditionalAssignmentsForHIT:
    post:
      operationId: CreateAdditionalAssignmentsForHIT
      description: <p> The <code>CreateAdditionalAssignmentsForHIT</code> operation
        increases the maximum number of assignments of an existing HIT. </p> <p>
        To extend the maximum number of assignments, specify the number of
        additional assignments.</p> <note> <ul> <li> <p>HITs created with fewer
        than 10 assignments cannot be extended to have 10 or more assignments.
        Attempting to add assignments in a way that brings the total number of
        assignments for a HIT from fewer than 10 assignments to 10 or more
        assignments will result in an
        <code>AWS.MechanicalTurk.InvalidMaximumAssignmentsIncrease</code>
        exception.</p> </li> <li> <p>HITs that were created before July 22, 2015
        cannot be extended. Attempting to extend HITs that were created before
        July 22, 2015 will result in an
        <code>AWS.MechanicalTurk.HITTooOldForExtension</code> exception. </p>
        </li> </ul> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAdditionalAssignmentsForHITRespon\
                  se"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.CreateAdditionalAssignmentsForHIT
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAdditionalAssignmentsForHITRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.CreateHIT:
    post:
      operationId: CreateHIT
      description: '<p>The <code>CreateHIT</code> operation creates a new Human
        Intelligence Task (HIT). The new HIT is made available for Workers to
        find and accept on the Amazon Mechanical Turk website. </p> <p> This
        operation allows you to specify a new HIT by passing in values for the
        properties of the HIT, such as its title, reward amount and number of
        assignments. When you pass these values to <code>CreateHIT</code>, a new
        HIT is created for you, with a new <code>HITTypeID</code>. The HITTypeID
        can be used to create additional HITs in the future without needing to
        specify common parameters such as the title, description and reward
        amount each time.</p> <p> An alternative way to create HITs is to first
        generate a HITTypeID using the <code>CreateHITType</code> operation and
        then call the <code>CreateHITWithHITType</code> operation. This is the
        recommended best practice for Requesters who are creating large numbers
        of HITs. </p> <p>CreateHIT also supports several ways to provide
        question data: by providing a value for the <code>Question</code>
        parameter that fully specifies the contents of the HIT, or by providing
        a <code>HitLayoutId</code> and associated
        <code>HitLayoutParameters</code>. </p> <note> <p> If a HIT is created
        with 10 or more maximum assignments, there is an additional fee. For
        more information, see <a
        href="https://requester.mturk.com/pricing">Amazon Mechanical Turk
        Pricing</a>.</p> </note>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateHITResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.CreateHIT
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateHITRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.CreateHITType:
    post:
      operationId: CreateHITType
      description: " The <code>CreateHITType</code> operation creates a new HIT type. This
        operation allows you to define a standard set of HIT properties to use
        when creating HITs. If you register a HIT type with values that match an
        existing HIT type, the HIT type ID of the existing type will be
        returned. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateHITTypeResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.CreateHITType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateHITTypeRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.CreateHITWithHITType:
    post:
      operationId: CreateHITWithHITType
      description: '<p> The <code>CreateHITWithHITType</code> operation creates a new Human
        Intelligence Task (HIT) using an existing HITTypeID generated by the
        <code>CreateHITType</code> operation. </p> <p> This is an alternative
        way to create HITs from the <code>CreateHIT</code> operation. This is
        the recommended best practice for Requesters who are creating large
        numbers of HITs. </p> <p>CreateHITWithHITType also supports several ways
        to provide question data: by providing a value for the
        <code>Question</code> parameter that fully specifies the contents of the
        HIT, or by providing a <code>HitLayoutId</code> and associated
        <code>HitLayoutParameters</code>. </p> <note> <p> If a HIT is created
        with 10 or more maximum assignments, there is an additional fee. For
        more information, see <a
        href="https://requester.mturk.com/pricing">Amazon Mechanical Turk
        Pricing</a>. </p> </note>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateHITWithHITTypeResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.CreateHITWithHITType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateHITWithHITTypeRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.CreateQualificationType:
    post:
      operationId: CreateQualificationType
      description: " The <code>CreateQualificationType</code> operation creates a new
        Qualification type, which is represented by a
        <code>QualificationType</code> data structure. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateQualificationTypeResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.CreateQualificationType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateQualificationTypeRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.CreateWorkerBlock:
    post:
      operationId: CreateWorkerBlock
      description: The <code>CreateWorkerBlock</code> operation allows you to prevent a
        Worker from working on your HITs. For example, you can block a Worker
        who is producing poor quality work. You can block up to 100,000 Workers.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkerBlockResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.CreateWorkerBlock
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWorkerBlockRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.DeleteHIT:
    post:
      operationId: DeleteHIT
      description: <p> The <code>DeleteHIT</code> operation is used to delete HIT that is
        no longer needed. Only the Requester who created the HIT can delete it.
        </p> <p> You can only dispose of HITs that are in the
        <code>Reviewable</code> state, with all of their submitted assignments
        already either approved or rejected. If you call the DeleteHIT operation
        on a HIT that is not in the <code>Reviewable</code> state (for example,
        that has not expired, or still has active assignments), or on a HIT that
        is Reviewable but without all of its submitted assignments already
        approved or rejected, the service will return an error. </p> <note> <ul>
        <li> <p> HITs are automatically disposed of after 120 days. </p> </li>
        <li> <p> After you dispose of a HIT, you can no longer approve the HIT's
        rejected assignments. </p> </li> <li> <p> Disposed HITs are not returned
        in results for the ListHITs operation. </p> </li> <li> <p> Disposing
        HITs can improve the performance of operations such as
        ListReviewableHITs and ListHITs. </p> </li> </ul> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteHITResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.DeleteHIT
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteHITRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.DeleteQualificationType:
    post:
      operationId: DeleteQualificationType
      description: <p> The <code>DeleteQualificationType</code> deletes a Qualification
        type and deletes any HIT types that are associated with the
        Qualification type. </p> <p>This operation does not revoke
        Qualifications already assigned to Workers because the Qualifications
        might be needed for active HITs. If there are any pending requests for
        the Qualification type, Amazon Mechanical Turk rejects those requests.
        After you delete a Qualification type, you can no longer use it to
        create HITs or HIT types.</p> <note> <p>DeleteQualificationType must
        wait for all the HITs that use the deleted Qualification type to be
        deleted before completing. It may take up to 48 hours before
        DeleteQualificationType completes and the unique name of the
        Qualification type is available for reuse with
        CreateQualificationType.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteQualificationTypeResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.DeleteQualificationType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteQualificationTypeRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.DeleteWorkerBlock:
    post:
      operationId: DeleteWorkerBlock
      description: The <code>DeleteWorkerBlock</code> operation allows you to reinstate a
        blocked Worker to work on your HITs. This operation reverses the effects
        of the CreateWorkerBlock operation. You need the Worker ID to use this
        operation. If the Worker ID is missing or invalid, this operation fails
        and returns the message “WorkerId is invalid.” If the specified Worker
        is not blocked, this operation returns successfully.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteWorkerBlockResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.DeleteWorkerBlock
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteWorkerBlockRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.DisassociateQualificationFromWorker:
    post:
      operationId: DisassociateQualificationFromWorker
      description: <p> The <code>DisassociateQualificationFromWorker</code> revokes a
        previously granted Qualification from a user. </p> <p> You can provide a
        text message explaining why the Qualification was revoked. The user who
        had the Qualification can see this message. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateQualificationFromWorkerResp\
                  onse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.DisassociateQualificationFromWorker
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateQualificationFromWorkerRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.GetAccountBalance:
    post:
      operationId: GetAccountBalance
      description: The <code>GetAccountBalance</code> operation retrieves the amount of
        money in your Amazon Mechanical Turk account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAccountBalanceResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.GetAccountBalance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetAccountBalanceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.GetAssignment:
    post:
      operationId: GetAssignment
      description: " The <code>GetAssignment</code> operation retrieves the details of the
        specified Assignment. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAssignmentResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.GetAssignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetAssignmentRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.GetFileUploadURL:
    post:
      operationId: GetFileUploadURL
      description: " The <code>GetFileUploadURL</code> operation generates and returns a
        temporary URL. You use the temporary URL to retrieve a file uploaded by
        a Worker as an answer to a FileUploadAnswer question for a HIT. The
        temporary URL is generated the instant the GetFileUploadURL operation is
        called, and is valid for 60 seconds. You can get a temporary file upload
        URL any time until the HIT is disposed. After the HIT is disposed, any
        uploaded files are deleted, and cannot be retrieved. Pending Deprecation
        on December 12, 2017. The Answer Specification structure will no longer
        support the <code>FileUploadAnswer</code> element to be used for the
        QuestionForm data structure. Instead, we recommend that Requesters who
        want to create HITs asking Workers to upload files to use Amazon S3. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetFileUploadURLResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.GetFileUploadURL
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetFileUploadURLRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.GetHIT:
    post:
      operationId: GetHIT
      description: " The <code>GetHIT</code> operation retrieves the details of the
        specified HIT. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetHITResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.GetHIT
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetHITRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.GetQualificationScore:
    post:
      operationId: GetQualificationScore
      description: <p> The <code>GetQualificationScore</code> operation returns the value
        of a Worker's Qualification for a given Qualification type. </p> <p> To
        get a Worker's Qualification, you must know the Worker's ID. The
        Worker's ID is included in the assignment data returned by the
        <code>ListAssignmentsForHIT</code> operation. </p> <p>Only the owner of
        a Qualification type can query the value of a Worker's Qualification of
        that type.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetQualificationScoreResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.GetQualificationScore
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetQualificationScoreRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.GetQualificationType:
    post:
      operationId: GetQualificationType
      description: " The <code>GetQualificationType</code>operation retrieves information
        about a Qualification type using its ID. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetQualificationTypeResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.GetQualificationType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetQualificationTypeRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.ListAssignmentsForHIT:
    post:
      operationId: ListAssignmentsForHIT
      description: <p> The <code>ListAssignmentsForHIT</code> operation retrieves completed
        assignments for a HIT. You can use this operation to retrieve the
        results for a HIT. </p> <p> You can get assignments for a HIT at any
        time, even if the HIT is not yet Reviewable. If a HIT requested multiple
        assignments, and has received some results but has not yet become
        Reviewable, you can still retrieve the partial results with this
        operation. </p> <p> Use the AssignmentStatus parameter to control which
        set of assignments for a HIT are returned. The ListAssignmentsForHIT
        operation can return submitted assignments awaiting approval, or it can
        return assignments that have already been approved or rejected. You can
        set AssignmentStatus=Approved,Rejected to get assignments that have
        already been approved and rejected together in one result set. </p> <p>
        Only the Requester who created the HIT can retrieve the assignments for
        that HIT. </p> <p> Results are sorted and divided into numbered pages
        and the operation returns a single page of results. You can use the
        parameters of the operation to control sorting and pagination. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAssignmentsForHITResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.ListAssignmentsForHIT
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListAssignmentsForHITRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.ListBonusPayments:
    post:
      operationId: ListBonusPayments
      description: " The <code>ListBonusPayments</code> operation retrieves the amounts of
        bonuses you have paid to Workers for a given HIT or assignment. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListBonusPaymentsResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.ListBonusPayments
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListBonusPaymentsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.ListHITs:
    post:
      operationId: ListHITs
      description: " The <code>ListHITs</code> operation returns all of a Requester's HITs.
        The operation returns HITs of any status, except for HITs that have been
        deleted of with the DeleteHIT operation or that have been auto-deleted.
        "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListHITsResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.ListHITs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListHITsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.ListHITsForQualificationType:
    post:
      operationId: ListHITsForQualificationType
      description: " The <code>ListHITsForQualificationType</code> operation returns the
        HITs that use the given Qualification type for a Qualification
        requirement. The operation returns HITs of any status, except for HITs
        that have been deleted with the <code>DeleteHIT</code> operation or that
        have been auto-deleted. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListHITsForQualificationTypeResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.ListHITsForQualificationType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListHITsForQualificationTypeRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.ListQualificationRequests:
    post:
      operationId: ListQualificationRequests
      description: " The <code>ListQualificationRequests</code> operation retrieves
        requests for Qualifications of a particular Qualification type. The
        owner of the Qualification type calls this operation to poll for pending
        requests, and accepts them using the AcceptQualification operation. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListQualificationRequestsResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.ListQualificationRequests
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListQualificationRequestsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.ListQualificationTypes:
    post:
      operationId: ListQualificationTypes
      description: " The <code>ListQualificationTypes</code> operation returns a list of
        Qualification types, filtered by an optional search term. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListQualificationTypesResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.ListQualificationTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListQualificationTypesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.ListReviewPolicyResultsForHIT:
    post:
      operationId: ListReviewPolicyResultsForHIT
      description: " The <code>ListReviewPolicyResultsForHIT</code> operation retrieves the
        computed results and the actions taken in the course of executing your
        Review Policies for a given HIT. For information about how to specify
        Review Policies when you call CreateHIT, see Review Policies. The
        ListReviewPolicyResultsForHIT operation can return results for both
        Assignment-level and HIT-level review results. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListReviewPolicyResultsForHITResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.ListReviewPolicyResultsForHIT
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListReviewPolicyResultsForHITRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.ListReviewableHITs:
    post:
      operationId: ListReviewableHITs
      description: " The <code>ListReviewableHITs</code> operation retrieves the HITs with
        Status equal to Reviewable or Status equal to Reviewing that belong to
        the Requester calling the operation. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListReviewableHITsResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.ListReviewableHITs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListReviewableHITsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.ListWorkerBlocks:
    post:
      operationId: ListWorkerBlocks
      description: The <code>ListWorkersBlocks</code> operation retrieves a list of Workers
        who are blocked from working on your HITs.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkerBlocksResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.ListWorkerBlocks
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListWorkerBlocksRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.ListWorkersWithQualificationType:
    post:
      operationId: ListWorkersWithQualificationType
      description: " The <code>ListWorkersWithQualificationType</code> operation returns
        all of the Workers that have been associated with a given Qualification
        type. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkersWithQualificationTypeResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.ListWorkersWithQualificationType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListWorkersWithQualificationTypeRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.NotifyWorkers:
    post:
      operationId: NotifyWorkers
      description: " The <code>NotifyWorkers</code> operation sends an email to one or more
        Workers that you specify with the Worker ID. You can specify up to 100
        Worker IDs to send the same message with a single call to the
        NotifyWorkers operation. The NotifyWorkers operation will send a
        notification email to a Worker only if you have previously approved or
        rejected work from the Worker. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotifyWorkersResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.NotifyWorkers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotifyWorkersRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.RejectAssignment:
    post:
      operationId: RejectAssignment
      description: <p> The <code>RejectAssignment</code> operation rejects the results of a
        completed assignment. </p> <p> You can include an optional feedback
        message with the rejection, which the Worker can see in the Status
        section of the web site. When you include a feedback message with the
        rejection, it helps the Worker understand why the assignment was
        rejected, and can improve the quality of the results the Worker submits
        in the future. </p> <p> Only the Requester who created the HIT can
        reject an assignment for the HIT. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RejectAssignmentResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.RejectAssignment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RejectAssignmentRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.RejectQualificationRequest:
    post:
      operationId: RejectQualificationRequest
      description: <p> The <code>RejectQualificationRequest</code> operation rejects a
        user's request for a Qualification. </p> <p> You can provide a text
        message explaining why the request was rejected. The Worker who made the
        request can see this message.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RejectQualificationRequestResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.RejectQualificationRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RejectQualificationRequestRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.SendBonus:
    post:
      operationId: SendBonus
      description: " The <code>SendBonus</code> operation issues a payment of money from
        your account to a Worker. This payment happens separately from the
        reward you pay to the Worker when you approve the Worker's assignment.
        The SendBonus operation requires the Worker's ID and the assignment ID
        as parameters to initiate payment of the bonus. You must include a
        message that explains the reason for the bonus payment, as the Worker
        may not be expecting the payment. Amazon Mechanical Turk collects a fee
        for bonus payments, similar to the HIT listing fee. This operation fails
        if your account does not have enough funds to pay for both the bonus and
        the fees. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendBonusResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.SendBonus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendBonusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.SendTestEventNotification:
    post:
      operationId: SendTestEventNotification
      description: " The <code>SendTestEventNotification</code> operation causes Amazon
        Mechanical Turk to send a notification message as if a HIT event
        occurred, according to the provided notification specification. This
        allows you to test notifications without setting up notifications for a
        real HIT type and trying to trigger them using the website. When you
        call this operation, the service attempts to send the test notification
        immediately. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendTestEventNotificationResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.SendTestEventNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendTestEventNotificationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.UpdateExpirationForHIT:
    post:
      operationId: UpdateExpirationForHIT
      description: " The <code>UpdateExpirationForHIT</code> operation allows you update
        the expiration time of a HIT. If you update it to a time in the past,
        the HIT will be immediately expired. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateExpirationForHITResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.UpdateExpirationForHIT
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateExpirationForHITRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.UpdateHITReviewStatus:
    post:
      operationId: UpdateHITReviewStatus
      description: " The <code>UpdateHITReviewStatus</code> operation updates the status of
        a HIT. If the status is Reviewable, this operation can update the status
        to Reviewing, or it can revert a Reviewing HIT back to the Reviewable
        status. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateHITReviewStatusResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.UpdateHITReviewStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateHITReviewStatusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.UpdateHITTypeOfHIT:
    post:
      operationId: UpdateHITTypeOfHIT
      description: " The <code>UpdateHITTypeOfHIT</code> operation allows you to change the
        HITType properties of a HIT. This operation disassociates the HIT from
        its old HITType properties and associates it with the new HITType
        properties. The HIT takes on the properties of the new HITType in place
        of the old ones. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateHITTypeOfHITResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.UpdateHITTypeOfHIT
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateHITTypeOfHITRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.UpdateNotificationSettings:
    post:
      operationId: UpdateNotificationSettings
      description: " The <code>UpdateNotificationSettings</code> operation creates,
        updates, disables or re-enables notifications for a HIT type. If you
        call the UpdateNotificationSettings operation for a HIT type that
        already has a notification specification, the operation replaces the old
        specification with a new one. You can call the
        UpdateNotificationSettings operation to enable or disable notifications
        for the HIT type, without having to modify the notification
        specification itself by providing updates to the Active status without
        specifying a new notification specification. To change the Active status
        of a HIT type's notifications, the HIT type must already have a
        notification specification, or one must be provided in the same call to
        <code>UpdateNotificationSettings</code>. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateNotificationSettingsResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.UpdateNotificationSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateNotificationSettingsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=MTurkRequesterServiceV20170117.UpdateQualificationType:
    post:
      operationId: UpdateQualificationType
      description: <p> The <code>UpdateQualificationType</code> operation modifies the
        attributes of an existing Qualification type, which is represented by a
        QualificationType data structure. Only the owner of a Qualification type
        can modify its attributes. </p> <p> Most attributes of a Qualification
        type can be changed after the type has been created. However, the Name
        and Keywords fields cannot be modified. The RetryDelayInSeconds
        parameter can be modified or added to change the delay or to enable
        retries, but RetryDelayInSeconds cannot be used to disable retries. </p>
        <p> You can use this operation to update the test for a Qualification
        type. The test is updated based on the values specified for the Test,
        TestDurationInSeconds and AnswerKey parameters. All three parameters
        specify the updated test. If you are updating the test for a type, you
        must specify the Test and TestDurationInSeconds parameters. The
        AnswerKey parameter is optional; omitting it specifies that the updated
        test does not have an answer key. </p> <p> If you omit the Test
        parameter, the test for the Qualification type is unchanged. There is no
        way to remove a test from a Qualification type that has one. If the type
        already has a test, you cannot update it to be AutoGranted. If the
        Qualification type does not have a test and one is provided by an
        update, the type will henceforth have a test. </p> <p> If you want to
        update the test duration or answer key for an existing test without
        changing the questions, you must specify a Test parameter with the
        original questions, along with the updated values. </p> <p> If you
        provide an updated Test but no AnswerKey, the new test will not have an
        answer key. Requests for such Qualifications must be granted manually.
        </p> <p> You can also update the AutoGranted and AutoGrantedValue
        attributes of the Qualification type.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateQualificationTypeResponse"
        "480":
          description: ServiceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFault"
        "481":
          description: RequestError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - MTurkRequesterServiceV20170117.UpdateQualificationType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateQualificationTypeRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://mturk-requester.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon MTurk multi-region endpoint
  - url: https://mturk-requester.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon MTurk multi-region endpoint
  - url: http://mturk-requester.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon MTurk endpoint for China (Beijing) and China (Ningxia)
  - url: https://mturk-requester.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon MTurk endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AcceptQualificationRequestResponse:
      type: object
      properties: {}
    AcceptQualificationRequestRequest:
      type: object
      required:
        - QualificationRequestId
      properties:
        QualificationRequestId:
          $ref: "#/components/schemas/String"
        IntegerValue:
          $ref: "#/components/schemas/Integer"
    ServiceFault:
      type: object
      properties:
        Message:
          $ref: "#/components/schemas/ExceptionMessage"
        TurkErrorCode:
          $ref: "#/components/schemas/TurkErrorCode"
      description: Amazon Mechanical Turk is temporarily unable to process your request.
        Try your call again.
    RequestError:
      type: object
      properties:
        Message:
          $ref: "#/components/schemas/ExceptionMessage"
        TurkErrorCode:
          $ref: "#/components/schemas/TurkErrorCode"
      description: Your request is invalid.
    ApproveAssignmentResponse:
      type: object
      properties: {}
    ApproveAssignmentRequest:
      type: object
      required:
        - AssignmentId
      properties:
        AssignmentId:
          $ref: "#/components/schemas/EntityId"
        RequesterFeedback:
          $ref: "#/components/schemas/String"
        OverrideRejection:
          $ref: "#/components/schemas/Boolean"
    AssociateQualificationWithWorkerResponse:
      type: object
      properties: {}
    AssociateQualificationWithWorkerRequest:
      type: object
      required:
        - QualificationTypeId
        - WorkerId
      properties:
        QualificationTypeId:
          $ref: "#/components/schemas/EntityId"
        WorkerId:
          $ref: "#/components/schemas/CustomerId"
        IntegerValue:
          $ref: "#/components/schemas/Integer"
        SendNotification:
          $ref: "#/components/schemas/Boolean"
    CreateAdditionalAssignmentsForHITResponse:
      type: object
      properties: {}
    CreateAdditionalAssignmentsForHITRequest:
      type: object
      required:
        - HITId
        - NumberOfAdditionalAssignments
      properties:
        HITId:
          $ref: "#/components/schemas/EntityId"
        NumberOfAdditionalAssignments:
          $ref: "#/components/schemas/Integer"
        UniqueRequestToken:
          $ref: "#/components/schemas/IdempotencyToken"
    CreateHITResponse:
      type: object
      properties:
        HIT:
          $ref: "#/components/schemas/HIT"
    CreateHITRequest:
      type: object
      required:
        - LifetimeInSeconds
        - AssignmentDurationInSeconds
        - Reward
        - Title
        - Description
      properties:
        MaxAssignments:
          $ref: "#/components/schemas/Integer"
        AutoApprovalDelayInSeconds:
          $ref: "#/components/schemas/Long"
        LifetimeInSeconds:
          $ref: "#/components/schemas/Long"
        AssignmentDurationInSeconds:
          $ref: "#/components/schemas/Long"
        Reward:
          $ref: "#/components/schemas/CurrencyAmount"
        Title:
          $ref: "#/components/schemas/String"
        Keywords:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        Question:
          $ref: "#/components/schemas/String"
        RequesterAnnotation:
          $ref: "#/components/schemas/String"
        QualificationRequirements:
          $ref: "#/components/schemas/QualificationRequirementList"
        UniqueRequestToken:
          $ref: "#/components/schemas/IdempotencyToken"
        AssignmentReviewPolicy:
          $ref: "#/components/schemas/ReviewPolicy"
        HITReviewPolicy:
          $ref: "#/components/schemas/ReviewPolicy"
        HITLayoutId:
          $ref: "#/components/schemas/EntityId"
        HITLayoutParameters:
          $ref: "#/components/schemas/HITLayoutParameterList"
    CreateHITTypeResponse:
      type: object
      properties:
        HITTypeId:
          $ref: "#/components/schemas/EntityId"
    CreateHITTypeRequest:
      type: object
      required:
        - AssignmentDurationInSeconds
        - Reward
        - Title
        - Description
      properties:
        AutoApprovalDelayInSeconds:
          $ref: "#/components/schemas/Long"
        AssignmentDurationInSeconds:
          $ref: "#/components/schemas/Long"
        Reward:
          $ref: "#/components/schemas/CurrencyAmount"
        Title:
          $ref: "#/components/schemas/String"
        Keywords:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        QualificationRequirements:
          $ref: "#/components/schemas/QualificationRequirementList"
    CreateHITWithHITTypeResponse:
      type: object
      properties:
        HIT:
          $ref: "#/components/schemas/HIT"
    CreateHITWithHITTypeRequest:
      type: object
      required:
        - HITTypeId
        - LifetimeInSeconds
      properties:
        HITTypeId:
          $ref: "#/components/schemas/EntityId"
        MaxAssignments:
          $ref: "#/components/schemas/Integer"
        LifetimeInSeconds:
          $ref: "#/components/schemas/Long"
        Question:
          $ref: "#/components/schemas/String"
        RequesterAnnotation:
          $ref: "#/components/schemas/String"
        UniqueRequestToken:
          $ref: "#/components/schemas/IdempotencyToken"
        AssignmentReviewPolicy:
          $ref: "#/components/schemas/ReviewPolicy"
        HITReviewPolicy:
          $ref: "#/components/schemas/ReviewPolicy"
        HITLayoutId:
          $ref: "#/components/schemas/EntityId"
        HITLayoutParameters:
          $ref: "#/components/schemas/HITLayoutParameterList"
    CreateQualificationTypeResponse:
      type: object
      properties:
        QualificationType:
          $ref: "#/components/schemas/QualificationType"
    CreateQualificationTypeRequest:
      type: object
      required:
        - Name
        - Description
        - QualificationTypeStatus
      properties:
        Name:
          $ref: "#/components/schemas/String"
        Keywords:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        QualificationTypeStatus:
          $ref: "#/components/schemas/QualificationTypeStatus"
        RetryDelayInSeconds:
          $ref: "#/components/schemas/Long"
        Test:
          $ref: "#/components/schemas/String"
        AnswerKey:
          $ref: "#/components/schemas/String"
        TestDurationInSeconds:
          $ref: "#/components/schemas/Long"
        AutoGranted:
          $ref: "#/components/schemas/Boolean"
        AutoGrantedValue:
          $ref: "#/components/schemas/Integer"
    CreateWorkerBlockResponse:
      type: object
      properties: {}
    CreateWorkerBlockRequest:
      type: object
      required:
        - WorkerId
        - Reason
      properties:
        WorkerId:
          $ref: "#/components/schemas/CustomerId"
        Reason:
          $ref: "#/components/schemas/String"
    DeleteHITResponse:
      type: object
      properties: {}
    DeleteHITRequest:
      type: object
      required:
        - HITId
      properties:
        HITId:
          $ref: "#/components/schemas/EntityId"
    DeleteQualificationTypeResponse:
      type: object
      properties: {}
    DeleteQualificationTypeRequest:
      type: object
      required:
        - QualificationTypeId
      properties:
        QualificationTypeId:
          $ref: "#/components/schemas/EntityId"
    DeleteWorkerBlockResponse:
      type: object
      properties: {}
    DeleteWorkerBlockRequest:
      type: object
      required:
        - WorkerId
      properties:
        WorkerId:
          $ref: "#/components/schemas/CustomerId"
        Reason:
          $ref: "#/components/schemas/String"
    DisassociateQualificationFromWorkerResponse:
      type: object
      properties: {}
    DisassociateQualificationFromWorkerRequest:
      type: object
      required:
        - WorkerId
        - QualificationTypeId
      properties:
        WorkerId:
          $ref: "#/components/schemas/CustomerId"
        QualificationTypeId:
          $ref: "#/components/schemas/EntityId"
        Reason:
          $ref: "#/components/schemas/String"
    GetAccountBalanceResponse:
      type: object
      properties:
        AvailableBalance:
          $ref: "#/components/schemas/CurrencyAmount"
        OnHoldBalance:
          $ref: "#/components/schemas/CurrencyAmount"
    GetAccountBalanceRequest:
      type: object
      properties: {}
    GetAssignmentResponse:
      type: object
      properties:
        Assignment:
          $ref: "#/components/schemas/Assignment"
        HIT:
          $ref: "#/components/schemas/HIT"
    GetAssignmentRequest:
      type: object
      required:
        - AssignmentId
      properties:
        AssignmentId:
          $ref: "#/components/schemas/EntityId"
    GetFileUploadURLResponse:
      type: object
      properties:
        FileUploadURL:
          $ref: "#/components/schemas/String"
    GetFileUploadURLRequest:
      type: object
      required:
        - AssignmentId
        - QuestionIdentifier
      properties:
        AssignmentId:
          $ref: "#/components/schemas/EntityId"
        QuestionIdentifier:
          $ref: "#/components/schemas/String"
    GetHITResponse:
      type: object
      properties:
        HIT:
          $ref: "#/components/schemas/HIT"
    GetHITRequest:
      type: object
      required:
        - HITId
      properties:
        HITId:
          $ref: "#/components/schemas/EntityId"
    GetQualificationScoreResponse:
      type: object
      properties:
        Qualification:
          $ref: "#/components/schemas/Qualification"
    GetQualificationScoreRequest:
      type: object
      required:
        - QualificationTypeId
        - WorkerId
      properties:
        QualificationTypeId:
          $ref: "#/components/schemas/EntityId"
        WorkerId:
          $ref: "#/components/schemas/CustomerId"
    GetQualificationTypeResponse:
      type: object
      properties:
        QualificationType:
          $ref: "#/components/schemas/QualificationType"
    GetQualificationTypeRequest:
      type: object
      required:
        - QualificationTypeId
      properties:
        QualificationTypeId:
          $ref: "#/components/schemas/EntityId"
    ListAssignmentsForHITResponse:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        NumResults:
          $ref: "#/components/schemas/Integer"
        Assignments:
          $ref: "#/components/schemas/AssignmentList"
    ListAssignmentsForHITRequest:
      type: object
      required:
        - HITId
      properties:
        HITId:
          $ref: "#/components/schemas/EntityId"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        MaxResults:
          $ref: "#/components/schemas/ResultSize"
        AssignmentStatuses:
          $ref: "#/components/schemas/AssignmentStatusList"
    ListBonusPaymentsResponse:
      type: object
      properties:
        NumResults:
          $ref: "#/components/schemas/Integer"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        BonusPayments:
          $ref: "#/components/schemas/BonusPaymentList"
    ListBonusPaymentsRequest:
      type: object
      properties:
        HITId:
          $ref: "#/components/schemas/EntityId"
        AssignmentId:
          $ref: "#/components/schemas/EntityId"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        MaxResults:
          $ref: "#/components/schemas/ResultSize"
    ListHITsResponse:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        NumResults:
          $ref: "#/components/schemas/Integer"
        HITs:
          $ref: "#/components/schemas/HITList"
    ListHITsRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        MaxResults:
          $ref: "#/components/schemas/ResultSize"
    ListHITsForQualificationTypeResponse:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        NumResults:
          $ref: "#/components/schemas/Integer"
        HITs:
          $ref: "#/components/schemas/HITList"
    ListHITsForQualificationTypeRequest:
      type: object
      required:
        - QualificationTypeId
      properties:
        QualificationTypeId:
          $ref: "#/components/schemas/EntityId"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        MaxResults:
          $ref: "#/components/schemas/ResultSize"
    ListQualificationRequestsResponse:
      type: object
      properties:
        NumResults:
          $ref: "#/components/schemas/Integer"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        QualificationRequests:
          $ref: "#/components/schemas/QualificationRequestList"
    ListQualificationRequestsRequest:
      type: object
      properties:
        QualificationTypeId:
          $ref: "#/components/schemas/EntityId"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        MaxResults:
          $ref: "#/components/schemas/ResultSize"
    ListQualificationTypesResponse:
      type: object
      properties:
        NumResults:
          $ref: "#/components/schemas/Integer"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        QualificationTypes:
          $ref: "#/components/schemas/QualificationTypeList"
    ListQualificationTypesRequest:
      type: object
      required:
        - MustBeRequestable
      properties:
        Query:
          $ref: "#/components/schemas/String"
        MustBeRequestable:
          $ref: "#/components/schemas/Boolean"
        MustBeOwnedByCaller:
          $ref: "#/components/schemas/Boolean"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        MaxResults:
          $ref: "#/components/schemas/ResultSize"
    ListReviewPolicyResultsForHITResponse:
      type: object
      properties:
        HITId:
          $ref: "#/components/schemas/EntityId"
        AssignmentReviewPolicy:
          $ref: "#/components/schemas/ReviewPolicy"
        HITReviewPolicy:
          $ref: "#/components/schemas/ReviewPolicy"
        AssignmentReviewReport:
          $ref: "#/components/schemas/ReviewReport"
        HITReviewReport:
          $ref: "#/components/schemas/ReviewReport"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
    ListReviewPolicyResultsForHITRequest:
      type: object
      required:
        - HITId
      properties:
        HITId:
          $ref: "#/components/schemas/EntityId"
        PolicyLevels:
          $ref: "#/components/schemas/ReviewPolicyLevelList"
        RetrieveActions:
          $ref: "#/components/schemas/Boolean"
        RetrieveResults:
          $ref: "#/components/schemas/Boolean"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        MaxResults:
          $ref: "#/components/schemas/ResultSize"
    ListReviewableHITsResponse:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        NumResults:
          $ref: "#/components/schemas/Integer"
        HITs:
          $ref: "#/components/schemas/HITList"
    ListReviewableHITsRequest:
      type: object
      properties:
        HITTypeId:
          $ref: "#/components/schemas/EntityId"
        Status:
          $ref: "#/components/schemas/ReviewableHITStatus"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        MaxResults:
          $ref: "#/components/schemas/ResultSize"
    ListWorkerBlocksResponse:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        NumResults:
          $ref: "#/components/schemas/Integer"
        WorkerBlocks:
          $ref: "#/components/schemas/WorkerBlockList"
    ListWorkerBlocksRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        MaxResults:
          $ref: "#/components/schemas/ResultSize"
    ListWorkersWithQualificationTypeResponse:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        NumResults:
          $ref: "#/components/schemas/Integer"
        Qualifications:
          $ref: "#/components/schemas/QualificationList"
    ListWorkersWithQualificationTypeRequest:
      type: object
      required:
        - QualificationTypeId
      properties:
        QualificationTypeId:
          $ref: "#/components/schemas/EntityId"
        Status:
          $ref: "#/components/schemas/QualificationStatus"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        MaxResults:
          $ref: "#/components/schemas/ResultSize"
    NotifyWorkersResponse:
      type: object
      properties:
        NotifyWorkersFailureStatuses:
          $ref: "#/components/schemas/NotifyWorkersFailureStatusList"
    NotifyWorkersRequest:
      type: object
      required:
        - Subject
        - MessageText
        - WorkerIds
      properties:
        Subject:
          $ref: "#/components/schemas/String"
        MessageText:
          $ref: "#/components/schemas/String"
        WorkerIds:
          $ref: "#/components/schemas/CustomerIdList"
    RejectAssignmentResponse:
      type: object
      properties: {}
    RejectAssignmentRequest:
      type: object
      required:
        - AssignmentId
        - RequesterFeedback
      properties:
        AssignmentId:
          $ref: "#/components/schemas/EntityId"
        RequesterFeedback:
          $ref: "#/components/schemas/String"
    RejectQualificationRequestResponse:
      type: object
      properties: {}
    RejectQualificationRequestRequest:
      type: object
      required:
        - QualificationRequestId
      properties:
        QualificationRequestId:
          $ref: "#/components/schemas/String"
        Reason:
          $ref: "#/components/schemas/String"
    SendBonusResponse:
      type: object
      properties: {}
    SendBonusRequest:
      type: object
      required:
        - WorkerId
        - BonusAmount
        - AssignmentId
        - Reason
      properties:
        WorkerId:
          $ref: "#/components/schemas/CustomerId"
        BonusAmount:
          $ref: "#/components/schemas/CurrencyAmount"
        AssignmentId:
          $ref: "#/components/schemas/EntityId"
        Reason:
          $ref: "#/components/schemas/String"
        UniqueRequestToken:
          $ref: "#/components/schemas/IdempotencyToken"
    SendTestEventNotificationResponse:
      type: object
      properties: {}
    SendTestEventNotificationRequest:
      type: object
      required:
        - Notification
        - TestEventType
      properties:
        Notification:
          $ref: "#/components/schemas/NotificationSpecification"
        TestEventType:
          $ref: "#/components/schemas/EventType"
    UpdateExpirationForHITResponse:
      type: object
      properties: {}
    UpdateExpirationForHITRequest:
      type: object
      required:
        - HITId
        - ExpireAt
      properties:
        HITId:
          $ref: "#/components/schemas/EntityId"
        ExpireAt:
          $ref: "#/components/schemas/Timestamp"
    UpdateHITReviewStatusResponse:
      type: object
      properties: {}
    UpdateHITReviewStatusRequest:
      type: object
      required:
        - HITId
      properties:
        HITId:
          $ref: "#/components/schemas/EntityId"
        Revert:
          $ref: "#/components/schemas/Boolean"
    UpdateHITTypeOfHITResponse:
      type: object
      properties: {}
    UpdateHITTypeOfHITRequest:
      type: object
      required:
        - HITId
        - HITTypeId
      properties:
        HITId:
          $ref: "#/components/schemas/EntityId"
        HITTypeId:
          $ref: "#/components/schemas/EntityId"
    UpdateNotificationSettingsResponse:
      type: object
      properties: {}
    UpdateNotificationSettingsRequest:
      type: object
      required:
        - HITTypeId
      properties:
        HITTypeId:
          $ref: "#/components/schemas/EntityId"
        Notification:
          $ref: "#/components/schemas/NotificationSpecification"
        Active:
          $ref: "#/components/schemas/Boolean"
    UpdateQualificationTypeResponse:
      type: object
      properties:
        QualificationType:
          $ref: "#/components/schemas/QualificationType"
    UpdateQualificationTypeRequest:
      type: object
      required:
        - QualificationTypeId
      properties:
        QualificationTypeId:
          $ref: "#/components/schemas/EntityId"
        Description:
          $ref: "#/components/schemas/String"
        QualificationTypeStatus:
          $ref: "#/components/schemas/QualificationTypeStatus"
        Test:
          $ref: "#/components/schemas/String"
        AnswerKey:
          $ref: "#/components/schemas/String"
        TestDurationInSeconds:
          $ref: "#/components/schemas/Long"
        RetryDelayInSeconds:
          $ref: "#/components/schemas/Long"
        AutoGranted:
          $ref: "#/components/schemas/Boolean"
        AutoGrantedValue:
          $ref: "#/components/schemas/Integer"
    String:
      type: string
    Integer:
      type: integer
    EntityId:
      type: string
      pattern: ^[A-Z0-9]+$
      minLength: 1
      maxLength: 64
    Boolean:
      type: boolean
    CustomerId:
      type: string
      pattern: ^A[A-Z0-9]+$
      minLength: 1
      maxLength: 64
    AssignmentStatus:
      type: string
      enum:
        - Submitted
        - Approved
        - Rejected
    Timestamp:
      type: string
      format: date-time
    Assignment:
      type: object
      properties:
        AssignmentId:
          $ref: "#/components/schemas/EntityId"
        WorkerId:
          $ref: "#/components/schemas/CustomerId"
        HITId:
          $ref: "#/components/schemas/EntityId"
        AssignmentStatus:
          $ref: "#/components/schemas/AssignmentStatus"
        AutoApprovalTime:
          $ref: "#/components/schemas/Timestamp"
        AcceptTime:
          $ref: "#/components/schemas/Timestamp"
        SubmitTime:
          $ref: "#/components/schemas/Timestamp"
        ApprovalTime:
          $ref: "#/components/schemas/Timestamp"
        RejectionTime:
          $ref: "#/components/schemas/Timestamp"
        Deadline:
          $ref: "#/components/schemas/Timestamp"
        Answer:
          $ref: "#/components/schemas/String"
        RequesterFeedback:
          $ref: "#/components/schemas/String"
      description: " The Assignment data structure represents a single assignment of a HIT
        to a Worker. The assignment tracks the Worker's efforts to complete the
        HIT, and contains the results for later retrieval. "
    AssignmentList:
      type: array
      items:
        $ref: "#/components/schemas/Assignment"
    AssignmentStatusList:
      type: array
      items:
        $ref: "#/components/schemas/AssignmentStatus"
    CurrencyAmount:
      type: string
      pattern: ^[0-9]+(\.)?[0-9]{0,2}$
      description: A string representing a currency amount.
    BonusPayment:
      type: object
      properties:
        WorkerId:
          $ref: "#/components/schemas/CustomerId"
        BonusAmount:
          $ref: "#/components/schemas/CurrencyAmount"
        AssignmentId:
          $ref: "#/components/schemas/EntityId"
        Reason:
          $ref: "#/components/schemas/String"
        GrantTime:
          $ref: "#/components/schemas/Timestamp"
      description: An object representing a Bonus payment paid to a Worker.
    BonusPaymentList:
      type: array
      items:
        $ref: "#/components/schemas/BonusPayment"
    Comparator:
      type: string
      enum:
        - LessThan
        - LessThanOrEqualTo
        - GreaterThan
        - GreaterThanOrEqualTo
        - EqualTo
        - NotEqualTo
        - Exists
        - DoesNotExist
        - In
        - NotIn
    CountryParameters:
      type: string
      minLength: 2
      maxLength: 2
    IdempotencyToken:
      type: string
      minLength: 1
      maxLength: 64
    Long:
      type: integer
    QualificationRequirementList:
      type: array
      items:
        $ref: "#/components/schemas/QualificationRequirement"
    ReviewPolicy:
      type: object
      required:
        - PolicyName
      properties:
        PolicyName:
          $ref: "#/components/schemas/String"
        Parameters:
          $ref: "#/components/schemas/PolicyParameterList"
      description: " HIT Review Policy data structures represent HIT review policies, which
        you specify when you create a HIT. "
    HITLayoutParameterList:
      type: array
      items:
        $ref: "#/components/schemas/HITLayoutParameter"
    HIT:
      type: object
      properties:
        HITId:
          $ref: "#/components/schemas/EntityId"
        HITTypeId:
          $ref: "#/components/schemas/EntityId"
        HITGroupId:
          $ref: "#/components/schemas/EntityId"
        HITLayoutId:
          $ref: "#/components/schemas/EntityId"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        Title:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        Question:
          $ref: "#/components/schemas/String"
        Keywords:
          $ref: "#/components/schemas/String"
        HITStatus:
          $ref: "#/components/schemas/HITStatus"
        MaxAssignments:
          $ref: "#/components/schemas/Integer"
        Reward:
          $ref: "#/components/schemas/CurrencyAmount"
        AutoApprovalDelayInSeconds:
          $ref: "#/components/schemas/Long"
        Expiration:
          $ref: "#/components/schemas/Timestamp"
        AssignmentDurationInSeconds:
          $ref: "#/components/schemas/Long"
        RequesterAnnotation:
          $ref: "#/components/schemas/String"
        QualificationRequirements:
          $ref: "#/components/schemas/QualificationRequirementList"
        HITReviewStatus:
          $ref: "#/components/schemas/HITReviewStatus"
        NumberOfAssignmentsPending:
          $ref: "#/components/schemas/Integer"
        NumberOfAssignmentsAvailable:
          $ref: "#/components/schemas/Integer"
        NumberOfAssignmentsCompleted:
          $ref: "#/components/schemas/Integer"
      description: " The HIT data structure represents a single HIT, including all the
        information necessary for a Worker to accept and complete the HIT."
    QualificationTypeStatus:
      type: string
      enum:
        - Active
        - Inactive
    QualificationType:
      type: object
      properties:
        QualificationTypeId:
          $ref: "#/components/schemas/EntityId"
        CreationTime:
          $ref: "#/components/schemas/Timestamp"
        Name:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        Keywords:
          $ref: "#/components/schemas/String"
        QualificationTypeStatus:
          $ref: "#/components/schemas/QualificationTypeStatus"
        Test:
          $ref: "#/components/schemas/String"
        TestDurationInSeconds:
          $ref: "#/components/schemas/Long"
        AnswerKey:
          $ref: "#/components/schemas/String"
        RetryDelayInSeconds:
          $ref: "#/components/schemas/Long"
        IsRequestable:
          $ref: "#/components/schemas/Boolean"
        AutoGranted:
          $ref: "#/components/schemas/Boolean"
        AutoGrantedValue:
          $ref: "#/components/schemas/Integer"
      description: " The QualificationType data structure represents a Qualification type,
        a description of a property of a Worker that must match the requirements
        of a HIT for the Worker to be able to accept the HIT. The type also
        describes how a Worker can obtain a Qualification of that type, such as
        through a Qualification test. "
    CustomerIdList:
      type: array
      items:
        $ref: "#/components/schemas/CustomerId"
    EventType:
      type: string
      enum:
        - AssignmentAccepted
        - AssignmentAbandoned
        - AssignmentReturned
        - AssignmentSubmitted
        - AssignmentRejected
        - AssignmentApproved
        - HITCreated
        - HITExpired
        - HITReviewable
        - HITExtended
        - HITDisposed
        - Ping
    EventTypeList:
      type: array
      items:
        $ref: "#/components/schemas/EventType"
    ExceptionMessage:
      type: string
    Qualification:
      type: object
      properties:
        QualificationTypeId:
          $ref: "#/components/schemas/EntityId"
        WorkerId:
          $ref: "#/components/schemas/CustomerId"
        GrantTime:
          $ref: "#/components/schemas/Timestamp"
        IntegerValue:
          $ref: "#/components/schemas/Integer"
        LocaleValue:
          $ref: "#/components/schemas/Locale"
        Status:
          $ref: "#/components/schemas/QualificationStatus"
      description: The Qualification data structure represents a Qualification assigned to
        a user, including the Qualification type and the value (score).
    HITStatus:
      type: string
      enum:
        - Assignable
        - Unassignable
        - Reviewable
        - Reviewing
        - Disposed
    HITReviewStatus:
      type: string
      enum:
        - NotReviewed
        - MarkedForReview
        - ReviewedAppropriate
        - ReviewedInappropriate
    HITAccessActions:
      type: string
      enum:
        - Accept
        - PreviewAndAccept
        - DiscoverPreviewAndAccept
    HITLayoutParameter:
      type: object
      required:
        - Name
        - Value
      properties:
        Name:
          $ref: "#/components/schemas/String"
        Value:
          $ref: "#/components/schemas/String"
      description: " The HITLayoutParameter data structure defines parameter values used
        with a HITLayout. A HITLayout is a reusable Amazon Mechanical Turk
        project template used to provide Human Intelligence Task (HIT) question
        data for CreateHIT. "
    HITList:
      type: array
      items:
        $ref: "#/components/schemas/HIT"
    IntegerList:
      type: array
      items:
        $ref: "#/components/schemas/Integer"
    PaginationToken:
      type: string
      description: "If the previous response was incomplete (because there is more data to
        retrieve), Amazon Mechanical Turk returns a pagination token in the
        response. You can use this pagination token to retrieve the next set of
        results. "
      minLength: 1
      maxLength: 255
    ResultSize:
      type: integer
      minimum: 1
      maximum: 100
    QualificationRequestList:
      type: array
      items:
        $ref: "#/components/schemas/QualificationRequest"
    QualificationTypeList:
      type: array
      items:
        $ref: "#/components/schemas/QualificationType"
    ReviewPolicyLevelList:
      type: array
      items:
        $ref: "#/components/schemas/ReviewPolicyLevel"
    ReviewReport:
      type: object
      properties:
        ReviewResults:
          $ref: "#/components/schemas/ReviewResultDetailList"
        ReviewActions:
          $ref: "#/components/schemas/ReviewActionDetailList"
      description: " Contains both ReviewResult and ReviewAction elements for a particular
        HIT. "
    ReviewableHITStatus:
      type: string
      enum:
        - Reviewable
        - Reviewing
    WorkerBlockList:
      type: array
      items:
        $ref: "#/components/schemas/WorkerBlock"
    QualificationStatus:
      type: string
      enum:
        - Granted
        - Revoked
    QualificationList:
      type: array
      items:
        $ref: "#/components/schemas/Qualification"
    Locale:
      type: object
      required:
        - Country
      properties:
        Country:
          $ref: "#/components/schemas/CountryParameters"
        Subdivision:
          $ref: "#/components/schemas/CountryParameters"
      description: The Locale data structure represents a geographical region or location.
    LocaleList:
      type: array
      items:
        $ref: "#/components/schemas/Locale"
    NotificationTransport:
      type: string
      enum:
        - Email
        - SQS
        - SNS
    NotificationSpecification:
      type: object
      required:
        - Destination
        - Transport
        - Version
        - EventTypes
      properties:
        Destination:
          $ref: "#/components/schemas/String"
        Transport:
          $ref: "#/components/schemas/NotificationTransport"
        Version:
          $ref: "#/components/schemas/String"
        EventTypes:
          $ref: "#/components/schemas/EventTypeList"
      description: The NotificationSpecification data structure describes a HIT event
        notification for a HIT type.
    NotifyWorkersFailureCode:
      type: string
      enum:
        - SoftFailure
        - HardFailure
    NotifyWorkersFailureStatus:
      type: object
      properties:
        NotifyWorkersFailureCode:
          $ref: "#/components/schemas/NotifyWorkersFailureCode"
        NotifyWorkersFailureMessage:
          $ref: "#/components/schemas/String"
        WorkerId:
          $ref: "#/components/schemas/CustomerId"
      description: " When MTurk encounters an issue with notifying the Workers you
        specified, it returns back this object with failure details. "
    NotifyWorkersFailureStatusList:
      type: array
      items:
        $ref: "#/components/schemas/NotifyWorkersFailureStatus"
    StringList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    ParameterMapEntry:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/String"
        Values:
          $ref: "#/components/schemas/StringList"
      description: " This data structure is the data type for the AnswerKey parameter of
        the ScoreMyKnownAnswers/2011-09-01 Review Policy. "
    ParameterMapEntryList:
      type: array
      items:
        $ref: "#/components/schemas/ParameterMapEntry"
    PolicyParameter:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/String"
        Values:
          $ref: "#/components/schemas/StringList"
        MapEntries:
          $ref: "#/components/schemas/ParameterMapEntryList"
      description: " Name of the parameter from the Review policy. "
    PolicyParameterList:
      type: array
      items:
        $ref: "#/components/schemas/PolicyParameter"
    QualificationRequest:
      type: object
      properties:
        QualificationRequestId:
          $ref: "#/components/schemas/String"
        QualificationTypeId:
          $ref: "#/components/schemas/EntityId"
        WorkerId:
          $ref: "#/components/schemas/CustomerId"
        Test:
          $ref: "#/components/schemas/String"
        Answer:
          $ref: "#/components/schemas/String"
        SubmitTime:
          $ref: "#/components/schemas/Timestamp"
      description: " The QualificationRequest data structure represents a request a Worker
        has made for a Qualification. "
    QualificationRequirement:
      type: object
      required:
        - QualificationTypeId
        - Comparator
      properties:
        QualificationTypeId:
          $ref: "#/components/schemas/String"
        Comparator:
          $ref: "#/components/schemas/Comparator"
        IntegerValues:
          $ref: "#/components/schemas/IntegerList"
        LocaleValues:
          $ref: "#/components/schemas/LocaleList"
        RequiredToPreview:
          $ref: "#/components/schemas/Boolean"
        ActionsGuarded:
          $ref: "#/components/schemas/HITAccessActions"
      description: " The QualificationRequirement data structure describes a Qualification
        that a Worker must have before the Worker is allowed to accept a HIT. A
        requirement may optionally state that a Worker must have the
        Qualification in order to preview the HIT, or see the HIT in search
        results. "
    TurkErrorCode:
      type: string
    ReviewActionStatus:
      type: string
      enum:
        - Intended
        - Succeeded
        - Failed
        - Cancelled
    ReviewActionDetail:
      type: object
      properties:
        ActionId:
          $ref: "#/components/schemas/EntityId"
        ActionName:
          $ref: "#/components/schemas/String"
        TargetId:
          $ref: "#/components/schemas/EntityId"
        TargetType:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/ReviewActionStatus"
        CompleteTime:
          $ref: "#/components/schemas/Timestamp"
        Result:
          $ref: "#/components/schemas/String"
        ErrorCode:
          $ref: "#/components/schemas/String"
      description: " Both the AssignmentReviewReport and the HITReviewReport elements
        contains the ReviewActionDetail data structure. This structure is
        returned multiple times for each action specified in the Review Policy.
        "
    ReviewActionDetailList:
      type: array
      items:
        $ref: "#/components/schemas/ReviewActionDetail"
    ReviewPolicyLevel:
      type: string
      enum:
        - Assignment
        - HIT
    ReviewResultDetailList:
      type: array
      items:
        $ref: "#/components/schemas/ReviewResultDetail"
    ReviewResultDetail:
      type: object
      properties:
        ActionId:
          $ref: "#/components/schemas/EntityId"
        SubjectId:
          $ref: "#/components/schemas/EntityId"
        SubjectType:
          $ref: "#/components/schemas/String"
        QuestionId:
          $ref: "#/components/schemas/EntityId"
        Key:
          $ref: "#/components/schemas/String"
        Value:
          $ref: "#/components/schemas/String"
      description: " This data structure is returned multiple times for each result
        specified in the Review Policy. "
    WorkerBlock:
      type: object
      properties:
        WorkerId:
          $ref: "#/components/schemas/CustomerId"
        Reason:
          $ref: "#/components/schemas/String"
      description: " The WorkerBlock data structure represents a Worker who has been
        blocked. It has two elements: the WorkerId and the Reason for the block.
        "
