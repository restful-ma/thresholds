openapi: 3.0.0
info:
  version: 2006-03-01
  x-release: s3
  title: Amazon Simple Storage Service
  description: <p/>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: s3
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/s3-2006-03-01.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/s3/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  "/{Bucket}/{Key}#uploadId":
    delete:
      operationId: AbortMultipartUpload
      description: <p>Aborts a multipart upload.</p> <p>To verify that all parts have been
        removed, so you don't get charged for the part storage, you should call
        the List Parts operation and ensure the parts list is empty.</p>
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadAbort.html
      responses:
        "204":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AbortMultipartUploadOutput"
        "480":
          description: NoSuchUpload
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchUpload"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: Name of the bucket to which the multipart upload was initiated.
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: Key of the object for which the multipart upload was initiated.
          schema:
            type: string
            minLength: 1
        - name: uploadId
          in: query
          required: true
          description: Upload ID that identifies the multipart upload.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for
            the request. Bucket owners need not specify this parameter in their
            requests. Documentation on downloading objects from requester pays
            buckets can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html
          schema:
            type: string
            enum:
              - requester
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    post:
      operationId: CompleteMultipartUpload
      description: Completes a multipart upload by assembling previously uploaded parts.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadComplete.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CompleteMultipartUploadOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          schema:
            type: string
            minLength: 1
        - name: uploadId
          in: query
          required: true
          description: <p/>
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for
            the request. Bucket owners need not specify this parameter in their
            requests. Documentation on downloading objects from requester pays
            buckets can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html
          schema:
            type: string
            enum:
              - requester
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              properties:
                CompleteMultipartUpload:
                  description: <p/>
                  type: object
                  properties:
                    Parts:
                      $ref: "#/components/schemas/CompletedPartList"
        required: true
    get:
      operationId: ListParts
      description: Lists the parts that have been uploaded for a specific multipart upload.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadListParts.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListPartsOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          schema:
            type: string
            minLength: 1
        - name: max-parts
          in: query
          required: false
          description: Sets the maximum number of parts to return.
          schema:
            type: integer
        - name: part-number-marker
          in: query
          required: false
          description: Specifies the part after which listing should begin. Only parts with
            higher part numbers will be listed.
          schema:
            type: integer
        - name: uploadId
          in: query
          required: true
          description: Upload ID identifying the multipart upload whose parts are being
            listed.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for
            the request. Bucket owners need not specify this parameter in their
            requests. Documentation on downloading objects from requester pays
            buckets can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html
          schema:
            type: string
            enum:
              - requester
        - name: MaxParts
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: PartNumberMarker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
  "/{Bucket}/{Key}#x-amz-copy-source":
    put:
      operationId: CopyObject
      description: Creates a copy of an object that is already stored in Amazon S3.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectCOPY.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CopyObjectOutput"
        "480":
          description: ObjectNotInActiveTierError
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ObjectNotInActiveTierError"
      parameters:
        - name: x-amz-acl
          in: header
          required: false
          description: The canned ACL to apply to the object.
          schema:
            type: string
            enum:
              - private
              - public-read
              - public-read-write
              - authenticated-read
              - aws-exec-read
              - bucket-owner-read
              - bucket-owner-full-control
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: Cache-Control
          in: header
          required: false
          description: Specifies caching behavior along the request/reply chain.
          schema:
            type: string
        - name: Content-Disposition
          in: header
          required: false
          description: Specifies presentational information for the object.
          schema:
            type: string
        - name: Content-Encoding
          in: header
          required: false
          description: Specifies what content encodings have been applied to the object and
            thus what decoding mechanisms must be applied to obtain the
            media-type referenced by the Content-Type header field.
          schema:
            type: string
        - name: Content-Language
          in: header
          required: false
          description: The language the content is in.
          schema:
            type: string
        - name: Content-Type
          in: header
          required: false
          description: A standard MIME type describing the format of the object data.
          schema:
            type: string
        - name: x-amz-copy-source
          in: header
          required: true
          description: The name of the source bucket and key name of the source object,
            separated by a slash (/). Must be URL-encoded.
          schema:
            type: string
            pattern: \/.+\/.+
        - name: x-amz-copy-source-if-match
          in: header
          required: false
          description: Copies the object if its entity tag (ETag) matches the specified tag.
          schema:
            type: string
        - name: x-amz-copy-source-if-modified-since
          in: header
          required: false
          description: Copies the object if it has been modified since the specified time.
          schema:
            type: string
            format: date-time
        - name: x-amz-copy-source-if-none-match
          in: header
          required: false
          description: Copies the object if its entity tag (ETag) is different than the
            specified ETag.
          schema:
            type: string
        - name: x-amz-copy-source-if-unmodified-since
          in: header
          required: false
          description: Copies the object if it hasn't been modified since the specified
            time.
          schema:
            type: string
            format: date-time
        - name: Expires
          in: header
          required: false
          description: The date and time at which the object is no longer cacheable.
          schema:
            type: string
            format: date-time
        - name: x-amz-grant-full-control
          in: header
          required: false
          description: Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the
            object.
          schema:
            type: string
        - name: x-amz-grant-read
          in: header
          required: false
          description: Allows grantee to read the object data and its metadata.
          schema:
            type: string
        - name: x-amz-grant-read-acp
          in: header
          required: false
          description: Allows grantee to read the object ACL.
          schema:
            type: string
        - name: x-amz-grant-write-acp
          in: header
          required: false
          description: Allows grantee to write the ACL for the applicable object.
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          schema:
            type: string
            minLength: 1
        - name: x-amz-metadata-directive
          in: header
          required: false
          description: Specifies whether the metadata is copied from the source object or
            replaced with metadata provided in the request.
          schema:
            type: string
            enum:
              - COPY
              - REPLACE
        - name: x-amz-tagging-directive
          in: header
          required: false
          description: Specifies whether the object tag-set are copied from the source
            object or replaced with tag-set provided in the request.
          schema:
            type: string
            enum:
              - COPY
              - REPLACE
        - name: x-amz-server-side-encryption
          in: header
          required: false
          description: The Server-side encryption algorithm used when storing this object
            in S3 (e.g., AES256, aws:kms).
          schema:
            type: string
            enum:
              - AES256
              - aws:kms
        - name: x-amz-storage-class
          in: header
          required: false
          description: The type of storage to use for the object. Defaults to 'STANDARD'.
          schema:
            type: string
            enum:
              - STANDARD
              - REDUCED_REDUNDANCY
              - STANDARD_IA
              - ONEZONE_IA
              - INTELLIGENT_TIERING
              - GLACIER
              - DEEP_ARCHIVE
        - name: x-amz-website-redirect-location
          in: header
          required: false
          description: If the bucket is configured as a website, redirects requests for
            this object to another object in the same bucket or to an external
            URL. Amazon S3 stores the value of this header in the object
            metadata.
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: Specifies the algorithm to use to when encrypting the object (e.g.,
            AES256).
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use
            in encrypting data. This value is used to store the object and then
            it is discarded; Amazon does not store the encryption key. The key
            must be appropriate for use with the algorithm specified in the
            x-amz-server-side​-encryption​-customer-algorithm header.
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to
            RFC 1321. Amazon S3 uses this header for a message integrity check
            to ensure the encryption key was transmitted without error.
          schema:
            type: string
        - name: x-amz-server-side-encryption-aws-kms-key-id
          in: header
          required: false
          description: Specifies the AWS KMS key ID to use for object encryption. All GET
            and PUT requests for an object protected by AWS KMS will fail if not
            made via SSL or using SigV4. Documentation on configuring any of the
            officially supported AWS SDKs and CLI can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-context
          in: header
          required: false
          description: Specifies the AWS KMS Encryption Context to use for object
            encryption. The value of this header is a base64-encoded UTF-8
            string holding JSON with the encryption context key-value pairs.
          schema:
            type: string
            format: password
        - name: x-amz-copy-source-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: Specifies the algorithm to use when decrypting the source object
            (e.g., AES256).
          schema:
            type: string
        - name: x-amz-copy-source-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use
            to decrypt the source object. The encryption key provided in this
            header must be one that was used when the source object was created.
          schema:
            type: string
            format: password
        - name: x-amz-copy-source-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to
            RFC 1321. Amazon S3 uses this header for a message integrity check
            to ensure the encryption key was transmitted without error.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for
            the request. Bucket owners need not specify this parameter in their
            requests. Documentation on downloading objects from requester pays
            buckets can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html
          schema:
            type: string
            enum:
              - requester
        - name: x-amz-tagging
          in: header
          required: false
          description: The tag-set for the object destination object this value must be
            used in conjunction with the TaggingDirective. The tag-set must be
            encoded as URL Query parameters
          schema:
            type: string
        - name: x-amz-object-lock-mode
          in: header
          required: false
          description: The object lock mode that you want to apply to the copied object.
          schema:
            type: string
            enum:
              - GOVERNANCE
              - COMPLIANCE
        - name: x-amz-object-lock-retain-until-date
          in: header
          required: false
          description: The date and time when you want the copied object's object lock to
            expire.
          schema:
            type: string
            format: date-time
        - name: x-amz-object-lock-legal-hold
          in: header
          required: false
          description: Specifies whether you want to apply a Legal Hold to the copied
            object.
          schema:
            type: string
            enum:
              - ON
              - OFF
      requestBody:
        $ref: "#/components/requestBodies/CopyObjectBody"
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
  "/{Bucket}":
    put:
      operationId: CreateBucket
      description: Creates a new bucket.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUT.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateBucketOutput"
        "480":
          description: BucketAlreadyExists
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/BucketAlreadyExists"
        "481":
          description: BucketAlreadyOwnedByYou
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/BucketAlreadyOwnedByYou"
      parameters:
        - name: x-amz-acl
          in: header
          required: false
          description: The canned ACL to apply to the bucket.
          schema:
            type: string
            enum:
              - private
              - public-read
              - public-read-write
              - authenticated-read
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: x-amz-grant-full-control
          in: header
          required: false
          description: Allows grantee the read, write, read ACP, and write ACP permissions
            on the bucket.
          schema:
            type: string
        - name: x-amz-grant-read
          in: header
          required: false
          description: Allows grantee to list the objects in the bucket.
          schema:
            type: string
        - name: x-amz-grant-read-acp
          in: header
          required: false
          description: Allows grantee to read the bucket ACL.
          schema:
            type: string
        - name: x-amz-grant-write
          in: header
          required: false
          description: Allows grantee to create, overwrite, and delete any object in the
            bucket.
          schema:
            type: string
        - name: x-amz-grant-write-acp
          in: header
          required: false
          description: Allows grantee to write the ACL for the applicable bucket.
          schema:
            type: string
        - name: x-amz-bucket-object-lock-enabled
          in: header
          required: false
          description: Specifies whether you want Amazon S3 object lock to be enabled for
            the new bucket.
          schema:
            type: boolean
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              properties:
                CreateBucketConfiguration:
                  description: <p/>
                  type: object
                  properties:
                    LocationConstraint:
                      $ref: "#/components/schemas/BucketLocationConstraint"
        required: true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    delete:
      operationId: DeleteBucket
      description: Deletes the bucket. All objects (including all object versions and
        Delete Markers) in the bucket must be deleted before the bucket itself
        can be deleted.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETE.html
      responses:
        "204":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
    head:
      operationId: HeadBucket
      description: This operation is useful to determine if a bucket exists and you have
        permission to access it.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketHEAD.html
      responses:
        "200":
          description: Success
        "480":
          description: NoSuchBucket
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchBucket"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
    get:
      operationId: ListObjects
      description: Returns some or all (up to 1000) of the objects in a bucket. You can use
        the request parameters as selection criteria to return a subset of the
        objects in a bucket.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGET.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListObjectsOutput"
        "480":
          description: NoSuchBucket
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchBucket"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: delimiter
          in: query
          required: false
          description: A delimiter is a character you use to group keys.
          schema:
            type: string
        - name: encoding-type
          in: query
          required: false
          description: Requests Amazon S3 to encode the object keys in the response and
            specifies the encoding method to use. An object key may contain any
            Unicode character; however, XML 1.0 parser cannot parse some
            characters, such as characters with an ASCII value from 0 to 10. For
            characters that are not supported in XML 1.0, you can add this
            parameter to request that Amazon S3 encode the keys in the response.
          schema:
            type: string
            enum:
              - url
        - name: marker
          in: query
          required: false
          description: Specifies the key to start with when listing objects in a bucket.
          schema:
            type: string
        - name: max-keys
          in: query
          required: false
          description: Sets the maximum number of keys returned in the response. The
            response might contain fewer keys but will never contain more.
          schema:
            type: integer
        - name: prefix
          in: query
          required: false
          description: Limits the response to keys that begin with the specified prefix.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for
            the request. Bucket owners need not specify this parameter in their
            requests. Documentation on downloading objects from requester pays
            buckets can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html
          schema:
            type: string
            enum:
              - requester
        - name: MaxKeys
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
  "/{Bucket}/{Key}#uploads":
    post:
      operationId: CreateMultipartUpload
      description: <p>Initiates a multipart upload and returns an upload ID.</p> <p>
        <b>Note:</b> After you initiate multipart upload and upload one or more
        parts, you must either complete or abort multipart upload in order to
        stop getting charged for storage of the uploaded parts. Only after you
        either complete or abort multipart upload, Amazon S3 frees up the parts
        storage and stops charging you for the parts storage.</p>
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadInitiate.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateMultipartUploadOutput"
      parameters:
        - name: x-amz-acl
          in: header
          required: false
          description: The canned ACL to apply to the object.
          schema:
            type: string
            enum:
              - private
              - public-read
              - public-read-write
              - authenticated-read
              - aws-exec-read
              - bucket-owner-read
              - bucket-owner-full-control
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: Cache-Control
          in: header
          required: false
          description: Specifies caching behavior along the request/reply chain.
          schema:
            type: string
        - name: Content-Disposition
          in: header
          required: false
          description: Specifies presentational information for the object.
          schema:
            type: string
        - name: Content-Encoding
          in: header
          required: false
          description: Specifies what content encodings have been applied to the object and
            thus what decoding mechanisms must be applied to obtain the
            media-type referenced by the Content-Type header field.
          schema:
            type: string
        - name: Content-Language
          in: header
          required: false
          description: The language the content is in.
          schema:
            type: string
        - name: Content-Type
          in: header
          required: false
          description: A standard MIME type describing the format of the object data.
          schema:
            type: string
        - name: Expires
          in: header
          required: false
          description: The date and time at which the object is no longer cacheable.
          schema:
            type: string
            format: date-time
        - name: x-amz-grant-full-control
          in: header
          required: false
          description: Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the
            object.
          schema:
            type: string
        - name: x-amz-grant-read
          in: header
          required: false
          description: Allows grantee to read the object data and its metadata.
          schema:
            type: string
        - name: x-amz-grant-read-acp
          in: header
          required: false
          description: Allows grantee to read the object ACL.
          schema:
            type: string
        - name: x-amz-grant-write-acp
          in: header
          required: false
          description: Allows grantee to write the ACL for the applicable object.
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          schema:
            type: string
            minLength: 1
        - name: x-amz-server-side-encryption
          in: header
          required: false
          description: The Server-side encryption algorithm used when storing this object
            in S3 (e.g., AES256, aws:kms).
          schema:
            type: string
            enum:
              - AES256
              - aws:kms
        - name: x-amz-storage-class
          in: header
          required: false
          description: The type of storage to use for the object. Defaults to 'STANDARD'.
          schema:
            type: string
            enum:
              - STANDARD
              - REDUCED_REDUNDANCY
              - STANDARD_IA
              - ONEZONE_IA
              - INTELLIGENT_TIERING
              - GLACIER
              - DEEP_ARCHIVE
        - name: x-amz-website-redirect-location
          in: header
          required: false
          description: If the bucket is configured as a website, redirects requests for
            this object to another object in the same bucket or to an external
            URL. Amazon S3 stores the value of this header in the object
            metadata.
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: Specifies the algorithm to use to when encrypting the object (e.g.,
            AES256).
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use
            in encrypting data. This value is used to store the object and then
            it is discarded; Amazon does not store the encryption key. The key
            must be appropriate for use with the algorithm specified in the
            x-amz-server-side​-encryption​-customer-algorithm header.
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to
            RFC 1321. Amazon S3 uses this header for a message integrity check
            to ensure the encryption key was transmitted without error.
          schema:
            type: string
        - name: x-amz-server-side-encryption-aws-kms-key-id
          in: header
          required: false
          description: Specifies the AWS KMS key ID to use for object encryption. All GET
            and PUT requests for an object protected by AWS KMS will fail if not
            made via SSL or using SigV4. Documentation on configuring any of the
            officially supported AWS SDKs and CLI can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-context
          in: header
          required: false
          description: Specifies the AWS KMS Encryption Context to use for object
            encryption. The value of this header is a base64-encoded UTF-8
            string holding JSON with the encryption context key-value pairs.
          schema:
            type: string
            format: password
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for
            the request. Bucket owners need not specify this parameter in their
            requests. Documentation on downloading objects from requester pays
            buckets can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html
          schema:
            type: string
            enum:
              - requester
        - name: x-amz-tagging
          in: header
          required: false
          description: The tag-set for the object. The tag-set must be encoded as URL Query
            parameters
          schema:
            type: string
        - name: x-amz-object-lock-mode
          in: header
          required: false
          description: Specifies the object lock mode that you want to apply to the
            uploaded object.
          schema:
            type: string
            enum:
              - GOVERNANCE
              - COMPLIANCE
        - name: x-amz-object-lock-retain-until-date
          in: header
          required: false
          description: Specifies the date and time when you want the object lock to expire.
          schema:
            type: string
            format: date-time
        - name: x-amz-object-lock-legal-hold
          in: header
          required: false
          description: Specifies whether you want to apply a Legal Hold to the uploaded
            object.
          schema:
            type: string
            enum:
              - ON
              - OFF
        - name: uploads
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        $ref: "#/components/requestBodies/CopyObjectBody"
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
  "/{Bucket}#analytics&id":
    delete:
      operationId: DeleteBucketAnalyticsConfiguration
      description: <p>Deletes an analytics configuration for the bucket (specified by the
        analytics configuration ID).</p> <p>To use this operation, you must have
        permissions to perform the s3:PutAnalyticsConfiguration action. The
        bucket owner has this permission by default. The bucket owner can grant
        this permission to others. </p>
      responses:
        "204":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket from which an analytics configuration is
            deleted.
          schema:
            type: string
        - name: id
          in: query
          required: true
          description: The ID that identifies the analytics configuration.
          schema:
            type: string
        - name: analytics
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    get:
      operationId: GetBucketAnalyticsConfiguration
      description: Gets an analytics configuration for the bucket (specified by the
        analytics configuration ID).
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetBucketAnalyticsConfigurationOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket from which an analytics configuration is
            retrieved.
          schema:
            type: string
        - name: id
          in: query
          required: true
          description: The ID that identifies the analytics configuration.
          schema:
            type: string
        - name: analytics
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    put:
      operationId: PutBucketAnalyticsConfiguration
      description: Sets an analytics configuration for the bucket (specified by the
        analytics configuration ID).
      responses:
        "200":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket to which an analytics configuration is stored.
          schema:
            type: string
        - name: id
          in: query
          required: true
          description: The ID that identifies the analytics configuration.
          schema:
            type: string
        - name: analytics
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - AnalyticsConfiguration
              properties:
                AnalyticsConfiguration:
                  description: <p> Specifies the configuration and any analyses for the
                    analytics filter of an Amazon S3 bucket.</p> <p>For more
                    information, see <a
                    href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETAnalyticsConfig.html">GET
                    Bucket analytics</a> in the <i>Amazon Simple Storage Service
                    API Reference</i>. </p>
                  type: object
                  properties:
                    Id:
                      $ref: "#/components/schemas/AnalyticsId"
                    Filter:
                      $ref: "#/components/schemas/AnalyticsFilter"
                    StorageClassAnalysis:
                      $ref: "#/components/schemas/StorageClassAnalysis"
        required: true
  "/{Bucket}#cors":
    delete:
      operationId: DeleteBucketCors
      description: Deletes the CORS configuration information set for the bucket.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEcors.html
      responses:
        "204":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: cors
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    get:
      operationId: GetBucketCors
      description: Returns the CORS configuration for the bucket.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETcors.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetBucketCorsOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: cors
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    put:
      operationId: PutBucketCors
      description: Sets the CORS configuration for a bucket.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTcors.html
      responses:
        "200":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: <p/>
          schema:
            type: string
        - name: cors
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - CORSConfiguration
              properties:
                CORSConfiguration:
                  description: Describes the cross-origin access configuration for objects
                    in an Amazon S3 bucket. For more information, see <a
                    href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html">Enabling
                    Cross-Origin Resource Sharing</a> in the <i>Amazon Simple
                    Storage Service Developer Guide</i>.
                  type: object
                  properties:
                    CORSRules:
                      $ref: "#/components/schemas/CORSRules"
        required: true
  "/{Bucket}#encryption":
    delete:
      operationId: DeleteBucketEncryption
      description: Deletes the server-side encryption configuration from the bucket.
      responses:
        "204":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket containing the server-side encryption
            configuration to delete.
          schema:
            type: string
        - name: encryption
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    get:
      operationId: GetBucketEncryption
      description: Returns the server-side encryption configuration of a bucket.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetBucketEncryptionOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket from which the server-side encryption
            configuration is retrieved.
          schema:
            type: string
        - name: encryption
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    put:
      operationId: PutBucketEncryption
      description: Creates a new server-side encryption configuration (or replaces an
        existing one, if present).
      responses:
        "200":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: Specifies default encryption for a bucket using server-side
            encryption with Amazon S3-managed keys (SSE-S3) or AWS KMS-managed
            keys (SSE-KMS). For information about the Amazon S3 default
            encryption feature, see <a
            href="https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html">Amazon
            S3 Default Bucket Encryption</a> in the <i>Amazon Simple Storage
            Service Developer Guide</i>.
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: The base64-encoded 128-bit MD5 digest of the server-side encryption
            configuration. This parameter is auto-populated when using the
            command from the CLI.
          schema:
            type: string
        - name: encryption
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - ServerSideEncryptionConfiguration
              properties:
                ServerSideEncryptionConfiguration:
                  description: Specifies the default server-side-encryption configuration.
                  type: object
                  properties:
                    Rules:
                      $ref: "#/components/schemas/ServerSideEncryptionRules"
        required: true
  "/{Bucket}#inventory&id":
    delete:
      operationId: DeleteBucketInventoryConfiguration
      description: Deletes an inventory configuration (identified by the inventory ID) from
        the bucket.
      responses:
        "204":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket containing the inventory configuration to
            delete.
          schema:
            type: string
        - name: id
          in: query
          required: true
          description: The ID used to identify the inventory configuration.
          schema:
            type: string
        - name: inventory
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    get:
      operationId: GetBucketInventoryConfiguration
      description: Returns an inventory configuration (identified by the inventory ID) from
        the bucket.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetBucketInventoryConfigurationOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket containing the inventory configuration to
            retrieve.
          schema:
            type: string
        - name: id
          in: query
          required: true
          description: The ID used to identify the inventory configuration.
          schema:
            type: string
        - name: inventory
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    put:
      operationId: PutBucketInventoryConfiguration
      description: Adds an inventory configuration (identified by the inventory ID) from
        the bucket.
      responses:
        "200":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket where the inventory configuration will be
            stored.
          schema:
            type: string
        - name: id
          in: query
          required: true
          description: The ID used to identify the inventory configuration.
          schema:
            type: string
        - name: inventory
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - InventoryConfiguration
              properties:
                InventoryConfiguration:
                  description: 'Specifies the inventory configuration for an Amazon S3
                    bucket. For more information, see <a
                    href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html">GET
                    Bucket inventory</a> in the <i>Amazon Simple Storage Service
                    API Reference</i>. '
                  type: object
                  properties:
                    Destination:
                      $ref: "#/components/schemas/InventoryDestination"
                    IsEnabled:
                      $ref: "#/components/schemas/IsEnabled"
                    Filter:
                      $ref: "#/components/schemas/InventoryFilter"
                    Id:
                      $ref: "#/components/schemas/InventoryId"
                    IncludedObjectVersions:
                      $ref: "#/components/schemas/InventoryIncludedObjectVersions"
                    OptionalFields:
                      $ref: "#/components/schemas/InventoryOptionalFields"
                    Schedule:
                      $ref: "#/components/schemas/InventorySchedule"
        required: true
  "/{Bucket}#lifecycle":
    delete:
      operationId: DeleteBucketLifecycle
      description: Deletes the lifecycle configuration from the bucket.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETElifecycle.html
      responses:
        "204":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: lifecycle
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    get:
      operationId: GetBucketLifecycleConfiguration
      description: Returns the lifecycle configuration information set on the bucket.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetBucketLifecycleConfigurationOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: lifecycle
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    put:
      operationId: PutBucketLifecycleConfiguration
      description: Sets lifecycle configuration for your bucket. If a lifecycle
        configuration exists, it replaces it.
      responses:
        "200":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: lifecycle
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - LifecycleConfiguration
              properties:
                LifecycleConfiguration:
                  description: Specifies the lifecycle configuration for objects in an
                    Amazon S3 bucket. For more information, see <a
                    href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html">Object
                    Lifecycle Management</a> in the <i>Amazon Simple Storage
                    Service Developer Guide</i>.
                  type: object
                  properties:
                    Rules:
                      $ref: "#/components/schemas/LifecycleRules"
        required: true
  "/{Bucket}#metrics&id":
    delete:
      operationId: DeleteBucketMetricsConfiguration
      description: Deletes a metrics configuration (specified by the metrics configuration
        ID) from the bucket.
      responses:
        "204":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket containing the metrics configuration to
            delete.
          schema:
            type: string
        - name: id
          in: query
          required: true
          description: The ID used to identify the metrics configuration.
          schema:
            type: string
        - name: metrics
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    get:
      operationId: GetBucketMetricsConfiguration
      description: Gets a metrics configuration (specified by the metrics configuration ID)
        from the bucket.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetBucketMetricsConfigurationOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket containing the metrics configuration to
            retrieve.
          schema:
            type: string
        - name: id
          in: query
          required: true
          description: The ID used to identify the metrics configuration.
          schema:
            type: string
        - name: metrics
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    put:
      operationId: PutBucketMetricsConfiguration
      description: Sets a metrics configuration (specified by the metrics configuration ID)
        for the bucket.
      responses:
        "200":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket for which the metrics configuration is set.
          schema:
            type: string
        - name: id
          in: query
          required: true
          description: The ID used to identify the metrics configuration.
          schema:
            type: string
        - name: metrics
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - MetricsConfiguration
              properties:
                MetricsConfiguration:
                  description: Specifies a metrics configuration for the CloudWatch request
                    metrics (specified by the metrics configuration ID) from an
                    Amazon S3 bucket. If you're updating an existing metrics
                    configuration, note that this is a full replacement of the
                    existing metrics configuration. If you don't include the
                    elements you want to keep, they are erased. For more
                    information, see <a
                    href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html">
                    PUT Bucket metrics</a> in the <i>Amazon Simple Storage
                    Service API Reference</i>.
                  type: object
                  properties:
                    Id:
                      $ref: "#/components/schemas/MetricsId"
                    Filter:
                      $ref: "#/components/schemas/MetricsFilter"
        required: true
  "/{Bucket}#policy":
    delete:
      operationId: DeleteBucketPolicy
      description: Deletes the policy from the bucket.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEpolicy.html
      responses:
        "204":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: policy
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    get:
      operationId: GetBucketPolicy
      description: Returns the policy of a specified bucket.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETpolicy.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetBucketPolicyOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: policy
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    put:
      operationId: PutBucketPolicy
      description: Applies an Amazon S3 bucket policy to an Amazon S3 bucket.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTpolicy.html
      responses:
        "200":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: <p/>
          schema:
            type: string
        - name: x-amz-confirm-remove-self-bucket-access
          in: header
          required: false
          description: Set this parameter to true to confirm that you want to remove your
            permissions to change this bucket policy in the future.
          schema:
            type: boolean
        - name: policy
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - Policy
              properties:
                Policy:
                  description: The bucket policy as a JSON document.
                  type: string
        required: true
  "/{Bucket}#replication":
    delete:
      operationId: DeleteBucketReplication
      description: ' Deletes the replication configuration from the bucket. For information
        about replication configuration, see <a
        href="https://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html">Cross-Region
        Replication (CRR)</a> in the <i>Amazon S3 Developer Guide</i>. '
      responses:
        "204":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p> The bucket name. </p> <note> <p>It can take a while to propagate
            the deletion of a replication configuration to all Amazon S3
            systems.</p> </note>
          schema:
            type: string
        - name: replication
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    get:
      operationId: GetBucketReplication
      description: <p>Returns the replication configuration of a bucket.</p> <note> <p> It
        can take a while to propagate the put or delete a replication
        configuration to all Amazon S3 systems. Therefore, a get request soon
        after put or delete can return a wrong result. </p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetBucketReplicationOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: replication
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    put:
      operationId: PutBucketReplication
      description: ' Creates a replication configuration or replaces an existing one. For
        more information, see <a
        href="https://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html">Cross-Region
        Replication (CRR)</a> in the <i>Amazon S3 Developer Guide</i>. '
      responses:
        "200":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: The base64-encoded 128-bit MD5 digest of the data. You must use this
            header as a message integrity check to verify that the request body
            was not corrupted in transit.
          schema:
            type: string
        - name: x-amz-bucket-object-lock-token
          in: header
          required: false
          description: A token that allows Amazon S3 object lock to be enabled for an
            existing bucket.
          schema:
            type: string
        - name: replication
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - ReplicationConfiguration
              properties:
                ReplicationConfiguration:
                  description: A container for replication rules. You can add up to 1,000
                    rules. The maximum size of a replication configuration is 2
                    MB.
                  type: object
                  properties:
                    Role:
                      $ref: "#/components/schemas/Role"
                    Rules:
                      $ref: "#/components/schemas/ReplicationRules"
        required: true
  "/{Bucket}#tagging":
    delete:
      operationId: DeleteBucketTagging
      description: Deletes the tags from the bucket.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEtagging.html
      responses:
        "204":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: tagging
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    get:
      operationId: GetBucketTagging
      description: Returns the tag set associated with the bucket.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETtagging.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetBucketTaggingOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: tagging
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    put:
      operationId: PutBucketTagging
      description: Sets the tags for a bucket.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTtagging.html
      responses:
        "200":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: <p/>
          schema:
            type: string
        - name: tagging
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        $ref: "#/components/requestBodies/PutBucketTaggingBody"
  "/{Bucket}#website":
    delete:
      operationId: DeleteBucketWebsite
      description: This operation removes the website configuration from the bucket.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketDELETEwebsite.html
      responses:
        "204":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: website
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    get:
      operationId: GetBucketWebsite
      description: Returns the website configuration for a bucket.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETwebsite.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetBucketWebsiteOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: website
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    put:
      operationId: PutBucketWebsite
      description: Set the website configuration for a bucket.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTwebsite.html
      responses:
        "200":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: <p/>
          schema:
            type: string
        - name: website
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - WebsiteConfiguration
              properties:
                WebsiteConfiguration:
                  description: Specifies website configuration parameters for an Amazon S3
                    bucket.
                  type: object
                  properties:
                    ErrorDocument:
                      $ref: "#/components/schemas/ErrorDocument"
                    IndexDocument:
                      $ref: "#/components/schemas/IndexDocument"
                    RedirectAllRequestsTo:
                      $ref: "#/components/schemas/RedirectAllRequestsTo"
                    RoutingRules:
                      $ref: "#/components/schemas/RoutingRules"
        required: true
  "/{Bucket}/{Key}":
    delete:
      operationId: DeleteObject
      description: Removes the null version (if there is one) of an object and inserts a
        delete marker, which becomes the latest version of the object. If there
        isn't a null version, Amazon S3 does not remove any objects.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectDELETE.html
      responses:
        "204":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteObjectOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          schema:
            type: string
            minLength: 1
        - name: x-amz-mfa
          in: header
          required: false
          description: The concatenation of the authentication device's serial number, a
            space, and the value that is displayed on your authentication
            device.
          schema:
            type: string
        - name: versionId
          in: query
          required: false
          description: VersionId used to reference a specific version of the object.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for
            the request. Bucket owners need not specify this parameter in their
            requests. Documentation on downloading objects from requester pays
            buckets can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html
          schema:
            type: string
            enum:
              - requester
        - name: x-amz-bypass-governance-retention
          in: header
          required: false
          description: Indicates whether Amazon S3 object lock should bypass
            governance-mode restrictions to process this operation.
          schema:
            type: boolean
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    get:
      operationId: GetObject
      description: Retrieves objects from Amazon S3.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectGET.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetObjectOutput"
        "480":
          description: NoSuchKey
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchKey"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: If-Match
          in: header
          required: false
          description: Return the object only if its entity tag (ETag) is the same as the
            one specified, otherwise return a 412 (precondition failed).
          schema:
            type: string
        - name: If-Modified-Since
          in: header
          required: false
          description: Return the object only if it has been modified since the specified
            time, otherwise return a 304 (not modified).
          schema:
            type: string
            format: date-time
        - name: If-None-Match
          in: header
          required: false
          description: Return the object only if its entity tag (ETag) is different from
            the one specified, otherwise return a 304 (not modified).
          schema:
            type: string
        - name: If-Unmodified-Since
          in: header
          required: false
          description: Return the object only if it has not been modified since the
            specified time, otherwise return a 412 (precondition failed).
          schema:
            type: string
            format: date-time
        - name: Key
          in: path
          required: true
          description: <p/>
          schema:
            type: string
            minLength: 1
        - name: Range
          in: header
          required: false
          description: Downloads the specified range bytes of an object. For more
            information about the HTTP Range header, go to
            http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.
          schema:
            type: string
        - name: response-cache-control
          in: query
          required: false
          description: Sets the Cache-Control header of the response.
          schema:
            type: string
        - name: response-content-disposition
          in: query
          required: false
          description: Sets the Content-Disposition header of the response
          schema:
            type: string
        - name: response-content-encoding
          in: query
          required: false
          description: Sets the Content-Encoding header of the response.
          schema:
            type: string
        - name: response-content-language
          in: query
          required: false
          description: Sets the Content-Language header of the response.
          schema:
            type: string
        - name: response-content-type
          in: query
          required: false
          description: Sets the Content-Type header of the response.
          schema:
            type: string
        - name: response-expires
          in: query
          required: false
          description: Sets the Expires header of the response.
          schema:
            type: string
            format: date-time
        - name: versionId
          in: query
          required: false
          description: VersionId used to reference a specific version of the object.
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: Specifies the algorithm to use to when encrypting the object (e.g.,
            AES256).
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use
            in encrypting data. This value is used to store the object and then
            it is discarded; Amazon does not store the encryption key. The key
            must be appropriate for use with the algorithm specified in the
            x-amz-server-side​-encryption​-customer-algorithm header.
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to
            RFC 1321. Amazon S3 uses this header for a message integrity check
            to ensure the encryption key was transmitted without error.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for
            the request. Bucket owners need not specify this parameter in their
            requests. Documentation on downloading objects from requester pays
            buckets can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html
          schema:
            type: string
            enum:
              - requester
        - name: partNumber
          in: query
          required: false
          description: Part number of the object being read. This is a positive integer
            between 1 and 10,000. Effectively performs a 'ranged' GET request
            for the part specified. Useful for downloading just a part of an
            object.
          schema:
            type: integer
    head:
      operationId: HeadObject
      description: The HEAD operation retrieves metadata from an object without returning
        the object itself. This operation is useful if you're only interested in
        an object's metadata. To use HEAD, you must have READ access to the
        object.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectHEAD.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HeadObjectOutput"
        "480":
          description: NoSuchKey
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchKey"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: If-Match
          in: header
          required: false
          description: Return the object only if its entity tag (ETag) is the same as the
            one specified, otherwise return a 412 (precondition failed).
          schema:
            type: string
        - name: If-Modified-Since
          in: header
          required: false
          description: Return the object only if it has been modified since the specified
            time, otherwise return a 304 (not modified).
          schema:
            type: string
            format: date-time
        - name: If-None-Match
          in: header
          required: false
          description: Return the object only if its entity tag (ETag) is different from
            the one specified, otherwise return a 304 (not modified).
          schema:
            type: string
        - name: If-Unmodified-Since
          in: header
          required: false
          description: Return the object only if it has not been modified since the
            specified time, otherwise return a 412 (precondition failed).
          schema:
            type: string
            format: date-time
        - name: Key
          in: path
          required: true
          description: <p/>
          schema:
            type: string
            minLength: 1
        - name: Range
          in: header
          required: false
          description: Downloads the specified range bytes of an object. For more
            information about the HTTP Range header, go to
            http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.
          schema:
            type: string
        - name: versionId
          in: query
          required: false
          description: VersionId used to reference a specific version of the object.
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: Specifies the algorithm to use to when encrypting the object (e.g.,
            AES256).
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use
            in encrypting data. This value is used to store the object and then
            it is discarded; Amazon does not store the encryption key. The key
            must be appropriate for use with the algorithm specified in the
            x-amz-server-side​-encryption​-customer-algorithm header.
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to
            RFC 1321. Amazon S3 uses this header for a message integrity check
            to ensure the encryption key was transmitted without error.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for
            the request. Bucket owners need not specify this parameter in their
            requests. Documentation on downloading objects from requester pays
            buckets can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html
          schema:
            type: string
            enum:
              - requester
        - name: partNumber
          in: query
          required: false
          description: Part number of the object being read. This is a positive integer
            between 1 and 10,000. Effectively performs a 'ranged' HEAD request
            for the part specified. Useful querying about the size of the part
            and the number of parts in this object.
          schema:
            type: integer
    put:
      operationId: PutObject
      description: Adds an object to a bucket.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectPUT.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PutObjectOutput"
      parameters:
        - name: x-amz-acl
          in: header
          required: false
          description: The canned ACL to apply to the object.
          schema:
            type: string
            enum:
              - private
              - public-read
              - public-read-write
              - authenticated-read
              - aws-exec-read
              - bucket-owner-read
              - bucket-owner-full-control
        - name: Bucket
          in: path
          required: true
          description: Name of the bucket to which the PUT operation was initiated.
          schema:
            type: string
        - name: Cache-Control
          in: header
          required: false
          description: Specifies caching behavior along the request/reply chain.
          schema:
            type: string
        - name: Content-Disposition
          in: header
          required: false
          description: Specifies presentational information for the object.
          schema:
            type: string
        - name: Content-Encoding
          in: header
          required: false
          description: Specifies what content encodings have been applied to the object and
            thus what decoding mechanisms must be applied to obtain the
            media-type referenced by the Content-Type header field.
          schema:
            type: string
        - name: Content-Language
          in: header
          required: false
          description: The language the content is in.
          schema:
            type: string
        - name: Content-Length
          in: header
          required: false
          description: Size of the body in bytes. This parameter is useful when the size of
            the body cannot be determined automatically.
          schema:
            type: integer
        - name: Content-MD5
          in: header
          required: false
          description: The base64-encoded 128-bit MD5 digest of the part data. This
            parameter is auto-populated when using the command from the CLI.
            This parameted is required if object lock parameters are specified.
          schema:
            type: string
        - name: Content-Type
          in: header
          required: false
          description: A standard MIME type describing the format of the object data.
          schema:
            type: string
        - name: Expires
          in: header
          required: false
          description: The date and time at which the object is no longer cacheable.
          schema:
            type: string
            format: date-time
        - name: x-amz-grant-full-control
          in: header
          required: false
          description: Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the
            object.
          schema:
            type: string
        - name: x-amz-grant-read
          in: header
          required: false
          description: Allows grantee to read the object data and its metadata.
          schema:
            type: string
        - name: x-amz-grant-read-acp
          in: header
          required: false
          description: Allows grantee to read the object ACL.
          schema:
            type: string
        - name: x-amz-grant-write-acp
          in: header
          required: false
          description: Allows grantee to write the ACL for the applicable object.
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: Object key for which the PUT operation was initiated.
          schema:
            type: string
            minLength: 1
        - name: x-amz-server-side-encryption
          in: header
          required: false
          description: The Server-side encryption algorithm used when storing this object
            in S3 (e.g., AES256, aws:kms).
          schema:
            type: string
            enum:
              - AES256
              - aws:kms
        - name: x-amz-storage-class
          in: header
          required: false
          description: The type of storage to use for the object. Defaults to 'STANDARD'.
          schema:
            type: string
            enum:
              - STANDARD
              - REDUCED_REDUNDANCY
              - STANDARD_IA
              - ONEZONE_IA
              - INTELLIGENT_TIERING
              - GLACIER
              - DEEP_ARCHIVE
        - name: x-amz-website-redirect-location
          in: header
          required: false
          description: If the bucket is configured as a website, redirects requests for
            this object to another object in the same bucket or to an external
            URL. Amazon S3 stores the value of this header in the object
            metadata.
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: Specifies the algorithm to use to when encrypting the object (e.g.,
            AES256).
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use
            in encrypting data. This value is used to store the object and then
            it is discarded; Amazon does not store the encryption key. The key
            must be appropriate for use with the algorithm specified in the
            x-amz-server-side​-encryption​-customer-algorithm header.
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to
            RFC 1321. Amazon S3 uses this header for a message integrity check
            to ensure the encryption key was transmitted without error.
          schema:
            type: string
        - name: x-amz-server-side-encryption-aws-kms-key-id
          in: header
          required: false
          description: Specifies the AWS KMS key ID to use for object encryption. All GET
            and PUT requests for an object protected by AWS KMS will fail if not
            made via SSL or using SigV4. Documentation on configuring any of the
            officially supported AWS SDKs and CLI can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-context
          in: header
          required: false
          description: Specifies the AWS KMS Encryption Context to use for object
            encryption. The value of this header is a base64-encoded UTF-8
            string holding JSON with the encryption context key-value pairs.
          schema:
            type: string
            format: password
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for
            the request. Bucket owners need not specify this parameter in their
            requests. Documentation on downloading objects from requester pays
            buckets can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html
          schema:
            type: string
            enum:
              - requester
        - name: x-amz-tagging
          in: header
          required: false
          description: The tag-set for the object. The tag-set must be encoded as URL Query
            parameters. (For example, "Key1=Value1")
          schema:
            type: string
        - name: x-amz-object-lock-mode
          in: header
          required: false
          description: The object lock mode that you want to apply to this object.
          schema:
            type: string
            enum:
              - GOVERNANCE
              - COMPLIANCE
        - name: x-amz-object-lock-retain-until-date
          in: header
          required: false
          description: The date and time when you want this object's object lock to expire.
          schema:
            type: string
            format: date-time
        - name: x-amz-object-lock-legal-hold
          in: header
          required: false
          description: The Legal Hold status that you want to apply to the specified object.
          schema:
            type: string
            enum:
              - ON
              - OFF
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              properties:
                Body:
                  description: Object data.
                  type: string
                x-amz-meta-:
                  description: A map of metadata to store with the object in S3.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/MetadataValue"
        required: true
  "/{Bucket}/{Key}#tagging":
    delete:
      operationId: DeleteObjectTagging
      description: Removes the tag-set from an existing object.
      responses:
        "204":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteObjectTaggingOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          schema:
            type: string
            minLength: 1
        - name: versionId
          in: query
          required: false
          description: The versionId of the object that the tag-set will be removed from.
          schema:
            type: string
        - name: tagging
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    get:
      operationId: GetObjectTagging
      description: Returns the tag-set of an object.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetObjectTaggingOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          schema:
            type: string
            minLength: 1
        - name: versionId
          in: query
          required: false
          description: <p/>
          schema:
            type: string
        - name: tagging
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    put:
      operationId: PutObjectTagging
      description: Sets the supplied tag-set to an object that already exists in a bucket
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PutObjectTaggingOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          schema:
            type: string
            minLength: 1
        - name: versionId
          in: query
          required: false
          description: <p/>
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: <p/>
          schema:
            type: string
        - name: tagging
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        $ref: "#/components/requestBodies/PutBucketTaggingBody"
  "/{Bucket}#delete":
    post:
      operationId: DeleteObjects
      description: This operation enables you to delete multiple objects from a bucket
        using a single HTTP request. You may specify up to 1000 keys.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/multiobjectdeleteapi.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteObjectsOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: x-amz-mfa
          in: header
          required: false
          description: The concatenation of the authentication device's serial number, a
            space, and the value that is displayed on your authentication
            device.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for
            the request. Bucket owners need not specify this parameter in their
            requests. Documentation on downloading objects from requester pays
            buckets can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html
          schema:
            type: string
            enum:
              - requester
        - name: x-amz-bypass-governance-retention
          in: header
          required: false
          description: Specifies whether you want to delete this object even if it has a
            Governance-type object lock in place. You must have sufficient
            permissions to perform this operation.
          schema:
            type: boolean
        - name: delete
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - Delete
              properties:
                Delete:
                  description: <p/>
                  type: object
                  properties:
                    Objects:
                      $ref: "#/components/schemas/ObjectIdentifierList"
                    Quiet:
                      $ref: "#/components/schemas/Quiet"
        required: true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
  "/{Bucket}#publicAccessBlock":
    delete:
      operationId: DeletePublicAccessBlock
      description: Removes the <code>PublicAccessBlock</code> configuration from an Amazon
        S3 bucket.
      responses:
        "204":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: "The Amazon S3 bucket whose <code>PublicAccessBlock</code>
            configuration you want to delete. "
          schema:
            type: string
        - name: publicAccessBlock
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    get:
      operationId: GetPublicAccessBlock
      description: Retrieves the <code>PublicAccessBlock</code> configuration for an Amazon
        S3 bucket.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetPublicAccessBlockOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: "The name of the Amazon S3 bucket whose
            <code>PublicAccessBlock</code> configuration you want to retrieve. "
          schema:
            type: string
        - name: publicAccessBlock
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    put:
      operationId: PutPublicAccessBlock
      description: Creates or modifies the <code>PublicAccessBlock</code> configuration for
        an Amazon S3 bucket.
      responses:
        "200":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the Amazon S3 bucket whose
            <code>PublicAccessBlock</code> configuration you want to set.
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: "The MD5 hash of the <code>PutPublicAccessBlock</code> request body.
            "
          schema:
            type: string
        - name: publicAccessBlock
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - PublicAccessBlockConfiguration
              properties:
                PublicAccessBlockConfiguration:
                  description: Specifies the Block Public Access configuration for an
                    Amazon S3 bucket.
                  type: object
                  properties:
                    BlockPublicAcls:
                      $ref: "#/components/schemas/Setting"
                    IgnorePublicAcls:
                      $ref: "#/components/schemas/Setting"
                    BlockPublicPolicy:
                      $ref: "#/components/schemas/Setting"
                    RestrictPublicBuckets:
                      $ref: "#/components/schemas/Setting"
        required: true
  "/{Bucket}#accelerate":
    get:
      operationId: GetBucketAccelerateConfiguration
      description: Returns the accelerate configuration of a bucket.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetBucketAccelerateConfigurationOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: Name of the bucket for which the accelerate configuration is
            retrieved.
          schema:
            type: string
        - name: accelerate
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    put:
      operationId: PutBucketAccelerateConfiguration
      description: Sets the accelerate configuration of an existing bucket.
      responses:
        "200":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: Name of the bucket for which the accelerate configuration is set.
          schema:
            type: string
        - name: accelerate
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - AccelerateConfiguration
              properties:
                AccelerateConfiguration:
                  description: Configures the transfer acceleration state for an Amazon S3
                    bucket. For more information, see <a
                    href="https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html">Amazon
                    S3 Transfer Acceleration</a> in the <i>Amazon Simple Storage
                    Service Developer Guide</i>.
                  type: object
                  properties:
                    Status:
                      $ref: "#/components/schemas/BucketAccelerateStatus"
        required: true
  "/{Bucket}#acl":
    get:
      operationId: GetBucketAcl
      description: Gets the access control policy for the bucket.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETacl.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetBucketAclOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: acl
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    put:
      operationId: PutBucketAcl
      description: Sets the permissions on a bucket using access control lists (ACL).
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTacl.html
      responses:
        "200":
          description: Success
      parameters:
        - name: x-amz-acl
          in: header
          required: false
          description: The canned ACL to apply to the bucket.
          schema:
            type: string
            enum:
              - private
              - public-read
              - public-read-write
              - authenticated-read
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: <p/>
          schema:
            type: string
        - name: x-amz-grant-full-control
          in: header
          required: false
          description: Allows grantee the read, write, read ACP, and write ACP permissions
            on the bucket.
          schema:
            type: string
        - name: x-amz-grant-read
          in: header
          required: false
          description: Allows grantee to list the objects in the bucket.
          schema:
            type: string
        - name: x-amz-grant-read-acp
          in: header
          required: false
          description: Allows grantee to read the bucket ACL.
          schema:
            type: string
        - name: x-amz-grant-write
          in: header
          required: false
          description: Allows grantee to create, overwrite, and delete any object in the
            bucket.
          schema:
            type: string
        - name: x-amz-grant-write-acp
          in: header
          required: false
          description: Allows grantee to write the ACL for the applicable bucket.
          schema:
            type: string
        - name: acl
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        $ref: "#/components/requestBodies/PutBucketAclBody"
  "/{Bucket}#lifecycle&deprecated!":
    get:
      deprecated: true
      operationId: GetBucketLifecycle
      description: " No longer used, see the GetBucketLifecycleConfiguration operation."
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETlifecycle.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetBucketLifecycleOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: lifecycle
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    put:
      deprecated: true
      operationId: PutBucketLifecycle
      description: " No longer used, see the PutBucketLifecycleConfiguration operation."
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html
      responses:
        "200":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: <p/>
          schema:
            type: string
        - name: lifecycle
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - LifecycleConfiguration
              properties:
                LifecycleConfiguration:
                  description: <p/>
                  type: object
                  properties:
                    Rules:
                      $ref: "#/components/schemas/Rules"
        required: true
  "/{Bucket}#location":
    get:
      operationId: GetBucketLocation
      description: Returns the region the bucket resides in.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETlocation.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetBucketLocationOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: location
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
  "/{Bucket}#logging":
    get:
      operationId: GetBucketLogging
      description: Returns the logging status of a bucket and the permissions users have to
        view and modify that status. To use GET, you must be the bucket owner.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETlogging.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetBucketLoggingOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: logging
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    put:
      operationId: PutBucketLogging
      description: Set the logging parameters for a bucket and to specify permissions for
        who can view and modify the logging parameters. To set the logging
        status of a bucket, you must be the bucket owner.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTlogging.html
      responses:
        "200":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: <p/>
          schema:
            type: string
        - name: logging
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - BucketLoggingStatus
              properties:
                BucketLoggingStatus:
                  description: <p/>
                  type: object
                  properties:
                    LoggingEnabled:
                      $ref: "#/components/schemas/LoggingEnabled"
        required: true
  "/{Bucket}#notification":
    get:
      operationId: GetBucketNotificationConfiguration
      description: Returns the notification configuration of a bucket.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotificationConfiguration"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: Name of the bucket to get the notification configuration for.
          schema:
            type: string
        - name: notification
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    put:
      operationId: PutBucketNotificationConfiguration
      description: Enables notifications of specified events for a bucket.
      responses:
        "200":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: notification
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - NotificationConfiguration
              properties:
                NotificationConfiguration:
                  description: A container for specifying the notification configuration of
                    the bucket. If this element is empty, notifications are
                    turned off for the bucket.
                  type: object
                  properties:
                    TopicConfigurations:
                      $ref: "#/components/schemas/TopicConfigurationList"
                    QueueConfigurations:
                      $ref: "#/components/schemas/QueueConfigurationList"
                    LambdaFunctionConfigurations:
                      $ref: "#/components/schemas/LambdaFunctionConfigurationList"
        required: true
  "/{Bucket}#notification&deprecated!":
    get:
      deprecated: true
      operationId: GetBucketNotification
      description: " No longer used, see the GetBucketNotificationConfiguration operation."
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETnotification.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotificationConfigurationDeprecated"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: Name of the bucket to get the notification configuration for.
          schema:
            type: string
        - name: notification
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    put:
      deprecated: true
      operationId: PutBucketNotification
      description: " No longer used, see the PutBucketNotificationConfiguration operation."
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTnotification.html
      responses:
        "200":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: <p/>
          schema:
            type: string
        - name: notification
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - NotificationConfiguration
              properties:
                NotificationConfiguration:
                  description: <p/>
                  type: object
                  example:
                    QueueConfiguration:
                      Event: s3:ObjectCreated:Put
                      Events:
                        - s3:ObjectCreated:Put
                      Id: MDQ2OGQ4NDEtOTBmNi00YTM4LTk0NzYtZDIwN2I3NWQ1NjIx
                      Queue: arn:aws:sqs:us-east-1:acct-id:S3ObjectCreatedEventQueue
                    TopicConfiguration:
                      Event: s3:ObjectCreated:Copy
                      Events:
                        - s3:ObjectCreated:Copy
                      Id: YTVkMWEzZGUtNTY1NS00ZmE2LWJjYjktMmRlY2QwODFkNTJi
                      Topic: arn:aws:sns:us-east-1:acct-id:S3ObjectCreatedEventTopic
                  properties:
                    TopicConfiguration:
                      $ref: "#/components/schemas/TopicConfigurationDeprecated"
                    QueueConfiguration:
                      $ref: "#/components/schemas/QueueConfigurationDeprecated"
                    CloudFunctionConfiguration:
                      $ref: "#/components/schemas/CloudFunctionConfiguration"
        required: true
  "/{Bucket}#policyStatus":
    get:
      operationId: GetBucketPolicyStatus
      description: Retrieves the policy status for an Amazon S3 bucket, indicating whether
        the bucket is public.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetBucketPolicyStatusOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the Amazon S3 bucket whose policy status you want to
            retrieve.
          schema:
            type: string
        - name: policyStatus
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
  "/{Bucket}#requestPayment":
    get:
      operationId: GetBucketRequestPayment
      description: Returns the request payment configuration of a bucket.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTrequestPaymentGET.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetBucketRequestPaymentOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: requestPayment
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    put:
      operationId: PutBucketRequestPayment
      description: Sets the request payment configuration for a bucket. By default, the
        bucket owner pays for downloads from the bucket. This configuration
        parameter enables the bucket owner (only) to specify that the person
        requesting the download will be charged for the download. Documentation
        on requester pays buckets can be found at
        http://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTrequestPaymentPUT.html
      responses:
        "200":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: <p/>
          schema:
            type: string
        - name: requestPayment
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - RequestPaymentConfiguration
              properties:
                RequestPaymentConfiguration:
                  description: <p/>
                  type: object
                  properties:
                    Payer:
                      $ref: "#/components/schemas/Payer"
        required: true
  "/{Bucket}#versioning":
    get:
      operationId: GetBucketVersioning
      description: Returns the versioning state of a bucket.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETversioningStatus.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetBucketVersioningOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: versioning
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    put:
      operationId: PutBucketVersioning
      description: Sets the versioning state of an existing bucket. To set the versioning
        state, you must be the bucket owner.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html
      responses:
        "200":
          description: Success
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: <p/>
          schema:
            type: string
        - name: x-amz-mfa
          in: header
          required: false
          description: The concatenation of the authentication device's serial number, a
            space, and the value that is displayed on your authentication
            device.
          schema:
            type: string
        - name: versioning
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - VersioningConfiguration
              properties:
                VersioningConfiguration:
                  description: Describes the versioning state of an Amazon S3 bucket. For
                    more information, see <a
                    href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html">PUT
                    Bucket versioning</a> in the <i>Amazon Simple Storage
                    Service API Reference</i>.
                  type: object
                  properties:
                    MFADelete:
                      $ref: "#/components/schemas/MFADelete"
                    Status:
                      $ref: "#/components/schemas/BucketVersioningStatus"
        required: true
  "/{Bucket}/{Key}#acl":
    get:
      operationId: GetObjectAcl
      description: Returns the access control list (ACL) of an object.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectGETacl.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetObjectAclOutput"
        "480":
          description: NoSuchKey
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchKey"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          schema:
            type: string
            minLength: 1
        - name: versionId
          in: query
          required: false
          description: VersionId used to reference a specific version of the object.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for
            the request. Bucket owners need not specify this parameter in their
            requests. Documentation on downloading objects from requester pays
            buckets can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html
          schema:
            type: string
            enum:
              - requester
        - name: acl
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    put:
      operationId: PutObjectAcl
      description: uses the acl subresource to set the access control list (ACL)
        permissions for an object that already exists in a bucket
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectPUTacl.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PutObjectAclOutput"
        "480":
          description: NoSuchKey
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchKey"
      parameters:
        - name: x-amz-acl
          in: header
          required: false
          description: The canned ACL to apply to the object.
          schema:
            type: string
            enum:
              - private
              - public-read
              - public-read-write
              - authenticated-read
              - aws-exec-read
              - bucket-owner-read
              - bucket-owner-full-control
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: <p/>
          schema:
            type: string
        - name: x-amz-grant-full-control
          in: header
          required: false
          description: Allows grantee the read, write, read ACP, and write ACP permissions
            on the bucket.
          schema:
            type: string
        - name: x-amz-grant-read
          in: header
          required: false
          description: Allows grantee to list the objects in the bucket.
          schema:
            type: string
        - name: x-amz-grant-read-acp
          in: header
          required: false
          description: Allows grantee to read the bucket ACL.
          schema:
            type: string
        - name: x-amz-grant-write
          in: header
          required: false
          description: Allows grantee to create, overwrite, and delete any object in the
            bucket.
          schema:
            type: string
        - name: x-amz-grant-write-acp
          in: header
          required: false
          description: Allows grantee to write the ACL for the applicable bucket.
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          schema:
            type: string
            minLength: 1
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for
            the request. Bucket owners need not specify this parameter in their
            requests. Documentation on downloading objects from requester pays
            buckets can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html
          schema:
            type: string
            enum:
              - requester
        - name: versionId
          in: query
          required: false
          description: VersionId used to reference a specific version of the object.
          schema:
            type: string
        - name: acl
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        $ref: "#/components/requestBodies/PutBucketAclBody"
  "/{Bucket}/{Key}#legal-hold":
    get:
      operationId: GetObjectLegalHold
      description: Gets an object's current Legal Hold status.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetObjectLegalHoldOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The bucket containing the object whose Legal Hold status you want to
            retrieve.
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: The key name for the object whose Legal Hold status you want to
            retrieve.
          schema:
            type: string
            minLength: 1
        - name: versionId
          in: query
          required: false
          description: The version ID of the object whose Legal Hold status you want to
            retrieve.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for
            the request. Bucket owners need not specify this parameter in their
            requests. Documentation on downloading objects from requester pays
            buckets can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html
          schema:
            type: string
            enum:
              - requester
        - name: legal-hold
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    put:
      operationId: PutObjectLegalHold
      description: Applies a Legal Hold configuration to the specified object.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PutObjectLegalHoldOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The bucket containing the object that you want to place a Legal Hold
            on.
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: The key name for the object that you want to place a Legal Hold on.
          schema:
            type: string
            minLength: 1
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for
            the request. Bucket owners need not specify this parameter in their
            requests. Documentation on downloading objects from requester pays
            buckets can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html
          schema:
            type: string
            enum:
              - requester
        - name: versionId
          in: query
          required: false
          description: The version ID of the object that you want to place a Legal Hold on.
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: The MD5 hash for the request body.
          schema:
            type: string
        - name: legal-hold
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              properties:
                LegalHold:
                  description: A Legal Hold configuration for an object.
                  type: object
                  properties:
                    Status:
                      $ref: "#/components/schemas/ObjectLockLegalHoldStatus"
        required: true
  "/{Bucket}#object-lock":
    get:
      operationId: GetObjectLockConfiguration
      description: Gets the object lock configuration for a bucket. The rule specified in
        the object lock configuration will be applied by default to every new
        object placed in the specified bucket.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetObjectLockConfigurationOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The bucket whose object lock configuration you want to retrieve.
          schema:
            type: string
        - name: object-lock
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    put:
      operationId: PutObjectLockConfiguration
      description: Places an object lock configuration on the specified bucket. The rule
        specified in the object lock configuration will be applied by default to
        every new object placed in the specified bucket.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PutObjectLockConfigurationOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The bucket whose object lock configuration you want to create or
            replace.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for
            the request. Bucket owners need not specify this parameter in their
            requests. Documentation on downloading objects from requester pays
            buckets can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html
          schema:
            type: string
            enum:
              - requester
        - name: x-amz-bucket-object-lock-token
          in: header
          required: false
          description: A token to allow Amazon S3 object lock to be enabled for an existing
            bucket.
          schema:
            type: string
        - name: Content-MD5
          in: header
          required: false
          description: The MD5 hash for the request body.
          schema:
            type: string
        - name: object-lock
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              properties:
                ObjectLockConfiguration:
                  description: The container element for object lock configuration
                    parameters.
                  type: object
                  properties:
                    ObjectLockEnabled:
                      $ref: "#/components/schemas/ObjectLockEnabled"
                    Rule:
                      $ref: "#/components/schemas/ObjectLockRule"
        required: true
  "/{Bucket}/{Key}#retention":
    get:
      operationId: GetObjectRetention
      description: Retrieves an object's retention settings.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetObjectRetentionOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The bucket containing the object whose retention settings you want
            to retrieve.
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: The key name for the object whose retention settings you want to
            retrieve.
          schema:
            type: string
            minLength: 1
        - name: versionId
          in: query
          required: false
          description: The version ID for the object whose retention settings you want to
            retrieve.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for
            the request. Bucket owners need not specify this parameter in their
            requests. Documentation on downloading objects from requester pays
            buckets can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html
          schema:
            type: string
            enum:
              - requester
        - name: retention
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
    put:
      operationId: PutObjectRetention
      description: Places an Object Retention configuration on an object.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PutObjectRetentionOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The bucket that contains the object you want to apply this Object
            Retention configuration to.
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: The key name for the object that you want to apply this Object
            Retention configuration to.
          schema:
            type: string
            minLength: 1
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for
            the request. Bucket owners need not specify this parameter in their
            requests. Documentation on downloading objects from requester pays
            buckets can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html
          schema:
            type: string
            enum:
              - requester
        - name: versionId
          in: query
          required: false
          description: The version ID for the object that you want to apply this Object
            Retention configuration to.
          schema:
            type: string
        - name: x-amz-bypass-governance-retention
          in: header
          required: false
          description: Indicates whether this operation should bypass Governance-mode
            restrictions.j
          schema:
            type: boolean
        - name: Content-MD5
          in: header
          required: false
          description: The MD5 hash for the request body.
          schema:
            type: string
        - name: retention
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              properties:
                Retention:
                  description: A Retention configuration for an object.
                  type: object
                  properties:
                    Mode:
                      $ref: "#/components/schemas/ObjectLockRetentionMode"
                    RetainUntilDate:
                      $ref: "#/components/schemas/Date"
        required: true
  "/{Bucket}/{Key}#torrent":
    get:
      operationId: GetObjectTorrent
      description: Return torrent files from a bucket.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectGETtorrent.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetObjectTorrentOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          schema:
            type: string
            minLength: 1
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for
            the request. Bucket owners need not specify this parameter in their
            requests. Documentation on downloading objects from requester pays
            buckets can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html
          schema:
            type: string
            enum:
              - requester
        - name: torrent
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
  "/{Bucket}#analytics":
    get:
      operationId: ListBucketAnalyticsConfigurations
      description: Lists the analytics configurations for the bucket.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListBucketAnalyticsConfigurationsOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket from which analytics configurations are
            retrieved.
          schema:
            type: string
        - name: continuation-token
          in: query
          required: false
          description: The ContinuationToken that represents a placeholder from where this
            request should begin.
          schema:
            type: string
        - name: analytics
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
  "/{Bucket}#inventory":
    get:
      operationId: ListBucketInventoryConfigurations
      description: Returns a list of inventory configurations for the bucket.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListBucketInventoryConfigurationsOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket containing the inventory configurations to
            retrieve.
          schema:
            type: string
        - name: continuation-token
          in: query
          required: false
          description: The marker used to continue an inventory configuration listing that
            has been truncated. Use the NextContinuationToken from a previously
            truncated list response to continue the listing. The continuation
            token is an opaque value that Amazon S3 understands.
          schema:
            type: string
        - name: inventory
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
  "/{Bucket}#metrics":
    get:
      operationId: ListBucketMetricsConfigurations
      description: Lists the metrics configurations for the bucket.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListBucketMetricsConfigurationsOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The name of the bucket containing the metrics configurations to
            retrieve.
          schema:
            type: string
        - name: continuation-token
          in: query
          required: false
          description: The marker that is used to continue a metrics configuration listing
            that has been truncated. Use the NextContinuationToken from a
            previously truncated list response to continue the listing. The
            continuation token is an opaque value that Amazon S3 understands.
          schema:
            type: string
        - name: metrics
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
  /:
    get:
      operationId: ListBuckets
      description: Returns a list of all buckets owned by the authenticated sender of the
        request.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTServiceGET.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListBucketsOutput"
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
  "/{Bucket}#uploads":
    get:
      operationId: ListMultipartUploads
      description: This operation lists in-progress multipart uploads.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadListMPUpload.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListMultipartUploadsOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: delimiter
          in: query
          required: false
          description: Character you use to group keys.
          schema:
            type: string
        - name: encoding-type
          in: query
          required: false
          description: Requests Amazon S3 to encode the object keys in the response and
            specifies the encoding method to use. An object key may contain any
            Unicode character; however, XML 1.0 parser cannot parse some
            characters, such as characters with an ASCII value from 0 to 10. For
            characters that are not supported in XML 1.0, you can add this
            parameter to request that Amazon S3 encode the keys in the response.
          schema:
            type: string
            enum:
              - url
        - name: key-marker
          in: query
          required: false
          description: Together with upload-id-marker, this parameter specifies the
            multipart upload after which listing should begin.
          schema:
            type: string
        - name: max-uploads
          in: query
          required: false
          description: Sets the maximum number of multipart uploads, from 1 to 1,000, to
            return in the response body. 1,000 is the maximum number of uploads
            that can be returned in a response.
          schema:
            type: integer
        - name: prefix
          in: query
          required: false
          description: Lists in-progress uploads only for those keys that begin with the
            specified prefix.
          schema:
            type: string
        - name: upload-id-marker
          in: query
          required: false
          description: Together with key-marker, specifies the multipart upload after which
            listing should begin. If key-marker is not specified, the
            upload-id-marker parameter is ignored.
          schema:
            type: string
        - name: MaxUploads
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: KeyMarker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: UploadIdMarker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: uploads
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
  "/{Bucket}#versions":
    get:
      operationId: ListObjectVersions
      description: Returns metadata about all of the versions of objects in a bucket.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTBucketGETVersion.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListObjectVersionsOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: delimiter
          in: query
          required: false
          description: A delimiter is a character you use to group keys.
          schema:
            type: string
        - name: encoding-type
          in: query
          required: false
          description: Requests Amazon S3 to encode the object keys in the response and
            specifies the encoding method to use. An object key may contain any
            Unicode character; however, XML 1.0 parser cannot parse some
            characters, such as characters with an ASCII value from 0 to 10. For
            characters that are not supported in XML 1.0, you can add this
            parameter to request that Amazon S3 encode the keys in the response.
          schema:
            type: string
            enum:
              - url
        - name: key-marker
          in: query
          required: false
          description: Specifies the key to start with when listing objects in a bucket.
          schema:
            type: string
        - name: max-keys
          in: query
          required: false
          description: Sets the maximum number of keys returned in the response. The
            response might contain fewer keys but will never contain more.
          schema:
            type: integer
        - name: prefix
          in: query
          required: false
          description: Limits the response to keys that begin with the specified prefix.
          schema:
            type: string
        - name: version-id-marker
          in: query
          required: false
          description: Specifies the object version you want to start listing from.
          schema:
            type: string
        - name: MaxKeys
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: KeyMarker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: VersionIdMarker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: versions
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
  "/{Bucket}#list-type=2":
    get:
      operationId: ListObjectsV2
      description: "Returns some or all (up to 1000) of the objects in a bucket. You can
        use the request parameters as selection criteria to return a subset of
        the objects in a bucket. Note: ListObjectsV2 is the revised List Objects
        API and we recommend you use this revised API for new application
        development."
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListObjectsV2Output"
        "480":
          description: NoSuchBucket
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchBucket"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: Name of the bucket to list.
          schema:
            type: string
        - name: delimiter
          in: query
          required: false
          description: A delimiter is a character you use to group keys.
          schema:
            type: string
        - name: encoding-type
          in: query
          required: false
          description: Requests Amazon S3 to encode the object keys in the response and
            specifies the encoding method to use. An object key may contain any
            Unicode character; however, XML 1.0 parser cannot parse some
            characters, such as characters with an ASCII value from 0 to 10. For
            characters that are not supported in XML 1.0, you can add this
            parameter to request that Amazon S3 encode the keys in the response.
          schema:
            type: string
            enum:
              - url
        - name: max-keys
          in: query
          required: false
          description: Sets the maximum number of keys returned in the response. The
            response might contain fewer keys but will never contain more.
          schema:
            type: integer
        - name: prefix
          in: query
          required: false
          description: Limits the response to keys that begin with the specified prefix.
          schema:
            type: string
        - name: continuation-token
          in: query
          required: false
          description: ContinuationToken indicates Amazon S3 that the list is being
            continued on this bucket with a token. ContinuationToken is
            obfuscated and is not a real key
          schema:
            type: string
        - name: fetch-owner
          in: query
          required: false
          description: The owner field is not present in listV2 by default, if you want to
            return owner field with each key in the result then set the fetch
            owner field to true
          schema:
            type: boolean
        - name: start-after
          in: query
          required: false
          description: StartAfter is where you want Amazon S3 to start listing from. Amazon
            S3 starts listing after this specified key. StartAfter can be any
            key in the bucket
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for
            the request. Bucket owners need not specify this parameter in their
            requests. Documentation on downloading objects from requester pays
            buckets can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html
          schema:
            type: string
            enum:
              - requester
        - name: MaxKeys
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: ContinuationToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: list-type
          in: query
          required: true
          schema:
            type: string
            enum:
              - "2"
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
  "/{Bucket}/{Key}#restore":
    post:
      operationId: RestoreObject
      description: Restores an archived copy of an object back into Amazon S3
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectRestore.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RestoreObjectOutput"
        "480":
          description: ObjectAlreadyInActiveTierError
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ObjectAlreadyInActiveTierError"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          schema:
            type: string
            minLength: 1
        - name: versionId
          in: query
          required: false
          description: <p/>
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for
            the request. Bucket owners need not specify this parameter in their
            requests. Documentation on downloading objects from requester pays
            buckets can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html
          schema:
            type: string
            enum:
              - requester
        - name: restore
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              properties:
                RestoreRequest:
                  description: Container for restore job parameters.
                  type: object
                  properties:
                    Days:
                      $ref: "#/components/schemas/Days"
                    GlacierJobParameters:
                      $ref: "#/components/schemas/GlacierJobParameters"
                    Type:
                      $ref: "#/components/schemas/RestoreRequestType"
                    Tier:
                      $ref: "#/components/schemas/Tier"
                    Description:
                      $ref: "#/components/schemas/Description"
                    SelectParameters:
                      $ref: "#/components/schemas/SelectParameters"
                    OutputLocation:
                      $ref: "#/components/schemas/OutputLocation"
        required: true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
  "/{Bucket}/{Key}#select&select-type=2":
    post:
      operationId: SelectObjectContent
      description: This operation filters the contents of an Amazon S3 object based on a
        simple Structured Query Language (SQL) statement. In the request, along
        with the SQL expression, you must also specify a data serialization
        format (JSON or CSV) of the object. Amazon S3 uses this to parse object
        data into records, and returns only records that match the specified SQL
        expression. You must also specify the data serialization format for the
        response.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SelectObjectContentOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: The S3 bucket.
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: The object key.
          schema:
            type: string
            minLength: 1
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: 'The SSE Algorithm used to encrypt the object. For more information,
            see <a
            href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">
            Server-Side Encryption (Using Customer-Provided Encryption Keys</a>.
            '
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: 'The SSE Customer Key. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">
            Server-Side Encryption (Using Customer-Provided Encryption Keys</a>.
            '
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: 'The SSE Customer Key MD5. For more information, see <a
            href="https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html">
            Server-Side Encryption (Using Customer-Provided Encryption Keys</a>.
            '
          schema:
            type: string
        - name: select
          in: query
          required: true
          allowEmptyValue: true
          schema:
            type: boolean
            enum:
              - true
        - name: select-type
          in: query
          required: true
          schema:
            type: string
            enum:
              - "2"
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - Expression
                - ExpressionType
                - InputSerialization
                - OutputSerialization
              properties:
                Expression:
                  description: The expression that is used to query the object.
                  type: string
                ExpressionType:
                  description: The type of the provided expression (for example., SQL).
                  type: string
                  enum:
                    - SQL
                RequestProgress:
                  description: <p/>
                  type: object
                  properties:
                    Enabled:
                      $ref: "#/components/schemas/EnableRequestProgress"
                InputSerialization:
                  description: Describes the serialization format of the object.
                  type: object
                  properties:
                    CSV:
                      $ref: "#/components/schemas/CSVInput"
                    CompressionType:
                      $ref: "#/components/schemas/CompressionType"
                    JSON:
                      $ref: "#/components/schemas/JSONInput"
                    Parquet:
                      $ref: "#/components/schemas/ParquetInput"
                OutputSerialization:
                  description: Describes how results of the Select job are serialized.
                  type: object
                  properties:
                    CSV:
                      $ref: "#/components/schemas/CSVOutput"
                    JSON:
                      $ref: "#/components/schemas/JSONOutput"
        required: true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
  "/{Bucket}/{Key}#partNumber&uploadId":
    put:
      operationId: UploadPart
      description: <p>Uploads a part in a multipart upload.</p> <p> <b>Note:</b> After you
        initiate multipart upload and upload one or more parts, you must either
        complete or abort multipart upload in order to stop getting charged for
        storage of the uploaded parts. Only after you either complete or abort
        multipart upload, Amazon S3 frees up the parts storage and stops
        charging you for the parts storage.</p>
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadUploadPart.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UploadPartOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: Name of the bucket to which the multipart upload was initiated.
          schema:
            type: string
        - name: Content-Length
          in: header
          required: false
          description: Size of the body in bytes. This parameter is useful when the size of
            the body cannot be determined automatically.
          schema:
            type: integer
        - name: Content-MD5
          in: header
          required: false
          description: The base64-encoded 128-bit MD5 digest of the part data. This
            parameter is auto-populated when using the command from the CLI.
            This parameted is required if object lock parameters are specified.
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: Object key for which the multipart upload was initiated.
          schema:
            type: string
            minLength: 1
        - name: partNumber
          in: query
          required: true
          description: Part number of part being uploaded. This is a positive integer
            between 1 and 10,000.
          schema:
            type: integer
        - name: uploadId
          in: query
          required: true
          description: Upload ID identifying the multipart upload whose part is being
            uploaded.
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: Specifies the algorithm to use to when encrypting the object (e.g.,
            AES256).
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use
            in encrypting data. This value is used to store the object and then
            it is discarded; Amazon does not store the encryption key. The key
            must be appropriate for use with the algorithm specified in the
            x-amz-server-side​-encryption​-customer-algorithm header. This must
            be the same encryption key specified in the initiate multipart
            upload request.
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to
            RFC 1321. Amazon S3 uses this header for a message integrity check
            to ensure the encryption key was transmitted without error.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for
            the request. Bucket owners need not specify this parameter in their
            requests. Documentation on downloading objects from requester pays
            buckets can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html
          schema:
            type: string
            enum:
              - requester
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              properties:
                Body:
                  description: Object data.
                  type: string
        required: true
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
  "/{Bucket}/{Key}#x-amz-copy-source&partNumber&uploadId":
    put:
      operationId: UploadPartCopy
      description: Uploads a part by copying data from an existing object as data source.
      externalDocs:
        url: http://docs.amazonwebservices.com/AmazonS3/latest/API/mpUploadUploadPartCopy.html
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UploadPartCopyOutput"
      parameters:
        - name: Bucket
          in: path
          required: true
          description: <p/>
          schema:
            type: string
        - name: x-amz-copy-source
          in: header
          required: true
          description: The name of the source bucket and key name of the source object,
            separated by a slash (/). Must be URL-encoded.
          schema:
            type: string
            pattern: \/.+\/.+
        - name: x-amz-copy-source-if-match
          in: header
          required: false
          description: Copies the object if its entity tag (ETag) matches the specified tag.
          schema:
            type: string
        - name: x-amz-copy-source-if-modified-since
          in: header
          required: false
          description: Copies the object if it has been modified since the specified time.
          schema:
            type: string
            format: date-time
        - name: x-amz-copy-source-if-none-match
          in: header
          required: false
          description: Copies the object if its entity tag (ETag) is different than the
            specified ETag.
          schema:
            type: string
        - name: x-amz-copy-source-if-unmodified-since
          in: header
          required: false
          description: Copies the object if it hasn't been modified since the specified
            time.
          schema:
            type: string
            format: date-time
        - name: x-amz-copy-source-range
          in: header
          required: false
          description: The range of bytes to copy from the source object. The range value
            must use the form bytes=first-last, where the first and last are the
            zero-based byte offsets to copy. For example, bytes=0-9 indicates
            that you want to copy the first ten bytes of the source. You can
            copy a range only if the source object is greater than 5 MB.
          schema:
            type: string
        - name: Key
          in: path
          required: true
          description: <p/>
          schema:
            type: string
            minLength: 1
        - name: partNumber
          in: query
          required: true
          description: Part number of part being copied. This is a positive integer between
            1 and 10,000.
          schema:
            type: integer
        - name: uploadId
          in: query
          required: true
          description: Upload ID identifying the multipart upload whose part is being
            copied.
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: Specifies the algorithm to use to when encrypting the object (e.g.,
            AES256).
          schema:
            type: string
        - name: x-amz-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use
            in encrypting data. This value is used to store the object and then
            it is discarded; Amazon does not store the encryption key. The key
            must be appropriate for use with the algorithm specified in the
            x-amz-server-side​-encryption​-customer-algorithm header. This must
            be the same encryption key specified in the initiate multipart
            upload request.
          schema:
            type: string
            format: password
        - name: x-amz-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to
            RFC 1321. Amazon S3 uses this header for a message integrity check
            to ensure the encryption key was transmitted without error.
          schema:
            type: string
        - name: x-amz-copy-source-server-side-encryption-customer-algorithm
          in: header
          required: false
          description: Specifies the algorithm to use when decrypting the source object
            (e.g., AES256).
          schema:
            type: string
        - name: x-amz-copy-source-server-side-encryption-customer-key
          in: header
          required: false
          description: Specifies the customer-provided encryption key for Amazon S3 to use
            to decrypt the source object. The encryption key provided in this
            header must be one that was used when the source object was created.
          schema:
            type: string
            format: password
        - name: x-amz-copy-source-server-side-encryption-customer-key-MD5
          in: header
          required: false
          description: Specifies the 128-bit MD5 digest of the encryption key according to
            RFC 1321. Amazon S3 uses this header for a message integrity check
            to ensure the encryption key was transmitted without error.
          schema:
            type: string
        - name: x-amz-request-payer
          in: header
          required: false
          description: Confirms that the requester knows that she or he will be charged for
            the request. Bucket owners need not specify this parameter in their
            requests. Documentation on downloading objects from requester pays
            buckets can be found at
            http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html
          schema:
            type: string
            enum:
              - requester
    parameters:
      - $ref: "#/components/parameters/x-amz-security-token"
servers:
  - url: http://s3{dash-or-dot}{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - eu-west-1
          - ap-northeast-1
          - ap-southeast-1
          - ap-southeast-2
          - sa-east-1
        default: us-east-1
      dash-or-dot:
        description: The service/region URL separator
        enum:
          - .
          - "-"
        default: .
    description: The Amazon S3 multi-region endpoint
  - url: https://s3{dash-or-dot}{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - eu-west-1
          - ap-northeast-1
          - ap-southeast-1
          - ap-southeast-2
          - sa-east-1
        default: us-east-1
      dash-or-dot:
        description: The service/region URL separator
        enum:
          - .
          - "-"
        default: .
    description: The Amazon S3 multi-region endpoint
  - url: http://s3.amazonaws.com
    variables: {}
    description: The general Amazon S3 endpoint for US East (N. Virginia)
  - url: https://s3.amazonaws.com
    variables: {}
    description: The general Amazon S3 endpoint for US East (N. Virginia)
  - url: http://s3.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-2
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-south-1
        default: us-east-2
    description: The Amazon S3 multi-region endpoint
  - url: https://s3.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-2
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-south-1
        default: us-east-2
    description: The Amazon S3 multi-region endpoint
  - url: http://s3.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon S3 endpoint for China (Beijing) and China (Ningxia)
  - url: https://s3.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon S3 endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    x-amz-security-token:
      name: x-amz-security-token
      in: header
      required: false
      schema:
        type: string
  requestBodies:
    PutBucketTaggingBody:
      content:
        text/xml:
          schema:
            type: object
            required:
              - Tagging
            properties:
              Tagging:
                description: <p/>
                type: object
                properties:
                  TagSet:
                    $ref: "#/components/schemas/TagSet"
      required: true
    PutBucketAclBody:
      content:
        text/xml:
          schema:
            type: object
            properties:
              AccessControlPolicy:
                description: Contains the elements that set the ACL permissions for an
                  object per grantee.
                type: object
                properties:
                  Grants:
                    $ref: "#/components/schemas/Grants"
                  Owner:
                    $ref: "#/components/schemas/Owner"
      required: true
    CopyObjectBody:
      content:
        text/xml:
          schema:
            type: object
            properties:
              x-amz-meta-:
                description: A map of metadata to store with the object in S3.
                type: object
                additionalProperties:
                  $ref: "#/components/schemas/MetadataValue"
      required: true
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon S3 signature
      x-amazon-apigateway-authtype: awsS3
  schemas:
    AbortMultipartUploadOutput:
      type: object
      example: {}
      properties: {}
    NoSuchUpload: {}
    CompleteMultipartUploadOutput:
      type: object
      example:
        Bucket: acexamplebucket
        ETag: '"4d9031c7644d8081c2829f4ea23c55f7-2"'
        Key: bigobject
        Location: https://examplebucket.s3.amazonaws.com/bigobject
      properties:
        Location:
          $ref: "#/components/schemas/Location"
        Bucket:
          $ref: "#/components/schemas/BucketName"
        Key:
          $ref: "#/components/schemas/ObjectKey"
        ETag:
          $ref: "#/components/schemas/ETag"
    CompletedPartList:
      type: array
      items:
        $ref: "#/components/schemas/CompletedPart"
      xml:
        wrapped: false
    CopyObjectOutput:
      type: object
      example:
        CopyObjectResult:
          ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
          LastModified: 2016-12-15T17:38:53.000Z
      properties:
        CopyObjectResult:
          $ref: "#/components/schemas/CopyObjectResult"
    MetadataValue:
      type: string
    ObjectNotInActiveTierError: {}
    CreateBucketOutput:
      type: object
      example:
        Location: /examplebucket
      properties: {}
    BucketLocationConstraint:
      type: string
      enum:
        - EU
        - eu-west-1
        - us-west-1
        - us-west-2
        - ap-south-1
        - ap-southeast-1
        - ap-southeast-2
        - ap-northeast-1
        - sa-east-1
        - cn-north-1
        - eu-central-1
    BucketAlreadyExists: {}
    BucketAlreadyOwnedByYou: {}
    CreateMultipartUploadOutput:
      type: object
      example:
        Bucket: examplebucket
        Key: largeobject
        UploadId: ibZBv_75gd9r8lH_gqXatLdxMVpAlj6ZQjEs.OwyF3953YdwbcQnMA2BLGn8Lx12fQNICtMw5KyteFeHw.Sjng--
      properties:
        Bucket:
          $ref: "#/components/schemas/BucketName"
        Key:
          $ref: "#/components/schemas/ObjectKey"
        UploadId:
          $ref: "#/components/schemas/MultipartUploadId"
    DeleteObjectOutput:
      type: object
      example: {}
      properties: {}
    DeleteObjectTaggingOutput:
      type: object
      example:
        VersionId: ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI
      properties: {}
    DeleteObjectsOutput:
      type: object
      example:
        Deleted:
          - DeleteMarker: "true"
            DeleteMarkerVersionId: A._w1z6EFiCF5uhtQMDal9JDkID9tQ7F
            Key: objectkey1
          - DeleteMarker: "true"
            DeleteMarkerVersionId: iOd_ORxhkKe_e8G8_oSGxt2PjsCZKlkt
            Key: objectkey2
      properties:
        Deleted:
          $ref: "#/components/schemas/DeletedObjects"
        Errors:
          $ref: "#/components/schemas/Errors"
    ObjectIdentifierList:
      type: array
      items:
        $ref: "#/components/schemas/ObjectIdentifier"
      xml:
        wrapped: false
    Quiet:
      type: boolean
    GetBucketAccelerateConfigurationOutput:
      type: object
      properties:
        Status:
          $ref: "#/components/schemas/BucketAccelerateStatus"
    GetBucketAclOutput:
      type: object
      properties:
        Owner:
          $ref: "#/components/schemas/Owner"
        Grants:
          $ref: "#/components/schemas/Grants"
    GetBucketAnalyticsConfigurationOutput:
      type: object
      properties:
        AnalyticsConfiguration:
          $ref: "#/components/schemas/AnalyticsConfiguration"
    GetBucketCorsOutput:
      type: object
      example:
        CORSRules:
          - AllowedHeaders:
              - Authorization
            AllowedMethods:
              - GET
            AllowedOrigins:
              - "*"
            MaxAgeSeconds: 3000
      properties:
        CORSRules:
          $ref: "#/components/schemas/CORSRules"
    GetBucketEncryptionOutput:
      type: object
      properties:
        ServerSideEncryptionConfiguration:
          $ref: "#/components/schemas/ServerSideEncryptionConfiguration"
    GetBucketInventoryConfigurationOutput:
      type: object
      properties:
        InventoryConfiguration:
          $ref: "#/components/schemas/InventoryConfiguration"
    GetBucketLifecycleOutput:
      type: object
      example:
        Rules:
          - Expiration:
              Days: 1
            ID: delete logs
            Prefix: 123/
            Status: Enabled
      properties:
        Rules:
          $ref: "#/components/schemas/Rules"
    GetBucketLifecycleConfigurationOutput:
      type: object
      example:
        Rules:
          - ID: Rule for TaxDocs/
            Prefix: TaxDocs
            Status: Enabled
            Transitions:
              - Days: 365
                StorageClass: STANDARD_IA
      properties:
        Rules:
          $ref: "#/components/schemas/LifecycleRules"
    GetBucketLocationOutput:
      type: object
      example:
        LocationConstraint: us-west-2
      properties:
        LocationConstraint:
          $ref: "#/components/schemas/BucketLocationConstraint"
    GetBucketLoggingOutput:
      type: object
      properties:
        LoggingEnabled:
          $ref: "#/components/schemas/LoggingEnabled"
    GetBucketMetricsConfigurationOutput:
      type: object
      properties:
        MetricsConfiguration:
          $ref: "#/components/schemas/MetricsConfiguration"
    NotificationConfigurationDeprecated:
      type: object
      example:
        QueueConfiguration:
          Event: s3:ObjectCreated:Put
          Events:
            - s3:ObjectCreated:Put
          Id: MDQ2OGQ4NDEtOTBmNi00YTM4LTk0NzYtZDIwN2I3NWQ1NjIx
          Queue: arn:aws:sqs:us-east-1:acct-id:S3ObjectCreatedEventQueue
        TopicConfiguration:
          Event: s3:ObjectCreated:Copy
          Events:
            - s3:ObjectCreated:Copy
          Id: YTVkMWEzZGUtNTY1NS00ZmE2LWJjYjktMmRlY2QwODFkNTJi
          Topic: arn:aws:sns:us-east-1:acct-id:S3ObjectCreatedEventTopic
      properties:
        TopicConfiguration:
          $ref: "#/components/schemas/TopicConfigurationDeprecated"
        QueueConfiguration:
          $ref: "#/components/schemas/QueueConfigurationDeprecated"
        CloudFunctionConfiguration:
          $ref: "#/components/schemas/CloudFunctionConfiguration"
    NotificationConfiguration:
      type: object
      properties:
        TopicConfigurations:
          $ref: "#/components/schemas/TopicConfigurationList"
        QueueConfigurations:
          $ref: "#/components/schemas/QueueConfigurationList"
        LambdaFunctionConfigurations:
          $ref: "#/components/schemas/LambdaFunctionConfigurationList"
      description: A container for specifying the notification configuration of the bucket.
        If this element is empty, notifications are turned off for the bucket.
    GetBucketPolicyOutput:
      type: object
      example:
        Policy: '{"Version":"2008-10-17","Id":"LogPolicy","Statement":[{"Sid":"Enables
          the log delivery group to publish logs to your bucket
          ","Effect":"Allow","Principal":{"AWS":"111122223333"},"Action":["s3:GetBucketAcl","s3:GetObjectAcl","s3:PutObject"],"Resource":["arn:aws:s3:::policytest1/*","arn:aws:s3:::policytest1"]}]}'
      properties:
        Policy:
          $ref: "#/components/schemas/Policy"
    GetBucketPolicyStatusOutput:
      type: object
      properties:
        PolicyStatus:
          $ref: "#/components/schemas/PolicyStatus"
    GetBucketReplicationOutput:
      type: object
      example:
        ReplicationConfiguration:
          Role: arn:aws:iam::acct-id:role/example-role
          Rules:
            - Destination:
                Bucket: arn:aws:s3:::destination-bucket
              ID: MWIwNTkwZmItMTE3MS00ZTc3LWJkZDEtNzRmODQwYzc1OTQy
              Prefix: Tax
              Status: Enabled
      properties:
        ReplicationConfiguration:
          $ref: "#/components/schemas/ReplicationConfiguration"
    GetBucketRequestPaymentOutput:
      type: object
      example:
        Payer: BucketOwner
      properties:
        Payer:
          $ref: "#/components/schemas/Payer"
    GetBucketTaggingOutput:
      type: object
      required:
        - TagSet
      example:
        TagSet:
          - Key: key1
            Value: value1
          - Key: key2
            Value: value2
      properties:
        TagSet:
          $ref: "#/components/schemas/TagSet"
    GetBucketVersioningOutput:
      type: object
      example:
        MFADelete: Disabled
        Status: Enabled
      properties:
        Status:
          $ref: "#/components/schemas/BucketVersioningStatus"
        MFADelete:
          $ref: "#/components/schemas/MFADeleteStatus"
    GetBucketWebsiteOutput:
      type: object
      example:
        ErrorDocument:
          Key: error.html
        IndexDocument:
          Suffix: index.html
      properties:
        RedirectAllRequestsTo:
          $ref: "#/components/schemas/RedirectAllRequestsTo"
        IndexDocument:
          $ref: "#/components/schemas/IndexDocument"
        ErrorDocument:
          $ref: "#/components/schemas/ErrorDocument"
        RoutingRules:
          $ref: "#/components/schemas/RoutingRules"
    GetObjectOutput:
      type: object
      example:
        AcceptRanges: bytes
        ContentLength: "10"
        ContentRange: bytes 0-9/43
        ContentType: text/plain
        ETag: '"0d94420ffd0bc68cd3d152506b97a9cc"'
        LastModified: Thu, 09 Oct 2014 22:57:28 GMT
        Metadata: {}
        VersionId: "null"
      properties:
        Body:
          $ref: "#/components/schemas/Body"
        Metadata:
          $ref: "#/components/schemas/Metadata"
    NoSuchKey: {}
    GetObjectAclOutput:
      type: object
      example:
        Grants:
          - Grantee:
              DisplayName: owner-display-name
              ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
              Type: CanonicalUser
            Permission: WRITE
          - Grantee:
              DisplayName: owner-display-name
              ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
              Type: CanonicalUser
            Permission: WRITE_ACP
          - Grantee:
              DisplayName: owner-display-name
              ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
              Type: CanonicalUser
            Permission: READ
          - Grantee:
              DisplayName: owner-display-name
              ID: 852b113eexamplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
              Type: CanonicalUser
            Permission: READ_ACP
        Owner:
          DisplayName: owner-display-name
          ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
      properties:
        Owner:
          $ref: "#/components/schemas/Owner"
        Grants:
          $ref: "#/components/schemas/Grants"
    GetObjectLegalHoldOutput:
      type: object
      properties:
        LegalHold:
          $ref: "#/components/schemas/ObjectLockLegalHold"
    GetObjectLockConfigurationOutput:
      type: object
      properties:
        ObjectLockConfiguration:
          $ref: "#/components/schemas/ObjectLockConfiguration"
    GetObjectRetentionOutput:
      type: object
      properties:
        Retention:
          $ref: "#/components/schemas/ObjectLockRetention"
    GetObjectTaggingOutput:
      type: object
      required:
        - TagSet
      example:
        TagSet:
          - Key: Key4
            Value: Value4
          - Key: Key3
            Value: Value3
        VersionId: "null"
      properties:
        TagSet:
          $ref: "#/components/schemas/TagSet"
    GetObjectTorrentOutput:
      type: object
      example: {}
      properties:
        Body:
          $ref: "#/components/schemas/Body"
    GetPublicAccessBlockOutput:
      type: object
      properties:
        PublicAccessBlockConfiguration:
          $ref: "#/components/schemas/PublicAccessBlockConfiguration"
    NoSuchBucket: {}
    HeadObjectOutput:
      type: object
      example:
        AcceptRanges: bytes
        ContentLength: "3191"
        ContentType: image/jpeg
        ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
        LastModified: Thu, 15 Dec 2016 01:19:41 GMT
        Metadata: {}
        VersionId: "null"
      properties:
        Metadata:
          $ref: "#/components/schemas/Metadata"
    ListBucketAnalyticsConfigurationsOutput:
      type: object
      properties:
        IsTruncated:
          $ref: "#/components/schemas/IsTruncated"
        ContinuationToken:
          $ref: "#/components/schemas/Token"
        NextContinuationToken:
          $ref: "#/components/schemas/NextToken"
        AnalyticsConfigurationList:
          $ref: "#/components/schemas/AnalyticsConfigurationList"
    ListBucketInventoryConfigurationsOutput:
      type: object
      properties:
        ContinuationToken:
          $ref: "#/components/schemas/Token"
        InventoryConfigurationList:
          $ref: "#/components/schemas/InventoryConfigurationList"
        IsTruncated:
          $ref: "#/components/schemas/IsTruncated"
        NextContinuationToken:
          $ref: "#/components/schemas/NextToken"
    ListBucketMetricsConfigurationsOutput:
      type: object
      properties:
        IsTruncated:
          $ref: "#/components/schemas/IsTruncated"
        ContinuationToken:
          $ref: "#/components/schemas/Token"
        NextContinuationToken:
          $ref: "#/components/schemas/NextToken"
        MetricsConfigurationList:
          $ref: "#/components/schemas/MetricsConfigurationList"
    ListBucketsOutput:
      type: object
      example:
        Buckets:
          - CreationDate: "2012-02-15T21: 03: 02.000Z"
            Name: examplebucket
          - CreationDate: "2011-07-24T19: 33: 50.000Z"
            Name: examplebucket2
          - CreationDate: "2010-12-17T00: 56: 49.000Z"
            Name: examplebucket3
        Owner:
          DisplayName: own-display-name
          ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31
      properties:
        Buckets:
          $ref: "#/components/schemas/Buckets"
        Owner:
          $ref: "#/components/schemas/Owner"
    ListMultipartUploadsOutput:
      type: object
      example:
        Uploads:
          - Initiated: 2014-05-01T05:40:58.000Z
            Initiator:
              DisplayName: display-name
              ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Key: JavaFile
            Owner:
              DisplayName: display-name
              ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            StorageClass: STANDARD
            UploadId: examplelUa.CInXklLQtSMJITdUnoZ1Y5GACB5UckOtspm5zbDMCkPF_qkfZzMiFZ6dksmcnqxJyIBvQMG9X9Q--
          - Initiated: 2014-05-01T05:41:27.000Z
            Initiator:
              DisplayName: display-name
              ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Key: JavaFile
            Owner:
              DisplayName: display-name
              ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            StorageClass: STANDARD
            UploadId: examplelo91lv1iwvWpvCiJWugw2xXLPAD7Z8cJyX9.WiIRgNrdG6Ldsn.9FtS63TCl1Uf5faTB.1U5Ckcbmdw--
      properties:
        Bucket:
          $ref: "#/components/schemas/BucketName"
        KeyMarker:
          $ref: "#/components/schemas/KeyMarker"
        UploadIdMarker:
          $ref: "#/components/schemas/UploadIdMarker"
        NextKeyMarker:
          $ref: "#/components/schemas/NextKeyMarker"
        Prefix:
          $ref: "#/components/schemas/Prefix"
        Delimiter:
          $ref: "#/components/schemas/Delimiter"
        NextUploadIdMarker:
          $ref: "#/components/schemas/NextUploadIdMarker"
        MaxUploads:
          $ref: "#/components/schemas/MaxUploads"
        IsTruncated:
          $ref: "#/components/schemas/IsTruncated"
        Uploads:
          $ref: "#/components/schemas/MultipartUploadList"
        CommonPrefixes:
          $ref: "#/components/schemas/CommonPrefixList"
        EncodingType:
          $ref: "#/components/schemas/EncodingType"
    ListObjectVersionsOutput:
      type: object
      example:
        Versions:
          - ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
            IsLatest: true
            Key: HappyFace.jpg
            LastModified: 2016-12-15T01:19:41.000Z
            Owner:
              DisplayName: owner-display-name
              ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Size: 3191
            StorageClass: STANDARD
            VersionId: "null"
          - ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
            IsLatest: false
            Key: HappyFace.jpg
            LastModified: 2016-12-13T00:58:26.000Z
            Owner:
              DisplayName: owner-display-name
              ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Size: 3191
            StorageClass: STANDARD
            VersionId: PHtexPGjH2y.zBgT8LmB7wwLI2mpbz.k
      properties:
        IsTruncated:
          $ref: "#/components/schemas/IsTruncated"
        KeyMarker:
          $ref: "#/components/schemas/KeyMarker"
        VersionIdMarker:
          $ref: "#/components/schemas/VersionIdMarker"
        NextKeyMarker:
          $ref: "#/components/schemas/NextKeyMarker"
        NextVersionIdMarker:
          $ref: "#/components/schemas/NextVersionIdMarker"
        Versions:
          $ref: "#/components/schemas/ObjectVersionList"
        DeleteMarkers:
          $ref: "#/components/schemas/DeleteMarkers"
        Name:
          $ref: "#/components/schemas/BucketName"
        Prefix:
          $ref: "#/components/schemas/Prefix"
        Delimiter:
          $ref: "#/components/schemas/Delimiter"
        MaxKeys:
          $ref: "#/components/schemas/MaxKeys"
        CommonPrefixes:
          $ref: "#/components/schemas/CommonPrefixList"
        EncodingType:
          $ref: "#/components/schemas/EncodingType"
    ListObjectsOutput:
      type: object
      example:
        Contents:
          - ETag: '"70ee1738b6b21e2c8a43f3a5ab0eee71"'
            Key: example1.jpg
            LastModified: 2014-11-21T19:40:05.000Z
            Owner:
              DisplayName: myname
              ID: 12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Size: 11
            StorageClass: STANDARD
          - ETag: '"9c8af9a76df052144598c115ef33e511"'
            Key: example2.jpg
            LastModified: 2013-11-15T01:10:49.000Z
            Owner:
              DisplayName: myname
              ID: 12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Size: 713193
            StorageClass: STANDARD
        NextMarker: eyJNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyfQ==
      properties:
        IsTruncated:
          $ref: "#/components/schemas/IsTruncated"
        Marker:
          $ref: "#/components/schemas/Marker"
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        Contents:
          $ref: "#/components/schemas/ObjectList"
        Name:
          $ref: "#/components/schemas/BucketName"
        Prefix:
          $ref: "#/components/schemas/Prefix"
        Delimiter:
          $ref: "#/components/schemas/Delimiter"
        MaxKeys:
          $ref: "#/components/schemas/MaxKeys"
        CommonPrefixes:
          $ref: "#/components/schemas/CommonPrefixList"
        EncodingType:
          $ref: "#/components/schemas/EncodingType"
    ListObjectsV2Output:
      type: object
      example:
        Contents:
          - ETag: '"70ee1738b6b21e2c8a43f3a5ab0eee71"'
            Key: happyface.jpg
            LastModified: 2014-11-21T19:40:05.000Z
            Size: 11
            StorageClass: STANDARD
          - ETag: '"becf17f89c30367a9a44495d62ed521a-1"'
            Key: test.jpg
            LastModified: 2014-05-02T04:51:50.000Z
            Size: 4192256
            StorageClass: STANDARD
        IsTruncated: true
        KeyCount: "2"
        MaxKeys: "2"
        Name: examplebucket
        NextContinuationToken: 1w41l63U0xa8q7smH50vCxyTQqdxo69O3EmK28Bi5PcROI4wI/EyIJg==
        Prefix: ""
      properties:
        IsTruncated:
          $ref: "#/components/schemas/IsTruncated"
        Contents:
          $ref: "#/components/schemas/ObjectList"
        Name:
          $ref: "#/components/schemas/BucketName"
        Prefix:
          $ref: "#/components/schemas/Prefix"
        Delimiter:
          $ref: "#/components/schemas/Delimiter"
        MaxKeys:
          $ref: "#/components/schemas/MaxKeys"
        CommonPrefixes:
          $ref: "#/components/schemas/CommonPrefixList"
        EncodingType:
          $ref: "#/components/schemas/EncodingType"
        KeyCount:
          $ref: "#/components/schemas/KeyCount"
        ContinuationToken:
          $ref: "#/components/schemas/Token"
        NextContinuationToken:
          $ref: "#/components/schemas/NextToken"
        StartAfter:
          $ref: "#/components/schemas/StartAfter"
    ListPartsOutput:
      type: object
      example:
        Initiator:
          DisplayName: owner-display-name
          ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
        Owner:
          DisplayName: owner-display-name
          ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
        Parts:
          - ETag: '"d8c2eafd90c266e19ab9dcacc479f8af"'
            LastModified: 2016-12-16T00:11:42.000Z
            PartNumber: "1"
            Size: 26246026
          - ETag: '"d8c2eafd90c266e19ab9dcacc479f8af"'
            LastModified: 2016-12-16T00:15:01.000Z
            PartNumber: "2"
            Size: 26246026
        StorageClass: STANDARD
      properties:
        Bucket:
          $ref: "#/components/schemas/BucketName"
        Key:
          $ref: "#/components/schemas/ObjectKey"
        UploadId:
          $ref: "#/components/schemas/MultipartUploadId"
        PartNumberMarker:
          $ref: "#/components/schemas/PartNumberMarker"
        NextPartNumberMarker:
          $ref: "#/components/schemas/NextPartNumberMarker"
        MaxParts:
          $ref: "#/components/schemas/MaxParts"
        IsTruncated:
          $ref: "#/components/schemas/IsTruncated"
        Parts:
          $ref: "#/components/schemas/Parts"
        Initiator:
          $ref: "#/components/schemas/Initiator"
        Owner:
          $ref: "#/components/schemas/Owner"
        StorageClass:
          $ref: "#/components/schemas/StorageClass"
    BucketAccelerateStatus:
      type: string
      enum:
        - Enabled
        - Suspended
    Grants:
      type: array
      items:
        $ref: "#/components/schemas/Grant"
    Owner:
      type: object
      properties:
        DisplayName:
          $ref: "#/components/schemas/DisplayName"
        ID:
          $ref: "#/components/schemas/ID"
      description: <p/>
    AnalyticsId:
      type: string
    AnalyticsFilter:
      type: object
      properties:
        Prefix:
          $ref: "#/components/schemas/Prefix"
        Tag:
          $ref: "#/components/schemas/Tag"
        And:
          $ref: "#/components/schemas/AnalyticsAndOperator"
      description: <p/>
    StorageClassAnalysis:
      type: object
      properties:
        DataExport:
          $ref: "#/components/schemas/StorageClassAnalysisDataExport"
      description: Specifies data related to access patterns to be collected and made
        available to analyze the tradeoffs between different storage classes for
        an Amazon S3 bucket.
    CORSRules:
      type: array
      items:
        $ref: "#/components/schemas/CORSRule"
      xml:
        wrapped: false
    ServerSideEncryptionRules:
      type: array
      items:
        $ref: "#/components/schemas/ServerSideEncryptionRule"
      xml:
        wrapped: false
    InventoryDestination:
      type: object
      required:
        - S3BucketDestination
      properties:
        S3BucketDestination:
          $ref: "#/components/schemas/InventoryS3BucketDestination"
      description: <p/>
    IsEnabled:
      type: boolean
    InventoryFilter:
      type: object
      required:
        - Prefix
      properties:
        Prefix:
          $ref: "#/components/schemas/Prefix"
      description: <p/>
    InventoryId:
      type: string
    InventoryIncludedObjectVersions:
      type: string
      enum:
        - All
        - Current
    InventoryOptionalFields:
      type: array
      items:
        $ref: "#/components/schemas/InventoryOptionalField"
    InventorySchedule:
      type: object
      required:
        - Frequency
      properties:
        Frequency:
          $ref: "#/components/schemas/InventoryFrequency"
      description: <p/>
    Rules:
      type: array
      items:
        $ref: "#/components/schemas/Rule"
      xml:
        wrapped: false
    LifecycleRules:
      type: array
      items:
        $ref: "#/components/schemas/LifecycleRule"
      xml:
        wrapped: false
    LoggingEnabled:
      type: object
      required:
        - TargetBucket
        - TargetPrefix
      properties:
        TargetBucket:
          $ref: "#/components/schemas/TargetBucket"
        TargetGrants:
          $ref: "#/components/schemas/TargetGrants"
        TargetPrefix:
          $ref: "#/components/schemas/TargetPrefix"
      description: Describes where logs are stored and the prefix that Amazon S3 assigns to
        all log object keys for a bucket. For more information, see <a
        href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlogging.html">PUT
        Bucket logging</a> in the <i>Amazon Simple Storage Service API
        Reference</i>.
    MetricsId:
      type: string
    MetricsFilter:
      type: object
      properties:
        Prefix:
          $ref: "#/components/schemas/Prefix"
        Tag:
          $ref: "#/components/schemas/Tag"
        And:
          $ref: "#/components/schemas/MetricsAndOperator"
      description: <p/>
    TopicConfigurationDeprecated:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/NotificationId"
        Events:
          $ref: "#/components/schemas/EventList"
        Event:
          $ref: "#/components/schemas/Event"
        Topic:
          $ref: "#/components/schemas/TopicArn"
      description: <p/>
    QueueConfigurationDeprecated:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/NotificationId"
        Event:
          $ref: "#/components/schemas/Event"
        Events:
          $ref: "#/components/schemas/EventList"
        Queue:
          $ref: "#/components/schemas/QueueArn"
      description: <p/>
    CloudFunctionConfiguration:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/NotificationId"
        Event:
          $ref: "#/components/schemas/Event"
        Events:
          $ref: "#/components/schemas/EventList"
        CloudFunction:
          $ref: "#/components/schemas/CloudFunction"
        InvocationRole:
          $ref: "#/components/schemas/CloudFunctionInvocationRole"
      description: <p/>
    TopicConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/TopicConfiguration"
      xml:
        wrapped: false
    QueueConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/QueueConfiguration"
      xml:
        wrapped: false
    LambdaFunctionConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/LambdaFunctionConfiguration"
      xml:
        wrapped: false
    Role:
      type: string
    ReplicationRules:
      type: array
      items:
        $ref: "#/components/schemas/ReplicationRule"
      xml:
        wrapped: false
    Payer:
      type: string
      enum:
        - Requester
        - BucketOwner
    TagSet:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    MFADelete:
      type: string
      enum:
        - Enabled
        - Disabled
    BucketVersioningStatus:
      type: string
      enum:
        - Enabled
        - Suspended
    ErrorDocument:
      type: object
      required:
        - Key
      properties:
        Key:
          $ref: "#/components/schemas/ObjectKey"
      description: <p/>
    IndexDocument:
      type: object
      required:
        - Suffix
      properties:
        Suffix:
          $ref: "#/components/schemas/Suffix"
      description: <p/>
    RedirectAllRequestsTo:
      type: object
      required:
        - HostName
      properties:
        HostName:
          $ref: "#/components/schemas/HostName"
        Protocol:
          $ref: "#/components/schemas/Protocol"
      description: Specifies the redirect behavior of all requests to a website endpoint of
        an Amazon S3 bucket.
    RoutingRules:
      type: array
      items:
        $ref: "#/components/schemas/RoutingRule"
    PutObjectOutput:
      type: object
      example:
        ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
        ServerSideEncryption: AES256
        VersionId: CG612hodqujkf8FaaNfp8U..FIhLROcp
      properties: {}
    PutObjectAclOutput:
      type: object
      example: {}
      properties: {}
    PutObjectLegalHoldOutput:
      type: object
      properties: {}
    ObjectLockLegalHoldStatus:
      type: string
      enum:
        - ON
        - OFF
    PutObjectLockConfigurationOutput:
      type: object
      properties: {}
    ObjectLockEnabled:
      type: string
      enum:
        - Enabled
    ObjectLockRule:
      type: object
      properties:
        DefaultRetention:
          $ref: "#/components/schemas/DefaultRetention"
      description: The container element for an object lock rule.
    PutObjectRetentionOutput:
      type: object
      properties: {}
    ObjectLockRetentionMode:
      type: string
      enum:
        - GOVERNANCE
        - COMPLIANCE
    Date:
      type: string
      format: date-time
    PutObjectTaggingOutput:
      type: object
      example:
        VersionId: "null"
      properties: {}
    Setting:
      type: boolean
    RestoreObjectOutput:
      type: object
      example: {}
      properties: {}
    Days:
      type: integer
    GlacierJobParameters:
      type: object
      required:
        - Tier
      properties:
        Tier:
          $ref: "#/components/schemas/Tier"
      description: <p/>
    RestoreRequestType:
      type: string
      enum:
        - SELECT
    Tier:
      type: string
      enum:
        - Standard
        - Bulk
        - Expedited
    Description:
      type: string
    SelectParameters:
      type: object
      required:
        - InputSerialization
        - ExpressionType
        - Expression
        - OutputSerialization
      properties:
        InputSerialization:
          $ref: "#/components/schemas/InputSerialization"
        ExpressionType:
          $ref: "#/components/schemas/ExpressionType"
        Expression:
          $ref: "#/components/schemas/Expression"
        OutputSerialization:
          $ref: "#/components/schemas/OutputSerialization"
      description: Describes the parameters for Select job types.
    OutputLocation:
      type: object
      properties:
        S3:
          $ref: "#/components/schemas/S3Location"
      description: Describes the location where the restore job's output is stored.
    ObjectAlreadyInActiveTierError: {}
    SelectObjectContentOutput:
      type: object
      properties:
        Payload:
          $ref: "#/components/schemas/SelectObjectContentEventStream"
    EnableRequestProgress:
      type: boolean
    CSVInput:
      type: object
      properties:
        FileHeaderInfo:
          $ref: "#/components/schemas/FileHeaderInfo"
        Comments:
          $ref: "#/components/schemas/Comments"
        QuoteEscapeCharacter:
          $ref: "#/components/schemas/QuoteEscapeCharacter"
        RecordDelimiter:
          $ref: "#/components/schemas/RecordDelimiter"
        FieldDelimiter:
          $ref: "#/components/schemas/FieldDelimiter"
        QuoteCharacter:
          $ref: "#/components/schemas/QuoteCharacter"
        AllowQuotedRecordDelimiter:
          $ref: "#/components/schemas/AllowQuotedRecordDelimiter"
      description: Describes how a CSV-formatted input object is formatted.
    CompressionType:
      type: string
      enum:
        - NONE
        - GZIP
        - BZIP2
    JSONInput:
      type: object
      properties:
        Type:
          $ref: "#/components/schemas/JSONType"
      description: <p/>
    ParquetInput:
      type: object
      properties: {}
      description: <p/>
    CSVOutput:
      type: object
      properties:
        QuoteFields:
          $ref: "#/components/schemas/QuoteFields"
        QuoteEscapeCharacter:
          $ref: "#/components/schemas/QuoteEscapeCharacter"
        RecordDelimiter:
          $ref: "#/components/schemas/RecordDelimiter"
        FieldDelimiter:
          $ref: "#/components/schemas/FieldDelimiter"
        QuoteCharacter:
          $ref: "#/components/schemas/QuoteCharacter"
      description: Describes how CSV-formatted results are formatted.
    JSONOutput:
      type: object
      properties:
        RecordDelimiter:
          $ref: "#/components/schemas/RecordDelimiter"
      description: <p/>
    UploadPartOutput:
      type: object
      example:
        ETag: '"d8c2eafd90c266e19ab9dcacc479f8af"'
      properties: {}
    UploadPartCopyOutput:
      type: object
      example:
        CopyPartResult:
          ETag: '"65d16d19e65a7508a51f043180edcc36"'
          LastModified: 2016-12-29T21:44:28.000Z
      properties:
        CopyPartResult:
          $ref: "#/components/schemas/CopyPartResult"
    AbortDate:
      type: string
      format: date-time
    DaysAfterInitiation:
      type: integer
    AbortIncompleteMultipartUpload:
      type: object
      properties:
        DaysAfterInitiation:
          $ref: "#/components/schemas/DaysAfterInitiation"
      description: Specifies the days since the initiation of an incomplete multipart
        upload that Amazon S3 will wait before permanently removing all parts of
        the upload. For more information, see <a
        href="https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config">
        Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle
        Policy</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.
    RequestCharged:
      type: string
      enum:
        - requester
      description: If present, indicates that the requester was successfully charged for
        the request.
    BucketName:
      type: string
    ObjectKey:
      type: string
      minLength: 1
    MultipartUploadId:
      type: string
    RequestPayer:
      type: string
      enum:
        - requester
      description: Confirms that the requester knows that she or he will be charged for the
        request. Bucket owners need not specify this parameter in their
        requests. Documentation on downloading objects from requester pays
        buckets can be found at
        http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html
    AbortMultipartUploadRequest:
      type: object
      properties: {}
    AbortRuleId:
      type: string
    AccelerateConfiguration:
      type: object
      properties:
        Status:
          $ref: "#/components/schemas/BucketAccelerateStatus"
      description: Configures the transfer acceleration state for an Amazon S3 bucket. For
        more information, see <a
        href="https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html">Amazon
        S3 Transfer Acceleration</a> in the <i>Amazon Simple Storage Service
        Developer Guide</i>.
    AcceptRanges:
      type: string
    AccessControlPolicy:
      type: object
      properties:
        Grants:
          $ref: "#/components/schemas/Grants"
        Owner:
          $ref: "#/components/schemas/Owner"
      description: Contains the elements that set the ACL permissions for an object per
        grantee.
    OwnerOverride:
      type: string
      enum:
        - Destination
    AccessControlTranslation:
      type: object
      required:
        - Owner
      properties:
        Owner:
          $ref: "#/components/schemas/OwnerOverride"
      description: A container for information about access control for replicas.
    AccountId:
      type: string
    AllowQuotedRecordDelimiter:
      type: boolean
    AllowedHeader:
      type: string
    AllowedHeaders:
      type: array
      items:
        $ref: "#/components/schemas/AllowedHeader"
      xml:
        wrapped: false
    AllowedMethod:
      type: string
    AllowedMethods:
      type: array
      items:
        $ref: "#/components/schemas/AllowedMethod"
      xml:
        wrapped: false
    AllowedOrigin:
      type: string
    AllowedOrigins:
      type: array
      items:
        $ref: "#/components/schemas/AllowedOrigin"
      xml:
        wrapped: false
    Prefix:
      type: string
    AnalyticsAndOperator:
      type: object
      properties:
        Prefix:
          $ref: "#/components/schemas/Prefix"
        Tags:
          $ref: "#/components/schemas/TagSet"
      description: A conjunction (logical AND) of predicates, which is used in evaluating a
        metrics filter. The operator must have at least two predicates in any
        combination, and an object must match all of the predicates for the
        filter to apply.
      xml:
        wrapped: false
    AnalyticsConfiguration:
      type: object
      required:
        - Id
        - StorageClassAnalysis
      properties:
        Id:
          $ref: "#/components/schemas/AnalyticsId"
        Filter:
          $ref: "#/components/schemas/AnalyticsFilter"
        StorageClassAnalysis:
          $ref: "#/components/schemas/StorageClassAnalysis"
      description: <p> Specifies the configuration and any analyses for the analytics
        filter of an Amazon S3 bucket.</p> <p>For more information, see <a
        href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETAnalyticsConfig.html">GET
        Bucket analytics</a> in the <i>Amazon Simple Storage Service API
        Reference</i>. </p>
    AnalyticsConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/AnalyticsConfiguration"
      xml:
        wrapped: false
    AnalyticsS3BucketDestination:
      type: object
      required:
        - Format
        - Bucket
      properties:
        Format:
          $ref: "#/components/schemas/AnalyticsS3ExportFileFormat"
        BucketAccountId:
          $ref: "#/components/schemas/AccountId"
        Bucket:
          $ref: "#/components/schemas/BucketName"
        Prefix:
          $ref: "#/components/schemas/Prefix"
      description: <p/>
    AnalyticsExportDestination:
      type: object
      required:
        - S3BucketDestination
      properties:
        S3BucketDestination:
          $ref: "#/components/schemas/AnalyticsS3BucketDestination"
      description: Where to publish the analytics results.
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: "#/components/schemas/ObjectKey"
        Value:
          $ref: "#/components/schemas/Value"
      description: <p/>
    AnalyticsS3ExportFileFormat:
      type: string
      enum:
        - CSV
    Body:
      type: string
    CreationDate:
      type: string
      format: date-time
    Bucket:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/BucketName"
        CreationDate:
          $ref: "#/components/schemas/CreationDate"
      description: <p/>
    BucketCannedACL:
      type: string
      enum:
        - private
        - public-read
        - public-read-write
        - authenticated-read
    BucketLifecycleConfiguration:
      type: object
      required:
        - Rules
      properties:
        Rules:
          $ref: "#/components/schemas/LifecycleRules"
      description: Specifies the lifecycle configuration for objects in an Amazon S3
        bucket. For more information, see <a
        href="https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html">Object
        Lifecycle Management</a> in the <i>Amazon Simple Storage Service
        Developer Guide</i>.
    BucketLoggingStatus:
      type: object
      properties:
        LoggingEnabled:
          $ref: "#/components/schemas/LoggingEnabled"
      description: <p/>
    BucketLogsPermission:
      type: string
      enum:
        - FULL_CONTROL
        - READ
        - WRITE
    Buckets:
      type: array
      items:
        $ref: "#/components/schemas/Bucket"
    BypassGovernanceRetention:
      type: boolean
    BytesProcessed:
      type: integer
    BytesReturned:
      type: integer
    BytesScanned:
      type: integer
    CORSConfiguration:
      type: object
      required:
        - CORSRules
      properties:
        CORSRules:
          $ref: "#/components/schemas/CORSRules"
      description: Describes the cross-origin access configuration for objects in an Amazon
        S3 bucket. For more information, see <a
        href="https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html">Enabling
        Cross-Origin Resource Sharing</a> in the <i>Amazon Simple Storage
        Service Developer Guide</i>.
    ExposeHeaders:
      type: array
      items:
        $ref: "#/components/schemas/ExposeHeader"
      xml:
        wrapped: false
    MaxAgeSeconds:
      type: integer
    CORSRule:
      type: object
      required:
        - AllowedMethods
        - AllowedOrigins
      properties:
        AllowedHeaders:
          $ref: "#/components/schemas/AllowedHeaders"
        AllowedMethods:
          $ref: "#/components/schemas/AllowedMethods"
        AllowedOrigins:
          $ref: "#/components/schemas/AllowedOrigins"
        ExposeHeaders:
          $ref: "#/components/schemas/ExposeHeaders"
        MaxAgeSeconds:
          $ref: "#/components/schemas/MaxAgeSeconds"
      description: Specifies a cross-origin access rule for an Amazon S3 bucket.
    FileHeaderInfo:
      type: string
      enum:
        - USE
        - IGNORE
        - NONE
    Comments:
      type: string
    QuoteEscapeCharacter:
      type: string
    RecordDelimiter:
      type: string
    FieldDelimiter:
      type: string
    QuoteCharacter:
      type: string
    QuoteFields:
      type: string
      enum:
        - ALWAYS
        - ASNEEDED
    CacheControl:
      type: string
    CloudFunction:
      type: string
    NotificationId:
      type: string
      description: An optional unique identifier for configurations in a notification
        configuration. If you don't provide one, Amazon S3 will assign an ID.
    Event:
      type: string
      enum:
        - s3:ReducedRedundancyLostObject
        - s3:ObjectCreated:*
        - s3:ObjectCreated:Put
        - s3:ObjectCreated:Post
        - s3:ObjectCreated:Copy
        - s3:ObjectCreated:CompleteMultipartUpload
        - s3:ObjectRemoved:*
        - s3:ObjectRemoved:Delete
        - s3:ObjectRemoved:DeleteMarkerCreated
        - s3:ObjectRestore:Post
        - s3:ObjectRestore:Completed
      description: The bucket event for which to send notifications.
    EventList:
      type: array
      items:
        $ref: "#/components/schemas/Event"
      xml:
        wrapped: false
    CloudFunctionInvocationRole:
      type: string
    Code:
      type: string
    CommonPrefix:
      type: object
      properties:
        Prefix:
          $ref: "#/components/schemas/Prefix"
      description: <p/>
    CommonPrefixList:
      type: array
      items:
        $ref: "#/components/schemas/CommonPrefix"
      xml:
        wrapped: false
    Location:
      type: string
    Expiration:
      type: string
    ETag:
      type: string
    ServerSideEncryption:
      type: string
      enum:
        - AES256
        - aws:kms
    ObjectVersionId:
      type: string
    SSEKMSKeyId:
      type: string
      format: password
    CompletedMultipartUpload:
      type: object
      properties:
        Parts:
          $ref: "#/components/schemas/CompletedPartList"
      description: <p/>
    CompleteMultipartUploadRequest:
      type: object
      properties:
        MultipartUpload:
          $ref: "#/components/schemas/CompletedMultipartUpload"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PartNumber:
      type: integer
    CompletedPart:
      type: object
      properties:
        ETag:
          $ref: "#/components/schemas/ETag"
        PartNumber:
          $ref: "#/components/schemas/PartNumber"
      description: <p/>
    HttpErrorCodeReturnedEquals:
      type: string
    KeyPrefixEquals:
      type: string
    Condition:
      type: object
      properties:
        HttpErrorCodeReturnedEquals:
          $ref: "#/components/schemas/HttpErrorCodeReturnedEquals"
        KeyPrefixEquals:
          $ref: "#/components/schemas/KeyPrefixEquals"
      description: "Specifies a condition that must be met for a redirect to apply. "
    ConfirmRemoveSelfBucketAccess:
      type: boolean
    ContentDisposition:
      type: string
    ContentEncoding:
      type: string
    ContentLanguage:
      type: string
    ContentLength:
      type: integer
    ContentMD5:
      type: string
    ContentRange:
      type: string
    ContentType:
      type: string
    ContinuationEvent:
      type: object
      properties: {}
      description: <p/>
    CopyObjectResult:
      type: object
      properties:
        ETag:
          $ref: "#/components/schemas/ETag"
        LastModified:
          $ref: "#/components/schemas/LastModified"
      description: <p/>
    CopySourceVersionId:
      type: string
    SSECustomerAlgorithm:
      type: string
    SSECustomerKeyMD5:
      type: string
    SSEKMSEncryptionContext:
      type: string
      format: password
    ObjectCannedACL:
      type: string
      enum:
        - private
        - public-read
        - public-read-write
        - authenticated-read
        - aws-exec-read
        - bucket-owner-read
        - bucket-owner-full-control
    CopySource:
      type: string
      pattern: \/.+\/.+
    CopySourceIfMatch:
      type: string
    CopySourceIfModifiedSince:
      type: string
      format: date-time
    CopySourceIfNoneMatch:
      type: string
    CopySourceIfUnmodifiedSince:
      type: string
      format: date-time
    Expires:
      type: string
      format: date-time
    GrantFullControl:
      type: string
    GrantRead:
      type: string
    GrantReadACP:
      type: string
    GrantWriteACP:
      type: string
    Metadata:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/MetadataValue"
    MetadataDirective:
      type: string
      enum:
        - COPY
        - REPLACE
    TaggingDirective:
      type: string
      enum:
        - COPY
        - REPLACE
    StorageClass:
      type: string
      enum:
        - STANDARD
        - REDUCED_REDUNDANCY
        - STANDARD_IA
        - ONEZONE_IA
        - INTELLIGENT_TIERING
        - GLACIER
        - DEEP_ARCHIVE
    WebsiteRedirectLocation:
      type: string
    SSECustomerKey:
      type: string
      format: password
    CopySourceSSECustomerAlgorithm:
      type: string
    CopySourceSSECustomerKey:
      type: string
      format: password
    CopySourceSSECustomerKeyMD5:
      type: string
    TaggingHeader:
      type: string
    ObjectLockMode:
      type: string
      enum:
        - GOVERNANCE
        - COMPLIANCE
    ObjectLockRetainUntilDate:
      type: string
      format: date-time
    CopyObjectRequest:
      type: object
      properties:
        Metadata:
          $ref: "#/components/schemas/Metadata"
    LastModified:
      type: string
      format: date-time
    CopyPartResult:
      type: object
      properties:
        ETag:
          $ref: "#/components/schemas/ETag"
        LastModified:
          $ref: "#/components/schemas/LastModified"
      description: <p/>
    CopySourceRange:
      type: string
    CreateBucketConfiguration:
      type: object
      properties:
        LocationConstraint:
          $ref: "#/components/schemas/BucketLocationConstraint"
      description: <p/>
    GrantWrite:
      type: string
    ObjectLockEnabledForBucket:
      type: boolean
    CreateBucketRequest:
      type: object
      properties:
        CreateBucketConfiguration:
          $ref: "#/components/schemas/CreateBucketConfiguration"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    CreateMultipartUploadRequest:
      type: object
      properties:
        Metadata:
          $ref: "#/components/schemas/Metadata"
    Years:
      type: integer
    DefaultRetention:
      type: object
      properties:
        Mode:
          $ref: "#/components/schemas/ObjectLockRetentionMode"
        Days:
          $ref: "#/components/schemas/Days"
        Years:
          $ref: "#/components/schemas/Years"
      description: The container element for specifying the default object lock retention
        settings for new objects placed in the specified bucket.
    Delete:
      type: object
      required:
        - Objects
      properties:
        Objects:
          $ref: "#/components/schemas/ObjectIdentifierList"
        Quiet:
          $ref: "#/components/schemas/Quiet"
      description: <p/>
    DeleteBucketAnalyticsConfigurationRequest:
      type: object
      properties: {}
    DeleteBucketCorsRequest:
      type: object
      properties: {}
    DeleteBucketEncryptionRequest:
      type: object
      properties: {}
    DeleteBucketInventoryConfigurationRequest:
      type: object
      properties: {}
    DeleteBucketLifecycleRequest:
      type: object
      properties: {}
    DeleteBucketMetricsConfigurationRequest:
      type: object
      properties: {}
    DeleteBucketPolicyRequest:
      type: object
      properties: {}
    DeleteBucketReplicationRequest:
      type: object
      properties: {}
    DeleteBucketRequest:
      type: object
      properties: {}
    DeleteBucketTaggingRequest:
      type: object
      properties: {}
    DeleteBucketWebsiteRequest:
      type: object
      properties: {}
    DeleteMarker:
      type: boolean
    IsLatest:
      type: boolean
    DeleteMarkerEntry:
      type: object
      properties:
        Owner:
          $ref: "#/components/schemas/Owner"
        Key:
          $ref: "#/components/schemas/ObjectKey"
        VersionId:
          $ref: "#/components/schemas/ObjectVersionId"
        IsLatest:
          $ref: "#/components/schemas/IsLatest"
        LastModified:
          $ref: "#/components/schemas/LastModified"
      description: <p/>
    DeleteMarkerReplicationStatus:
      type: string
      enum:
        - Enabled
        - Disabled
    DeleteMarkerReplication:
      type: object
      properties:
        Status:
          $ref: "#/components/schemas/DeleteMarkerReplicationStatus"
      description: Specifies whether Amazon S3 should replicate delete makers.
    DeleteMarkerVersionId:
      type: string
    DeleteMarkers:
      type: array
      items:
        $ref: "#/components/schemas/DeleteMarkerEntry"
      xml:
        wrapped: false
    MFA:
      type: string
    DeleteObjectRequest:
      type: object
      properties: {}
    DeleteObjectTaggingRequest:
      type: object
      properties: {}
    DeletedObjects:
      type: array
      items:
        $ref: "#/components/schemas/DeletedObject"
      xml:
        wrapped: false
    Errors:
      type: array
      items:
        $ref: "#/components/schemas/Error"
      xml:
        wrapped: false
    DeleteObjectsRequest:
      type: object
      required:
        - Delete
      properties:
        Delete:
          $ref: "#/components/schemas/Delete"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    DeletePublicAccessBlockRequest:
      type: object
      properties: {}
    DeletedObject:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/ObjectKey"
        VersionId:
          $ref: "#/components/schemas/ObjectVersionId"
        DeleteMarker:
          $ref: "#/components/schemas/DeleteMarker"
        DeleteMarkerVersionId:
          $ref: "#/components/schemas/DeleteMarkerVersionId"
      description: <p/>
    Delimiter:
      type: string
    EncryptionConfiguration:
      type: object
      properties:
        ReplicaKmsKeyID:
          $ref: "#/components/schemas/ReplicaKmsKeyID"
      description: Specifies encryption-related information for an Amazon S3 bucket that is
        a destination for replicated objects.
    Destination:
      type: object
      required:
        - Bucket
      properties:
        Bucket:
          $ref: "#/components/schemas/BucketName"
        Account:
          $ref: "#/components/schemas/AccountId"
        StorageClass:
          $ref: "#/components/schemas/StorageClass"
        AccessControlTranslation:
          $ref: "#/components/schemas/AccessControlTranslation"
        EncryptionConfiguration:
          $ref: "#/components/schemas/EncryptionConfiguration"
      description: Specifies information about where to publish analysis or configuration
        results for an Amazon S3 bucket.
    DisplayName:
      type: string
    EmailAddress:
      type: string
    EncodingType:
      type: string
      enum:
        - url
      description: Requests Amazon S3 to encode the object keys in the response and
        specifies the encoding method to use. An object key may contain any
        Unicode character; however, XML 1.0 parser cannot parse some characters,
        such as characters with an ASCII value from 0 to 10. For characters that
        are not supported in XML 1.0, you can add this parameter to request that
        Amazon S3 encode the keys in the response.
    KMSContext:
      type: string
    Encryption:
      type: object
      required:
        - EncryptionType
      properties:
        EncryptionType:
          $ref: "#/components/schemas/ServerSideEncryption"
        KMSKeyId:
          $ref: "#/components/schemas/SSEKMSKeyId"
        KMSContext:
          $ref: "#/components/schemas/KMSContext"
      description: Describes the server-side encryption that will be applied to the restore
        results.
    ReplicaKmsKeyID:
      type: string
    EndEvent:
      type: object
      properties: {}
      description: <p/>
    Message:
      type: string
    Error:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/ObjectKey"
        VersionId:
          $ref: "#/components/schemas/ObjectVersionId"
        Code:
          $ref: "#/components/schemas/Code"
        Message:
          $ref: "#/components/schemas/Message"
      description: <p/>
    ExpirationStatus:
      type: string
      enum:
        - Enabled
        - Disabled
    ExpiredObjectDeleteMarker:
      type: boolean
    ExposeHeader:
      type: string
    Expression:
      type: string
    ExpressionType:
      type: string
      enum:
        - SQL
    FetchOwner:
      type: boolean
    FilterRuleName:
      type: string
      enum:
        - prefix
        - suffix
    FilterRuleValue:
      type: string
    FilterRule:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/FilterRuleName"
        Value:
          $ref: "#/components/schemas/FilterRuleValue"
      description: Specifies the Amazon S3 object key name to filter on and whether to
        filter on the suffix or prefix of the key name.
    FilterRuleList:
      type: array
      description: A list of containers for the key value pair that defines the criteria
        for the filter rule.
      items:
        $ref: "#/components/schemas/FilterRule"
      xml:
        wrapped: false
    GetBucketAccelerateConfigurationRequest:
      type: object
      properties: {}
    GetBucketAclRequest:
      type: object
      properties: {}
    GetBucketAnalyticsConfigurationRequest:
      type: object
      properties: {}
    GetBucketCorsRequest:
      type: object
      properties: {}
    ServerSideEncryptionConfiguration:
      type: object
      required:
        - Rules
      properties:
        Rules:
          $ref: "#/components/schemas/ServerSideEncryptionRules"
      description: Specifies the default server-side-encryption configuration.
    GetBucketEncryptionRequest:
      type: object
      properties: {}
    InventoryConfiguration:
      type: object
      required:
        - Destination
        - IsEnabled
        - Id
        - IncludedObjectVersions
        - Schedule
      properties:
        Destination:
          $ref: "#/components/schemas/InventoryDestination"
        IsEnabled:
          $ref: "#/components/schemas/IsEnabled"
        Filter:
          $ref: "#/components/schemas/InventoryFilter"
        Id:
          $ref: "#/components/schemas/InventoryId"
        IncludedObjectVersions:
          $ref: "#/components/schemas/InventoryIncludedObjectVersions"
        OptionalFields:
          $ref: "#/components/schemas/InventoryOptionalFields"
        Schedule:
          $ref: "#/components/schemas/InventorySchedule"
      description: 'Specifies the inventory configuration for an Amazon S3 bucket. For more
        information, see <a
        href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html">GET
        Bucket inventory</a> in the <i>Amazon Simple Storage Service API
        Reference</i>. '
    GetBucketInventoryConfigurationRequest:
      type: object
      properties: {}
    GetBucketLifecycleConfigurationRequest:
      type: object
      properties: {}
    GetBucketLifecycleRequest:
      type: object
      properties: {}
    GetBucketLocationRequest:
      type: object
      properties: {}
    GetBucketLoggingRequest:
      type: object
      properties: {}
    MetricsConfiguration:
      type: object
      required:
        - Id
      properties:
        Id:
          $ref: "#/components/schemas/MetricsId"
        Filter:
          $ref: "#/components/schemas/MetricsFilter"
      description: Specifies a metrics configuration for the CloudWatch request metrics
        (specified by the metrics configuration ID) from an Amazon S3 bucket. If
        you're updating an existing metrics configuration, note that this is a
        full replacement of the existing metrics configuration. If you don't
        include the elements you want to keep, they are erased. For more
        information, see <a
        href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html">
        PUT Bucket metrics</a> in the <i>Amazon Simple Storage Service API
        Reference</i>.
    GetBucketMetricsConfigurationRequest:
      type: object
      properties: {}
    GetBucketNotificationConfigurationRequest:
      type: object
      properties: {}
    Policy:
      type: string
    GetBucketPolicyRequest:
      type: object
      properties: {}
    PolicyStatus:
      type: object
      properties:
        IsPublic:
          $ref: "#/components/schemas/IsPublic"
      description: The container element for a bucket's policy status.
    GetBucketPolicyStatusRequest:
      type: object
      properties: {}
    ReplicationConfiguration:
      type: object
      required:
        - Role
        - Rules
      properties:
        Role:
          $ref: "#/components/schemas/Role"
        Rules:
          $ref: "#/components/schemas/ReplicationRules"
      description: A container for replication rules. You can add up to 1,000 rules. The
        maximum size of a replication configuration is 2 MB.
    GetBucketReplicationRequest:
      type: object
      properties: {}
    GetBucketRequestPaymentRequest:
      type: object
      properties: {}
    GetBucketTaggingRequest:
      type: object
      properties: {}
    MFADeleteStatus:
      type: string
      enum:
        - Enabled
        - Disabled
    GetBucketVersioningRequest:
      type: object
      properties: {}
    GetBucketWebsiteRequest:
      type: object
      properties: {}
    GetObjectAclRequest:
      type: object
      properties: {}
    ObjectLockLegalHold:
      type: object
      properties:
        Status:
          $ref: "#/components/schemas/ObjectLockLegalHoldStatus"
      description: A Legal Hold configuration for an object.
    GetObjectLegalHoldRequest:
      type: object
      properties: {}
    ObjectLockConfiguration:
      type: object
      properties:
        ObjectLockEnabled:
          $ref: "#/components/schemas/ObjectLockEnabled"
        Rule:
          $ref: "#/components/schemas/ObjectLockRule"
      description: The container element for object lock configuration parameters.
    GetObjectLockConfigurationRequest:
      type: object
      properties: {}
    Restore:
      type: string
    MissingMeta:
      type: integer
    ReplicationStatus:
      type: string
      enum:
        - COMPLETE
        - PENDING
        - FAILED
        - REPLICA
    PartsCount:
      type: integer
    TagCount:
      type: integer
    IfMatch:
      type: string
    IfModifiedSince:
      type: string
      format: date-time
    IfNoneMatch:
      type: string
    IfUnmodifiedSince:
      type: string
      format: date-time
    Range:
      type: string
    ResponseCacheControl:
      type: string
    ResponseContentDisposition:
      type: string
    ResponseContentEncoding:
      type: string
    ResponseContentLanguage:
      type: string
    ResponseContentType:
      type: string
    ResponseExpires:
      type: string
      format: date-time
    GetObjectRequest:
      type: object
      properties: {}
    ObjectLockRetention:
      type: object
      properties:
        Mode:
          $ref: "#/components/schemas/ObjectLockRetentionMode"
        RetainUntilDate:
          $ref: "#/components/schemas/Date"
      description: A Retention configuration for an object.
    GetObjectRetentionRequest:
      type: object
      properties: {}
    GetObjectTaggingRequest:
      type: object
      properties: {}
    GetObjectTorrentRequest:
      type: object
      properties: {}
    PublicAccessBlockConfiguration:
      type: object
      properties:
        BlockPublicAcls:
          $ref: "#/components/schemas/Setting"
        IgnorePublicAcls:
          $ref: "#/components/schemas/Setting"
        BlockPublicPolicy:
          $ref: "#/components/schemas/Setting"
        RestrictPublicBuckets:
          $ref: "#/components/schemas/Setting"
      description: Specifies the Block Public Access configuration for an Amazon S3 bucket.
    GetPublicAccessBlockRequest:
      type: object
      properties: {}
    Grantee:
      type: object
      required:
        - Type
      properties:
        DisplayName:
          $ref: "#/components/schemas/DisplayName"
        EmailAddress:
          $ref: "#/components/schemas/EmailAddress"
        ID:
          $ref: "#/components/schemas/ID"
        Type:
          $ref: "#/components/schemas/Type"
        URI:
          $ref: "#/components/schemas/URI"
      description: <p/>
      xml:
        namespace: http://www.w3.org/2001/XMLSchema-instance
        attribute: true
    Permission:
      type: string
      enum:
        - FULL_CONTROL
        - WRITE
        - WRITE_ACP
        - READ
        - READ_ACP
    Grant:
      type: object
      properties:
        Grantee:
          $ref: "#/components/schemas/Grantee"
        Permission:
          $ref: "#/components/schemas/Permission"
      description: <p/>
    ID:
      type: string
    Type:
      type: string
      enum:
        - CanonicalUser
        - AmazonCustomerByEmail
        - Group
    URI:
      type: string
    HeadBucketRequest:
      type: object
      properties: {}
    HeadObjectRequest:
      type: object
      properties: {}
    HostName:
      type: string
    HttpRedirectCode:
      type: string
    Suffix:
      type: string
    Initiated:
      type: string
      format: date-time
    Initiator:
      type: object
      properties:
        ID:
          $ref: "#/components/schemas/ID"
        DisplayName:
          $ref: "#/components/schemas/DisplayName"
      description: <p/>
    InputSerialization:
      type: object
      properties:
        CSV:
          $ref: "#/components/schemas/CSVInput"
        CompressionType:
          $ref: "#/components/schemas/CompressionType"
        JSON:
          $ref: "#/components/schemas/JSONInput"
        Parquet:
          $ref: "#/components/schemas/ParquetInput"
      description: Describes the serialization format of the object.
    InventoryConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/InventoryConfiguration"
      xml:
        wrapped: false
    InventoryS3BucketDestination:
      type: object
      required:
        - Bucket
        - Format
      properties:
        AccountId:
          $ref: "#/components/schemas/AccountId"
        Bucket:
          $ref: "#/components/schemas/BucketName"
        Format:
          $ref: "#/components/schemas/InventoryFormat"
        Prefix:
          $ref: "#/components/schemas/Prefix"
        Encryption:
          $ref: "#/components/schemas/InventoryEncryption"
      description: <p/>
    SSES3:
      type: object
      properties: {}
      description: Specifies the use of SSE-S3 to encrypt delivered Inventory reports.
    SSEKMS:
      type: object
      required:
        - KeyId
      properties:
        KeyId:
          $ref: "#/components/schemas/SSEKMSKeyId"
      description: Specifies the use of SSE-KMS to encrypt delivered Inventory reports.
    InventoryEncryption:
      type: object
      properties:
        SSES3:
          $ref: "#/components/schemas/SSES3"
        SSEKMS:
          $ref: "#/components/schemas/SSEKMS"
      description: Contains the type of server-side encryption used to encrypt the
        inventory results.
    InventoryFormat:
      type: string
      enum:
        - CSV
        - ORC
        - Parquet
    InventoryFrequency:
      type: string
      enum:
        - Daily
        - Weekly
    InventoryOptionalField:
      type: string
      enum:
        - Size
        - LastModifiedDate
        - StorageClass
        - ETag
        - IsMultipartUploaded
        - ReplicationStatus
        - EncryptionStatus
        - ObjectLockRetainUntilDate
        - ObjectLockMode
        - ObjectLockLegalHoldStatus
    IsPublic:
      type: boolean
    IsTruncated:
      type: boolean
    JSONType:
      type: string
      enum:
        - DOCUMENT
        - LINES
    KeyCount:
      type: integer
    KeyMarker:
      type: string
    LambdaFunctionArn:
      type: string
    NotificationConfigurationFilter:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/S3KeyFilter"
      description: Specifies object key name filtering rules. For information about key
        name filtering, see <a
        href="https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html">Configuring
        Event Notifications</a> in the <i>Amazon Simple Storage Service
        Developer Guide</i>.
    LambdaFunctionConfiguration:
      type: object
      required:
        - LambdaFunctionArn
        - Events
      properties:
        Id:
          $ref: "#/components/schemas/NotificationId"
        LambdaFunctionArn:
          $ref: "#/components/schemas/LambdaFunctionArn"
        Events:
          $ref: "#/components/schemas/EventList"
        Filter:
          $ref: "#/components/schemas/NotificationConfigurationFilter"
      description: A container for specifying the configuration for AWS Lambda
        notifications.
    LifecycleConfiguration:
      type: object
      required:
        - Rules
      properties:
        Rules:
          $ref: "#/components/schemas/Rules"
      description: <p/>
    LifecycleExpiration:
      type: object
      properties:
        Date:
          $ref: "#/components/schemas/Date"
        Days:
          $ref: "#/components/schemas/Days"
        ExpiredObjectDeleteMarker:
          $ref: "#/components/schemas/ExpiredObjectDeleteMarker"
      description: <p/>
    LifecycleRuleFilter:
      type: object
      properties:
        Prefix:
          $ref: "#/components/schemas/Prefix"
        Tag:
          $ref: "#/components/schemas/Tag"
        And:
          $ref: "#/components/schemas/LifecycleRuleAndOperator"
      description: The Filter is used to identify objects that a Lifecycle Rule applies to.
        A Filter must have exactly one of Prefix, Tag, or And specified.
    TransitionList:
      type: array
      items:
        $ref: "#/components/schemas/Transition"
      xml:
        wrapped: false
    NoncurrentVersionTransitionList:
      type: array
      items:
        $ref: "#/components/schemas/NoncurrentVersionTransition"
      xml:
        wrapped: false
    NoncurrentVersionExpiration:
      type: object
      properties:
        NoncurrentDays:
          $ref: "#/components/schemas/Days"
      description: Specifies when noncurrent object versions expire. Upon expiration,
        Amazon S3 permanently deletes the noncurrent object versions. You set
        this lifecycle configuration action on a bucket that has versioning
        enabled (or suspended) to request that Amazon S3 delete noncurrent
        object versions at a specific period in the object's lifetime.
    LifecycleRule:
      type: object
      required:
        - Status
      properties:
        Expiration:
          $ref: "#/components/schemas/LifecycleExpiration"
        ID:
          $ref: "#/components/schemas/ID"
        Prefix:
          $ref: "#/components/schemas/Prefix"
        Filter:
          $ref: "#/components/schemas/LifecycleRuleFilter"
        Status:
          $ref: "#/components/schemas/ExpirationStatus"
        Transitions:
          $ref: "#/components/schemas/TransitionList"
        NoncurrentVersionTransitions:
          $ref: "#/components/schemas/NoncurrentVersionTransitionList"
        NoncurrentVersionExpiration:
          $ref: "#/components/schemas/NoncurrentVersionExpiration"
        AbortIncompleteMultipartUpload:
          $ref: "#/components/schemas/AbortIncompleteMultipartUpload"
      description: <p/>
    LifecycleRuleAndOperator:
      type: object
      properties:
        Prefix:
          $ref: "#/components/schemas/Prefix"
        Tags:
          $ref: "#/components/schemas/TagSet"
      description: This is used in a Lifecycle Rule Filter to apply a logical AND to two or
        more predicates. The Lifecycle Rule will apply to any object matching
        all of the predicates configured inside the And operator.
      xml:
        wrapped: false
    Token:
      type: string
    NextToken:
      type: string
    ListBucketAnalyticsConfigurationsRequest:
      type: object
      properties: {}
    ListBucketInventoryConfigurationsRequest:
      type: object
      properties: {}
    MetricsConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/MetricsConfiguration"
      xml:
        wrapped: false
    ListBucketMetricsConfigurationsRequest:
      type: object
      properties: {}
    UploadIdMarker:
      type: string
    NextKeyMarker:
      type: string
    NextUploadIdMarker:
      type: string
    MaxUploads:
      type: integer
    MultipartUploadList:
      type: array
      items:
        $ref: "#/components/schemas/MultipartUpload"
      xml:
        wrapped: false
    ListMultipartUploadsRequest:
      type: object
      properties: {}
    VersionIdMarker:
      type: string
    NextVersionIdMarker:
      type: string
    ObjectVersionList:
      type: array
      items:
        $ref: "#/components/schemas/ObjectVersion"
      xml:
        wrapped: false
    MaxKeys:
      type: integer
    ListObjectVersionsRequest:
      type: object
      properties: {}
    Marker:
      type: string
    NextMarker:
      type: string
    ObjectList:
      type: array
      items:
        $ref: "#/components/schemas/Object"
      xml:
        wrapped: false
    ListObjectsRequest:
      type: object
      properties: {}
    StartAfter:
      type: string
    ListObjectsV2Request:
      type: object
      properties: {}
    PartNumberMarker:
      type: integer
    NextPartNumberMarker:
      type: integer
    MaxParts:
      type: integer
    Parts:
      type: array
      items:
        $ref: "#/components/schemas/Part"
      xml:
        wrapped: false
    ListPartsRequest:
      type: object
      properties: {}
    LocationPrefix:
      type: string
    TargetBucket:
      type: string
    TargetGrants:
      type: array
      items:
        $ref: "#/components/schemas/TargetGrant"
    TargetPrefix:
      type: string
    MetadataKey:
      type: string
    MetadataEntry:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/MetadataKey"
        Value:
          $ref: "#/components/schemas/MetadataValue"
      description: A metadata key-value pair to store with an object.
    MetricsAndOperator:
      type: object
      properties:
        Prefix:
          $ref: "#/components/schemas/Prefix"
        Tags:
          $ref: "#/components/schemas/TagSet"
      description: <p/>
      xml:
        wrapped: false
    MultipartUpload:
      type: object
      properties:
        UploadId:
          $ref: "#/components/schemas/MultipartUploadId"
        Key:
          $ref: "#/components/schemas/ObjectKey"
        Initiated:
          $ref: "#/components/schemas/Initiated"
        StorageClass:
          $ref: "#/components/schemas/StorageClass"
        Owner:
          $ref: "#/components/schemas/Owner"
        Initiator:
          $ref: "#/components/schemas/Initiator"
      description: <p/>
    TransitionStorageClass:
      type: string
      enum:
        - GLACIER
        - STANDARD_IA
        - ONEZONE_IA
        - INTELLIGENT_TIERING
        - DEEP_ARCHIVE
    NoncurrentVersionTransition:
      type: object
      properties:
        NoncurrentDays:
          $ref: "#/components/schemas/Days"
        StorageClass:
          $ref: "#/components/schemas/TransitionStorageClass"
      description: Container for the transition rule that describes when noncurrent objects
        transition to the <code>STANDARD_IA</code>, <code>ONEZONE_IA</code>,
        <code>INTELLIGENT_TIERING</code>, <code>GLACIER</code>, or
        <code>DEEP_ARCHIVE</code> storage class. If your bucket is
        versioning-enabled (or versioning is suspended), you can set this action
        to request that Amazon S3 transition noncurrent object versions to the
        <code>STANDARD_IA</code>, <code>ONEZONE_IA</code>,
        <code>INTELLIGENT_TIERING</code>, <code>GLACIER</code>, or
        <code>DEEP_ARCHIVE</code> storage class at a specific period in the
        object's lifetime.
    S3KeyFilter:
      type: object
      properties:
        FilterRules:
          $ref: "#/components/schemas/FilterRuleList"
      description: A container for object key name prefix and suffix filtering rules.
    Size:
      type: integer
    ObjectStorageClass:
      type: string
      enum:
        - STANDARD
        - REDUCED_REDUNDANCY
        - GLACIER
        - STANDARD_IA
        - ONEZONE_IA
        - INTELLIGENT_TIERING
        - DEEP_ARCHIVE
    Object:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/ObjectKey"
        LastModified:
          $ref: "#/components/schemas/LastModified"
        ETag:
          $ref: "#/components/schemas/ETag"
        Size:
          $ref: "#/components/schemas/Size"
        StorageClass:
          $ref: "#/components/schemas/ObjectStorageClass"
        Owner:
          $ref: "#/components/schemas/Owner"
      description: <p/>
    ObjectIdentifier:
      type: object
      required:
        - Key
      properties:
        Key:
          $ref: "#/components/schemas/ObjectKey"
        VersionId:
          $ref: "#/components/schemas/ObjectVersionId"
      description: <p/>
    ObjectLockToken:
      type: string
    ObjectVersionStorageClass:
      type: string
      enum:
        - STANDARD
    ObjectVersion:
      type: object
      properties:
        ETag:
          $ref: "#/components/schemas/ETag"
        Size:
          $ref: "#/components/schemas/Size"
        StorageClass:
          $ref: "#/components/schemas/ObjectVersionStorageClass"
        Key:
          $ref: "#/components/schemas/ObjectKey"
        VersionId:
          $ref: "#/components/schemas/ObjectVersionId"
        IsLatest:
          $ref: "#/components/schemas/IsLatest"
        LastModified:
          $ref: "#/components/schemas/LastModified"
        Owner:
          $ref: "#/components/schemas/Owner"
      description: <p/>
    S3Location:
      type: object
      required:
        - BucketName
        - Prefix
      properties:
        BucketName:
          $ref: "#/components/schemas/BucketName"
        Prefix:
          $ref: "#/components/schemas/LocationPrefix"
        Encryption:
          $ref: "#/components/schemas/Encryption"
        CannedACL:
          $ref: "#/components/schemas/ObjectCannedACL"
        AccessControlList:
          $ref: "#/components/schemas/Grants"
        Tagging:
          $ref: "#/components/schemas/Tagging"
        UserMetadata:
          $ref: "#/components/schemas/UserMetadata"
        StorageClass:
          $ref: "#/components/schemas/StorageClass"
      description: Describes an S3 location that will receive the results of the restore
        request.
    OutputSerialization:
      type: object
      properties:
        CSV:
          $ref: "#/components/schemas/CSVOutput"
        JSON:
          $ref: "#/components/schemas/JSONOutput"
      description: Describes how results of the Select job are serialized.
    Part:
      type: object
      properties:
        PartNumber:
          $ref: "#/components/schemas/PartNumber"
        LastModified:
          $ref: "#/components/schemas/LastModified"
        ETag:
          $ref: "#/components/schemas/ETag"
        Size:
          $ref: "#/components/schemas/Size"
      description: <p/>
    Priority:
      type: integer
    Progress:
      type: object
      properties:
        BytesScanned:
          $ref: "#/components/schemas/BytesScanned"
        BytesProcessed:
          $ref: "#/components/schemas/BytesProcessed"
        BytesReturned:
          $ref: "#/components/schemas/BytesReturned"
      description: <p/>
    ProgressEvent:
      type: object
      properties:
        Details:
          $ref: "#/components/schemas/Progress"
      description: <p/>
    Protocol:
      type: string
      enum:
        - http
        - https
    PutBucketAccelerateConfigurationRequest:
      type: object
      required:
        - AccelerateConfiguration
      properties:
        AccelerateConfiguration:
          $ref: "#/components/schemas/AccelerateConfiguration"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketAclRequest:
      type: object
      properties:
        AccessControlPolicy:
          $ref: "#/components/schemas/AccessControlPolicy"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketAnalyticsConfigurationRequest:
      type: object
      required:
        - AnalyticsConfiguration
      properties:
        AnalyticsConfiguration:
          $ref: "#/components/schemas/AnalyticsConfiguration"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketCorsRequest:
      type: object
      required:
        - CORSConfiguration
      properties:
        CORSConfiguration:
          $ref: "#/components/schemas/CORSConfiguration"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketEncryptionRequest:
      type: object
      required:
        - ServerSideEncryptionConfiguration
      properties:
        ServerSideEncryptionConfiguration:
          $ref: "#/components/schemas/ServerSideEncryptionConfiguration"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketInventoryConfigurationRequest:
      type: object
      required:
        - InventoryConfiguration
      properties:
        InventoryConfiguration:
          $ref: "#/components/schemas/InventoryConfiguration"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketLifecycleConfigurationRequest:
      type: object
      properties:
        LifecycleConfiguration:
          $ref: "#/components/schemas/BucketLifecycleConfiguration"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketLifecycleRequest:
      type: object
      properties:
        LifecycleConfiguration:
          $ref: "#/components/schemas/LifecycleConfiguration"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketLoggingRequest:
      type: object
      required:
        - BucketLoggingStatus
      properties:
        BucketLoggingStatus:
          $ref: "#/components/schemas/BucketLoggingStatus"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketMetricsConfigurationRequest:
      type: object
      required:
        - MetricsConfiguration
      properties:
        MetricsConfiguration:
          $ref: "#/components/schemas/MetricsConfiguration"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketNotificationConfigurationRequest:
      type: object
      required:
        - NotificationConfiguration
      properties:
        NotificationConfiguration:
          $ref: "#/components/schemas/NotificationConfiguration"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketNotificationRequest:
      type: object
      required:
        - NotificationConfiguration
      properties:
        NotificationConfiguration:
          $ref: "#/components/schemas/NotificationConfigurationDeprecated"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketPolicyRequest:
      type: object
      required:
        - Policy
      properties:
        Policy:
          $ref: "#/components/schemas/Policy"
    PutBucketReplicationRequest:
      type: object
      required:
        - ReplicationConfiguration
      properties:
        ReplicationConfiguration:
          $ref: "#/components/schemas/ReplicationConfiguration"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    RequestPaymentConfiguration:
      type: object
      required:
        - Payer
      properties:
        Payer:
          $ref: "#/components/schemas/Payer"
      description: <p/>
    PutBucketRequestPaymentRequest:
      type: object
      required:
        - RequestPaymentConfiguration
      properties:
        RequestPaymentConfiguration:
          $ref: "#/components/schemas/RequestPaymentConfiguration"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    Tagging:
      type: object
      required:
        - TagSet
      properties:
        TagSet:
          $ref: "#/components/schemas/TagSet"
      description: <p/>
    PutBucketTaggingRequest:
      type: object
      required:
        - Tagging
      properties:
        Tagging:
          $ref: "#/components/schemas/Tagging"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    VersioningConfiguration:
      type: object
      properties:
        MFADelete:
          $ref: "#/components/schemas/MFADelete"
        Status:
          $ref: "#/components/schemas/BucketVersioningStatus"
      description: Describes the versioning state of an Amazon S3 bucket. For more
        information, see <a
        href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html">PUT
        Bucket versioning</a> in the <i>Amazon Simple Storage Service API
        Reference</i>.
    PutBucketVersioningRequest:
      type: object
      required:
        - VersioningConfiguration
      properties:
        VersioningConfiguration:
          $ref: "#/components/schemas/VersioningConfiguration"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    WebsiteConfiguration:
      type: object
      properties:
        ErrorDocument:
          $ref: "#/components/schemas/ErrorDocument"
        IndexDocument:
          $ref: "#/components/schemas/IndexDocument"
        RedirectAllRequestsTo:
          $ref: "#/components/schemas/RedirectAllRequestsTo"
        RoutingRules:
          $ref: "#/components/schemas/RoutingRules"
      description: Specifies website configuration parameters for an Amazon S3 bucket.
    PutBucketWebsiteRequest:
      type: object
      required:
        - WebsiteConfiguration
      properties:
        WebsiteConfiguration:
          $ref: "#/components/schemas/WebsiteConfiguration"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutObjectAclRequest:
      type: object
      properties:
        AccessControlPolicy:
          $ref: "#/components/schemas/AccessControlPolicy"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutObjectLegalHoldRequest:
      type: object
      properties:
        LegalHold:
          $ref: "#/components/schemas/ObjectLockLegalHold"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutObjectLockConfigurationRequest:
      type: object
      properties:
        ObjectLockConfiguration:
          $ref: "#/components/schemas/ObjectLockConfiguration"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutObjectRequest:
      type: object
      properties:
        Body:
          $ref: "#/components/schemas/Body"
        Metadata:
          $ref: "#/components/schemas/Metadata"
    PutObjectRetentionRequest:
      type: object
      properties:
        Retention:
          $ref: "#/components/schemas/ObjectLockRetention"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutObjectTaggingRequest:
      type: object
      required:
        - Tagging
      properties:
        Tagging:
          $ref: "#/components/schemas/Tagging"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutPublicAccessBlockRequest:
      type: object
      required:
        - PublicAccessBlockConfiguration
      properties:
        PublicAccessBlockConfiguration:
          $ref: "#/components/schemas/PublicAccessBlockConfiguration"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    QueueArn:
      type: string
    QueueConfiguration:
      type: object
      required:
        - QueueArn
        - Events
      properties:
        Id:
          $ref: "#/components/schemas/NotificationId"
        QueueArn:
          $ref: "#/components/schemas/QueueArn"
        Events:
          $ref: "#/components/schemas/EventList"
        Filter:
          $ref: "#/components/schemas/NotificationConfigurationFilter"
      description: Specifies the configuration for publishing messages to an Amazon Simple
        Queue Service (Amazon SQS) queue when Amazon S3 detects specified
        events.
    RecordsEvent:
      type: object
      properties:
        Payload:
          $ref: "#/components/schemas/Body"
      description: <p/>
    ReplaceKeyPrefixWith:
      type: string
    ReplaceKeyWith:
      type: string
    Redirect:
      type: object
      properties:
        HostName:
          $ref: "#/components/schemas/HostName"
        HttpRedirectCode:
          $ref: "#/components/schemas/HttpRedirectCode"
        Protocol:
          $ref: "#/components/schemas/Protocol"
        ReplaceKeyPrefixWith:
          $ref: "#/components/schemas/ReplaceKeyPrefixWith"
        ReplaceKeyWith:
          $ref: "#/components/schemas/ReplaceKeyWith"
      description: Specifies how requests are redirected. In the event of an error, you can
        specify a different error code to return.
    ReplicationRuleFilter:
      type: object
      properties:
        Prefix:
          $ref: "#/components/schemas/Prefix"
        Tag:
          $ref: "#/components/schemas/Tag"
        And:
          $ref: "#/components/schemas/ReplicationRuleAndOperator"
      description: A filter that identifies the subset of objects to which the replication
        rule applies. A <code>Filter</code> must specify exactly one
        <code>Prefix</code>, <code>Tag</code>, or an <code>And</code> child
        element.
    ReplicationRuleStatus:
      type: string
      enum:
        - Enabled
        - Disabled
    SourceSelectionCriteria:
      type: object
      properties:
        SseKmsEncryptedObjects:
          $ref: "#/components/schemas/SseKmsEncryptedObjects"
      description: A container that describes additional filters for identifying the source
        objects that you want to replicate. You can choose to enable or disable
        the replication of these objects. Currently, Amazon S3 supports only the
        filter that you can specify for objects created with server-side
        encryption using an AWS KMS-Managed Key (SSE-KMS).
    ReplicationRule:
      type: object
      required:
        - Status
        - Destination
      properties:
        ID:
          $ref: "#/components/schemas/ID"
        Priority:
          $ref: "#/components/schemas/Priority"
        Prefix:
          $ref: "#/components/schemas/Prefix"
        Filter:
          $ref: "#/components/schemas/ReplicationRuleFilter"
        Status:
          $ref: "#/components/schemas/ReplicationRuleStatus"
        SourceSelectionCriteria:
          $ref: "#/components/schemas/SourceSelectionCriteria"
        Destination:
          $ref: "#/components/schemas/Destination"
        DeleteMarkerReplication:
          $ref: "#/components/schemas/DeleteMarkerReplication"
      description: Specifies which Amazon S3 objects to replicate and where to store the
        replicas.
    ReplicationRuleAndOperator:
      type: object
      properties:
        Prefix:
          $ref: "#/components/schemas/Prefix"
        Tags:
          $ref: "#/components/schemas/TagSet"
      description: <p/>
      xml:
        wrapped: false
    RequestProgress:
      type: object
      properties:
        Enabled:
          $ref: "#/components/schemas/EnableRequestProgress"
      description: <p/>
    RestoreOutputPath:
      type: string
    RestoreRequest:
      type: object
      properties:
        Days:
          $ref: "#/components/schemas/Days"
        GlacierJobParameters:
          $ref: "#/components/schemas/GlacierJobParameters"
        Type:
          $ref: "#/components/schemas/RestoreRequestType"
        Tier:
          $ref: "#/components/schemas/Tier"
        Description:
          $ref: "#/components/schemas/Description"
        SelectParameters:
          $ref: "#/components/schemas/SelectParameters"
        OutputLocation:
          $ref: "#/components/schemas/OutputLocation"
      description: Container for restore job parameters.
    RestoreObjectRequest:
      type: object
      properties:
        RestoreRequest:
          $ref: "#/components/schemas/RestoreRequest"
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    RoutingRule:
      type: object
      required:
        - Redirect
      properties:
        Condition:
          $ref: "#/components/schemas/Condition"
        Redirect:
          $ref: "#/components/schemas/Redirect"
      description: Specifies the redirect behavior and when a redirect is applied.
    Transition:
      type: object
      properties:
        Date:
          $ref: "#/components/schemas/Date"
        Days:
          $ref: "#/components/schemas/Days"
        StorageClass:
          $ref: "#/components/schemas/TransitionStorageClass"
      description: Specifies when an object transitions to a specified storage class.
    Rule:
      type: object
      required:
        - Prefix
        - Status
      properties:
        Expiration:
          $ref: "#/components/schemas/LifecycleExpiration"
        ID:
          $ref: "#/components/schemas/ID"
        Prefix:
          $ref: "#/components/schemas/Prefix"
        Status:
          $ref: "#/components/schemas/ExpirationStatus"
        Transition:
          $ref: "#/components/schemas/Transition"
        NoncurrentVersionTransition:
          $ref: "#/components/schemas/NoncurrentVersionTransition"
        NoncurrentVersionExpiration:
          $ref: "#/components/schemas/NoncurrentVersionExpiration"
        AbortIncompleteMultipartUpload:
          $ref: "#/components/schemas/AbortIncompleteMultipartUpload"
      description: Specifies lifecycle rules for an Amazon S3 bucket. For more information,
        see <a
        href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html">PUT
        Bucket lifecycle</a> in the <i>Amazon Simple Storage Service API
        Reference</i>.
    UserMetadata:
      type: array
      items:
        $ref: "#/components/schemas/MetadataEntry"
    StatsEvent:
      type: object
      properties:
        Details:
          $ref: "#/components/schemas/Stats"
      description: <p/>
    SelectObjectContentEventStream:
      type: object
      properties:
        Records:
          $ref: "#/components/schemas/RecordsEvent"
        Stats:
          $ref: "#/components/schemas/StatsEvent"
        Progress:
          $ref: "#/components/schemas/ProgressEvent"
        Cont:
          $ref: "#/components/schemas/ContinuationEvent"
        End:
          $ref: "#/components/schemas/EndEvent"
      description: <p/>
    SelectObjectContentRequest:
      type: object
      required:
        - Expression
        - ExpressionType
        - InputSerialization
        - OutputSerialization
      properties:
        Expression:
          $ref: "#/components/schemas/Expression"
        ExpressionType:
          $ref: "#/components/schemas/ExpressionType"
        RequestProgress:
          $ref: "#/components/schemas/RequestProgress"
        InputSerialization:
          $ref: "#/components/schemas/InputSerialization"
        OutputSerialization:
          $ref: "#/components/schemas/OutputSerialization"
      description: Request to filter the contents of an Amazon S3 object based on a simple
        Structured Query Language (SQL) statement. In the request, along with
        the SQL expression, you must specify a data serialization format (JSON
        or CSV) of the object. Amazon S3 uses this to parse object data into
        records. It returns only records that match the specified SQL
        expression. You must also specify the data serialization format for the
        response. For more information, see <a
        href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectSELECTContent.html">S3Select
        API Documentation</a>.
    ServerSideEncryptionByDefault:
      type: object
      required:
        - SSEAlgorithm
      properties:
        SSEAlgorithm:
          $ref: "#/components/schemas/ServerSideEncryption"
        KMSMasterKeyID:
          $ref: "#/components/schemas/SSEKMSKeyId"
      description: Describes the default server-side encryption to apply to new objects in
        the bucket. If a PUT Object request doesn't specify any server-side
        encryption, this default encryption will be applied. For more
        information, see <a
        href="https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTencryption.html">PUT
        Bucket encryption</a> in the <i>Amazon Simple Storage Service API
        Reference</i>.
    ServerSideEncryptionRule:
      type: object
      properties:
        ApplyServerSideEncryptionByDefault:
          $ref: "#/components/schemas/ServerSideEncryptionByDefault"
      description: Specifies the default server-side encryption configuration.
    SseKmsEncryptedObjects:
      type: object
      required:
        - Status
      properties:
        Status:
          $ref: "#/components/schemas/SseKmsEncryptedObjectsStatus"
      description: A container for filter information for the selection of S3 objects
        encrypted with AWS KMS.
    SseKmsEncryptedObjectsStatus:
      type: string
      enum:
        - Enabled
        - Disabled
    Stats:
      type: object
      properties:
        BytesScanned:
          $ref: "#/components/schemas/BytesScanned"
        BytesProcessed:
          $ref: "#/components/schemas/BytesProcessed"
        BytesReturned:
          $ref: "#/components/schemas/BytesReturned"
      description: <p/>
    StorageClassAnalysisDataExport:
      type: object
      required:
        - OutputSchemaVersion
        - Destination
      properties:
        OutputSchemaVersion:
          $ref: "#/components/schemas/StorageClassAnalysisSchemaVersion"
        Destination:
          $ref: "#/components/schemas/AnalyticsExportDestination"
      description: <p/>
    StorageClassAnalysisSchemaVersion:
      type: string
      enum:
        - V_1
    Value:
      type: string
    TargetGrant:
      type: object
      properties:
        Grantee:
          $ref: "#/components/schemas/Grantee"
        Permission:
          $ref: "#/components/schemas/BucketLogsPermission"
      description: <p/>
    TopicArn:
      type: string
    TopicConfiguration:
      type: object
      required:
        - TopicArn
        - Events
      properties:
        Id:
          $ref: "#/components/schemas/NotificationId"
        TopicArn:
          $ref: "#/components/schemas/TopicArn"
        Events:
          $ref: "#/components/schemas/EventList"
        Filter:
          $ref: "#/components/schemas/NotificationConfigurationFilter"
      description: A container for specifying the configuration for publication of messages
        to an Amazon Simple Notification Service (Amazon SNS) topic when Amazon
        S3 detects specified events.
    UploadPartCopyRequest:
      type: object
      properties: {}
    UploadPartRequest:
      type: object
      properties:
        Body:
          $ref: "#/components/schemas/Body"
