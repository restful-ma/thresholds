openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: Searches certified companies and creates contact leads with them, and also
    audits the usage of clients.
  title: Google Partners
  version: v2
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.6.2
      format: google
      url: https://partners.googleapis.com/$discovery/rest?version=v2
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: partners
externalDocs:
  url: https://developers.google.com/partners/
tags:
  - name: analytics
  - name: clientMessages
  - name: companies
  - name: leads
  - name: offers
  - name: userEvents
  - name: userStates
  - name: users
  - name: v2
paths:
  /v2/analytics:
    get:
      description: >-
        Lists analytics data for a user's associated company.

        Should only be called within the context of an authorized logged in user.
      operationId: partners.analytics.list
      parameters:
        - description: >-
            Requested page size. Server may return fewer analytics than
            requested.

            If unspecified or set to 0, default value is 30.

            Specifies the number of days in the date range when querying analytics.

            The `page_token` represents the end date of the date range

            and the start date is calculated using the `page_size` as the number

            of days BEFORE the end date.

            Must be a non-negative integer.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            A token identifying a page of results that the server returns.

            Typically, this is the value of `ListAnalyticsResponse.next_page_token`

            returned from the previous call to

            ListAnalytics.

            Will be a date string in `YYYY-MM-DD` format representing the end date

            of the date range of results to return.

            If unspecified or set to "", default value is the current date.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Experiment IDs the current request belongs to.
          in: query
          name: requestMetadata.experimentIds
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Locale to use for the current request.
          in: query
          name: requestMetadata.locale
          schema:
            type: string
        - description: Google Partners session ID.
          in: query
          name: requestMetadata.partnersSessionId
          schema:
            type: string
        - description: >-
            Identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSourceId
          schema:
            type: string
        - description: >-
            Second level identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSubId
          schema:
            type: string
        - description: IP address to use instead of the user's geo-located IP address.
          in: query
          name: requestMetadata.userOverrides.ipAddress
          schema:
            type: string
        - description: Logged-in user ID to impersonate instead of the user's ID.
          in: query
          name: requestMetadata.userOverrides.userId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListAnalyticsResponse"
      tags:
        - analytics
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  /v2/clientMessages:log:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Logs a generic message from the client, such as
        `Failed to render component`, `Profile page is running slow`,
        `More than 500 users have accessed this result.`, etc.
      operationId: partners.clientMessages.log
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LogMessageRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LogMessageResponse"
      tags:
        - clientMessages
  /v2/companies:
    get:
      description: Lists companies.
      operationId: partners.companies.list
      parameters:
        - description: |-
            The address to use when searching for companies.
            If not given, the geo-located address of the request is used.
          in: query
          name: address
          schema:
            type: string
        - description: Company name to search for.
          in: query
          name: companyName
          schema:
            type: string
        - description: List of reasons for using Google Partner Search to get companies.
          in: query
          name: gpsMotivations
          explode: true
          schema:
            type: array
            items:
              enum:
                - GPS_MOTIVATION_UNSPECIFIED
                - GPSM_HELP_WITH_ADVERTISING
                - GPSM_HELP_WITH_WEBSITE
                - GPSM_NO_WEBSITE
              type: string
        - description: List of industries the company can help with.
          in: query
          name: industries
          explode: true
          schema:
            type: array
            items:
              enum:
                - INDUSTRY_UNSPECIFIED
                - I_AUTOMOTIVE
                - I_BUSINESS_TO_BUSINESS
                - I_CONSUMER_PACKAGED_GOODS
                - I_EDUCATION
                - I_FINANCE
                - I_HEALTHCARE
                - I_MEDIA_AND_ENTERTAINMENT
                - I_RETAIL
                - I_TECHNOLOGY
                - I_TRAVEL
              type: string
        - description: >-
            List of language codes that company can support. Only primary
            language

            subtags are accepted as defined by

            <a href="https://tools.ietf.org/html/bcp47">BCP 47</a>

            (IETF BCP 47, "Tags for Identifying Languages").
          in: query
          name: languageCodes
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: The 3-letter currency code defined in ISO 4217.
          in: query
          name: maxMonthlyBudget.currencyCode
          schema:
            type: string
        - description: >-
            Number of nano (10^-9) units of the amount.

            The value must be between -999,999,999 and +999,999,999 inclusive.

            If `units` is positive, `nanos` must be positive or zero.

            If `units` is zero, `nanos` can be positive, zero, or negative.

            If `units` is negative, `nanos` must be negative or zero.

            For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
          in: query
          name: maxMonthlyBudget.nanos
          schema:
            type: integer
        - description: >-
            The whole units of the amount.

            For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
          in: query
          name: maxMonthlyBudget.units
          schema:
            type: string
        - description: The 3-letter currency code defined in ISO 4217.
          in: query
          name: minMonthlyBudget.currencyCode
          schema:
            type: string
        - description: >-
            Number of nano (10^-9) units of the amount.

            The value must be between -999,999,999 and +999,999,999 inclusive.

            If `units` is positive, `nanos` must be positive or zero.

            If `units` is zero, `nanos` can be positive, zero, or negative.

            If `units` is negative, `nanos` must be negative or zero.

            For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
          in: query
          name: minMonthlyBudget.nanos
          schema:
            type: integer
        - description: >-
            The whole units of the amount.

            For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
          in: query
          name: minMonthlyBudget.units
          schema:
            type: string
        - description: >-
            How to order addresses within the returned companies. Currently,
            only

            `address` and `address desc` is supported which will sorted by closest to

            farthest in distance from given address and farthest to closest distance

            from given address respectively.
          in: query
          name: orderBy
          schema:
            type: string
        - description: >-
            Requested page size. Server may return fewer companies than
            requested.

            If unspecified, server picks an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            A token identifying a page of results that the server returns.

            Typically, this is the value of `ListCompaniesResponse.next_page_token`

            returned from the previous call to

            ListCompanies.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Experiment IDs the current request belongs to.
          in: query
          name: requestMetadata.experimentIds
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Locale to use for the current request.
          in: query
          name: requestMetadata.locale
          schema:
            type: string
        - description: Google Partners session ID.
          in: query
          name: requestMetadata.partnersSessionId
          schema:
            type: string
        - description: >-
            Identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSourceId
          schema:
            type: string
        - description: >-
            Second level identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSubId
          schema:
            type: string
        - description: IP address to use instead of the user's geo-located IP address.
          in: query
          name: requestMetadata.userOverrides.ipAddress
          schema:
            type: string
        - description: Logged-in user ID to impersonate instead of the user's ID.
          in: query
          name: requestMetadata.userOverrides.userId
          schema:
            type: string
        - description: >-
            List of services that the returned agencies should provide. If this
            is

            not empty, any returned agency must have at least one of these services,

            or one of the specializations in the "specializations" field.
          in: query
          name: services
          explode: true
          schema:
            type: array
            items:
              enum:
                - SERVICE_UNSPECIFIED
                - S_ADVANCED_ADWORDS_SUPPORT
                - S_ADVERTISING_ON_GOOGLE
                - S_AN_ENHANCED_WEBSITE
                - S_AN_ONLINE_MARKETING_PLAN
                - S_MOBILE_AND_VIDEO_ADS
                - S_MOBILE_WEBSITE_SERVICES
              type: string
        - description: >-
            List of specializations that the returned agencies should provide.
            If this

            is not empty, any returned agency must have at least one of these

            specializations, or one of the services in the "services" field.
          in: query
          name: specializations
          explode: true
          schema:
            type: array
            items:
              enum:
                - BADGE_SPECIALIZATION_UNKNOWN
                - BADGE_SPECIALIZATION_ADWORDS_SEARCH
                - BADGE_SPECIALIZATION_ADWORDS_DISPLAY
                - BADGE_SPECIALIZATION_ADWORDS_MOBILE
                - BADGE_SPECIALIZATION_ADWORDS_VIDEO
                - BADGE_SPECIALIZATION_ADWORDS_SHOPPING
              type: string
        - description: |-
            The view of the `Company` resource to be returned. This must not be
            `COMPANY_VIEW_UNSPECIFIED`.
          in: query
          name: view
          schema:
            type: string
            enum:
              - COMPANY_VIEW_UNSPECIFIED
              - CV_GOOGLE_PARTNER_SEARCH
        - description: |-
            Website URL that will help to find a better matched company.
            .
          in: query
          name: websiteUrl
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListCompaniesResponse"
      tags:
        - companies
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    patch:
      description: >-
        Update company.

        Should only be called within the context of an authorized logged in user.
      operationId: partners.updateCompanies
      parameters:
        - description: Experiment IDs the current request belongs to.
          in: query
          name: requestMetadata.experimentIds
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Locale to use for the current request.
          in: query
          name: requestMetadata.locale
          schema:
            type: string
        - description: Google Partners session ID.
          in: query
          name: requestMetadata.partnersSessionId
          schema:
            type: string
        - description: >-
            Identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSourceId
          schema:
            type: string
        - description: >-
            Second level identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSubId
          schema:
            type: string
        - description: IP address to use instead of the user's geo-located IP address.
          in: query
          name: requestMetadata.userOverrides.ipAddress
          schema:
            type: string
        - description: Logged-in user ID to impersonate instead of the user's ID.
          in: query
          name: requestMetadata.userOverrides.userId
          schema:
            type: string
        - description: |-
            Standard field mask for the set of fields to be updated.
            Required with at least 1 value in FieldMask's paths.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Company"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Company"
      tags:
        - v2
  "/v2/companies/{companyId}":
    get:
      description: Gets a company.
      operationId: partners.companies.get
      parameters:
        - description: |-
            The address to use for sorting the company's addresses by proximity.
            If not given, the geo-located address of the request is used.
            Used when order_by is set.
          in: query
          name: address
          schema:
            type: string
        - description: The ID of the company to retrieve.
          in: path
          name: companyId
          required: true
          schema:
            type: string
        - description: >-
            If the company's budget is in a different currency code than this
            one, then

            the converted budget is converted to this currency code.
          in: query
          name: currencyCode
          schema:
            type: string
        - description: >-
            How to order addresses within the returned company. Currently, only

            `address` and `address desc` is supported which will sorted by closest to

            farthest in distance from given address and farthest to closest distance

            from given address respectively.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Experiment IDs the current request belongs to.
          in: query
          name: requestMetadata.experimentIds
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Locale to use for the current request.
          in: query
          name: requestMetadata.locale
          schema:
            type: string
        - description: Google Partners session ID.
          in: query
          name: requestMetadata.partnersSessionId
          schema:
            type: string
        - description: >-
            Identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSourceId
          schema:
            type: string
        - description: >-
            Second level identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSubId
          schema:
            type: string
        - description: IP address to use instead of the user's geo-located IP address.
          in: query
          name: requestMetadata.userOverrides.ipAddress
          schema:
            type: string
        - description: Logged-in user ID to impersonate instead of the user's ID.
          in: query
          name: requestMetadata.userOverrides.userId
          schema:
            type: string
        - description: |-
            The view of `Company` resource to be returned. This must not be
            `COMPANY_VIEW_UNSPECIFIED`.
          in: query
          name: view
          schema:
            type: string
            enum:
              - COMPANY_VIEW_UNSPECIFIED
              - CV_GOOGLE_PARTNER_SEARCH
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GetCompanyResponse"
      tags:
        - companies
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v2/companies/{companyId}/leads":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Creates an advertiser lead for the given company ID.
      operationId: partners.companies.leads.create
      parameters:
        - description: The ID of the company to contact.
          in: path
          name: companyId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLeadRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CreateLeadResponse"
      tags:
        - companies
  /v2/leads:
    get:
      description: >-
        Lists advertiser leads for a user's associated company.

        Should only be called within the context of an authorized logged in user.
      operationId: partners.leads.list
      parameters:
        - description: |-
            How to order Leads. Currently, only `create_time`
            and `create_time desc` are supported
          in: query
          name: orderBy
          schema:
            type: string
        - description: |-
            Requested page size. Server may return fewer leads than requested.
            If unspecified, server picks an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            A token identifying a page of results that the server returns.
            Typically, this is the value of `ListLeadsResponse.next_page_token`
            returned from the previous call to
            ListLeads.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Experiment IDs the current request belongs to.
          in: query
          name: requestMetadata.experimentIds
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Locale to use for the current request.
          in: query
          name: requestMetadata.locale
          schema:
            type: string
        - description: Google Partners session ID.
          in: query
          name: requestMetadata.partnersSessionId
          schema:
            type: string
        - description: >-
            Identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSourceId
          schema:
            type: string
        - description: >-
            Second level identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSubId
          schema:
            type: string
        - description: IP address to use instead of the user's geo-located IP address.
          in: query
          name: requestMetadata.userOverrides.ipAddress
          schema:
            type: string
        - description: Logged-in user ID to impersonate instead of the user's ID.
          in: query
          name: requestMetadata.userOverrides.userId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListLeadsResponse"
      tags:
        - leads
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    patch:
      description: Updates the specified lead.
      operationId: partners.updateLeads
      parameters:
        - description: Experiment IDs the current request belongs to.
          in: query
          name: requestMetadata.experimentIds
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Locale to use for the current request.
          in: query
          name: requestMetadata.locale
          schema:
            type: string
        - description: Google Partners session ID.
          in: query
          name: requestMetadata.partnersSessionId
          schema:
            type: string
        - description: >-
            Identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSourceId
          schema:
            type: string
        - description: >-
            Second level identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSubId
          schema:
            type: string
        - description: IP address to use instead of the user's geo-located IP address.
          in: query
          name: requestMetadata.userOverrides.ipAddress
          schema:
            type: string
        - description: Logged-in user ID to impersonate instead of the user's ID.
          in: query
          name: requestMetadata.userOverrides.userId
          schema:
            type: string
        - description: |-
            Standard field mask for the set of fields to be updated.
            Required with at least 1 value in FieldMask's paths.
            Only `state` and `adwords_customer_id` are currently supported.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Lead"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Lead"
      tags:
        - v2
  /v2/offers:
    get:
      description: Lists the Offers available for the current user
      operationId: partners.offers.list
      parameters:
        - description: Experiment IDs the current request belongs to.
          in: query
          name: requestMetadata.experimentIds
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Locale to use for the current request.
          in: query
          name: requestMetadata.locale
          schema:
            type: string
        - description: Google Partners session ID.
          in: query
          name: requestMetadata.partnersSessionId
          schema:
            type: string
        - description: >-
            Identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSourceId
          schema:
            type: string
        - description: >-
            Second level identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSubId
          schema:
            type: string
        - description: IP address to use instead of the user's geo-located IP address.
          in: query
          name: requestMetadata.userOverrides.ipAddress
          schema:
            type: string
        - description: Logged-in user ID to impersonate instead of the user's ID.
          in: query
          name: requestMetadata.userOverrides.userId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListOffersResponse"
      tags:
        - offers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  /v2/offers/history:
    get:
      description: Lists the Historical Offers for the current user (or user's entire
        company)
      operationId: partners.offers.history.list
      parameters:
        - description: if true, show history for the entire company.  Requires user to be
            admin.
          in: query
          name: entireCompany
          schema:
            type: boolean
        - description: >-
            Comma-separated list of fields to order by, e.g.: "foo,bar,baz".

            Use "foo desc" to sort descending.

            List of valid field names is: name, offer_code, expiration_time, status,
                last_modified_time, sender_name, creation_time, country_code,
                offer_type.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Maximum number of rows to return per page.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Token to retrieve a specific page.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Experiment IDs the current request belongs to.
          in: query
          name: requestMetadata.experimentIds
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Locale to use for the current request.
          in: query
          name: requestMetadata.locale
          schema:
            type: string
        - description: Google Partners session ID.
          in: query
          name: requestMetadata.partnersSessionId
          schema:
            type: string
        - description: >-
            Identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSourceId
          schema:
            type: string
        - description: >-
            Second level identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSubId
          schema:
            type: string
        - description: IP address to use instead of the user's geo-located IP address.
          in: query
          name: requestMetadata.userOverrides.ipAddress
          schema:
            type: string
        - description: Logged-in user ID to impersonate instead of the user's ID.
          in: query
          name: requestMetadata.userOverrides.userId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListOffersHistoryResponse"
      tags:
        - offers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  /v2/partnersstatus:
    get:
      description: |-
        Gets Partners Status of the logged in user's agency.
        Should only be called if the logged in user is the admin of the agency.
      operationId: partners.getPartnersstatus
      parameters:
        - description: Experiment IDs the current request belongs to.
          in: query
          name: requestMetadata.experimentIds
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Locale to use for the current request.
          in: query
          name: requestMetadata.locale
          schema:
            type: string
        - description: Google Partners session ID.
          in: query
          name: requestMetadata.partnersSessionId
          schema:
            type: string
        - description: >-
            Identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSourceId
          schema:
            type: string
        - description: >-
            Second level identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSubId
          schema:
            type: string
        - description: IP address to use instead of the user's geo-located IP address.
          in: query
          name: requestMetadata.userOverrides.ipAddress
          schema:
            type: string
        - description: Logged-in user ID to impersonate instead of the user's ID.
          in: query
          name: requestMetadata.userOverrides.userId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GetPartnersStatusResponse"
      tags:
        - v2
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  /v2/userEvents:log:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Logs a user event.
      operationId: partners.userEvents.log
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LogUserEventRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LogUserEventResponse"
      tags:
        - userEvents
  /v2/userStates:
    get:
      description: Lists states for current user.
      operationId: partners.userStates.list
      parameters:
        - description: Experiment IDs the current request belongs to.
          in: query
          name: requestMetadata.experimentIds
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Locale to use for the current request.
          in: query
          name: requestMetadata.locale
          schema:
            type: string
        - description: Google Partners session ID.
          in: query
          name: requestMetadata.partnersSessionId
          schema:
            type: string
        - description: >-
            Identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSourceId
          schema:
            type: string
        - description: >-
            Second level identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSubId
          schema:
            type: string
        - description: IP address to use instead of the user's geo-located IP address.
          in: query
          name: requestMetadata.userOverrides.ipAddress
          schema:
            type: string
        - description: Logged-in user ID to impersonate instead of the user's ID.
          in: query
          name: requestMetadata.userOverrides.userId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListUserStatesResponse"
      tags:
        - userStates
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  /v2/users/profile:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    patch:
      description: |-
        Updates a user's profile. A user can only update their own profile and
        should only be called within the context of a logged in user.
      operationId: partners.users.updateProfile
      parameters:
        - description: Experiment IDs the current request belongs to.
          in: query
          name: requestMetadata.experimentIds
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Locale to use for the current request.
          in: query
          name: requestMetadata.locale
          schema:
            type: string
        - description: Google Partners session ID.
          in: query
          name: requestMetadata.partnersSessionId
          schema:
            type: string
        - description: >-
            Identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSourceId
          schema:
            type: string
        - description: >-
            Second level identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSubId
          schema:
            type: string
        - description: IP address to use instead of the user's geo-located IP address.
          in: query
          name: requestMetadata.userOverrides.ipAddress
          schema:
            type: string
        - description: Logged-in user ID to impersonate instead of the user's ID.
          in: query
          name: requestMetadata.userOverrides.userId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfile"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/UserProfile"
      tags:
        - users
  "/v2/users/{userId}":
    get:
      description: Gets a user.
      operationId: partners.users.get
      parameters:
        - description: Experiment IDs the current request belongs to.
          in: query
          name: requestMetadata.experimentIds
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Locale to use for the current request.
          in: query
          name: requestMetadata.locale
          schema:
            type: string
        - description: Google Partners session ID.
          in: query
          name: requestMetadata.partnersSessionId
          schema:
            type: string
        - description: >-
            Identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSourceId
          schema:
            type: string
        - description: >-
            Second level identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSubId
          schema:
            type: string
        - description: IP address to use instead of the user's geo-located IP address.
          in: query
          name: requestMetadata.userOverrides.ipAddress
          schema:
            type: string
        - description: Logged-in user ID to impersonate instead of the user's ID.
          in: query
          name: requestMetadata.userOverrides.userId
          schema:
            type: string
        - description: >-
            Identifier of the user. Can be set to <code>me</code> to mean the
            currently

            authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
        - description: Specifies what parts of the user information to return.
          in: query
          name: userView
          schema:
            type: string
            enum:
              - BASIC
              - PROFILE
              - PUBLIC_PROFILE
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/User"
      tags:
        - users
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v2/users/{userId}/companyRelation":
    delete:
      description: Deletes a user's company relation. Unaffiliaites the user from a company.
      operationId: partners.users.deleteCompanyRelation
      parameters:
        - description: Experiment IDs the current request belongs to.
          in: query
          name: requestMetadata.experimentIds
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Locale to use for the current request.
          in: query
          name: requestMetadata.locale
          schema:
            type: string
        - description: Google Partners session ID.
          in: query
          name: requestMetadata.partnersSessionId
          schema:
            type: string
        - description: >-
            Identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSourceId
          schema:
            type: string
        - description: >-
            Second level identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSubId
          schema:
            type: string
        - description: IP address to use instead of the user's geo-located IP address.
          in: query
          name: requestMetadata.userOverrides.ipAddress
          schema:
            type: string
        - description: Logged-in user ID to impersonate instead of the user's ID.
          in: query
          name: requestMetadata.userOverrides.userId
          schema:
            type: string
        - description: |-
            The ID of the user. Can be set to <code>me</code> to mean
            the currently authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      tags:
        - users
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    put:
      description: Creates a user's company relation. Affiliates the user to a company.
      operationId: partners.users.createCompanyRelation
      parameters:
        - description: Experiment IDs the current request belongs to.
          in: query
          name: requestMetadata.experimentIds
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Locale to use for the current request.
          in: query
          name: requestMetadata.locale
          schema:
            type: string
        - description: Google Partners session ID.
          in: query
          name: requestMetadata.partnersSessionId
          schema:
            type: string
        - description: >-
            Identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSourceId
          schema:
            type: string
        - description: >-
            Second level identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          in: query
          name: requestMetadata.trafficSource.trafficSubId
          schema:
            type: string
        - description: IP address to use instead of the user's geo-located IP address.
          in: query
          name: requestMetadata.userOverrides.ipAddress
          schema:
            type: string
        - description: Logged-in user ID to impersonate instead of the user's ID.
          in: query
          name: requestMetadata.userOverrides.userId
          schema:
            type: string
        - description: |-
            The ID of the user. Can be set to <code>me</code> to mean
            the currently authenticated user.
          in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompanyRelation"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CompanyRelation"
      tags:
        - users
servers:
  - url: https://partners.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    bearer_token:
      description: OAuth bearer token.
      in: query
      name: bearer_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    pp:
      description: Pretty-print response.
      in: query
      name: pp
      schema:
        type: boolean
        default: true
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  schemas:
    AdWordsManagerAccountInfo:
      description: |-
        Information about a particular AdWords Manager Account.
        Read more at https://support.google.com/adwords/answer/6139186
      properties:
        customerName:
          description: Name of the customer this account represents.
          type: string
        id:
          description: The AdWords Manager Account id.
          format: int64
          type: string
      type: object
    Analytics:
      description: Analytics data for a `Company` within a single day.
      properties:
        contacts:
          $ref: "#/components/schemas/AnalyticsDataPoint"
        eventDate:
          $ref: "#/components/schemas/Date"
        profileViews:
          $ref: "#/components/schemas/AnalyticsDataPoint"
        searchViews:
          $ref: "#/components/schemas/AnalyticsDataPoint"
      type: object
    AnalyticsDataPoint:
      description: Details of the analytics events for a `Company` within a single day.
      properties:
        eventCount:
          description: |-
            Number of times the type of event occurred.
            Meaning depends on context (e.g. profile views, contacts, etc.).
          format: int32
          type: integer
        eventLocations:
          description: Location information of where these events occurred.
          items:
            $ref: "#/components/schemas/LatLng"
          type: array
      type: object
    AnalyticsSummary:
      description: Analytics aggregated data for a `Company` for a given date range.
      properties:
        contactsCount:
          description: |-
            Aggregated number of times users contacted the `Company`
            for given date range.
          format: int32
          type: integer
        profileViewsCount:
          description: Aggregated number of profile views for the `Company` for given date
            range.
          format: int32
          type: integer
        searchViewsCount:
          description: |-
            Aggregated number of times users saw the `Company`
            in Google Partners Search results for given date range.
          format: int32
          type: integer
      type: object
    AvailableOffer:
      description: Available Offers to be distributed.
      properties:
        available:
          description: The number of codes for this offer that are available for
            distribution.
          format: int32
          type: integer
        countryOfferInfos:
          description: Offer info by country.
          items:
            $ref: "#/components/schemas/CountryOfferInfo"
          type: array
        description:
          description: Description of the offer.
          type: string
        id:
          description: ID of this offer.
          format: int64
          type: string
        maxAccountAge:
          description: The maximum age of an account [in days] to be eligible.
          format: int32
          type: integer
        name:
          description: Name of the offer.
          type: string
        offerLevel:
          description: Level of this offer.
          enum:
            - OFFER_LEVEL_UNSPECIFIED
            - OFFER_LEVEL_DENY_PROBLEM
            - OFFER_LEVEL_DENY_CONTRACT
            - OFFER_LEVEL_MANUAL
            - OFFER_LEVEL_LIMIT_0
            - OFFER_LEVEL_LIMIT_5
            - OFFER_LEVEL_LIMIT_15
            - OFFER_LEVEL_LIMIT_50
          type: string
        offerType:
          description: Type of offer.
          enum:
            - OFFER_TYPE_UNSPECIFIED
            - OFFER_TYPE_SPEND_X_GET_Y
            - OFFER_TYPE_VIDEO
            - OFFER_TYPE_SPEND_MATCH
          type: string
        qualifiedCustomer:
          description: Customers who qualify for this offer.
          items:
            $ref: "#/components/schemas/OfferCustomer"
          type: array
        qualifiedCustomersComplete:
          description: Whether or not the list of qualified customers is definitely
            complete.
          type: boolean
        showSpecialOfferCopy:
          description: Should special text be shown on the offers page.
          type: boolean
        terms:
          description: Terms of the offer.
          type: string
      type: object
    Certification:
      description: A user's information on a specific certification.
      properties:
        achieved:
          description: Whether this certification has been achieved.
          type: boolean
        certificationType:
          description: The type of certification, the area of expertise.
          enum:
            - CERTIFICATION_TYPE_UNSPECIFIED
            - CT_ADWORDS
            - CT_YOUTUBE
            - CT_VIDEOADS
            - CT_ANALYTICS
            - CT_DOUBLECLICK
            - CT_SHOPPING
            - CT_MOBILE
            - CT_DIGITAL_SALES
            - CT_ADWORDS_SEARCH
            - CT_ADWORDS_DISPLAY
            - CT_MOBILE_SITES
          type: string
        expiration:
          description: Date this certification is due to expire.
          format: google-datetime
          type: string
        lastAchieved:
          description: The date the user last achieved certification.
          format: google-datetime
          type: string
        warning:
          description: Whether this certification is in the state of warning.
          type: boolean
      type: object
    CertificationExamStatus:
      description: Status for a Google Partners certification exam.
      properties:
        numberUsersPass:
          description: The number of people who have passed the certification exam.
          format: int32
          type: integer
        type:
          description: The type of certification exam.
          enum:
            - CERTIFICATION_EXAM_TYPE_UNSPECIFIED
            - CET_ADWORDS_FUNDAMENTALS
            - CET_ADWORDS_ADVANCED_SEARCH
            - CET_ADWORDS_ADVANCED_DISPLAY
            - CET_VIDEO_ADS
            - CET_DOUBLECLICK
            - CET_ANALYTICS
            - CET_SHOPPING
            - CET_MOBILE
            - CET_DIGITAL_SALES
            - CET_MOBILE_SITES
          type: string
      type: object
    CertificationStatus:
      description: Google Partners certification status.
      properties:
        examStatuses:
          description: List of certification exam statuses.
          items:
            $ref: "#/components/schemas/CertificationExamStatus"
          type: array
        isCertified:
          description: Whether certification is passing.
          type: boolean
        type:
          description: The type of the certification.
          enum:
            - CERTIFICATION_TYPE_UNSPECIFIED
            - CT_ADWORDS
            - CT_YOUTUBE
            - CT_VIDEOADS
            - CT_ANALYTICS
            - CT_DOUBLECLICK
            - CT_SHOPPING
            - CT_MOBILE
            - CT_DIGITAL_SALES
            - CT_ADWORDS_SEARCH
            - CT_ADWORDS_DISPLAY
            - CT_MOBILE_SITES
          type: string
        userCount:
          description: Number of people who are certified,
          format: int32
          type: integer
      type: object
    Company:
      description: >-
        A company resource in the Google Partners API. Once certified, it
        qualifies

        for being searched by advertisers.
      properties:
        additionalWebsites:
          description: >-
            URL of the company's additional websites used to verify the dynamic
            badges.

            These are stored as full URLs as entered by the user, but only the TLD will

            be used for the actual verification.
          items:
            type: string
          type: array
        autoApprovalEmailDomains:
          description: |-
            Email domains that allow users with a matching email address to get
            auto-approved for associating with this company.
          items:
            type: string
          type: array
        badgeAuthorityInAwn:
          description: Whether the company's badge authority is in AWN
          type: boolean
        badgeTier:
          description: Partner badge tier
          enum:
            - BADGE_TIER_NONE
            - BADGE_TIER_REGULAR
            - BADGE_TIER_PREMIER
          type: string
        certificationStatuses:
          description: The list of Google Partners certification statuses for the company.
          items:
            $ref: "#/components/schemas/CertificationStatus"
          type: array
        companyTypes:
          description: Company type labels listed on the company's profile.
          items:
            enum:
              - COMPANY_TYPE_UNSPECIFIED
              - FULL_SERVICE_AGENCY
              - MEDIA_AGENCY
              - CREATIVE_AGENCY
              - CDIGITAL_AGENCY
              - SEM_SEO
              - PERFORMANCE_MARKETING
              - ADVERTISING_TOOL_DEVELOPMENT
              - PR
              - SELF_MANAGED
              - RESELLER
            type: string
          type: array
        convertedMinMonthlyBudget:
          $ref: "#/components/schemas/Money"
        id:
          description: The ID of the company.
          type: string
        industries:
          description: Industries the company can help with.
          items:
            enum:
              - INDUSTRY_UNSPECIFIED
              - I_AUTOMOTIVE
              - I_BUSINESS_TO_BUSINESS
              - I_CONSUMER_PACKAGED_GOODS
              - I_EDUCATION
              - I_FINANCE
              - I_HEALTHCARE
              - I_MEDIA_AND_ENTERTAINMENT
              - I_RETAIL
              - I_TECHNOLOGY
              - I_TRAVEL
            type: string
          type: array
        localizedInfos:
          description: The list of localized info for the company.
          items:
            $ref: "#/components/schemas/LocalizedCompanyInfo"
          type: array
        locations:
          description: |-
            The list of all company locations.
            If set, must include the
            primary_location
            in the list.
          items:
            $ref: "#/components/schemas/Location"
          type: array
        name:
          description: The name of the company.
          type: string
        originalMinMonthlyBudget:
          $ref: "#/components/schemas/Money"
        primaryAdwordsManagerAccountId:
          description: The Primary AdWords Manager Account id.
          format: int64
          type: string
        primaryLanguageCode:
          description: |-
            The primary language code of the company, as defined by
            <a href="https://tools.ietf.org/html/bcp47">BCP 47</a>
            (IETF BCP 47, "Tags for Identifying Languages").
          type: string
        primaryLocation:
          $ref: "#/components/schemas/Location"
        profileStatus:
          description: The public viewability status of the company's profile.
          enum:
            - COMPANY_PROFILE_STATUS_UNSPECIFIED
            - HIDDEN
            - PUBLISHED
            - SEARCHABLE
          type: string
        publicProfile:
          $ref: "#/components/schemas/PublicProfile"
        ranks:
          description: |-
            Information related to the ranking of the company within the list of
            companies.
          items:
            $ref: "#/components/schemas/Rank"
          type: array
        services:
          description: Services the company can help with.
          items:
            enum:
              - SERVICE_UNSPECIFIED
              - S_ADVANCED_ADWORDS_SUPPORT
              - S_ADVERTISING_ON_GOOGLE
              - S_AN_ENHANCED_WEBSITE
              - S_AN_ONLINE_MARKETING_PLAN
              - S_MOBILE_AND_VIDEO_ADS
              - S_MOBILE_WEBSITE_SERVICES
            type: string
          type: array
        specializationStatus:
          description: The list of Google Partners specialization statuses for the company.
          items:
            $ref: "#/components/schemas/SpecializationStatus"
          type: array
        websiteUrl:
          description: URL of the company's website.
          type: string
      type: object
    CompanyRelation:
      description: |-
        A CompanyRelation resource representing information about a user's
        affiliation and standing with a company in Partners.
      properties:
        address:
          description: The primary address for this company.
          type: string
        badgeTier:
          description: Whether the company is a Partner.
          enum:
            - BADGE_TIER_NONE
            - BADGE_TIER_REGULAR
            - BADGE_TIER_PREMIER
          type: string
        companyAdmin:
          description: Indicates if the user is an admin for this company.
          type: boolean
        companyId:
          description: |-
            The ID of the company. There may be no id if this is a
            pending company.5
          type: string
        creationTime:
          description: |-
            The timestamp of when affiliation was requested.
            @OutputOnly
          format: google-datetime
          type: string
        internalCompanyId:
          description: |-
            The internal company ID.
            Only available for a whitelisted set of api clients.
          type: string
        isPending:
          description: The flag that indicates if the company is pending verification.
          type: boolean
        logoUrl:
          description: A URL to a profile photo, e.g. a G+ profile photo.
          type: string
        managerAccount:
          description: "The AdWords manager account # associated this company."
          format: int64
          type: string
        name:
          description: The name (in the company's primary language) for the company.
          type: string
        phoneNumber:
          description: The phone number for the company's primary address.
          type: string
        primaryAddress:
          $ref: "#/components/schemas/Location"
        primaryCountryCode:
          description: The primary country code of the company.
          type: string
        primaryLanguageCode:
          description: The primary language code of the company.
          type: string
        resolvedTimestamp:
          description: |-
            The timestamp when the user was approved.
            @OutputOnly
          format: google-datetime
          type: string
        segment:
          description: The segment the company is classified as.
          items:
            enum:
              - COMPANY_SEGMENT_UNKNOWN
              - COMPANY_SEGMENT_NAL
              - COMPANY_SEGMENT_PSP
              - COMPANY_SEGMENT_PPSP
            type: string
          type: array
        specializationStatus:
          description: The list of Google Partners specialization statuses for the company.
          items:
            $ref: "#/components/schemas/SpecializationStatus"
          type: array
        state:
          description: The state of relationship, in terms of approvals.
          enum:
            - USER_COMPANY_REATION_STATE_NONE_SPECIFIED
            - USER_COMPANY_RELATION_STATE_AWAIT_EMAIL
            - USER_COMPANY_RELATION_STATE_AWAIT_ADMIN
            - USER_COMPANY_RELATION_STATE_APPROVED
          type: string
        website:
          description: The website URL for this company.
          type: string
      type: object
    CountryOfferInfo:
      description: Offer info by country.
      properties:
        getYAmount:
          description: (localized) Get Y amount for that country's offer.
          type: string
        offerCountryCode:
          description: Country code for which offer codes may be requested.
          type: string
        offerType:
          description: Type of offer country is eligible for.
          enum:
            - OFFER_TYPE_UNSPECIFIED
            - OFFER_TYPE_SPEND_X_GET_Y
            - OFFER_TYPE_VIDEO
            - OFFER_TYPE_SPEND_MATCH
          type: string
        spendXAmount:
          description: (localized) Spend X amount for that country's offer.
          type: string
      type: object
    CreateLeadRequest:
      description: Request message for CreateLead.
      properties:
        lead:
          $ref: "#/components/schemas/Lead"
        recaptchaChallenge:
          $ref: "#/components/schemas/RecaptchaChallenge"
        requestMetadata:
          $ref: "#/components/schemas/RequestMetadata"
      type: object
    CreateLeadResponse:
      description: Response message for CreateLead.
      properties:
        lead:
          $ref: "#/components/schemas/Lead"
        recaptchaStatus:
          description: >-
            The outcome of <a
            href="https://www.google.com/recaptcha/">reCaptcha</a>

            validation.
          enum:
            - RECAPTCHA_STATUS_UNSPECIFIED
            - RS_NOT_NEEDED
            - RS_PASSED
            - RS_FAILED
          type: string
        responseMetadata:
          $ref: "#/components/schemas/ResponseMetadata"
      type: object
    Date:
      description: >-
        Represents a whole calendar date, e.g. date of birth. The time of day
        and

        time zone are either specified elsewhere or are not significant. The date

        is relative to the Proleptic Gregorian Calendar. The day may be 0 to

        represent a year and month where the day is not significant, e.g. credit card

        expiration date. The year may be 0 to represent a month and day independent

        of year, e.g. anniversary date. Related types are google.type.TimeOfDay

        and `google.protobuf.Timestamp`.
      properties:
        day:
          description: >-
            Day of month. Must be from 1 to 31 and valid for the year and month,
            or 0

            if specifying a year/month where the day is not significant.
          format: int32
          type: integer
        month:
          description: >-
            Month of year. Must be from 1 to 12, or 0 if specifying a date
            without a

            month.
          format: int32
          type: integer
        year:
          description: >-
            Year of date. Must be from 1 to 9999, or 0 if specifying a date
            without

            a year.
          format: int32
          type: integer
      type: object
    DebugInfo:
      description: Debug information about this request.
      properties:
        serverInfo:
          description: Info about the server that serviced this request.
          type: string
        serverTraceInfo:
          description: Server-side debug stack trace.
          type: string
        serviceUrl:
          description: URL of the service that handled this request.
          type: string
      type: object
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated

        empty messages in your APIs. A typical example is to use it as the request

        or the response type of an API method. For instance:

            service Foo {
              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
            }

        The JSON representation for `Empty` is empty JSON object `{}`.
      properties: {}
      type: object
    EventData:
      description: Key value data pair for an event.
      properties:
        key:
          description: Data type.
          enum:
            - EVENT_DATA_TYPE_UNSPECIFIED
            - ACTION
            - AGENCY_ID
            - AGENCY_NAME
            - AGENCY_PHONE_NUMBER
            - AGENCY_WEBSITE
            - BUDGET
            - CENTER_POINT
            - CERTIFICATION
            - COMMENT
            - COUNTRY
            - CURRENCY
            - CURRENTLY_VIEWED_AGENCY_ID
            - DISTANCE
            - DISTANCE_TYPE
            - EXAM
            - HISTORY_TOKEN
            - ID
            - INDUSTRY
            - INSIGHT_TAG
            - LANGUAGE
            - LOCATION
            - MARKETING_OPT_IN
            - QUERY
            - SEARCH_START_INDEX
            - SERVICE
            - SHOW_VOW
            - SOLUTION
            - TRAFFIC_SOURCE_ID
            - TRAFFIC_SUB_ID
            - VIEW_PORT
            - WEBSITE
            - DETAILS
            - EXPERIMENT_ID
            - GPS_MOTIVATION
            - URL
            - ELEMENT_FOCUS
            - PROGRESS
          type: string
        values:
          description: Data values.
          items:
            type: string
          type: array
      type: object
    ExamStatus:
      description: A user's information on a specific exam.
      properties:
        examType:
          description: The type of the exam.
          enum:
            - CERTIFICATION_EXAM_TYPE_UNSPECIFIED
            - CET_ADWORDS_FUNDAMENTALS
            - CET_ADWORDS_ADVANCED_SEARCH
            - CET_ADWORDS_ADVANCED_DISPLAY
            - CET_VIDEO_ADS
            - CET_DOUBLECLICK
            - CET_ANALYTICS
            - CET_SHOPPING
            - CET_MOBILE
            - CET_DIGITAL_SALES
            - CET_MOBILE_SITES
          type: string
        expiration:
          description: Date this exam is due to expire.
          format: google-datetime
          type: string
        lastPassed:
          description: The date the user last passed this exam.
          format: google-datetime
          type: string
        passed:
          description: Whether this exam has been passed and not expired.
          type: boolean
        taken:
          description: The date the user last taken this exam.
          format: google-datetime
          type: string
        warning:
          description: Whether this exam is in the state of warning.
          type: boolean
      type: object
    GetCompanyResponse:
      description: Response message for GetCompany.
      properties:
        company:
          $ref: "#/components/schemas/Company"
        responseMetadata:
          $ref: "#/components/schemas/ResponseMetadata"
      type: object
    GetPartnersStatusResponse:
      description: |-
        Response message for
        GetPartnersStatus.
      properties:
        responseMetadata:
          $ref: "#/components/schemas/ResponseMetadata"
      type: object
    HistoricalOffer:
      description: Historical information about a Google Partners Offer.
      properties:
        adwordsUrl:
          description: Client's AdWords page URL.
          type: string
        clientEmail:
          description: Email address for client.
          type: string
        clientId:
          description: ID of client.
          format: int64
          type: string
        clientName:
          description: Name of the client.
          type: string
        creationTime:
          description: Time offer was first created.
          format: google-datetime
          type: string
        expirationTime:
          description: Time this offer expires.
          format: google-datetime
          type: string
        lastModifiedTime:
          description: Time last action was taken.
          format: google-datetime
          type: string
        offerCode:
          description: Offer code.
          type: string
        offerCountryCode:
          description: Country Code for the offer country.
          type: string
        offerType:
          description: Type of offer.
          enum:
            - OFFER_TYPE_UNSPECIFIED
            - OFFER_TYPE_SPEND_X_GET_Y
            - OFFER_TYPE_VIDEO
            - OFFER_TYPE_SPEND_MATCH
          type: string
        senderName:
          description: Name (First + Last) of the partners user to whom the incentive is
            allocated.
          type: string
        status:
          description: Status of the offer.
          enum:
            - OFFER_STATUS_UNSPECIFIED
            - OFFER_STATUS_DISTRIBUTED
            - OFFER_STATUS_REDEEMED
            - OFFER_STATUS_AWARDED
            - OFFER_STATUS_EXPIRED
          type: string
      type: object
    LatLng:
      description: >-
        An object representing a latitude/longitude pair. This is expressed as a
        pair

        of doubles representing degrees latitude and degrees longitude. Unless

        specified otherwise, this must conform to the

        <a href="http://www.unoosa.org/pdf/icg/2012/template/WGS_84.pdf">WGS84

        standard</a>. Values must be within normalized ranges.
      properties:
        latitude:
          description: The latitude in degrees. It must be in the range [-90.0, +90.0].
          format: double
          type: number
        longitude:
          description: The longitude in degrees. It must be in the range [-180.0, +180.0].
          format: double
          type: number
      type: object
    Lead:
      description: >-
        A lead resource that represents an advertiser contact for a `Company`.
        These

        are usually generated via Google Partner Search (the advertiser portal).
      properties:
        adwordsCustomerId:
          description: The AdWords Customer ID of the lead.
          format: int64
          type: string
        comments:
          description: Comments lead source gave.
          type: string
        createTime:
          description: Timestamp of when this lead was created.
          format: google-datetime
          type: string
        email:
          description: Email address of lead source.
          type: string
        familyName:
          description: Last name of lead source.
          type: string
        givenName:
          description: First name of lead source.
          type: string
        gpsMotivations:
          description: List of reasons for using Google Partner Search and creating a lead.
          items:
            enum:
              - GPS_MOTIVATION_UNSPECIFIED
              - GPSM_HELP_WITH_ADVERTISING
              - GPSM_HELP_WITH_WEBSITE
              - GPSM_NO_WEBSITE
            type: string
          type: array
        id:
          description: ID of the lead.
          type: string
        languageCode:
          description: |-
            Language code of the lead's language preference, as defined by
            <a href="https://tools.ietf.org/html/bcp47">BCP 47</a>
            (IETF BCP 47, "Tags for Identifying Languages").
          type: string
        marketingOptIn:
          description: Whether or not the lead signed up for marketing emails
          type: boolean
        minMonthlyBudget:
          $ref: "#/components/schemas/Money"
        phoneNumber:
          description: Phone number of lead source.
          type: string
        state:
          description: The lead's state in relation to the company.
          enum:
            - LEAD_STATE_UNSPECIFIED
            - LEAD
            - CONTACTED
            - CLIENT
            - OTHER
          type: string
        type:
          description: Type of lead.
          enum:
            - LEAD_TYPE_UNSPECIFIED
            - LT_GPS
          type: string
        websiteUrl:
          description: Website URL of lead source.
          type: string
      type: object
    ListAnalyticsResponse:
      description: |-
        Response message for
        ListAnalytics.
      properties:
        analytics:
          description: |-
            The list of analytics.
            Sorted in ascending order of
            Analytics.event_date.
          items:
            $ref: "#/components/schemas/Analytics"
          type: array
        analyticsSummary:
          $ref: "#/components/schemas/AnalyticsSummary"
        nextPageToken:
          description: >-
            A token to retrieve next page of results.

            Pass this value in the `ListAnalyticsRequest.page_token` field in the

            subsequent call to

            ListAnalytics to retrieve the

            next page of results.
          type: string
        responseMetadata:
          $ref: "#/components/schemas/ResponseMetadata"
      type: object
    ListCompaniesResponse:
      description: |-
        Response message for
        ListCompanies.
      properties:
        companies:
          description: The list of companies.
          items:
            $ref: "#/components/schemas/Company"
          type: array
        nextPageToken:
          description: >-
            A token to retrieve next page of results.

            Pass this value in the `ListCompaniesRequest.page_token` field in the

            subsequent call to

            ListCompanies to retrieve the

            next page of results.
          type: string
        responseMetadata:
          $ref: "#/components/schemas/ResponseMetadata"
      type: object
    ListLeadsResponse:
      description: Response message for ListLeads.
      properties:
        leads:
          description: The list of leads.
          items:
            $ref: "#/components/schemas/Lead"
          type: array
        nextPageToken:
          description: |-
            A token to retrieve next page of results.
            Pass this value in the `ListLeadsRequest.page_token` field in the
            subsequent call to
            ListLeads to retrieve the
            next page of results.
          type: string
        responseMetadata:
          $ref: "#/components/schemas/ResponseMetadata"
        totalSize:
          description: The total count of leads for the given company.
          format: int32
          type: integer
      type: object
    ListOffersHistoryResponse:
      description: Response for ListOfferHistory.
      properties:
        canShowEntireCompany:
          description: True if the user has the option to show entire company history.
          type: boolean
        nextPageToken:
          description: Supply this token in a ListOffersHistoryRequest to retrieve the next
            page.
          type: string
        offers:
          description: Historical offers meeting request.
          items:
            $ref: "#/components/schemas/HistoricalOffer"
          type: array
        responseMetadata:
          $ref: "#/components/schemas/ResponseMetadata"
        showingEntireCompany:
          description: True if this response is showing entire company history.
          type: boolean
        totalResults:
          description: Number of results across all pages.
          format: int32
          type: integer
      type: object
    ListOffersResponse:
      description: Response for ListOffer.
      properties:
        availableOffers:
          description: Available Offers to be distributed.
          items:
            $ref: "#/components/schemas/AvailableOffer"
          type: array
        noOfferReason:
          description: Reason why no Offers are available.
          enum:
            - NO_OFFER_REASON_UNSPECIFIED
            - NO_OFFER_REASON_NO_MCC
            - NO_OFFER_REASON_LIMIT_REACHED
            - NO_OFFER_REASON_INELIGIBLE
          type: string
        responseMetadata:
          $ref: "#/components/schemas/ResponseMetadata"
      type: object
    ListUserStatesResponse:
      description: |-
        Response message for
        ListUserStates.
      properties:
        responseMetadata:
          $ref: "#/components/schemas/ResponseMetadata"
        userStates:
          description: User's states.
          items:
            enum:
              - USER_STATE_UNSPECIFIED
              - US_REQUIRES_RECAPTCHA_FOR_GPS_CONTACT
            type: string
          type: array
      type: object
    LocalizedCompanyInfo:
      description: The localized company information.
      properties:
        countryCodes:
          description: List of country codes for the localized company info.
          items:
            type: string
          type: array
        displayName:
          description: Localized display name.
          type: string
        languageCode:
          description: |-
            Language code of the localized company info, as defined by
            <a href="https://tools.ietf.org/html/bcp47">BCP 47</a>
            (IETF BCP 47, "Tags for Identifying Languages").
          type: string
        overview:
          description: Localized brief description that the company uses to advertise
            themselves.
          type: string
      type: object
    Location:
      description: >-
        A location with address and geographic coordinates. May optionally
        contain a

        detailed (multi-field) version of the address.
      properties:
        address:
          description: The single string version of the address.
          type: string
        addressLine:
          description: |-
            The following address lines represent the most specific part of any
            address.
          items:
            type: string
          type: array
        administrativeArea:
          description: Top-level administrative subdivision of this country.
          type: string
        dependentLocality:
          description: >-
            Dependent locality or sublocality. Used for UK dependent localities,
            or

            neighborhoods or boroughs in other locations.
          type: string
        languageCode:
          description: Language code of the address. Should be in BCP 47 format.
          type: string
        latLng:
          $ref: "#/components/schemas/LatLng"
        locality:
          description: Generally refers to the city/town portion of an address.
          type: string
        postalCode:
          description: Values are frequently alphanumeric.
          type: string
        regionCode:
          description: CLDR (Common Locale Data Repository) region code .
          type: string
        sortingCode:
          description: >-
            Use of this code is very country-specific, but will refer to a
            secondary

            classification code for sorting mail.
          type: string
      type: object
    LogMessageRequest:
      description: |-
        Request message for
        LogClientMessage.
      properties:
        clientInfo:
          additionalProperties:
            type: string
          description: Map of client info, such as URL, browser navigator, browser
            platform, etc.
          type: object
        details:
          description: Details about the client message.
          type: string
        level:
          description: Message level of client message.
          enum:
            - MESSAGE_LEVEL_UNSPECIFIED
            - ML_FINE
            - ML_INFO
            - ML_WARNING
            - ML_SEVERE
          type: string
        requestMetadata:
          $ref: "#/components/schemas/RequestMetadata"
      type: object
    LogMessageResponse:
      description: |-
        Response message for
        LogClientMessage.
      properties:
        responseMetadata:
          $ref: "#/components/schemas/ResponseMetadata"
      type: object
    LogUserEventRequest:
      description: |-
        Request message for
        LogUserEvent.
      properties:
        eventAction:
          description: The action that occurred.
          enum:
            - EVENT_ACTION_UNSPECIFIED
            - SMB_CLICKED_FIND_A_PARTNER_BUTTON_BOTTOM
            - SMB_CLICKED_FIND_A_PARTNER_BUTTON_TOP
            - AGENCY_CLICKED_JOIN_NOW_BUTTON_BOTTOM
            - AGENCY_CLICKED_JOIN_NOW_BUTTON_TOP
            - SMB_CANCELED_PARTNER_CONTACT_FORM
            - SMB_CLICKED_CONTACT_A_PARTNER
            - SMB_COMPLETED_PARTNER_CONTACT_FORM
            - SMB_ENTERED_EMAIL_IN_CONTACT_PARTNER_FORM
            - SMB_ENTERED_NAME_IN_CONTACT_PARTNER_FORM
            - SMB_ENTERED_PHONE_IN_CONTACT_PARTNER_FORM
            - SMB_FAILED_RECAPTCHA_IN_CONTACT_PARTNER_FORM
            - PARTNER_VIEWED_BY_SMB
            - SMB_CANCELED_PARTNER_CONTACT_FORM_ON_GPS
            - SMB_CHANGED_A_SEARCH_PARAMETER_TOP
            - SMB_CLICKED_CONTACT_A_PARTNER_ON_GPS
            - SMB_CLICKED_SHOW_MORE_PARTNERS_BUTTON_BOTTOM
            - SMB_COMPLETED_PARTNER_CONTACT_FORM_ON_GPS
            - SMB_NO_PARTNERS_AVAILABLE_WITH_SEARCH_CRITERIA
            - SMB_PERFORMED_SEARCH_ON_GPS
            - SMB_VIEWED_A_PARTNER_ON_GPS
            - SMB_CANCELED_PARTNER_CONTACT_FORM_ON_PROFILE_PAGE
            - SMB_CLICKED_CONTACT_A_PARTNER_ON_PROFILE_PAGE
            - SMB_CLICKED_PARTNER_WEBSITE
            - SMB_COMPLETED_PARTNER_CONTACT_FORM_ON_PROFILE_PAGE
            - SMB_VIEWED_A_PARTNER_PROFILE
            - AGENCY_CLICKED_ACCEPT_TOS_BUTTON
            - AGENCY_CHANGED_TOS_COUNTRY
            - AGENCY_ADDED_ADDRESS_IN_MY_PROFILE_PORTAL
            - AGENCY_ADDED_PHONE_NUMBER_IN_MY_PROFILE_PORTAL
            - AGENCY_CHANGED_PRIMARY_ACCOUNT_ASSOCIATION
            - AGENCY_CHANGED_PRIMARY_COUNTRY_ASSOCIATION
            - AGENCY_CLICKED_AFFILIATE_BUTTON_IN_MY_PROFILE_IN_PORTAL
            - AGENCY_CLICKED_GIVE_EDIT_ACCESS_IN_MY_PROFILE_PORTAL
            - AGENCY_CLICKED_LOG_OUT_IN_MY_PROFILE_PORTAL
            - AGENCY_CLICKED_MY_PROFILE_LEFT_NAV_IN_PORTAL
            - AGENCY_CLICKED_SAVE_AND_CONTINUE_AT_BOT_OF_COMPLETE_PROFILE
            - AGENCY_CLICKED_UNAFFILIATE_IN_MY_PROFILE_PORTAL
            - AGENCY_FILLED_OUT_COMP_AFFILIATION_IN_MY_PROFILE_PORTAL
            - AGENCY_SUCCESSFULLY_CONNECTED_WITH_COMPANY_IN_MY_PROFILE
            - AGENCY_CLICKED_CREATE_MCC_IN_MY_PROFILE_PORTAL
            - AGENCY_DIDNT_HAVE_AN_MCC_ASSOCIATED_ON_COMPLETE_PROFILE
            - AGENCY_HAD_AN_MCC_ASSOCIATED_ON_COMPLETE_PROFILE
            - AGENCY_ADDED_JOB_FUNCTION_IN_MY_PROFILE_PORTAL
            - AGENCY_LOOKED_AT_JOB_FUNCTION_DROP_DOWN
            - AGENCY_SELECTED_ACCOUNT_MANAGER_AS_JOB_FUNCTION
            - AGENCY_SELECTED_ACCOUNT_PLANNER_AS_JOB_FUNCTION
            - AGENCY_SELECTED_ANALYTICS_AS_JOB_FUNCTION
            - AGENCY_SELECTED_CREATIVE_AS_JOB_FUNCTION
            - AGENCY_SELECTED_MEDIA_BUYER_AS_JOB_FUNCTION
            - AGENCY_SELECTED_MEDIA_PLANNER_AS_JOB_FUNCTION
            - AGENCY_SELECTED_OTHER_AS_JOB_FUNCTION
            - AGENCY_SELECTED_PRODUCTION_AS_JOB_FUNCTION
            - AGENCY_SELECTED_SEO_AS_JOB_FUNCTION
            - AGENCY_SELECTED_SALES_REP_AS_JOB_FUNCTION
            - AGENCY_SELECTED_SEARCH_SPECIALIST_AS_JOB_FUNCTION
            - AGENCY_ADDED_CHANNELS_IN_MY_PROFILE_PORTAL
            - AGENCY_LOOKED_AT_ADD_CHANNEL_DROP_DOWN
            - AGENCY_SELECTED_CROSS_CHANNEL_FROM_ADD_CHANNEL
            - AGENCY_SELECTED_DISPLAY_FROM_ADD_CHANNEL
            - AGENCY_SELECTED_MOBILE_FROM_ADD_CHANNEL
            - AGENCY_SELECTED_SEARCH_FROM_ADD_CHANNEL
            - AGENCY_SELECTED_SOCIAL_FROM_ADD_CHANNEL
            - AGENCY_SELECTED_TOOLS_FROM_ADD_CHANNEL
            - AGENCY_SELECTED_YOUTUBE_FROM_ADD_CHANNEL
            - AGENCY_ADDED_INDUSTRIES_IN_MY_PROFILE_PORTAL
            - AGENCY_CHANGED_ADD_INDUSTRIES_DROP_DOWN
            - AGENCY_ADDED_MARKETS_IN_MY_PROFILE_PORTAL
            - AGENCY_CHANGED_ADD_MARKETS_DROP_DOWN
            - AGENCY_CHECKED_RECIEVE_MAIL_PROMOTIONS_MYPROFILE
            - AGENCY_CHECKED_RECIEVE_MAIL_PROMOTIONS_SIGNUP
            - AGENCY_SELECTED_OPT_IN_BETA_TESTS_AND_MKT_RESEARCH
            - AGENCY_SELECTED_OPT_IN_BETA_TESTS_IN_MY_PROFILE_PORTAL
            - AGENCY_SELECTED_OPT_IN_NEWS_IN_MY_PROFILE_PORTAL
            - AGENCY_SELECTED_OPT_IN_NEWS_INVITATIONS_AND_PROMOS
            - AGENCY_SELECTED_OPT_IN_PERFORMANCE_SUG_IN_MY_PROFILE_PORTAL
            - AGENCY_SELECTED_OPT_IN_PERFORMANCE_SUGGESTIONS
            - AGENCY_SELECTED_OPT_IN_SELECT_ALL_EMAIL_NOTIFICATIONS
            - AGENCY_SELECTED_SELECT_ALL_OPT_INS_IN_MY_PROFILE_PORTAL
            - AGENCY_CLICKED_BACK_BUTTON_ON_CONNECT_WITH_COMPANY
            - AGENCY_CLICKED_CONTINUE_TO_OVERVIEW_ON_CONNECT_WITH_COMPANY
            - AGECNY_CLICKED_CREATE_MCC_CONNECT_WITH_COMPANY_NOT_FOUND
            - AGECNY_CLICKED_GIVE_EDIT_ACCESS_CONNECT_WITH_COMPANY_NOT_FOUND
            - AGECNY_CLICKED_LOG_OUT_CONNECT_WITH_COMPANY_NOT_FOUND
            - AGENCY_CLICKED_SKIP_FOR_NOW_ON_CONNECT_WITH_COMPANY_PAGE
            - AGENCY_CLOSED_CONNECTED_TO_COMPANY_X_BUTTON_WRONG_COMPANY
            - AGENCY_COMPLETED_FIELD_CONNECT_WITH_COMPANY
            - AGECNY_FOUND_COMPANY_TO_CONNECT_WITH
            - AGENCY_SUCCESSFULLY_CREATED_COMPANY
            - AGENCY_ADDED_NEW_COMPANY_LOCATION
            - AGENCY_CLICKED_COMMUNITY_JOIN_NOW_LINK_IN_PORTAL_NOTIFICATIONS
            - AGENCY_CLICKED_CONNECT_TO_COMPANY_LINK_IN_PORTAL_NOTIFICATIONS
            - AGENCY_CLICKED_GET_CERTIFIED_LINK_IN_PORTAL_NOTIFICATIONS
            - AGENCY_CLICKED_GET_VIDEO_ADS_CERTIFIED_LINK_IN_PORTAL_NOTIFICATIONS
            - AGENCY_CLICKED_LINK_TO_MCC_LINK_IN_PORTAL_NOTIFICATIONS
            - AGENCY_CLICKED_INSIGHT_CONTENT_IN_PORTAL
            - AGENCY_CLICKED_INSIGHTS_VIEW_NOW_PITCH_DECKS_IN_PORTAL
            - AGENCY_CLICKED_INSIGHTS_LEFT_NAV_IN_PORTAL
            - AGENCY_CLICKED_INSIGHTS_UPLOAD_CONTENT
            - AGENCY_CLICKED_INSIGHTS_VIEWED_DEPRECATED
            - AGENCY_CLICKED_COMMUNITY_LEFT_NAV_IN_PORTAL
            - AGENCY_CLICKED_JOIN_COMMUNITY_BUTTON_COMMUNITY_PORTAL
            - AGENCY_CLICKED_CERTIFICATIONS_LEFT_NAV_IN_PORTAL
            - AGENCY_CLICKED_CERTIFICATIONS_PRODUCT_LEFT_NAV_IN_PORTAL
            - AGENCY_CLICKED_PARTNER_STATUS_LEFT_NAV_IN_PORTAL
            - AGENCY_CLICKED_PARTNER_STATUS_PRODUCT_LEFT_NAV_IN_PORTAL
            - AGENCY_CLICKED_OFFERS_LEFT_NAV_IN_PORTAL
            - AGENCY_CLICKED_SEND_BUTTON_ON_OFFERS_PAGE
            - AGENCY_CLICKED_EXAM_DETAILS_ON_CERT_ADWORDS_PAGE
            - AGENCY_CLICKED_SEE_EXAMS_CERTIFICATION_MAIN_PAGE
            - AGENCY_CLICKED_TAKE_EXAM_ON_CERT_EXAM_PAGE
            - AGENCY_OPENED_LAST_ADMIN_DIALOG
            - AGENCY_OPENED_DIALOG_WITH_NO_USERS
            - AGENCY_PROMOTED_USER_TO_ADMIN
            - AGENCY_UNAFFILIATED
            - AGENCY_CHANGED_ROLES
            - SMB_CLICKED_COMPANY_NAME_LINK_TO_PROFILE
            - SMB_VIEWED_ADWORDS_CERTIFICATE
            - SMB_VIEWED_ADWORDS_SEARCH_CERTIFICATE
            - SMB_VIEWED_ADWORDS_DISPLAY_CERTIFICATE
            - SMB_CLICKED_ADWORDS_CERTIFICATE_HELP_ICON
            - SMB_VIEWED_ANALYTICS_CERTIFICATE
            - SMB_VIEWED_DOUBLECLICK_CERTIFICATE
            - SMB_VIEWED_MOBILE_SITES_CERTIFICATE
            - SMB_VIEWED_VIDEO_ADS_CERTIFICATE
            - SMB_VIEWED_SHOPPING_CERTIFICATE
            - SMB_CLICKED_VIDEO_ADS_CERTIFICATE_HELP_ICON
            - SMB_VIEWED_DIGITAL_SALES_CERTIFICATE
            - CLICKED_HELP_AT_BOTTOM
            - CLICKED_HELP_AT_TOP
            - CLIENT_ERROR
            - AGENCY_CLICKED_LEFT_NAV_STORIES
            - CLICKED
            - SMB_VIEWED_MOBILE_CERTIFICATE
            - AGENCY_FAILED_COMPANY_VERIFICATION
            - VISITED_LANDING
            - VISITED_GPS
            - VISITED_AGENCY_PORTAL
            - CANCELLED_INDIVIDUAL_SIGN_UP
            - CANCELLED_COMPANY_SIGN_UP
            - AGENCY_CLICKED_SIGN_IN_BUTTON_TOP
            - AGENCY_CLICKED_SAVE_AND_CONTINUE_AT_BOT_OF_INCOMPLETE_PROFILE
            - AGENCY_UNSELECTED_OPT_IN_NEWS_INVITATIONS_AND_PROMOS
            - AGENCY_UNSELECTED_OPT_IN_BETA_TESTS_AND_MKT_RESEARCH
            - AGENCY_UNSELECTED_OPT_IN_PERFORMANCE_SUGGESTIONS
            - AGENCY_SELECTED_OPT_OUT_UNSELECT_ALL_EMAIL_NOTIFICATIONS
            - AGENCY_LINKED_INDIVIDUAL_MCC
            - AGENCY_SUGGESTED_TO_USER
            - AGENCY_IGNORED_SUGGESTED_AGENCIES_AND_SEARCHED
            - AGENCY_PICKED_SUGGESTED_AGENCY
            - AGENCY_SEARCHED_FOR_AGENCIES
            - AGENCY_PICKED_SEARCHED_AGENCY
            - AGENCY_DISMISSED_AFFILIATION_WIDGET
            - AGENCY_CLICKED_INSIGHTS_DOWNLOAD_CONTENT
            - AGENCY_PROGRESS_INSIGHTS_VIEW_CONTENT
            - AGENCY_CLICKED_CANCEL_ACCEPT_TOS_BUTTON
            - SMB_ENTERED_WEBSITE_IN_CONTACT_PARTNER_FORM
            - AGENCY_SELECTED_OPT_IN_AFA_MIGRATION
            - AGENCY_SELECTED_OPT_OUT_AFA_MIGRATION
          type: string
        eventCategory:
          description: The category the action belongs to.
          enum:
            - EVENT_CATEGORY_UNSPECIFIED
            - GOOGLE_PARTNER_SEARCH
            - GOOGLE_PARTNER_SIGNUP_FLOW
            - GOOGLE_PARTNER_PORTAL
            - GOOGLE_PARTNER_PORTAL_MY_PROFILE
            - GOOGLE_PARTNER_PORTAL_CERTIFICATIONS
            - GOOGLE_PARTNER_PORTAL_COMMUNITY
            - GOOGLE_PARTNER_PORTAL_INSIGHTS
            - GOOGLE_PARTNER_PORTAL_CLIENTS
            - GOOGLE_PARTNER_PUBLIC_USER_PROFILE
            - GOOGLE_PARTNER_PANEL
            - GOOGLE_PARTNER_PORTAL_LAST_ADMIN_DIALOG
            - GOOGLE_PARTNER_CLIENT
            - GOOGLE_PARTNER_PORTAL_COMPANY_PROFILE
            - EXTERNAL_LINKS
            - GOOGLE_PARTNER_LANDING
          type: string
        eventDatas:
          description: List of event data for the event.
          items:
            $ref: "#/components/schemas/EventData"
          type: array
        eventScope:
          description: The scope of the event.
          enum:
            - EVENT_SCOPE_UNSPECIFIED
            - VISITOR
            - SESSION
            - PAGE
          type: string
        lead:
          $ref: "#/components/schemas/Lead"
        requestMetadata:
          $ref: "#/components/schemas/RequestMetadata"
        url:
          description: The URL where the event occurred.
          type: string
      type: object
    LogUserEventResponse:
      description: |-
        Response message for
        LogUserEvent.
      properties:
        responseMetadata:
          $ref: "#/components/schemas/ResponseMetadata"
      type: object
    Money:
      description: Represents an amount of money with its currency type.
      properties:
        currencyCode:
          description: The 3-letter currency code defined in ISO 4217.
          type: string
        nanos:
          description: >-
            Number of nano (10^-9) units of the amount.

            The value must be between -999,999,999 and +999,999,999 inclusive.

            If `units` is positive, `nanos` must be positive or zero.

            If `units` is zero, `nanos` can be positive, zero, or negative.

            If `units` is negative, `nanos` must be negative or zero.

            For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
          format: int32
          type: integer
        units:
          description: >-
            The whole units of the amount.

            For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
          format: int64
          type: string
      type: object
    OfferCustomer:
      description: Customers qualified for an offer.
      properties:
        adwordsUrl:
          description: URL to the customer's AdWords page.
          type: string
        countryCode:
          description: Country code of the customer.
          type: string
        creationTime:
          description: Time the customer was created.
          format: google-datetime
          type: string
        eligibilityDaysLeft:
          description: Days the customer is still eligible.
          format: int32
          type: integer
        externalCid:
          description: External CID for the customer.
          format: int64
          type: string
        getYAmount:
          description: Formatted Get Y amount with currency code.
          type: string
        name:
          description: Name of the customer.
          type: string
        offerType:
          description: Type of the offer
          enum:
            - OFFER_TYPE_UNSPECIFIED
            - OFFER_TYPE_SPEND_X_GET_Y
            - OFFER_TYPE_VIDEO
            - OFFER_TYPE_SPEND_MATCH
          type: string
        spendXAmount:
          description: Formatted Spend X amount with currency code.
          type: string
      type: object
    OptIns:
      description: A set of opt-ins for a user.
      properties:
        marketComm:
          description: >-
            An opt-in about receiving email from Partners marketing teams.
            Includes

            member-only events and special promotional offers for Google products.
          type: boolean
        performanceSuggestions:
          description: >-
            An opt-in about receiving email with customized AdWords campaign
            management

            tips.
          type: boolean
        phoneContact:
          description: An opt-in to allow recieivng phone calls about their Partners
            account.
          type: boolean
        physicalMail:
          description: An opt-in to receive special promotional gifts and material in the
            mail.
          type: boolean
        specialOffers:
          description: An opt-in about receiving email regarding new features and products.
          type: boolean
      type: object
    PublicProfile:
      description: Basic information from a public profile.
      properties:
        displayImageUrl:
          description: The URL to the main display image of the public profile. Being
            deprecated.
          type: string
        displayName:
          description: The display name of the public profile.
          type: string
        id:
          description: The ID which can be used to retrieve more details about the public
            profile.
          type: string
        profileImage:
          description: The URL to the main profile image of the public profile.
          type: string
        url:
          description: The URL of the public profile.
          type: string
      type: object
    Rank:
      description: Information related to ranking of results.
      properties:
        type:
          description: The type of rank.
          enum:
            - RANK_TYPE_UNSPECIFIED
            - RT_FINAL_SCORE
          type: string
        value:
          description: The numerical value of the rank.
          format: double
          type: number
      type: object
    RecaptchaChallenge:
      description: <a href="https://www.google.com/recaptcha/">reCaptcha</a> challenge info.
      properties:
        id:
          description: The ID of the reCaptcha challenge.
          type: string
        response:
          description: The response to the reCaptcha challenge.
          type: string
      type: object
    RequestMetadata:
      description: Common data that is in each API request.
      properties:
        experimentIds:
          description: Experiment IDs the current request belongs to.
          items:
            type: string
          type: array
        locale:
          description: Locale to use for the current request.
          type: string
        partnersSessionId:
          description: Google Partners session ID.
          type: string
        trafficSource:
          $ref: "#/components/schemas/TrafficSource"
        userOverrides:
          $ref: "#/components/schemas/UserOverrides"
      type: object
    ResponseMetadata:
      description: Common data that is in each API response.
      properties:
        debugInfo:
          $ref: "#/components/schemas/DebugInfo"
      type: object
    SpecializationStatus:
      description: Agency specialization status
      properties:
        badgeSpecialization:
          description: The specialization this status is for.
          enum:
            - BADGE_SPECIALIZATION_UNKNOWN
            - BADGE_SPECIALIZATION_ADWORDS_SEARCH
            - BADGE_SPECIALIZATION_ADWORDS_DISPLAY
            - BADGE_SPECIALIZATION_ADWORDS_MOBILE
            - BADGE_SPECIALIZATION_ADWORDS_VIDEO
            - BADGE_SPECIALIZATION_ADWORDS_SHOPPING
          type: string
        badgeSpecializationState:
          description: State of agency specialization.
          enum:
            - BADGE_SPECIALIZATION_STATE_UNKNOWN
            - BADGE_SPECIALIZATION_STATE_PASSED
            - BADGE_SPECIALIZATION_STATE_NOT_PASSED
            - BADGE_SPECIALIZATION_STATE_IN_GRACE
          type: string
      type: object
    TrafficSource:
      description: Source of traffic for the current request.
      properties:
        trafficSourceId:
          description: >-
            Identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          type: string
        trafficSubId:
          description: >-
            Second level identifier to indicate where the traffic comes from.

            An identifier has multiple letters created by a team which redirected the

            traffic to us.
          type: string
      type: object
    User:
      description: A resource representing a user of the Partners platform.
      properties:
        afaInfoShared:
          description: >-
            Whether or not the user has opted to share their Academy for Ads
            info with

            Google Partners.
          type: boolean
        availableAdwordsManagerAccounts:
          description: >-
            This is the list of AdWords Manager Accounts the user has edit
            access to.

            If the user has edit access to multiple accounts, the user can choose the

            preferred account and we use this when a personal account is needed. Can

            be empty meaning the user has access to no accounts.

            @OutputOnly
          items:
            $ref: "#/components/schemas/AdWordsManagerAccountInfo"
          type: array
        certificationStatus:
          description: >-
            The list of achieved certifications. These are calculated based on
            exam

            results and other requirements.

            @OutputOnly
          items:
            $ref: "#/components/schemas/Certification"
          type: array
        company:
          $ref: "#/components/schemas/CompanyRelation"
        companyVerificationEmail:
          description: |-
            The email address used by the user used for company verification.
            @OutputOnly
          type: string
        examStatus:
          description: >-
            The list of exams the user ever taken. For each type of exam, only
            one

            entry is listed.
          items:
            $ref: "#/components/schemas/ExamStatus"
          type: array
        id:
          description: The ID of the user.
          type: string
        internalId:
          description: |-
            The internal user ID.
            Only available for a whitelisted set of api clients.
          type: string
        lastAccessTime:
          description: |-
            The most recent time the user interacted with the Partners site.
            @OutputOnly
          format: google-datetime
          type: string
        primaryEmails:
          description: |-
            The list of emails the user has access to/can select as primary.
            @OutputOnly
          items:
            type: string
          type: array
        profile:
          $ref: "#/components/schemas/UserProfile"
        publicProfile:
          $ref: "#/components/schemas/PublicProfile"
      type: object
    UserOverrides:
      description: |-
        Values to use instead of the user's respective defaults. These are only
        honored by whitelisted products.
      properties:
        ipAddress:
          description: IP address to use instead of the user's geo-located IP address.
          type: string
        userId:
          description: Logged-in user ID to impersonate instead of the user's ID.
          type: string
      type: object
    UserProfile:
      description: The profile information of a Partners user.
      properties:
        address:
          $ref: "#/components/schemas/Location"
        adwordsManagerAccount:
          description: >-
            If the user has edit access to multiple accounts, the user can
            choose the

            preferred account and it is used when a personal account is needed. Can

            be empty.
          format: int64
          type: string
        channels:
          description: A list of ids representing which channels the user selected they
            were in.
          items:
            type: string
          type: array
        emailAddress:
          description: The email address the user has selected on the Partners site as
            primary.
          type: string
        emailOptIns:
          $ref: "#/components/schemas/OptIns"
        familyName:
          description: The user's family name.
          type: string
        givenName:
          description: The user's given name.
          type: string
        industries:
          description: A list of ids representing which industries the user selected.
          items:
            type: string
          type: array
        jobFunctions:
          description: A list of ids represnting which job categories the user selected.
          items:
            type: string
          type: array
        languages:
          description: The list of languages this user understands.
          items:
            type: string
          type: array
        markets:
          description: A list of ids representing which markets the user was interested in.
          items:
            type: string
          type: array
        migrateToAfa:
          description: Whether or not to migrate the user's exam data to Academy for Ads.
          type: boolean
        phoneNumber:
          description: The user's phone number.
          type: string
        primaryCountryCode:
          description: The user's primary country, an ISO 2-character code.
          type: string
        profilePublic:
          description: Whether the user's public profile is visible to anyone with the URL.
          type: boolean
      type: object
