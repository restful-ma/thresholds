openapi: 3.0.0
info:
  description: The Winning Email API allows you to access our services from your
    applications. Contact us if you need help with anything, or require access
    to something we don't yet offer. The API overview is available <a
    href='/api/v1/docs' target='_blank'>here</a>.
  termsOfService: https://winning.email/terms/
  title: Winning Email
  version: 1.0.0
  x-apisguru-categories:
    - email
    - marketing
  x-logo:
    url: https://winning.email/media/winning-email-logo.png
  x-origin:
    - format: swagger
      url: https://winning.email/api/v1/spec.json
      version: "2.0"
  x-providerName: winning.email
security:
  - internalApiKey: []
tags:
  - description: Email Booster Service
    name: email-booster
  - description: Other endpoints
    name: default
paths:
  /email-booster:
    post:
      description: With our API, you can access the same results available through the
        Winning Email website, but in a raw, JSON, format, that you can use
        however you wish in your application. Read more about Email Booster <a
        href='/email-booster/' target='_blank'>here</a>.<br><br><strong>Input
        Parameters</strong><br>If <strong>source</strong> provided, then all
        other inputs are ignored. Otherwise, <strong>subject</strong> AND one or
        both of <strong>html</strong> and <strong>text</strong> are required.
      operationId: emailBooster
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                subject:
                  description: email subject
                  type: string
                html:
                  description: html body
                  type: string
                text:
                  description: plain text body
                  type: string
                source:
                  description: raw source
                  type: string
      responses:
        "200":
          description: email booster report
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  report:
                    $ref: "#/components/schemas/Report"
                  status:
                    type: integer
                type: object
        "400":
          description: bad request error
          content:
            application/json:
              schema:
                properties:
                  errors:
                    items:
                      properties:
                        msg:
                          type: string
                        param:
                          type: string
                      type: object
                    type: array
                  message:
                    type: string
                  status:
                    type: integer
                type: object
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      security:
        - internalApiKey: []
      summary: The Email Booster service will scan your email subjects and bodies (both
        HTML and plain text), and give you recommendations on what to change to
        improve your open and click-through rates.<br><br>
      tags:
        - email-booster
  /rate-limit-status:
    get:
      description: Check how many API queries you've used, and what your limit is.
      operationId: rateLimitStatus
      responses:
        "200":
          description: rate limit
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  services:
                    items:
                      $ref: "#/components/schemas/Service"
                    type: array
                  status:
                    type: integer
                type: object
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      security:
        - internalApiKey: []
      summary: Rate Limit Status of Services
  /status:
    get:
      description: Check the status of the Winning Email API.
      operationId: status
      responses:
        "200":
          description: status
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  status:
                    type: integer
                  uptime:
                    format: double
                    type: number
                type: object
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: API Server Status
servers:
  - url: https://winning.email/api/v1
components:
  securitySchemes:
    internalApiKey:
      in: query
      name: key
      type: apiKey
  schemas:
    ErrorModel:
      properties:
        message:
          type: string
        status:
          format: int32
          type: integer
      required:
        - status
        - message
    Report:
      properties:
        baseScore:
          type: integer
        report:
          properties:
            bodyReport:
              properties:
                address:
                  type: object
                hasForm:
                  type: integer
                hasJS:
                  type: integer
                htmlLength:
                  type: integer
                score:
                  format: float
                  type: number
                textLength:
                  type: integer
              type: object
            imageReport:
              properties:
                imagesNeedOptimization:
                  type: integer
                imagesNoAlt:
                  items: {}
                  type: array
                optimization:
                  items: {}
                  type: array
                score:
                  format: float
                  type: number
              type: object
            linkReport:
              properties:
                errors:
                  items: {}
                  type: array
                score:
                  format: float
                  type: number
              type: object
            markupReport:
              properties:
                response:
                  properties:
                    errors:
                      items: {}
                      type: array
                    groupedErrors:
                      items: {}
                      type: array
                    tripleTree:
                      items: {}
                      type: array
                    warnings:
                      items: {}
                      type: array
                  type: object
                score:
                  format: float
                  type: number
              type: object
            spamassassinReport:
              properties:
                baseSpamScore:
                  format: float
                  type: number
                isSpam:
                  type: boolean
                responseCode:
                  type: integer
                responseMessage:
                  type: string
                score:
                  format: float
                  type: number
                spamScore:
                  format: float
                  type: number
                tests:
                  items:
                    properties:
                      desc:
                        type: string
                      name:
                        type: string
                      score:
                        format: float
                        type: number
                  type: array
              type: object
            spellReport:
              properties:
                html:
                  items: {}
                  type: array
                score:
                  format: float
                  type: number
                subject:
                  items: {}
                  type: array
                text:
                  items: {}
                  type: array
              type: object
            subjectReport:
              properties:
                openrates:
                  items: {}
                  type: array
                overallOpenRate:
                  type: string
                score:
                  format: float
                  type: number
                subject:
                  type: string
                subjectLength:
                  type: integer
              type: object
            validateHTML:
              properties:
                errors:
                  items:
                    properties:
                      lastColumn:
                        type: integer
                      lastLine:
                        type: integer
                      message:
                        type: string
                      type:
                        type: string
                  type: array
                score:
                  format: float
                  type: number
              type: object
          type: object
        score:
          format: float
          type: number
        time:
          type: string
    Service:
      properties:
        limit:
          type: integer
        name:
          type: string
        remaining:
          type: integer
        reset:
          type: integer
        used:
          type: integer
