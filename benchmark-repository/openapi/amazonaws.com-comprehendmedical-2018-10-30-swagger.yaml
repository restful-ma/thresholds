openapi: 3.0.0
info:
  version: 2018-10-30
  x-release: v4
  title: AWS Comprehend Medical
  description: " Amazon Comprehend Medical extracts structured information from
    unstructured clinical text. Use these actions to gain insight in your
    documents. "
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: comprehendmedical
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/comprehendmedical-2018-10-30.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/comprehendmedical/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=ComprehendMedical_20181030.DescribeEntitiesDetectionV2Job:
    post:
      operationId: DescribeEntitiesDetectionV2Job
      description: Gets the properties associated with a medical entities detection job.
        Use this operation to get the status of a detection job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeEntitiesDetectionV2JobResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ComprehendMedical_20181030.DescribeEntitiesDetectionV2Job
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeEntitiesDetectionV2JobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=ComprehendMedical_20181030.DescribePHIDetectionJob:
    post:
      operationId: DescribePHIDetectionJob
      description: Gets the properties associated with a protected health information (PHI)
        detection job. Use this operation to get the status of a detection job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePHIDetectionJobResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ComprehendMedical_20181030.DescribePHIDetectionJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribePHIDetectionJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=ComprehendMedical_20181030.DetectEntities:
    post:
      deprecated: true
      operationId: DetectEntities
      description: <p>The <code>DetectEntities</code> operation is deprecated. You should
        use the <a>DetectEntitiesV2</a> operation instead.</p> <p> Inspects the
        clinical text for a variety of medical entities and returns specific
        information about them such as entity category, location, and confidence
        score on that information .</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DetectEntitiesResponse"
        "480":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "481":
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableException"
        "482":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "483":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "484":
          description: InvalidEncodingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidEncodingException"
        "485":
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TextSizeLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ComprehendMedical_20181030.DetectEntities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DetectEntitiesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=ComprehendMedical_20181030.DetectEntitiesV2:
    post:
      operationId: DetectEntitiesV2
      description: <p>Inspects the clinical text for a variety of medical entities and
        returns specific information about them such as entity category,
        location, and confidence score on that information.</p> <p>The
        <code>DetectEntitiesV2</code> operation replaces the
        <a>DetectEntities</a> operation. This new action uses a different model
        for determining the entities in your medical text and changes the way
        that some entities are returned in the output. You should use the
        <code>DetectEntitiesV2</code> operation in all new applications.</p>
        <p>The <code>DetectEntitiesV2</code> operation returns the
        <code>Acuity</code> and <code>Direction</code> entities as attributes
        instead of types. It does not return the <code>Quality</code> or
        <code>Quantity</code> entities.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DetectEntitiesV2Response"
        "480":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "481":
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableException"
        "482":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "483":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "484":
          description: InvalidEncodingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidEncodingException"
        "485":
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TextSizeLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ComprehendMedical_20181030.DetectEntitiesV2
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DetectEntitiesV2Request"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=ComprehendMedical_20181030.DetectPHI:
    post:
      operationId: DetectPHI
      description: " Inspects the clinical text for protected health information (PHI)
        entities and entity category, location, and confidence score on that
        information."
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DetectPHIResponse"
        "480":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "481":
          description: ServiceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceUnavailableException"
        "482":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "483":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "484":
          description: InvalidEncodingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidEncodingException"
        "485":
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TextSizeLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ComprehendMedical_20181030.DetectPHI
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DetectPHIRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=ComprehendMedical_20181030.ListEntitiesDetectionV2Jobs:
    post:
      operationId: ListEntitiesDetectionV2Jobs
      description: Gets a list of medical entity detection jobs that you have submitted.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEntitiesDetectionV2JobsResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ComprehendMedical_20181030.ListEntitiesDetectionV2Jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListEntitiesDetectionV2JobsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=ComprehendMedical_20181030.ListPHIDetectionJobs:
    post:
      operationId: ListPHIDetectionJobs
      description: Gets a list of protected health information (PHI) detection jobs that
        you have submitted.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPHIDetectionJobsResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ComprehendMedical_20181030.ListPHIDetectionJobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListPHIDetectionJobsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=ComprehendMedical_20181030.StartEntitiesDetectionV2Job:
    post:
      operationId: StartEntitiesDetectionV2Job
      description: Starts an asynchronous medical entity detection job for a collection of
        documents. Use the <code>DescribeEntitiesDetectionV2Job</code> operation
        to track the status of a job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartEntitiesDetectionV2JobResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ComprehendMedical_20181030.StartEntitiesDetectionV2Job
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartEntitiesDetectionV2JobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=ComprehendMedical_20181030.StartPHIDetectionJob:
    post:
      operationId: StartPHIDetectionJob
      description: Starts an asynchronous job to detect protected health information (PHI).
        Use the <code>DescribePHIDetectionJob</code> operation to track the
        status of a job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartPHIDetectionJobResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ComprehendMedical_20181030.StartPHIDetectionJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartPHIDetectionJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=ComprehendMedical_20181030.StopEntitiesDetectionV2Job:
    post:
      operationId: StopEntitiesDetectionV2Job
      description: Stops a medical entities detection job in progress.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopEntitiesDetectionV2JobResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ComprehendMedical_20181030.StopEntitiesDetectionV2Job
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopEntitiesDetectionV2JobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=ComprehendMedical_20181030.StopPHIDetectionJob:
    post:
      operationId: StopPHIDetectionJob
      description: Stops a protected health information (PHI) detection job in progress.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopPHIDetectionJobResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ComprehendMedical_20181030.StopPHIDetectionJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopPHIDetectionJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://comprehendmedical.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The ComprehendMedical multi-region endpoint
  - url: https://comprehendmedical.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The ComprehendMedical multi-region endpoint
  - url: http://comprehendmedical.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The ComprehendMedical endpoint for China (Beijing) and China (Ningxia)
  - url: https://comprehendmedical.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The ComprehendMedical endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    DescribeEntitiesDetectionV2JobResponse:
      type: object
      properties:
        ComprehendMedicalAsyncJobProperties:
          $ref: "#/components/schemas/ComprehendMedicalAsyncJobProperties"
    DescribeEntitiesDetectionV2JobRequest:
      type: object
      required:
        - JobId
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
    InvalidRequestException: {}
    TooManyRequestsException: {}
    ResourceNotFoundException: {}
    InternalServerException: {}
    DescribePHIDetectionJobResponse:
      type: object
      properties:
        ComprehendMedicalAsyncJobProperties:
          $ref: "#/components/schemas/ComprehendMedicalAsyncJobProperties"
    DescribePHIDetectionJobRequest:
      type: object
      required:
        - JobId
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
    DetectEntitiesResponse:
      type: object
      required:
        - Entities
        - ModelVersion
      properties:
        Entities:
          $ref: "#/components/schemas/EntityList"
        UnmappedAttributes:
          $ref: "#/components/schemas/UnmappedAttributeList"
        PaginationToken:
          $ref: "#/components/schemas/String"
        ModelVersion:
          $ref: "#/components/schemas/String"
    DetectEntitiesRequest:
      type: object
      required:
        - Text
      properties:
        Text:
          $ref: "#/components/schemas/BoundedLengthString"
    ServiceUnavailableException: {}
    InvalidEncodingException: {}
    TextSizeLimitExceededException: {}
    DetectEntitiesV2Response:
      type: object
      required:
        - Entities
        - ModelVersion
      properties:
        Entities:
          $ref: "#/components/schemas/EntityList"
        UnmappedAttributes:
          $ref: "#/components/schemas/UnmappedAttributeList"
        PaginationToken:
          $ref: "#/components/schemas/String"
        ModelVersion:
          $ref: "#/components/schemas/String"
    DetectEntitiesV2Request:
      type: object
      required:
        - Text
      properties:
        Text:
          $ref: "#/components/schemas/BoundedLengthString"
    DetectPHIResponse:
      type: object
      required:
        - Entities
        - ModelVersion
      properties:
        Entities:
          $ref: "#/components/schemas/EntityList"
        PaginationToken:
          $ref: "#/components/schemas/String"
        ModelVersion:
          $ref: "#/components/schemas/String"
    DetectPHIRequest:
      type: object
      required:
        - Text
      properties:
        Text:
          $ref: "#/components/schemas/BoundedLengthString"
    ListEntitiesDetectionV2JobsResponse:
      type: object
      properties:
        ComprehendMedicalAsyncJobPropertiesList:
          $ref: "#/components/schemas/ComprehendMedicalAsyncJobPropertiesList"
        NextToken:
          $ref: "#/components/schemas/String"
    ListEntitiesDetectionV2JobsRequest:
      type: object
      properties:
        Filter:
          $ref: "#/components/schemas/ComprehendMedicalAsyncJobFilter"
        NextToken:
          $ref: "#/components/schemas/String"
        MaxResults:
          $ref: "#/components/schemas/MaxResultsInteger"
    ValidationException: {}
    ListPHIDetectionJobsResponse:
      type: object
      properties:
        ComprehendMedicalAsyncJobPropertiesList:
          $ref: "#/components/schemas/ComprehendMedicalAsyncJobPropertiesList"
        NextToken:
          $ref: "#/components/schemas/String"
    ListPHIDetectionJobsRequest:
      type: object
      properties:
        Filter:
          $ref: "#/components/schemas/ComprehendMedicalAsyncJobFilter"
        NextToken:
          $ref: "#/components/schemas/String"
        MaxResults:
          $ref: "#/components/schemas/MaxResultsInteger"
    StartEntitiesDetectionV2JobResponse:
      type: object
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
    StartEntitiesDetectionV2JobRequest:
      type: object
      required:
        - InputDataConfig
        - OutputDataConfig
        - DataAccessRoleArn
        - LanguageCode
      properties:
        InputDataConfig:
          $ref: "#/components/schemas/InputDataConfig"
        OutputDataConfig:
          $ref: "#/components/schemas/OutputDataConfig"
        DataAccessRoleArn:
          $ref: "#/components/schemas/IamRoleArn"
        JobName:
          $ref: "#/components/schemas/JobName"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestTokenString"
        KMSKey:
          $ref: "#/components/schemas/KMSKey"
        LanguageCode:
          $ref: "#/components/schemas/LanguageCode"
    StartPHIDetectionJobResponse:
      type: object
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
    StartPHIDetectionJobRequest:
      type: object
      required:
        - InputDataConfig
        - OutputDataConfig
        - DataAccessRoleArn
        - LanguageCode
      properties:
        InputDataConfig:
          $ref: "#/components/schemas/InputDataConfig"
        OutputDataConfig:
          $ref: "#/components/schemas/OutputDataConfig"
        DataAccessRoleArn:
          $ref: "#/components/schemas/IamRoleArn"
        JobName:
          $ref: "#/components/schemas/JobName"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestTokenString"
        KMSKey:
          $ref: "#/components/schemas/KMSKey"
        LanguageCode:
          $ref: "#/components/schemas/LanguageCode"
    StopEntitiesDetectionV2JobResponse:
      type: object
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
    StopEntitiesDetectionV2JobRequest:
      type: object
      required:
        - JobId
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
    StopPHIDetectionJobResponse:
      type: object
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
    StopPHIDetectionJobRequest:
      type: object
      required:
        - JobId
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
    AnyLengthString:
      type: string
    EntitySubType:
      type: string
      enum:
        - NAME
        - DOSAGE
        - ROUTE_OR_MODE
        - FORM
        - FREQUENCY
        - DURATION
        - GENERIC_NAME
        - BRAND_NAME
        - STRENGTH
        - RATE
        - ACUITY
        - TEST_NAME
        - TEST_VALUE
        - TEST_UNITS
        - PROCEDURE_NAME
        - TREATMENT_NAME
        - DATE
        - AGE
        - CONTACT_POINT
        - EMAIL
        - IDENTIFIER
        - URL
        - ADDRESS
        - PROFESSION
        - SYSTEM_ORGAN_SITE
        - DIRECTION
        - QUALITY
        - QUANTITY
    Float:
      type: number
      format: float
    Integer:
      type: integer
    String:
      type: string
      minLength: 1
    TraitList:
      type: array
      items:
        $ref: "#/components/schemas/Trait"
    Attribute:
      type: object
      properties:
        Type:
          $ref: "#/components/schemas/EntitySubType"
        Score:
          $ref: "#/components/schemas/Float"
        RelationshipScore:
          $ref: "#/components/schemas/Float"
        Id:
          $ref: "#/components/schemas/Integer"
        BeginOffset:
          $ref: "#/components/schemas/Integer"
        EndOffset:
          $ref: "#/components/schemas/Integer"
        Text:
          $ref: "#/components/schemas/String"
        Traits:
          $ref: "#/components/schemas/TraitList"
      description: " An extracted segment of the text that is an attribute of an entity, or
        otherwise related to an entity, such as the dosage of a medication
        taken. It contains information about the attribute such as id, begin and
        end offset within the input text, and the segment of the input text. "
    AttributeList:
      type: array
      items:
        $ref: "#/components/schemas/Attribute"
    AttributeName:
      type: string
      enum:
        - SIGN
        - SYMPTOM
        - DIAGNOSIS
        - NEGATION
    BoundedLengthString:
      type: string
      minLength: 1
      maxLength: 20000
    ClientRequestTokenString:
      type: string
      pattern: ^[a-zA-Z0-9-]+$
      minLength: 1
      maxLength: 64
    JobName:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
      minLength: 1
      maxLength: 256
    JobStatus:
      type: string
      enum:
        - SUBMITTED
        - IN_PROGRESS
        - COMPLETED
        - PARTIAL_SUCCESS
        - FAILED
        - STOP_REQUESTED
        - STOPPED
    Timestamp:
      type: string
      format: date-time
    ComprehendMedicalAsyncJobFilter:
      type: object
      properties:
        JobName:
          $ref: "#/components/schemas/JobName"
        JobStatus:
          $ref: "#/components/schemas/JobStatus"
        SubmitTimeBefore:
          $ref: "#/components/schemas/Timestamp"
        SubmitTimeAfter:
          $ref: "#/components/schemas/Timestamp"
      description: Provides information for filtering a list of detection jobs.
    JobId:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
      minLength: 1
      maxLength: 32
    InputDataConfig:
      type: object
      required:
        - S3Bucket
      properties:
        S3Bucket:
          $ref: "#/components/schemas/S3Bucket"
        S3Key:
          $ref: "#/components/schemas/S3Key"
      description: The input properties for an entities detection job
    OutputDataConfig:
      type: object
      required:
        - S3Bucket
      properties:
        S3Bucket:
          $ref: "#/components/schemas/S3Bucket"
        S3Key:
          $ref: "#/components/schemas/S3Key"
      description: The output properties for a detection job.
    LanguageCode:
      type: string
      enum:
        - en
    IamRoleArn:
      type: string
      pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
      minLength: 20
      maxLength: 2048
    ManifestFilePath:
      type: string
      minLength: 1
      maxLength: 4096
    KMSKey:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 2048
    ModelVersion:
      type: string
    ComprehendMedicalAsyncJobProperties:
      type: object
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
        JobName:
          $ref: "#/components/schemas/JobName"
        JobStatus:
          $ref: "#/components/schemas/JobStatus"
        Message:
          $ref: "#/components/schemas/AnyLengthString"
        SubmitTime:
          $ref: "#/components/schemas/Timestamp"
        EndTime:
          $ref: "#/components/schemas/Timestamp"
        ExpirationTime:
          $ref: "#/components/schemas/Timestamp"
        InputDataConfig:
          $ref: "#/components/schemas/InputDataConfig"
        OutputDataConfig:
          $ref: "#/components/schemas/OutputDataConfig"
        LanguageCode:
          $ref: "#/components/schemas/LanguageCode"
        DataAccessRoleArn:
          $ref: "#/components/schemas/IamRoleArn"
        ManifestFilePath:
          $ref: "#/components/schemas/ManifestFilePath"
        KMSKey:
          $ref: "#/components/schemas/KMSKey"
        ModelVersion:
          $ref: "#/components/schemas/ModelVersion"
      description: Provides information about a detection job.
    ComprehendMedicalAsyncJobPropertiesList:
      type: array
      items:
        $ref: "#/components/schemas/ComprehendMedicalAsyncJobProperties"
    EntityList:
      type: array
      items:
        $ref: "#/components/schemas/Entity"
    UnmappedAttributeList:
      type: array
      items:
        $ref: "#/components/schemas/UnmappedAttribute"
    EntityType:
      type: string
      enum:
        - MEDICATION
        - MEDICAL_CONDITION
        - PROTECTED_HEALTH_INFORMATION
        - TEST_TREATMENT_PROCEDURE
        - ANATOMY
    Entity:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/Integer"
        BeginOffset:
          $ref: "#/components/schemas/Integer"
        EndOffset:
          $ref: "#/components/schemas/Integer"
        Score:
          $ref: "#/components/schemas/Float"
        Text:
          $ref: "#/components/schemas/String"
        Category:
          $ref: "#/components/schemas/EntityType"
        Type:
          $ref: "#/components/schemas/EntitySubType"
        Traits:
          $ref: "#/components/schemas/TraitList"
        Attributes:
          $ref: "#/components/schemas/AttributeList"
      description: " Provides information about an extracted medical entity."
    S3Bucket:
      type: string
      pattern: ^[0-9a-z\.\-_]*(?!\.)$
      minLength: 3
      maxLength: 63
    S3Key:
      type: string
      pattern: .*
      maxLength: 1024
    MaxResultsInteger:
      type: integer
      minimum: 1
      maximum: 500
    Trait:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/AttributeName"
        Score:
          $ref: "#/components/schemas/Float"
      description: " Provides contextual information about the extracted entity. "
    UnmappedAttribute:
      type: object
      properties:
        Type:
          $ref: "#/components/schemas/EntityType"
        Attribute:
          $ref: "#/components/schemas/Attribute"
      description: " An attribute that we extracted, but were unable to relate to an
        entity. "
