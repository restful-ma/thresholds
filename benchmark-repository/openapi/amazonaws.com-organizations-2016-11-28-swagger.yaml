openapi: 3.0.0
info:
  version: 2016-11-28
  x-release: v4
  title: AWS Organizations
  description: <fullname>AWS Organizations API Reference</fullname> <p>AWS Organizations is
    a web service that enables you to consolidate your multiple AWS accounts
    into an <i>organization</i> and centrally manage your accounts and their
    resources.</p> <p>This guide provides descriptions of the Organizations API.
    For more information about using this service, see the <a
    href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_introduction.html">AWS
    Organizations User Guide</a>.</p> <p> <b>API Version</b> </p> <p>This
    version of the Organizations API Reference documents the Organizations API
    version 2016-11-28.</p> <note> <p>As an alternative to using the API
    directly, you can use one of the AWS SDKs, which consist of libraries and
    sample code for various programming languages and platforms (Java, Ruby,
    .NET, iOS, Android, and more). The SDKs provide a convenient way to create
    programmatic access to AWS Organizations. For example, the SDKs take care of
    cryptographically signing requests, managing errors, and retrying requests
    automatically. For more information about the AWS SDKs, including how to
    download and install them, see <a href="http://aws.amazon.com/tools/">Tools
    for Amazon Web Services</a>.</p> </note> <p>We recommend that you use the
    AWS SDKs to make programmatic API calls to Organizations. However, you also
    can use the Organizations Query API to make direct calls to the
    Organizations web service. To learn more about the Organizations Query API,
    see <a
    href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_query-requests.html">Making
    Query Requests</a> in the <i>AWS Organizations User Guide</i>. Organizations
    supports GET and POST requests for all actions. That is, the API does not
    require you to use GET for some actions and POST for others. However, GET
    requests are subject to the limitation size of a URL. Therefore, for
    operations that require larger sizes, use a POST request.</p> <p> <b>Signing
    Requests</b> </p> <p>When you send HTTP requests to AWS, you must sign the
    requests so that AWS can identify who sent them. You sign requests with your
    AWS access key, which consists of an access key ID and a secret access key.
    We strongly recommend that you do not create an access key for your root
    account. Anyone who has the access key for your root account has
    unrestricted access to all the resources in your account. Instead, create an
    access key for an IAM user account that has administrative privileges. As
    another option, use AWS Security Token Service to generate temporary
    security credentials, and use those credentials to sign requests. </p> <p>To
    sign requests, we recommend that you use <a
    href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
    Version 4</a>. If you have an existing application that uses Signature
    Version 2, you do not have to update it to use Signature Version 4. However,
    some operations now require Signature Version 4. The documentation for
    operations that require version 4 indicate this requirement. </p> <p>When
    you use the AWS Command Line Interface (AWS CLI) or one of the AWS SDKs to
    make requests to AWS, these tools automatically sign the requests for you
    with the access key that you specify when you configure the tools.</p> <p>In
    this release, each organization can have only one root. In a future release,
    a single organization will support multiple roots.</p> <p> <b>Support and
    Feedback for AWS Organizations</b> </p> <p>We welcome your feedback. Send
    your comments to <a
    href="mailto:feedback-awsorganizations@amazon.com">feedback-awsorganizations@amazon.com</a>
    or post your feedback and questions in the <a
    href="http://forums.aws.amazon.com/forum.jspa?forumID=219">AWS Organizations
    support forum</a>. For more information about the AWS support forums, see <a
    href="http://forums.aws.amazon.com/help.jspa">Forums Help</a>.</p> <p>
    <b>Endpoint to Call When Using the CLI or the AWS API</b> </p> <p>For the
    current release of Organizations, you must specify the
    <code>us-east-1</code> region for all AWS API and CLI calls. You can do this
    in the CLI by using these parameters and commands:</p> <ul> <li> <p>Use the
    following parameter with each command to specify both the endpoint and its
    region:</p> <p> <code>--endpoint-url
    https://organizations.us-east-1.amazonaws.com</code> </p> </li> <li> <p>Use
    the default endpoint, but configure your default region with this
    command:</p> <p> <code>aws configure set default.region us-east-1</code>
    </p> </li> <li> <p>Use the following parameter with each command to specify
    the endpoint:</p> <p> <code>--region us-east-1</code> </p> </li> </ul>
    <p>For the various SDKs used to call the APIs, see the documentation for the
    SDK of interest to learn how to direct the requests to a specific endpoint.
    For more information, see <a
    href="https://docs.aws.amazon.com/general/latest/gr/rande.html#sts_region">Regions
    and Endpoints</a> in the <i>AWS General Reference</i>. </p> <p> <b>How
    examples are presented</b> </p> <p>The JSON returned by the AWS
    Organizations service as response to your requests is returned as a single
    long string without line breaks or formatting whitespace. Both line breaks
    and whitespace are included in the examples in this guide to improve
    readability. When example input parameters also would result in long strings
    that would extend beyond the screen, we insert line breaks to enhance
    readability. You should always submit the input as a single JSON text
    string.</p> <p> <b>Recording API Requests</b> </p> <p>AWS Organizations
    supports AWS CloudTrail, a service that records AWS API calls for your AWS
    account and delivers log files to an Amazon S3 bucket. By using information
    collected by AWS CloudTrail, you can determine which requests were
    successfully made to Organizations, who made the request, when it was made,
    and so on. For more about AWS Organizations and its support for AWS
    CloudTrail, see <a
    href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_monitoring.html#orgs_cloudtrail-integration">Logging
    AWS Organizations Events with AWS CloudTrail</a> in the <i>AWS Organizations
    User Guide</i>. To learn more about CloudTrail, including how to turn it on
    and find your log files, see the <a
    href="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/what_is_cloud_trail_top_level.html">AWS
    CloudTrail User Guide</a>.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: organizations
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/organizations-2016-11-28.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/organizations/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=AWSOrganizationsV20161128.AcceptHandshake:
    post:
      operationId: AcceptHandshake
      description: "<p>Sends a response to the originator of a handshake agreeing to the
        action proposed by the handshake request. </p> <p>This operation can be
        called only by the following principals when they also have the relevant
        IAM permissions:</p> <ul> <li> <p> <b>Invitation to join</b> or
        <b>Approve all features request</b> handshakes: only a principal from
        the member account. </p> <p>The user who calls the API for an invitation
        to join must have the <code>organizations:AcceptHandshake</code>
        permission. If you enabled all features in the organization, the user
        must also have the <code>iam:CreateServiceLinkedRole</code> permission
        so that AWS Organizations can create the required service-linked role
        named <code>AWSServiceRoleForOrganizations</code>. For more information,
        see <a
        href=\"http://docs.aws.amazon.com/organizations/latest/userguide/orgs_i\
        ntegration_services.html#orgs_integration_service-linked-roles\">AWS
        Organizations and Service-Linked Roles</a> in the <i>AWS Organizations
        User Guide</i>.</p> </li> <li> <p> <b>Enable all features final
        confirmation</b> handshake: only a principal from the master
        account.</p> <p>For more information about invitations, see <a
        href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_\
        manage_accounts_invites.html\">Inviting an AWS Account to Join Your
        Organization</a> in the <i>AWS Organizations User Guide.</i> For more
        information about requests to enable all features in the organization,
        see <a
        href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_\
        manage_org_support-all-features.html\">Enabling All Features in Your
        Organization</a> in the <i>AWS Organizations User Guide.</i> </p> </li>
        </ul> <p>After you accept a handshake, it continues to appear in the
        results of relevant APIs for only 30 days. After that, it's
        deleted.</p>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcceptHandshakeResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: HandshakeConstraintViolationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HandshakeConstraintViolationException"
        "483":
          description: HandshakeNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HandshakeNotFoundException"
        "484":
          description: InvalidHandshakeTransitionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidHandshakeTransitionException"
        "485":
          description: HandshakeAlreadyInStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HandshakeAlreadyInStateException"
        "486":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "487":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "488":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "489":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "490":
          description: AccessDeniedForDependencyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedForDependencyException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.AcceptHandshake
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcceptHandshakeRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.AttachPolicy:
    post:
      operationId: AttachPolicy
      description: <p>Attaches a policy to a root, an organizational unit (OU), or an
        individual account. How the policy affects accounts depends on the type
        of policy:</p> <ul> <li> <p> <b>Service control policy (SCP)</b> - An
        SCP specifies what permissions can be delegated to users in affected
        member accounts. The scope of influence for a policy depends on what you
        attach the policy to:</p> <ul> <li> <p>If you attach an SCP to a root,
        it affects all accounts in the organization.</p> </li> <li> <p>If you
        attach an SCP to an OU, it affects all accounts in that OU and in any
        child OUs.</p> </li> <li> <p>If you attach the policy directly to an
        account, it affects only that account.</p> </li> </ul> <p>SCPs are JSON
        policies that specify the maximum permissions for an organization or
        organizational unit (OU). You can attach one SCP to a higher level root
        or OU, and a different SCP to a child OU or to an account. The child
        policy can further restrict only the permissions that pass through the
        parent filter and are available to the child. An SCP that is attached to
        a child can't grant a permission that the parent hasn't already granted.
        For example, imagine that the parent SCP allows permissions A, B, C, D,
        and E. The child SCP allows C, D, E, F, and G. The result is that the
        accounts affected by the child SCP are allowed to use only C, D, and E.
        They can't use A or B because the child OU filtered them out. They also
        can't use F and G because the parent OU filtered them out. They can't be
        granted back by the child SCP; child SCPs can only filter the
        permissions they receive from the parent SCP.</p> <p>AWS Organizations
        attaches a default SCP named <code>"FullAWSAccess</code> to every root,
        OU, and account. This default SCP allows all services and actions,
        enabling any new child OU or account to inherit the permissions of the
        parent root or OU. If you detach the default policy, you must replace it
        with a policy that specifies the permissions that you want to allow in
        that OU or account.</p> <p>For more information about how AWS
        Organizations policies permissions work, see <a
        href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html">Using
        Service Control Policies</a> in the <i>AWS Organizations User Guide.</i>
        </p> </li> </ul> <p>This operation can be called only from the
        organization's master account.</p>
      responses:
        "200":
          description: Success
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConstraintViolationException"
        "484":
          description: DuplicatePolicyAttachmentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicatePolicyAttachmentException"
        "485":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "486":
          description: PolicyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyNotFoundException"
        "487":
          description: PolicyTypeNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyTypeNotEnabledException"
        "488":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "489":
          description: TargetNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TargetNotFoundException"
        "490":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.AttachPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttachPolicyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.CancelHandshake:
    post:
      operationId: CancelHandshake
      description: <p>Cancels a handshake. Canceling a handshake sets the handshake state
        to <code>CANCELED</code>. </p> <p>This operation can be called only from
        the account that originated the handshake. The recipient of the
        handshake can't cancel it, but can use <a>DeclineHandshake</a> instead.
        After a handshake is canceled, the recipient can no longer respond to
        that handshake.</p> <p>After you cancel a handshake, it continues to
        appear in the results of relevant APIs for only 30 days. After that,
        it's deleted.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelHandshakeResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "482":
          description: HandshakeNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HandshakeNotFoundException"
        "483":
          description: InvalidHandshakeTransitionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidHandshakeTransitionException"
        "484":
          description: HandshakeAlreadyInStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HandshakeAlreadyInStateException"
        "485":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "486":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "487":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.CancelHandshake
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelHandshakeRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.CreateAccount:
    post:
      operationId: CreateAccount
      description: <p>Creates an AWS account that is automatically a member of the
        organization whose credentials made the request. This is an asynchronous
        request that AWS performs in the background. Because
        <code>CreateAccount</code> operates asynchronously, it can return a
        successful completion message even though account initialization might
        still be in progress. You might need to wait a few minutes before you
        can successfully access the account. To check the status of the request,
        do one of the following:</p> <ul> <li> <p>Use the
        <code>OperationId</code> response element from this operation to provide
        as a parameter to the <a>DescribeCreateAccountStatus</a> operation.</p>
        </li> <li> <p>Check the AWS CloudTrail log for the
        <code>CreateAccountResult</code> event. For information on using AWS
        CloudTrail with AWS Organizations, see <a
        href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_monitoring.html">Monitoring
        the Activity in Your Organization</a> in the <i>AWS Organizations User
        Guide.</i> </p> </li> </ul> <p/> <p>The user who calls the API to create
        an account must have the <code>organizations:CreateAccount</code>
        permission. If you enabled all features in the organization, AWS
        Organizations creates the required service-linked role named
        <code>AWSServiceRoleForOrganizations</code>. For more information, see
        <a
        href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html#orgs_integrate_services-using_slrs">AWS
        Organizations and Service-Linked Roles</a> in the <i>AWS Organizations
        User Guide</i>.</p> <p>AWS Organizations preconfigures the new member
        account with a role (named <code>OrganizationAccountAccessRole</code> by
        default) that grants users in the master account administrator
        permissions in the new member account. Principals in the master account
        can assume the role. AWS Organizations clones the company name and
        address information for the new account from the organization's master
        account.</p> <p>This operation can be called only from the
        organization's master account.</p> <p>For more information about
        creating accounts, see <a
        href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_create.html">Creating
        an AWS Account in Your Organization</a> in the <i>AWS Organizations User
        Guide.</i> </p> <important> <ul> <li> <p>When you create an account in
        an organization using the AWS Organizations console, API, or CLI
        commands, the information required for the account to operate as a
        standalone account, such as a payment method and signing the end user
        license agreement (EULA) is <i>not</i> automatically collected. If you
        must remove an account from your organization later, you can do so only
        after you provide the missing information. Follow the steps at <a
        href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_remove.html#leave-without-all-info">
        To leave an organization as a member account</a> in the <i>AWS
        Organizations User Guide</i>.</p> </li> <li> <p>If you get an exception
        that indicates that you exceeded your account limits for the
        organization, contact <a
        href="https://console.aws.amazon.com/support/home#/">AWS
        Support</a>.</p> </li> <li> <p>If you get an exception that indicates
        that the operation failed because your organization is still
        initializing, wait one hour and then try again. If the error persists,
        contact <a href="https://console.aws.amazon.com/support/home#/">AWS
        Support</a>.</p> </li> <li> <p>Using <code>CreateAccount</code> to
        create multiple temporary accounts isn't recommended. You can only close
        an account from the Billing and Cost Management Console, and you must be
        signed in as the root user. For information on the requirements and
        process for closing an account, see <a
        href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_close.html">Closing
        an AWS Account</a> in the <i>AWS Organizations User Guide</i>.</p> </li>
        </ul> </important> <note> <p>When you create a member account with this
        operation, you can choose whether to create the account with the <b>IAM
        User and Role Access to Billing Information</b> switch enabled. If you
        enable it, IAM users and roles that have appropriate permissions can
        view billing information for the account. If you disable it, only the
        account root user can access billing information. For information about
        how to disable this switch for an account, see <a
        href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html">Granting
        Access to Your Billing Information and Tools</a>.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAccountResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConstraintViolationException"
        "484":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "485":
          description: FinalizingOrganizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FinalizingOrganizationException"
        "486":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "487":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "488":
          description: UnsupportedAPIEndpointException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedAPIEndpointException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.CreateAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccountRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.CreateGovCloudAccount:
    post:
      operationId: CreateGovCloudAccount
      description: "<p>This action is available if all of the following are true:</p> <ul>
        <li> <p>You're authorized to create accounts in the AWS GovCloud (US)
        Region. For more information on the AWS GovCloud (US) Region, see the <a
        href=\"http://docs.aws.amazon.com/govcloud-us/latest/UserGuide/welcome.\
        html\"> <i>AWS GovCloud User Guide</i>.</a> </p> </li> <li> <p>You
        already have an account in the AWS GovCloud (US) Region that is
        associated with your master account in the commercial Region. </p> </li>
        <li> <p>You call this action from the master account of your
        organization in the commercial Region.</p> </li> <li> <p>You have the
        <code>organizations:CreateGovCloudAccount</code> permission. AWS
        Organizations creates the required service-linked role named
        <code>AWSServiceRoleForOrganizations</code>. For more information, see
        <a
        href=\"http://docs.aws.amazon.com/organizations/latest/userguide/orgs_i\
        ntegrate_services.html#orgs_integrate_services-using_slrs\">AWS
        Organizations and Service-Linked Roles</a> in the <i>AWS Organizations
        User Guide.</i> </p> </li> </ul> <p>AWS automatically enables AWS
        CloudTrail for AWS GovCloud (US) accounts, but you should also do the
        following:</p> <ul> <li> <p>Verify that AWS CloudTrail is enabled to
        store logs.</p> </li> <li> <p>Create an S3 bucket for AWS CloudTrail log
        storage.</p> <p>For more information, see <a
        href=\"http://docs.aws.amazon.com/govcloud-us/latest/UserGuide/verifyin\
        g-cloudtrail.html\">Verifying AWS CloudTrail Is Enabled</a> in the
        <i>AWS GovCloud User Guide</i>. </p> </li> </ul> <p>You call this action
        from the master account of your organization in the commercial Region to
        create a standalone AWS account in the AWS GovCloud (US) Region. After
        the account is created, the master account of an organization in the AWS
        GovCloud (US) Region can invite it to that organization. For more
        information on inviting standalone accounts in the AWS GovCloud (US) to
        join an organization, see <a
        href=\"http://docs.aws.amazon.com/govcloud-us/latest/UserGuide/govcloud\
        -organizations.html\">AWS Organizations</a> in the <i>AWS GovCloud User
        Guide.</i> </p> <p>Calling <code>CreateGovCloudAccount</code> is an
        asynchronous request that AWS performs in the background. Because
        <code>CreateGovCloudAccount</code> operates asynchronously, it can
        return a successful completion message even though account
        initialization might still be in progress. You might need to wait a few
        minutes before you can successfully access the account. To check the
        status of the request, do one of the following:</p> <ul> <li> <p>Use the
        <code>OperationId</code> response element from this operation to provide
        as a parameter to the <a>DescribeCreateAccountStatus</a> operation.</p>
        </li> <li> <p>Check the AWS CloudTrail log for the
        <code>CreateAccountResult</code> event. For information on using AWS
        CloudTrail with Organizations, see <a
        href=\"http://docs.aws.amazon.com/organizations/latest/userguide/orgs_m\
        onitoring.html\">Monitoring the Activity in Your Organization</a> in the
        <i>AWS Organizations User Guide.</i> </p> </li> </ul> <p/> <p>When you
        call the <code>CreateGovCloudAccount</code> action, you create two
        accounts: a standalone account in the AWS GovCloud (US) Region and an
        associated account in the commercial Region for billing and support
        purposes. The account in the commercial Region is automatically a member
        of the organization whose credentials made the request. Both accounts
        are associated with the same email address.</p> <p>A role is created in
        the new account in the commercial Region that allows the master account
        in the organization in the commercial Region to assume it. An AWS
        GovCloud (US) account is then created and associated with the commercial
        account that you just created. A role is created in the new AWS GovCloud
        (US) account that can be assumed by the AWS GovCloud (US) account that
        is associated with the master account of the commercial organization.
        For more information and to view a diagram that explains how account
        access works, see <a
        href=\"http://docs.aws.amazon.com/govcloud-us/latest/UserGuide/govcloud\
        -organizations.html\">AWS Organizations</a> in the <i>AWS GovCloud User
        Guide.</i> </p> <p>For more information about creating accounts, see <a
        href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_\
        manage_accounts_create.html\">Creating an AWS Account in Your
        Organization</a> in the <i>AWS Organizations User Guide.</i> </p>
        <important> <ul> <li> <p>When you create an account in an organization
        using the AWS Organizations console, API, or CLI commands, the
        information required for the account to operate as a standalone account,
        such as a payment method and signing the end user license agreement
        (EULA) is <i>not</i> automatically collected. If you must remove an
        account from your organization later, you can do so only after you
        provide the missing information. Follow the steps at <a
        href=\"http://docs.aws.amazon.com/organizations/latest/userguide/orgs_m\
        anage_accounts_remove.html#leave-without-all-info\"> To leave an
        organization as a member account</a> in the <i>AWS Organizations User
        Guide.</i> </p> </li> <li> <p>If you get an exception that indicates
        that you exceeded your account limits for the organization, contact <a
        href=\"https://console.aws.amazon.com/support/home#/\">AWS
        Support</a>.</p> </li> <li> <p>If you get an exception that indicates
        that the operation failed because your organization is still
        initializing, wait one hour and then try again. If the error persists,
        contact <a href=\"https://console.aws.amazon.com/support/home#/\">AWS
        Support</a>.</p> </li> <li> <p>Using <code>CreateGovCloudAccount</code>
        to create multiple temporary accounts isn't recommended. You can only
        close an account from the AWS Billing and Cost Management console, and
        you must be signed in as the root user. For information on the
        requirements and process for closing an account, see <a
        href=\"http://docs.aws.amazon.com/organizations/latest/userguide/orgs_m\
        anage_accounts_close.html\">Closing an AWS Account</a> in the <i>AWS
        Organizations User Guide</i>.</p> </li> </ul> </important> <note>
        <p>When you create a member account with this operation, you can choose
        whether to create the account with the <b>IAM User and Role Access to
        Billing Information</b> switch enabled. If you enable it, IAM users and
        roles that have appropriate permissions can view billing information for
        the account. If you disable it, only the account root user can access
        billing information. For information about how to disable this switch
        for an account, see <a
        href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/gra\
        ntaccess.html\">Granting Access to Your Billing Information and
        Tools</a>.</p> </note>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateGovCloudAccountResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConstraintViolationException"
        "484":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "485":
          description: FinalizingOrganizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FinalizingOrganizationException"
        "486":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "487":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "488":
          description: UnsupportedAPIEndpointException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedAPIEndpointException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.CreateGovCloudAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGovCloudAccountRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.CreateOrganization:
    post:
      operationId: CreateOrganization
      description: <p>Creates an AWS organization. The account whose user is calling the
        <code>CreateOrganization</code> operation automatically becomes the <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/orgs_getting-started_concepts.html#account">master
        account</a> of the new organization.</p> <p>This operation must be
        called using credentials from the account that is to become the new
        organization's master account. The principal must also have the relevant
        IAM permissions.</p> <p>By default (or if you set the
        <code>FeatureSet</code> parameter to <code>ALL</code>), the new
        organization is created with all features enabled and service control
        policies automatically enabled in the root. If you instead choose to
        create the organization supporting only the consolidated billing
        features by setting the <code>FeatureSet</code> parameter to
        <code>CONSOLIDATED_BILLING"</code>, no policy types are enabled by
        default, and you can't use organization policies.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateOrganizationResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AlreadyInOrganizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyInOrganizationException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConstraintViolationException"
        "484":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "485":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "486":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "487":
          description: AccessDeniedForDependencyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedForDependencyException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.CreateOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrganizationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.CreateOrganizationalUnit:
    post:
      operationId: CreateOrganizationalUnit
      description: <p>Creates an organizational unit (OU) within a root or parent OU. An OU
        is a container for accounts that enables you to organize your accounts
        to apply policies according to your business requirements. The number of
        levels deep that you can nest OUs is dependent upon the policy types
        enabled for that root. For service control policies, the limit is five.
        </p> <p>For more information about OUs, see <a
        href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_ous.html">Managing
        Organizational Units</a> in the <i>AWS Organizations User Guide.</i>
        </p> <p>This operation can be called only from the organization's master
        account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateOrganizationalUnitResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConstraintViolationException"
        "484":
          description: DuplicateOrganizationalUnitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateOrganizationalUnitException"
        "485":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "486":
          description: ParentNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParentNotFoundException"
        "487":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "488":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.CreateOrganizationalUnit
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrganizationalUnitRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.CreatePolicy:
    post:
      operationId: CreatePolicy
      description: <p>Creates a policy of a specified type that you can attach to a root,
        an organizational unit (OU), or an individual AWS account.</p> <p>For
        more information about policies and their use, see <a
        href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies.html">Managing
        Organization Policies</a>.</p> <p>This operation can be called only from
        the organization's master account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePolicyResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConstraintViolationException"
        "484":
          description: DuplicatePolicyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicatePolicyException"
        "485":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "486":
          description: MalformedPolicyDocumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MalformedPolicyDocumentException"
        "487":
          description: PolicyTypeNotAvailableForOrganizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyTypeNotAvailableForOrganizationEx\
                  ception"
        "488":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "489":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.CreatePolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePolicyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.DeclineHandshake:
    post:
      operationId: DeclineHandshake
      description: <p>Declines a handshake request. This sets the handshake state to
        <code>DECLINED</code> and effectively deactivates the request.</p>
        <p>This operation can be called only from the account that received the
        handshake. The originator of the handshake can use
        <a>CancelHandshake</a> instead. The originator can't reactivate a
        declined request, but can reinitiate the process with a new handshake
        request.</p> <p>After you decline a handshake, it continues to appear in
        the results of relevant APIs for only 30 days. After that, it's
        deleted.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeclineHandshakeResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "482":
          description: HandshakeNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HandshakeNotFoundException"
        "483":
          description: InvalidHandshakeTransitionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidHandshakeTransitionException"
        "484":
          description: HandshakeAlreadyInStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HandshakeAlreadyInStateException"
        "485":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "486":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "487":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.DeclineHandshake
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeclineHandshakeRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.DeleteOrganization:
    post:
      operationId: DeleteOrganization
      description: Deletes the organization. You can delete an organization only by using
        credentials from the master account. The organization must be empty of
        member accounts.
      responses:
        "200":
          description: Success
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "484":
          description: OrganizationNotEmptyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationNotEmptyException"
        "485":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "486":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.DeleteOrganization
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.DeleteOrganizationalUnit:
    post:
      operationId: DeleteOrganizationalUnit
      description: <p>Deletes an organizational unit (OU) from a root or another OU. You
        must first remove all accounts and child OUs from the OU that you want
        to delete.</p> <p>This operation can be called only from the
        organization's master account.</p>
      responses:
        "200":
          description: Success
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "484":
          description: OrganizationalUnitNotEmptyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationalUnitNotEmptyException"
        "485":
          description: OrganizationalUnitNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationalUnitNotFoundException"
        "486":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "487":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.DeleteOrganizationalUnit
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteOrganizationalUnitRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.DeletePolicy:
    post:
      operationId: DeletePolicy
      description: <p>Deletes the specified policy from your organization. Before you
        perform this operation, you must first detach the policy from all
        organizational units (OUs), roots, and accounts.</p> <p>This operation
        can be called only from the organization's master account.</p>
      responses:
        "200":
          description: Success
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "484":
          description: PolicyInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyInUseException"
        "485":
          description: PolicyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyNotFoundException"
        "486":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "487":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.DeletePolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeletePolicyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.DescribeAccount:
    post:
      operationId: DescribeAccount
      description: <p>Retrieves AWS Organizations-related information about the specified
        account.</p> <p>This operation can be called only from the
        organization's master account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAccountResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AccountNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountNotFoundException"
        "482":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "483":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.DescribeAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeAccountRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.DescribeCreateAccountStatus:
    post:
      operationId: DescribeCreateAccountStatus
      description: <p>Retrieves the current status of an asynchronous request to create an
        account.</p> <p>This operation can be called only from the
        organization's master account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeCreateAccountStatusResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: CreateAccountStatusNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAccountStatusNotFoundException"
        "483":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "486":
          description: UnsupportedAPIEndpointException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedAPIEndpointException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.DescribeCreateAccountStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeCreateAccountStatusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.DescribeHandshake:
    post:
      operationId: DescribeHandshake
      description: <p>Retrieves information about a previously requested handshake. The
        handshake ID comes from the response to the original
        <a>InviteAccountToOrganization</a> operation that generated the
        handshake.</p> <p>You can access handshakes that are
        <code>ACCEPTED</code>, <code>DECLINED</code>, or <code>CANCELED</code>
        for only 30 days after they change to that state. They're then deleted
        and no longer accessible.</p> <p>This operation can be called from any
        account in the organization.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeHandshakeResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "482":
          description: HandshakeNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HandshakeNotFoundException"
        "483":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.DescribeHandshake
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeHandshakeRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.DescribeOrganization:
    post:
      operationId: DescribeOrganization
      description: <p>Retrieves information about the organization that the user's account
        belongs to.</p> <p>This operation can be called from any account in the
        organization.</p> <note> <p>Even if a policy type is shown as available
        in the organization, you can disable it separately at the root level
        with <a>DisablePolicyType</a>. Use <a>ListRoots</a> to see the status of
        policy types for a specified root.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeOrganizationResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "484":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.DescribeOrganization
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.DescribeOrganizationalUnit:
    post:
      operationId: DescribeOrganizationalUnit
      description: <p>Retrieves information about an organizational unit (OU).</p> <p>This
        operation can be called only from the organization's master account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeOrganizationalUnitResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "483":
          description: OrganizationalUnitNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationalUnitNotFoundException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.DescribeOrganizationalUnit
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeOrganizationalUnitRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.DescribePolicy:
    post:
      operationId: DescribePolicy
      description: <p>Retrieves information about a policy.</p> <p>This operation can be
        called only from the organization's master account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePolicyResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "483":
          description: PolicyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyNotFoundException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.DescribePolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribePolicyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.DetachPolicy:
    post:
      operationId: DetachPolicy
      description: "<p>Detaches a policy from a target root, organizational unit (OU), or
        account. If the policy being detached is a service control policy (SCP),
        the changes to permissions for IAM users and roles in affected accounts
        are immediate.</p> <p> <b>Note:</b> Every root, OU, and account must
        have at least one SCP attached. If you want to replace the default
        <code>FullAWSAccess</code> policy with one that limits the permissions
        that can be delegated, you must attach the replacement policy before you
        can remove the default one. This is the authorization strategy of <a
        href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_\
        manage_policies_about-scps.html#orgs_policies_whitelist\">whitelisting<\
        /a>. If you instead attach a second SCP and leave the
        <code>FullAWSAccess</code> SCP still attached, and specify
        <code>\"Effect\": \"Deny\"</code> in the second SCP to override the
        <code>\"Effect\": \"Allow\"</code> in the <code>FullAWSAccess</code>
        policy (or any other attached SCP), you're using the authorization
        strategy of <a
        href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_\
        manage_policies_about-scps.html#orgs_policies_blacklist\">blacklisting<\
        /a> . </p> <p>This operation can be called only from the organization's
        master account.</p>"
      responses:
        "200":
          description: Success
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConstraintViolationException"
        "484":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "485":
          description: PolicyNotAttachedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyNotAttachedException"
        "486":
          description: PolicyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyNotFoundException"
        "487":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "488":
          description: TargetNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TargetNotFoundException"
        "489":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.DetachPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DetachPolicyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.DisableAWSServiceAccess:
    post:
      operationId: DisableAWSServiceAccess
      description: <p>Disables the integration of an AWS service (the service that is
        specified by <code>ServicePrincipal</code>) with AWS Organizations. When
        you disable integration, the specified service no longer can create a <a
        href="http://docs.aws.amazon.com/IAM/latest/UserGuide/using-service-linked-roles.html">service-linked
        role</a> in <i>new</i> accounts in your organization. This means the
        service can't perform operations on your behalf on any new accounts in
        your organization. The service can still perform operations in older
        accounts until the service completes its clean-up from AWS
        Organizations.</p> <p/> <important> <p>We recommend that you disable
        integration between AWS Organizations and the specified AWS service by
        using the console or commands that are provided by the specified
        service. Doing so ensures that the other service is aware that it can
        clean up any resources that are required only for the integration. How
        the service cleans up its resources in the organization's accounts
        depends on that service. For more information, see the documentation for
        the other AWS service.</p> </important> <p>After you perform the
        <code>DisableAWSServiceAccess</code> operation, the specified service
        can no longer perform operations in your organization's accounts unless
        the operations are explicitly permitted by the IAM policies that are
        attached to your roles. </p> <p>For more information about integrating
        other services with AWS Organizations, including the list of services
        that work with Organizations, see <a
        href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html">Integrating
        AWS Organizations with Other AWS Services</a> in the <i>AWS
        Organizations User Guide.</i> </p> <p>This operation can be called only
        from the organization's master account.</p>
      responses:
        "200":
          description: Success
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConstraintViolationException"
        "484":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "485":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "486":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.DisableAWSServiceAccess
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisableAWSServiceAccessRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.DisablePolicyType:
    post:
      operationId: DisablePolicyType
      description: <p>Disables an organizational control policy type in a root. A policy of
        a certain type can be attached to entities in a root only if that type
        is enabled in the root. After you perform this operation, you no longer
        can attach policies of the specified type to that root or to any
        organizational unit (OU) or account in that root. You can undo this by
        using the <a>EnablePolicyType</a> operation.</p> <p>This is an
        asynchronous request that AWS performs in the background. If you disable
        a policy for a root, it still appears enabled for the organization if <a
        href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">all
        features</a> are enabled for the organization. AWS recommends that you
        first use <a>ListRoots</a> to see the status of policy types for a
        specified root, and then use this operation. </p> <p>This operation can
        be called only from the organization's master account.</p> <p> To view
        the status of available policy types in the organization, use
        <a>DescribeOrganization</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisablePolicyTypeResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConstraintViolationException"
        "484":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "485":
          description: PolicyTypeNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyTypeNotEnabledException"
        "486":
          description: RootNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RootNotFoundException"
        "487":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "488":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.DisablePolicyType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisablePolicyTypeRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.EnableAWSServiceAccess:
    post:
      operationId: EnableAWSServiceAccess
      description: <p>Enables the integration of an AWS service (the service that is
        specified by <code>ServicePrincipal</code>) with AWS Organizations. When
        you enable integration, you allow the specified service to create a <a
        href="http://docs.aws.amazon.com/IAM/latest/UserGuide/using-service-linked-roles.html">service-linked
        role</a> in all the accounts in your organization. This allows the
        service to perform operations on your behalf in your organization and
        its accounts.</p> <important> <p>We recommend that you enable
        integration between AWS Organizations and the specified AWS service by
        using the console or commands that are provided by the specified
        service. Doing so ensures that the service is aware that it can create
        the resources that are required for the integration. How the service
        creates those resources in the organization's accounts depends on that
        service. For more information, see the documentation for the other AWS
        service.</p> </important> <p>For more information about enabling
        services to integrate with AWS Organizations, see <a
        href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html">Integrating
        AWS Organizations with Other AWS Services</a> in the <i>AWS
        Organizations User Guide.</i> </p> <p>This operation can be called only
        from the organization's master account and only if the organization has
        <a
        href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">enabled
        all features</a>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConstraintViolationException"
        "484":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "485":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "486":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.EnableAWSServiceAccess
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnableAWSServiceAccessRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.EnableAllFeatures:
    post:
      operationId: EnableAllFeatures
      description: "<p>Enables all features in an organization. This enables the use of
        organization policies that can restrict the services and actions that
        can be called in each account. Until you enable all features, you have
        access only to consolidated billing, and you can't use any of the
        advanced account administration features that AWS Organizations
        supports. For more information, see <a
        href=\"https://docs.aws.amazon.com/organizations/latest/userguide/orgs_\
        manage_org_support-all-features.html\">Enabling All Features in Your
        Organization</a> in the <i>AWS Organizations User Guide.</i> </p>
        <important> <p>This operation is required only for organizations that
        were created explicitly with only the consolidated billing features
        enabled. Calling this operation sends a handshake to every invited
        account in the organization. The feature set change can be finalized and
        the additional features enabled only after all administrators in the
        invited accounts approve the change by accepting the handshake.</p>
        </important> <p>After you enable all features, you can separately enable
        or disable individual policy types in a root using
        <a>EnablePolicyType</a> and <a>DisablePolicyType</a>. To see the status
        of policy types in a root, use <a>ListRoots</a>.</p> <p>After all
        invited member accounts accept the handshake, you finalize the feature
        set change by accepting the handshake that contains <code>\"Action\":
        \"ENABLE_ALL_FEATURES\"</code>. This completes the change.</p> <p>After
        you enable all features in your organization, the master account in the
        organization can apply policies on all member accounts. These policies
        can restrict what users and even administrators in those accounts can
        do. The master account can apply policies that prevent accounts from
        leaving the organization. Ensure that your account administrators are
        aware of this.</p> <p>This operation can be called only from the
        organization's master account. </p>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnableAllFeaturesResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: HandshakeConstraintViolationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HandshakeConstraintViolationException"
        "484":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "485":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "486":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.EnableAllFeatures
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnableAllFeaturesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.EnablePolicyType:
    post:
      operationId: EnablePolicyType
      description: <p>Enables a policy type in a root. After you enable a policy type in a
        root, you can attach policies of that type to the root, any
        organizational unit (OU), or account in that root. You can undo this by
        using the <a>DisablePolicyType</a> operation.</p> <p>This is an
        asynchronous request that AWS performs in the background. AWS recommends
        that you first use <a>ListRoots</a> to see the status of policy types
        for a specified root, and then use this operation. </p> <p>This
        operation can be called only from the organization's master account.</p>
        <p>You can enable a policy type in a root only if that policy type is
        available in the organization. To view the status of available policy
        types in the organization, use <a>DescribeOrganization</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnablePolicyTypeResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConstraintViolationException"
        "484":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "485":
          description: PolicyTypeAlreadyEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyTypeAlreadyEnabledException"
        "486":
          description: RootNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RootNotFoundException"
        "487":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "488":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "489":
          description: PolicyTypeNotAvailableForOrganizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyTypeNotAvailableForOrganizationEx\
                  ception"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.EnablePolicyType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnablePolicyTypeRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.InviteAccountToOrganization:
    post:
      operationId: InviteAccountToOrganization
      description: <p>Sends an invitation to another account to join your organization as a
        member account. AWS Organizations sends email on your behalf to the
        email address that is associated with the other account's owner. The
        invitation is implemented as a <a>Handshake</a> whose details are in the
        response.</p> <important> <ul> <li> <p>You can invite AWS accounts only
        from the same seller as the master account. For example, if your
        organization's master account was created by Amazon Internet Services
        Pvt. Ltd (AISPL), an AWS seller in India, you can invite only other
        AISPL accounts to your organization. You can't combine accounts from
        AISPL and AWS or from any other AWS seller. For more information, see <a
        href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/useconsolidatedbilliing-India.html">Consolidated
        Billing in India</a>.</p> </li> <li> <p>If you receive an exception that
        indicates that you exceeded your account limits for the organization or
        that the operation failed because your organization is still
        initializing, wait one hour and then try again. If the error persists
        after an hour, contact <a
        href="https://console.aws.amazon.com/support/home#/">AWS
        Support</a>.</p> </li> </ul> </important> <p>This operation can be
        called only from the organization's master account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InviteAccountToOrganizationResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: AccountOwnerNotVerifiedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountOwnerNotVerifiedException"
        "483":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "484":
          description: HandshakeConstraintViolationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HandshakeConstraintViolationException"
        "485":
          description: DuplicateHandshakeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateHandshakeException"
        "486":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "487":
          description: FinalizingOrganizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FinalizingOrganizationException"
        "488":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "489":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.InviteAccountToOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InviteAccountToOrganizationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.LeaveOrganization:
    post:
      operationId: LeaveOrganization
      description: <p>Removes a member account from its parent organization. This version
        of the operation is performed by the account that wants to leave. To
        remove a member account as a user in the master account, use
        <a>RemoveAccountFromOrganization</a> instead.</p> <p>This operation can
        be called only from a member account in the organization.</p>
        <important> <ul> <li> <p>The master account in an organization with all
        features enabled can set service control policies (SCPs) that can
        restrict what administrators of member accounts can do, including
        preventing them from successfully calling <code>LeaveOrganization</code>
        and leaving the organization. </p> </li> <li> <p>You can leave an
        organization as a member account only if the account is configured with
        the information required to operate as a standalone account. When you
        create an account in an organization using the AWS Organizations
        console, API, or CLI commands, the information required of standalone
        accounts is <i>not</i> automatically collected. For each account that
        you want to make standalone, you must accept the end user license
        agreement (EULA), choose a support plan, provide and verify the required
        contact information, and provide a current payment method. AWS uses the
        payment method to charge for any billable (not free tier) AWS activity
        that occurs while the account isn't attached to an organization. Follow
        the steps at <a
        href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_remove.html#leave-without-all-info">
        To leave an organization when all required account information has not
        yet been provided</a> in the <i>AWS Organizations User Guide.</i> </p>
        </li> <li> <p>You can leave an organization only after you enable IAM
        user access to billing in your account. For more information, see <a
        href="http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html#ControllingAccessWebsite-Activate">Activating
        Access to the Billing and Cost Management Console</a> in the <i>AWS
        Billing and Cost Management User Guide.</i> </p> </li> </ul>
        </important>
      responses:
        "200":
          description: Success
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AccountNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountNotFoundException"
        "482":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "483":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "484":
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConstraintViolationException"
        "485":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "486":
          description: MasterCannotLeaveOrganizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MasterCannotLeaveOrganizationException"
        "487":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "488":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.LeaveOrganization
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.ListAWSServiceAccessForOrganization:
    post:
      operationId: ListAWSServiceAccessForOrganization
      description: <p>Returns a list of the AWS services that you enabled to integrate with
        your organization. After a service on this list creates the resources
        that it requires for the integration, it can perform operations on your
        organization and its accounts.</p> <p>For more information about
        integrating other services with AWS Organizations, including the list of
        services that currently work with Organizations, see <a
        href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html">Integrating
        AWS Organizations with Other AWS Services</a> in the <i>AWS
        Organizations User Guide.</i> </p> <p>This operation can be called only
        from the organization's master account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAWSServiceAccessForOrganizationResp\
                  onse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConstraintViolationException"
        "483":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.ListAWSServiceAccessForOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListAWSServiceAccessForOrganizationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.ListAccounts:
    post:
      operationId: ListAccounts
      description: <p>Lists all the accounts in the organization. To request only the
        accounts in a specified root or organizational unit (OU), use the
        <a>ListAccountsForParent</a> operation instead.</p> <note> <p>Always
        check the <code>NextToken</code> response parameter for a
        <code>null</code> value when calling a <code>List*</code> operation.
        These operations can occasionally return an empty set of results even
        when there are more results available. The <code>NextToken</code>
        response parameter value is <code>null</code> <i>only</i> when there are
        no more results to display.</p> </note> <p>This operation can be called
        only from the organization's master account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAccountsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "483":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "484":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.ListAccounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListAccountsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.ListAccountsForParent:
    post:
      operationId: ListAccountsForParent
      description: <p>Lists the accounts in an organization that are contained by the
        specified target root or organizational unit (OU). If you specify the
        root, you get a list of all the accounts that aren't in any OU. If you
        specify an OU, you get a list of all the accounts in only that OU and
        not in any child OUs. To get a list of all accounts in the organization,
        use the <a>ListAccounts</a> operation.</p> <note> <p>Always check the
        <code>NextToken</code> response parameter for a <code>null</code> value
        when calling a <code>List*</code> operation. These operations can
        occasionally return an empty set of results even when there are more
        results available. The <code>NextToken</code> response parameter value
        is <code>null</code> <i>only</i> when there are no more results to
        display.</p> </note> <p>This operation can be called only from the
        organization's master account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAccountsForParentResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "483":
          description: ParentNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParentNotFoundException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.ListAccountsForParent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListAccountsForParentRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.ListChildren:
    post:
      operationId: ListChildren
      description: <p>Lists all of the organizational units (OUs) or accounts that are
        contained in the specified parent OU or root. This operation, along with
        <a>ListParents</a> enables you to traverse the tree structure that makes
        up this root.</p> <note> <p>Always check the <code>NextToken</code>
        response parameter for a <code>null</code> value when calling a
        <code>List*</code> operation. These operations can occasionally return
        an empty set of results even when there are more results available. The
        <code>NextToken</code> response parameter value is <code>null</code>
        <i>only</i> when there are no more results to display.</p> </note>
        <p>This operation can be called only from the organization's master
        account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListChildrenResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "483":
          description: ParentNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParentNotFoundException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.ListChildren
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListChildrenRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.ListCreateAccountStatus:
    post:
      operationId: ListCreateAccountStatus
      description: <p>Lists the account creation requests that match the specified status
        that is currently being tracked for the organization.</p> <note>
        <p>Always check the <code>NextToken</code> response parameter for a
        <code>null</code> value when calling a <code>List*</code> operation.
        These operations can occasionally return an empty set of results even
        when there are more results available. The <code>NextToken</code>
        response parameter value is <code>null</code> <i>only</i> when there are
        no more results to display.</p> </note> <p>This operation can be called
        only from the organization's master account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCreateAccountStatusResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "483":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "484":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "485":
          description: UnsupportedAPIEndpointException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedAPIEndpointException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.ListCreateAccountStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListCreateAccountStatusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.ListHandshakesForAccount:
    post:
      operationId: ListHandshakesForAccount
      description: <p>Lists the current handshakes that are associated with the account of
        the requesting user.</p> <p>Handshakes that are <code>ACCEPTED</code>,
        <code>DECLINED</code>, or <code>CANCELED</code> appear in the results of
        this API for only 30 days after changing to that state. After that,
        they're deleted and no longer accessible.</p> <note> <p>Always check the
        <code>NextToken</code> response parameter for a <code>null</code> value
        when calling a <code>List*</code> operation. These operations can
        occasionally return an empty set of results even when there are more
        results available. The <code>NextToken</code> response parameter value
        is <code>null</code> <i>only</i> when there are no more results to
        display.</p> </note> <p>This operation can be called from any account in
        the organization.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListHandshakesForAccountResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "482":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "483":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "484":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.ListHandshakesForAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListHandshakesForAccountRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.ListHandshakesForOrganization:
    post:
      operationId: ListHandshakesForOrganization
      description: <p>Lists the handshakes that are associated with the organization that
        the requesting user is part of. The
        <code>ListHandshakesForOrganization</code> operation returns a list of
        handshake structures. Each structure contains details and status about a
        handshake.</p> <p>Handshakes that are <code>ACCEPTED</code>,
        <code>DECLINED</code>, or <code>CANCELED</code> appear in the results of
        this API for only 30 days after changing to that state. After that,
        they're deleted and no longer accessible.</p> <note> <p>Always check the
        <code>NextToken</code> response parameter for a <code>null</code> value
        when calling a <code>List*</code> operation. These operations can
        occasionally return an empty set of results even when there are more
        results available. The <code>NextToken</code> response parameter value
        is <code>null</code> <i>only</i> when there are no more results to
        display.</p> </note> <p>This operation can be called only from the
        organization's master account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListHandshakesForOrganizationResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.ListHandshakesForOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListHandshakesForOrganizationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.ListOrganizationalUnitsForParent:
    post:
      operationId: ListOrganizationalUnitsForParent
      description: <p>Lists the organizational units (OUs) in a parent organizational unit
        or root.</p> <note> <p>Always check the <code>NextToken</code> response
        parameter for a <code>null</code> value when calling a
        <code>List*</code> operation. These operations can occasionally return
        an empty set of results even when there are more results available. The
        <code>NextToken</code> response parameter value is <code>null</code>
        <i>only</i> when there are no more results to display.</p> </note>
        <p>This operation can be called only from the organization's master
        account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOrganizationalUnitsForParentResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "483":
          description: ParentNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParentNotFoundException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.ListOrganizationalUnitsForParent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListOrganizationalUnitsForParentRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.ListParents:
    post:
      operationId: ListParents
      description: <p>Lists the root or organizational units (OUs) that serve as the
        immediate parent of the specified child OU or account. This operation,
        along with <a>ListChildren</a> enables you to traverse the tree
        structure that makes up this root.</p> <note> <p>Always check the
        <code>NextToken</code> response parameter for a <code>null</code> value
        when calling a <code>List*</code> operation. These operations can
        occasionally return an empty set of results even when there are more
        results available. The <code>NextToken</code> response parameter value
        is <code>null</code> <i>only</i> when there are no more results to
        display.</p> </note> <p>This operation can be called only from the
        organization's master account.</p> <note> <p>In the current release, a
        child can have only a single parent. </p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListParentsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: ChildNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChildNotFoundException"
        "483":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.ListParents
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListParentsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.ListPolicies:
    post:
      operationId: ListPolicies
      description: <p>Retrieves the list of all policies in an organization of a specified
        type.</p> <note> <p>Always check the <code>NextToken</code> response
        parameter for a <code>null</code> value when calling a
        <code>List*</code> operation. These operations can occasionally return
        an empty set of results even when there are more results available. The
        <code>NextToken</code> response parameter value is <code>null</code>
        <i>only</i> when there are no more results to display.</p> </note>
        <p>This operation can be called only from the organization's master
        account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPoliciesResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "483":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "484":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.ListPolicies
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListPoliciesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.ListPoliciesForTarget:
    post:
      operationId: ListPoliciesForTarget
      description: <p>Lists the policies that are directly attached to the specified target
        root, organizational unit (OU), or account. You must specify the policy
        type that you want included in the returned list.</p> <note> <p>Always
        check the <code>NextToken</code> response parameter for a
        <code>null</code> value when calling a <code>List*</code> operation.
        These operations can occasionally return an empty set of results even
        when there are more results available. The <code>NextToken</code>
        response parameter value is <code>null</code> <i>only</i> when there are
        no more results to display.</p> </note> <p>This operation can be called
        only from the organization's master account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPoliciesForTargetResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "483":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "484":
          description: TargetNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TargetNotFoundException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.ListPoliciesForTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListPoliciesForTargetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.ListRoots:
    post:
      operationId: ListRoots
      description: <p>Lists the roots that are defined in the current organization.</p>
        <note> <p>Always check the <code>NextToken</code> response parameter for
        a <code>null</code> value when calling a <code>List*</code> operation.
        These operations can occasionally return an empty set of results even
        when there are more results available. The <code>NextToken</code>
        response parameter value is <code>null</code> <i>only</i> when there are
        no more results to display.</p> </note> <p>This operation can be called
        only from the organization's master account.</p> <note> <p>Policy types
        can be enabled and disabled in roots. This is distinct from whether
        they're available in the organization. When you enable all features, you
        make policy types available for use in that organization. Individual
        policy types can then be enabled and disabled in a root. To see the
        availability of a policy type in an organization, use
        <a>DescribeOrganization</a>.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRootsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "483":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "484":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.ListRoots
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListRootsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: <p>Lists tags for the specified resource. </p> <p>Currently, you can
        list tags on an account in AWS Organizations.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: TargetNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TargetNotFoundException"
        "483":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.ListTagsForResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagsForResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.ListTargetsForPolicy:
    post:
      operationId: ListTargetsForPolicy
      description: <p>Lists all the roots, organizational units (OUs), and accounts that
        the specified policy is attached to.</p> <note> <p>Always check the
        <code>NextToken</code> response parameter for a <code>null</code> value
        when calling a <code>List*</code> operation. These operations can
        occasionally return an empty set of results even when there are more
        results available. The <code>NextToken</code> response parameter value
        is <code>null</code> <i>only</i> when there are no more results to
        display.</p> </note> <p>This operation can be called only from the
        organization's master account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTargetsForPolicyResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "483":
          description: PolicyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyNotFoundException"
        "484":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.ListTargetsForPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTargetsForPolicyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.MoveAccount:
    post:
      operationId: MoveAccount
      description: <p>Moves an account from its current source parent root or
        organizational unit (OU) to the specified destination parent root or
        OU.</p> <p>This operation can be called only from the organization's
        master account.</p>
      responses:
        "200":
          description: Success
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: SourceParentNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SourceParentNotFoundException"
        "483":
          description: DestinationParentNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DestinationParentNotFoundException"
        "484":
          description: DuplicateAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateAccountException"
        "485":
          description: AccountNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountNotFoundException"
        "486":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "487":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "488":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "489":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.MoveAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MoveAccountRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.RemoveAccountFromOrganization:
    post:
      operationId: RemoveAccountFromOrganization
      description: <p>Removes the specified account from the organization.</p> <p>The
        removed account becomes a standalone account that isn't a member of any
        organization. It's no longer subject to any policies and is responsible
        for its own bill payments. The organization's master account is no
        longer charged for any expenses accrued by the member account after it's
        removed from the organization.</p> <p>This operation can be called only
        from the organization's master account. Member accounts can remove
        themselves with <a>LeaveOrganization</a> instead.</p> <important> <p>You
        can remove an account from your organization only if the account is
        configured with the information required to operate as a standalone
        account. When you create an account in an organization using the AWS
        Organizations console, API, or CLI commands, the information required of
        standalone accounts is <i>not</i> automatically collected. For an
        account that you want to make standalone, you must accept the end user
        license agreement (EULA), choose a support plan, provide and verify the
        required contact information, and provide a current payment method. AWS
        uses the payment method to charge for any billable (not free tier) AWS
        activity that occurs while the account isn't attached to an
        organization. To remove an account that doesn't yet have this
        information, you must sign in as the member account and follow the steps
        at <a
        href="http://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_remove.html#leave-without-all-info">
        To leave an organization when all required account information has not
        yet been provided</a> in the <i>AWS Organizations User Guide.</i> </p>
        </important>
      responses:
        "200":
          description: Success
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AccountNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountNotFoundException"
        "482":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "483":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "484":
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConstraintViolationException"
        "485":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "486":
          description: MasterCannotLeaveOrganizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MasterCannotLeaveOrganizationException"
        "487":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "488":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.RemoveAccountFromOrganization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoveAccountFromOrganizationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.TagResource:
    post:
      operationId: TagResource
      description: <p>Adds one or more tags to the specified resource.</p> <p>Currently,
        you can tag and untag accounts in AWS Organizations.</p>
      responses:
        "200":
          description: Success
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "482":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "483":
          description: TargetNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TargetNotFoundException"
        "484":
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConstraintViolationException"
        "485":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "486":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "487":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.TagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.UntagResource:
    post:
      operationId: UntagResource
      description: <p>Removes a tag from the specified resource. </p> <p>Currently, you can
        tag and untag accounts in AWS Organizations.</p>
      responses:
        "200":
          description: Success
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "482":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "483":
          description: TargetNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TargetNotFoundException"
        "484":
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConstraintViolationException"
        "485":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "486":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "487":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.UntagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UntagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.UpdateOrganizationalUnit:
    post:
      operationId: UpdateOrganizationalUnit
      description: <p>Renames the specified organizational unit (OU). The ID and ARN don't
        change. The child OUs and accounts remain in place, and any attached
        policies of the OU remain attached. </p> <p>This operation can be called
        only from the organization's master account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateOrganizationalUnitResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: DuplicateOrganizationalUnitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateOrganizationalUnitException"
        "484":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "485":
          description: OrganizationalUnitNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationalUnitNotFoundException"
        "486":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "487":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.UpdateOrganizationalUnit
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateOrganizationalUnitRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSOrganizationsV20161128.UpdatePolicy:
    post:
      operationId: UpdatePolicy
      description: <p>Updates an existing policy with a new name, description, or content.
        If you don't supply any parameter, that value remains unchanged. You
        can't change a policy's type.</p> <p>This operation can be called only
        from the organization's master account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdatePolicyResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: AWSOrganizationsNotInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AWSOrganizationsNotInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: ConstraintViolationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConstraintViolationException"
        "484":
          description: DuplicatePolicyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicatePolicyException"
        "485":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "486":
          description: MalformedPolicyDocumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MalformedPolicyDocumentException"
        "487":
          description: PolicyNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PolicyNotFoundException"
        "488":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "489":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSOrganizationsV20161128.UpdatePolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePolicyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://organizations.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Organizations multi-region endpoint
  - url: https://organizations.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Organizations multi-region endpoint
  - url: http://organizations.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Organizations endpoint for China (Beijing) and China (Ningxia)
  - url: https://organizations.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Organizations endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AcceptHandshakeResponse:
      type: object
      example:
        Handshake:
          Action: INVITE
          Arn: arn:aws:organizations::111111111111:handshake/o-exampleorgid/invite/h-examplehandshakeid111
          ExpirationTimestamp: 20170228T1215Z
          Id: h-examplehandshakeid111
          Parties:
            - Id: o-exampleorgid
              Type: ORGANIZATION
            - Id: juan@example.com
              Type: EMAIL
          RequestedTimestamp: 20170214T1215Z
          Resources:
            - Resources:
                - Type: MASTER_EMAIL
                  Value: bill@amazon.com
                - Type: MASTER_NAME
                  Value: Org Master Account
                - Type: ORGANIZATION_FEATURE_SET
                  Value: ALL
              Type: ORGANIZATION
              Value: o-exampleorgid
            - Type: ACCOUNT
              Value: "222222222222"
          State: ACCEPTED
      properties:
        Handshake:
          $ref: "#/components/schemas/Handshake"
    AcceptHandshakeRequest:
      type: object
      required:
        - HandshakeId
      properties:
        HandshakeId:
          $ref: "#/components/schemas/HandshakeId"
    AccessDeniedException: {}
    AWSOrganizationsNotInUseException: {}
    HandshakeConstraintViolationException: {}
    HandshakeNotFoundException: {}
    InvalidHandshakeTransitionException: {}
    HandshakeAlreadyInStateException: {}
    InvalidInputException: {}
    ConcurrentModificationException: {}
    ServiceException: {}
    TooManyRequestsException: {}
    AccessDeniedForDependencyException: {}
    AttachPolicyRequest:
      type: object
      required:
        - PolicyId
        - TargetId
      properties:
        PolicyId:
          $ref: "#/components/schemas/PolicyId"
        TargetId:
          $ref: "#/components/schemas/PolicyTargetId"
    ConstraintViolationException: {}
    DuplicatePolicyAttachmentException: {}
    PolicyNotFoundException: {}
    PolicyTypeNotEnabledException: {}
    TargetNotFoundException: {}
    CancelHandshakeResponse:
      type: object
      example:
        Handshake:
          Action: INVITE
          Arn: arn:aws:organizations::111111111111:handshake/o-exampleorgid/invite/h-examplehandshakeid111
          ExpirationTimestamp: 20170228T1215Z
          Id: h-examplehandshakeid111
          Parties:
            - Id: o-exampleorgid
              Type: ORGANIZATION
            - Id: susan@example.com
              Type: EMAIL
          RequestedTimestamp: 20170214T1215Z
          Resources:
            - Resources:
                - Type: MASTER_EMAIL
                  Value: bill@example.com
                - Type: MASTER_NAME
                  Value: Master Account
                - Type: ORGANIZATION_FEATURE_SET
                  Value: CONSOLIDATED_BILLING
              Type: ORGANIZATION
              Value: o-exampleorgid
            - Type: ACCOUNT
              Value: "222222222222"
            - Type: NOTES
              Value: This is a request for Susan's account to join Bob's organization.
          State: CANCELED
      properties:
        Handshake:
          $ref: "#/components/schemas/Handshake"
    CancelHandshakeRequest:
      type: object
      required:
        - HandshakeId
      properties:
        HandshakeId:
          $ref: "#/components/schemas/HandshakeId"
    CreateAccountResponse:
      type: object
      example:
        CreateAccountStatus:
          Id: car-examplecreateaccountrequestid111
          State: IN_PROGRESS
      properties:
        CreateAccountStatus:
          $ref: "#/components/schemas/CreateAccountStatus"
    CreateAccountRequest:
      type: object
      required:
        - Email
        - AccountName
      properties:
        Email:
          $ref: "#/components/schemas/Email"
        AccountName:
          $ref: "#/components/schemas/AccountName"
        RoleName:
          $ref: "#/components/schemas/RoleName"
        IamUserAccessToBilling:
          $ref: "#/components/schemas/IAMUserAccessToBilling"
    FinalizingOrganizationException: {}
    UnsupportedAPIEndpointException: {}
    CreateGovCloudAccountResponse:
      type: object
      properties:
        CreateAccountStatus:
          $ref: "#/components/schemas/CreateAccountStatus"
    CreateGovCloudAccountRequest:
      type: object
      required:
        - Email
        - AccountName
      properties:
        Email:
          $ref: "#/components/schemas/Email"
        AccountName:
          $ref: "#/components/schemas/AccountName"
        RoleName:
          $ref: "#/components/schemas/RoleName"
        IamUserAccessToBilling:
          $ref: "#/components/schemas/IAMUserAccessToBilling"
    CreateOrganizationResponse:
      type: object
      example:
        Organization:
          Arn: arn:aws:organizations::111111111111:organization/o-exampleorgid
          AvailablePolicyTypes: []
          FeatureSet: CONSOLIDATED_BILLING
          Id: o-exampleorgid
          MasterAccountArn: arn:aws:organizations::111111111111:account/o-exampleorgid/111111111111
          MasterAccountEmail: bill@example.com
          MasterAccountId: "111111111111"
      properties:
        Organization:
          $ref: "#/components/schemas/Organization"
    CreateOrganizationRequest:
      type: object
      properties:
        FeatureSet:
          $ref: "#/components/schemas/OrganizationFeatureSet"
    AlreadyInOrganizationException: {}
    CreateOrganizationalUnitResponse:
      type: object
      example:
        OrganizationalUnit:
          Arn: arn:aws:organizations::111111111111:ou/o-exampleorgid/ou-examplerootid111-exampleouid111
          Id: ou-examplerootid111-exampleouid111
          Name: AccountingOU
      properties:
        OrganizationalUnit:
          $ref: "#/components/schemas/OrganizationalUnit"
    CreateOrganizationalUnitRequest:
      type: object
      required:
        - ParentId
        - Name
      properties:
        ParentId:
          $ref: "#/components/schemas/ParentId"
        Name:
          $ref: "#/components/schemas/OrganizationalUnitName"
    DuplicateOrganizationalUnitException: {}
    ParentNotFoundException: {}
    CreatePolicyResponse:
      type: object
      example:
        Policy:
          Content: '{"Version":"2012-10-17","Statement":{"Effect":"Allow","Action":"s3:*"}}'
          PolicySummary:
            Arn: arn:aws:organizations::111111111111:policy/o-exampleorgid/service_control_policy/p-examplepolicyid111
            Description: Allows delegation of all S3 actions
            Name: AllowAllS3Actions
            Type: SERVICE_CONTROL_POLICY
      properties:
        Policy:
          $ref: "#/components/schemas/Policy"
    CreatePolicyRequest:
      type: object
      required:
        - Content
        - Description
        - Name
        - Type
      properties:
        Content:
          $ref: "#/components/schemas/PolicyContent"
        Description:
          $ref: "#/components/schemas/PolicyDescription"
        Name:
          $ref: "#/components/schemas/PolicyName"
        Type:
          $ref: "#/components/schemas/PolicyType"
    DuplicatePolicyException: {}
    MalformedPolicyDocumentException: {}
    PolicyTypeNotAvailableForOrganizationException: {}
    DeclineHandshakeResponse:
      type: object
      example:
        Handshake:
          Action: INVITE
          Arn: arn:aws:organizations::111111111111:handshake/o-exampleorgid/invite/h-examplehandshakeid111
          ExpirationTimestamp: 2016-12-15T19:27:58Z
          Id: h-examplehandshakeid111
          Parties:
            - Id: "222222222222"
              Type: ACCOUNT
            - Id: o-exampleorgid
              Type: ORGANIZATION
          RequestedTimestamp: 2016-11-30T19:27:58Z
          Resources:
            - Resources:
                - Type: MASTER_EMAIL
                  Value: bill@example.com
                - Type: MASTER_NAME
                  Value: Master Account
              Type: ORGANIZATION
              Value: o-exampleorgid
            - Type: ACCOUNT
              Value: "222222222222"
            - Type: NOTES
              Value: This is an invitation to Susan's account to join the Bill's
                organization.
          State: DECLINED
      properties:
        Handshake:
          $ref: "#/components/schemas/Handshake"
    DeclineHandshakeRequest:
      type: object
      required:
        - HandshakeId
      properties:
        HandshakeId:
          $ref: "#/components/schemas/HandshakeId"
    OrganizationNotEmptyException: {}
    DeleteOrganizationalUnitRequest:
      type: object
      required:
        - OrganizationalUnitId
      properties:
        OrganizationalUnitId:
          $ref: "#/components/schemas/OrganizationalUnitId"
    OrganizationalUnitNotEmptyException: {}
    OrganizationalUnitNotFoundException: {}
    DeletePolicyRequest:
      type: object
      required:
        - PolicyId
      properties:
        PolicyId:
          $ref: "#/components/schemas/PolicyId"
    PolicyInUseException: {}
    DescribeAccountResponse:
      type: object
      example:
        Account:
          Arn: arn:aws:organizations::111111111111:account/o-exampleorgid/555555555555
          Email: anika@example.com
          Id: "555555555555"
          Name: Beta Account
      properties:
        Account:
          $ref: "#/components/schemas/Account"
    DescribeAccountRequest:
      type: object
      required:
        - AccountId
      properties:
        AccountId:
          $ref: "#/components/schemas/AccountId"
    AccountNotFoundException: {}
    DescribeCreateAccountStatusResponse:
      type: object
      example:
        CreateAccountStatus:
          AccountId: "333333333333"
          Id: car-exampleaccountcreationrequestid
          State: SUCCEEDED
      properties:
        CreateAccountStatus:
          $ref: "#/components/schemas/CreateAccountStatus"
    DescribeCreateAccountStatusRequest:
      type: object
      required:
        - CreateAccountRequestId
      properties:
        CreateAccountRequestId:
          $ref: "#/components/schemas/CreateAccountRequestId"
    CreateAccountStatusNotFoundException: {}
    DescribeHandshakeResponse:
      type: object
      example:
        Handshake:
          Action: INVITE
          Arn: arn:aws:organizations::111111111111:handshake/o-exampleorgid/invite/h-examplehandshakeid111
          ExpirationTimestamp: 2016-11-30T17:24:58.046Z
          Id: h-examplehandshakeid111
          Parties:
            - Id: o-exampleorgid
              Type: ORGANIZATION
            - Id: "333333333333"
              Type: ACCOUNT
          RequestedTimestamp: 2016-11-30T17:24:58.046Z
          Resources:
            - Resources:
                - Type: MASTER_EMAIL
                  Value: bill@example.com
                - Type: MASTER_NAME
                  Value: Master Account
              Type: ORGANIZATION
              Value: o-exampleorgid
            - Type: ACCOUNT
              Value: "333333333333"
          State: OPEN
      properties:
        Handshake:
          $ref: "#/components/schemas/Handshake"
    DescribeHandshakeRequest:
      type: object
      required:
        - HandshakeId
      properties:
        HandshakeId:
          $ref: "#/components/schemas/HandshakeId"
    DescribeOrganizationResponse:
      type: object
      example:
        Organization:
          Arn: arn:aws:organizations::111111111111:organization/o-exampleorgid
          AvailablePolicyTypes:
            - Status: ENABLED
              Type: SERVICE_CONTROL_POLICY
          FeatureSet: ALL
          Id: o-exampleorgid
          MasterAccountArn: arn:aws:organizations::111111111111:account/o-exampleorgid/111111111111
          MasterAccountEmail: bill@example.com
      properties:
        Organization:
          $ref: "#/components/schemas/Organization"
    DescribeOrganizationalUnitResponse:
      type: object
      example:
        OrganizationalUnit:
          Arn: arn:aws:organizations::111111111111:ou/o-exampleorgid/ou-examplerootid111-exampleouid111
          Id: ou-examplerootid111-exampleouid111
          Name: Accounting Group
      properties:
        OrganizationalUnit:
          $ref: "#/components/schemas/OrganizationalUnit"
    DescribeOrganizationalUnitRequest:
      type: object
      required:
        - OrganizationalUnitId
      properties:
        OrganizationalUnitId:
          $ref: "#/components/schemas/OrganizationalUnitId"
    DescribePolicyResponse:
      type: object
      example:
        Policy:
          Content: '{\n  \"Version\": \"2012-10-17\",\n  \"Statement\":
            [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\":
            \"*\",\n      \"Resource\": \"*\"\n    }\n  ]\n}'
          PolicySummary:
            Arn: arn:aws:organizations::111111111111:policy/o-exampleorgid/service_control_policy/p-examplepolicyid111
            AwsManaged: false
            Description: Enables admins to delegate S3 permissions
            Id: p-examplepolicyid111
            Name: AllowAllS3Actions
            Type: SERVICE_CONTROL_POLICY
      properties:
        Policy:
          $ref: "#/components/schemas/Policy"
    DescribePolicyRequest:
      type: object
      required:
        - PolicyId
      properties:
        PolicyId:
          $ref: "#/components/schemas/PolicyId"
    DetachPolicyRequest:
      type: object
      required:
        - PolicyId
        - TargetId
      properties:
        PolicyId:
          $ref: "#/components/schemas/PolicyId"
        TargetId:
          $ref: "#/components/schemas/PolicyTargetId"
    PolicyNotAttachedException: {}
    DisableAWSServiceAccessRequest:
      type: object
      required:
        - ServicePrincipal
      properties:
        ServicePrincipal:
          $ref: "#/components/schemas/ServicePrincipal"
    DisablePolicyTypeResponse:
      type: object
      example:
        Root:
          Arn: arn:aws:organizations::111111111111:root/o-exampleorgid/r-examplerootid111
          Id: r-examplerootid111
          Name: Root
          PolicyTypes: []
      properties:
        Root:
          $ref: "#/components/schemas/Root"
    DisablePolicyTypeRequest:
      type: object
      required:
        - RootId
        - PolicyType
      properties:
        RootId:
          $ref: "#/components/schemas/RootId"
        PolicyType:
          $ref: "#/components/schemas/PolicyType"
    RootNotFoundException: {}
    EnableAWSServiceAccessRequest:
      type: object
      required:
        - ServicePrincipal
      properties:
        ServicePrincipal:
          $ref: "#/components/schemas/ServicePrincipal"
    EnableAllFeaturesResponse:
      type: object
      example:
        Handshake:
          Action: ENABLE_ALL_FEATURES
          Arn: arn:aws:organizations::111111111111:handshake/o-exampleorgid/enable_all_features/h-examplehandshakeid111
          ExpirationTimestamp: 2017-02-28T09:35:40.05Z
          Id: h-examplehandshakeid111
          Parties:
            - Id: o-exampleorgid
              Type: ORGANIZATION
          RequestedTimestamp: 2017-02-13T09:35:40.05Z
          Resources:
            - Type: ORGANIZATION
              Value: o-exampleorgid
          State: REQUESTED
      properties:
        Handshake:
          $ref: "#/components/schemas/Handshake"
    EnableAllFeaturesRequest:
      type: object
      properties: {}
    EnablePolicyTypeResponse:
      type: object
      example:
        Root:
          Arn: arn:aws:organizations::111111111111:root/o-exampleorgid/r-examplerootid111
          Id: r-examplerootid111
          Name: Root
          PolicyTypes:
            - Status: ENABLED
              Type: SERVICE_CONTROL_POLICY
      properties:
        Root:
          $ref: "#/components/schemas/Root"
    EnablePolicyTypeRequest:
      type: object
      required:
        - RootId
        - PolicyType
      properties:
        RootId:
          $ref: "#/components/schemas/RootId"
        PolicyType:
          $ref: "#/components/schemas/PolicyType"
    PolicyTypeAlreadyEnabledException: {}
    InviteAccountToOrganizationResponse:
      type: object
      example:
        Handshake:
          Action: INVITE
          Arn: arn:aws:organizations::111111111111:handshake/o-exampleorgid/invite/h-examplehandshakeid111
          ExpirationTimestamp: 2017-02-16T09:36:05.02Z
          Id: h-examplehandshakeid111
          Parties:
            - Id: o-exampleorgid
              Type: ORGANIZATION
            - Id: juan@example.com
              Type: EMAIL
          RequestedTimestamp: 2017-02-01T09:36:05.02Z
          Resources:
            - Resources:
                - Type: MASTER_EMAIL
                  Value: bill@amazon.com
                - Type: MASTER_NAME
                  Value: Org Master Account
                - Type: ORGANIZATION_FEATURE_SET
                  Value: FULL
              Type: ORGANIZATION
              Value: o-exampleorgid
            - Type: EMAIL
              Value: juan@example.com
          State: OPEN
      properties:
        Handshake:
          $ref: "#/components/schemas/Handshake"
    InviteAccountToOrganizationRequest:
      type: object
      required:
        - Target
      properties:
        Target:
          $ref: "#/components/schemas/HandshakeParty"
        Notes:
          $ref: "#/components/schemas/HandshakeNotes"
    AccountOwnerNotVerifiedException: {}
    DuplicateHandshakeException: {}
    MasterCannotLeaveOrganizationException: {}
    ListAWSServiceAccessForOrganizationResponse:
      type: object
      properties:
        EnabledServicePrincipals:
          $ref: "#/components/schemas/EnabledServicePrincipals"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListAWSServiceAccessForOrganizationRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListAccountsResponse:
      type: object
      example:
        Accounts:
          - Arn: arn:aws:organizations::111111111111:account/o-exampleorgid/111111111111
            Email: bill@example.com
            Id: "111111111111"
            JoinedMethod: INVITED
            JoinedTimestamp: 20161215T193015Z
            Name: Master Account
            Status: ACTIVE
          - Arn: arn:aws:organizations::111111111111:account/o-exampleorgid/222222222222
            Email: alice@example.com
            Id: "222222222222"
            JoinedMethod: INVITED
            JoinedTimestamp: 20161215T210221Z
            Name: Developer Account
            Status: ACTIVE
          - Arn: arn:aws:organizations::111111111111:account/o-exampleorgid/333333333333
            Email: juan@example.com
            Id: "333333333333"
            JoinedMethod: INVITED
            JoinedTimestamp: 20161215T210347Z
            Name: Test Account
            Status: ACTIVE
          - Arn: arn:aws:organizations::111111111111:account/o-exampleorgid/444444444444
            Email: anika@example.com
            Id: "444444444444"
            JoinedMethod: INVITED
            JoinedTimestamp: 20161215T210332Z
            Name: Production Account
            Status: ACTIVE
      properties:
        Accounts:
          $ref: "#/components/schemas/Accounts"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListAccountsRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListAccountsForParentResponse:
      type: object
      example:
        Accounts:
          - Arn: arn:aws:organizations::111111111111:account/o-exampleorgid/333333333333
            Email: juan@example.com
            Id: "333333333333"
            JoinedMethod: INVITED
            JoinedTimestamp: 1481835795.536
            Name: Development Account
            Status: ACTIVE
          - Arn: arn:aws:organizations::111111111111:account/o-exampleorgid/444444444444
            Email: anika@example.com
            Id: "444444444444"
            JoinedMethod: INVITED
            JoinedTimestamp: 1481835812.143
            Name: Test Account
            Status: ACTIVE
      properties:
        Accounts:
          $ref: "#/components/schemas/Accounts"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListAccountsForParentRequest:
      type: object
      required:
        - ParentId
      properties:
        ParentId:
          $ref: "#/components/schemas/ParentId"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListChildrenResponse:
      type: object
      example:
        Children:
          - Id: ou-examplerootid111-exampleouid111
            Type: ORGANIZATIONAL_UNIT
          - Id: ou-examplerootid111-exampleouid222
            Type: ORGANIZATIONAL_UNIT
      properties:
        Children:
          $ref: "#/components/schemas/Children"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListChildrenRequest:
      type: object
      required:
        - ParentId
        - ChildType
      properties:
        ParentId:
          $ref: "#/components/schemas/ParentId"
        ChildType:
          $ref: "#/components/schemas/ChildType"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListCreateAccountStatusResponse:
      type: object
      example:
        CreateAccountStatuses:
          - AccountName: Production Account
            Id: car-exampleaccountcreationrequestid2
            RequestedTimestamp: 2017-01-15T13:45:23.01Z
            State: IN_PROGRESS
      properties:
        CreateAccountStatuses:
          $ref: "#/components/schemas/CreateAccountStatuses"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListCreateAccountStatusRequest:
      type: object
      properties:
        States:
          $ref: "#/components/schemas/CreateAccountStates"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListHandshakesForAccountResponse:
      type: object
      example:
        Handshakes:
          - Action: INVITE
            Arn: arn:aws:organizations::111111111111:handshake/o-exampleorgid/invite/h-examplehandshakeid111
            ExpirationTimestamp: 2017-01-28T14:35:23.3Z
            Id: h-examplehandshakeid111
            Parties:
              - Id: o-exampleorgid
                Type: ORGANIZATION
              - Id: juan@example.com
                Type: EMAIL
            RequestedTimestamp: 2017-01-13T14:35:23.3Z
            Resources:
              - Resources:
                  - Type: MASTER_EMAIL
                    Value: bill@amazon.com
                  - Type: MASTER_NAME
                    Value: Org Master Account
                  - Type: ORGANIZATION_FEATURE_SET
                    Value: FULL
                Type: ORGANIZATION
                Value: o-exampleorgid
              - Type: EMAIL
                Value: juan@example.com
            State: OPEN
      properties:
        Handshakes:
          $ref: "#/components/schemas/Handshakes"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListHandshakesForAccountRequest:
      type: object
      properties:
        Filter:
          $ref: "#/components/schemas/HandshakeFilter"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListHandshakesForOrganizationResponse:
      type: object
      example:
        Handshakes:
          - Action: INVITE
            Arn: arn:aws:organizations::111111111111:handshake/o-exampleorgid/invite/h-examplehandshakeid111
            ExpirationTimestamp: 2017-01-28T14:35:23.3Z
            Id: h-examplehandshakeid111
            Parties:
              - Id: o-exampleorgid
                Type: ORGANIZATION
              - Id: juan@example.com
                Type: EMAIL
            RequestedTimestamp: 2017-01-13T14:35:23.3Z
            Resources:
              - Resources:
                  - Type: MASTER_EMAIL
                    Value: bill@amazon.com
                  - Type: MASTER_NAME
                    Value: Org Master Account
                  - Type: ORGANIZATION_FEATURE_SET
                    Value: FULL
                Type: ORGANIZATION
                Value: o-exampleorgid
              - Type: EMAIL
                Value: juan@example.com
            State: OPEN
          - Action: INVITE
            Arn: arn:aws:organizations::111111111111:handshake/o-exampleorgid/invite/h-examplehandshakeid111
            ExpirationTimestamp: 2017-01-28T14:35:23.3Z
            Id: h-examplehandshakeid222
            Parties:
              - Id: o-exampleorgid
                Type: ORGANIZATION
              - Id: anika@example.com
                Type: EMAIL
            RequestedTimestamp: 2017-01-13T14:35:23.3Z
            Resources:
              - Resources:
                  - Type: MASTER_EMAIL
                    Value: bill@example.com
                  - Type: MASTER_NAME
                    Value: Master Account
                Type: ORGANIZATION
                Value: o-exampleorgid
              - Type: EMAIL
                Value: anika@example.com
              - Type: NOTES
                Value: This is an invitation to Anika's account to join Bill's
                  organization.
            State: ACCEPTED
      properties:
        Handshakes:
          $ref: "#/components/schemas/Handshakes"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListHandshakesForOrganizationRequest:
      type: object
      properties:
        Filter:
          $ref: "#/components/schemas/HandshakeFilter"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListOrganizationalUnitsForParentResponse:
      type: object
      example:
        OrganizationalUnits:
          - Arn: arn:aws:organizations::111111111111:ou/o-exampleorgid/ou-examlerootid111-exampleouid111
            Id: ou-examplerootid111-exampleouid111
            Name: Development
          - Arn: arn:aws:organizations::111111111111:ou/o-exampleorgid/ou-examlerootid111-exampleouid222
            Id: ou-examplerootid111-exampleouid222
            Name: Production
      properties:
        OrganizationalUnits:
          $ref: "#/components/schemas/OrganizationalUnits"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListOrganizationalUnitsForParentRequest:
      type: object
      required:
        - ParentId
      properties:
        ParentId:
          $ref: "#/components/schemas/ParentId"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListParentsResponse:
      type: object
      example:
        Parents:
          - Id: ou-examplerootid111-exampleouid111
            Type: ORGANIZATIONAL_UNIT
      properties:
        Parents:
          $ref: "#/components/schemas/Parents"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListParentsRequest:
      type: object
      required:
        - ChildId
      properties:
        ChildId:
          $ref: "#/components/schemas/ChildId"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ChildNotFoundException: {}
    ListPoliciesResponse:
      type: object
      example:
        Policies:
          - Arn: arn:aws:organizations::111111111111:policy/o-exampleorgid/service_control_policy/p-examplepolicyid111
            AwsManaged: false
            Description: Enables account admins to delegate permissions for any S3 actions
              to users and roles in their accounts.
            Id: p-examplepolicyid111
            Name: AllowAllS3Actions
            Type: SERVICE_CONTROL_POLICY
          - Arn: arn:aws:organizations::111111111111:policy/o-exampleorgid/service_control_policy/p-examplepolicyid222
            AwsManaged: false
            Description: Enables account admins to delegate permissions for any EC2 actions
              to users and roles in their accounts.
            Id: p-examplepolicyid222
            Name: AllowAllEC2Actions
            Type: SERVICE_CONTROL_POLICY
          - Arn: arn:aws:organizations::aws:policy/service_control_policy/p-FullAWSAccess
            AwsManaged: true
            Description: Allows access to every operation
            Id: p-FullAWSAccess
            Name: FullAWSAccess
            Type: SERVICE_CONTROL_POLICY
      properties:
        Policies:
          $ref: "#/components/schemas/Policies"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListPoliciesRequest:
      type: object
      required:
        - Filter
      properties:
        Filter:
          $ref: "#/components/schemas/PolicyType"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListPoliciesForTargetResponse:
      type: object
      example:
        Policies:
          - Arn: arn:aws:organizations::111111111111:policy/o-exampleorgid/service_control_policy/p-examplepolicyid222
            AwsManaged: false
            Description: Enables account admins to delegate permissions for any EC2 actions
              to users and roles in their accounts.
            Id: p-examplepolicyid222
            Name: AllowAllEC2Actions
            Type: SERVICE_CONTROL_POLICY
      properties:
        Policies:
          $ref: "#/components/schemas/Policies"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListPoliciesForTargetRequest:
      type: object
      required:
        - TargetId
        - Filter
      properties:
        TargetId:
          $ref: "#/components/schemas/PolicyTargetId"
        Filter:
          $ref: "#/components/schemas/PolicyType"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListRootsResponse:
      type: object
      example:
        Roots:
          - Arn: arn:aws:organizations::111111111111:root/o-exampleorgid/r-examplerootid111
            Id: r-examplerootid111
            Name: Root
            PolicyTypes:
              - Status: ENABLED
                Type: SERVICE_CONTROL_POLICY
      properties:
        Roots:
          $ref: "#/components/schemas/Roots"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListRootsRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: "#/components/schemas/Tags"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceId
      properties:
        ResourceId:
          $ref: "#/components/schemas/TaggableResourceId"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListTargetsForPolicyResponse:
      type: object
      example:
        Targets:
          - Arn: arn:aws:organizations::111111111111:root/o-exampleorgid/r-examplerootid111
            Name: Root
            TargetId: r-examplerootid111
            Type: ROOT
          - Arn: arn:aws:organizations::111111111111:account/o-exampleorgid/333333333333;
            Name: Developer Test Account
            TargetId: "333333333333"
            Type: ACCOUNT
          - Arn: arn:aws:organizations::111111111111:ou/o-exampleorgid/ou-examplerootid111-exampleouid111
            Name: Accounting
            TargetId: ou-examplerootid111-exampleouid111
            Type: ORGANIZATIONAL_UNIT
      properties:
        Targets:
          $ref: "#/components/schemas/PolicyTargets"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListTargetsForPolicyRequest:
      type: object
      required:
        - PolicyId
      properties:
        PolicyId:
          $ref: "#/components/schemas/PolicyId"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    MoveAccountRequest:
      type: object
      required:
        - AccountId
        - SourceParentId
        - DestinationParentId
      properties:
        AccountId:
          $ref: "#/components/schemas/AccountId"
        SourceParentId:
          $ref: "#/components/schemas/ParentId"
        DestinationParentId:
          $ref: "#/components/schemas/ParentId"
    SourceParentNotFoundException: {}
    DestinationParentNotFoundException: {}
    DuplicateAccountException: {}
    RemoveAccountFromOrganizationRequest:
      type: object
      required:
        - AccountId
      properties:
        AccountId:
          $ref: "#/components/schemas/AccountId"
    TagResourceRequest:
      type: object
      required:
        - ResourceId
        - Tags
      properties:
        ResourceId:
          $ref: "#/components/schemas/TaggableResourceId"
        Tags:
          $ref: "#/components/schemas/Tags"
    UntagResourceRequest:
      type: object
      required:
        - ResourceId
        - TagKeys
      properties:
        ResourceId:
          $ref: "#/components/schemas/TaggableResourceId"
        TagKeys:
          $ref: "#/components/schemas/TagKeys"
    UpdateOrganizationalUnitResponse:
      type: object
      example:
        OrganizationalUnit:
          Arn: arn:aws:organizations::111111111111:ou/o-exampleorgid/ou-examplerootid111-exampleouid111
          Id: ou-examplerootid111-exampleouid111
          Name: AccountingOU
      properties:
        OrganizationalUnit:
          $ref: "#/components/schemas/OrganizationalUnit"
    UpdateOrganizationalUnitRequest:
      type: object
      required:
        - OrganizationalUnitId
      properties:
        OrganizationalUnitId:
          $ref: "#/components/schemas/OrganizationalUnitId"
        Name:
          $ref: "#/components/schemas/OrganizationalUnitName"
    UpdatePolicyResponse:
      type: object
      example:
        Policy:
          Content: '{ \"Version\": \"2012-10-17\", \"Statement\": { \"Effect\":
            \"Allow\", \"Action\": \"s3:*\", \"Resource\": \"*\" } }'
          PolicySummary:
            Arn: arn:aws:organizations::111111111111:policy/o-exampleorgid/service_control_policy/p-examplepolicyid111
            AwsManaged: false
            Description: This description replaces the original.
            Id: p-examplepolicyid111
            Name: Renamed-Policy
            Type: SERVICE_CONTROL_POLICY
      properties:
        Policy:
          $ref: "#/components/schemas/Policy"
    UpdatePolicyRequest:
      type: object
      required:
        - PolicyId
      properties:
        PolicyId:
          $ref: "#/components/schemas/PolicyId"
        Name:
          $ref: "#/components/schemas/PolicyName"
        Description:
          $ref: "#/components/schemas/PolicyDescription"
        Content:
          $ref: "#/components/schemas/PolicyContent"
    HandshakeId:
      type: string
      pattern: ^h-[0-9a-z]{8,32}$
    Handshake:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/HandshakeId"
        Arn:
          $ref: "#/components/schemas/HandshakeArn"
        Parties:
          $ref: "#/components/schemas/HandshakeParties"
        State:
          $ref: "#/components/schemas/HandshakeState"
        RequestedTimestamp:
          $ref: "#/components/schemas/Timestamp"
        ExpirationTimestamp:
          $ref: "#/components/schemas/Timestamp"
        Action:
          $ref: "#/components/schemas/ActionType"
        Resources:
          $ref: "#/components/schemas/HandshakeResources"
      description: <p>Contains information that must be exchanged to securely establish a
        relationship between two accounts (an <i>originator</i> and a
        <i>recipient</i>). For example, when a master account (the originator)
        invites another account (the recipient) to join its organization, the
        two accounts exchange information as a series of handshake requests and
        responses.</p> <p> <b>Note:</b> Handshakes that are CANCELED, ACCEPTED,
        or DECLINED show up in lists for only 30 days after entering that state
        After that they are deleted.</p>
    AccountId:
      type: string
      pattern: ^\d{12}$
    AccountArn:
      type: string
      pattern: ^arn:aws:organizations::\d{12}:account\/o-[a-z0-9]{10,32}\/\d{12}
    Email:
      type: string
      pattern: "[^\\s@]+@[^\\s@]+\\.[^\\s@]+"
      minLength: 6
      maxLength: 64
      format: password
    AccountName:
      type: string
      pattern: "[\\u0020-\\u007E]+"
      minLength: 1
      maxLength: 50
      format: password
    AccountStatus:
      type: string
      enum:
        - ACTIVE
        - SUSPENDED
    AccountJoinedMethod:
      type: string
      enum:
        - INVITED
        - CREATED
    Timestamp:
      type: string
      format: date-time
    Account:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/AccountId"
        Arn:
          $ref: "#/components/schemas/AccountArn"
        Email:
          $ref: "#/components/schemas/Email"
        Name:
          $ref: "#/components/schemas/AccountName"
        Status:
          $ref: "#/components/schemas/AccountStatus"
        JoinedMethod:
          $ref: "#/components/schemas/AccountJoinedMethod"
        JoinedTimestamp:
          $ref: "#/components/schemas/Timestamp"
      description: Contains information about an AWS account that is a member of an
        organization.
    Accounts:
      type: array
      items:
        $ref: "#/components/schemas/Account"
    ActionType:
      type: string
      enum:
        - INVITE
        - ENABLE_ALL_FEATURES
        - APPROVE_ALL_FEATURES
        - ADD_ORGANIZATIONS_SERVICE_LINKED_ROLE
    PolicyId:
      type: string
      pattern: ^p-[0-9a-zA-Z_]{8,128}$
    PolicyTargetId:
      type: string
      pattern: ^(r-[0-9a-z]{4,32})|(\d{12})|(ou-[0-9a-z]{4,32}-[a-z0-9]{8,32})$
    AwsManagedPolicy:
      type: boolean
    ChildId:
      type: string
      pattern: ^(\d{12})|(ou-[0-9a-z]{4,32}-[a-z0-9]{8,32})$
    ChildType:
      type: string
      enum:
        - ACCOUNT
        - ORGANIZATIONAL_UNIT
    Child:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/ChildId"
        Type:
          $ref: "#/components/schemas/ChildType"
      description: Contains a list of child entities, either OUs or accounts.
    Children:
      type: array
      items:
        $ref: "#/components/schemas/Child"
    CreateAccountFailureReason:
      type: string
      enum:
        - ACCOUNT_LIMIT_EXCEEDED
        - EMAIL_ALREADY_EXISTS
        - INVALID_ADDRESS
        - INVALID_EMAIL
        - CONCURRENT_ACCOUNT_MODIFICATION
        - INTERNAL_FAILURE
    RoleName:
      type: string
      pattern: "[\\w+=,.@-]{1,64}"
    IAMUserAccessToBilling:
      type: string
      enum:
        - ALLOW
        - DENY
    CreateAccountRequestId:
      type: string
      pattern: ^car-[a-z0-9]{8,32}$
    CreateAccountStatus:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/CreateAccountRequestId"
        AccountName:
          $ref: "#/components/schemas/AccountName"
        State:
          $ref: "#/components/schemas/CreateAccountState"
        RequestedTimestamp:
          $ref: "#/components/schemas/Timestamp"
        CompletedTimestamp:
          $ref: "#/components/schemas/Timestamp"
        AccountId:
          $ref: "#/components/schemas/AccountId"
        GovCloudAccountId:
          $ref: "#/components/schemas/AccountId"
        FailureReason:
          $ref: "#/components/schemas/CreateAccountFailureReason"
      description: Contains the status about a <a>CreateAccount</a> or
        <a>CreateGovCloudAccount</a> request to create an AWS account or an AWS
        GovCloud (US) account in an organization.
    CreateAccountState:
      type: string
      enum:
        - IN_PROGRESS
        - SUCCEEDED
        - FAILED
    CreateAccountStates:
      type: array
      items:
        $ref: "#/components/schemas/CreateAccountState"
    CreateAccountStatuses:
      type: array
      items:
        $ref: "#/components/schemas/CreateAccountStatus"
    OrganizationFeatureSet:
      type: string
      enum:
        - ALL
        - CONSOLIDATED_BILLING
    Organization:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/OrganizationId"
        Arn:
          $ref: "#/components/schemas/OrganizationArn"
        FeatureSet:
          $ref: "#/components/schemas/OrganizationFeatureSet"
        MasterAccountArn:
          $ref: "#/components/schemas/AccountArn"
        MasterAccountId:
          $ref: "#/components/schemas/AccountId"
        MasterAccountEmail:
          $ref: "#/components/schemas/Email"
        AvailablePolicyTypes:
          $ref: "#/components/schemas/PolicyTypes"
      description: Contains details about an organization. An organization is a collection
        of accounts that are centrally managed together using consolidated
        billing, organized hierarchically with organizational units (OUs), and
        controlled with policies .
    ParentId:
      type: string
      pattern: ^(r-[0-9a-z]{4,32})|(ou-[0-9a-z]{4,32}-[a-z0-9]{8,32})$
    OrganizationalUnitName:
      type: string
      minLength: 1
      maxLength: 128
    OrganizationalUnit:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/OrganizationalUnitId"
        Arn:
          $ref: "#/components/schemas/OrganizationalUnitArn"
        Name:
          $ref: "#/components/schemas/OrganizationalUnitName"
      description: Contains details about an organizational unit (OU). An OU is a container
        of AWS accounts within a root of an organization. Policies that are
        attached to an OU apply to all accounts contained in that OU and in any
        child OUs.
    PolicyContent:
      type: string
      minLength: 1
      maxLength: 1000000
    PolicyDescription:
      type: string
      maxLength: 512
    PolicyName:
      type: string
      minLength: 1
      maxLength: 128
    PolicyType:
      type: string
      enum:
        - SERVICE_CONTROL_POLICY
    Policy:
      type: object
      properties:
        PolicySummary:
          $ref: "#/components/schemas/PolicySummary"
        Content:
          $ref: "#/components/schemas/PolicyContent"
      description: Contains rules to be applied to the affected accounts. Policies can be
        attached directly to accounts, or to roots and OUs to affect all
        accounts in those hierarchies.
    OrganizationalUnitId:
      type: string
      pattern: ^ou-[0-9a-z]{4,32}-[a-z0-9]{8,32}$
    ServicePrincipal:
      type: string
      pattern: "[\\w+=,.@-]*"
      minLength: 1
      maxLength: 128
    RootId:
      type: string
      pattern: ^r-[0-9a-z]{4,32}$
    Root:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/RootId"
        Arn:
          $ref: "#/components/schemas/RootArn"
        Name:
          $ref: "#/components/schemas/RootName"
        PolicyTypes:
          $ref: "#/components/schemas/PolicyTypes"
      description: Contains details about a root. A root is a top-level parent node in the
        hierarchy of an organization that can contain organizational units (OUs)
        and accounts. Every root contains every AWS account in the organization.
        Each root enables the accounts to be organized in a different way and to
        have different policy types enabled for use in that root.
    EnabledServicePrincipal:
      type: object
      properties:
        ServicePrincipal:
          $ref: "#/components/schemas/ServicePrincipal"
        DateEnabled:
          $ref: "#/components/schemas/Timestamp"
      description: A structure that contains details of a service principal that is enabled
        to integrate with AWS Organizations.
    EnabledServicePrincipals:
      type: array
      items:
        $ref: "#/components/schemas/EnabledServicePrincipal"
    GenericArn:
      type: string
      pattern: ^arn:aws:organizations::.+:.+
    HandshakeArn:
      type: string
      pattern: ^arn:aws:organizations::\d{12}:handshake\/o-[a-z0-9]{10,32}\/[a-z_]{1,32}\/h-[0-9a-z]{8,32}
    HandshakeParties:
      type: array
      items:
        $ref: "#/components/schemas/HandshakeParty"
    HandshakeState:
      type: string
      enum:
        - REQUESTED
        - OPEN
        - CANCELED
        - ACCEPTED
        - DECLINED
        - EXPIRED
    HandshakeResources:
      type: array
      items:
        $ref: "#/components/schemas/HandshakeResource"
    HandshakeFilter:
      type: object
      properties:
        ActionType:
          $ref: "#/components/schemas/ActionType"
        ParentHandshakeId:
          $ref: "#/components/schemas/HandshakeId"
      description: Specifies the criteria that are used to select the handshakes for the
        operation.
    HandshakeNotes:
      type: string
      maxLength: 1024
      format: password
    HandshakeParty:
      type: object
      required:
        - Id
        - Type
      properties:
        Id:
          $ref: "#/components/schemas/HandshakePartyId"
        Type:
          $ref: "#/components/schemas/HandshakePartyType"
      description: Identifies a participant in a handshake.
    HandshakePartyId:
      type: string
      minLength: 1
      maxLength: 64
      format: password
    HandshakePartyType:
      type: string
      enum:
        - ACCOUNT
        - ORGANIZATION
        - EMAIL
    HandshakeResourceValue:
      type: string
      format: password
    HandshakeResourceType:
      type: string
      enum:
        - ACCOUNT
        - ORGANIZATION
        - ORGANIZATION_FEATURE_SET
        - EMAIL
        - MASTER_EMAIL
        - MASTER_NAME
        - NOTES
        - PARENT_HANDSHAKE
    HandshakeResource:
      type: object
      properties:
        Value:
          $ref: "#/components/schemas/HandshakeResourceValue"
        Type:
          $ref: "#/components/schemas/HandshakeResourceType"
        Resources:
          $ref: "#/components/schemas/HandshakeResources"
      description: Contains additional data that is needed to process a handshake.
    Handshakes:
      type: array
      items:
        $ref: "#/components/schemas/Handshake"
    NextToken:
      type: string
    MaxResults:
      type: integer
      minimum: 1
      maximum: 20
    OrganizationalUnits:
      type: array
      items:
        $ref: "#/components/schemas/OrganizationalUnit"
    Parents:
      type: array
      items:
        $ref: "#/components/schemas/Parent"
    Policies:
      type: array
      items:
        $ref: "#/components/schemas/PolicySummary"
    Roots:
      type: array
      items:
        $ref: "#/components/schemas/Root"
    TaggableResourceId:
      type: string
      pattern: ^\d{12}$
    Tags:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    PolicyTargets:
      type: array
      items:
        $ref: "#/components/schemas/PolicyTargetSummary"
    OrganizationId:
      type: string
      pattern: ^o-[a-z0-9]{10,32}$
    OrganizationArn:
      type: string
      pattern: ^arn:aws:organizations::\d{12}:organization\/o-[a-z0-9]{10,32}
    PolicyTypes:
      type: array
      items:
        $ref: "#/components/schemas/PolicyTypeSummary"
    OrganizationalUnitArn:
      type: string
      pattern: ^arn:aws:organizations::\d{12}:ou\/o-[a-z0-9]{10,32}\/ou-[0-9a-z]{4,32}-[0-9a-z]{8,32}
    ParentType:
      type: string
      enum:
        - ROOT
        - ORGANIZATIONAL_UNIT
    Parent:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/ParentId"
        Type:
          $ref: "#/components/schemas/ParentType"
      description: Contains information about either a root or an organizational unit (OU)
        that can contain OUs or accounts in an organization.
    PolicySummary:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/PolicyId"
        Arn:
          $ref: "#/components/schemas/PolicyArn"
        Name:
          $ref: "#/components/schemas/PolicyName"
        Description:
          $ref: "#/components/schemas/PolicyDescription"
        Type:
          $ref: "#/components/schemas/PolicyType"
        AwsManaged:
          $ref: "#/components/schemas/AwsManagedPolicy"
      description: Contains information about a policy, but does not include the content.
        To see the content of a policy, see <a>DescribePolicy</a>.
    PolicyArn:
      type: string
      pattern: ^(arn:aws:organizations::\d{12}:policy\/o-[a-z0-9]{10,32}\/[0-9a-z_]+\/p-[0-9a-z]{10,32})|(arn:aws:organizations::aws:policy\/[0-9a-z_]+\/p-[0-9a-zA-Z_]{10,128})
    TargetName:
      type: string
      minLength: 1
      maxLength: 128
    TargetType:
      type: string
      enum:
        - ACCOUNT
        - ORGANIZATIONAL_UNIT
        - ROOT
    PolicyTargetSummary:
      type: object
      properties:
        TargetId:
          $ref: "#/components/schemas/PolicyTargetId"
        Arn:
          $ref: "#/components/schemas/GenericArn"
        Name:
          $ref: "#/components/schemas/TargetName"
        Type:
          $ref: "#/components/schemas/TargetType"
      description: Contains information about a root, OU, or account that a policy is
        attached to.
    PolicyTypeStatus:
      type: string
      enum:
        - ENABLED
        - PENDING_ENABLE
        - PENDING_DISABLE
    PolicyTypeSummary:
      type: object
      properties:
        Type:
          $ref: "#/components/schemas/PolicyType"
        Status:
          $ref: "#/components/schemas/PolicyTypeStatus"
      description: Contains information about a policy type and its status in the
        associated root.
    RootArn:
      type: string
      pattern: ^arn:aws:organizations::\d{12}:root\/o-[a-z0-9]{10,32}\/r-[0-9a-z]{4,32}
    RootName:
      type: string
      minLength: 1
      maxLength: 128
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
        Value:
          $ref: "#/components/schemas/TagValue"
      description: "A custom key-value pair associated with a resource such as an account
        within your organization. "
    TagKeys:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
