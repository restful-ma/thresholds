openapi: 3.0.0
info:
  title: ContainerRegistryManagementClient
  version: 2018-02-01-preview
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/containerregistry/resource-manager/Microsoft.ContainerRegistry/preview/2018-02-01-preview/containerregistry_build.json
      version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: containerregistry-containerregistry_build
  x-tags:
    - Azure
    - Microsoft
security:
  - azure_auth:
      - user_impersonation
paths:
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks":
    get:
      description: Lists all the build tasks for a specified container registry.
      operationId: BuildTasks_List
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/RegistryNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - description: The build task filter to apply on the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          examples:
            BuildTasks_List:
              value: alias%20eq%20'myalias'
        - description: $skipToken is supported on get list of build tasks, which provides
            the next page in the list of tasks.
          in: query
          name: $skipToken
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The request was successful; the request was well-formed and received
            properly.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildTaskListResult"
              examples:
                BuildTasks_List:
                  $ref: "#/components/examples/BuildTasks_List"
        default:
          description: Error response describing why the operation failed.
      tags:
        - BuildTasks
      x-ms-odata: "#/components/schemas/BuildTaskFilter"
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}":
    delete:
      description: Deletes a specified build task.
      operationId: BuildTasks_Delete
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/RegistryNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/BuildTaskNameParameter"
      responses:
        "200":
          description: The request was successful; the request was well-formed and received
            properly.
        "202":
          description: The request was successfully accepted; the operation will complete
            asynchronously.
        "204":
          description: No Content - the specified resource was not found.
        default:
          description: Error response describing why the operation failed.
      tags:
        - BuildTasks
      x-ms-long-running-operation: true
    get:
      description: Get the properties of a specified build task.
      operationId: BuildTasks_Get
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/RegistryNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/BuildTaskNameParameter"
      responses:
        "200":
          description: The request was successful; the request was well-formed and received
            properly.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildTask"
              examples:
                BuildTasks_Get:
                  $ref: "#/components/examples/BuildTasks_Get"
        default:
          description: Error response describing why the operation failed. If the registry
            doesn't exist, 404 (Not found) is returned.
      tags:
        - BuildTasks
    patch:
      description: Updates a build task with the specified parameters.
      operationId: BuildTasks_Update
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/RegistryNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/BuildTaskNameParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BuildTaskUpdateParameters"
        description: The parameters for updating a build task.
        required: true
      responses:
        "200":
          description: The request was successful; the request was well-formed and received
            properly.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildTask"
              examples:
                BuildTasks_Update:
                  $ref: "#/components/examples/BuildTasks_Update"
        "201":
          description: The request was successfully accepted; the operation will complete
            asynchronously. The provisioning state of the resource should
            indicate the current state of the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildTask"
              examples:
                BuildTasks_Update:
                  $ref: "#/components/examples/BuildTasks_Update"
        default:
          description: Error response describing why the operation failed. If the registry
            doesn't exist, 404 (Not found) is returned. If any of the input
            parameters is wrong, 400(Bad Request) is returned.
      tags:
        - BuildTasks
      x-ms-long-running-operation: true
    put:
      description: Creates a build task for a container registry with the specified
        parameters.
      operationId: BuildTasks_Create
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/RegistryNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/BuildTaskNameParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BuildTask"
        description: The parameters for creating a build task.
        required: true
      responses:
        "200":
          description: The request was successful; the request was well-formed and received
            properly.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildTask"
              examples:
                BuildTasks_Create:
                  $ref: "#/components/examples/BuildTasks_Create"
        "201":
          description: The request was successfully accepted; the operation will complete
            asynchronously. The provisioning state of the resource should
            indicate the current state of the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildTask"
              examples:
                BuildTasks_Create:
                  $ref: "#/components/examples/BuildTasks_Create"
        default:
          description: Error response describing why the operation failed. If the registry
            doesn't exist, 404 (Not found) is returned. If any of the input
            parameters is wrong, 400(Bad Request) is returned.
      tags:
        - BuildTasks
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}/listSourceRepositoryProperties":
    post:
      description: Get the source control properties for a build task.
      operationId: BuildTasks_ListSourceRepositoryProperties
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/RegistryNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/BuildTaskNameParameter"
      responses:
        "200":
          description: The request was successful; the request was well-formed and received
            properly.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SourceRepositoryProperties"
              examples:
                BuildTasks_ListSourceRepositoryProperties:
                  $ref: "#/components/examples/BuildTasks_ListSourceRepositoryPrope\
                    rties"
        default:
          description: Error response describing why the operation failed. If the registry
            doesn't exist, 404 (Not found) is returned.
      tags:
        - BuildTasks
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}/steps":
    get:
      description: List all the build steps for a given build task.
      operationId: BuildSteps_List
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/RegistryNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/BuildTaskNameParameter"
      responses:
        "200":
          description: The request was successful; the request was well-formed and received
            properly.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildStepList"
              examples:
                BuildSteps_List:
                  $ref: "#/components/examples/BuildSteps_List"
        default:
          description: Error response describing why the operation failed.
      tags:
        - BuildSteps
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}/steps/{stepName}":
    delete:
      description: Deletes a build step from the build task.
      operationId: BuildSteps_Delete
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/RegistryNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/BuildTaskNameParameter"
        - $ref: "#/components/parameters/StepNameParameter"
      responses:
        "200":
          description: The request was successful; the request was well-formed and received
            properly.
        "202":
          description: The request was successfully accepted; the operation will complete
            asynchronously.
        default:
          description: Error response describing why the operation failed.
      tags:
        - BuildSteps
      x-ms-long-running-operation: true
    get:
      description: Gets the build step for a build task.
      operationId: BuildSteps_Get
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/RegistryNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/BuildTaskNameParameter"
        - $ref: "#/components/parameters/StepNameParameter"
      responses:
        "200":
          description: The request was successful; the request was well-formed and received
            properly.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildStep"
              examples:
                BuildSteps_Get:
                  $ref: "#/components/examples/BuildSteps_Get"
        default:
          description: Error response describing why the operation failed. If the
            registry/step doesn't exist, 404 (Not found) is returned.
      tags:
        - BuildSteps
    patch:
      description: Updates a build step in a build task.
      operationId: BuildSteps_Update
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/RegistryNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/BuildTaskNameParameter"
        - $ref: "#/components/parameters/StepNameParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BuildStepUpdateParameters"
        description: The parameters for updating a build step.
        required: true
      responses:
        "200":
          description: The request was successful; the request was well-formed and received
            properly.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildStep"
              examples:
                BuildSteps_Update:
                  $ref: "#/components/examples/BuildSteps_Update"
        "201":
          description: The request was successfully accepted; the operation will complete
            asynchronously. The provisioning state of the resource should
            indicate the current state of the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildStep"
              examples:
                BuildSteps_Update:
                  $ref: "#/components/examples/BuildSteps_Update"
        default:
          description: Error response describing why the operation failed. If the
            registry/step doesn't exist, 404 (Not found) is returned.If any of
            the input parameters is wrong, 400(Bad Request) is returned.
      tags:
        - BuildSteps
      x-ms-long-running-operation: true
    put:
      description: Creates a build step for a build task.
      operationId: BuildSteps_Create
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/RegistryNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/BuildTaskNameParameter"
        - $ref: "#/components/parameters/StepNameParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BuildStep"
        description: The parameters for creating a build step.
        required: true
      responses:
        "200":
          description: The request was successful; the request was well-formed and received
            properly.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildStep"
              examples:
                BuildSteps_Create:
                  $ref: "#/components/examples/BuildSteps_Create"
        "201":
          description: The request was successfully accepted; the operation will complete
            asynchronously. The provisioning state of the resource should
            indicate the current state of the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildStep"
              examples:
                BuildSteps_Create:
                  $ref: "#/components/examples/BuildSteps_Create"
        default:
          description: Error response describing why the operation failed. If the registry
            doesn't exist, 404 (Not found) is returned.If any of the input
            parameters is wrong, 400(Bad Request) is returned.
      tags:
        - BuildSteps
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/buildTasks/{buildTaskName}/steps/{stepName}/listBuildArguments":
    post:
      description: List the build arguments for a step including the secret arguments.
      operationId: BuildSteps_ListBuildArguments
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/RegistryNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/BuildTaskNameParameter"
        - $ref: "#/components/parameters/StepNameParameter"
      responses:
        "200":
          description: The request was successful; the request was well-formed and received
            properly.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildArgumentList"
              examples:
                BuildSteps_ListBuildArguments:
                  $ref: "#/components/examples/BuildSteps_ListBuildArguments"
        default:
          description: Error response describing why the operation failed. If the
            registry/step doesn't exist, 404 (Not found) is returned.
      tags:
        - BuildSteps
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/builds":
    get:
      description: Gets all the builds for a registry.
      operationId: Builds_List
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/RegistryNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - description: The builds filter to apply on the operation.
          in: query
          name: $filter
          required: false
          schema:
            type: string
          examples:
            Builds_List:
              value: ""
        - description: $top is supported for get list of builds, which limits the maximum
            number of builds to return.
          in: query
          name: $top
          required: false
          schema:
            type: integer
            format: int32
          examples:
            Builds_List:
              value: 10
        - description: $skipToken is supported on get list of builds, which provides the
            next page in the list of builds.
          in: query
          name: $skipToken
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The request was successful; the request was well-formed and received
            properly.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildListResult"
              examples:
                Builds_List:
                  $ref: "#/components/examples/Builds_List"
        default:
          description: Error response describing why the operation failed.
      tags:
        - Builds
      x-ms-odata: "#/components/schemas/BuildFilter"
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/builds/{buildId}":
    get:
      description: Gets the detailed information for a given build.
      operationId: Builds_Get
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/RegistryNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - description: The build ID.
          in: path
          name: buildId
          required: true
          schema:
            type: string
          examples:
            Builds_Get:
              value: 0accec26-d6de-4757-8e74-d080f38eaaab
      responses:
        "200":
          description: The request was successful; the request was well-formed and received
            properly.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Build"
              examples:
                Builds_Get:
                  $ref: "#/components/examples/Builds_Get"
        default:
          description: Error response describing why the operation failed. If the
            registry/build doesn't exist, 404 (Not found) is returned.
      tags:
        - Builds
    patch:
      description: Patch the build properties.
      operationId: Builds_Update
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/RegistryNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - description: The build ID.
          in: path
          name: buildId
          required: true
          schema:
            type: string
          examples:
            Builds_Update:
              value: 0accec26-d6de-4757-8e74-d080f38eaaab
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BuildUpdateParameters"
        description: The build update properties.
        required: true
      responses:
        "200":
          description: The request was successful; the request was well-formed and received
            properly.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Build"
              examples:
                Builds_Update:
                  $ref: "#/components/examples/Builds_Update"
        "201":
          description: The request was successfully accepted; the operation will complete
            asynchronously. The provisioning state of the resource should
            indicate the current state of the resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Build"
              examples:
                Builds_Update:
                  $ref: "#/components/examples/Builds_Update"
        default:
          description: Error response describing why the operation failed. If the
            registry/build doesn't exist, 404 (Not found) is returned. If any of
            the input parameters is wrong, 400(Bad Request) is returned.
      tags:
        - Builds
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/builds/{buildId}/cancel":
    post:
      description: Cancel an existing build.
      operationId: Builds_Cancel
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/RegistryNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - description: The build ID.
          in: path
          name: buildId
          required: true
          schema:
            type: string
          examples:
            Builds_Cancel:
              value: 0accec26-d6de-4757-8e74-d080f38eaaab
      responses:
        "200":
          description: The request was successful; the request was well-formed and received
            properly.
        "202":
          description: The request was successfully accepted; the operation will complete
            asynchronously.
        default:
          description: Error response describing why the operation failed. If the
            registry/build doesn't exist, 404 (Not found) is returned.
      tags:
        - Builds
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/builds/{buildId}/getLogLink":
    post:
      description: Gets a link to download the build logs.
      operationId: Builds_GetLogLink
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/RegistryNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - description: The build ID.
          in: path
          name: buildId
          required: true
          schema:
            type: string
          examples:
            Builds_GetLogLink:
              value: 0accec26-d6de-4757-8e74-d080f38eaaab
      responses:
        "200":
          description: The request was successful; the request was well-formed and received
            properly.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildGetLogResult"
              examples:
                Builds_GetLogLink:
                  $ref: "#/components/examples/Builds_GetLogLink"
        default:
          description: Error response describing why the operation failed. If the
            registry/build doesn't exist, 404 (Not found) is returned.
      tags:
        - Builds
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/getBuildSourceUploadUrl":
    post:
      description: Get the upload location for the user to be able to upload the source.
      operationId: Registries_GetBuildSourceUploadUrl
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/RegistryNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: The request was successful; the request was well-formed and received
            properly.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SourceUploadDefinition"
              examples:
                Registries_GetBuildSourceUploadUrl:
                  $ref: "#/components/examples/Registries_GetBuildSourceUploadUrl"
        default:
          description: Error response describing why the operation failed. If the
            registry/build doesn't exist, 404 (Not found) is returned.
      tags:
        - Registries
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/queueBuild":
    post:
      description: Creates a new build based on the request parameters and add it to the
        build queue.
      operationId: Registries_QueueBuild
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/RegistryNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueueBuildRequest"
        description: The parameters of a build that needs to queued.
        required: true
      responses:
        "200":
          description: The request was successful; the request was well-formed and received
            properly.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Build"
              examples:
                Registries_QueueBuild:
                  $ref: "#/components/examples/Registries_QueueBuild"
        "202":
          description: The request was successfully accepted; the operation will complete
            asynchronously.
        default:
          description: Error response describing why the operation failed. If the
            registry/build doesn't exist, 404 (Not found) is returned. If any of
            the input parameters is wrong, 400(Bad Request) is returned.
      tags:
        - Registries
      x-ms-long-running-operation: true
servers:
  - url: https://management.azure.com/
components:
  examples:
    BuildTasks_List:
      value:
        value:
          - id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/buildTasks/myBuildTask
            location: eastus
            name: myBuildTask
            properties:
              alias: myalias
              creationDate: 2018-01-25T06:54:23.536Z
              platform:
                cpu: 2
                osType: Linux
              provisioningState: Succeeded
              sourceRepository:
                isCommitTriggerEnabled: true
                repositoryUrl: https://github.com/Azure/azure-rest-api-specs
                sourceControlType: Github
              status: Enabled
            tags:
              testkey: value
            type: Microsoft.ContainerRegistry/registries/buildTasks
    BuildTasks_Get:
      value:
        id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/buildTasks/myBuildTask
        location: eastus
        name: myBuildTask
        properties:
          alias: myalias
          creationDate: 2018-01-25T06:54:23.536Z
          platform:
            cpu: 2
            osType: Linux
          provisioningState: Succeeded
          sourceRepository:
            isCommitTriggerEnabled: true
            repositoryUrl: https://github.com/Azure/azure-rest-api-specs
            sourceControlType: Github
          status: Enabled
        tags:
          testkey: value
        type: Microsoft.ContainerRegistry/registries/buildTasks
    BuildTasks_Update:
      value:
        id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/buildTasks/myBuildTask
        location: eastus
        name: myBuildTask
        properties:
          alias: myalias
          creationDate: 2018-01-25T06:54:23.458Z
          platform:
            cpu: 2
            osType: Linux
          provisioningState: Updating
          sourceRepository:
            isCommitTriggerEnabled: false
            repositoryUrl: https://github.com/Azure/azure-rest-api-specs
            sourceControlType: Github
          status: Disabled
        tags:
          key: value
        type: Microsoft.ContainerRegistry/registries/buildTasks
    BuildTasks_Create:
      value:
        id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/buildTasks/myBuildTask
        location: eastus
        name: myBuildTask
        properties:
          alias: myalias
          creationDate: 2018-01-25T06:54:23.536Z
          platform:
            cpu: 2
            osType: Linux
          provisioningState: Creating
          sourceRepository:
            isCommitTriggerEnabled: true
            repositoryUrl: https://github.com/Azure/azure-rest-api-specs
            sourceControlType: Github
          status: Enabled
        tags:
          key: value
        type: Microsoft.ContainerRegistry/registries/buildTasks
    BuildTasks_ListSourceRepositoryProperties:
      value:
        isCommitTriggerEnabled: true
        repositoryUrl: https://github.com/Azure/azure-rest-api-specs
        sourceControlAuthProperties:
          scope: repo
          token: xxxxxx
          tokenType: OAuth
        sourceControlType: Github
    BuildSteps_List:
      value:
        value:
          - id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/buildTasks/myBuildTask/steps/myStep
            name: myStep
            properties:
              baseImageTrigger: Runtime
              branch: master
              buildArguments:
                - isSecret: false
                  name: mytestargument
                  type: DockerBuildArgument
                  value: mytestvalue
                - isSecret: true
                  name: mysecrettestargument
                  type: DockerBuildArgument
                  value: mysecrettestvalue
              contextPath: dockerfiles
              dockerFilePath: subfolder/Dockerfile
              imageNames:
                - azurerest:testtag
              isPushEnabled: true
              noCache: false
              provisioningState: Succeeded
              type: Docker
            type: Microsoft.ContainerRegistry/registries/buildTasks/steps
    BuildSteps_Get:
      value:
        id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/buildTasks/myBuildTask/steps/myStep
        name: myStep
        properties:
          baseImageTrigger: Runtime
          branch: master
          buildArguments:
            - isSecret: false
              name: mytestargument
              type: DockerBuildArgument
              value: mytestvalue
            - isSecret: true
              name: mysecrettestargument
              type: DockerBuildArgument
              value: mysecrettestvalue
          contextPath: dockerfiles
          dockerFilePath: subfolder/Dockerfile
          imageNames:
            - azurerest:testtag
          isPushEnabled: true
          noCache: false
          provisioningState: Succeeded
          type: Docker
        type: Microsoft.ContainerRegistry/registries/buildTasks/steps
    BuildSteps_Update:
      value:
        id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/buildTasks/myBuildTask/steps/myStep
        name: myStep
        properties:
          baseImageTrigger: Runtime
          branch: master
          buildArguments:
            - isSecret: false
              name: mytestargument
              type: DockerBuildArgument
              value: mytestvalue
            - isSecret: true
              name: mysecrettestargument
              type: DockerBuildArgument
              value: mysecrettestvalue
          contextPath: dockerfiles
          dockerFilePath: subfolder/Dockerfile
          imageNames:
            - azurerest:testtag
          isPushEnabled: true
          noCache: false
          provisioningState: Updating
          type: Docker
        type: Microsoft.ContainerRegistry/registries/buildTasks/steps
    BuildSteps_Create:
      value:
        id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/buildTasks/myBuildTask/steps/myStep
        name: myStep
        properties:
          baseImageTrigger: Runtime
          branch: master
          buildArguments:
            - isSecret: false
              name: mytestargument
              type: DockerBuildArgument
              value: mytestvalue
            - isSecret: true
              name: mysecrettestargument
              type: DockerBuildArgument
              value: mysecrettestvalue
          contextPath: dockerfiles
          dockerFilePath: subfolder/Dockerfile
          imageNames:
            - azurerest:testtag
          isPushEnabled: true
          noCache: false
          provisioningState: Updating
          type: Docker
        type: Microsoft.ContainerRegistry/registries/buildTasks/steps
    BuildSteps_ListBuildArguments:
      value:
        value:
          - isSecret: false
            name: mytestargument
            type: DockerBuildArgument
            value: mytestvalue
          - isSecret: true
            name: mysecrettestargument
            type: DockerBuildArgument
            value: mysecrettestvalue
    Builds_List:
      value:
        value:
          - id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/builds/0accec26-d6de-4757-8e74-d080f38eaaab
            name: 0accec26-d6de-4757-8e74-d080f38eaaab
            properties:
              buildId: 0accec26-d6de-4757-8e74-d080f38eaaab
              buildTask: myBuildTask
              buildType: AutoBuild
              createTime: 2018-01-25T05:13:51.618Z
              finishTime: 2018-01-25T06:13:51.618Z
              imageUpdateTrigger:
                id: c0c43143-da5d-41ef-b9e1-e7d749272e88
                images:
                  - digest: sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0
                    registry: registry.hub.docker.com
                    repository: mybaseimage
                    tag: latest
                timestamp: 2018-01-25T05:13:51.618Z
              isArchiveEnabled: true
              lastUpdatedTime: 2018-01-25T05:13:51.617Z
              outputImages:
                - digest: sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0
                  registry: myregistry.azurecr.io
                  repository: myimage
                  tag: latest
              platform:
                cpu: 2
                osType: Linux
              provisioningState: Succeeded
              startTime: 2018-01-25T05:50:51.618Z
              status: Succeeded
            type: Microsoft.ContainerRegistry/registries/builds
    Builds_Get:
      value:
        id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/builds/0accec26-d6de-4757-8e74-d080f38eaaab
        name: 0accec26-d6de-4757-8e74-d080f38eaaab
        properties:
          buildId: 0accec26-d6de-4757-8e74-d080f38eaaab
          buildTask: myBuildTask
          buildType: AutoBuild
          createTime: 2018-01-25T05:13:51.618Z
          finishTime: 2018-01-25T06:13:51.618Z
          imageUpdateTrigger:
            id: c0c43143-da5d-41ef-b9e1-e7d749272e88
            images:
              - digest: sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0
                registry: registry.hub.docker.com
                repository: mybaseimage
                tag: latest
            timestamp: 2018-01-25T05:13:51.618Z
          isArchiveEnabled: true
          lastUpdatedTime: 2018-01-25T05:13:51.617Z
          outputImages:
            - digest: sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0
              registry: myregistry.azurecr.io
              repository: myimage
              tag: latest
          platform:
            cpu: 2
            osType: Linux
          provisioningState: Succeeded
          startTime: 2018-01-25T05:50:51.618Z
          status: Succeeded
        type: Microsoft.ContainerRegistry/registries/builds
    Builds_Update:
      value:
        id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/builds/0accec26-d6de-4757-8e74-d080f38eaaab
        name: 0accec26-d6de-4757-8e74-d080f38eaaab
        properties:
          buildId: 0accec26-d6de-4757-8e74-d080f38eaaab
          buildTask: myBuildTask
          buildType: AutoBuild
          createTime: 2018-01-25T05:13:51.618Z
          finishTime: 2018-01-25T06:13:51.618Z
          imageUpdateTrigger:
            id: c0c43143-da5d-41ef-b9e1-e7d749272e88
            images:
              - digest: sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0
                registry: registry.hub.docker.com
                repository: mybaseimage
                tag: latest
            timestamp: 2018-01-25T05:13:51.618Z
          isArchiveEnabled: true
          lastUpdatedTime: 2018-01-25T05:13:51.617Z
          outputImages:
            - digest: sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0
              registry: myregistry.azurecr.io
              repository: myimage
              tag: latest
          platform:
            cpu: 2
            osType: Linux
          provisioningState: Updating
          startTime: 2018-01-25T05:50:51.618Z
          status: Succeeded
        type: Microsoft.ContainerRegistry/registries/builds
    Builds_GetLogLink:
      value:
        logLink: https://registrystorageaccount.blob.core.windows.net/sascontainer/logs/0accec26-d6de-4757-8e74-d080f38eaaab/rawtext.log?sv=2015-04-05&st=2015-04-29T22%3A18%3A26Z&se=2015-04-30T02%3A23%3A26Z&sr=b&sp=rw&sip=168.1.5.60-168.1.5.70&spr=https&sig=Z%2FRHIX5Xcg0Mq2rqI3OlWTjEg2tYkboXr1P9ZUXDtkk%3D
    Registries_GetBuildSourceUploadUrl:
      value:
        relativePath: source/201802130000/b52f12d8-c3d6-4d75-9107-220f0bfc681d.tar.gz
        uploadUrl: https://registrystorageaccount.blob.core.windows.net/registrycontainer/source/201802130000/b52f12d8-c3d6-4d75-9107-220f0bfc681d.tar.gz?sv=2015-04-05&st=2015-04-29T22%3A18%3A26Z&se=2015-04-30T02%3A23%3A26Z&sr=b&sp=rw&sip=168.1.5.60-168.1.5.70&spr=https&sig=Z%2FRHIX5Xcg0Mq2rqI3OlWTjEg2tYkboXr1P9ZUXDtkk%3D
    Registries_QueueBuild:
      value:
        id: /subscriptions/4385cf00-2d3a-425a-832f-f4285b1c9dce/resourceGroups/myResourceGroup/providers/Microsoft.ContainerRegistry/registries/myRegistry/builds/0accec26-d6de-4757-8e74-d080f38eaaab
        name: 0accec26-d6de-4757-8e74-d080f38eaaab
        properties:
          buildId: 0accec26-d6de-4757-8e74-d080f38eaaab
          lastUpdatedTime: 2018-01-25T05:13:51.617Z
          provisioningState: Succeeded
          status: Succeeded
        type: Microsoft.ContainerRegistry/registries/builds
  parameters:
    ApiVersionParameter:
      description: The client API version.
      in: query
      name: api-version
      required: true
      schema:
        type: string
      examples:
        BuildTasks_List:
          value: 2018-02-01-preview
        BuildTasks_Delete:
          value: 2018-02-01-preview
        BuildTasks_Get:
          value: 2018-02-01-preview
        BuildTasks_Update:
          value: 2018-02-01-preview
        BuildTasks_Create:
          value: 2018-02-01-preview
        BuildTasks_ListSourceRepositoryProperties:
          value: 2018-02-01-preview
        BuildSteps_List:
          value: 2018-02-01-preview
        BuildSteps_Delete:
          value: 2018-02-01-preview
        BuildSteps_Get:
          value: 2018-02-01-preview
        BuildSteps_Update:
          value: 2018-02-01-preview
        BuildSteps_Create:
          value: 2018-02-01-preview
        BuildSteps_ListBuildArguments:
          value: 2018-02-01-preview
        Builds_List:
          value: 2018-02-01-preview
        Builds_Get:
          value: 2018-02-01-preview
        Builds_Update:
          value: 2018-02-01-preview
        Builds_Cancel:
          value: 2018-02-01-preview
        Builds_GetLogLink:
          value: 2018-02-01-preview
        Registries_GetBuildSourceUploadUrl:
          value: 2018-02-01-preview
        Registries_QueueBuild:
          value: 2018-02-01-preview
    BuildTaskNameParameter:
      description: The name of the container registry build task.
      in: path
      name: buildTaskName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
        minLength: 5
        maxLength: 50
        pattern: ^[a-zA-Z0-9]*$
      examples:
        BuildTasks_Delete:
          value: myBuildTask
        BuildTasks_Get:
          value: myBuildTask
        BuildTasks_Update:
          value: myBuildTask
        BuildTasks_Create:
          value: myBuildTask
        BuildTasks_ListSourceRepositoryProperties:
          value: myBuildTask
        BuildSteps_List:
          value: myBuildTask
        BuildSteps_Delete:
          value: myBuildTask
        BuildSteps_Get:
          value: myBuildTask
        BuildSteps_Update:
          value: myBuildTask
        BuildSteps_Create:
          value: myBuildTask
        BuildSteps_ListBuildArguments:
          value: myBuildTask
    RegistryNameParameter:
      description: The name of the container registry.
      in: path
      name: registryName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
        minLength: 5
        maxLength: 50
        pattern: ^[a-zA-Z0-9]*$
      examples:
        BuildTasks_List:
          value: myRegistry
        BuildTasks_Delete:
          value: myRegistry
        BuildTasks_Get:
          value: myRegistry
        BuildTasks_Update:
          value: myRegistry
        BuildTasks_Create:
          value: myRegistry
        BuildTasks_ListSourceRepositoryProperties:
          value: myRegistry
        BuildSteps_List:
          value: myRegistry
        BuildSteps_Delete:
          value: myRegistry
        BuildSteps_Get:
          value: myRegistry
        BuildSteps_Update:
          value: myRegistry
        BuildSteps_Create:
          value: myRegistry
        BuildSteps_ListBuildArguments:
          value: myRegistry
        Builds_List:
          value: myRegistry
        Builds_Get:
          value: myRegistry
        Builds_Update:
          value: myRegistry
        Builds_Cancel:
          value: myRegistry
        Builds_GetLogLink:
          value: myRegistry
        Registries_GetBuildSourceUploadUrl:
          value: myRegistry
        Registries_QueueBuild:
          value: myRegistry
    ResourceGroupNameParameter:
      description: The name of the resource group to which the container registry belongs.
      in: path
      name: resourceGroupName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        BuildTasks_List:
          value: myResourceGroup
        BuildTasks_Delete:
          value: myResourceGroup
        BuildTasks_Get:
          value: myResourceGroup
        BuildTasks_Update:
          value: myResourceGroup
        BuildTasks_Create:
          value: myResourceGroup
        BuildTasks_ListSourceRepositoryProperties:
          value: myResourceGroup
        BuildSteps_List:
          value: myResourceGroup
        BuildSteps_Delete:
          value: myResourceGroup
        BuildSteps_Get:
          value: myResourceGroup
        BuildSteps_Update:
          value: myResourceGroup
        BuildSteps_Create:
          value: myResourceGroup
        BuildSteps_ListBuildArguments:
          value: myResourceGroup
        Builds_List:
          value: myResourceGroup
        Builds_Get:
          value: myResourceGroup
        Builds_Update:
          value: myResourceGroup
        Builds_Cancel:
          value: myResourceGroup
        Builds_GetLogLink:
          value: myResourceGroup
        Registries_GetBuildSourceUploadUrl:
          value: myResourceGroup
        Registries_QueueBuild:
          value: myResourceGroup
    StepNameParameter:
      description: The name of a build step for a container registry build task.
      in: path
      name: stepName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
        minLength: 5
        maxLength: 50
        pattern: ^[a-zA-Z0-9]*$
      examples:
        BuildSteps_Delete:
          value: myStep
        BuildSteps_Get:
          value: myStep
        BuildSteps_Update:
          value: myStep
        BuildSteps_Create:
          value: myStep
        BuildSteps_ListBuildArguments:
          value: myStep
    SubscriptionIdParameter:
      description: The Microsoft Azure subscription ID.
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
      examples:
        BuildTasks_List:
          value: 4385cf00-2d3a-425a-832f-f4285b1c9dce
        BuildTasks_Delete:
          value: 4385cf00-2d3a-425a-832f-f4285b1c9dce
        BuildTasks_Get:
          value: 4385cf00-2d3a-425a-832f-f4285b1c9dce
        BuildTasks_Update:
          value: 4385cf00-2d3a-425a-832f-f4285b1c9dce
        BuildTasks_Create:
          value: 4385cf00-2d3a-425a-832f-f4285b1c9dce
        BuildTasks_ListSourceRepositoryProperties:
          value: 4385cf00-2d3a-425a-832f-f4285b1c9dce
        BuildSteps_List:
          value: 4385cf00-2d3a-425a-832f-f4285b1c9dce
        BuildSteps_Delete:
          value: 4385cf00-2d3a-425a-832f-f4285b1c9dce
        BuildSteps_Get:
          value: 4385cf00-2d3a-425a-832f-f4285b1c9dce
        BuildSteps_Update:
          value: 4385cf00-2d3a-425a-832f-f4285b1c9dce
        BuildSteps_Create:
          value: 4385cf00-2d3a-425a-832f-f4285b1c9dce
        BuildSteps_ListBuildArguments:
          value: 4385cf00-2d3a-425a-832f-f4285b1c9dce
        Builds_List:
          value: 4385cf00-2d3a-425a-832f-f4285b1c9dce
        Builds_Get:
          value: 4385cf00-2d3a-425a-832f-f4285b1c9dce
        Builds_Update:
          value: 4385cf00-2d3a-425a-832f-f4285b1c9dce
        Builds_Cancel:
          value: 4385cf00-2d3a-425a-832f-f4285b1c9dce
        Builds_GetLogLink:
          value: 4385cf00-2d3a-425a-832f-f4285b1c9dce
        Registries_GetBuildSourceUploadUrl:
          value: 4385cf00-2d3a-425a-832f-f4285b1c9dce
        Registries_QueueBuild:
          value: 4385cf00-2d3a-425a-832f-f4285b1c9dce
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    BaseImageDependency:
      description: Properties that describe a base image dependency.
      properties:
        digest:
          description: The sha256-based digest of the image manifest.
          type: string
        registry:
          description: The registry login server.
          type: string
        repository:
          description: The repository name.
          type: string
        tag:
          description: The tag name.
          type: string
        type:
          description: The type of the base image dependency.
          enum:
            - BuildTime
            - RunTime
          type: string
          x-ms-enum:
            modelAsString: true
            name: BaseImageDependencyType
      type: object
    Build:
      allOf:
        - $ref: "#/components/schemas/ProxyResource"
      description: Build resource properties
      properties:
        properties:
          $ref: "#/components/schemas/BuildProperties"
      type: object
    BuildArgument:
      description: Properties of a build argument.
      properties:
        isSecret:
          default: false
          description: Flag to indicate whether the argument represents a secret and want
            to be removed from build logs.
          type: boolean
        name:
          description: The name of the argument.
          type: string
        type:
          description: The type of the argument.
          enum:
            - DockerBuildArgument
          type: string
          x-ms-enum:
            modelAsString: true
            name: BuildArgumentType
        value:
          description: The value of the argument.
          type: string
      required:
        - type
        - name
        - value
      type: object
    BuildArgumentList:
      description: The list of build arguments for a build step.
      properties:
        nextLink:
          description: The URI that can be used to request the next set of paged results.
          type: string
        value:
          description: The collection value.
          items:
            $ref: "#/components/schemas/BuildArgument"
          type: array
      type: object
    BuildFilter:
      description: Properties that are enabled for Odata querying.
      properties:
        buildId:
          description: The unique identifier for the build.
          type: string
        buildTaskName:
          description: The name of the build task that the build corresponds to.
          type: string
        buildType:
          description: The type of build.
          enum:
            - AutoBuild
            - QuickBuild
          type: string
          x-ms-enum:
            modelAsString: true
            name: BuildType
        createTime:
          description: The create time for a build.
          format: date-time
          type: string
        finishTime:
          description: The time the build finished.
          format: date-time
          type: string
        isArchiveEnabled:
          description: The value that indicates whether archiving is enabled or not.
          type: boolean
        outputImageManifests:
          description: The list of comma-separated image manifests that were generated from
            the build.
          type: string
        status:
          description: The current status of the build.
          enum:
            - Queued
            - Started
            - Running
            - Succeeded
            - Failed
            - Canceled
            - Error
            - Timeout
          type: string
          x-ms-enum:
            modelAsString: true
            name: BuildStatus
      type: object
    BuildGetLogResult:
      description: The result of get log link operation.
      properties:
        logLink:
          description: The link to logs for a azure container registry build.
          type: string
      type: object
    BuildListResult:
      description: Collection of builds.
      properties:
        nextLink:
          description: The URI that can be used to request the next set of paged results.
          type: string
        value:
          description: The collection value.
          items:
            $ref: "#/components/schemas/Build"
          type: array
      type: object
    BuildProperties:
      description: The properties for a build.
      properties:
        buildId:
          description: The unique identifier for the build.
          type: string
        buildTask:
          description: The build task with which the build was started.
          type: string
        buildType:
          description: The type of build.
          enum:
            - AutoBuild
            - QuickBuild
          type: string
          x-ms-enum:
            modelAsString: true
            name: BuildType
        createTime:
          description: The time the build was created.
          format: date-time
          type: string
        finishTime:
          description: The time the build finished.
          format: date-time
          type: string
        gitCommitTrigger:
          $ref: "#/components/schemas/GitCommitTrigger"
        imageUpdateTrigger:
          $ref: "#/components/schemas/ImageUpdateTrigger"
        isArchiveEnabled:
          default: false
          description: The value that indicates whether archiving is enabled or not.
          type: boolean
        lastUpdatedTime:
          description: The last updated time for the build.
          format: date-time
          type: string
        outputImages:
          description: The list of all images that were generated from the build.
          items:
            $ref: "#/components/schemas/ImageDescriptor"
          type: array
        platform:
          $ref: "#/components/schemas/PlatformProperties"
        provisioningState:
          description: The provisioning state of a build.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
        startTime:
          description: The time the build started.
          format: date-time
          type: string
        status:
          description: The current status of the build.
          enum:
            - Queued
            - Started
            - Running
            - Succeeded
            - Failed
            - Canceled
            - Error
            - Timeout
          type: string
          x-ms-enum:
            modelAsString: true
            name: BuildStatus
      type: object
    BuildStep:
      allOf:
        - $ref: "#/components/schemas/ProxyResource"
      description: Build step resource properties
      properties:
        properties:
          $ref: "#/components/schemas/BuildStepProperties"
      type: object
    BuildStepList:
      description: The collection of build items.
      properties:
        nextLink:
          description: The URI that can be used to request the next set of paged results.
          type: string
        value:
          description: The collection value.
          items:
            $ref: "#/components/schemas/BuildStep"
          type: array
      type: object
    BuildStepProperties:
      description: Base properties for any build step.
      discriminator:
        propertyName: type
      properties:
        provisioningState:
          description: The provisioning state of the build step.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
        type:
          description: The type of the step.
          enum:
            - Docker
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: BuildStepType
      type: object
    BuildStepPropertiesUpdateParameters:
      description: The properties for updating a build step.
      discriminator:
        propertyName: type
      properties:
        type:
          description: The type of the step.
          enum:
            - Docker
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: BuildStepType
      type: object
    BuildStepUpdateParameters:
      description: The parameters for updating a build step.
      properties:
        properties:
          $ref: "#/components/schemas/BuildStepPropertiesUpdateParameters"
        tags:
          additionalProperties:
            type: string
          description: The ARM resource tags.
          type: object
      type: object
    BuildTask:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: The build task that has the resource properties and all build items. The
        build task will have all information to schedule a build against it.
      properties:
        properties:
          $ref: "#/components/schemas/BuildTaskProperties"
      type: object
    BuildTaskBuildRequest:
      allOf:
        - $ref: "#/components/schemas/QueueBuildRequest"
      description: The queue build parameters based on a build task.
      properties:
        buildTaskName:
          description: The name of build task against which build has to be queued.
          type: string
      required:
        - type
        - buildTaskName
      type: object
      x-ms-discriminator-value: BuildTask
    BuildTaskFilter:
      description: The filter that can be used for listing build tasks.
      properties:
        alias:
          description: The alternative name for build task.
          type: string
      type: object
    BuildTaskListResult:
      description: The collection of build tasks.
      properties:
        nextLink:
          description: The URI that can be used to request the next set of paged results.
          type: string
        value:
          description: The collection value.
          items:
            $ref: "#/components/schemas/BuildTask"
          type: array
      type: object
    BuildTaskProperties:
      description: The properties of a build task.
      properties:
        alias:
          description: The alternative updatable name for a build task.
          type: string
        creationDate:
          description: The creation date of build task.
          format: date-time
          readOnly: true
          type: string
        platform:
          $ref: "#/components/schemas/PlatformProperties"
        provisioningState:
          description: The provisioning state of the build task.
          enum:
            - Creating
            - Updating
            - Deleting
            - Succeeded
            - Failed
            - Canceled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ProvisioningState
        sourceRepository:
          $ref: "#/components/schemas/SourceRepositoryProperties"
        status:
          description: The current status of build task.
          enum:
            - Disabled
            - Enabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: BuildTaskStatus
        timeout:
          default: 3600
          description: Build timeout in seconds.
          format: int32
          maximum: 28800
          minimum: 300
          type: integer
      required:
        - alias
        - sourceRepository
        - platform
      type: object
    BuildTaskPropertiesUpdateParameters:
      description: The properties for updating a build task.
      properties:
        alias:
          description: The alternative updatable name for a build task.
          type: string
        platform:
          $ref: "#/components/schemas/PlatformProperties"
        sourceRepository:
          $ref: "#/components/schemas/SourceRepositoryUpdateParameters"
        status:
          description: The current status of build task.
          enum:
            - Disabled
            - Enabled
          type: string
          x-ms-enum:
            modelAsString: true
            name: BuildTaskStatus
        timeout:
          description: Build timeout in seconds.
          format: int32
          maximum: 28800
          minimum: 300
          type: integer
      type: object
    BuildTaskUpdateParameters:
      description: The parameters for updating a build task.
      properties:
        properties:
          $ref: "#/components/schemas/BuildTaskPropertiesUpdateParameters"
        tags:
          additionalProperties:
            type: string
          description: The ARM resource tags.
          type: object
      type: object
    BuildUpdateParameters:
      description: The set of build properties that can be updated.
      properties:
        isArchiveEnabled:
          description: The value that indicates whether archiving is enabled or not.
          type: boolean
      type: object
    DockerBuildStep:
      allOf:
        - $ref: "#/components/schemas/BuildStepProperties"
      description: The Docker build step.
      properties:
        baseImageDependencies:
          description: List of base image dependencies for a step.
          items:
            $ref: "#/components/schemas/BaseImageDependency"
          readOnly: true
          type: array
        baseImageTrigger:
          description: The type of the auto trigger for base image dependency updates.
          enum:
            - All
            - Runtime
            - None
          type: string
          x-ms-enum:
            modelAsString: true
            name: BaseImageTriggerType
        branch:
          description: The repository branch name.
          type: string
        buildArguments:
          description: The custom arguments for building this build step.
          items:
            $ref: "#/components/schemas/BuildArgument"
          type: array
        contextPath:
          description: The relative context path for a docker build in the source.
          type: string
        dockerFilePath:
          description: The Docker file path relative to the source control root.
          type: string
        imageNames:
          description: The fully qualified image names including the repository and tag.
          items:
            type: string
          type: array
        isPushEnabled:
          default: true
          description: The value of this property indicates whether the image built should
            be pushed to the registry or not.
          type: boolean
        noCache:
          default: false
          description: The value of this property indicates whether the image cache is
            enabled or not.
          type: boolean
      type: object
      x-ms-discriminator-value: Docker
    DockerBuildStepUpdateParameters:
      allOf:
        - $ref: "#/components/schemas/BuildStepPropertiesUpdateParameters"
      description: The properties for updating a docker build step.
      properties:
        baseImageTrigger:
          description: The type of the auto trigger for base image dependency updates.
          enum:
            - All
            - Runtime
            - None
          type: string
          x-ms-enum:
            modelAsString: true
            name: BaseImageTriggerType
        branch:
          description: The repository branch name.
          type: string
        buildArguments:
          description: The custom arguments for building this build step.
          items:
            $ref: "#/components/schemas/BuildArgument"
          type: array
        contextPath:
          description: The relative context path for a docker build in the source.
          type: string
        dockerFilePath:
          description: The Docker file path relative to the source control root.
          type: string
        imageNames:
          description: The fully qualified image names including the repository and tag.
          items:
            type: string
          type: array
        isPushEnabled:
          description: The value of this property indicates whether the image built should
            be pushed to the registry or not.
          type: boolean
        noCache:
          description: The value of this property indicates whether the image cache is
            enabled or not.
          type: boolean
      required:
        - type
      type: object
      x-ms-discriminator-value: Docker
    GitCommitTrigger:
      description: The git commit trigger that caused a build.
      properties:
        branchName:
          description: The branch name in the repository.
          type: string
        commitId:
          description: The unique ID that identifies a commit.
          type: string
        id:
          description: The unique ID of the trigger.
          type: string
        providerType:
          description: The source control provider type.
          type: string
        repositoryUrl:
          description: The repository URL.
          type: string
      type: object
    ImageDescriptor:
      description: Properties for a registry image.
      properties:
        digest:
          description: The sha256-based digest of the image manifest.
          type: string
        registry:
          description: The registry login server.
          type: string
        repository:
          description: The repository name.
          type: string
        tag:
          description: The tag name.
          type: string
      type: object
    ImageUpdateTrigger:
      description: The image update trigger that caused a build.
      properties:
        id:
          description: The unique ID of the trigger.
          type: string
        images:
          description: The list of image updates that caused the build.
          items:
            $ref: "#/components/schemas/ImageDescriptor"
          type: array
        timestamp:
          description: The timestamp when the image update happened.
          format: date-time
          type: string
      type: object
    PlatformProperties:
      description: The platform properties against which the build has to happen.
      properties:
        cpu:
          description: The CPU configuration in terms of number of cores required for the
            build.
          format: int32
          type: integer
        osType:
          description: The operating system type required for the build.
          enum:
            - Windows
            - Linux
          type: string
          x-ms-enum:
            modelAsString: true
            name: OsType
      required:
        - osType
      type: object
    ProxyResource:
      description: The resource model definition for a ARM proxy resource. It will have
        everything other than required location and tags.
      properties:
        id:
          description: The resource ID.
          readOnly: true
          type: string
        name:
          description: The name of the resource.
          readOnly: true
          type: string
        type:
          description: The type of the resource.
          readOnly: true
          type: string
      x-ms-azure-resource: true
    QueueBuildRequest:
      description: The queue build request parameters.
      discriminator:
        propertyName: type
      properties:
        type:
          description: The type of the build request.
          readOnly: true
          type: string
      type: object
    QuickBuildRequest:
      allOf:
        - $ref: "#/components/schemas/QueueBuildRequest"
      description: The queue build request parameters for a quick build.
      properties:
        buildArguments:
          description: The collection of build arguments to be used.
          items:
            $ref: "#/components/schemas/BuildArgument"
          type: array
        dockerFilePath:
          description: The Docker file path relative to the source location.
          type: string
        imageNames:
          description: The fully qualified image names including the repository and tag.
          items:
            type: string
          type: array
        isPushEnabled:
          default: true
          description: The value of this property indicates whether the image built should
            be pushed to the registry or not.
          type: boolean
        noCache:
          default: false
          description: The value of this property indicates whether the image cache is
            enabled or not.
          type: boolean
        platform:
          $ref: "#/components/schemas/PlatformProperties"
        sourceLocation:
          description: "The URL(absolute or relative) of the source that needs to be built.
            For Docker build, it can be an URL to a tar or github repository as
            supported by Docker.\r

            If it is relative URL, the relative path should be
            obtained from calling getSourceUploadUrl API."
          type: string
        timeout:
          default: 3600
          description: Build timeout in seconds.
          format: int32
          maximum: 28800
          minimum: 300
          type: integer
      required:
        - type
        - sourceLocation
        - platform
        - dockerFilePath
      type: object
      x-ms-discriminator-value: QuickBuild
    Resource:
      description: An Azure resource.
      properties:
        id:
          description: The resource ID.
          readOnly: true
          type: string
        location:
          description: The location of the resource. This cannot be changed after the
            resource is created.
          type: string
          x-ms-mutability:
            - read
            - create
        name:
          description: The name of the resource.
          readOnly: true
          type: string
        tags:
          additionalProperties:
            type: string
          description: The tags of the resource.
          type: object
          x-ms-mutability:
            - read
            - create
            - update
        type:
          description: The type of the resource.
          readOnly: true
          type: string
      required:
        - location
      x-ms-azure-resource: true
    SourceControlAuthInfo:
      description: The authorization properties for accessing the source code repository.
      properties:
        expiresIn:
          description: Time in seconds that the token remains valid
          format: int32
          type: integer
        refreshToken:
          description: The refresh token used to refresh the access token.
          type: string
        scope:
          description: The scope of the access token.
          type: string
        token:
          description: The access token used to access the source control provider.
          type: string
        tokenType:
          description: The type of Auth token.
          enum:
            - PAT
            - OAuth
          type: string
          x-ms-enum:
            modelAsString: true
            name: TokenType
      required:
        - token
      type: object
    SourceRepositoryProperties:
      description: The properties of the source code repository.
      properties:
        isCommitTriggerEnabled:
          default: false
          description: The value of this property indicates whether the source control
            commit trigger is enabled or not.
          type: boolean
        repositoryUrl:
          description: The full URL to the source code repository
          type: string
        sourceControlAuthProperties:
          $ref: "#/components/schemas/SourceControlAuthInfo"
        sourceControlType:
          description: The type of source control service.
          enum:
            - Github
            - VisualStudioTeamService
          type: string
          x-ms-enum:
            modelAsString: true
            name: SourceControlType
      required:
        - sourceControlType
        - repositoryUrl
      type: object
    SourceRepositoryUpdateParameters:
      description: The properties for updating the source code repository configuration.
      properties:
        isCommitTriggerEnabled:
          description: The value of this property indicates whether the source control
            commit trigger is enabled or not.
          type: boolean
        sourceControlAuthProperties:
          $ref: "#/components/schemas/SourceControlAuthInfo"
      type: object
    SourceUploadDefinition:
      description: The properties of a response to source upload request.
      properties:
        relativePath:
          description: The relative path to the source. This is used to submit the
            subsequent queue build request.
          type: string
        uploadUrl:
          description: The URL where the client can upload the source.
          type: string
      type: object
