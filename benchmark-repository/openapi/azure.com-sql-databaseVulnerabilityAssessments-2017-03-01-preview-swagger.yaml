openapi: 3.0.0
info:
  description: The Azure SQL Database management API provides a RESTful set of web APIs
    that interact with Azure SQL Database services to manage your databases. The
    API enables users to create, retrieve, update, and delete databases,
    servers, and other entities.
  title: SqlManagementClient
  version: 2017-03-01-preview
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/sql/resource-manager/Microsoft.Sql/preview/2017-03-01-preview/databaseVulnerabilityAssessments.json
      version: "2.0"
  x-providerName: azure.com
  x-serviceName: sql-databaseVulnerabilityAssessments
  x-tags:
    - Azure
    - Microsoft
paths:
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/vulnerabilityAssessments":
    get:
      description: Lists the vulnerability assessment policies associated with a database.
      operationId: DatabaseVulnerabilityAssessments_ListByDatabase
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - $ref: "#/components/parameters/ServerNameParameter"
        - description: The name of the database for which the vulnerability assessment
            policies are defined.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
          examples:
            Get the database's vulnerability assessment policies:
              value: testdb
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved the database vulnerability assessment
            policies.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseVulnerabilityAssessmentListResu\
                  lt"
              examples:
                Get the database's vulnerability assessment policies:
                  $ref: "#/components/examples/Get_the_database_s_vulnerability_ass\
                    essment_policies"
        default:
          description: >-
            *** Error Responses: ***

             * 400 InvalidStorageAccountName - The provided storage account is not valid or does not exist.

             * 400 InvalidStorageAccountCredentials - The provided storage account shared access signature or account storage key is not valid.

             * 400 VulnerabilityAssessmentInvalidPolicy - Vulnerability Assessment settings don't exist or invalid storage specified in settings. 

             * 400 DatabaseVulnerabilityAssessmentMissingStorageContainerPath - Storage container path must be provided if it isn't set in server level policy

             * 400 VulnerabilityAssessmentDatawarehouseDatabaseIsDeactivated - Could not execute Vulnerability Assessment operation because the database is paused. Please resume it.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 SourceDatabaseNotFound - The source database does not exist.

             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.

             * 409 DatabaseVulnerabilityAssessmentScanIsAlreadyInProgress - Vulnerability Assessment scan is already in progress.

             * 500 DatabaseIsUnavailable - Loading failed. Please try again later.
      tags:
        - DatabaseVulnerabilityAssessments
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}":
    delete:
      description: Removes the database's vulnerability assessment.
      operationId: DatabaseVulnerabilityAssessments_Delete
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - $ref: "#/components/parameters/ServerNameParameter"
        - description: The name of the database for which the vulnerability assessment is
            defined.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
          examples:
            Remove a database's vulnerability assessment:
              value: testdb
        - description: The name of the vulnerability assessment.
          in: path
          name: vulnerabilityAssessmentName
          required: true
          x-ms-enum:
            modelAsString: true
            name: VulnerabilityAssessmentName
          schema:
            type: string
            enum:
              - default
          examples:
            Remove a database's vulnerability assessment:
              value: default
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully removed the database vulnerability assessment.
        default:
          description: >-
            *** Error Responses: ***

             * 400 InvalidStorageAccountName - The provided storage account is not valid or does not exist.

             * 400 InvalidStorageAccountCredentials - The provided storage account shared access signature or account storage key is not valid.

             * 400 DatabaseVulnerabilityAssessmentMissingStorageContainerPath - Storage container path must be provided if it isn't set in server level policy

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 SourceDatabaseNotFound - The source database does not exist.

             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.

             * 500 DatabaseIsUnavailable - Loading failed. Please try again later.
      tags:
        - DatabaseVulnerabilityAssessments
    get:
      description: Gets the database's vulnerability assessment.
      operationId: DatabaseVulnerabilityAssessments_Get
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - $ref: "#/components/parameters/ServerNameParameter"
        - description: The name of the database for which the vulnerability assessment is
            defined.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
          examples:
            Get a database's vulnerability assessment:
              value: testdb
        - description: The name of the vulnerability assessment.
          in: path
          name: vulnerabilityAssessmentName
          required: true
          x-ms-enum:
            modelAsString: true
            name: VulnerabilityAssessmentName
          schema:
            type: string
            enum:
              - default
          examples:
            Get a database's vulnerability assessment:
              value: default
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved the database vulnerability assessment.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseVulnerabilityAssessment"
              examples:
                Get a database's vulnerability assessment:
                  $ref: "#/components/examples/Get_a_database_s_vulnerability_asses\
                    sment"
        default:
          description: >-
            *** Error Responses: ***

             * 400 InvalidStorageAccountName - The provided storage account is not valid or does not exist.

             * 400 InvalidStorageAccountCredentials - The provided storage account shared access signature or account storage key is not valid.

             * 400 DatabaseVulnerabilityAssessmentMissingStorageContainerPath - Storage container path must be provided if it isn't set in server level policy

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 SourceDatabaseNotFound - The source database does not exist.

             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.

             * 500 DatabaseIsUnavailable - Loading failed. Please try again later.
      tags:
        - DatabaseVulnerabilityAssessments
    put:
      description: Creates or updates the database's vulnerability assessment.
      operationId: DatabaseVulnerabilityAssessments_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - $ref: "#/components/parameters/ServerNameParameter"
        - description: The name of the database for which the vulnerability assessment is
            defined.
          in: path
          name: databaseName
          required: true
          schema:
            type: string
          examples:
            Create a database's vulnerability assessment with all parameters:
              value: testdb
            "Create a database's vulnerability assessment with minimal parameters, when storageAccountAccessKey is specified":
              value: testdb
            "Create a database's vulnerability assessment with minimal parameters, when storageContainerSasKey is specified":
              value: testdb
        - description: The name of the vulnerability assessment.
          in: path
          name: vulnerabilityAssessmentName
          required: true
          x-ms-enum:
            modelAsString: true
            name: VulnerabilityAssessmentName
          schema:
            type: string
            enum:
              - default
          examples:
            Create a database's vulnerability assessment with all parameters:
              value: default
            "Create a database's vulnerability assessment with minimal parameters, when storageAccountAccessKey is specified":
              value: default
            "Create a database's vulnerability assessment with minimal parameters, when storageContainerSasKey is specified":
              value: default
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabaseVulnerabilityAssessment"
        description: The requested resource.
        required: true
      responses:
        "200":
          description: Successfully set the vulnerability assessment.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseVulnerabilityAssessment"
              examples:
                Create a database's vulnerability assessment with all parameters:
                  $ref: "#/components/examples/Create_a_database_s_vulnerability_as\
                    sessment_with_all_parameters"
                "Create a database's vulnerability assessment with minimal parameters, when storageAccountAccessKey is specified":
                  $ref: "#/components/examples/Create_a_database_s_vulnerability_as\
                    sessment_with_minimal_parameters_when_storageAccountAccessK\
                    ey_is_specified"
                "Create a database's vulnerability assessment with minimal parameters, when storageContainerSasKey is specified":
                  $ref: "#/components/examples/Create_a_database_s_vulnerability_as\
                    sessment_with_minimal_parameters_when_storageContainerSasKe\
                    y_is_specified"
        "201":
          description: Successfully created the vulnerability assessment.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseVulnerabilityAssessment"
              examples:
                Create a database's vulnerability assessment with all parameters:
                  $ref: "#/components/examples/Create_a_database_s_vulnerability_as\
                    sessment_with_all_parameters"
                "Create a database's vulnerability assessment with minimal parameters, when storageAccountAccessKey is specified":
                  $ref: "#/components/examples/Create_a_database_s_vulnerability_as\
                    sessment_with_minimal_parameters_when_storageAccountAccessK\
                    ey_is_specified"
                "Create a database's vulnerability assessment with minimal parameters, when storageContainerSasKey is specified":
                  $ref: "#/components/examples/Create_a_database_s_vulnerability_as\
                    sessment_with_minimal_parameters_when_storageContainerSasKe\
                    y_is_specified"
        default:
          description: >-
            *** Error Responses: ***

             * 400 InvalidStorageAccountName - The provided storage account is not valid or does not exist.

             * 400 InvalidStorageAccountCredentials - The provided storage account shared access signature or account storage key is not valid.

             * 400 DatabaseVulnerabilityAssessmentMissingStorageContainerPath - Storage container path must be provided if it isn't set in server level policy

             * 400 InvalidVulnerabilityAssessmentOperationRequest - The vulnerability assessment operation request does not exist or has no properties object.

             * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 SourceDatabaseNotFound - The source database does not exist.

             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.

             * 500 DatabaseIsUnavailable - Loading failed. Please try again later.
      tags:
        - DatabaseVulnerabilityAssessments
servers:
  - url: https://management.azure.com
components:
  examples:
    Get_the_database_s_vulnerability_assessment_policies:
      value:
        value:
          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/vulnerabilityaseessmenttest-4799/providers/Microsoft.Sql/servers/vulnerabilityaseessmenttest-6440/databases/testdb/vulnerabilityAssessments/default
            name: default
            properties:
              recurringScans:
                emailSubscriptionAdmins: true
                emails:
                  - email1@mail.com
                  - email2@mail.com
                isEnabled: true
              storageContainerPath: https://myStorage.blob.core.windows.net/vulnerability-assessment/
            type: Microsoft.Sql/servers/databases/vulnerabilityAssessments
    Get_a_database_s_vulnerability_assessment:
      value:
        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/vulnerabilityaseessmenttest-4799/providers/Microsoft.Sql/servers/vulnerabilityaseessmenttest-6440/databases/testdb/vulnerabilityAssessments/default
        name: default
        properties:
          recurringScans:
            emailSubscriptionAdmins: true
            emails:
              - email1@mail.com
              - email2@mail.com
            isEnabled: true
          storageContainerPath: https://myStorage.blob.core.windows.net/vulnerability-assessment/
        type: Microsoft.Sql/servers/databases/vulnerabilityAssessments
    Create_a_database_s_vulnerability_assessment_with_all_parameters:
      value:
        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/vulnerabilityaseessmenttest-4799/providers/Microsoft.Sql/servers/vulnerabilityaseessmenttest-6440/databases/testdb/vulnerabilityAssessments/default
        name: default
        properties:
          recurringScans:
            emailSubscriptionAdmins: true
            emails:
              - email1@mail.com
              - email2@mail.com
            isEnabled: true
          storageContainerPath: https://myStorage.blob.core.windows.net/vulnerability-assessment/
        type: Microsoft.Sql/servers/databases/vulnerabilityAssessments
    Create_a_database_s_vulnerability_assessment_with_minimal_parameters_when_storageAccountAccessKey_is_specified:
      value:
        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/vulnerabilityaseessmenttest-4799/providers/Microsoft.Sql/servers/vulnerabilityaseessmenttest-6440/databases/testdb/vulnerabilityAssessments/default
        name: default
        properties:
          recurringScans:
            emailSubscriptionAdmins: false
            emails: []
            isEnabled: true
          storageContainerPath: https://myStorage.blob.core.windows.net/vulnerability-assessment/
        type: Microsoft.Sql/servers/databases/vulnerabilityAssessments
    Create_a_database_s_vulnerability_assessment_with_minimal_parameters_when_storageContainerSasKey_is_specified:
      value:
        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/vulnerabilityaseessmenttest-4799/providers/Microsoft.Sql/servers/vulnerabilityaseessmenttest-6440/databases/testdb/vulnerabilityAssessments/default
        name: default
        properties:
          recurringScans:
            emailSubscriptionAdmins: false
            emails: []
            isEnabled: true
          storageContainerPath: https://myStorage.blob.core.windows.net/vulnerability-assessment/
        type: Microsoft.Sql/servers/databases/vulnerabilityAssessments
  parameters:
    ApiVersionParameter:
      description: The API version to use for the request.
      in: query
      name: api-version
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
      examples:
        Get the database's vulnerability assessment policies:
          value: 2018-06-01-preview
        Remove a database's vulnerability assessment:
          value: 2017-03-01-preview
        Get a database's vulnerability assessment:
          value: 2017-03-01-preview
        Create a database's vulnerability assessment with all parameters:
          value: 2017-03-01-preview
        "Create a database's vulnerability assessment with minimal parameters, when storageAccountAccessKey is specified":
          value: 2017-03-01-preview
        "Create a database's vulnerability assessment with minimal parameters, when storageContainerSasKey is specified":
          value: 2017-03-01-preview
    BlobAuditingPolicyNameParameter:
      description: The name of the blob auditing policy.
      in: path
      name: blobAuditingPolicyName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
        enum:
          - default
    DatabaseNameParameter:
      description: The name of the database.
      in: path
      name: databaseName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ManagedInstanceNameParameter:
      description: The name of the managed instance.
      in: path
      name: managedInstanceName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceGroupParameter:
      description: The name of the resource group that contains the resource. You can
        obtain this value from the Azure Resource Manager API or the portal.
      in: path
      name: resourceGroupName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        Get the database's vulnerability assessment policies:
          value: vulnerabilityaseessmenttest-4799
        Remove a database's vulnerability assessment:
          value: vulnerabilityaseessmenttest-4799
        Get a database's vulnerability assessment:
          value: vulnerabilityaseessmenttest-4799
        Create a database's vulnerability assessment with all parameters:
          value: vulnerabilityaseessmenttest-4799
        "Create a database's vulnerability assessment with minimal parameters, when storageAccountAccessKey is specified":
          value: vulnerabilityaseessmenttest-4799
        "Create a database's vulnerability assessment with minimal parameters, when storageContainerSasKey is specified":
          value: vulnerabilityaseessmenttest-4799
    ServerNameParameter:
      description: The name of the server.
      in: path
      name: serverName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        Get the database's vulnerability assessment policies:
          value: vulnerabilityaseessmenttest-6440
        Remove a database's vulnerability assessment:
          value: vulnerabilityaseessmenttest-6440
        Get a database's vulnerability assessment:
          value: vulnerabilityaseessmenttest-6440
        Create a database's vulnerability assessment with all parameters:
          value: vulnerabilityaseessmenttest-6440
        "Create a database's vulnerability assessment with minimal parameters, when storageAccountAccessKey is specified":
          value: vulnerabilityaseessmenttest-6440
        "Create a database's vulnerability assessment with minimal parameters, when storageContainerSasKey is specified":
          value: vulnerabilityaseessmenttest-6440
    SqlVirtualMachineContainerNameParameter:
      description: The name of the SqlVirtualMachineContainer.
      in: path
      name: sqlVirtualMachineContainerName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SqlVirtualMachineInstanceNameParameter:
      description: The name of the SqlVirtualMachineInstance.
      in: path
      name: sqlVirtualMachineInstanceName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      description: The subscription ID that identifies an Azure subscription.
      in: path
      name: subscriptionId
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
      examples:
        Get the database's vulnerability assessment policies:
          value: 00000000-1111-2222-3333-444444444444
        Remove a database's vulnerability assessment:
          value: 00000000-1111-2222-3333-444444444444
        Get a database's vulnerability assessment:
          value: 00000000-1111-2222-3333-444444444444
        Create a database's vulnerability assessment with all parameters:
          value: 00000000-1111-2222-3333-444444444444
        "Create a database's vulnerability assessment with minimal parameters, when storageAccountAccessKey is specified":
          value: 00000000-1111-2222-3333-444444444444
        "Create a database's vulnerability assessment with minimal parameters, when storageContainerSasKey is specified":
          value: 00000000-1111-2222-3333-444444444444
    VirtualClusterNameParameter:
      description: The name of the virtual cluster.
      in: path
      name: virtualClusterName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    DatabaseVulnerabilityAssessment:
      allOf:
        - allOf:
            - description: ARM resource.
              properties:
                id:
                  description: Resource ID.
                  readOnly: true
                  type: string
                name:
                  description: Resource name.
                  readOnly: true
                  type: string
                type:
                  description: Resource type.
                  readOnly: true
                  type: string
              type: object
              x-ms-azure-resource: true
          description: ARM proxy resource.
          properties: {}
          type: object
      description: A database vulnerability assessment.
      properties:
        properties:
          $ref: "#/components/schemas/DatabaseVulnerabilityAssessmentProperties"
      type: object
    DatabaseVulnerabilityAssessmentListResult:
      description: A list of the database's vulnerability assessments.
      properties:
        nextLink:
          description: Link to retrieve next page of results.
          readOnly: true
          type: string
        value:
          description: Array of results.
          items:
            $ref: "#/components/schemas/DatabaseVulnerabilityAssessment"
          readOnly: true
          type: array
      type: object
    DatabaseVulnerabilityAssessmentProperties:
      description: Properties of a database Vulnerability Assessment.
      properties:
        recurringScans:
          $ref: "#/components/schemas/VulnerabilityAssessmentRecurringScansProperti\
            es"
        storageAccountAccessKey:
          description: Specifies the identifier key of the storage account for
            vulnerability assessment scan results. If 'StorageContainerSasKey'
            isn't specified, storageAccountAccessKey is required.
          type: string
          x-ms-mutability:
            - create
            - update
        storageContainerPath:
          description: A blob storage container path to hold the scan results (e.g.
            https://myStorage.blob.core.windows.net/VaScans/).  It is required
            if server level vulnerability assessment policy doesn't set
          type: string
          x-ms-mutability:
            - create
            - update
        storageContainerSasKey:
          description: A shared access signature (SAS Key) that has write access to the
            blob container specified in 'storageContainerPath' parameter. If
            'storageAccountAccessKey' isn't specified, StorageContainerSasKey is
            required.
          type: string
          x-ms-mutability:
            - create
            - update
      type: object
    VulnerabilityAssessmentRecurringScansProperties:
      description: Properties of a Vulnerability Assessment recurring scans.
      properties:
        emailSubscriptionAdmins:
          default: true
          description: Specifies that the schedule scan notification will be is sent to the
            subscription administrators.
          type: boolean
        emails:
          description: Specifies an array of e-mail addresses to which the scan
            notification is sent.
          items:
            type: string
          type: array
        isEnabled:
          description: Recurring scans state.
          type: boolean
      type: object
