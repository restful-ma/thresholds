openapi: 3.0.0
info:
  version: 2016-11-28
  x-release: v4
  title: Amazon Lightsail
  description: <p>Amazon Lightsail is the easiest way to get started with AWS for
    developers who just need virtual private servers. Lightsail includes
    everything you need to launch your project quickly - a virtual machine, a
    managed database, SSD-based storage, data transfer, DNS management, and a
    static IP - for a low, predictable price. You manage those Lightsail servers
    through the Lightsail console or by using the API or command-line interface
    (CLI).</p> <p>For more information about Lightsail concepts and tasks, see
    the <a href="https://lightsail.aws.amazon.com/ls/docs/all">Lightsail Dev
    Guide</a>.</p> <p>To use the Lightsail API or the CLI, you will need to use
    AWS Identity and Access Management (IAM) to generate access keys. For
    details about how to set this up, see the <a
    href="http://lightsail.aws.amazon.com/ls/docs/how-to/article/lightsail-how-to-set-up-access-keys-to-use-sdk-api-cli">Lightsail
    Dev Guide</a>.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: lightsail
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/lightsail-2016-11-28.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/lightsail/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=Lightsail_20161128.AllocateStaticIp:
    post:
      operationId: AllocateStaticIp
      description: Allocates a static IP address.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllocateStaticIpResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.AllocateStaticIp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AllocateStaticIpRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.AttachDisk:
    post:
      operationId: AttachDisk
      description: <p>Attaches a block storage disk to a running or stopped Lightsail
        instance and exposes it to the instance with the specified disk
        name.</p> <p>The <code>attach disk</code> operation supports tag-based
        access control via resource tags applied to the resource identified by
        <code>disk name</code>. For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttachDiskResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.AttachDisk
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttachDiskRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.AttachInstancesToLoadBalancer:
    post:
      operationId: AttachInstancesToLoadBalancer
      description: <p>Attaches one or more Lightsail instances to a load balancer.</p>
        <p>After some time, the instances are attached to the load balancer and
        the health check status is available.</p> <p>The <code>attach instances
        to load balancer</code> operation supports tag-based access control via
        resource tags applied to the resource identified by <code>load balancer
        name</code>. For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttachInstancesToLoadBalancerResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.AttachInstancesToLoadBalancer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttachInstancesToLoadBalancerRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.AttachLoadBalancerTlsCertificate:
    post:
      operationId: AttachLoadBalancerTlsCertificate
      description: <p>Attaches a Transport Layer Security (TLS) certificate to your load
        balancer. TLS is just an updated, more secure version of Secure Socket
        Layer (SSL).</p> <p>Once you create and validate your certificate, you
        can attach it to your load balancer. You can also use this API to rotate
        the certificates on your account. Use the <code>attach load balancer tls
        certificate</code> operation with the non-attached certificate, and it
        will replace the existing one and become the attached certificate.</p>
        <p>The <code>attach load balancer tls certificate</code> operation
        supports tag-based access control via resource tags applied to the
        resource identified by <code>load balancer name</code>. For more
        information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttachLoadBalancerTlsCertificateResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.AttachLoadBalancerTlsCertificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttachLoadBalancerTlsCertificateRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.AttachStaticIp:
    post:
      operationId: AttachStaticIp
      description: Attaches a static IP address to a specific Amazon Lightsail instance.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttachStaticIpResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.AttachStaticIp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttachStaticIpRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.CloseInstancePublicPorts:
    post:
      operationId: CloseInstancePublicPorts
      description: <p>Closes the public ports on a specific Amazon Lightsail instance.</p>
        <p>The <code>close instance public ports</code> operation supports
        tag-based access control via resource tags applied to the resource
        identified by <code>instance name</code>. For more information, see the
        <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloseInstancePublicPortsResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CloseInstancePublicPorts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CloseInstancePublicPortsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.CopySnapshot:
    post:
      operationId: CopySnapshot
      description: <p>Copies a manual instance or disk snapshot as another manual snapshot,
        or copies an automatic instance or disk snapshot as a manual snapshot.
        This operation can also be used to copy a manual or automatic snapshot
        of an instance or a disk from one AWS Region to another in Amazon
        Lightsail.</p> <p>When copying a <i>manual snapshot</i>, be sure to
        define the <code>source region</code>, <code>source snapshot
        name</code>, and <code>target snapshot name</code> parameters.</p>
        <p>When copying an <i>automatic snapshot</i>, be sure to define the
        <code>source region</code>, <code>source resource name</code>,
        <code>target snapshot name</code>, and either the <code>restore
        date</code> or the <code>use latest restorable auto snapshot</code>
        parameters.</p> <note> <p>Database snapshots cannot be copied at this
        time.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CopySnapshotResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CopySnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CopySnapshotRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.CreateCloudFormationStack:
    post:
      operationId: CreateCloudFormationStack
      description: <p>Creates an AWS CloudFormation stack, which creates a new Amazon EC2
        instance from an exported Amazon Lightsail snapshot. This operation
        results in a CloudFormation stack record that can be used to track the
        AWS CloudFormation stack created. Use the <code>get cloud formation
        stack records</code> operation to get a list of the CloudFormation
        stacks created.</p> <important> <p>Wait until after your new Amazon EC2
        instance is created before running the <code>create cloud formation
        stack</code> operation again with the same export snapshot record.</p>
        </important>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCloudFormationStackResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateCloudFormationStack
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCloudFormationStackRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.CreateDisk:
    post:
      operationId: CreateDisk
      description: <p>Creates a block storage disk that can be attached to an Amazon
        Lightsail instance in the same Availability Zone (e.g.,
        <code>us-east-2a</code>).</p> <p>The <code>create disk</code> operation
        supports tag-based access control via request tags. For more
        information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDiskResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateDisk
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDiskRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.CreateDiskFromSnapshot:
    post:
      operationId: CreateDiskFromSnapshot
      description: <p>Creates a block storage disk from a manual or automatic snapshot of a
        disk. The resulting disk can be attached to an Amazon Lightsail instance
        in the same Availability Zone (e.g., <code>us-east-2a</code>).</p>
        <p>The <code>create disk from snapshot</code> operation supports
        tag-based access control via request tags and resource tags applied to
        the resource identified by <code>disk snapshot name</code>. For more
        information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDiskFromSnapshotResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateDiskFromSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDiskFromSnapshotRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.CreateDiskSnapshot:
    post:
      operationId: CreateDiskSnapshot
      description: <p>Creates a snapshot of a block storage disk. You can use snapshots for
        backups, to make copies of disks, and to save data before shutting down
        a Lightsail instance.</p> <p>You can take a snapshot of an attached disk
        that is in use; however, snapshots only capture data that has been
        written to your disk at the time the snapshot command is issued. This
        may exclude any data that has been cached by any applications or the
        operating system. If you can pause any file systems on the disk long
        enough to take a snapshot, your snapshot should be complete.
        Nevertheless, if you cannot pause all file writes to the disk, you
        should unmount the disk from within the Lightsail instance, issue the
        create disk snapshot command, and then remount the disk to ensure a
        consistent and complete snapshot. You may remount and use your disk
        while the snapshot status is pending.</p> <p>You can also use this
        operation to create a snapshot of an instance's system volume. You might
        want to do this, for example, to recover data from the system volume of
        a botched instance or to create a backup of the system volume like you
        would for a block storage disk. To create a snapshot of a system volume,
        just define the <code>instance name</code> parameter when issuing the
        snapshot command, and a snapshot of the defined instance's system volume
        will be created. After the snapshot is available, you can create a block
        storage disk from the snapshot and attach it to a running instance to
        access the data on the disk.</p> <p>The <code>create disk
        snapshot</code> operation supports tag-based access control via request
        tags. For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDiskSnapshotResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateDiskSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDiskSnapshotRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.CreateDomain:
    post:
      operationId: CreateDomain
      description: <p>Creates a domain resource for the specified domain (e.g.,
        example.com).</p> <p>The <code>create domain</code> operation supports
        tag-based access control via request tags. For more information, see the
        <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDomainResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDomainRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.CreateDomainEntry:
    post:
      operationId: CreateDomainEntry
      description: '<p>Creates one of the following entry records associated with the
        domain: Address (A), canonical name (CNAME), mail exchanger (MX), name
        server (NS), start of authority (SOA), service locator (SRV), or text
        (TXT).</p> <p>The <code>create domain entry</code> operation supports
        tag-based access control via resource tags applied to the resource
        identified by <code>domain name</code>. For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDomainEntryResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateDomainEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDomainEntryRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.CreateInstanceSnapshot:
    post:
      operationId: CreateInstanceSnapshot
      description: <p>Creates a snapshot of a specific virtual private server, or
        <i>instance</i>. You can use a snapshot to create a new instance that is
        based on that snapshot.</p> <p>The <code>create instance snapshot</code>
        operation supports tag-based access control via request tags. For more
        information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateInstanceSnapshotResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateInstanceSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateInstanceSnapshotRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.CreateInstances:
    post:
      operationId: CreateInstances
      description: <p>Creates one or more Amazon Lightsail instances.</p> <p>The
        <code>create instances</code> operation supports tag-based access
        control via request tags. For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateInstancesResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateInstances
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateInstancesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.CreateInstancesFromSnapshot:
    post:
      operationId: CreateInstancesFromSnapshot
      description: <p>Creates one or more new instances from a manual or automatic snapshot
        of an instance.</p> <p>The <code>create instances from snapshot</code>
        operation supports tag-based access control via request tags and
        resource tags applied to the resource identified by <code>instance
        snapshot name</code>. For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateInstancesFromSnapshotResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateInstancesFromSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateInstancesFromSnapshotRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.CreateKeyPair:
    post:
      operationId: CreateKeyPair
      description: <p>Creates an SSH key pair.</p> <p>The <code>create key pair</code>
        operation supports tag-based access control via request tags. For more
        information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateKeyPairResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateKeyPair
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateKeyPairRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.CreateLoadBalancer:
    post:
      operationId: CreateLoadBalancer
      description: <p>Creates a Lightsail load balancer. To learn more about deciding
        whether to load balance your application, see <a
        href="https://lightsail.aws.amazon.com/ls/docs/how-to/article/configure-lightsail-instances-for-load-balancing">Configure
        your Lightsail instances for load balancing</a>. You can create up to 5
        load balancers per AWS Region in your account.</p> <p>When you create a
        load balancer, you can specify a unique name and port settings. To
        change additional load balancer settings, use the
        <code>UpdateLoadBalancerAttribute</code> operation.</p> <p>The
        <code>create load balancer</code> operation supports tag-based access
        control via request tags. For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateLoadBalancerResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateLoadBalancer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLoadBalancerRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.CreateLoadBalancerTlsCertificate:
    post:
      operationId: CreateLoadBalancerTlsCertificate
      description: <p>Creates a Lightsail load balancer TLS certificate.</p> <p>TLS is just
        an updated, more secure version of Secure Socket Layer (SSL).</p> <p>The
        <code>create load balancer tls certificate</code> operation supports
        tag-based access control via resource tags applied to the resource
        identified by <code>load balancer name</code>. For more information, see
        the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateLoadBalancerTlsCertificateResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateLoadBalancerTlsCertificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLoadBalancerTlsCertificateRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.CreateRelationalDatabase:
    post:
      operationId: CreateRelationalDatabase
      description: <p>Creates a new database in Amazon Lightsail.</p> <p>The <code>create
        relational database</code> operation supports tag-based access control
        via request tags. For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRelationalDatabaseResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateRelationalDatabase
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRelationalDatabaseRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.CreateRelationalDatabaseFromSnapshot:
    post:
      operationId: CreateRelationalDatabaseFromSnapshot
      description: <p>Creates a new database from an existing database snapshot in Amazon
        Lightsail.</p> <p>You can create a new database from a snapshot in if
        something goes wrong with your original database, or to change it to a
        different plan, such as a high availability or standard plan.</p> <p>The
        <code>create relational database from snapshot</code> operation supports
        tag-based access control via request tags and resource tags applied to
        the resource identified by relationalDatabaseSnapshotName. For more
        information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRelationalDatabaseFromSnapshotRes\
                  ult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateRelationalDatabaseFromSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRelationalDatabaseFromSnapshotReque\
                st"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.CreateRelationalDatabaseSnapshot:
    post:
      operationId: CreateRelationalDatabaseSnapshot
      description: <p>Creates a snapshot of your database in Amazon Lightsail. You can use
        snapshots for backups, to make copies of a database, and to save data
        before deleting a database.</p> <p>The <code>create relational database
        snapshot</code> operation supports tag-based access control via request
        tags. For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRelationalDatabaseSnapshotResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.CreateRelationalDatabaseSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRelationalDatabaseSnapshotRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.DeleteAutoSnapshot:
    post:
      operationId: DeleteAutoSnapshot
      description: Deletes an automatic snapshot for an instance or disk.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteAutoSnapshotResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteAutoSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteAutoSnapshotRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.DeleteDisk:
    post:
      operationId: DeleteDisk
      description: <p>Deletes the specified block storage disk. The disk must be in the
        <code>available</code> state (not attached to a Lightsail instance).</p>
        <note> <p>The disk may remain in the <code>deleting</code> state for
        several minutes.</p> </note> <p>The <code>delete disk</code> operation
        supports tag-based access control via resource tags applied to the
        resource identified by <code>disk name</code>. For more information, see
        the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDiskResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteDisk
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDiskRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.DeleteDiskSnapshot:
    post:
      operationId: DeleteDiskSnapshot
      description: <p>Deletes the specified disk snapshot.</p> <p>When you make periodic
        snapshots of a disk, the snapshots are incremental, and only the blocks
        on the device that have changed since your last snapshot are saved in
        the new snapshot. When you delete a snapshot, only the data not needed
        for any other snapshot is removed. So regardless of which prior
        snapshots have been deleted, all active snapshots will have access to
        all the information needed to restore the disk.</p> <p>The <code>delete
        disk snapshot</code> operation supports tag-based access control via
        resource tags applied to the resource identified by <code>disk snapshot
        name</code>. For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDiskSnapshotResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteDiskSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDiskSnapshotRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.DeleteDomain:
    post:
      operationId: DeleteDomain
      description: <p>Deletes the specified domain recordset and all of its domain
        records.</p> <p>The <code>delete domain</code> operation supports
        tag-based access control via resource tags applied to the resource
        identified by <code>domain name</code>. For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDomainResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDomainRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.DeleteDomainEntry:
    post:
      operationId: DeleteDomainEntry
      description: <p>Deletes a specific domain entry.</p> <p>The <code>delete domain
        entry</code> operation supports tag-based access control via resource
        tags applied to the resource identified by <code>domain name</code>. For
        more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDomainEntryResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteDomainEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDomainEntryRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.DeleteInstance:
    post:
      operationId: DeleteInstance
      description: <p>Deletes an Amazon Lightsail instance.</p> <p>The <code>delete
        instance</code> operation supports tag-based access control via resource
        tags applied to the resource identified by <code>instance name</code>.
        For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteInstanceResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteInstanceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.DeleteInstanceSnapshot:
    post:
      operationId: DeleteInstanceSnapshot
      description: <p>Deletes a specific snapshot of a virtual private server (or
        <i>instance</i>).</p> <p>The <code>delete instance snapshot</code>
        operation supports tag-based access control via resource tags applied to
        the resource identified by <code>instance snapshot name</code>. For more
        information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteInstanceSnapshotResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteInstanceSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteInstanceSnapshotRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.DeleteKeyPair:
    post:
      operationId: DeleteKeyPair
      description: <p>Deletes a specific SSH key pair.</p> <p>The <code>delete key
        pair</code> operation supports tag-based access control via resource
        tags applied to the resource identified by <code>key pair name</code>.
        For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteKeyPairResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteKeyPair
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteKeyPairRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.DeleteKnownHostKeys:
    post:
      operationId: DeleteKnownHostKeys
      description: <p>Deletes the known host key or certificate used by the Amazon
        Lightsail browser-based SSH or RDP clients to authenticate an instance.
        This operation enables the Lightsail browser-based SSH or RDP clients to
        connect to the instance after a host key mismatch.</p> <important>
        <p>Perform this operation only if you were expecting the host key or
        certificate mismatch or if you are familiar with the new host key or
        certificate on the instance. For more information, see <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-troubleshooting-browser-based-ssh-rdp-client-connection">Troubleshooting
        connection issues when using the Amazon Lightsail browser-based SSH or
        RDP client</a>.</p> </important>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteKnownHostKeysResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteKnownHostKeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteKnownHostKeysRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.DeleteLoadBalancer:
    post:
      operationId: DeleteLoadBalancer
      description: <p>Deletes a Lightsail load balancer and all its associated SSL/TLS
        certificates. Once the load balancer is deleted, you will need to create
        a new load balancer, create a new certificate, and verify domain
        ownership again.</p> <p>The <code>delete load balancer</code> operation
        supports tag-based access control via resource tags applied to the
        resource identified by <code>load balancer name</code>. For more
        information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteLoadBalancerResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteLoadBalancer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteLoadBalancerRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.DeleteLoadBalancerTlsCertificate:
    post:
      operationId: DeleteLoadBalancerTlsCertificate
      description: <p>Deletes an SSL/TLS certificate associated with a Lightsail load
        balancer.</p> <p>The <code>delete load balancer tls certificate</code>
        operation supports tag-based access control via resource tags applied to
        the resource identified by <code>load balancer name</code>. For more
        information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteLoadBalancerTlsCertificateResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteLoadBalancerTlsCertificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteLoadBalancerTlsCertificateRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.DeleteRelationalDatabase:
    post:
      operationId: DeleteRelationalDatabase
      description: <p>Deletes a database in Amazon Lightsail.</p> <p>The <code>delete
        relational database</code> operation supports tag-based access control
        via resource tags applied to the resource identified by
        relationalDatabaseName. For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRelationalDatabaseResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteRelationalDatabase
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRelationalDatabaseRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.DeleteRelationalDatabaseSnapshot:
    post:
      operationId: DeleteRelationalDatabaseSnapshot
      description: <p>Deletes a database snapshot in Amazon Lightsail.</p> <p>The
        <code>delete relational database snapshot</code> operation supports
        tag-based access control via resource tags applied to the resource
        identified by relationalDatabaseName. For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRelationalDatabaseSnapshotResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DeleteRelationalDatabaseSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRelationalDatabaseSnapshotRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.DetachDisk:
    post:
      operationId: DetachDisk
      description: <p>Detaches a stopped block storage disk from a Lightsail instance. Make
        sure to unmount any file systems on the device within your operating
        system before stopping the instance and detaching the disk.</p> <p>The
        <code>detach disk</code> operation supports tag-based access control via
        resource tags applied to the resource identified by <code>disk
        name</code>. For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DetachDiskResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DetachDisk
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DetachDiskRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.DetachInstancesFromLoadBalancer:
    post:
      operationId: DetachInstancesFromLoadBalancer
      description: <p>Detaches the specified instances from a Lightsail load balancer.</p>
        <p>This operation waits until the instances are no longer needed before
        they are detached from the load balancer.</p> <p>The <code>detach
        instances from load balancer</code> operation supports tag-based access
        control via resource tags applied to the resource identified by
        <code>load balancer name</code>. For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DetachInstancesFromLoadBalancerResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DetachInstancesFromLoadBalancer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DetachInstancesFromLoadBalancerRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.DetachStaticIp:
    post:
      operationId: DetachStaticIp
      description: Detaches a static IP from the Amazon Lightsail instance to which it is
        attached.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DetachStaticIpResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DetachStaticIp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DetachStaticIpRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.DisableAddOn:
    post:
      operationId: DisableAddOn
      description: Disables an add-on for an Amazon Lightsail resource. For more
        information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots">Lightsail
        Dev Guide</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisableAddOnResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DisableAddOn
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisableAddOnRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.DownloadDefaultKeyPair:
    post:
      operationId: DownloadDefaultKeyPair
      description: Downloads the default SSH key pair from the user's account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DownloadDefaultKeyPairResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.DownloadDefaultKeyPair
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DownloadDefaultKeyPairRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.EnableAddOn:
    post:
      operationId: EnableAddOn
      description: Enables or modifies an add-on for an Amazon Lightsail resource. For more
        information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots">Lightsail
        Dev Guide</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnableAddOnResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.EnableAddOn
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnableAddOnRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.ExportSnapshot:
    post:
      operationId: ExportSnapshot
      description: <p>Exports an Amazon Lightsail instance or block storage disk snapshot
        to Amazon Elastic Compute Cloud (Amazon EC2). This operation results in
        an export snapshot record that can be used with the <code>create cloud
        formation stack</code> operation to create new Amazon EC2 instances.</p>
        <p>Exported instance snapshots appear in Amazon EC2 as Amazon Machine
        Images (AMIs), and the instance system disk appears as an Amazon Elastic
        Block Store (Amazon EBS) volume. Exported disk snapshots appear in
        Amazon EC2 as Amazon EBS volumes. Snapshots are exported to the same
        Amazon Web Services Region in Amazon EC2 as the source Lightsail
        snapshot.</p> <p/> <p>The <code>export snapshot</code> operation
        supports tag-based access control via resource tags applied to the
        resource identified by <code>source snapshot name</code>. For more
        information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p> <note> <p>Use the <code>get instance snapshots</code>
        or <code>get disk snapshots</code> operations to get a list of snapshots
        that you can export to Amazon EC2.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExportSnapshotResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.ExportSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExportSnapshotRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetActiveNames:
    post:
      operationId: GetActiveNames
      description: Returns the names of all active (not deleted) resources.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetActiveNamesResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetActiveNames
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetActiveNamesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetAutoSnapshots:
    post:
      operationId: GetAutoSnapshots
      description: Returns the available automatic snapshots for the specified resource
        name. For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-configuring-automatic-snapshots">Lightsail
        Dev Guide</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAutoSnapshotsResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetAutoSnapshots
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetAutoSnapshotsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetBlueprints:
    post:
      operationId: GetBlueprints
      description: <p>Returns the list of available instance images, or <i>blueprints</i>.
        You can use a blueprint to create a new instance already running a
        specific operating system, as well as a preinstalled app or development
        stack. The software each instance is running depends on the blueprint
        image you choose.</p> <note> <p>Use active blueprints when creating new
        instances. Inactive blueprints are listed to support customers with
        existing instances and are not necessarily available to create new
        instances. Blueprints are marked inactive when they become outdated due
        to operating system updates or new application releases.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetBlueprintsResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetBlueprints
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetBlueprintsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetBundles:
    post:
      operationId: GetBundles
      description: Returns the list of bundles that are available for purchase. A bundle
        describes the specs for your virtual private server (or
        <i>instance</i>).
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetBundlesResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetBundles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetBundlesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetCloudFormationStackRecords:
    post:
      operationId: GetCloudFormationStackRecords
      description: <p>Returns the CloudFormation stack record created as a result of the
        <code>create cloud formation stack</code> operation.</p> <p>An AWS
        CloudFormation stack is used to create a new Amazon EC2 instance from an
        exported Lightsail snapshot.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCloudFormationStackRecordsResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetCloudFormationStackRecords
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetCloudFormationStackRecordsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetDisk:
    post:
      operationId: GetDisk
      description: Returns information about a specific block storage disk.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDiskResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetDisk
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDiskRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetDiskSnapshot:
    post:
      operationId: GetDiskSnapshot
      description: Returns information about a specific block storage disk snapshot.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDiskSnapshotResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetDiskSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDiskSnapshotRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetDiskSnapshots:
    post:
      operationId: GetDiskSnapshots
      description: <p>Returns information about all block storage disk snapshots in your
        AWS account and region.</p> <p>If you are describing a long list of disk
        snapshots, you can paginate the output to make the list more manageable.
        You can use the pageToken and nextPageToken values to retrieve the next
        items in the list.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDiskSnapshotsResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetDiskSnapshots
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDiskSnapshotsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetDisks:
    post:
      operationId: GetDisks
      description: <p>Returns information about all block storage disks in your AWS account
        and region.</p> <p>If you are describing a long list of disks, you can
        paginate the output to make the list more manageable. You can use the
        pageToken and nextPageToken values to retrieve the next items in the
        list.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDisksResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetDisks
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDisksRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetDomain:
    post:
      operationId: GetDomain
      description: Returns information about a specific domain recordset.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDomainResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDomainRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetDomains:
    post:
      operationId: GetDomains
      description: Returns a list of all domains in the user's account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDomainsResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetDomains
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDomainsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetExportSnapshotRecords:
    post:
      operationId: GetExportSnapshotRecords
      description: <p>Returns the export snapshot record created as a result of the
        <code>export snapshot</code> operation.</p> <p>An export snapshot record
        can be used to create a new Amazon EC2 instance and its related
        resources with the <code>create cloud formation stack</code>
        operation.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetExportSnapshotRecordsResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetExportSnapshotRecords
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetExportSnapshotRecordsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetInstance:
    post:
      operationId: GetInstance
      description: Returns information about a specific Amazon Lightsail instance, which is
        a virtual private server.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInstanceResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetInstanceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetInstanceAccessDetails:
    post:
      operationId: GetInstanceAccessDetails
      description: <p>Returns temporary SSH keys you can use to connect to a specific
        virtual private server, or <i>instance</i>.</p> <p>The <code>get
        instance access details</code> operation supports tag-based access
        control via resource tags applied to the resource identified by
        <code>instance name</code>. For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInstanceAccessDetailsResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetInstanceAccessDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetInstanceAccessDetailsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetInstanceMetricData:
    post:
      operationId: GetInstanceMetricData
      description: Returns the data points for the specified Amazon Lightsail instance
        metric, given an instance name.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInstanceMetricDataResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetInstanceMetricData
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetInstanceMetricDataRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetInstancePortStates:
    post:
      operationId: GetInstancePortStates
      description: Returns the port states for a specific virtual private server, or
        <i>instance</i>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInstancePortStatesResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetInstancePortStates
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetInstancePortStatesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetInstanceSnapshot:
    post:
      operationId: GetInstanceSnapshot
      description: Returns information about a specific instance snapshot.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInstanceSnapshotResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetInstanceSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetInstanceSnapshotRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetInstanceSnapshots:
    post:
      operationId: GetInstanceSnapshots
      description: Returns all instance snapshots for the user's account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInstanceSnapshotsResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetInstanceSnapshots
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetInstanceSnapshotsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetInstanceState:
    post:
      operationId: GetInstanceState
      description: Returns the state of a specific instance. Works on one instance at a
        time.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInstanceStateResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetInstanceState
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetInstanceStateRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetInstances:
    post:
      operationId: GetInstances
      description: Returns information about all Amazon Lightsail virtual private servers,
        or <i>instances</i>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInstancesResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetInstances
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetInstancesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetKeyPair:
    post:
      operationId: GetKeyPair
      description: Returns information about a specific key pair.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetKeyPairResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetKeyPair
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetKeyPairRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetKeyPairs:
    post:
      operationId: GetKeyPairs
      description: Returns information about all key pairs in the user's account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetKeyPairsResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetKeyPairs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetKeyPairsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetLoadBalancer:
    post:
      operationId: GetLoadBalancer
      description: Returns information about the specified Lightsail load balancer.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLoadBalancerResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetLoadBalancer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetLoadBalancerRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetLoadBalancerMetricData:
    post:
      operationId: GetLoadBalancerMetricData
      description: Returns information about health metrics for your Lightsail load
        balancer.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLoadBalancerMetricDataResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetLoadBalancerMetricData
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetLoadBalancerMetricDataRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetLoadBalancerTlsCertificates:
    post:
      operationId: GetLoadBalancerTlsCertificates
      description: <p>Returns information about the TLS certificates that are associated
        with the specified Lightsail load balancer.</p> <p>TLS is just an
        updated, more secure version of Secure Socket Layer (SSL).</p> <p>You
        can have a maximum of 2 certificates associated with a Lightsail load
        balancer. One is active and the other is inactive.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLoadBalancerTlsCertificatesResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetLoadBalancerTlsCertificates
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetLoadBalancerTlsCertificatesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetLoadBalancers:
    post:
      operationId: GetLoadBalancers
      description: <p>Returns information about all load balancers in an account.</p> <p>If
        you are describing a long list of load balancers, you can paginate the
        output to make the list more manageable. You can use the pageToken and
        nextPageToken values to retrieve the next items in the list.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLoadBalancersResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetLoadBalancers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetLoadBalancersRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetOperation:
    post:
      operationId: GetOperation
      description: Returns information about a specific operation. Operations include
        events such as when you create an instance, allocate a static IP, attach
        a static IP, and so on.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOperationResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetOperationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetOperations:
    post:
      operationId: GetOperations
      description: <p>Returns information about all operations.</p> <p>Results are returned
        from oldest to newest, up to a maximum of 200. Results can be paged by
        making each subsequent call to <code>GetOperations</code> use the
        maximum (last) <code>statusChangedAt</code> value from the previous
        request.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOperationsResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetOperations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetOperationsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetOperationsForResource:
    post:
      operationId: GetOperationsForResource
      description: Gets operations for a specific resource (e.g., an instance or a static
        IP).
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOperationsForResourceResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetOperationsForResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetOperationsForResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetRegions:
    post:
      operationId: GetRegions
      description: Returns a list of all valid regions for Amazon Lightsail. Use the
        <code>include availability zones</code> parameter to also return the
        Availability Zones in a region.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRegionsResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRegions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRegionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetRelationalDatabase:
    post:
      operationId: GetRelationalDatabase
      description: Returns information about a specific database in Amazon Lightsail.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRelationalDatabaseResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRelationalDatabase
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRelationalDatabaseRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseBlueprints:
    post:
      operationId: GetRelationalDatabaseBlueprints
      description: <p>Returns a list of available database blueprints in Amazon Lightsail.
        A blueprint describes the major engine version of a database.</p> <p>You
        can use a blueprint ID to create a new database that runs a specific
        database engine.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRelationalDatabaseBlueprintsResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRelationalDatabaseBlueprints
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRelationalDatabaseBlueprintsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseBundles:
    post:
      operationId: GetRelationalDatabaseBundles
      description: <p>Returns the list of bundles that are available in Amazon Lightsail. A
        bundle describes the performance specifications for a database.</p>
        <p>You can use a bundle ID to create a new database with explicit
        performance specifications.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRelationalDatabaseBundlesResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRelationalDatabaseBundles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRelationalDatabaseBundlesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseEvents:
    post:
      operationId: GetRelationalDatabaseEvents
      description: Returns a list of events for a specific database in Amazon Lightsail.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRelationalDatabaseEventsResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRelationalDatabaseEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRelationalDatabaseEventsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseLogEvents:
    post:
      operationId: GetRelationalDatabaseLogEvents
      description: Returns a list of log events for a database in Amazon Lightsail.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRelationalDatabaseLogEventsResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRelationalDatabaseLogEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRelationalDatabaseLogEventsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseLogStreams:
    post:
      operationId: GetRelationalDatabaseLogStreams
      description: Returns a list of available log streams for a specific database in
        Amazon Lightsail.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRelationalDatabaseLogStreamsResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRelationalDatabaseLogStreams
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRelationalDatabaseLogStreamsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseMasterUserPassword:
    post:
      operationId: GetRelationalDatabaseMasterUserPassword
      description: <p>Returns the current, previous, or pending versions of the master user
        password for a Lightsail database.</p> <p>The
        <code>GetRelationalDatabaseMasterUserPassword</code> operation supports
        tag-based access control via resource tags applied to the resource
        identified by relationalDatabaseName.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRelationalDatabaseMasterUserPassword\
                  Result"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRelationalDatabaseMasterUserPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRelationalDatabaseMasterUserPasswordRe\
                quest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseMetricData:
    post:
      operationId: GetRelationalDatabaseMetricData
      description: Returns the data points of the specified metric for a database in Amazon
        Lightsail.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRelationalDatabaseMetricDataResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRelationalDatabaseMetricData
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRelationalDatabaseMetricDataRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseParameters:
    post:
      operationId: GetRelationalDatabaseParameters
      description: <p>Returns all of the runtime parameters offered by the underlying
        database software, or engine, for a specific database in Amazon
        Lightsail.</p> <p>In addition to the parameter names and values, this
        operation returns other information about each parameter. This
        information includes whether changes require a reboot, whether the
        parameter is modifiable, the allowed values, and the data types.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRelationalDatabaseParametersResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRelationalDatabaseParameters
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRelationalDatabaseParametersRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseSnapshot:
    post:
      operationId: GetRelationalDatabaseSnapshot
      description: Returns information about a specific database snapshot in Amazon
        Lightsail.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRelationalDatabaseSnapshotResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRelationalDatabaseSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRelationalDatabaseSnapshotRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetRelationalDatabaseSnapshots:
    post:
      operationId: GetRelationalDatabaseSnapshots
      description: Returns information about all of your database snapshots in Amazon
        Lightsail.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRelationalDatabaseSnapshotsResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRelationalDatabaseSnapshots
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRelationalDatabaseSnapshotsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetRelationalDatabases:
    post:
      operationId: GetRelationalDatabases
      description: Returns information about all of your databases in Amazon Lightsail.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRelationalDatabasesResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetRelationalDatabases
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRelationalDatabasesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetStaticIp:
    post:
      operationId: GetStaticIp
      description: Returns information about a specific static IP.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetStaticIpResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetStaticIp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetStaticIpRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.GetStaticIps:
    post:
      operationId: GetStaticIps
      description: Returns information about all static IPs in the user's account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetStaticIpsResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.GetStaticIps
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetStaticIpsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.ImportKeyPair:
    post:
      operationId: ImportKeyPair
      description: Imports a public SSH key from a specific key pair.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportKeyPairResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.ImportKeyPair
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportKeyPairRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.IsVpcPeered:
    post:
      operationId: IsVpcPeered
      description: Returns a Boolean value indicating whether your Lightsail VPC is peered.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IsVpcPeeredResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.IsVpcPeered
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IsVpcPeeredRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.OpenInstancePublicPorts:
    post:
      operationId: OpenInstancePublicPorts
      description: <p>Adds public ports to an Amazon Lightsail instance.</p> <p>The
        <code>open instance public ports</code> operation supports tag-based
        access control via resource tags applied to the resource identified by
        <code>instance name</code>. For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpenInstancePublicPortsResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.OpenInstancePublicPorts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OpenInstancePublicPortsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.PeerVpc:
    post:
      operationId: PeerVpc
      description: Tries to peer the Lightsail VPC with the user's default VPC.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PeerVpcResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.PeerVpc
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PeerVpcRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.PutInstancePublicPorts:
    post:
      operationId: PutInstancePublicPorts
      description: <p>Sets the specified open ports for an Amazon Lightsail instance, and
        closes all ports for every protocol not included in the current
        request.</p> <p>The <code>put instance public ports</code> operation
        supports tag-based access control via resource tags applied to the
        resource identified by <code>instance name</code>. For more information,
        see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutInstancePublicPortsResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.PutInstancePublicPorts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutInstancePublicPortsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.RebootInstance:
    post:
      operationId: RebootInstance
      description: <p>Restarts a specific instance.</p> <p>The <code>reboot instance</code>
        operation supports tag-based access control via resource tags applied to
        the resource identified by <code>instance name</code>. For more
        information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RebootInstanceResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.RebootInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RebootInstanceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.RebootRelationalDatabase:
    post:
      operationId: RebootRelationalDatabase
      description: <p>Restarts a specific database in Amazon Lightsail.</p> <p>The
        <code>reboot relational database</code> operation supports tag-based
        access control via resource tags applied to the resource identified by
        relationalDatabaseName. For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RebootRelationalDatabaseResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.RebootRelationalDatabase
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RebootRelationalDatabaseRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.ReleaseStaticIp:
    post:
      operationId: ReleaseStaticIp
      description: Deletes a specific static IP from your account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReleaseStaticIpResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.ReleaseStaticIp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReleaseStaticIpRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.StartInstance:
    post:
      operationId: StartInstance
      description: <p>Starts a specific Amazon Lightsail instance from a stopped state. To
        restart an instance, use the <code>reboot instance</code> operation.</p>
        <note> <p>When you start a stopped instance, Lightsail assigns a new
        public IP address to the instance. To use the same IP address after
        stopping and starting an instance, create a static IP address and attach
        it to the instance. For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/lightsail-create-static-ip">Lightsail
        Dev Guide</a>.</p> </note> <p>The <code>start instance</code> operation
        supports tag-based access control via resource tags applied to the
        resource identified by <code>instance name</code>. For more information,
        see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartInstanceResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.StartInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartInstanceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.StartRelationalDatabase:
    post:
      operationId: StartRelationalDatabase
      description: <p>Starts a specific database from a stopped state in Amazon Lightsail.
        To restart a database, use the <code>reboot relational database</code>
        operation.</p> <p>The <code>start relational database</code> operation
        supports tag-based access control via resource tags applied to the
        resource identified by relationalDatabaseName. For more information, see
        the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartRelationalDatabaseResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.StartRelationalDatabase
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartRelationalDatabaseRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.StopInstance:
    post:
      operationId: StopInstance
      description: <p>Stops a specific Amazon Lightsail instance that is currently
        running.</p> <note> <p>When you start a stopped instance, Lightsail
        assigns a new public IP address to the instance. To use the same IP
        address after stopping and starting an instance, create a static IP
        address and attach it to the instance. For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/lightsail-create-static-ip">Lightsail
        Dev Guide</a>.</p> </note> <p>The <code>stop instance</code> operation
        supports tag-based access control via resource tags applied to the
        resource identified by <code>instance name</code>. For more information,
        see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopInstanceResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.StopInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopInstanceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.StopRelationalDatabase:
    post:
      operationId: StopRelationalDatabase
      description: <p>Stops a specific database that is currently running in Amazon
        Lightsail.</p> <p>The <code>stop relational database</code> operation
        supports tag-based access control via resource tags applied to the
        resource identified by relationalDatabaseName. For more information, see
        the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopRelationalDatabaseResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.StopRelationalDatabase
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopRelationalDatabaseRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.TagResource:
    post:
      operationId: TagResource
      description: <p>Adds one or more tags to the specified Amazon Lightsail resource.
        Each resource can have a maximum of 50 tags. Each tag consists of a key
        and an optional value. Tag keys must be unique per resource. For more
        information about tags, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-tags">Lightsail
        Dev Guide</a>.</p> <p>The <code>tag resource</code> operation supports
        tag-based access control via request tags and resource tags applied to
        the resource identified by <code>resource name</code>. For more
        information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.TagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.UnpeerVpc:
    post:
      operationId: UnpeerVpc
      description: Attempts to unpeer the Lightsail VPC from the user's default VPC.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnpeerVpcResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.UnpeerVpc
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnpeerVpcRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.UntagResource:
    post:
      operationId: UntagResource
      description: <p>Deletes the specified set of tag keys and their values from the
        specified Amazon Lightsail resource.</p> <p>The <code>untag
        resource</code> operation supports tag-based access control via request
        tags and resource tags applied to the resource identified by
        <code>resource name</code>. For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.UntagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UntagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.UpdateDomainEntry:
    post:
      operationId: UpdateDomainEntry
      description: <p>Updates a domain recordset after it is created.</p> <p>The
        <code>update domain entry</code> operation supports tag-based access
        control via resource tags applied to the resource identified by
        <code>domain name</code>. For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDomainEntryResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.UpdateDomainEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDomainEntryRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.UpdateLoadBalancerAttribute:
    post:
      operationId: UpdateLoadBalancerAttribute
      description: <p>Updates the specified attribute for a load balancer. You can only
        update one attribute at a time.</p> <p>The <code>update load balancer
        attribute</code> operation supports tag-based access control via
        resource tags applied to the resource identified by <code>load balancer
        name</code>. For more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateLoadBalancerAttributeResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.UpdateLoadBalancerAttribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateLoadBalancerAttributeRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.UpdateRelationalDatabase:
    post:
      operationId: UpdateRelationalDatabase
      description: <p>Allows the update of one or more attributes of a database in Amazon
        Lightsail.</p> <p>Updates are applied immediately, or in cases where the
        updates could result in an outage, are applied during the database's
        predefined maintenance window.</p> <p>The <code>update relational
        database</code> operation supports tag-based access control via resource
        tags applied to the resource identified by relationalDatabaseName. For
        more information, see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-controlling-access-using-tags">Lightsail
        Dev Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateRelationalDatabaseResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.UpdateRelationalDatabase
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRelationalDatabaseRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Lightsail_20161128.UpdateRelationalDatabaseParameters:
    post:
      operationId: UpdateRelationalDatabaseParameters
      description: "<p>Allows the update of one or more parameters of a database in Amazon
        Lightsail.</p> <p>Parameter updates don't cause outages; therefore,
        their application is not subject to the preferred maintenance window.
        However, there are two ways in which paramater updates are applied:
        <code>dynamic</code> or <code>pending-reboot</code>. Parameters marked
        with a <code>dynamic</code> apply type are applied immediately.
        Parameters marked with a <code>pending-reboot</code> apply type are
        applied only after the database is rebooted using the <code>reboot
        relational database</code> operation.</p> <p>The <code>update relational
        database parameters</code> operation supports tag-based access control
        via resource tags applied to the resource identified by
        relationalDatabaseName. For more information, see the <a
        href=\"https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-ligh\
        tsail-controlling-access-using-tags\">Lightsail Dev Guide</a>.</p>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateRelationalDatabaseParametersResult"
        "480":
          description: ServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: OperationFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationFailureException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: AccountSetupInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSetupInProgressException"
        "486":
          description: UnauthenticatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthenticatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Lightsail_20161128.UpdateRelationalDatabaseParameters
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRelationalDatabaseParametersRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://lightsail.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Lightsail multi-region endpoint
  - url: https://lightsail.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Lightsail multi-region endpoint
  - url: http://lightsail.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Lightsail endpoint for China (Beijing) and China (Ningxia)
  - url: https://lightsail.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Lightsail endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AllocateStaticIpResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    AllocateStaticIpRequest:
      type: object
      required:
        - staticIpName
      properties:
        staticIpName:
          $ref: "#/components/schemas/ResourceName"
    ServiceException: {}
    InvalidInputException: {}
    NotFoundException: {}
    OperationFailureException: {}
    AccessDeniedException: {}
    AccountSetupInProgressException: {}
    UnauthenticatedException: {}
    AttachDiskResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    AttachDiskRequest:
      type: object
      required:
        - diskName
        - instanceName
        - diskPath
      properties:
        diskName:
          $ref: "#/components/schemas/ResourceName"
        instanceName:
          $ref: "#/components/schemas/ResourceName"
        diskPath:
          $ref: "#/components/schemas/NonEmptyString"
    AttachInstancesToLoadBalancerResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    AttachInstancesToLoadBalancerRequest:
      type: object
      required:
        - loadBalancerName
        - instanceNames
      properties:
        loadBalancerName:
          $ref: "#/components/schemas/ResourceName"
        instanceNames:
          $ref: "#/components/schemas/ResourceNameList"
    AttachLoadBalancerTlsCertificateResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    AttachLoadBalancerTlsCertificateRequest:
      type: object
      required:
        - loadBalancerName
        - certificateName
      properties:
        loadBalancerName:
          $ref: "#/components/schemas/ResourceName"
        certificateName:
          $ref: "#/components/schemas/ResourceName"
    AttachStaticIpResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    AttachStaticIpRequest:
      type: object
      required:
        - staticIpName
        - instanceName
      properties:
        staticIpName:
          $ref: "#/components/schemas/ResourceName"
        instanceName:
          $ref: "#/components/schemas/ResourceName"
    CloseInstancePublicPortsResult:
      type: object
      properties:
        operation:
          $ref: "#/components/schemas/Operation"
    CloseInstancePublicPortsRequest:
      type: object
      required:
        - portInfo
        - instanceName
      properties:
        portInfo:
          $ref: "#/components/schemas/PortInfo"
        instanceName:
          $ref: "#/components/schemas/ResourceName"
    CopySnapshotResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    CopySnapshotRequest:
      type: object
      required:
        - targetSnapshotName
        - sourceRegion
      properties:
        sourceSnapshotName:
          $ref: "#/components/schemas/ResourceName"
        sourceResourceName:
          $ref: "#/components/schemas/string"
        restoreDate:
          $ref: "#/components/schemas/string"
        useLatestRestorableAutoSnapshot:
          $ref: "#/components/schemas/boolean"
        targetSnapshotName:
          $ref: "#/components/schemas/ResourceName"
        sourceRegion:
          $ref: "#/components/schemas/RegionName"
    CreateCloudFormationStackResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    CreateCloudFormationStackRequest:
      type: object
      required:
        - instances
      properties:
        instances:
          $ref: "#/components/schemas/InstanceEntryList"
    CreateDiskResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    CreateDiskRequest:
      type: object
      required:
        - diskName
        - availabilityZone
        - sizeInGb
      properties:
        diskName:
          $ref: "#/components/schemas/ResourceName"
        availabilityZone:
          $ref: "#/components/schemas/NonEmptyString"
        sizeInGb:
          $ref: "#/components/schemas/integer"
        tags:
          $ref: "#/components/schemas/TagList"
        addOns:
          $ref: "#/components/schemas/AddOnRequestList"
    CreateDiskFromSnapshotResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    CreateDiskFromSnapshotRequest:
      type: object
      required:
        - diskName
        - availabilityZone
        - sizeInGb
      properties:
        diskName:
          $ref: "#/components/schemas/ResourceName"
        diskSnapshotName:
          $ref: "#/components/schemas/ResourceName"
        availabilityZone:
          $ref: "#/components/schemas/NonEmptyString"
        sizeInGb:
          $ref: "#/components/schemas/integer"
        tags:
          $ref: "#/components/schemas/TagList"
        addOns:
          $ref: "#/components/schemas/AddOnRequestList"
        sourceDiskName:
          $ref: "#/components/schemas/string"
        restoreDate:
          $ref: "#/components/schemas/string"
        useLatestRestorableAutoSnapshot:
          $ref: "#/components/schemas/boolean"
    CreateDiskSnapshotResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    CreateDiskSnapshotRequest:
      type: object
      required:
        - diskSnapshotName
      properties:
        diskName:
          $ref: "#/components/schemas/ResourceName"
        diskSnapshotName:
          $ref: "#/components/schemas/ResourceName"
        instanceName:
          $ref: "#/components/schemas/ResourceName"
        tags:
          $ref: "#/components/schemas/TagList"
    CreateDomainResult:
      type: object
      properties:
        operation:
          $ref: "#/components/schemas/Operation"
    CreateDomainRequest:
      type: object
      required:
        - domainName
      properties:
        domainName:
          $ref: "#/components/schemas/DomainName"
        tags:
          $ref: "#/components/schemas/TagList"
    CreateDomainEntryResult:
      type: object
      properties:
        operation:
          $ref: "#/components/schemas/Operation"
    CreateDomainEntryRequest:
      type: object
      required:
        - domainName
        - domainEntry
      properties:
        domainName:
          $ref: "#/components/schemas/DomainName"
        domainEntry:
          $ref: "#/components/schemas/DomainEntry"
    CreateInstanceSnapshotResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    CreateInstanceSnapshotRequest:
      type: object
      required:
        - instanceSnapshotName
        - instanceName
      properties:
        instanceSnapshotName:
          $ref: "#/components/schemas/ResourceName"
        instanceName:
          $ref: "#/components/schemas/ResourceName"
        tags:
          $ref: "#/components/schemas/TagList"
    CreateInstancesResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    CreateInstancesRequest:
      type: object
      required:
        - instanceNames
        - availabilityZone
        - blueprintId
        - bundleId
      properties:
        instanceNames:
          $ref: "#/components/schemas/StringList"
        availabilityZone:
          $ref: "#/components/schemas/string"
        customImageName:
          $ref: "#/components/schemas/ResourceName"
        blueprintId:
          $ref: "#/components/schemas/NonEmptyString"
        bundleId:
          $ref: "#/components/schemas/NonEmptyString"
        userData:
          $ref: "#/components/schemas/string"
        keyPairName:
          $ref: "#/components/schemas/ResourceName"
        tags:
          $ref: "#/components/schemas/TagList"
        addOns:
          $ref: "#/components/schemas/AddOnRequestList"
    CreateInstancesFromSnapshotResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    CreateInstancesFromSnapshotRequest:
      type: object
      required:
        - instanceNames
        - availabilityZone
        - bundleId
      properties:
        instanceNames:
          $ref: "#/components/schemas/StringList"
        attachedDiskMapping:
          $ref: "#/components/schemas/AttachedDiskMap"
        availabilityZone:
          $ref: "#/components/schemas/string"
        instanceSnapshotName:
          $ref: "#/components/schemas/ResourceName"
        bundleId:
          $ref: "#/components/schemas/NonEmptyString"
        userData:
          $ref: "#/components/schemas/string"
        keyPairName:
          $ref: "#/components/schemas/ResourceName"
        tags:
          $ref: "#/components/schemas/TagList"
        addOns:
          $ref: "#/components/schemas/AddOnRequestList"
        sourceInstanceName:
          $ref: "#/components/schemas/string"
        restoreDate:
          $ref: "#/components/schemas/string"
        useLatestRestorableAutoSnapshot:
          $ref: "#/components/schemas/boolean"
    CreateKeyPairResult:
      type: object
      properties:
        keyPair:
          $ref: "#/components/schemas/KeyPair"
        publicKeyBase64:
          $ref: "#/components/schemas/Base64"
        privateKeyBase64:
          $ref: "#/components/schemas/Base64"
        operation:
          $ref: "#/components/schemas/Operation"
    CreateKeyPairRequest:
      type: object
      required:
        - keyPairName
      properties:
        keyPairName:
          $ref: "#/components/schemas/ResourceName"
        tags:
          $ref: "#/components/schemas/TagList"
    CreateLoadBalancerResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    CreateLoadBalancerRequest:
      type: object
      required:
        - loadBalancerName
        - instancePort
      properties:
        loadBalancerName:
          $ref: "#/components/schemas/ResourceName"
        instancePort:
          $ref: "#/components/schemas/Port"
        healthCheckPath:
          $ref: "#/components/schemas/string"
        certificateName:
          $ref: "#/components/schemas/ResourceName"
        certificateDomainName:
          $ref: "#/components/schemas/DomainName"
        certificateAlternativeNames:
          $ref: "#/components/schemas/DomainNameList"
        tags:
          $ref: "#/components/schemas/TagList"
    CreateLoadBalancerTlsCertificateResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    CreateLoadBalancerTlsCertificateRequest:
      type: object
      required:
        - loadBalancerName
        - certificateName
        - certificateDomainName
      properties:
        loadBalancerName:
          $ref: "#/components/schemas/ResourceName"
        certificateName:
          $ref: "#/components/schemas/ResourceName"
        certificateDomainName:
          $ref: "#/components/schemas/DomainName"
        certificateAlternativeNames:
          $ref: "#/components/schemas/DomainNameList"
        tags:
          $ref: "#/components/schemas/TagList"
    CreateRelationalDatabaseResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    CreateRelationalDatabaseRequest:
      type: object
      required:
        - relationalDatabaseName
        - relationalDatabaseBlueprintId
        - relationalDatabaseBundleId
        - masterDatabaseName
        - masterUsername
      properties:
        relationalDatabaseName:
          $ref: "#/components/schemas/ResourceName"
        availabilityZone:
          $ref: "#/components/schemas/string"
        relationalDatabaseBlueprintId:
          $ref: "#/components/schemas/string"
        relationalDatabaseBundleId:
          $ref: "#/components/schemas/string"
        masterDatabaseName:
          $ref: "#/components/schemas/string"
        masterUsername:
          $ref: "#/components/schemas/string"
        masterUserPassword:
          $ref: "#/components/schemas/SensitiveString"
        preferredBackupWindow:
          $ref: "#/components/schemas/string"
        preferredMaintenanceWindow:
          $ref: "#/components/schemas/string"
        publiclyAccessible:
          $ref: "#/components/schemas/boolean"
        tags:
          $ref: "#/components/schemas/TagList"
    CreateRelationalDatabaseFromSnapshotResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    CreateRelationalDatabaseFromSnapshotRequest:
      type: object
      required:
        - relationalDatabaseName
      properties:
        relationalDatabaseName:
          $ref: "#/components/schemas/ResourceName"
        availabilityZone:
          $ref: "#/components/schemas/string"
        publiclyAccessible:
          $ref: "#/components/schemas/boolean"
        relationalDatabaseSnapshotName:
          $ref: "#/components/schemas/ResourceName"
        relationalDatabaseBundleId:
          $ref: "#/components/schemas/string"
        sourceRelationalDatabaseName:
          $ref: "#/components/schemas/ResourceName"
        restoreTime:
          $ref: "#/components/schemas/IsoDate"
        useLatestRestorableTime:
          $ref: "#/components/schemas/boolean"
        tags:
          $ref: "#/components/schemas/TagList"
    CreateRelationalDatabaseSnapshotResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    CreateRelationalDatabaseSnapshotRequest:
      type: object
      required:
        - relationalDatabaseName
        - relationalDatabaseSnapshotName
      properties:
        relationalDatabaseName:
          $ref: "#/components/schemas/ResourceName"
        relationalDatabaseSnapshotName:
          $ref: "#/components/schemas/ResourceName"
        tags:
          $ref: "#/components/schemas/TagList"
    DeleteAutoSnapshotResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    DeleteAutoSnapshotRequest:
      type: object
      required:
        - resourceName
        - date
      properties:
        resourceName:
          $ref: "#/components/schemas/ResourceName"
        date:
          $ref: "#/components/schemas/AutoSnapshotDate"
    DeleteDiskResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    DeleteDiskRequest:
      type: object
      required:
        - diskName
      properties:
        diskName:
          $ref: "#/components/schemas/ResourceName"
        forceDeleteAddOns:
          $ref: "#/components/schemas/boolean"
    DeleteDiskSnapshotResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    DeleteDiskSnapshotRequest:
      type: object
      required:
        - diskSnapshotName
      properties:
        diskSnapshotName:
          $ref: "#/components/schemas/ResourceName"
    DeleteDomainResult:
      type: object
      properties:
        operation:
          $ref: "#/components/schemas/Operation"
    DeleteDomainRequest:
      type: object
      required:
        - domainName
      properties:
        domainName:
          $ref: "#/components/schemas/DomainName"
    DeleteDomainEntryResult:
      type: object
      properties:
        operation:
          $ref: "#/components/schemas/Operation"
    DeleteDomainEntryRequest:
      type: object
      required:
        - domainName
        - domainEntry
      properties:
        domainName:
          $ref: "#/components/schemas/DomainName"
        domainEntry:
          $ref: "#/components/schemas/DomainEntry"
    DeleteInstanceResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    DeleteInstanceRequest:
      type: object
      required:
        - instanceName
      properties:
        instanceName:
          $ref: "#/components/schemas/ResourceName"
        forceDeleteAddOns:
          $ref: "#/components/schemas/boolean"
    DeleteInstanceSnapshotResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    DeleteInstanceSnapshotRequest:
      type: object
      required:
        - instanceSnapshotName
      properties:
        instanceSnapshotName:
          $ref: "#/components/schemas/ResourceName"
    DeleteKeyPairResult:
      type: object
      properties:
        operation:
          $ref: "#/components/schemas/Operation"
    DeleteKeyPairRequest:
      type: object
      required:
        - keyPairName
      properties:
        keyPairName:
          $ref: "#/components/schemas/ResourceName"
    DeleteKnownHostKeysResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    DeleteKnownHostKeysRequest:
      type: object
      required:
        - instanceName
      properties:
        instanceName:
          $ref: "#/components/schemas/ResourceName"
    DeleteLoadBalancerResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    DeleteLoadBalancerRequest:
      type: object
      required:
        - loadBalancerName
      properties:
        loadBalancerName:
          $ref: "#/components/schemas/ResourceName"
    DeleteLoadBalancerTlsCertificateResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    DeleteLoadBalancerTlsCertificateRequest:
      type: object
      required:
        - loadBalancerName
        - certificateName
      properties:
        loadBalancerName:
          $ref: "#/components/schemas/ResourceName"
        certificateName:
          $ref: "#/components/schemas/ResourceName"
        force:
          $ref: "#/components/schemas/boolean"
    DeleteRelationalDatabaseResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    DeleteRelationalDatabaseRequest:
      type: object
      required:
        - relationalDatabaseName
      properties:
        relationalDatabaseName:
          $ref: "#/components/schemas/ResourceName"
        skipFinalSnapshot:
          $ref: "#/components/schemas/boolean"
        finalRelationalDatabaseSnapshotName:
          $ref: "#/components/schemas/ResourceName"
    DeleteRelationalDatabaseSnapshotResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    DeleteRelationalDatabaseSnapshotRequest:
      type: object
      required:
        - relationalDatabaseSnapshotName
      properties:
        relationalDatabaseSnapshotName:
          $ref: "#/components/schemas/ResourceName"
    DetachDiskResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    DetachDiskRequest:
      type: object
      required:
        - diskName
      properties:
        diskName:
          $ref: "#/components/schemas/ResourceName"
    DetachInstancesFromLoadBalancerResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    DetachInstancesFromLoadBalancerRequest:
      type: object
      required:
        - loadBalancerName
        - instanceNames
      properties:
        loadBalancerName:
          $ref: "#/components/schemas/ResourceName"
        instanceNames:
          $ref: "#/components/schemas/ResourceNameList"
    DetachStaticIpResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    DetachStaticIpRequest:
      type: object
      required:
        - staticIpName
      properties:
        staticIpName:
          $ref: "#/components/schemas/ResourceName"
    DisableAddOnResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    DisableAddOnRequest:
      type: object
      required:
        - addOnType
        - resourceName
      properties:
        addOnType:
          $ref: "#/components/schemas/AddOnType"
        resourceName:
          $ref: "#/components/schemas/ResourceName"
    DownloadDefaultKeyPairResult:
      type: object
      properties:
        publicKeyBase64:
          $ref: "#/components/schemas/Base64"
        privateKeyBase64:
          $ref: "#/components/schemas/Base64"
    DownloadDefaultKeyPairRequest:
      type: object
      properties: {}
    EnableAddOnResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    EnableAddOnRequest:
      type: object
      required:
        - resourceName
        - addOnRequest
      properties:
        resourceName:
          $ref: "#/components/schemas/ResourceName"
        addOnRequest:
          $ref: "#/components/schemas/AddOnRequest"
    ExportSnapshotResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    ExportSnapshotRequest:
      type: object
      required:
        - sourceSnapshotName
      properties:
        sourceSnapshotName:
          $ref: "#/components/schemas/ResourceName"
    GetActiveNamesResult:
      type: object
      properties:
        activeNames:
          $ref: "#/components/schemas/StringList"
        nextPageToken:
          $ref: "#/components/schemas/string"
    GetActiveNamesRequest:
      type: object
      properties:
        pageToken:
          $ref: "#/components/schemas/string"
    GetAutoSnapshotsResult:
      type: object
      properties:
        resourceName:
          $ref: "#/components/schemas/ResourceName"
        resourceType:
          $ref: "#/components/schemas/ResourceType"
        autoSnapshots:
          $ref: "#/components/schemas/AutoSnapshotDetailsList"
    GetAutoSnapshotsRequest:
      type: object
      required:
        - resourceName
      properties:
        resourceName:
          $ref: "#/components/schemas/ResourceName"
    GetBlueprintsResult:
      type: object
      properties:
        blueprints:
          $ref: "#/components/schemas/BlueprintList"
        nextPageToken:
          $ref: "#/components/schemas/string"
    GetBlueprintsRequest:
      type: object
      properties:
        includeInactive:
          $ref: "#/components/schemas/boolean"
        pageToken:
          $ref: "#/components/schemas/string"
    GetBundlesResult:
      type: object
      properties:
        bundles:
          $ref: "#/components/schemas/BundleList"
        nextPageToken:
          $ref: "#/components/schemas/string"
    GetBundlesRequest:
      type: object
      properties:
        includeInactive:
          $ref: "#/components/schemas/boolean"
        pageToken:
          $ref: "#/components/schemas/string"
    GetCloudFormationStackRecordsResult:
      type: object
      properties:
        cloudFormationStackRecords:
          $ref: "#/components/schemas/CloudFormationStackRecordList"
        nextPageToken:
          $ref: "#/components/schemas/string"
    GetCloudFormationStackRecordsRequest:
      type: object
      properties:
        pageToken:
          $ref: "#/components/schemas/string"
    GetDiskResult:
      type: object
      properties:
        disk:
          $ref: "#/components/schemas/Disk"
    GetDiskRequest:
      type: object
      required:
        - diskName
      properties:
        diskName:
          $ref: "#/components/schemas/ResourceName"
    GetDiskSnapshotResult:
      type: object
      properties:
        diskSnapshot:
          $ref: "#/components/schemas/DiskSnapshot"
    GetDiskSnapshotRequest:
      type: object
      required:
        - diskSnapshotName
      properties:
        diskSnapshotName:
          $ref: "#/components/schemas/ResourceName"
    GetDiskSnapshotsResult:
      type: object
      properties:
        diskSnapshots:
          $ref: "#/components/schemas/DiskSnapshotList"
        nextPageToken:
          $ref: "#/components/schemas/string"
    GetDiskSnapshotsRequest:
      type: object
      properties:
        pageToken:
          $ref: "#/components/schemas/string"
    GetDisksResult:
      type: object
      properties:
        disks:
          $ref: "#/components/schemas/DiskList"
        nextPageToken:
          $ref: "#/components/schemas/string"
    GetDisksRequest:
      type: object
      properties:
        pageToken:
          $ref: "#/components/schemas/string"
    GetDomainResult:
      type: object
      properties:
        domain:
          $ref: "#/components/schemas/Domain"
    GetDomainRequest:
      type: object
      required:
        - domainName
      properties:
        domainName:
          $ref: "#/components/schemas/DomainName"
    GetDomainsResult:
      type: object
      properties:
        domains:
          $ref: "#/components/schemas/DomainList"
        nextPageToken:
          $ref: "#/components/schemas/string"
    GetDomainsRequest:
      type: object
      properties:
        pageToken:
          $ref: "#/components/schemas/string"
    GetExportSnapshotRecordsResult:
      type: object
      properties:
        exportSnapshotRecords:
          $ref: "#/components/schemas/ExportSnapshotRecordList"
        nextPageToken:
          $ref: "#/components/schemas/string"
    GetExportSnapshotRecordsRequest:
      type: object
      properties:
        pageToken:
          $ref: "#/components/schemas/string"
    GetInstanceResult:
      type: object
      properties:
        instance:
          $ref: "#/components/schemas/Instance"
    GetInstanceRequest:
      type: object
      required:
        - instanceName
      properties:
        instanceName:
          $ref: "#/components/schemas/ResourceName"
    GetInstanceAccessDetailsResult:
      type: object
      properties:
        accessDetails:
          $ref: "#/components/schemas/InstanceAccessDetails"
    GetInstanceAccessDetailsRequest:
      type: object
      required:
        - instanceName
      properties:
        instanceName:
          $ref: "#/components/schemas/ResourceName"
        protocol:
          $ref: "#/components/schemas/InstanceAccessProtocol"
    GetInstanceMetricDataResult:
      type: object
      properties:
        metricName:
          $ref: "#/components/schemas/InstanceMetricName"
        metricData:
          $ref: "#/components/schemas/MetricDatapointList"
    GetInstanceMetricDataRequest:
      type: object
      required:
        - instanceName
        - metricName
        - period
        - startTime
        - endTime
        - unit
        - statistics
      properties:
        instanceName:
          $ref: "#/components/schemas/ResourceName"
        metricName:
          $ref: "#/components/schemas/InstanceMetricName"
        period:
          $ref: "#/components/schemas/MetricPeriod"
        startTime:
          $ref: "#/components/schemas/timestamp"
        endTime:
          $ref: "#/components/schemas/timestamp"
        unit:
          $ref: "#/components/schemas/MetricUnit"
        statistics:
          $ref: "#/components/schemas/MetricStatisticList"
    GetInstancePortStatesResult:
      type: object
      properties:
        portStates:
          $ref: "#/components/schemas/InstancePortStateList"
    GetInstancePortStatesRequest:
      type: object
      required:
        - instanceName
      properties:
        instanceName:
          $ref: "#/components/schemas/ResourceName"
    GetInstanceSnapshotResult:
      type: object
      properties:
        instanceSnapshot:
          $ref: "#/components/schemas/InstanceSnapshot"
    GetInstanceSnapshotRequest:
      type: object
      required:
        - instanceSnapshotName
      properties:
        instanceSnapshotName:
          $ref: "#/components/schemas/ResourceName"
    GetInstanceSnapshotsResult:
      type: object
      properties:
        instanceSnapshots:
          $ref: "#/components/schemas/InstanceSnapshotList"
        nextPageToken:
          $ref: "#/components/schemas/string"
    GetInstanceSnapshotsRequest:
      type: object
      properties:
        pageToken:
          $ref: "#/components/schemas/string"
    GetInstanceStateResult:
      type: object
      properties:
        state:
          $ref: "#/components/schemas/InstanceState"
    GetInstanceStateRequest:
      type: object
      required:
        - instanceName
      properties:
        instanceName:
          $ref: "#/components/schemas/ResourceName"
    GetInstancesResult:
      type: object
      properties:
        instances:
          $ref: "#/components/schemas/InstanceList"
        nextPageToken:
          $ref: "#/components/schemas/string"
    GetInstancesRequest:
      type: object
      properties:
        pageToken:
          $ref: "#/components/schemas/string"
    GetKeyPairResult:
      type: object
      properties:
        keyPair:
          $ref: "#/components/schemas/KeyPair"
    GetKeyPairRequest:
      type: object
      required:
        - keyPairName
      properties:
        keyPairName:
          $ref: "#/components/schemas/ResourceName"
    GetKeyPairsResult:
      type: object
      properties:
        keyPairs:
          $ref: "#/components/schemas/KeyPairList"
        nextPageToken:
          $ref: "#/components/schemas/string"
    GetKeyPairsRequest:
      type: object
      properties:
        pageToken:
          $ref: "#/components/schemas/string"
    GetLoadBalancerResult:
      type: object
      properties:
        loadBalancer:
          $ref: "#/components/schemas/LoadBalancer"
    GetLoadBalancerRequest:
      type: object
      required:
        - loadBalancerName
      properties:
        loadBalancerName:
          $ref: "#/components/schemas/ResourceName"
    GetLoadBalancerMetricDataResult:
      type: object
      properties:
        metricName:
          $ref: "#/components/schemas/LoadBalancerMetricName"
        metricData:
          $ref: "#/components/schemas/MetricDatapointList"
    GetLoadBalancerMetricDataRequest:
      type: object
      required:
        - loadBalancerName
        - metricName
        - period
        - startTime
        - endTime
        - unit
        - statistics
      properties:
        loadBalancerName:
          $ref: "#/components/schemas/ResourceName"
        metricName:
          $ref: "#/components/schemas/LoadBalancerMetricName"
        period:
          $ref: "#/components/schemas/MetricPeriod"
        startTime:
          $ref: "#/components/schemas/timestamp"
        endTime:
          $ref: "#/components/schemas/timestamp"
        unit:
          $ref: "#/components/schemas/MetricUnit"
        statistics:
          $ref: "#/components/schemas/MetricStatisticList"
    GetLoadBalancerTlsCertificatesResult:
      type: object
      properties:
        tlsCertificates:
          $ref: "#/components/schemas/LoadBalancerTlsCertificateList"
    GetLoadBalancerTlsCertificatesRequest:
      type: object
      required:
        - loadBalancerName
      properties:
        loadBalancerName:
          $ref: "#/components/schemas/ResourceName"
    GetLoadBalancersResult:
      type: object
      properties:
        loadBalancers:
          $ref: "#/components/schemas/LoadBalancerList"
        nextPageToken:
          $ref: "#/components/schemas/string"
    GetLoadBalancersRequest:
      type: object
      properties:
        pageToken:
          $ref: "#/components/schemas/string"
    GetOperationResult:
      type: object
      properties:
        operation:
          $ref: "#/components/schemas/Operation"
    GetOperationRequest:
      type: object
      required:
        - operationId
      properties:
        operationId:
          $ref: "#/components/schemas/NonEmptyString"
    GetOperationsResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
        nextPageToken:
          $ref: "#/components/schemas/string"
    GetOperationsRequest:
      type: object
      properties:
        pageToken:
          $ref: "#/components/schemas/string"
    GetOperationsForResourceResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
        nextPageCount:
          $ref: "#/components/schemas/string"
        nextPageToken:
          $ref: "#/components/schemas/string"
    GetOperationsForResourceRequest:
      type: object
      required:
        - resourceName
      properties:
        resourceName:
          $ref: "#/components/schemas/ResourceName"
        pageToken:
          $ref: "#/components/schemas/string"
    GetRegionsResult:
      type: object
      properties:
        regions:
          $ref: "#/components/schemas/RegionList"
    GetRegionsRequest:
      type: object
      properties:
        includeAvailabilityZones:
          $ref: "#/components/schemas/boolean"
        includeRelationalDatabaseAvailabilityZones:
          $ref: "#/components/schemas/boolean"
    GetRelationalDatabaseResult:
      type: object
      properties:
        relationalDatabase:
          $ref: "#/components/schemas/RelationalDatabase"
    GetRelationalDatabaseRequest:
      type: object
      required:
        - relationalDatabaseName
      properties:
        relationalDatabaseName:
          $ref: "#/components/schemas/ResourceName"
    GetRelationalDatabaseBlueprintsResult:
      type: object
      properties:
        blueprints:
          $ref: "#/components/schemas/RelationalDatabaseBlueprintList"
        nextPageToken:
          $ref: "#/components/schemas/string"
    GetRelationalDatabaseBlueprintsRequest:
      type: object
      properties:
        pageToken:
          $ref: "#/components/schemas/string"
    GetRelationalDatabaseBundlesResult:
      type: object
      properties:
        bundles:
          $ref: "#/components/schemas/RelationalDatabaseBundleList"
        nextPageToken:
          $ref: "#/components/schemas/string"
    GetRelationalDatabaseBundlesRequest:
      type: object
      properties:
        pageToken:
          $ref: "#/components/schemas/string"
    GetRelationalDatabaseEventsResult:
      type: object
      properties:
        relationalDatabaseEvents:
          $ref: "#/components/schemas/RelationalDatabaseEventList"
        nextPageToken:
          $ref: "#/components/schemas/string"
    GetRelationalDatabaseEventsRequest:
      type: object
      required:
        - relationalDatabaseName
      properties:
        relationalDatabaseName:
          $ref: "#/components/schemas/ResourceName"
        durationInMinutes:
          $ref: "#/components/schemas/integer"
        pageToken:
          $ref: "#/components/schemas/string"
    GetRelationalDatabaseLogEventsResult:
      type: object
      properties:
        resourceLogEvents:
          $ref: "#/components/schemas/LogEventList"
        nextBackwardToken:
          $ref: "#/components/schemas/string"
        nextForwardToken:
          $ref: "#/components/schemas/string"
    GetRelationalDatabaseLogEventsRequest:
      type: object
      required:
        - relationalDatabaseName
        - logStreamName
      properties:
        relationalDatabaseName:
          $ref: "#/components/schemas/ResourceName"
        logStreamName:
          $ref: "#/components/schemas/string"
        startTime:
          $ref: "#/components/schemas/IsoDate"
        endTime:
          $ref: "#/components/schemas/IsoDate"
        startFromHead:
          $ref: "#/components/schemas/boolean"
        pageToken:
          $ref: "#/components/schemas/string"
    GetRelationalDatabaseLogStreamsResult:
      type: object
      properties:
        logStreams:
          $ref: "#/components/schemas/StringList"
    GetRelationalDatabaseLogStreamsRequest:
      type: object
      required:
        - relationalDatabaseName
      properties:
        relationalDatabaseName:
          $ref: "#/components/schemas/ResourceName"
    GetRelationalDatabaseMasterUserPasswordResult:
      type: object
      properties:
        masterUserPassword:
          $ref: "#/components/schemas/SensitiveString"
        createdAt:
          $ref: "#/components/schemas/IsoDate"
    GetRelationalDatabaseMasterUserPasswordRequest:
      type: object
      required:
        - relationalDatabaseName
      properties:
        relationalDatabaseName:
          $ref: "#/components/schemas/ResourceName"
        passwordVersion:
          $ref: "#/components/schemas/RelationalDatabasePasswordVersion"
    GetRelationalDatabaseMetricDataResult:
      type: object
      properties:
        metricName:
          $ref: "#/components/schemas/RelationalDatabaseMetricName"
        metricData:
          $ref: "#/components/schemas/MetricDatapointList"
    GetRelationalDatabaseMetricDataRequest:
      type: object
      required:
        - relationalDatabaseName
        - metricName
        - period
        - startTime
        - endTime
        - unit
        - statistics
      properties:
        relationalDatabaseName:
          $ref: "#/components/schemas/ResourceName"
        metricName:
          $ref: "#/components/schemas/RelationalDatabaseMetricName"
        period:
          $ref: "#/components/schemas/MetricPeriod"
        startTime:
          $ref: "#/components/schemas/IsoDate"
        endTime:
          $ref: "#/components/schemas/IsoDate"
        unit:
          $ref: "#/components/schemas/MetricUnit"
        statistics:
          $ref: "#/components/schemas/MetricStatisticList"
    GetRelationalDatabaseParametersResult:
      type: object
      properties:
        parameters:
          $ref: "#/components/schemas/RelationalDatabaseParameterList"
        nextPageToken:
          $ref: "#/components/schemas/string"
    GetRelationalDatabaseParametersRequest:
      type: object
      required:
        - relationalDatabaseName
      properties:
        relationalDatabaseName:
          $ref: "#/components/schemas/ResourceName"
        pageToken:
          $ref: "#/components/schemas/string"
    GetRelationalDatabaseSnapshotResult:
      type: object
      properties:
        relationalDatabaseSnapshot:
          $ref: "#/components/schemas/RelationalDatabaseSnapshot"
    GetRelationalDatabaseSnapshotRequest:
      type: object
      required:
        - relationalDatabaseSnapshotName
      properties:
        relationalDatabaseSnapshotName:
          $ref: "#/components/schemas/ResourceName"
    GetRelationalDatabaseSnapshotsResult:
      type: object
      properties:
        relationalDatabaseSnapshots:
          $ref: "#/components/schemas/RelationalDatabaseSnapshotList"
        nextPageToken:
          $ref: "#/components/schemas/string"
    GetRelationalDatabaseSnapshotsRequest:
      type: object
      properties:
        pageToken:
          $ref: "#/components/schemas/string"
    GetRelationalDatabasesResult:
      type: object
      properties:
        relationalDatabases:
          $ref: "#/components/schemas/RelationalDatabaseList"
        nextPageToken:
          $ref: "#/components/schemas/string"
    GetRelationalDatabasesRequest:
      type: object
      properties:
        pageToken:
          $ref: "#/components/schemas/string"
    GetStaticIpResult:
      type: object
      properties:
        staticIp:
          $ref: "#/components/schemas/StaticIp"
    GetStaticIpRequest:
      type: object
      required:
        - staticIpName
      properties:
        staticIpName:
          $ref: "#/components/schemas/ResourceName"
    GetStaticIpsResult:
      type: object
      properties:
        staticIps:
          $ref: "#/components/schemas/StaticIpList"
        nextPageToken:
          $ref: "#/components/schemas/string"
    GetStaticIpsRequest:
      type: object
      properties:
        pageToken:
          $ref: "#/components/schemas/string"
    ImportKeyPairResult:
      type: object
      properties:
        operation:
          $ref: "#/components/schemas/Operation"
    ImportKeyPairRequest:
      type: object
      required:
        - keyPairName
        - publicKeyBase64
      properties:
        keyPairName:
          $ref: "#/components/schemas/ResourceName"
        publicKeyBase64:
          $ref: "#/components/schemas/Base64"
    IsVpcPeeredResult:
      type: object
      properties:
        isPeered:
          $ref: "#/components/schemas/boolean"
    IsVpcPeeredRequest:
      type: object
      properties: {}
    OpenInstancePublicPortsResult:
      type: object
      properties:
        operation:
          $ref: "#/components/schemas/Operation"
    OpenInstancePublicPortsRequest:
      type: object
      required:
        - portInfo
        - instanceName
      properties:
        portInfo:
          $ref: "#/components/schemas/PortInfo"
        instanceName:
          $ref: "#/components/schemas/ResourceName"
    PeerVpcResult:
      type: object
      properties:
        operation:
          $ref: "#/components/schemas/Operation"
    PeerVpcRequest:
      type: object
      properties: {}
    PutInstancePublicPortsResult:
      type: object
      properties:
        operation:
          $ref: "#/components/schemas/Operation"
    PutInstancePublicPortsRequest:
      type: object
      required:
        - portInfos
        - instanceName
      properties:
        portInfos:
          $ref: "#/components/schemas/PortInfoList"
        instanceName:
          $ref: "#/components/schemas/ResourceName"
    RebootInstanceResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    RebootInstanceRequest:
      type: object
      required:
        - instanceName
      properties:
        instanceName:
          $ref: "#/components/schemas/ResourceName"
    RebootRelationalDatabaseResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    RebootRelationalDatabaseRequest:
      type: object
      required:
        - relationalDatabaseName
      properties:
        relationalDatabaseName:
          $ref: "#/components/schemas/ResourceName"
    ReleaseStaticIpResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    ReleaseStaticIpRequest:
      type: object
      required:
        - staticIpName
      properties:
        staticIpName:
          $ref: "#/components/schemas/ResourceName"
    StartInstanceResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    StartInstanceRequest:
      type: object
      required:
        - instanceName
      properties:
        instanceName:
          $ref: "#/components/schemas/ResourceName"
    StartRelationalDatabaseResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    StartRelationalDatabaseRequest:
      type: object
      required:
        - relationalDatabaseName
      properties:
        relationalDatabaseName:
          $ref: "#/components/schemas/ResourceName"
    StopInstanceResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    StopInstanceRequest:
      type: object
      required:
        - instanceName
      properties:
        instanceName:
          $ref: "#/components/schemas/ResourceName"
        force:
          $ref: "#/components/schemas/boolean"
    StopRelationalDatabaseResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    StopRelationalDatabaseRequest:
      type: object
      required:
        - relationalDatabaseName
      properties:
        relationalDatabaseName:
          $ref: "#/components/schemas/ResourceName"
        relationalDatabaseSnapshotName:
          $ref: "#/components/schemas/ResourceName"
    TagResourceResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    TagResourceRequest:
      type: object
      required:
        - resourceName
        - tags
      properties:
        resourceName:
          $ref: "#/components/schemas/ResourceName"
        resourceArn:
          $ref: "#/components/schemas/ResourceArn"
        tags:
          $ref: "#/components/schemas/TagList"
    UnpeerVpcResult:
      type: object
      properties:
        operation:
          $ref: "#/components/schemas/Operation"
    UnpeerVpcRequest:
      type: object
      properties: {}
    UntagResourceResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    UntagResourceRequest:
      type: object
      required:
        - resourceName
        - tagKeys
      properties:
        resourceName:
          $ref: "#/components/schemas/ResourceName"
        resourceArn:
          $ref: "#/components/schemas/ResourceArn"
        tagKeys:
          $ref: "#/components/schemas/TagKeyList"
    UpdateDomainEntryResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    UpdateDomainEntryRequest:
      type: object
      required:
        - domainName
        - domainEntry
      properties:
        domainName:
          $ref: "#/components/schemas/DomainName"
        domainEntry:
          $ref: "#/components/schemas/DomainEntry"
    UpdateLoadBalancerAttributeResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    UpdateLoadBalancerAttributeRequest:
      type: object
      required:
        - loadBalancerName
        - attributeName
        - attributeValue
      properties:
        loadBalancerName:
          $ref: "#/components/schemas/ResourceName"
        attributeName:
          $ref: "#/components/schemas/LoadBalancerAttributeName"
        attributeValue:
          $ref: "#/components/schemas/StringMax256"
    UpdateRelationalDatabaseResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    UpdateRelationalDatabaseRequest:
      type: object
      required:
        - relationalDatabaseName
      properties:
        relationalDatabaseName:
          $ref: "#/components/schemas/ResourceName"
        masterUserPassword:
          $ref: "#/components/schemas/SensitiveString"
        rotateMasterUserPassword:
          $ref: "#/components/schemas/boolean"
        preferredBackupWindow:
          $ref: "#/components/schemas/string"
        preferredMaintenanceWindow:
          $ref: "#/components/schemas/string"
        enableBackupRetention:
          $ref: "#/components/schemas/boolean"
        disableBackupRetention:
          $ref: "#/components/schemas/boolean"
        publiclyAccessible:
          $ref: "#/components/schemas/boolean"
        applyImmediately:
          $ref: "#/components/schemas/boolean"
    UpdateRelationalDatabaseParametersResult:
      type: object
      properties:
        operations:
          $ref: "#/components/schemas/OperationList"
    UpdateRelationalDatabaseParametersRequest:
      type: object
      required:
        - relationalDatabaseName
        - parameters
      properties:
        relationalDatabaseName:
          $ref: "#/components/schemas/ResourceName"
        parameters:
          $ref: "#/components/schemas/RelationalDatabaseParameterList"
    AccessDirection:
      type: string
      enum:
        - inbound
        - outbound
    string:
      type: string
    TimeOfDay:
      type: string
      pattern: ^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$
    AddOn:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/string"
        status:
          $ref: "#/components/schemas/string"
        snapshotTimeOfDay:
          $ref: "#/components/schemas/TimeOfDay"
        nextSnapshotTimeOfDay:
          $ref: "#/components/schemas/TimeOfDay"
      description: Describes an add-on that is enabled for an Amazon Lightsail resource.
    AddOnList:
      type: array
      items:
        $ref: "#/components/schemas/AddOn"
    AddOnType:
      type: string
      enum:
        - AutoSnapshot
    AutoSnapshotAddOnRequest:
      type: object
      properties:
        snapshotTimeOfDay:
          $ref: "#/components/schemas/TimeOfDay"
      description: <p>Describes a request to enable or modify the automatic snapshot add-on
        for an Amazon Lightsail instance or disk.</p> <p>When you modify the
        automatic snapshot time for a resource, it is typically effective
        immediately except under the following conditions:</p> <ul> <li> <p>If
        an automatic snapshot has been created for the current day, and you
        change the snapshot time to a later time of day, then the new snapshot
        time will be effective the following day. This ensures that two
        snapshots are not created for the current day.</p> </li> <li> <p>If an
        automatic snapshot has not yet been created for the current day, and you
        change the snapshot time to an earlier time of day, then the new
        snapshot time will be effective the following day and a snapshot is
        automatically created at the previously set time for the current day.
        This ensures that a snapshot is created for the current day.</p> </li>
        <li> <p>If an automatic snapshot has not yet been created for the
        current day, and you change the snapshot time to a time that is within
        30 minutes from your current time, then the new snapshot time will be
        effective the following day and a snapshot is automatically created at
        the previously set time for the current day. This ensures that a
        snapshot is created for the current day, because 30 minutes is required
        between your current time and the new snapshot time that you
        specify.</p> </li> <li> <p>If an automatic snapshot is scheduled to be
        created within 30 minutes from your current time and you change the
        snapshot time, then the new snapshot time will be effective the
        following day and a snapshot is automatically created at the previously
        set time for the current day. This ensures that a snapshot is created
        for the current day, because 30 minutes is required between your current
        time and the new snapshot time that you specify.</p> </li> </ul>
    AddOnRequest:
      type: object
      required:
        - addOnType
      properties:
        addOnType:
          $ref: "#/components/schemas/AddOnType"
        autoSnapshotAddOnRequest:
          $ref: "#/components/schemas/AutoSnapshotAddOnRequest"
      description: <p>Describes a request to enable, modify, or disable an add-on for an
        Amazon Lightsail resource.</p> <note> <p>An additional cost may be
        associated with enabling add-ons. For more information, see the <a
        href="https://aws.amazon.com/lightsail/pricing/">Lightsail pricing
        page</a>.</p> </note>
    AddOnRequestList:
      type: array
      items:
        $ref: "#/components/schemas/AddOnRequest"
    ResourceName:
      type: string
      pattern: \w[\w\-]*\w
    OperationList:
      type: array
      items:
        $ref: "#/components/schemas/Operation"
    NonEmptyString:
      type: string
      pattern: .*\S.*
    ResourceNameList:
      type: array
      items:
        $ref: "#/components/schemas/ResourceName"
    integer:
      type: integer
    AttachedDisk:
      type: object
      properties:
        path:
          $ref: "#/components/schemas/string"
        sizeInGb:
          $ref: "#/components/schemas/integer"
      description: Describes a block storage disk that is attached to an instance, and is
        included in an automatic snapshot.
    AttachedDiskList:
      type: array
      items:
        $ref: "#/components/schemas/AttachedDisk"
    DiskMapList:
      type: array
      items:
        $ref: "#/components/schemas/DiskMap"
    AttachedDiskMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/DiskMapList"
    AutoSnapshotDate:
      type: string
      pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}$
    IsoDate:
      type: string
      format: date-time
    AutoSnapshotStatus:
      type: string
      enum:
        - Success
        - Failed
        - InProgress
        - NotFound
    AutoSnapshotDetails:
      type: object
      properties:
        date:
          $ref: "#/components/schemas/string"
        createdAt:
          $ref: "#/components/schemas/IsoDate"
        status:
          $ref: "#/components/schemas/AutoSnapshotStatus"
        fromAttachedDisks:
          $ref: "#/components/schemas/AttachedDiskList"
      description: Describes an automatic snapshot.
    AutoSnapshotDetailsList:
      type: array
      items:
        $ref: "#/components/schemas/AutoSnapshotDetails"
    AvailabilityZone:
      type: object
      properties:
        zoneName:
          $ref: "#/components/schemas/NonEmptyString"
        state:
          $ref: "#/components/schemas/NonEmptyString"
      description: Describes an Availability Zone.
    AvailabilityZoneList:
      type: array
      items:
        $ref: "#/components/schemas/AvailabilityZone"
    Base64:
      type: string
    BlueprintType:
      type: string
      enum:
        - os
        - app
    boolean:
      type: boolean
    InstancePlatform:
      type: string
      enum:
        - LINUX_UNIX
        - WINDOWS
    Blueprint:
      type: object
      properties:
        blueprintId:
          $ref: "#/components/schemas/NonEmptyString"
        name:
          $ref: "#/components/schemas/ResourceName"
        group:
          $ref: "#/components/schemas/NonEmptyString"
        type:
          $ref: "#/components/schemas/BlueprintType"
        description:
          $ref: "#/components/schemas/string"
        isActive:
          $ref: "#/components/schemas/boolean"
        minPower:
          $ref: "#/components/schemas/integer"
        version:
          $ref: "#/components/schemas/string"
        versionCode:
          $ref: "#/components/schemas/string"
        productUrl:
          $ref: "#/components/schemas/string"
        licenseUrl:
          $ref: "#/components/schemas/string"
        platform:
          $ref: "#/components/schemas/InstancePlatform"
      description: Describes a blueprint (a virtual private server image).
    BlueprintList:
      type: array
      items:
        $ref: "#/components/schemas/Blueprint"
    float:
      type: number
      format: float
    InstancePlatformList:
      type: array
      items:
        $ref: "#/components/schemas/InstancePlatform"
    Bundle:
      type: object
      properties:
        price:
          $ref: "#/components/schemas/float"
        cpuCount:
          $ref: "#/components/schemas/integer"
        diskSizeInGb:
          $ref: "#/components/schemas/integer"
        bundleId:
          $ref: "#/components/schemas/NonEmptyString"
        instanceType:
          $ref: "#/components/schemas/string"
        isActive:
          $ref: "#/components/schemas/boolean"
        name:
          $ref: "#/components/schemas/string"
        power:
          $ref: "#/components/schemas/integer"
        ramSizeInGb:
          $ref: "#/components/schemas/float"
        transferPerMonthInGb:
          $ref: "#/components/schemas/integer"
        supportedPlatforms:
          $ref: "#/components/schemas/InstancePlatformList"
      description: Describes a bundle, which is a set of specs describing your virtual
        private server (or <i>instance</i>).
    BundleList:
      type: array
      items:
        $ref: "#/components/schemas/Bundle"
    PortInfo:
      type: object
      properties:
        fromPort:
          $ref: "#/components/schemas/Port"
        toPort:
          $ref: "#/components/schemas/Port"
        protocol:
          $ref: "#/components/schemas/NetworkProtocol"
      description: Describes information about the ports on your virtual private server (or
        <i>instance</i>).
    Operation:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/NonEmptyString"
        resourceName:
          $ref: "#/components/schemas/ResourceName"
        resourceType:
          $ref: "#/components/schemas/ResourceType"
        createdAt:
          $ref: "#/components/schemas/IsoDate"
        location:
          $ref: "#/components/schemas/ResourceLocation"
        isTerminal:
          $ref: "#/components/schemas/boolean"
        operationDetails:
          $ref: "#/components/schemas/string"
        operationType:
          $ref: "#/components/schemas/OperationType"
        status:
          $ref: "#/components/schemas/OperationStatus"
        statusChangedAt:
          $ref: "#/components/schemas/IsoDate"
        errorCode:
          $ref: "#/components/schemas/string"
        errorDetails:
          $ref: "#/components/schemas/string"
      description: Describes the API operation.
    ResourceLocation:
      type: object
      properties:
        availabilityZone:
          $ref: "#/components/schemas/string"
        regionName:
          $ref: "#/components/schemas/RegionName"
      description: Describes the resource location.
    ResourceType:
      type: string
      enum:
        - Instance
        - StaticIp
        - KeyPair
        - InstanceSnapshot
        - Domain
        - PeeredVpc
        - LoadBalancer
        - LoadBalancerTlsCertificate
        - Disk
        - DiskSnapshot
        - RelationalDatabase
        - RelationalDatabaseSnapshot
        - ExportSnapshotRecord
        - CloudFormationStackRecord
    RecordState:
      type: string
      enum:
        - Started
        - Succeeded
        - Failed
    CloudFormationStackRecordSourceInfoList:
      type: array
      items:
        $ref: "#/components/schemas/CloudFormationStackRecordSourceInfo"
    DestinationInfo:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/NonEmptyString"
        service:
          $ref: "#/components/schemas/NonEmptyString"
      description: Describes the destination of a record.
    CloudFormationStackRecord:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ResourceName"
        arn:
          $ref: "#/components/schemas/NonEmptyString"
        createdAt:
          $ref: "#/components/schemas/IsoDate"
        location:
          $ref: "#/components/schemas/ResourceLocation"
        resourceType:
          $ref: "#/components/schemas/ResourceType"
        state:
          $ref: "#/components/schemas/RecordState"
        sourceInfo:
          $ref: "#/components/schemas/CloudFormationStackRecordSourceInfoList"
        destinationInfo:
          $ref: "#/components/schemas/DestinationInfo"
      description: <p>Describes a CloudFormation stack record created as a result of the
        <code>create cloud formation stack</code> operation.</p> <p>A
        CloudFormation stack record provides information about the AWS
        CloudFormation stack used to create a new Amazon Elastic Compute Cloud
        instance from an exported Lightsail instance snapshot.</p>
    CloudFormationStackRecordList:
      type: array
      items:
        $ref: "#/components/schemas/CloudFormationStackRecord"
    CloudFormationStackRecordSourceType:
      type: string
      enum:
        - ExportSnapshotRecord
    CloudFormationStackRecordSourceInfo:
      type: object
      properties:
        resourceType:
          $ref: "#/components/schemas/CloudFormationStackRecordSourceType"
        name:
          $ref: "#/components/schemas/NonEmptyString"
        arn:
          $ref: "#/components/schemas/NonEmptyString"
      description: Describes the source of a CloudFormation stack record (i.e., the export
        snapshot record).
    RegionName:
      type: string
      enum:
        - us-east-1
        - us-east-2
        - us-west-1
        - us-west-2
        - eu-west-1
        - eu-west-2
        - eu-west-3
        - eu-central-1
        - ca-central-1
        - ap-south-1
        - ap-southeast-1
        - ap-southeast-2
        - ap-northeast-1
        - ap-northeast-2
    InstanceEntryList:
      type: array
      items:
        $ref: "#/components/schemas/InstanceEntry"
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    DomainName:
      type: string
    DomainEntry:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/NonEmptyString"
        name:
          $ref: "#/components/schemas/DomainName"
        target:
          $ref: "#/components/schemas/string"
        isAlias:
          $ref: "#/components/schemas/boolean"
        type:
          $ref: "#/components/schemas/DomainEntryType"
        options:
          $ref: "#/components/schemas/DomainEntryOptions"
      description: Describes a domain recordset entry.
    StringList:
      type: array
      items:
        $ref: "#/components/schemas/string"
    KeyPair:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ResourceName"
        arn:
          $ref: "#/components/schemas/NonEmptyString"
        supportCode:
          $ref: "#/components/schemas/string"
        createdAt:
          $ref: "#/components/schemas/IsoDate"
        location:
          $ref: "#/components/schemas/ResourceLocation"
        resourceType:
          $ref: "#/components/schemas/ResourceType"
        tags:
          $ref: "#/components/schemas/TagList"
        fingerprint:
          $ref: "#/components/schemas/Base64"
      description: Describes the SSH key pair.
    Port:
      type: integer
      minimum: 0
      maximum: 65535
    DomainNameList:
      type: array
      items:
        $ref: "#/components/schemas/DomainName"
    SensitiveString:
      type: string
      format: password
    DiskState:
      type: string
      enum:
        - pending
        - error
        - available
        - in-use
        - unknown
    Disk:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ResourceName"
        arn:
          $ref: "#/components/schemas/NonEmptyString"
        supportCode:
          $ref: "#/components/schemas/string"
        createdAt:
          $ref: "#/components/schemas/IsoDate"
        location:
          $ref: "#/components/schemas/ResourceLocation"
        resourceType:
          $ref: "#/components/schemas/ResourceType"
        tags:
          $ref: "#/components/schemas/TagList"
        addOns:
          $ref: "#/components/schemas/AddOnList"
        sizeInGb:
          $ref: "#/components/schemas/integer"
        isSystemDisk:
          $ref: "#/components/schemas/boolean"
        iops:
          $ref: "#/components/schemas/integer"
        path:
          $ref: "#/components/schemas/string"
        state:
          $ref: "#/components/schemas/DiskState"
        attachedTo:
          $ref: "#/components/schemas/ResourceName"
        isAttached:
          $ref: "#/components/schemas/boolean"
        attachmentState:
          $ref: "#/components/schemas/string"
        gbInUse:
          $ref: "#/components/schemas/integer"
      description: Describes a system disk or a block storage disk.
    DiskInfo:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/string"
        path:
          $ref: "#/components/schemas/NonEmptyString"
        sizeInGb:
          $ref: "#/components/schemas/integer"
        isSystemDisk:
          $ref: "#/components/schemas/boolean"
      description: Describes a disk.
    DiskInfoList:
      type: array
      items:
        $ref: "#/components/schemas/DiskInfo"
    DiskList:
      type: array
      items:
        $ref: "#/components/schemas/Disk"
    DiskMap:
      type: object
      properties:
        originalDiskPath:
          $ref: "#/components/schemas/NonEmptyString"
        newDiskName:
          $ref: "#/components/schemas/ResourceName"
      description: Describes a block storage disk mapping.
    DiskSnapshotState:
      type: string
      enum:
        - pending
        - completed
        - error
        - unknown
    DiskSnapshot:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ResourceName"
        arn:
          $ref: "#/components/schemas/NonEmptyString"
        supportCode:
          $ref: "#/components/schemas/string"
        createdAt:
          $ref: "#/components/schemas/IsoDate"
        location:
          $ref: "#/components/schemas/ResourceLocation"
        resourceType:
          $ref: "#/components/schemas/ResourceType"
        tags:
          $ref: "#/components/schemas/TagList"
        sizeInGb:
          $ref: "#/components/schemas/integer"
        state:
          $ref: "#/components/schemas/DiskSnapshotState"
        progress:
          $ref: "#/components/schemas/string"
        fromDiskName:
          $ref: "#/components/schemas/ResourceName"
        fromDiskArn:
          $ref: "#/components/schemas/NonEmptyString"
        fromInstanceName:
          $ref: "#/components/schemas/ResourceName"
        fromInstanceArn:
          $ref: "#/components/schemas/NonEmptyString"
        isFromAutoSnapshot:
          $ref: "#/components/schemas/boolean"
      description: Describes a block storage disk snapshot.
    DiskSnapshotInfo:
      type: object
      properties:
        sizeInGb:
          $ref: "#/components/schemas/integer"
      description: Describes a disk snapshot.
    DiskSnapshotList:
      type: array
      items:
        $ref: "#/components/schemas/DiskSnapshot"
    DomainEntryList:
      type: array
      items:
        $ref: "#/components/schemas/DomainEntry"
    Domain:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ResourceName"
        arn:
          $ref: "#/components/schemas/NonEmptyString"
        supportCode:
          $ref: "#/components/schemas/string"
        createdAt:
          $ref: "#/components/schemas/IsoDate"
        location:
          $ref: "#/components/schemas/ResourceLocation"
        resourceType:
          $ref: "#/components/schemas/ResourceType"
        tags:
          $ref: "#/components/schemas/TagList"
        domainEntries:
          $ref: "#/components/schemas/DomainEntryList"
      description: Describes a domain where you are storing recordsets in Lightsail.
    DomainEntryType:
      type: string
    DomainEntryOptions:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/string"
    DomainEntryOptionsKeys:
      type: string
    DomainList:
      type: array
      items:
        $ref: "#/components/schemas/Domain"
    ExportSnapshotRecordSourceInfo:
      type: object
      properties:
        resourceType:
          $ref: "#/components/schemas/ExportSnapshotRecordSourceType"
        createdAt:
          $ref: "#/components/schemas/IsoDate"
        name:
          $ref: "#/components/schemas/NonEmptyString"
        arn:
          $ref: "#/components/schemas/NonEmptyString"
        fromResourceName:
          $ref: "#/components/schemas/NonEmptyString"
        fromResourceArn:
          $ref: "#/components/schemas/NonEmptyString"
        instanceSnapshotInfo:
          $ref: "#/components/schemas/InstanceSnapshotInfo"
        diskSnapshotInfo:
          $ref: "#/components/schemas/DiskSnapshotInfo"
      description: Describes the source of an export snapshot record.
    ExportSnapshotRecord:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ResourceName"
        arn:
          $ref: "#/components/schemas/NonEmptyString"
        createdAt:
          $ref: "#/components/schemas/IsoDate"
        location:
          $ref: "#/components/schemas/ResourceLocation"
        resourceType:
          $ref: "#/components/schemas/ResourceType"
        state:
          $ref: "#/components/schemas/RecordState"
        sourceInfo:
          $ref: "#/components/schemas/ExportSnapshotRecordSourceInfo"
        destinationInfo:
          $ref: "#/components/schemas/DestinationInfo"
      description: Describes an export snapshot record.
    ExportSnapshotRecordList:
      type: array
      items:
        $ref: "#/components/schemas/ExportSnapshotRecord"
    ExportSnapshotRecordSourceType:
      type: string
      enum:
        - InstanceSnapshot
        - DiskSnapshot
    InstanceSnapshotInfo:
      type: object
      properties:
        fromBundleId:
          $ref: "#/components/schemas/NonEmptyString"
        fromBlueprintId:
          $ref: "#/components/schemas/NonEmptyString"
        fromDiskInfo:
          $ref: "#/components/schemas/DiskInfoList"
      description: Describes an instance snapshot.
    InstanceAccessProtocol:
      type: string
      enum:
        - ssh
        - rdp
    InstanceAccessDetails:
      type: object
      properties:
        certKey:
          $ref: "#/components/schemas/string"
        expiresAt:
          $ref: "#/components/schemas/IsoDate"
        ipAddress:
          $ref: "#/components/schemas/IpAddress"
        password:
          $ref: "#/components/schemas/string"
        passwordData:
          $ref: "#/components/schemas/PasswordData"
        privateKey:
          $ref: "#/components/schemas/string"
        protocol:
          $ref: "#/components/schemas/InstanceAccessProtocol"
        instanceName:
          $ref: "#/components/schemas/ResourceName"
        username:
          $ref: "#/components/schemas/string"
        hostKeys:
          $ref: "#/components/schemas/HostKeysList"
      description: The parameters for gaining temporary access to one of your Amazon
        Lightsail instances.
    InstanceMetricName:
      type: string
      enum:
        - CPUUtilization
        - NetworkIn
        - NetworkOut
        - StatusCheckFailed
        - StatusCheckFailed_Instance
        - StatusCheckFailed_System
    MetricPeriod:
      type: integer
      minimum: 60
      maximum: 86400
    timestamp:
      type: string
      format: date-time
    MetricUnit:
      type: string
      enum:
        - Seconds
        - Microseconds
        - Milliseconds
        - Bytes
        - Kilobytes
        - Megabytes
        - Gigabytes
        - Terabytes
        - Bits
        - Kilobits
        - Megabits
        - Gigabits
        - Terabits
        - Percent
        - Count
        - Bytes/Second
        - Kilobytes/Second
        - Megabytes/Second
        - Gigabytes/Second
        - Terabytes/Second
        - Bits/Second
        - Kilobits/Second
        - Megabits/Second
        - Gigabits/Second
        - Terabits/Second
        - Count/Second
        - None
    MetricStatisticList:
      type: array
      items:
        $ref: "#/components/schemas/MetricStatistic"
    MetricDatapointList:
      type: array
      items:
        $ref: "#/components/schemas/MetricDatapoint"
    InstancePortStateList:
      type: array
      items:
        $ref: "#/components/schemas/InstancePortState"
    Instance:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ResourceName"
        arn:
          $ref: "#/components/schemas/NonEmptyString"
        supportCode:
          $ref: "#/components/schemas/string"
        createdAt:
          $ref: "#/components/schemas/IsoDate"
        location:
          $ref: "#/components/schemas/ResourceLocation"
        resourceType:
          $ref: "#/components/schemas/ResourceType"
        tags:
          $ref: "#/components/schemas/TagList"
        blueprintId:
          $ref: "#/components/schemas/NonEmptyString"
        blueprintName:
          $ref: "#/components/schemas/NonEmptyString"
        bundleId:
          $ref: "#/components/schemas/NonEmptyString"
        addOns:
          $ref: "#/components/schemas/AddOnList"
        isStaticIp:
          $ref: "#/components/schemas/boolean"
        privateIpAddress:
          $ref: "#/components/schemas/IpAddress"
        publicIpAddress:
          $ref: "#/components/schemas/IpAddress"
        ipv6Address:
          $ref: "#/components/schemas/IpV6Address"
        hardware:
          $ref: "#/components/schemas/InstanceHardware"
        networking:
          $ref: "#/components/schemas/InstanceNetworking"
        state:
          $ref: "#/components/schemas/InstanceState"
        username:
          $ref: "#/components/schemas/NonEmptyString"
        sshKeyName:
          $ref: "#/components/schemas/ResourceName"
      description: Describes an instance (a virtual private server).
    InstanceSnapshot:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ResourceName"
        arn:
          $ref: "#/components/schemas/NonEmptyString"
        supportCode:
          $ref: "#/components/schemas/string"
        createdAt:
          $ref: "#/components/schemas/IsoDate"
        location:
          $ref: "#/components/schemas/ResourceLocation"
        resourceType:
          $ref: "#/components/schemas/ResourceType"
        tags:
          $ref: "#/components/schemas/TagList"
        state:
          $ref: "#/components/schemas/InstanceSnapshotState"
        progress:
          $ref: "#/components/schemas/string"
        fromAttachedDisks:
          $ref: "#/components/schemas/DiskList"
        fromInstanceName:
          $ref: "#/components/schemas/ResourceName"
        fromInstanceArn:
          $ref: "#/components/schemas/NonEmptyString"
        fromBlueprintId:
          $ref: "#/components/schemas/string"
        fromBundleId:
          $ref: "#/components/schemas/string"
        isFromAutoSnapshot:
          $ref: "#/components/schemas/boolean"
        sizeInGb:
          $ref: "#/components/schemas/integer"
      description: Describes an instance snapshot.
    InstanceSnapshotList:
      type: array
      items:
        $ref: "#/components/schemas/InstanceSnapshot"
    InstanceState:
      type: object
      properties:
        code:
          $ref: "#/components/schemas/integer"
        name:
          $ref: "#/components/schemas/string"
      description: Describes the virtual private server (or <i>instance</i>) status.
    InstanceList:
      type: array
      items:
        $ref: "#/components/schemas/Instance"
    KeyPairList:
      type: array
      items:
        $ref: "#/components/schemas/KeyPair"
    LoadBalancerMetricName:
      type: string
      enum:
        - ClientTLSNegotiationErrorCount
        - HealthyHostCount
        - UnhealthyHostCount
        - HTTPCode_LB_4XX_Count
        - HTTPCode_LB_5XX_Count
        - HTTPCode_Instance_2XX_Count
        - HTTPCode_Instance_3XX_Count
        - HTTPCode_Instance_4XX_Count
        - HTTPCode_Instance_5XX_Count
        - InstanceResponseTime
        - RejectedConnectionCount
        - RequestCount
    LoadBalancer:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ResourceName"
        arn:
          $ref: "#/components/schemas/NonEmptyString"
        supportCode:
          $ref: "#/components/schemas/string"
        createdAt:
          $ref: "#/components/schemas/IsoDate"
        location:
          $ref: "#/components/schemas/ResourceLocation"
        resourceType:
          $ref: "#/components/schemas/ResourceType"
        tags:
          $ref: "#/components/schemas/TagList"
        dnsName:
          $ref: "#/components/schemas/NonEmptyString"
        state:
          $ref: "#/components/schemas/LoadBalancerState"
        protocol:
          $ref: "#/components/schemas/LoadBalancerProtocol"
        publicPorts:
          $ref: "#/components/schemas/PortList"
        healthCheckPath:
          $ref: "#/components/schemas/NonEmptyString"
        instancePort:
          $ref: "#/components/schemas/integer"
        instanceHealthSummary:
          $ref: "#/components/schemas/InstanceHealthSummaryList"
        tlsCertificateSummaries:
          $ref: "#/components/schemas/LoadBalancerTlsCertificateSummaryList"
        configurationOptions:
          $ref: "#/components/schemas/LoadBalancerConfigurationOptions"
      description: Describes the Lightsail load balancer.
    LoadBalancerTlsCertificateList:
      type: array
      items:
        $ref: "#/components/schemas/LoadBalancerTlsCertificate"
    LoadBalancerList:
      type: array
      items:
        $ref: "#/components/schemas/LoadBalancer"
    RegionList:
      type: array
      items:
        $ref: "#/components/schemas/Region"
    RelationalDatabaseBlueprintList:
      type: array
      items:
        $ref: "#/components/schemas/RelationalDatabaseBlueprint"
    RelationalDatabaseBundleList:
      type: array
      items:
        $ref: "#/components/schemas/RelationalDatabaseBundle"
    RelationalDatabaseEventList:
      type: array
      items:
        $ref: "#/components/schemas/RelationalDatabaseEvent"
    LogEventList:
      type: array
      items:
        $ref: "#/components/schemas/LogEvent"
    RelationalDatabasePasswordVersion:
      type: string
      enum:
        - CURRENT
        - PREVIOUS
        - PENDING
    RelationalDatabaseMetricName:
      type: string
      enum:
        - CPUUtilization
        - DatabaseConnections
        - DiskQueueDepth
        - FreeStorageSpace
        - NetworkReceiveThroughput
        - NetworkTransmitThroughput
    RelationalDatabaseParameterList:
      type: array
      items:
        $ref: "#/components/schemas/RelationalDatabaseParameter"
    RelationalDatabase:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ResourceName"
        arn:
          $ref: "#/components/schemas/NonEmptyString"
        supportCode:
          $ref: "#/components/schemas/string"
        createdAt:
          $ref: "#/components/schemas/IsoDate"
        location:
          $ref: "#/components/schemas/ResourceLocation"
        resourceType:
          $ref: "#/components/schemas/ResourceType"
        tags:
          $ref: "#/components/schemas/TagList"
        relationalDatabaseBlueprintId:
          $ref: "#/components/schemas/NonEmptyString"
        relationalDatabaseBundleId:
          $ref: "#/components/schemas/NonEmptyString"
        masterDatabaseName:
          $ref: "#/components/schemas/string"
        hardware:
          $ref: "#/components/schemas/RelationalDatabaseHardware"
        state:
          $ref: "#/components/schemas/NonEmptyString"
        secondaryAvailabilityZone:
          $ref: "#/components/schemas/string"
        backupRetentionEnabled:
          $ref: "#/components/schemas/boolean"
        pendingModifiedValues:
          $ref: "#/components/schemas/PendingModifiedRelationalDatabaseValues"
        engine:
          $ref: "#/components/schemas/NonEmptyString"
        engineVersion:
          $ref: "#/components/schemas/NonEmptyString"
        latestRestorableTime:
          $ref: "#/components/schemas/IsoDate"
        masterUsername:
          $ref: "#/components/schemas/NonEmptyString"
        parameterApplyStatus:
          $ref: "#/components/schemas/NonEmptyString"
        preferredBackupWindow:
          $ref: "#/components/schemas/NonEmptyString"
        preferredMaintenanceWindow:
          $ref: "#/components/schemas/NonEmptyString"
        publiclyAccessible:
          $ref: "#/components/schemas/boolean"
        masterEndpoint:
          $ref: "#/components/schemas/RelationalDatabaseEndpoint"
        pendingMaintenanceActions:
          $ref: "#/components/schemas/PendingMaintenanceActionList"
      description: Describes a database.
    RelationalDatabaseSnapshot:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ResourceName"
        arn:
          $ref: "#/components/schemas/NonEmptyString"
        supportCode:
          $ref: "#/components/schemas/string"
        createdAt:
          $ref: "#/components/schemas/IsoDate"
        location:
          $ref: "#/components/schemas/ResourceLocation"
        resourceType:
          $ref: "#/components/schemas/ResourceType"
        tags:
          $ref: "#/components/schemas/TagList"
        engine:
          $ref: "#/components/schemas/NonEmptyString"
        engineVersion:
          $ref: "#/components/schemas/NonEmptyString"
        sizeInGb:
          $ref: "#/components/schemas/integer"
        state:
          $ref: "#/components/schemas/NonEmptyString"
        fromRelationalDatabaseName:
          $ref: "#/components/schemas/NonEmptyString"
        fromRelationalDatabaseArn:
          $ref: "#/components/schemas/NonEmptyString"
        fromRelationalDatabaseBundleId:
          $ref: "#/components/schemas/string"
        fromRelationalDatabaseBlueprintId:
          $ref: "#/components/schemas/string"
      description: Describes a database snapshot.
    RelationalDatabaseSnapshotList:
      type: array
      items:
        $ref: "#/components/schemas/RelationalDatabaseSnapshot"
    RelationalDatabaseList:
      type: array
      items:
        $ref: "#/components/schemas/RelationalDatabase"
    StaticIp:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ResourceName"
        arn:
          $ref: "#/components/schemas/NonEmptyString"
        supportCode:
          $ref: "#/components/schemas/string"
        createdAt:
          $ref: "#/components/schemas/IsoDate"
        location:
          $ref: "#/components/schemas/ResourceLocation"
        resourceType:
          $ref: "#/components/schemas/ResourceType"
        ipAddress:
          $ref: "#/components/schemas/IpAddress"
        attachedTo:
          $ref: "#/components/schemas/ResourceName"
        isAttached:
          $ref: "#/components/schemas/boolean"
      description: Describes the static IP.
    StaticIpList:
      type: array
      items:
        $ref: "#/components/schemas/StaticIp"
    HostKeyAttributes:
      type: object
      properties:
        algorithm:
          $ref: "#/components/schemas/string"
        publicKey:
          $ref: "#/components/schemas/string"
        witnessedAt:
          $ref: "#/components/schemas/IsoDate"
        fingerprintSHA1:
          $ref: "#/components/schemas/string"
        fingerprintSHA256:
          $ref: "#/components/schemas/string"
        notValidBefore:
          $ref: "#/components/schemas/IsoDate"
        notValidAfter:
          $ref: "#/components/schemas/IsoDate"
      description: Describes the public SSH host keys or the RDP certificate.
    HostKeysList:
      type: array
      items:
        $ref: "#/components/schemas/HostKeyAttributes"
    IpAddress:
      type: string
      pattern: ([0-9]{1,3}\.){3}[0-9]{1,3}
    IpV6Address:
      type: string
      pattern: ([A-F0-9]{1,4}:){7}[A-F0-9]{1,4}
    InstanceHardware:
      type: object
      properties:
        cpuCount:
          $ref: "#/components/schemas/integer"
        disks:
          $ref: "#/components/schemas/DiskList"
        ramSizeInGb:
          $ref: "#/components/schemas/float"
      description: Describes the hardware for the instance.
    InstanceNetworking:
      type: object
      properties:
        monthlyTransfer:
          $ref: "#/components/schemas/MonthlyTransfer"
        ports:
          $ref: "#/components/schemas/InstancePortInfoList"
      description: Describes monthly data transfer rates and port information for an
        instance.
    PasswordData:
      type: object
      properties:
        ciphertext:
          $ref: "#/components/schemas/string"
        keyPairName:
          $ref: "#/components/schemas/ResourceName"
      description: The password data for the Windows Server-based instance, including the
        ciphertext and the key pair name.
    PortInfoSourceType:
      type: string
      enum:
        - DEFAULT
        - INSTANCE
        - NONE
        - CLOSED
    InstanceEntry:
      type: object
      required:
        - sourceName
        - instanceType
        - portInfoSource
        - availabilityZone
      properties:
        sourceName:
          $ref: "#/components/schemas/ResourceName"
        instanceType:
          $ref: "#/components/schemas/NonEmptyString"
        portInfoSource:
          $ref: "#/components/schemas/PortInfoSourceType"
        userData:
          $ref: "#/components/schemas/string"
        availabilityZone:
          $ref: "#/components/schemas/string"
      description: Describes the Amazon Elastic Compute Cloud instance and related
        resources to be created using the <code>create cloud formation
        stack</code> operation.
    InstanceHealthReason:
      type: string
      enum:
        - Lb.RegistrationInProgress
        - Lb.InitialHealthChecking
        - Lb.InternalError
        - Instance.ResponseCodeMismatch
        - Instance.Timeout
        - Instance.FailedHealthChecks
        - Instance.NotRegistered
        - Instance.NotInUse
        - Instance.DeregistrationInProgress
        - Instance.InvalidState
        - Instance.IpUnusable
    InstanceHealthState:
      type: string
      enum:
        - initial
        - healthy
        - unhealthy
        - unused
        - draining
        - unavailable
    InstanceHealthSummary:
      type: object
      properties:
        instanceName:
          $ref: "#/components/schemas/ResourceName"
        instanceHealth:
          $ref: "#/components/schemas/InstanceHealthState"
        instanceHealthReason:
          $ref: "#/components/schemas/InstanceHealthReason"
      description: Describes information about the health of the instance.
    InstanceHealthSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/InstanceHealthSummary"
    MonthlyTransfer:
      type: object
      properties:
        gbPerMonthAllocated:
          $ref: "#/components/schemas/integer"
      description: Describes the monthly data transfer in and out of your virtual private
        server (or <i>instance</i>).
    InstancePortInfoList:
      type: array
      items:
        $ref: "#/components/schemas/InstancePortInfo"
    NetworkProtocol:
      type: string
      enum:
        - tcp
        - all
        - udp
    PortAccessType:
      type: string
      enum:
        - Public
        - Private
    InstancePortInfo:
      type: object
      properties:
        fromPort:
          $ref: "#/components/schemas/Port"
        toPort:
          $ref: "#/components/schemas/Port"
        protocol:
          $ref: "#/components/schemas/NetworkProtocol"
        accessFrom:
          $ref: "#/components/schemas/string"
        accessType:
          $ref: "#/components/schemas/PortAccessType"
        commonName:
          $ref: "#/components/schemas/string"
        accessDirection:
          $ref: "#/components/schemas/AccessDirection"
      description: Describes information about the instance ports.
    PortState:
      type: string
      enum:
        - open
        - closed
    InstancePortState:
      type: object
      properties:
        fromPort:
          $ref: "#/components/schemas/Port"
        toPort:
          $ref: "#/components/schemas/Port"
        protocol:
          $ref: "#/components/schemas/NetworkProtocol"
        state:
          $ref: "#/components/schemas/PortState"
      description: Describes the port state.
    InstanceSnapshotState:
      type: string
      enum:
        - pending
        - error
        - available
    LoadBalancerState:
      type: string
      enum:
        - active
        - provisioning
        - active_impaired
        - failed
        - unknown
    LoadBalancerProtocol:
      type: string
      enum:
        - HTTP_HTTPS
        - HTTP
    PortList:
      type: array
      items:
        $ref: "#/components/schemas/Port"
    LoadBalancerTlsCertificateSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/LoadBalancerTlsCertificateSummary"
    LoadBalancerConfigurationOptions:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/string"
    LoadBalancerAttributeName:
      type: string
      enum:
        - HealthCheckPath
        - SessionStickinessEnabled
        - SessionStickiness_LB_CookieDurationSeconds
    LoadBalancerTlsCertificateStatus:
      type: string
      enum:
        - PENDING_VALIDATION
        - ISSUED
        - INACTIVE
        - EXPIRED
        - VALIDATION_TIMED_OUT
        - REVOKED
        - FAILED
        - UNKNOWN
    LoadBalancerTlsCertificateDomainValidationRecordList:
      type: array
      items:
        $ref: "#/components/schemas/LoadBalancerTlsCertificateDomainValidationRecord"
    LoadBalancerTlsCertificateFailureReason:
      type: string
      enum:
        - NO_AVAILABLE_CONTACTS
        - ADDITIONAL_VERIFICATION_REQUIRED
        - DOMAIN_NOT_ALLOWED
        - INVALID_PUBLIC_DOMAIN
        - OTHER
    LoadBalancerTlsCertificateRenewalSummary:
      type: object
      properties:
        renewalStatus:
          $ref: "#/components/schemas/LoadBalancerTlsCertificateRenewalStatus"
        domainValidationOptions:
          $ref: "#/components/schemas/LoadBalancerTlsCertificateDomainValidationOpt\
            ionList"
      description: Contains information about the status of Lightsail's managed renewal for
        the certificate.
    LoadBalancerTlsCertificateRevocationReason:
      type: string
      enum:
        - UNSPECIFIED
        - KEY_COMPROMISE
        - CA_COMPROMISE
        - AFFILIATION_CHANGED
        - SUPERCEDED
        - CESSATION_OF_OPERATION
        - CERTIFICATE_HOLD
        - REMOVE_FROM_CRL
        - PRIVILEGE_WITHDRAWN
        - A_A_COMPROMISE
    LoadBalancerTlsCertificate:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ResourceName"
        arn:
          $ref: "#/components/schemas/NonEmptyString"
        supportCode:
          $ref: "#/components/schemas/string"
        createdAt:
          $ref: "#/components/schemas/IsoDate"
        location:
          $ref: "#/components/schemas/ResourceLocation"
        resourceType:
          $ref: "#/components/schemas/ResourceType"
        tags:
          $ref: "#/components/schemas/TagList"
        loadBalancerName:
          $ref: "#/components/schemas/ResourceName"
        isAttached:
          $ref: "#/components/schemas/boolean"
        status:
          $ref: "#/components/schemas/LoadBalancerTlsCertificateStatus"
        domainName:
          $ref: "#/components/schemas/DomainName"
        domainValidationRecords:
          $ref: "#/components/schemas/LoadBalancerTlsCertificateDomainValidationRec\
            ordList"
        failureReason:
          $ref: "#/components/schemas/LoadBalancerTlsCertificateFailureReason"
        issuedAt:
          $ref: "#/components/schemas/IsoDate"
        issuer:
          $ref: "#/components/schemas/NonEmptyString"
        keyAlgorithm:
          $ref: "#/components/schemas/NonEmptyString"
        notAfter:
          $ref: "#/components/schemas/IsoDate"
        notBefore:
          $ref: "#/components/schemas/IsoDate"
        renewalSummary:
          $ref: "#/components/schemas/LoadBalancerTlsCertificateRenewalSummary"
        revocationReason:
          $ref: "#/components/schemas/LoadBalancerTlsCertificateRevocationReason"
        revokedAt:
          $ref: "#/components/schemas/IsoDate"
        serial:
          $ref: "#/components/schemas/NonEmptyString"
        signatureAlgorithm:
          $ref: "#/components/schemas/NonEmptyString"
        subject:
          $ref: "#/components/schemas/NonEmptyString"
        subjectAlternativeNames:
          $ref: "#/components/schemas/StringList"
      description: <p>Describes a load balancer SSL/TLS certificate.</p> <p>TLS is just an
        updated, more secure version of Secure Socket Layer (SSL).</p>
    LoadBalancerTlsCertificateDomainStatus:
      type: string
      enum:
        - PENDING_VALIDATION
        - FAILED
        - SUCCESS
    LoadBalancerTlsCertificateDomainValidationOption:
      type: object
      properties:
        domainName:
          $ref: "#/components/schemas/DomainName"
        validationStatus:
          $ref: "#/components/schemas/LoadBalancerTlsCertificateDomainStatus"
      description: Contains information about the domain names on an SSL/TLS certificate
        that you will use to validate domain ownership.
    LoadBalancerTlsCertificateDomainValidationOptionList:
      type: array
      items:
        $ref: "#/components/schemas/LoadBalancerTlsCertificateDomainValidationOption"
    LoadBalancerTlsCertificateDomainValidationRecord:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/NonEmptyString"
        type:
          $ref: "#/components/schemas/NonEmptyString"
        value:
          $ref: "#/components/schemas/NonEmptyString"
        validationStatus:
          $ref: "#/components/schemas/LoadBalancerTlsCertificateDomainStatus"
        domainName:
          $ref: "#/components/schemas/DomainName"
      description: Describes the validation record of each domain name in the SSL/TLS
        certificate.
    LoadBalancerTlsCertificateRenewalStatus:
      type: string
      enum:
        - PENDING_AUTO_RENEWAL
        - PENDING_VALIDATION
        - SUCCESS
        - FAILED
    LoadBalancerTlsCertificateSummary:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ResourceName"
        isAttached:
          $ref: "#/components/schemas/boolean"
      description: Provides a summary of SSL/TLS certificate metadata.
    LogEvent:
      type: object
      properties:
        createdAt:
          $ref: "#/components/schemas/IsoDate"
        message:
          $ref: "#/components/schemas/string"
      description: Describes a database log event.
    double:
      type: number
      format: double
    MetricDatapoint:
      type: object
      properties:
        average:
          $ref: "#/components/schemas/double"
        maximum:
          $ref: "#/components/schemas/double"
        minimum:
          $ref: "#/components/schemas/double"
        sampleCount:
          $ref: "#/components/schemas/double"
        sum:
          $ref: "#/components/schemas/double"
        timestamp:
          $ref: "#/components/schemas/timestamp"
        unit:
          $ref: "#/components/schemas/MetricUnit"
      description: Describes the metric data point.
    MetricStatistic:
      type: string
      enum:
        - Minimum
        - Maximum
        - Sum
        - Average
        - SampleCount
    OperationType:
      type: string
      enum:
        - DeleteKnownHostKeys
        - DeleteInstance
        - CreateInstance
        - StopInstance
        - StartInstance
        - RebootInstance
        - OpenInstancePublicPorts
        - PutInstancePublicPorts
        - CloseInstancePublicPorts
        - AllocateStaticIp
        - ReleaseStaticIp
        - AttachStaticIp
        - DetachStaticIp
        - UpdateDomainEntry
        - DeleteDomainEntry
        - CreateDomain
        - DeleteDomain
        - CreateInstanceSnapshot
        - DeleteInstanceSnapshot
        - CreateInstancesFromSnapshot
        - CreateLoadBalancer
        - DeleteLoadBalancer
        - AttachInstancesToLoadBalancer
        - DetachInstancesFromLoadBalancer
        - UpdateLoadBalancerAttribute
        - CreateLoadBalancerTlsCertificate
        - DeleteLoadBalancerTlsCertificate
        - AttachLoadBalancerTlsCertificate
        - CreateDisk
        - DeleteDisk
        - AttachDisk
        - DetachDisk
        - CreateDiskSnapshot
        - DeleteDiskSnapshot
        - CreateDiskFromSnapshot
        - CreateRelationalDatabase
        - UpdateRelationalDatabase
        - DeleteRelationalDatabase
        - CreateRelationalDatabaseFromSnapshot
        - CreateRelationalDatabaseSnapshot
        - DeleteRelationalDatabaseSnapshot
        - UpdateRelationalDatabaseParameters
        - StartRelationalDatabase
        - RebootRelationalDatabase
        - StopRelationalDatabase
        - EnableAddOn
        - DisableAddOn
    OperationStatus:
      type: string
      enum:
        - NotStarted
        - Started
        - Failed
        - Completed
        - Succeeded
    PendingMaintenanceAction:
      type: object
      properties:
        action:
          $ref: "#/components/schemas/NonEmptyString"
        description:
          $ref: "#/components/schemas/NonEmptyString"
        currentApplyDate:
          $ref: "#/components/schemas/IsoDate"
      description: Describes a pending database maintenance action.
    PendingMaintenanceActionList:
      type: array
      items:
        $ref: "#/components/schemas/PendingMaintenanceAction"
    PendingModifiedRelationalDatabaseValues:
      type: object
      properties:
        masterUserPassword:
          $ref: "#/components/schemas/string"
        engineVersion:
          $ref: "#/components/schemas/string"
        backupRetentionEnabled:
          $ref: "#/components/schemas/boolean"
      description: Describes a pending database value modification.
    PortInfoList:
      type: array
      items:
        $ref: "#/components/schemas/PortInfo"
    Region:
      type: object
      properties:
        continentCode:
          $ref: "#/components/schemas/string"
        description:
          $ref: "#/components/schemas/string"
        displayName:
          $ref: "#/components/schemas/string"
        name:
          $ref: "#/components/schemas/RegionName"
        availabilityZones:
          $ref: "#/components/schemas/AvailabilityZoneList"
        relationalDatabaseAvailabilityZones:
          $ref: "#/components/schemas/AvailabilityZoneList"
      description: Describes the AWS Region.
    RelationalDatabaseHardware:
      type: object
      properties:
        cpuCount:
          $ref: "#/components/schemas/integer"
        diskSizeInGb:
          $ref: "#/components/schemas/integer"
        ramSizeInGb:
          $ref: "#/components/schemas/float"
      description: Describes the hardware of a database.
    RelationalDatabaseEndpoint:
      type: object
      properties:
        port:
          $ref: "#/components/schemas/integer"
        address:
          $ref: "#/components/schemas/NonEmptyString"
      description: Describes an endpoint for a database.
    RelationalDatabaseEngine:
      type: string
      enum:
        - mysql
    RelationalDatabaseBlueprint:
      type: object
      properties:
        blueprintId:
          $ref: "#/components/schemas/string"
        engine:
          $ref: "#/components/schemas/RelationalDatabaseEngine"
        engineVersion:
          $ref: "#/components/schemas/string"
        engineDescription:
          $ref: "#/components/schemas/string"
        engineVersionDescription:
          $ref: "#/components/schemas/string"
        isEngineDefault:
          $ref: "#/components/schemas/boolean"
      description: Describes a database image, or blueprint. A blueprint describes the
        major engine version of a database.
    RelationalDatabaseBundle:
      type: object
      properties:
        bundleId:
          $ref: "#/components/schemas/string"
        name:
          $ref: "#/components/schemas/string"
        price:
          $ref: "#/components/schemas/float"
        ramSizeInGb:
          $ref: "#/components/schemas/float"
        diskSizeInGb:
          $ref: "#/components/schemas/integer"
        transferPerMonthInGb:
          $ref: "#/components/schemas/integer"
        cpuCount:
          $ref: "#/components/schemas/integer"
        isEncrypted:
          $ref: "#/components/schemas/boolean"
        isActive:
          $ref: "#/components/schemas/boolean"
      description: Describes a database bundle. A bundle describes the performance
        specifications of the database.
    RelationalDatabaseEvent:
      type: object
      properties:
        resource:
          $ref: "#/components/schemas/ResourceName"
        createdAt:
          $ref: "#/components/schemas/IsoDate"
        message:
          $ref: "#/components/schemas/string"
        eventCategories:
          $ref: "#/components/schemas/StringList"
      description: Describes an event for a database.
    RelationalDatabaseParameter:
      type: object
      properties:
        allowedValues:
          $ref: "#/components/schemas/string"
        applyMethod:
          $ref: "#/components/schemas/string"
        applyType:
          $ref: "#/components/schemas/string"
        dataType:
          $ref: "#/components/schemas/string"
        description:
          $ref: "#/components/schemas/string"
        isModifiable:
          $ref: "#/components/schemas/boolean"
        parameterName:
          $ref: "#/components/schemas/string"
        parameterValue:
          $ref: "#/components/schemas/string"
      description: Describes the parameters of a database.
    ResourceArn:
      type: string
      pattern: ^arn:(aws[^:]*):([a-zA-Z0-9-]+):([a-z0-9-]+):([0-9]+):([a-zA-Z]+)/([a-zA-Z0-9-]+)$
    StringMax256:
      type: string
      minLength: 1
      maxLength: 256
    TagKey:
      type: string
    TagValue:
      type: string
    Tag:
      type: object
      properties:
        key:
          $ref: "#/components/schemas/TagKey"
        value:
          $ref: "#/components/schemas/TagValue"
      description: <p>Describes a tag key and optional value assigned to an Amazon
        Lightsail resource.</p> <p>For more information about tags in Lightsail,
        see the <a
        href="https://lightsail.aws.amazon.com/ls/docs/en/articles/amazon-lightsail-tags">Lightsail
        Dev Guide</a>.</p>
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
