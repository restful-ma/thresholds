openapi: 3.0.0
info:
  contact:
    x-twitter: nfldata
  title: NHL v3 Scores
  version: "1.0"
  x-apisguru-categories:
    - entertainment
  x-logo:
    url: https://twitter.com/nfldata/profile_image?size=original
  x-origin:
    - format: swagger
      url: https://fantasydata.com/downloads/swagger/nhl-v3-scores.json
      version: "2.0"
  x-providerName: sportsdata.io
  x-serviceName: nhl-v3-scores
security:
  - apiKeyHeader: []
  - apiKeyQuery: []
tags: []
paths:
  "/{format}/AllTeams":
    get:
      operationId: TeamsAll
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            type: string
            enum:
              - XML
              - JSON
            default: XML
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Team"
                type: array
      summary: Teams (All)
  "/{format}/AreAnyGamesInProgress":
    get:
      description: Returns <code>true</code> if there is at least one game being played at
        the time of the request or <code>false</code> if there are none.
      operationId: AreGamesInProgress
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            type: string
            enum:
              - XML
              - JSON
            default: XML
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: boolean
      summary: Are Games In Progress
  "/{format}/CurrentSeason":
    get:
      operationId: CurrentSeason
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            type: string
            enum:
              - XML
              - JSON
            default: XML
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Season"
      summary: Current Season
  "/{format}/FreeAgents":
    get:
      operationId: PlayerDetailsByFreeAgent
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            type: string
            enum:
              - XML
              - JSON
            default: XML
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Player"
                type: array
      summary: Player Details by Free Agent
  "/{format}/Games/{season}":
    get:
      operationId: Schedules
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            type: string
            enum:
              - XML
              - JSON
            default: XML
        - description: "Year of the season (with optional season type).<br>Examples:
            <code>2018</code>, <code>2018PRE</code>, <code>2018POST</code>,
            <code>2018STAR</code>, <code>2019</code>, etc."
          in: path
          name: season
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Game"
                type: array
      summary: Schedules
  "/{format}/GamesByDate/{date}":
    get:
      operationId: GamesByDate
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            type: string
            enum:
              - XML
              - JSON
            default: XML
        - description: |-
            The date of the game(s).
             <br>Examples: <code>2018-JAN-31</code>, <code>2017-OCT-01</code>.
          in: path
          name: date
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Game"
                type: array
      summary: Games by Date
  "/{format}/News":
    get:
      operationId: News
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            type: string
            enum:
              - XML
              - JSON
            default: XML
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/News"
                type: array
      summary: News
  "/{format}/NewsByDate/{date}":
    get:
      operationId: NewsByDate
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            type: string
            enum:
              - XML
              - JSON
            default: XML
        - description: |-
            The date of the news.
             <br>Examples: <code>2018-JAN-31</code>, <code>2017-OCT-01</code>.
          in: path
          name: date
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/News"
                type: array
      summary: News by Date
  "/{format}/NewsByPlayerID/{playerid}":
    get:
      operationId: NewsByPlayer
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            type: string
            enum:
              - XML
              - JSON
            default: XML
        - description: |-
            Unique FantasyData Player ID.
             Example:<code>10000507</code>.
          in: path
          name: playerid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/News"
                type: array
      summary: News by Player
  "/{format}/Player/{playerid}":
    get:
      operationId: PlayerDetailsByPlayer
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            type: string
            enum:
              - XML
              - JSON
            default: XML
        - description: |-
            Unique FantasyData Player ID.
            Example:<code>30000007</code>.
          in: path
          name: playerid
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Player"
      summary: Player Details by Player
  "/{format}/Players":
    get:
      operationId: PlayerDetailsByActive
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            type: string
            enum:
              - XML
              - JSON
            default: XML
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Player"
                type: array
      summary: Player Details by Active
  "/{format}/Players/{team}":
    get:
      operationId: PlayersByTeam
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            type: string
            enum:
              - XML
              - JSON
            default: XML
        - description: |-
            The abbreviation of the requested team.
             <br>Examples: <code>SF</code>, <code>NYY</code>.
          in: path
          name: team
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Player"
                type: array
      summary: Players by Team
  "/{format}/Stadiums":
    get:
      operationId: Stadiums
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            type: string
            enum:
              - xml
              - json
            default: xml
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Stadium"
                type: array
      summary: Stadiums
  "/{format}/Standings/{season}":
    get:
      operationId: Standings
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            type: string
            enum:
              - XML
              - JSON
            default: XML
        - description: |-
            Year of the season.
             <br>Examples: <code>2016</code>, <code>2017</code>.
          in: path
          name: season
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Standing"
                type: array
      summary: Standings
  "/{format}/TeamGameStatsByDate/{date}":
    get:
      operationId: TeamGameStatsByDate
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            type: string
            enum:
              - XML
              - JSON
            default: XML
        - description: |-
            The date of the game(s).
             <br>Examples: <code>2018-JAN-31</code>, <code>2017-OCT-01</code>.
          in: path
          name: date
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TeamGame"
                type: array
      summary: Team Game Stats by Date
  "/{format}/TeamSeasonStats/{season}":
    get:
      operationId: TeamSeasonStats
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            type: string
            enum:
              - XML
              - JSON
            default: XML
        - description: |-
            Year of the season.
             <br>Examples: <code>2016</code>, <code>2017</code>.
          in: path
          name: season
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TeamSeason"
                type: array
      summary: Team Season Stats
  "/{format}/teams":
    get:
      operationId: TeamsActive
      parameters:
        - description: Desired response format. Valid entries are <code>XML</code> or
            <code>JSON</code>.
          in: path
          name: format
          required: true
          schema:
            type: string
            enum:
              - XML
              - JSON
            default: XML
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Team"
                type: array
      summary: Teams (Active)
servers:
  - url: http://api.sportsdata.io
  - url: https://api.sportsdata.io
  - url: http://api.fantasydata.net
  - url: https://api.fantasydata.net
components:
  securitySchemes:
    apiKeyHeader:
      in: header
      name: Ocp-Apim-Subscription-Key
      type: apiKey
    apiKeyQuery:
      in: query
      name: subscription-key
      type: apiKey
  schemas:
    Game:
      properties:
        Attendance:
          type: integer
        AwayTeam:
          type: string
        AwayTeamID:
          type: integer
        AwayTeamMoneyLine:
          type: integer
        AwayTeamScore:
          type: integer
        Channel:
          type: string
        DateTime:
          type: string
        Day:
          type: string
        GameEndDateTime:
          type: string
        GameID:
          type: integer
        GlobalAwayTeamID:
          type: integer
        GlobalGameID:
          type: integer
        GlobalHomeTeamID:
          type: integer
        HomeTeam:
          type: string
        HomeTeamID:
          type: integer
        HomeTeamMoneyLine:
          type: integer
        HomeTeamScore:
          type: integer
        IsClosed:
          type: boolean
        LastPlay:
          type: string
        OverUnder:
          type: number
        Period:
          type: string
        Periods:
          items:
            $ref: "#/components/schemas/Period"
          type: array
        PointSpread:
          type: number
        PointSpreadAwayTeamMoneyLine:
          type: integer
        PointSpreadHomeTeamMoneyLine:
          type: integer
        Season:
          type: integer
        SeasonType:
          type: integer
        StadiumID:
          type: integer
        Status:
          type: string
        TimeRemainingMinutes:
          type: integer
        TimeRemainingSeconds:
          type: integer
        Updated:
          type: string
    News:
      properties:
        Content:
          type: string
        NewsID:
          type: integer
        PlayerID:
          type: integer
        Source:
          type: string
        Team:
          type: string
        TeamID:
          type: integer
        TermsOfUse:
          type: string
        Title:
          type: string
        Updated:
          type: string
        Url:
          type: string
    OpponentSeason:
      properties:
        Assists:
          type: number
        BenchPenaltyMinutes:
          type: number
        Blocks:
          type: number
        EmptyNetGoals:
          type: number
        FaceoffsLost:
          type: number
        FaceoffsWon:
          type: number
        FantasyPoints:
          type: number
        FantasyPointsDraftKings:
          type: number
        FantasyPointsFanDuel:
          type: number
        FantasyPointsFantasyDraft:
          type: number
        FantasyPointsYahoo:
          type: number
        Games:
          type: integer
        Giveaways:
          type: number
        GlobalTeamID:
          type: integer
        Goals:
          type: number
        GoaltendingGoalsAgainst:
          type: number
        GoaltendingLosses:
          type: number
        GoaltendingMinutes:
          type: integer
        GoaltendingOvertimeLosses:
          type: number
        GoaltendingSaves:
          type: number
        GoaltendingSeconds:
          type: integer
        GoaltendingShotsAgainst:
          type: number
        GoaltendingShutouts:
          type: number
        GoaltendingWins:
          type: number
        HatTricks:
          type: number
        Hits:
          type: number
        Losses:
          type: integer
        Minutes:
          type: integer
        Name:
          type: string
        OpponentPosition:
          type: string
        OpponentStat:
          $ref: "#/components/schemas/OpponentSeason"
        OvertimeLosses:
          type: integer
        PenaltyMinutes:
          type: number
        PlusMinus:
          type: number
        PowerPlayAssists:
          type: number
        PowerPlayGoals:
          type: number
        Season:
          type: integer
        SeasonType:
          type: integer
        Seconds:
          type: integer
        Shifts:
          type: number
        ShootoutGoals:
          type: number
        ShortHandedAssists:
          type: number
        ShortHandedGoals:
          type: number
        ShotsOnGoal:
          type: number
        Started:
          type: integer
        StatID:
          type: integer
        Takeaways:
          type: number
        Team:
          type: string
        TeamID:
          type: integer
        Updated:
          type: string
        Wins:
          type: integer
    Penalty:
      properties:
        BenchPenaltyServedByPlayerID:
          type: integer
        Description:
          type: string
        DrawnByPlayerID:
          type: integer
        DrawnByTeamID:
          type: integer
        IsBenchPenalty:
          type: boolean
        PenalizedPlayerID:
          type: integer
        PenalizedTeamID:
          type: integer
        PenaltyID:
          type: integer
        PenaltyMinutes:
          type: integer
        PeriodID:
          type: integer
        Sequence:
          type: integer
        TimeRemainingMinutes:
          type: integer
        TimeRemainingSeconds:
          type: integer
    Period:
      properties:
        AwayScore:
          type: integer
        GameID:
          type: integer
        HomeScore:
          type: integer
        Name:
          type: string
        Penalties:
          items:
            $ref: "#/components/schemas/Penalty"
          type: array
        PeriodID:
          type: integer
        ScoringPlays:
          items:
            $ref: "#/components/schemas/ScoringPlay"
          type: array
    Player:
      properties:
        BirthCity:
          type: string
        BirthDate:
          type: string
        BirthState:
          type: string
        Catches:
          type: string
        DepthChartOrder:
          type: integer
        DepthChartPosition:
          type: string
        DraftKingsName:
          type: string
        DraftKingsPlayerID:
          type: integer
        FanDuelName:
          type: string
        FanDuelPlayerID:
          type: integer
        FantasyAlarmPlayerID:
          type: integer
        FantasyDraftName:
          type: string
        FantasyDraftPlayerID:
          type: integer
        FirstName:
          type: string
        GlobalTeamID:
          type: integer
        Height:
          type: integer
        InjuryBodyPart:
          type: string
        InjuryNotes:
          type: string
        InjuryStartDate:
          type: string
        InjuryStatus:
          type: string
        Jersey:
          type: integer
        LastName:
          type: string
        PhotoUrl:
          type: string
        PlayerID:
          type: integer
        Position:
          type: string
        RotoWirePlayerID:
          type: integer
        RotoworldPlayerID:
          type: integer
        Shoots:
          type: string
        SportRadarPlayerID:
          type: string
        SportsDirectPlayerID:
          type: integer
        StatsPlayerID:
          type: integer
        Status:
          type: string
        Team:
          type: string
        TeamID:
          type: integer
        UsaTodayHeadshotNoBackgroundUpdated:
          type: string
        UsaTodayHeadshotNoBackgroundUrl:
          type: string
        UsaTodayHeadshotUpdated:
          type: string
        UsaTodayHeadshotUrl:
          type: string
        UsaTodayPlayerID:
          type: integer
        Weight:
          type: integer
        XmlTeamPlayerID:
          type: integer
        YahooName:
          type: string
        YahooPlayerID:
          type: integer
    ScoringPlay:
      properties:
        AllowedByTeamID:
          type: integer
        AssistedByPlayerID1:
          type: integer
        AssistedByPlayerID2:
          type: integer
        AwayTeamScore:
          type: integer
        EmptyNet:
          type: boolean
        HomeTeamScore:
          type: integer
        PeriodID:
          type: integer
        PowerPlay:
          type: boolean
        ScoredByPlayerID:
          type: integer
        ScoredByTeamID:
          type: integer
        ScoringPlayID:
          type: integer
        Sequence:
          type: integer
        ShortHanded:
          type: boolean
        TimeRemainingMinutes:
          type: integer
        TimeRemainingSeconds:
          type: integer
    Season:
      properties:
        ApiSeason:
          type: string
        Description:
          type: string
        EndYear:
          type: integer
        PostSeasonStartDate:
          type: string
        RegularSeasonStartDate:
          type: string
        Season:
          type: integer
        SeasonType:
          type: string
        StartYear:
          type: integer
    Stadium:
      properties:
        Active:
          type: boolean
        Address:
          type: string
        Capacity:
          type: integer
        City:
          type: string
        Country:
          type: string
        GeoLat:
          type: number
        GeoLong:
          type: number
        Name:
          type: string
        StadiumID:
          type: integer
        State:
          type: string
        Zip:
          type: string
    Standing:
      properties:
        City:
          type: string
        Conference:
          type: string
        ConferenceLosses:
          type: integer
        ConferenceWins:
          type: integer
        Division:
          type: string
        DivisionLosses:
          type: integer
        DivisionWins:
          type: integer
        GlobalTeamID:
          type: integer
        Key:
          type: string
        Losses:
          type: integer
        Name:
          type: string
        OvertimeLosses:
          type: integer
        Percentage:
          type: number
        Season:
          type: integer
        SeasonType:
          type: integer
        ShutoutWins:
          type: integer
        TeamID:
          type: integer
        Wins:
          type: integer
    Team:
      properties:
        Active:
          type: boolean
        City:
          type: string
        Conference:
          type: string
        Division:
          type: string
        GlobalTeamID:
          type: integer
        Name:
          type: string
        PrimaryColor:
          type: string
        QuaternaryColor:
          type: string
        SecondaryColor:
          type: string
        StadiumID:
          type: integer
        TeamID:
          type: integer
        TertiaryColor:
          type: string
        WikipediaLogoUrl:
          type: string
        WikipediaWordMarkUrl:
          type: string
        "[Key]":
          type: string
    TeamGame:
      properties:
        Assists:
          type: number
        BenchPenaltyMinutes:
          type: number
        Blocks:
          type: number
        DateTime:
          type: string
        Day:
          type: string
        EmptyNetGoals:
          type: number
        FaceoffsLost:
          type: number
        FaceoffsWon:
          type: number
        FantasyPoints:
          type: number
        FantasyPointsDraftKings:
          type: number
        FantasyPointsFanDuel:
          type: number
        FantasyPointsFantasyDraft:
          type: number
        FantasyPointsYahoo:
          type: number
        GameID:
          type: integer
        Games:
          type: integer
        Giveaways:
          type: number
        GlobalGameID:
          type: integer
        GlobalOpponentID:
          type: integer
        GlobalTeamID:
          type: integer
        Goals:
          type: number
        GoaltendingGoalsAgainst:
          type: number
        GoaltendingLosses:
          type: number
        GoaltendingMinutes:
          type: integer
        GoaltendingOvertimeLosses:
          type: number
        GoaltendingSaves:
          type: number
        GoaltendingSeconds:
          type: integer
        GoaltendingShotsAgainst:
          type: number
        GoaltendingShutouts:
          type: number
        GoaltendingWins:
          type: number
        HatTricks:
          type: number
        Hits:
          type: number
        HomeOrAway:
          type: string
        IsGameOver:
          type: boolean
        Losses:
          type: integer
        Minutes:
          type: integer
        Name:
          type: string
        Opponent:
          type: string
        OpponentID:
          type: integer
        OvertimeLosses:
          type: integer
        PenaltyMinutes:
          type: number
        PlusMinus:
          type: number
        PowerPlayAssists:
          type: number
        PowerPlayGoals:
          type: number
        Season:
          type: integer
        SeasonType:
          type: integer
        Seconds:
          type: integer
        Shifts:
          type: number
        ShootoutGoals:
          type: number
        ShortHandedAssists:
          type: number
        ShortHandedGoals:
          type: number
        ShotsOnGoal:
          type: number
        Started:
          type: integer
        StatID:
          type: integer
        Takeaways:
          type: number
        Team:
          type: string
        TeamID:
          type: integer
        Updated:
          type: string
        Wins:
          type: integer
    TeamSeason:
      properties:
        Assists:
          type: number
        BenchPenaltyMinutes:
          type: number
        Blocks:
          type: number
        EmptyNetGoals:
          type: number
        FaceoffsLost:
          type: number
        FaceoffsWon:
          type: number
        FantasyPoints:
          type: number
        FantasyPointsDraftKings:
          type: number
        FantasyPointsFanDuel:
          type: number
        FantasyPointsFantasyDraft:
          type: number
        FantasyPointsYahoo:
          type: number
        Games:
          type: integer
        Giveaways:
          type: number
        GlobalTeamID:
          type: integer
        Goals:
          type: number
        GoaltendingGoalsAgainst:
          type: number
        GoaltendingLosses:
          type: number
        GoaltendingMinutes:
          type: integer
        GoaltendingOvertimeLosses:
          type: number
        GoaltendingSaves:
          type: number
        GoaltendingSeconds:
          type: integer
        GoaltendingShotsAgainst:
          type: number
        GoaltendingShutouts:
          type: number
        GoaltendingWins:
          type: number
        HatTricks:
          type: number
        Hits:
          type: number
        Losses:
          type: integer
        Minutes:
          type: integer
        Name:
          type: string
        OpponentPosition:
          type: string
        OpponentStat:
          $ref: "#/components/schemas/OpponentSeason"
        OvertimeLosses:
          type: integer
        PenaltyMinutes:
          type: number
        PlusMinus:
          type: number
        PowerPlayAssists:
          type: number
        PowerPlayGoals:
          type: number
        Season:
          type: integer
        SeasonType:
          type: integer
        Seconds:
          type: integer
        Shifts:
          type: number
        ShootoutGoals:
          type: number
        ShortHandedAssists:
          type: number
        ShortHandedGoals:
          type: number
        ShotsOnGoal:
          type: number
        Started:
          type: integer
        StatID:
          type: integer
        Takeaways:
          type: number
        Team:
          type: string
        TeamID:
          type: integer
        Updated:
          type: string
        Wins:
          type: integer
