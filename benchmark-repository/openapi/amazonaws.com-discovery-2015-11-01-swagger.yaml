openapi: 3.0.0
info:
  version: 2015-11-01
  x-release: v4
  title: AWS Application Discovery Service
  description: <fullname>AWS Application Discovery Service</fullname> <p>AWS Application
    Discovery Service helps you plan application migration projects by
    automatically identifying servers, virtual machines (VMs), software, and
    software dependencies running in your on-premises data centers. Application
    Discovery Service also collects application performance data, which can help
    you assess the outcome of your migration. The data collected by Application
    Discovery Service is securely retained in an AWS-hosted and managed database
    in the cloud. You can export the data as a CSV or XML file into your
    preferred visualization tool or cloud-migration solution to plan your
    migration. For more information, see <a
    href="http://aws.amazon.com/application-discovery/faqs/">AWS Application
    Discovery Service FAQ</a>.</p> <p>Application Discovery Service offers two
    modes of operation:</p> <ul> <li> <p> <b>Agentless discovery</b> mode is
    recommended for environments that use VMware vCenter Server. This mode
    doesn't require you to install an agent on each host. Agentless discovery
    gathers server information regardless of the operating systems, which
    minimizes the time required for initial on-premises infrastructure
    assessment. Agentless discovery doesn't collect information about software
    and software dependencies. It also doesn't work in non-VMware environments.
    </p> </li> <li> <p> <b>Agent-based discovery</b> mode collects a richer set
    of data than agentless discovery by using the AWS Application Discovery
    Agent, which you install on one or more hosts in your data center. The agent
    captures infrastructure and application information, including an inventory
    of installed software applications, system and process performance, resource
    utilization, and network dependencies between workloads. The information
    collected by agents is secured at rest and in transit to the Application
    Discovery Service database in the cloud. </p> </li> </ul> <p>We recommend
    that you use agent-based discovery for non-VMware environments and to
    collect information about software and software dependencies. You can also
    run agent-based and agentless discovery simultaneously. Use agentless
    discovery to quickly complete the initial infrastructure assessment and then
    install agents on select hosts.</p> <p>Application Discovery Service
    integrates with application discovery solutions from AWS Partner Network
    (APN) partners. Third-party application discovery tools can query
    Application Discovery Service and write to the Application Discovery Service
    database using a public API. You can then import the data into either a
    visualization tool or cloud-migration solution.</p> <important>
    <p>Application Discovery Service doesn't gather sensitive information. All
    data is handled according to the <a
    href="http://aws.amazon.com/privacy/">AWS Privacy Policy</a>. You can
    operate Application Discovery Service offline to inspect collected data
    before it is shared with the service.</p> </important> <p>This API reference
    provides descriptions, syntax, and usage examples for each of the actions
    and data types for Application Discovery Service. The topic for each action
    shows the API request parameters and the response. Alternatively, you can
    use one of the AWS SDKs to access an API that is tailored to the programming
    language or platform that you're using. For more information, see <a
    href="http://aws.amazon.com/tools/#SDKs">AWS SDKs</a>.</p> <p>This guide is
    intended for use with the <a
    href="http://docs.aws.amazon.com/application-discovery/latest/userguide/">
    <i>AWS Application Discovery Service User Guide</i> </a>.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: discovery
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/discovery-2015-11-01.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/discovery/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.AssociateConfigurationItemsToApplication:
    post:
      operationId: AssociateConfigurationItemsToApplication
      description: Associates one or more configuration items with an application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateConfigurationItemsToApplicatio\
                  nResponse"
        "480":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.AssociateConfigurationItemsToApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateConfigurationItemsToApplicationR\
                equest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.BatchDeleteImportData:
    post:
      operationId: BatchDeleteImportData
      description: <p>Deletes one or more import tasks, each identified by their import ID.
        Each import task has a number of records that can identify servers or
        applications. </p> <p>AWS Application Discovery Service has built-in
        matching logic that will identify when discovered servers match existing
        entries that you've previously discovered, the information for the
        already-existing discovered server is updated. When you delete an import
        task that contains records that were used to match, the information in
        those matched records that comes from the deleted records will also be
        deleted.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchDeleteImportDataResponse"
        "480":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.BatchDeleteImportData
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDeleteImportDataRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.CreateApplication:
    post:
      operationId: CreateApplication
      description: Creates an application with the given name and description.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateApplicationResponse"
        "480":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.CreateApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateApplicationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.CreateTags:
    post:
      operationId: CreateTags
      description: Creates one or more tags for configuration items. Tags are metadata that
        help you categorize IT assets. This API accepts a list of multiple
        configuration items.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTagsResponse"
        "480":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "484":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.CreateTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTagsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.DeleteApplications:
    post:
      operationId: DeleteApplications
      description: Deletes a list of applications and their associations with configuration
        items.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteApplicationsResponse"
        "480":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.DeleteApplications
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteApplicationsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.DeleteTags:
    post:
      operationId: DeleteTags
      description: Deletes the association between configuration items and one or more
        tags. This API accepts a list of multiple configuration items.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteTagsResponse"
        "480":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "484":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.DeleteTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteTagsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.DescribeAgents:
    post:
      operationId: DescribeAgents
      description: Lists agents or connectors as specified by ID or other filters. All
        agents/connectors associated with your user account can be listed if you
        call <code>DescribeAgents</code> as is without passing any parameters.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAgentsResponse"
        "480":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.DescribeAgents
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeAgentsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.DescribeConfigurations:
    post:
      operationId: DescribeConfigurations
      description: <p>Retrieves attributes for a list of configuration item IDs.</p> <note>
        <p>All of the supplied IDs must be for the same asset type from one of
        the following:</p> <ul> <li> <p>server</p> </li> <li> <p>application</p>
        </li> <li> <p>process</p> </li> <li> <p>connection</p> </li> </ul>
        <p>Output fields are specific to the asset type specified. For example,
        the output for a <i>server</i> configuration item includes a list of
        attributes about the server, such as host name, operating system, number
        of network cards, etc.</p> <p>For a complete list of outputs for each
        asset type, see <a
        href="http://docs.aws.amazon.com/application-discovery/latest/APIReference/discovery-api-queries.html#DescribeConfigurations">Using
        the DescribeConfigurations Action</a>.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeConfigurationsResponse"
        "480":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.DescribeConfigurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeConfigurationsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.DescribeContinuousExports:
    post:
      operationId: DescribeContinuousExports
      description: Lists exports as specified by ID. All continuous exports associated with
        your user account can be listed if you call
        <code>DescribeContinuousExports</code> as is without passing any
        parameters.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeContinuousExportsResponse"
        "480":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
        "484":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
        "485":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.DescribeContinuousExports
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeContinuousExportsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.DescribeExportConfigurations:
    post:
      deprecated: true
      operationId: DescribeExportConfigurations
      description: ' <code>DescribeExportConfigurations</code> is deprecated. Use <a
        href="https://docs.aws.amazon.com/application-discovery/latest/APIReference/API_DescribeExportTasks.html">DescribeImportTasks</a>,
        instead.'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeExportConfigurationsResponse"
        "480":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "484":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.DescribeExportConfigurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeExportConfigurationsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.DescribeExportTasks:
    post:
      operationId: DescribeExportTasks
      description: Retrieve status of one or more export tasks. You can retrieve the status
        of up to 100 export tasks.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeExportTasksResponse"
        "480":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.DescribeExportTasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeExportTasksRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.DescribeImportTasks:
    post:
      operationId: DescribeImportTasks
      description: Returns an array of import tasks for your account, including status
        information, times, IDs, the Amazon S3 Object URL for the import file,
        and more.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeImportTasksResponse"
        "480":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.DescribeImportTasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeImportTasksRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.DescribeTags:
    post:
      operationId: DescribeTags
      description: <p>Retrieves a list of configuration items that have tags as specified
        by the key-value pairs, name and value, passed to the optional parameter
        <code>filters</code>.</p> <p>There are three valid tag filter names:</p>
        <ul> <li> <p>tagKey</p> </li> <li> <p>tagValue</p> </li> <li>
        <p>configurationId</p> </li> </ul> <p>Also, all configuration items
        associated with your user account that have tags can be listed if you
        call <code>DescribeTags</code> as is without passing any parameters.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTagsResponse"
        "480":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "484":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.DescribeTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeTagsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.DisassociateConfigurationItemsFromApplication:
    post:
      operationId: DisassociateConfigurationItemsFromApplication
      description: Disassociates one or more configuration items from an application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateConfigurationItemsFromAppli\
                  cationResponse"
        "480":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.DisassociateConfigurationItemsFromApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateConfigurationItemsFromApplica\
                tionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.ExportConfigurations:
    post:
      deprecated: true
      operationId: ExportConfigurations
      description: <p>Deprecated. Use <code>StartExportTask</code> instead.</p> <p>Exports
        all discovered configuration data to an Amazon S3 bucket or an
        application that enables you to view and evaluate the data. Data
        includes tags and tag associations, processes, connections, servers, and
        system performance. This API returns an export ID that you can query
        using the <i>DescribeExportConfigurations</i> API. The system imposes a
        limit of two configuration exports in six hours.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExportConfigurationsResponse"
        "480":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
        "484":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.ExportConfigurations
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.GetDiscoverySummary:
    post:
      operationId: GetDiscoverySummary
      description: <p>Retrieves a short summary of discovered assets.</p> <p>This API
        operation takes no request parameters and is called as is at the command
        prompt as shown in the example.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDiscoverySummaryResponse"
        "480":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.GetDiscoverySummary
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDiscoverySummaryRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.ListConfigurations:
    post:
      operationId: ListConfigurations
      description: Retrieves a list of configuration items as specified by the value passed
        to the required paramater <code>configurationType</code>. Optional
        filtering may be applied to refine search results.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListConfigurationsResponse"
        "480":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "484":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.ListConfigurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListConfigurationsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.ListServerNeighbors:
    post:
      operationId: ListServerNeighbors
      description: Retrieves a list of servers that are one network hop away from a
        specified server.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListServerNeighborsResponse"
        "480":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.ListServerNeighbors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListServerNeighborsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.StartContinuousExport:
    post:
      operationId: StartContinuousExport
      description: Start the continuous flow of agent's discovered data into Amazon Athena.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartContinuousExportResponse"
        "480":
          description: ConflictErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictErrorException"
        "481":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "484":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
        "485":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
        "486":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.StartContinuousExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartContinuousExportRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.StartDataCollectionByAgentIds:
    post:
      operationId: StartDataCollectionByAgentIds
      description: Instructs the specified agents or connectors to start collecting data.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartDataCollectionByAgentIdsResponse"
        "480":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.StartDataCollectionByAgentIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartDataCollectionByAgentIdsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.StartExportTask:
    post:
      operationId: StartExportTask
      description: <p> Begins the export of discovered data to an S3 bucket.</p> <p> If you
        specify <code>agentIds</code> in a filter, the task exports up to 72
        hours of detailed data collected by the identified Application Discovery
        Agent, including network, process, and performance details. A time range
        for exported agent data may be set by using <code>startTime</code> and
        <code>endTime</code>. Export of detailed agent data is limited to five
        concurrently running exports. </p> <p> If you do not include an
        <code>agentIds</code> filter, summary data is exported that includes
        both AWS Agentless Discovery Connector data and summary data from AWS
        Discovery Agents. Export of summary data is limited to two exports per
        day. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartExportTaskResponse"
        "480":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
        "484":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.StartExportTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartExportTaskRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.StartImportTask:
    post:
      operationId: StartImportTask
      description: "<p>Starts an import task, which allows you to import details of your
        on-premises environment directly into AWS without having to use the
        Application Discovery Service (ADS) tools such as the Discovery
        Connector or Discovery Agent. This gives you the option to perform
        migration assessment and planning directly from your imported data,
        including the ability to group your devices as applications and track
        their migration status.</p> <p>To start an import request, do this:</p>
        <ol> <li> <p>Download the specially formatted comma separated value
        (CSV) import template, which you can find here: <a
        href=\"https://s3-us-west-2.amazonaws.com/templates-7cffcf56-bd96-4b1c-\
        b45b-a5b42f282e46/import_template.csv\">https://s3-us-west-2.amazonaws.\
        com/templates-7cffcf56-bd96-4b1c-b45b-a5b42f282e46/import_template.csv<\
        /a>.</p> </li> <li> <p>Fill out the template with your server and
        application data.</p> </li> <li> <p>Upload your import file to an Amazon
        S3 bucket, and make a note of it's Object URL. Your import file must be
        in the CSV format.</p> </li> <li> <p>Use the console or the
        <code>StartImportTask</code> command with the AWS CLI or one of the AWS
        SDKs to import the records from your file.</p> </li> </ol> <p>For more
        information, including step-by-step procedures, see <a
        href=\"https://docs.aws.amazon.com/application-discovery/latest/usergui\
        de/discovery-import.html\">Migration Hub Import</a> in the <i>AWS
        Application Discovery Service User Guide</i>.</p> <note> <p>There are
        limits to the number of import tasks you can create (and delete) in an
        AWS account. For more information, see <a
        href=\"https://docs.aws.amazon.com/application-discovery/latest/usergui\
        de/ads_service_limits.html\">AWS Application Discovery Service
        Limits</a> in the <i>AWS Application Discovery Service User
        Guide</i>.</p> </note>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartImportTaskResponse"
        "480":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "481":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.StartImportTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartImportTaskRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.StopContinuousExport:
    post:
      operationId: StopContinuousExport
      description: Stop the continuous flow of agent's discovered data into Amazon Athena.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopContinuousExportResponse"
        "480":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
        "484":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
        "485":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "486":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.StopContinuousExport
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopContinuousExportRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.StopDataCollectionByAgentIds:
    post:
      operationId: StopDataCollectionByAgentIds
      description: Instructs the specified agents or connectors to stop collecting data.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopDataCollectionByAgentIdsResponse"
        "480":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.StopDataCollectionByAgentIds
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopDataCollectionByAgentIdsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSPoseidonService_V2015_11_01.UpdateApplication:
    post:
      operationId: UpdateApplication
      description: Updates metadata about an application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateApplicationResponse"
        "480":
          description: AuthorizationErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationErrorException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ServerInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSPoseidonService_V2015_11_01.UpdateApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateApplicationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://discovery.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS Application Discovery Service multi-region endpoint
  - url: https://discovery.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS Application Discovery Service multi-region endpoint
  - url: http://discovery.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Application Discovery Service endpoint for China (Beijing) and
      China (Ningxia)
  - url: https://discovery.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Application Discovery Service endpoint for China (Beijing) and
      China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AssociateConfigurationItemsToApplicationResponse:
      type: object
      properties: {}
    AssociateConfigurationItemsToApplicationRequest:
      type: object
      required:
        - applicationConfigurationId
        - configurationIds
      properties:
        applicationConfigurationId:
          $ref: "#/components/schemas/ApplicationId"
        configurationIds:
          $ref: "#/components/schemas/ConfigurationIdList"
    AuthorizationErrorException: {}
    InvalidParameterException: {}
    InvalidParameterValueException: {}
    ServerInternalErrorException: {}
    BatchDeleteImportDataResponse:
      type: object
      properties:
        errors:
          $ref: "#/components/schemas/BatchDeleteImportDataErrorList"
    BatchDeleteImportDataRequest:
      type: object
      required:
        - importTaskIds
      properties:
        importTaskIds:
          $ref: "#/components/schemas/ToDeleteIdentifierList"
    CreateApplicationResponse:
      type: object
      properties:
        configurationId:
          $ref: "#/components/schemas/String"
    CreateApplicationRequest:
      type: object
      required:
        - name
      properties:
        name:
          $ref: "#/components/schemas/String"
        description:
          $ref: "#/components/schemas/String"
    CreateTagsResponse:
      type: object
      properties: {}
    CreateTagsRequest:
      type: object
      required:
        - configurationIds
        - tags
      properties:
        configurationIds:
          $ref: "#/components/schemas/ConfigurationIdList"
        tags:
          $ref: "#/components/schemas/TagSet"
    ResourceNotFoundException: {}
    DeleteApplicationsResponse:
      type: object
      properties: {}
    DeleteApplicationsRequest:
      type: object
      required:
        - configurationIds
      properties:
        configurationIds:
          $ref: "#/components/schemas/ApplicationIdsList"
    DeleteTagsResponse:
      type: object
      properties: {}
    DeleteTagsRequest:
      type: object
      required:
        - configurationIds
      properties:
        configurationIds:
          $ref: "#/components/schemas/ConfigurationIdList"
        tags:
          $ref: "#/components/schemas/TagSet"
    DescribeAgentsResponse:
      type: object
      properties:
        agentsInfo:
          $ref: "#/components/schemas/AgentsInfo"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeAgentsRequest:
      type: object
      properties:
        agentIds:
          $ref: "#/components/schemas/AgentIds"
        filters:
          $ref: "#/components/schemas/Filters"
        maxResults:
          $ref: "#/components/schemas/Integer"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeConfigurationsResponse:
      type: object
      properties:
        configurations:
          $ref: "#/components/schemas/DescribeConfigurationsAttributes"
    DescribeConfigurationsRequest:
      type: object
      required:
        - configurationIds
      properties:
        configurationIds:
          $ref: "#/components/schemas/ConfigurationIdList"
    DescribeContinuousExportsResponse:
      type: object
      properties:
        descriptions:
          $ref: "#/components/schemas/ContinuousExportDescriptions"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeContinuousExportsRequest:
      type: object
      properties:
        exportIds:
          $ref: "#/components/schemas/ContinuousExportIds"
        maxResults:
          $ref: "#/components/schemas/DescribeContinuousExportsMaxResults"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    OperationNotPermittedException: {}
    DescribeExportConfigurationsResponse:
      type: object
      properties:
        exportsInfo:
          $ref: "#/components/schemas/ExportsInfo"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeExportConfigurationsRequest:
      type: object
      properties:
        exportIds:
          $ref: "#/components/schemas/ExportIds"
        maxResults:
          $ref: "#/components/schemas/Integer"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeExportTasksResponse:
      type: object
      properties:
        exportsInfo:
          $ref: "#/components/schemas/ExportsInfo"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeExportTasksRequest:
      type: object
      properties:
        exportIds:
          $ref: "#/components/schemas/ExportIds"
        filters:
          $ref: "#/components/schemas/ExportFilters"
        maxResults:
          $ref: "#/components/schemas/Integer"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeImportTasksResponse:
      type: object
      properties:
        nextToken:
          $ref: "#/components/schemas/NextToken"
        tasks:
          $ref: "#/components/schemas/ImportTaskList"
    DescribeImportTasksRequest:
      type: object
      properties:
        filters:
          $ref: "#/components/schemas/DescribeImportTasksFilterList"
        maxResults:
          $ref: "#/components/schemas/DescribeImportTasksMaxResults"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeTagsResponse:
      type: object
      properties:
        tags:
          $ref: "#/components/schemas/ConfigurationTagSet"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeTagsRequest:
      type: object
      properties:
        filters:
          $ref: "#/components/schemas/TagFilters"
        maxResults:
          $ref: "#/components/schemas/Integer"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    DisassociateConfigurationItemsFromApplicationResponse:
      type: object
      properties: {}
    DisassociateConfigurationItemsFromApplicationRequest:
      type: object
      required:
        - applicationConfigurationId
        - configurationIds
      properties:
        applicationConfigurationId:
          $ref: "#/components/schemas/ApplicationId"
        configurationIds:
          $ref: "#/components/schemas/ConfigurationIdList"
    ExportConfigurationsResponse:
      type: object
      properties:
        exportId:
          $ref: "#/components/schemas/ConfigurationsExportId"
    GetDiscoverySummaryResponse:
      type: object
      properties:
        servers:
          $ref: "#/components/schemas/Long"
        applications:
          $ref: "#/components/schemas/Long"
        serversMappedToApplications:
          $ref: "#/components/schemas/Long"
        serversMappedtoTags:
          $ref: "#/components/schemas/Long"
        agentSummary:
          $ref: "#/components/schemas/CustomerAgentInfo"
        connectorSummary:
          $ref: "#/components/schemas/CustomerConnectorInfo"
    GetDiscoverySummaryRequest:
      type: object
      properties: {}
    ListConfigurationsResponse:
      type: object
      properties:
        configurations:
          $ref: "#/components/schemas/Configurations"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    ListConfigurationsRequest:
      type: object
      required:
        - configurationType
      properties:
        configurationType:
          $ref: "#/components/schemas/ConfigurationItemType"
        filters:
          $ref: "#/components/schemas/Filters"
        maxResults:
          $ref: "#/components/schemas/Integer"
        nextToken:
          $ref: "#/components/schemas/NextToken"
        orderBy:
          $ref: "#/components/schemas/OrderByList"
    ListServerNeighborsResponse:
      type: object
      required:
        - neighbors
      properties:
        neighbors:
          $ref: "#/components/schemas/NeighborDetailsList"
        nextToken:
          $ref: "#/components/schemas/String"
        knownDependencyCount:
          $ref: "#/components/schemas/Long"
    ListServerNeighborsRequest:
      type: object
      required:
        - configurationId
      properties:
        configurationId:
          $ref: "#/components/schemas/ConfigurationId"
        portInformationNeeded:
          $ref: "#/components/schemas/Boolean"
        neighborConfigurationIds:
          $ref: "#/components/schemas/ConfigurationIdList"
        maxResults:
          $ref: "#/components/schemas/Integer"
        nextToken:
          $ref: "#/components/schemas/String"
    StartContinuousExportResponse:
      type: object
      properties:
        exportId:
          $ref: "#/components/schemas/ConfigurationsExportId"
        s3Bucket:
          $ref: "#/components/schemas/S3Bucket"
        startTime:
          $ref: "#/components/schemas/TimeStamp"
        dataSource:
          $ref: "#/components/schemas/DataSource"
        schemaStorageConfig:
          $ref: "#/components/schemas/SchemaStorageConfig"
    StartContinuousExportRequest:
      type: object
      properties: {}
    ConflictErrorException: {}
    ResourceInUseException: {}
    StartDataCollectionByAgentIdsResponse:
      type: object
      properties:
        agentsConfigurationStatus:
          $ref: "#/components/schemas/AgentConfigurationStatusList"
    StartDataCollectionByAgentIdsRequest:
      type: object
      required:
        - agentIds
      properties:
        agentIds:
          $ref: "#/components/schemas/AgentIds"
    StartExportTaskResponse:
      type: object
      properties:
        exportId:
          $ref: "#/components/schemas/ConfigurationsExportId"
    StartExportTaskRequest:
      type: object
      properties:
        exportDataFormat:
          $ref: "#/components/schemas/ExportDataFormats"
        filters:
          $ref: "#/components/schemas/ExportFilters"
        startTime:
          $ref: "#/components/schemas/TimeStamp"
        endTime:
          $ref: "#/components/schemas/TimeStamp"
    StartImportTaskResponse:
      type: object
      properties:
        task:
          $ref: "#/components/schemas/ImportTask"
    StartImportTaskRequest:
      type: object
      required:
        - name
        - importUrl
      properties:
        clientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        name:
          $ref: "#/components/schemas/ImportTaskName"
        importUrl:
          $ref: "#/components/schemas/ImportURL"
    StopContinuousExportResponse:
      type: object
      properties:
        startTime:
          $ref: "#/components/schemas/TimeStamp"
        stopTime:
          $ref: "#/components/schemas/TimeStamp"
    StopContinuousExportRequest:
      type: object
      required:
        - exportId
      properties:
        exportId:
          $ref: "#/components/schemas/ConfigurationsExportId"
    StopDataCollectionByAgentIdsResponse:
      type: object
      properties:
        agentsConfigurationStatus:
          $ref: "#/components/schemas/AgentConfigurationStatusList"
    StopDataCollectionByAgentIdsRequest:
      type: object
      required:
        - agentIds
      properties:
        agentIds:
          $ref: "#/components/schemas/AgentIds"
    UpdateApplicationResponse:
      type: object
      properties: {}
    UpdateApplicationRequest:
      type: object
      required:
        - configurationId
      properties:
        configurationId:
          $ref: "#/components/schemas/ApplicationId"
        name:
          $ref: "#/components/schemas/String"
        description:
          $ref: "#/components/schemas/String"
    String:
      type: string
    Boolean:
      type: boolean
    AgentConfigurationStatus:
      type: object
      properties:
        agentId:
          $ref: "#/components/schemas/String"
        operationSucceeded:
          $ref: "#/components/schemas/Boolean"
        description:
          $ref: "#/components/schemas/String"
      description: Information about agents or connectors that were instructed to start
        collecting data. Information includes the agent/connector ID, a
        description of the operation, and whether the agent/connector
        configuration was updated.
    AgentConfigurationStatusList:
      type: array
      items:
        $ref: "#/components/schemas/AgentConfigurationStatus"
    AgentId:
      type: string
    AgentIds:
      type: array
      items:
        $ref: "#/components/schemas/AgentId"
    AgentNetworkInfoList:
      type: array
      items:
        $ref: "#/components/schemas/AgentNetworkInfo"
    AgentStatus:
      type: string
      enum:
        - HEALTHY
        - UNHEALTHY
        - RUNNING
        - UNKNOWN
        - BLACKLISTED
        - SHUTDOWN
    AgentInfo:
      type: object
      properties:
        agentId:
          $ref: "#/components/schemas/AgentId"
        hostName:
          $ref: "#/components/schemas/String"
        agentNetworkInfoList:
          $ref: "#/components/schemas/AgentNetworkInfoList"
        connectorId:
          $ref: "#/components/schemas/String"
        version:
          $ref: "#/components/schemas/String"
        health:
          $ref: "#/components/schemas/AgentStatus"
        lastHealthPingTime:
          $ref: "#/components/schemas/String"
        collectionStatus:
          $ref: "#/components/schemas/String"
        agentType:
          $ref: "#/components/schemas/String"
        registeredTime:
          $ref: "#/components/schemas/String"
      description: Information about agents or connectors associated with the user’s AWS
        account. Information includes agent or connector IDs, IP addresses,
        media access control (MAC) addresses, agent or connector health,
        hostname where the agent or connector resides, and agent version for
        each agent.
    AgentNetworkInfo:
      type: object
      properties:
        ipAddress:
          $ref: "#/components/schemas/String"
        macAddress:
          $ref: "#/components/schemas/String"
      description: Network details about the host where the agent/connector resides.
    AgentsInfo:
      type: array
      items:
        $ref: "#/components/schemas/AgentInfo"
    ApplicationId:
      type: string
    ApplicationIdsList:
      type: array
      items:
        $ref: "#/components/schemas/ApplicationId"
    ConfigurationIdList:
      type: array
      items:
        $ref: "#/components/schemas/ConfigurationId"
    ImportTaskIdentifier:
      type: string
    BatchDeleteImportDataErrorCode:
      type: string
      enum:
        - NOT_FOUND
        - INTERNAL_SERVER_ERROR
        - OVER_LIMIT
    BatchDeleteImportDataErrorDescription:
      type: string
    BatchDeleteImportDataError:
      type: object
      properties:
        importTaskId:
          $ref: "#/components/schemas/ImportTaskIdentifier"
        errorCode:
          $ref: "#/components/schemas/BatchDeleteImportDataErrorCode"
        errorDescription:
          $ref: "#/components/schemas/BatchDeleteImportDataErrorDescription"
      description: Error messages returned for each import task that you deleted as a
        response for this command.
    BatchDeleteImportDataErrorList:
      type: array
      items:
        $ref: "#/components/schemas/BatchDeleteImportDataError"
    ToDeleteIdentifierList:
      type: array
      items:
        $ref: "#/components/schemas/ImportTaskIdentifier"
      minItems: 1
      maxItems: 10
    BoxedInteger:
      type: integer
    ClientRequestToken:
      type: string
      minLength: 1
      maxLength: 100
    Condition:
      type: string
    Configuration:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/String"
    ConfigurationId:
      type: string
    ConfigurationItemType:
      type: string
      enum:
        - SERVER
        - PROCESS
        - CONNECTION
        - APPLICATION
    TagKey:
      type: string
    TagValue:
      type: string
    TimeStamp:
      type: string
      format: date-time
    ConfigurationTag:
      type: object
      properties:
        configurationType:
          $ref: "#/components/schemas/ConfigurationItemType"
        configurationId:
          $ref: "#/components/schemas/ConfigurationId"
        key:
          $ref: "#/components/schemas/TagKey"
        value:
          $ref: "#/components/schemas/TagValue"
        timeOfCreation:
          $ref: "#/components/schemas/TimeStamp"
      description: Tags for a configuration item. Tags are metadata that help you
        categorize IT assets.
    ConfigurationTagSet:
      type: array
      items:
        $ref: "#/components/schemas/ConfigurationTag"
    Configurations:
      type: array
      items:
        $ref: "#/components/schemas/Configuration"
    ConfigurationsDownloadUrl:
      type: string
    ConfigurationsExportId:
      type: string
    ContinuousExportStatus:
      type: string
      enum:
        - START_IN_PROGRESS
        - START_FAILED
        - ACTIVE
        - ERROR
        - STOP_IN_PROGRESS
        - STOP_FAILED
        - INACTIVE
    StringMax255:
      type: string
      minLength: 1
      maxLength: 255
    S3Bucket:
      type: string
    DataSource:
      type: string
      enum:
        - AGENT
    SchemaStorageConfig:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/String"
    ContinuousExportDescription:
      type: object
      properties:
        exportId:
          $ref: "#/components/schemas/ConfigurationsExportId"
        status:
          $ref: "#/components/schemas/ContinuousExportStatus"
        statusDetail:
          $ref: "#/components/schemas/StringMax255"
        s3Bucket:
          $ref: "#/components/schemas/S3Bucket"
        startTime:
          $ref: "#/components/schemas/TimeStamp"
        stopTime:
          $ref: "#/components/schemas/TimeStamp"
        dataSource:
          $ref: "#/components/schemas/DataSource"
        schemaStorageConfig:
          $ref: "#/components/schemas/SchemaStorageConfig"
      description: A list of continuous export descriptions.
    ContinuousExportDescriptions:
      type: array
      items:
        $ref: "#/components/schemas/ContinuousExportDescription"
    ContinuousExportIds:
      type: array
      items:
        $ref: "#/components/schemas/ConfigurationsExportId"
    TagSet:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    Integer:
      type: integer
    CustomerAgentInfo:
      type: object
      required:
        - activeAgents
        - healthyAgents
        - blackListedAgents
        - shutdownAgents
        - unhealthyAgents
        - totalAgents
        - unknownAgents
      properties:
        activeAgents:
          $ref: "#/components/schemas/Integer"
        healthyAgents:
          $ref: "#/components/schemas/Integer"
        blackListedAgents:
          $ref: "#/components/schemas/Integer"
        shutdownAgents:
          $ref: "#/components/schemas/Integer"
        unhealthyAgents:
          $ref: "#/components/schemas/Integer"
        totalAgents:
          $ref: "#/components/schemas/Integer"
        unknownAgents:
          $ref: "#/components/schemas/Integer"
      description: Inventory data for installed discovery agents.
    CustomerConnectorInfo:
      type: object
      required:
        - activeConnectors
        - healthyConnectors
        - blackListedConnectors
        - shutdownConnectors
        - unhealthyConnectors
        - totalConnectors
        - unknownConnectors
      properties:
        activeConnectors:
          $ref: "#/components/schemas/Integer"
        healthyConnectors:
          $ref: "#/components/schemas/Integer"
        blackListedConnectors:
          $ref: "#/components/schemas/Integer"
        shutdownConnectors:
          $ref: "#/components/schemas/Integer"
        unhealthyConnectors:
          $ref: "#/components/schemas/Integer"
        totalConnectors:
          $ref: "#/components/schemas/Integer"
        unknownConnectors:
          $ref: "#/components/schemas/Integer"
      description: Inventory data for installed discovery connectors.
    DatabaseName:
      type: string
      minLength: 1
      maxLength: 252
    Filters:
      type: array
      items:
        $ref: "#/components/schemas/Filter"
    NextToken:
      type: string
    DescribeConfigurationsAttribute:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/String"
    DescribeConfigurationsAttributes:
      type: array
      items:
        $ref: "#/components/schemas/DescribeConfigurationsAttribute"
    DescribeContinuousExportsMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ExportIds:
      type: array
      items:
        $ref: "#/components/schemas/ConfigurationsExportId"
    ExportsInfo:
      type: array
      items:
        $ref: "#/components/schemas/ExportInfo"
    ExportFilters:
      type: array
      items:
        $ref: "#/components/schemas/ExportFilter"
    ImportTaskFilter:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ImportTaskFilterName"
        values:
          $ref: "#/components/schemas/ImportTaskFilterValueList"
      description: <p>A name-values pair of elements you can use to filter the results when
        querying your import tasks. Currently, wildcards are not supported for
        filters.</p> <note> <p>When filtering by import status, all other filter
        values are ignored.</p> </note>
    DescribeImportTasksFilterList:
      type: array
      items:
        $ref: "#/components/schemas/ImportTaskFilter"
    DescribeImportTasksMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ImportTaskList:
      type: array
      items:
        $ref: "#/components/schemas/ImportTask"
    TagFilters:
      type: array
      items:
        $ref: "#/components/schemas/TagFilter"
    ExportDataFormat:
      type: string
      enum:
        - CSV
        - GRAPHML
    ExportDataFormats:
      type: array
      items:
        $ref: "#/components/schemas/ExportDataFormat"
    FilterName:
      type: string
    FilterValues:
      type: array
      items:
        $ref: "#/components/schemas/FilterValue"
    ExportFilter:
      type: object
      required:
        - name
        - values
        - condition
      properties:
        name:
          $ref: "#/components/schemas/FilterName"
        values:
          $ref: "#/components/schemas/FilterValues"
        condition:
          $ref: "#/components/schemas/Condition"
      description: Used to select which agent's data is to be exported. A single agent ID
        may be selected for export using the <a
        href="http://docs.aws.amazon.com/application-discovery/latest/APIReference/API_StartExportTask.html">StartExportTask</a>
        action.
    ExportStatus:
      type: string
      enum:
        - FAILED
        - SUCCEEDED
        - IN_PROGRESS
    ExportStatusMessage:
      type: string
    ExportRequestTime:
      type: string
      format: date-time
    ExportInfo:
      type: object
      required:
        - exportId
        - exportStatus
        - statusMessage
        - exportRequestTime
      properties:
        exportId:
          $ref: "#/components/schemas/ConfigurationsExportId"
        exportStatus:
          $ref: "#/components/schemas/ExportStatus"
        statusMessage:
          $ref: "#/components/schemas/ExportStatusMessage"
        configurationsDownloadUrl:
          $ref: "#/components/schemas/ConfigurationsDownloadUrl"
        exportRequestTime:
          $ref: "#/components/schemas/ExportRequestTime"
        isTruncated:
          $ref: "#/components/schemas/Boolean"
        requestedStartTime:
          $ref: "#/components/schemas/TimeStamp"
        requestedEndTime:
          $ref: "#/components/schemas/TimeStamp"
      description: Information regarding the export status of discovered data. The value is
        an array of objects.
    Filter:
      type: object
      required:
        - name
        - values
        - condition
      properties:
        name:
          $ref: "#/components/schemas/String"
        values:
          $ref: "#/components/schemas/FilterValues"
        condition:
          $ref: "#/components/schemas/Condition"
      description: <p>A filter that can use conditional operators.</p> <p>For more
        information about filters, see <a
        href="http://docs.aws.amazon.com/application-discovery/latest/APIReference/discovery-api-queries.html">Querying
        Discovered Configuration Items</a>. </p>
    FilterValue:
      type: string
    Long:
      type: integer
    ImportStatus:
      type: string
      enum:
        - IMPORT_IN_PROGRESS
        - IMPORT_COMPLETE
        - IMPORT_COMPLETE_WITH_ERRORS
        - IMPORT_FAILED
        - IMPORT_FAILED_SERVER_LIMIT_EXCEEDED
        - IMPORT_FAILED_RECORD_LIMIT_EXCEEDED
        - DELETE_IN_PROGRESS
        - DELETE_COMPLETE
        - DELETE_FAILED
        - DELETE_FAILED_LIMIT_EXCEEDED
        - INTERNAL_ERROR
    ImportTaskName:
      type: string
      minLength: 1
      maxLength: 100
    ImportURL:
      type: string
      minLength: 1
      maxLength: 4000
    S3PresignedUrl:
      type: string
    ImportTask:
      type: object
      properties:
        importTaskId:
          $ref: "#/components/schemas/ImportTaskIdentifier"
        clientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        name:
          $ref: "#/components/schemas/ImportTaskName"
        importUrl:
          $ref: "#/components/schemas/ImportURL"
        status:
          $ref: "#/components/schemas/ImportStatus"
        importRequestTime:
          $ref: "#/components/schemas/TimeStamp"
        importCompletionTime:
          $ref: "#/components/schemas/TimeStamp"
        importDeletedTime:
          $ref: "#/components/schemas/TimeStamp"
        serverImportSuccess:
          $ref: "#/components/schemas/Integer"
        serverImportFailure:
          $ref: "#/components/schemas/Integer"
        applicationImportSuccess:
          $ref: "#/components/schemas/Integer"
        applicationImportFailure:
          $ref: "#/components/schemas/Integer"
        errorsAndFailedEntriesZip:
          $ref: "#/components/schemas/S3PresignedUrl"
      description: An array of information related to the import task request that includes
        status information, times, IDs, the Amazon S3 Object URL for the import
        file, and more.
    ImportTaskFilterName:
      type: string
      enum:
        - IMPORT_TASK_ID
        - STATUS
        - NAME
    ImportTaskFilterValueList:
      type: array
      items:
        $ref: "#/components/schemas/ImportTaskFilterValue"
      minItems: 1
      maxItems: 100
    ImportTaskFilterValue:
      type: string
      minLength: 1
      maxLength: 100
    OrderByList:
      type: array
      items:
        $ref: "#/components/schemas/OrderByElement"
    NeighborDetailsList:
      type: array
      items:
        $ref: "#/components/schemas/NeighborConnectionDetail"
    NeighborConnectionDetail:
      type: object
      required:
        - sourceServerId
        - destinationServerId
        - connectionsCount
      properties:
        sourceServerId:
          $ref: "#/components/schemas/ConfigurationId"
        destinationServerId:
          $ref: "#/components/schemas/ConfigurationId"
        destinationPort:
          $ref: "#/components/schemas/BoxedInteger"
        transportProtocol:
          $ref: "#/components/schemas/String"
        connectionsCount:
          $ref: "#/components/schemas/Long"
      description: Details about neighboring servers.
    orderString:
      type: string
      enum:
        - ASC
        - DESC
    OrderByElement:
      type: object
      required:
        - fieldName
      properties:
        fieldName:
          $ref: "#/components/schemas/String"
        sortOrder:
          $ref: "#/components/schemas/orderString"
      description: A field and direction for ordered output.
    Tag:
      type: object
      required:
        - key
        - value
      properties:
        key:
          $ref: "#/components/schemas/TagKey"
        value:
          $ref: "#/components/schemas/TagValue"
      description: Metadata that help you categorize IT assets.
    TagFilter:
      type: object
      required:
        - name
        - values
      properties:
        name:
          $ref: "#/components/schemas/FilterName"
        values:
          $ref: "#/components/schemas/FilterValues"
      description: "The tag filter. Valid names are: <code>tagKey</code>,
        <code>tagValue</code>, <code>configurationId</code>."
