openapi: 3.0.0
info:
  version: 2018-01-12
  x-release: v4
  title: Amazon Data Lifecycle Manager
  description: <fullname>Amazon Data Lifecycle Manager</fullname> <p>With Amazon Data
    Lifecycle Manager, you can manage the lifecycle of your AWS resources. You
    create lifecycle policies, which are used to automate operations on the
    specified resources.</p> <p>Amazon DLM supports Amazon EBS volumes and
    snapshots. For information about using Amazon DLM with Amazon EBS, see <a
    href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/snapshot-lifecycle.html">Automating
    the Amazon EBS Snapshot Lifecycle</a> in the <i>Amazon EC2 User
    Guide</i>.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: dlm
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/dlm-2018-01-12.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/dlm/
security:
  - hmac: []
paths:
  /policies:
    post:
      operationId: CreateLifecyclePolicy
      description: Creates a policy to manage the lifecycle of the specified AWS resources.
        You can create up to 100 lifecycle policies.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateLifecyclePolicyResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - ExecutionRoleArn
                - Description
                - State
                - PolicyDetails
              properties:
                ExecutionRoleArn:
                  description: The Amazon Resource Name (ARN) of the IAM role used to run
                    the operations specified by the lifecycle policy.
                  type: string
                Description:
                  description: A description of the lifecycle policy. The characters
                    ^[0-9A-Za-z _-]+$ are supported.
                  type: string
                  minLength: 0
                  maxLength: 500
                State:
                  description: The desired activation state of the lifecycle policy after
                    creation.
                  type: string
                  enum:
                    - ENABLED
                    - DISABLED
                PolicyDetails:
                  description: Specifies the configuration of a lifecycle policy.
                  type: object
                  properties:
                    PolicyType:
                      $ref: "#/components/schemas/PolicyTypeValues"
                    ResourceTypes:
                      $ref: "#/components/schemas/ResourceTypeValuesList"
                    TargetTags:
                      $ref: "#/components/schemas/TargetTagList"
                    Schedules:
                      $ref: "#/components/schemas/ScheduleList"
                    Parameters:
                      $ref: "#/components/schemas/Parameters"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetLifecyclePolicies
      description: <p>Gets summary information about all or the specified data lifecycle
        policies.</p> <p>To get complete information about a policy, use
        <a>GetLifecyclePolicy</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLifecyclePoliciesResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: policyIds
          in: query
          required: false
          description: The identifiers of the data lifecycle policies.
          schema:
            type: array
            items:
              type: string
        - name: state
          in: query
          required: false
          description: The activation state.
          schema:
            type: string
            enum:
              - ENABLED
              - DISABLED
              - ERROR
        - name: resourceTypes
          in: query
          required: false
          description: The resource type.
          schema:
            type: array
            items:
              type: string
        - name: targetTags
          in: query
          required: false
          description: <p>The target tag for a policy.</p> <p>Tags are strings in the
            format <code>key=value</code>.</p>
          schema:
            type: array
            items:
              type: string
        - name: tagsToAdd
          in: query
          required: false
          description: <p>The tags to add to objects created by the policy.</p> <p>Tags are
            strings in the format <code>key=value</code>.</p> <p>These
            user-defined tags are added in addition to the AWS-added lifecycle
            tags.</p>
          schema:
            type: array
            items:
              type: string
  "/policies/{policyId}/":
    delete:
      operationId: DeleteLifecyclePolicy
      description: Deletes the specified lifecycle policy and halts the automated
        operations that the policy specified.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteLifecyclePolicyResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: policyId
          in: path
          required: true
          description: The identifier of the lifecycle policy.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetLifecyclePolicy
      description: Gets detailed information about the specified lifecycle policy.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLifecyclePolicyResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: policyId
          in: path
          required: true
          description: The identifier of the lifecycle policy.
          schema:
            type: string
  "/policies/{policyId}":
    patch:
      operationId: UpdateLifecyclePolicy
      description: Updates the specified lifecycle policy.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateLifecyclePolicyResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: policyId
          in: path
          required: true
          description: The identifier of the lifecycle policy.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ExecutionRoleArn:
                  description: The Amazon Resource Name (ARN) of the IAM role used to run
                    the operations specified by the lifecycle policy.
                  type: string
                State:
                  description: The desired activation state of the lifecycle policy after
                    creation.
                  type: string
                  enum:
                    - ENABLED
                    - DISABLED
                Description:
                  description: A description of the lifecycle policy.
                  type: string
                  minLength: 0
                  maxLength: 500
                PolicyDetails:
                  description: Specifies the configuration of a lifecycle policy.
                  type: object
                  properties:
                    PolicyType:
                      $ref: "#/components/schemas/PolicyTypeValues"
                    ResourceTypes:
                      $ref: "#/components/schemas/ResourceTypeValuesList"
                    TargetTags:
                      $ref: "#/components/schemas/TargetTagList"
                    Schedules:
                      $ref: "#/components/schemas/ScheduleList"
                    Parameters:
                      $ref: "#/components/schemas/Parameters"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://dlm.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon DLM multi-region endpoint
  - url: https://dlm.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon DLM multi-region endpoint
  - url: http://dlm.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon DLM endpoint for China (Beijing) and China (Ningxia)
  - url: https://dlm.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon DLM endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateLifecyclePolicyResponse:
      type: object
      properties:
        PolicyId:
          $ref: "#/components/schemas/PolicyId"
    PolicyTypeValues:
      type: string
      enum:
        - EBS_SNAPSHOT_MANAGEMENT
    ResourceTypeValuesList:
      type: array
      items:
        $ref: "#/components/schemas/ResourceTypeValues"
      minItems: 1
      maxItems: 1
    TargetTagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
      minItems: 1
      maxItems: 50
    ScheduleList:
      type: array
      items:
        $ref: "#/components/schemas/Schedule"
      minItems: 1
      maxItems: 1
    Parameters:
      type: object
      properties:
        ExcludeBootVolume:
          $ref: "#/components/schemas/ExcludeBootVolume"
      description: Optional parameters that can be added to the policy. The set of valid
        parameters depends on the combination of <code>policyType</code> and
        <code>resourceType</code> values.
    InvalidRequestException: {}
    LimitExceededException: {}
    InternalServerException: {}
    DeleteLifecyclePolicyResponse:
      type: object
      properties: {}
    ResourceNotFoundException: {}
    GetLifecyclePoliciesResponse:
      type: object
      properties:
        Policies:
          $ref: "#/components/schemas/LifecyclePolicySummaryList"
    PolicyId:
      type: string
    ResourceTypeValues:
      type: string
      enum:
        - VOLUME
        - INSTANCE
    TagFilter:
      type: string
    GetLifecyclePolicyResponse:
      type: object
      properties:
        Policy:
          $ref: "#/components/schemas/LifecyclePolicy"
    UpdateLifecyclePolicyResponse:
      type: object
      properties: {}
    CopyTags:
      type: boolean
    Count:
      type: integer
      minimum: 1
      maximum: 1000
    ExecutionRoleArn:
      type: string
    PolicyDescription:
      type: string
      minLength: 0
      maxLength: 500
    SettablePolicyStateValues:
      type: string
      enum:
        - ENABLED
        - DISABLED
    PolicyDetails:
      type: object
      properties:
        PolicyType:
          $ref: "#/components/schemas/PolicyTypeValues"
        ResourceTypes:
          $ref: "#/components/schemas/ResourceTypeValuesList"
        TargetTags:
          $ref: "#/components/schemas/TargetTagList"
        Schedules:
          $ref: "#/components/schemas/ScheduleList"
        Parameters:
          $ref: "#/components/schemas/Parameters"
      description: Specifies the configuration of a lifecycle policy.
    CreateLifecyclePolicyRequest:
      type: object
      required:
        - ExecutionRoleArn
        - Description
        - State
        - PolicyDetails
      properties:
        ExecutionRoleArn:
          $ref: "#/components/schemas/ExecutionRoleArn"
        Description:
          $ref: "#/components/schemas/PolicyDescription"
        State:
          $ref: "#/components/schemas/SettablePolicyStateValues"
        PolicyDetails:
          $ref: "#/components/schemas/PolicyDetails"
    Interval:
      type: integer
      minimum: 1
    IntervalUnitValues:
      type: string
      enum:
        - HOURS
    TimesList:
      type: array
      items:
        $ref: "#/components/schemas/Time"
      maxItems: 1
    CreateRule:
      type: object
      required:
        - Interval
        - IntervalUnit
      properties:
        Interval:
          $ref: "#/components/schemas/Interval"
        IntervalUnit:
          $ref: "#/components/schemas/IntervalUnitValues"
        Times:
          $ref: "#/components/schemas/TimesList"
      description: Specifies when to create snapshots of EBS volumes.
    DeleteLifecyclePolicyRequest:
      type: object
      properties: {}
    ExcludeBootVolume:
      type: boolean
    PolicyIdList:
      type: array
      items:
        $ref: "#/components/schemas/PolicyId"
    GettablePolicyStateValues:
      type: string
      enum:
        - ENABLED
        - DISABLED
        - ERROR
    TargetTagsFilterList:
      type: array
      items:
        $ref: "#/components/schemas/TagFilter"
      minItems: 1
      maxItems: 50
    TagsToAddFilterList:
      type: array
      items:
        $ref: "#/components/schemas/TagFilter"
      minItems: 0
      maxItems: 50
    GetLifecyclePoliciesRequest:
      type: object
      properties: {}
    LifecyclePolicySummaryList:
      type: array
      items:
        $ref: "#/components/schemas/LifecyclePolicySummary"
    GetLifecyclePolicyRequest:
      type: object
      properties: {}
    LifecyclePolicy:
      type: object
      properties:
        PolicyId:
          $ref: "#/components/schemas/PolicyId"
        Description:
          $ref: "#/components/schemas/PolicyDescription"
        State:
          $ref: "#/components/schemas/GettablePolicyStateValues"
        ExecutionRoleArn:
          $ref: "#/components/schemas/ExecutionRoleArn"
        DateCreated:
          $ref: "#/components/schemas/Timestamp"
        DateModified:
          $ref: "#/components/schemas/Timestamp"
        PolicyDetails:
          $ref: "#/components/schemas/PolicyDetails"
      description: Detailed information about a lifecycle policy.
    Timestamp:
      type: string
      format: date-time
    LifecyclePolicySummary:
      type: object
      properties:
        PolicyId:
          $ref: "#/components/schemas/PolicyId"
        Description:
          $ref: "#/components/schemas/PolicyDescription"
        State:
          $ref: "#/components/schemas/GettablePolicyStateValues"
      description: Summary information about a lifecycle policy.
    RetainRule:
      type: object
      required:
        - Count
      properties:
        Count:
          $ref: "#/components/schemas/Count"
      description: Specifies the number of snapshots to keep for each EBS volume.
    ScheduleName:
      type: string
      minLength: 0
      maxLength: 500
    TagsToAddList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
      minItems: 0
      maxItems: 50
    VariableTagsList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
      minItems: 0
      maxItems: 50
    Schedule:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/ScheduleName"
        CopyTags:
          $ref: "#/components/schemas/CopyTags"
        TagsToAdd:
          $ref: "#/components/schemas/TagsToAddList"
        VariableTags:
          $ref: "#/components/schemas/VariableTagsList"
        CreateRule:
          $ref: "#/components/schemas/CreateRule"
        RetainRule:
          $ref: "#/components/schemas/RetainRule"
      description: Specifies a schedule.
    String:
      type: string
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: "#/components/schemas/String"
        Value:
          $ref: "#/components/schemas/String"
      description: Specifies a tag for a resource.
    Time:
      type: string
      pattern: ^([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$
    UpdateLifecyclePolicyRequest:
      type: object
      properties:
        ExecutionRoleArn:
          $ref: "#/components/schemas/ExecutionRoleArn"
        State:
          $ref: "#/components/schemas/SettablePolicyStateValues"
        Description:
          $ref: "#/components/schemas/PolicyDescription"
        PolicyDetails:
          $ref: "#/components/schemas/PolicyDetails"
