openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: Archiving and eDiscovery for G Suite.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: G Suite Vault
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - storage
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://vault.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: vault
externalDocs:
  url: https://developers.google.com/vault
tags:
  - name: matters
paths:
  /v1/matters:
    get:
      description: Lists matters the user has access to.
      operationId: vault.matters.list
      parameters:
        - description: |-
            The number of matters to return in the response.
            Default and maximum are 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The pagination token as returned in the response.
          in: query
          name: pageToken
          schema:
            type: string
        - description: >-
            If set, list only matters with that specific state. The default is
            listing

            matters of all states.
          in: query
          name: state
          schema:
            type: string
            enum:
              - STATE_UNSPECIFIED
              - OPEN
              - CLOSED
              - DELETED
        - description: Specifies which parts of the matter to return in response.
          in: query
          name: view
          schema:
            type: string
            enum:
              - VIEW_UNSPECIFIED
              - BASIC
              - FULL
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListMattersResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      tags:
        - matters
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Creates a new matter with the given name and description. The initial
        state

        is open, and the owner is the method caller. Returns the created matter

        with default view.
      operationId: vault.matters.create
      requestBody:
        $ref: "#/components/requestBodies/Matter"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Matter"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  "/v1/matters/{matterId}":
    delete:
      description: Deletes the specified matter. Returns matter with updated state.
      operationId: vault.matters.delete
      parameters:
        - description: The matter ID
          in: path
          name: matterId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Matter"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
    get:
      description: Gets the specified matter.
      operationId: vault.matters.get
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
        - description: Specifies which parts of the Matter to return in the response.
          in: query
          name: view
          schema:
            type: string
            enum:
              - VIEW_UNSPECIFIED
              - BASIC
              - FULL
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Matter"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      tags:
        - matters
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    put:
      description: |-
        Updates the specified matter.
        This updates only the name and description of the matter, identified by
        matter id. Changes to any other fields are ignored.
        Returns the default view of the matter.
      operationId: vault.matters.update
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Matter"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Matter"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  "/v1/matters/{matterId}/exports":
    get:
      description: Lists Exports.
      operationId: vault.matters.exports.list
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
        - description: The number of exports to return in the response.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The pagination token as returned in the response.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListExportsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      tags:
        - matters
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Creates an Export.
      operationId: vault.matters.exports.create
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Export"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Export"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  "/v1/matters/{matterId}/exports/{exportId}":
    delete:
      description: Deletes an Export.
      operationId: vault.matters.exports.delete
      parameters:
        - description: The export ID.
          in: path
          name: exportId
          required: true
          schema:
            type: string
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
    get:
      description: Gets an Export.
      operationId: vault.matters.exports.get
      parameters:
        - description: The export ID.
          in: path
          name: exportId
          required: true
          schema:
            type: string
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Export"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      tags:
        - matters
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/matters/{matterId}/holds":
    get:
      description: |-
        Lists holds within a matter. An empty page token in ListHoldsResponse
        denotes no more holds to list.
      operationId: vault.matters.holds.list
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
        - description: >-
            The number of holds to return in the response, between 0 and 100
            inclusive.

            Leaving this empty, or as 0, is the same as page_size = 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            The pagination token as returned in the response.
            An empty token means start from the beginning.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Specifies which parts of the Hold to return.
          in: query
          name: view
          schema:
            type: string
            enum:
              - HOLD_VIEW_UNSPECIFIED
              - BASIC_HOLD
              - FULL_HOLD
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListHoldsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      tags:
        - matters
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Creates a hold in the given matter.
      operationId: vault.matters.holds.create
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Hold"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Hold"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  "/v1/matters/{matterId}/holds/{holdId}":
    delete:
      description: Removes a hold by ID. This will release any HeldAccounts on this Hold.
      operationId: vault.matters.holds.delete
      parameters:
        - description: The hold ID.
          in: path
          name: holdId
          required: true
          schema:
            type: string
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
    get:
      description: Gets a hold by ID.
      operationId: vault.matters.holds.get
      parameters:
        - description: The hold ID.
          in: path
          name: holdId
          required: true
          schema:
            type: string
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
        - description: Specifies which parts of the Hold to return.
          in: query
          name: view
          schema:
            type: string
            enum:
              - HOLD_VIEW_UNSPECIFIED
              - BASIC_HOLD
              - FULL_HOLD
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Hold"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      tags:
        - matters
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    put:
      description: >-
        Updates the OU and/or query parameters of a hold. You cannot add
        accounts

        to a hold that covers an OU, nor can you add OUs to a hold that covers

        individual accounts. Accounts listed in the hold will be ignored.
      operationId: vault.matters.holds.update
      parameters:
        - description: The ID of the hold.
          in: path
          name: holdId
          required: true
          schema:
            type: string
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Hold"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Hold"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  "/v1/matters/{matterId}/holds/{holdId}/accounts":
    get:
      description: >-
        Lists HeldAccounts for a hold. This will only list individually
        specified

        held accounts. If the hold is on an OU, then use

        <a href="https://developers.google.com/admin-sdk/">Admin SDK</a>

        to enumerate its members.
      operationId: vault.matters.holds.accounts.list
      parameters:
        - description: The hold ID.
          in: path
          name: holdId
          required: true
          schema:
            type: string
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListHeldAccountsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      tags:
        - matters
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Adds a HeldAccount to a hold. Accounts can only be added to a hold that
        has no held_org_unit set. Attempting to add an account to an OU-based
        hold will result in an error.
      operationId: vault.matters.holds.accounts.create
      parameters:
        - description: The hold ID.
          in: path
          name: holdId
          required: true
          schema:
            type: string
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HeldAccount"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/HeldAccount"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  "/v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}":
    delete:
      description: |-
        Removes a HeldAccount from a hold. If this request leaves the hold with
        no held accounts, the hold will not apply to any accounts.
      operationId: vault.matters.holds.accounts.delete
      parameters:
        - description: The ID of the account to remove from the hold.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The hold ID.
          in: path
          name: holdId
          required: true
          schema:
            type: string
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/matters/{matterId}/holds/{holdId}:addHeldAccounts":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Adds HeldAccounts to a hold. Returns a list of accounts that have been

        successfully added. Accounts can only be added to an existing account-based

        hold.
      operationId: vault.matters.holds.addHeldAccounts
      parameters:
        - description: The hold ID.
          in: path
          name: holdId
          required: true
          schema:
            type: string
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddHeldAccountsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AddHeldAccountsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  "/v1/matters/{matterId}/holds/{holdId}:removeHeldAccounts":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Removes HeldAccounts from a hold. Returns a list of statuses in the same
        order as the request. If this request leaves the hold with no held
        accounts, the hold will not apply to any accounts.
      operationId: vault.matters.holds.removeHeldAccounts
      parameters:
        - description: The hold ID.
          in: path
          name: holdId
          required: true
          schema:
            type: string
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoveHeldAccountsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/RemoveHeldAccountsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  "/v1/matters/{matterId}/savedQueries":
    get:
      description: |-
        Lists saved queries within a matter. An empty page token in
        ListSavedQueriesResponse denotes no more saved queries to list.
      operationId: vault.matters.savedQueries.list
      parameters:
        - description: >-
            The matter id of the parent matter for which the saved queries are
            to be

            retrieved.
          in: path
          name: matterId
          required: true
          schema:
            type: string
        - description: The maximum number of saved queries to return.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            The pagination token as returned in the previous response.
            An empty token means start from the beginning.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListSavedQueriesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      tags:
        - matters
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Creates a saved query.
      operationId: vault.matters.savedQueries.create
      parameters:
        - description: >-
            The matter id of the parent matter for which the saved query is to
            be

            created.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SavedQuery"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SavedQuery"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  "/v1/matters/{matterId}/savedQueries/{savedQueryId}":
    delete:
      description: Deletes a saved query by Id.
      operationId: vault.matters.savedQueries.delete
      parameters:
        - description: >-
            The matter id of the parent matter for which the saved query is to
            be

            deleted.
          in: path
          name: matterId
          required: true
          schema:
            type: string
        - description: Id of the saved query to be deleted.
          in: path
          name: savedQueryId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
    get:
      description: Retrieves a saved query by Id.
      operationId: vault.matters.savedQueries.get
      parameters:
        - description: >-
            The matter id of the parent matter for which the saved query is to
            be

            retrieved.
          in: path
          name: matterId
          required: true
          schema:
            type: string
        - description: Id of the saved query to be retrieved.
          in: path
          name: savedQueryId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SavedQuery"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery.readonly
      tags:
        - matters
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/matters/{matterId}:addPermissions":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Adds an account as a matter collaborator.
      operationId: vault.matters.addPermissions
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddMatterPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/MatterPermission"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  "/v1/matters/{matterId}:close":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Closes the specified matter. Returns matter with updated state.
      operationId: vault.matters.close
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CloseMatterRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CloseMatterResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  "/v1/matters/{matterId}:removePermissions":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Removes an account as a matter collaborator.
      operationId: vault.matters.removePermissions
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoveMatterPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  "/v1/matters/{matterId}:reopen":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Reopens the specified matter. Returns matter with updated state.
      operationId: vault.matters.reopen
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReopenMatterRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ReopenMatterResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
  "/v1/matters/{matterId}:undelete":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Undeletes the specified matter. Returns matter with updated state.
      operationId: vault.matters.undelete
      parameters:
        - description: The matter ID.
          in: path
          name: matterId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UndeleteMatterRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Matter"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/ediscovery
          Oauth2c:
            - https://www.googleapis.com/auth/ediscovery
      tags:
        - matters
servers:
  - url: https://vault.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  requestBodies:
    Matter:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Matter"
    Hold:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Hold"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/ediscovery: Manage your eDiscovery data
            https://www.googleapis.com/auth/ediscovery.readonly: View your eDiscovery data
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/ediscovery: Manage your eDiscovery data
            https://www.googleapis.com/auth/ediscovery.readonly: View your eDiscovery data
  schemas:
    AccountInfo:
      description: Accounts to search
      properties:
        emails:
          description: A set of accounts to search.
          items:
            type: string
          type: array
      type: object
    AddHeldAccountResult:
      description: |-
        A status detailing the status of each account creation, and the
        HeldAccount, if successful.
      properties:
        account:
          $ref: "#/components/schemas/HeldAccount"
        status:
          $ref: "#/components/schemas/Status"
      type: object
    AddHeldAccountsRequest:
      description: Add a list of accounts to a hold.
      properties:
        accountIds:
          description: >-
            Account ids to identify which accounts to add. Only account_ids or
            only

            emails should be specified, but not both.
          items:
            type: string
          type: array
        emails:
          description: >-
            Emails to identify which accounts to add. Only emails or only
            account_ids

            should be specified, but not both.
          items:
            type: string
          type: array
      type: object
    AddHeldAccountsResponse:
      description: Response for batch create held accounts.
      properties:
        responses:
          description: The list of responses, in the same order as the batch request.
          items:
            $ref: "#/components/schemas/AddHeldAccountResult"
          type: array
      type: object
    AddMatterPermissionsRequest:
      description: |-
        Add an account with the permission specified. The role cannot be owner.
        If an account already has a role in the matter, it will be
        overwritten.
      properties:
        ccMe:
          description: |-
            Only relevant if send_emails is true.
            True to CC requestor in the email message.
            False to not CC requestor.
          type: boolean
        matterPermission:
          $ref: "#/components/schemas/MatterPermission"
        sendEmails:
          description: |-
            True to send notification email to the added account.
            False to not send notification email.
          type: boolean
      type: object
    CloseMatterRequest:
      description: Close a matter by ID.
      properties: {}
      type: object
    CloseMatterResponse:
      description: Response to a CloseMatterRequest.
      properties:
        matter:
          $ref: "#/components/schemas/Matter"
      type: object
    CloudStorageFile:
      description: An export file on cloud storage
      properties:
        bucketName:
          description: |-
            The cloud storage bucket name of this export file.
            Can be used in cloud storage JSON/XML API.
          type: string
        md5Hash:
          description: The md5 hash of the file.
          type: string
        objectName:
          description: |-
            The cloud storage object name of this export file.
            Can be used in cloud storage JSON/XML API.
          type: string
        size:
          description: The size of the export file.
          format: int64
          type: string
      type: object
    CloudStorageSink:
      description: Export sink for cloud storage files.
      properties:
        files:
          description: Output only. The exported files on cloud storage.
          items:
            $ref: "#/components/schemas/CloudStorageFile"
          type: array
      type: object
    CorpusQuery:
      description: Corpus specific queries.
      properties:
        driveQuery:
          $ref: "#/components/schemas/HeldDriveQuery"
        groupsQuery:
          $ref: "#/components/schemas/HeldGroupsQuery"
        hangoutsChatQuery:
          $ref: "#/components/schemas/HeldHangoutsChatQuery"
        mailQuery:
          $ref: "#/components/schemas/HeldMailQuery"
      type: object
    DriveExportOptions:
      description: The options for Drive export.
      properties:
        includeAccessInfo:
          description: >-
            Set to true to include access level information for users

            with <a

            href="https://support.google.com/vault/answer/6099459#metadata">indirect

            access</a> to files.
          type: boolean
      type: object
    DriveOptions:
      description: Drive search advanced options
      properties:
        includeSharedDrives:
          description: Set to true to include shared drive.
          type: boolean
        includeTeamDrives:
          description: Set to true to include Team Drive.
          type: boolean
        versionDate:
          description: |-
            Search the versions of the Drive file
            as of the reference date. These timestamps are in GMT and
            rounded down to the given date.
          format: google-datetime
          type: string
      type: object
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated

        empty messages in your APIs. A typical example is to use it as the request

        or the response type of an API method. For instance:

            service Foo {
              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
            }

        The JSON representation for `Empty` is empty JSON object `{}`.
      properties: {}
      type: object
    Export:
      description: An export
      properties:
        cloudStorageSink:
          $ref: "#/components/schemas/CloudStorageSink"
        createTime:
          description: Output only. The time when the export was created.
          format: google-datetime
          type: string
        exportOptions:
          $ref: "#/components/schemas/ExportOptions"
        id:
          description: Output only. The generated export ID.
          type: string
        matterId:
          description: Output only. The matter ID.
          type: string
        name:
          description: The export name.
          type: string
        query:
          $ref: "#/components/schemas/Query"
        requester:
          $ref: "#/components/schemas/UserInfo"
        stats:
          $ref: "#/components/schemas/ExportStats"
        status:
          description: Output only. The export status.
          enum:
            - EXPORT_STATUS_UNSPECIFIED
            - COMPLETED
            - FAILED
            - IN_PROGRESS
          type: string
      type: object
    ExportOptions:
      description: Export advanced options
      properties:
        driveOptions:
          $ref: "#/components/schemas/DriveExportOptions"
        groupsOptions:
          $ref: "#/components/schemas/GroupsExportOptions"
        hangoutsChatOptions:
          $ref: "#/components/schemas/HangoutsChatExportOptions"
        mailOptions:
          $ref: "#/components/schemas/MailExportOptions"
        region:
          description: The requested export location.
          enum:
            - EXPORT_REGION_UNSPECIFIED
            - ANY
            - US
            - EUROPE
          type: string
      type: object
    ExportStats:
      description: Stats of an export.
      properties:
        exportedArtifactCount:
          description: The number of documents already processed by the export.
          format: int64
          type: string
        sizeInBytes:
          description: The size of export in bytes.
          format: int64
          type: string
        totalArtifactCount:
          description: The number of documents to be exported.
          format: int64
          type: string
      type: object
    GroupsExportOptions:
      description: The options for groups export.
      properties:
        exportFormat:
          description: The export format for groups export.
          enum:
            - EXPORT_FORMAT_UNSPECIFIED
            - MBOX
            - PST
          type: string
      type: object
    HangoutsChatExportOptions:
      description: The options for hangouts chat export.
      properties:
        exportFormat:
          description: The export format for hangouts chat export.
          enum:
            - EXPORT_FORMAT_UNSPECIFIED
            - MBOX
            - PST
          type: string
      type: object
    HangoutsChatInfo:
      description: Accounts to search
      properties:
        roomId:
          description: A set of rooms to search.
          items:
            type: string
          type: array
      type: object
    HangoutsChatOptions:
      description: Hangouts chat search advanced options
      properties:
        includeRooms:
          description: Set to true to include rooms.
          type: boolean
      type: object
    HeldAccount:
      description: >-
        An account being held in a particular hold. This structure is immutable.

        This can be either a single user or a google group, depending on the corpus.
      properties:
        accountId:
          description: |-
            The account's ID as provided by the
            <a href="https://developers.google.com/admin-sdk/">Admin SDK</a>.
          type: string
        email:
          description: >-
            The primary email address of the account. If used as an input, this
            takes

            precedence over account ID.
          type: string
        firstName:
          description: Output only. The first name of the account holder.
          type: string
        holdTime:
          description: Output only. When the account was put on hold.
          format: google-datetime
          type: string
        lastName:
          description: Output only. The last name of the account holder.
          type: string
      type: object
    HeldDriveQuery:
      description: Query options for Drive holds.
      properties:
        includeSharedDriveFiles:
          description: If true, include files in shared drives in the hold.
          type: boolean
        includeTeamDriveFiles:
          description: If true, include files in Team Drives in the hold.
          type: boolean
      type: object
    HeldGroupsQuery:
      description: Query options for group holds.
      properties:
        endTime:
          description: >-
            The end time range for the search query. These timestamps are in GMT
            and

            rounded down to the start of the given date.
          format: google-datetime
          type: string
        startTime:
          description: >-
            The start time range for the search query. These timestamps are in
            GMT and

            rounded down to the start of the given date.
          format: google-datetime
          type: string
        terms:
          description: The search terms for the hold.
          type: string
      type: object
    HeldHangoutsChatQuery:
      description: Query options for hangouts chat holds.
      properties:
        includeRooms:
          description: If true, include rooms the user has participated in.
          type: boolean
      type: object
    HeldMailQuery:
      description: Query options for mail holds.
      properties:
        endTime:
          description: >-
            The end time range for the search query. These timestamps are in GMT
            and

            rounded down to the start of the given date.
          format: google-datetime
          type: string
        startTime:
          description: >-
            The start time range for the search query. These timestamps are in
            GMT and

            rounded down to the start of the given date.
          format: google-datetime
          type: string
        terms:
          description: The search terms for the hold.
          type: string
      type: object
    HeldOrgUnit:
      description: |-
        A organizational unit being held in a particular hold.
        This structure is immutable.
      properties:
        holdTime:
          description: When the org unit was put on hold. This property is immutable.
          format: google-datetime
          type: string
        orgUnitId:
          description: The org unit's immutable ID as provided by the Admin SDK.
          type: string
      type: object
    Hold:
      description: >-
        Represents a hold within Vault. A hold restricts purging of

        artifacts based on the combination of the query and accounts restrictions.

        A hold can be configured to either apply to an explicitly configured set

        of accounts, or can be applied to all members of an organizational unit.
      properties:
        accounts:
          description: >-
            If set, the hold applies to the enumerated accounts and org_unit
            must be

            empty.
          items:
            $ref: "#/components/schemas/HeldAccount"
          type: array
        corpus:
          description: The corpus to be searched.
          enum:
            - CORPUS_TYPE_UNSPECIFIED
            - DRIVE
            - MAIL
            - GROUPS
            - HANGOUTS_CHAT
          type: string
        holdId:
          description: The unique immutable ID of the hold. Assigned during creation.
          type: string
        name:
          description: The name of the hold.
          type: string
        orgUnit:
          $ref: "#/components/schemas/HeldOrgUnit"
        query:
          $ref: "#/components/schemas/CorpusQuery"
        updateTime:
          description: The last time this hold was modified.
          format: google-datetime
          type: string
      type: object
    ListExportsResponse:
      description: The holds for a matter.
      properties:
        exports:
          description: The list of exports.
          items:
            $ref: "#/components/schemas/Export"
          type: array
        nextPageToken:
          description: Page token to retrieve the next page of results in the list.
          type: string
      type: object
    ListHeldAccountsResponse:
      description: Returns a list of held accounts for a hold.
      properties:
        accounts:
          description: The held accounts on a hold.
          items:
            $ref: "#/components/schemas/HeldAccount"
          type: array
      type: object
    ListHoldsResponse:
      description: The holds for a matter.
      properties:
        holds:
          description: The list of holds.
          items:
            $ref: "#/components/schemas/Hold"
          type: array
        nextPageToken:
          description: |-
            Page token to retrieve the next page of results in the list.
            If this is empty, then there are no more holds to list.
          type: string
      type: object
    ListMattersResponse:
      description: Provides the list of matters.
      properties:
        matters:
          description: List of matters.
          items:
            $ref: "#/components/schemas/Matter"
          type: array
        nextPageToken:
          description: Page token to retrieve the next page of results in the list.
          type: string
      type: object
    ListSavedQueriesResponse:
      description: Definition of the response for method ListSaveQuery.
      properties:
        nextPageToken:
          description: |-
            Page token to retrieve the next page of results in the list.
            If this is empty, then there are no more saved queries to list.
          type: string
        savedQueries:
          description: List of output saved queries.
          items:
            $ref: "#/components/schemas/SavedQuery"
          type: array
      type: object
    MailExportOptions:
      description: The options for mail export.
      properties:
        exportFormat:
          description: The export file format.
          enum:
            - EXPORT_FORMAT_UNSPECIFIED
            - MBOX
            - PST
          type: string
        showConfidentialModeContent:
          description: Set to true to export confidential mode content.
          type: boolean
      type: object
    MailOptions:
      description: Mail search advanced options
      properties:
        excludeDrafts:
          description: Set to true to exclude drafts.
          type: boolean
      type: object
    Matter:
      description: Represents a matter.
      properties:
        description:
          description: The description of the matter.
          type: string
        matterId:
          description: |-
            The matter ID which is generated by the server.
            Should be blank when creating a new matter.
          type: string
        matterPermissions:
          description: >-
            List of users and access to the matter. Currently there is no
            programmer

            defined limit on the number of permissions a matter can have.
          items:
            $ref: "#/components/schemas/MatterPermission"
          type: array
        name:
          description: The name of the matter.
          type: string
        state:
          description: The state of the matter.
          enum:
            - STATE_UNSPECIFIED
            - OPEN
            - CLOSED
            - DELETED
          type: string
      type: object
    MatterPermission:
      description: >-
        Currently each matter only has one owner, and all others are
        collaborators.

        When an account is purged, its corresponding MatterPermission resources

        cease to exist.
      properties:
        accountId:
          description: |-
            The account id, as provided by <a
            href="https://developers.google.com/admin-sdk/">Admin SDK</a>.
          type: string
        role:
          description: The user's role in this matter.
          enum:
            - ROLE_UNSPECIFIED
            - COLLABORATOR
            - OWNER
          type: string
      type: object
    OrgUnitInfo:
      description: Org Unit to search
      properties:
        orgUnitId:
          description: >-
            Org unit to search, as provided by the

            <a href="https://developers.google.com/admin-sdk/directory/">Admin SDK

            Directory API</a>.
          type: string
      type: object
    Query:
      description: A query definition relevant for search & export.
      properties:
        accountInfo:
          $ref: "#/components/schemas/AccountInfo"
        corpus:
          description: The corpus to search.
          enum:
            - CORPUS_TYPE_UNSPECIFIED
            - DRIVE
            - MAIL
            - GROUPS
            - HANGOUTS_CHAT
          type: string
        dataScope:
          description: The data source to search from.
          enum:
            - DATA_SCOPE_UNSPECIFIED
            - ALL_DATA
            - HELD_DATA
            - UNPROCESSED_DATA
          type: string
        driveOptions:
          $ref: "#/components/schemas/DriveOptions"
        endTime:
          description: >-
            The end time range for the search query. These timestamps are in GMT
            and

            rounded down to the start of the given date.
          format: google-datetime
          type: string
        hangoutsChatInfo:
          $ref: "#/components/schemas/HangoutsChatInfo"
        hangoutsChatOptions:
          $ref: "#/components/schemas/HangoutsChatOptions"
        mailOptions:
          $ref: "#/components/schemas/MailOptions"
        method:
          description: >-
            The search method to use. This field is similar to the search_method
            field

            but is introduced to support shared drives. It supports all

            search method types. In case the search_method is TEAM_DRIVE the response

            of this field will be SHARED_DRIVE only.
          enum:
            - SEARCH_METHOD_UNSPECIFIED
            - ACCOUNT
            - ORG_UNIT
            - TEAM_DRIVE
            - ENTIRE_ORG
            - ROOM
            - SHARED_DRIVE
          type: string
        orgUnitInfo:
          $ref: "#/components/schemas/OrgUnitInfo"
        searchMethod:
          description: The search method to use.
          enum:
            - SEARCH_METHOD_UNSPECIFIED
            - ACCOUNT
            - ORG_UNIT
            - TEAM_DRIVE
            - ENTIRE_ORG
            - ROOM
            - SHARED_DRIVE
          type: string
        sharedDriveInfo:
          $ref: "#/components/schemas/SharedDriveInfo"
        startTime:
          description: >-
            The start time range for the search query. These timestamps are in
            GMT and

            rounded down to the start of the given date.
          format: google-datetime
          type: string
        teamDriveInfo:
          $ref: "#/components/schemas/TeamDriveInfo"
        terms:
          description: |-
            The corpus-specific
            <a href="https://support.google.com/vault/answer/2474474">search
            operators</a> used to generate search results.
          type: string
        timeZone:
          description: >-
            The time zone name.

            It should be an IANA TZ name, such as "America/Los_Angeles".

            For more information, see

            <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">Time

            Zone</a>.
          type: string
      type: object
    RemoveHeldAccountsRequest:
      description: Remove a list of accounts from a hold.
      properties:
        accountIds:
          description: Account ids to identify HeldAccounts to remove.
          items:
            type: string
          type: array
      type: object
    RemoveHeldAccountsResponse:
      description: Response for batch delete held accounts.
      properties:
        statuses:
          description: |-
            A list of statuses for deleted accounts. Results have the
            same order as the request.
          items:
            $ref: "#/components/schemas/Status"
          type: array
      type: object
    RemoveMatterPermissionsRequest:
      description: Remove an account as a matter collaborator.
      properties:
        accountId:
          description: The account ID.
          type: string
      type: object
    ReopenMatterRequest:
      description: Reopen a matter by ID.
      properties: {}
      type: object
    ReopenMatterResponse:
      description: Response to a ReopenMatterRequest.
      properties:
        matter:
          $ref: "#/components/schemas/Matter"
      type: object
    SavedQuery:
      description: Definition of the saved query.
      properties:
        createTime:
          description: |-
            Output only. The server generated timestamp at which saved query was
            created.
          format: google-datetime
          type: string
        displayName:
          description: Name of the saved query.
          type: string
        matterId:
          description: >-
            Output only. The matter id of the associated matter.

            The server does not look at this field during create and always uses matter

            id in the URL.
          type: string
        query:
          $ref: "#/components/schemas/Query"
        savedQueryId:
          description: A unique identifier for the saved query.
          type: string
      type: object
    SharedDriveInfo:
      description: Shared drives to search
      properties:
        sharedDriveIds:
          description: |-
            List of Shared drive ids, as provided by <a
            href="https://developers.google.com/drive">Drive API</a>.
          items:
            type: string
          type: array
      type: object
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for

        different programming environments, including REST APIs and RPC APIs. It is

        used by [gRPC](https://github.com/grpc). Each `Status` message contains

        three pieces of data: error code, error message, and error details.


        You can find out more about this error model and how to work with it in the

        [API Design Guide](https://cloud.google.com/apis/design/errors).
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: >-
            A list of messages that carry the error details.  There is a common
            set of

            message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: |-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    TeamDriveInfo:
      description: Team Drives to search
      properties:
        teamDriveIds:
          description: |-
            List of Team Drive ids, as provided by <a
            href="https://developers.google.com/drive">Drive API</a>.
          items:
            type: string
          type: array
      type: object
    UndeleteMatterRequest:
      description: Undelete a matter by ID.
      properties: {}
      type: object
    UserInfo:
      description: User's information.
      properties:
        displayName:
          description: The displayed name of the user.
          type: string
        email:
          description: The email address of the user.
          type: string
      type: object
