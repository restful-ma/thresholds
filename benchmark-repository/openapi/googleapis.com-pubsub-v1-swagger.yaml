openapi: 3.0.0
x-hasEquivalentPaths: true
info:
  contact:
    name: Google
    url: https://google.com
  description: >
    Provides reliable, many-to-many, asynchronous messaging between applications.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Pub/Sub
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - messaging
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://pubsub.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: pubsub
externalDocs:
  url: https://cloud.google.com/pubsub/docs
tags:
  - name: projects
paths:
  "/v1/{name}":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    patch:
      description: |-
        Updates an existing topic. Note that certain properties of a
        topic are not modifiable.
      operationId: pubsub.projects.topics.patch
      parameters:
        - description: >-
            The name of the topic. It must have the format

            `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter,

            and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),

            underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent

            signs (`%`). It must be between 3 and 255 characters in length, and it

            must not start with `"goog"`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTopicRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Topic"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      tags:
        - projects
    put:
      description: |-
        Creates the given topic with the given name. See the
        <a href="https://cloud.google.com/pubsub/docs/admin#resource_names">
        resource name rules</a>.
      operationId: pubsub.projects.topics.create
      parameters:
        - description: >-
            The name of the topic. It must have the format

            `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter,

            and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),

            underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent

            signs (`%`). It must be between 3 and 255 characters in length, and it

            must not start with `"goog"`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Topic"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Topic"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      tags:
        - projects
  "/v1/{project}/snapshots":
    get:
      description: >-
        Lists the existing snapshots. Snapshots are used in

        <a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek</a>

        operations, which allow

        you to manage message acknowledgments in bulk. That is, you can set the

        acknowledgment state of messages in an existing subscription to the state

        captured by a snapshot.
      operationId: pubsub.projects.snapshots.list
      parameters:
        - description: Maximum number of snapshots to return.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            The value returned by the last `ListSnapshotsResponse`; indicates
            that this

            is a continuation of a prior `ListSnapshots` call, and that the system

            should return the next page of data.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            The name of the project in which to list snapshots.
            Format is `projects/{project-id}`.
          in: path
          name: project
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListSnapshotsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{project}/subscriptions":
    get:
      description: Lists matching subscriptions.
      operationId: pubsub.projects.subscriptions.list
      parameters:
        - description: Maximum number of subscriptions to return.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            The value returned by the last `ListSubscriptionsResponse`;
            indicates that

            this is a continuation of a prior `ListSubscriptions` call, and that the

            system should return the next page of data.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            The name of the project in which to list subscriptions.
            Format is `projects/{project-id}`.
          in: path
          name: project
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListSubscriptionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{project}/topics":
    get:
      description: Lists matching topics.
      operationId: pubsub.projects.topics.list
      parameters:
        - description: Maximum number of topics to return.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            The value returned by the last `ListTopicsResponse`; indicates that
            this is

            a continuation of a prior `ListTopics` call, and that the system should

            return the next page of data.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            The name of the project in which to list topics.
            Format is `projects/{project-id}`.
          in: path
          name: project
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListTopicsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{resource}:getIamPolicy":
    get:
      description: >-
        Gets the access control policy for a resource.

        Returns an empty policy if the resource exists and does not have a policy

        set.
      operationId: pubsub.projects.topics.getIamPolicy
      parameters:
        - description: >-
            Optional. The policy format version to be returned.


            Valid values are 0, 1, and 3. Requests specifying an invalid value will be

            rejected.


            Requests for policies with any conditional bindings must specify version 3.

            Policies without any conditional bindings may specify any valid value or

            leave the field unset.
          in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
        - description: >-
            REQUIRED: The resource for which the policy is being requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{resource}:setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.
      operationId: pubsub.projects.topics.setIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being specified.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetIamPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      tags:
        - projects
  "/v1/{resource}:testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Returns permissions that a caller has on the specified resource.

        If the resource does not exist, this will return an empty set of

        permissions, not a NOT_FOUND error.


        Note: This operation is designed to be used for building permission-aware

        UIs and command-line tools, not for authorization checking. This operation

        may "fail open" without warning.
      operationId: pubsub.projects.topics.testIamPermissions
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy detail is being
            requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestIamPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      tags:
        - projects
  "/v1/{snapshot}":
    delete:
      description: >-
        Removes an existing snapshot. Snapshots are used in

        <a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek</a>

        operations, which allow

        you to manage message acknowledgments in bulk. That is, you can set the

        acknowledgment state of messages in an existing subscription to the state

        captured by a snapshot.<br><br>

        When the snapshot is deleted, all messages retained in the snapshot

        are immediately dropped. After a snapshot is deleted, a new one may be

        created with the same name, but the new one has no association with the old

        snapshot or its subscription, unless the same subscription is specified.
      operationId: pubsub.projects.snapshots.delete
      parameters:
        - description: |-
            The name of the snapshot to delete.
            Format is `projects/{project}/snapshots/{snap}`.
          in: path
          name: snapshot
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      tags:
        - projects
    get:
      description: >-
        Gets the configuration details of a snapshot. Snapshots are used in

        <a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek</a>

        operations, which allow you to manage message acknowledgments in bulk. That

        is, you can set the acknowledgment state of messages in an existing

        subscription to the state captured by a snapshot.
      operationId: pubsub.projects.snapshots.get
      parameters:
        - description: |-
            The name of the snapshot to get.
            Format is `projects/{project}/snapshots/{snap}`.
          in: path
          name: snapshot
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Snapshot"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{subscription}":
    delete:
      description: >-
        Deletes an existing subscription. All messages retained in the
        subscription

        are immediately dropped. Calls to `Pull` after deletion will return

        `NOT_FOUND`. After a subscription is deleted, a new one may be created with

        the same name, but the new one has no association with the old

        subscription or its topic unless the same topic is specified.
      operationId: pubsub.projects.subscriptions.delete
      parameters:
        - description: |-
            The subscription to delete.
            Format is `projects/{project}/subscriptions/{sub}`.
          in: path
          name: subscription
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      tags:
        - projects
    get:
      description: Gets the configuration details of a subscription.
      operationId: pubsub.projects.subscriptions.get
      parameters:
        - description: |-
            The name of the subscription to get.
            Format is `projects/{project}/subscriptions/{sub}`.
          in: path
          name: subscription
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Subscription"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{subscription}:acknowledge":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Acknowledges the messages associated with the `ack_ids` in the

        `AcknowledgeRequest`. The Pub/Sub system can remove the relevant messages

        from the subscription.


        Acknowledging a message whose ack deadline has expired may succeed,

        but such a message may be redelivered later. Acknowledging a message more

        than once will not result in an error.
      operationId: pubsub.projects.subscriptions.acknowledge
      parameters:
        - description: |-
            The subscription whose message is being acknowledged.
            Format is `projects/{project}/subscriptions/{sub}`.
          in: path
          name: subscription
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcknowledgeRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      tags:
        - projects
  "/v1/{subscription}:modifyAckDeadline":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Modifies the ack deadline for a specific message. This method is useful
        to indicate that more time is needed to process a message by the
        subscriber, or to make the message available for redelivery if the
        processing was interrupted. Note that this does not modify the
        subscription-level `ackDeadlineSeconds` used for subsequent messages.
      operationId: pubsub.projects.subscriptions.modifyAckDeadline
      parameters:
        - description: |-
            The name of the subscription.
            Format is `projects/{project}/subscriptions/{sub}`.
          in: path
          name: subscription
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModifyAckDeadlineRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      tags:
        - projects
  "/v1/{subscription}:modifyPushConfig":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Modifies the `PushConfig` for a specified subscription.


        This may be used to change a push subscription to a pull one (signified by

        an empty `PushConfig`) or vice versa, or change the endpoint URL and other

        attributes of a push subscription. Messages will accumulate for delivery

        continuously through the call regardless of changes to the `PushConfig`.
      operationId: pubsub.projects.subscriptions.modifyPushConfig
      parameters:
        - description: |-
            The name of the subscription.
            Format is `projects/{project}/subscriptions/{sub}`.
          in: path
          name: subscription
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModifyPushConfigRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      tags:
        - projects
  "/v1/{subscription}:pull":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Pulls messages from the server. The server may return `UNAVAILABLE` if
        there are too many concurrent pull requests pending for the given
        subscription.
      operationId: pubsub.projects.subscriptions.pull
      parameters:
        - description: |-
            The subscription from which messages should be pulled.
            Format is `projects/{project}/subscriptions/{sub}`.
          in: path
          name: subscription
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PullRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PullResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      tags:
        - projects
  "/v1/{subscription}:seek":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Seeks an existing subscription to a point in time or to a given
        snapshot,

        whichever is provided in the request. Snapshots are used in

        <a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek</a>

        operations, which allow

        you to manage message acknowledgments in bulk. That is, you can set the

        acknowledgment state of messages in an existing subscription to the state

        captured by a snapshot. Note that both the subscription and the snapshot

        must be on the same topic.
      operationId: pubsub.projects.subscriptions.seek
      parameters:
        - description: The subscription to affect.
          in: path
          name: subscription
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SeekRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SeekResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      tags:
        - projects
  "/v1/{topic}":
    delete:
      description: >-
        Deletes the topic with the given name. Returns `NOT_FOUND` if the topic

        does not exist. After a topic is deleted, a new topic may be created with

        the same name; this is an entirely new topic with none of the old

        configuration or subscriptions. Existing subscriptions to this topic are

        not deleted, but their `topic` field is set to `_deleted-topic_`.
      operationId: pubsub.projects.topics.delete
      parameters:
        - description: |-
            Name of the topic to delete.
            Format is `projects/{project}/topics/{topic}`.
          in: path
          name: topic
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      tags:
        - projects
    get:
      description: Gets the configuration of a topic.
      operationId: pubsub.projects.topics.get
      parameters:
        - description: |-
            The name of the topic to get.
            Format is `projects/{project}/topics/{topic}`.
          in: path
          name: topic
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Topic"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{topic}/snapshots":
    get:
      description: >-
        Lists the names of the snapshots on this topic. Snapshots are used in

        <a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek</a>

        operations, which allow

        you to manage message acknowledgments in bulk. That is, you can set the

        acknowledgment state of messages in an existing subscription to the state

        captured by a snapshot.
      operationId: pubsub.projects.topics.snapshots.list
      parameters:
        - description: Maximum number of snapshot names to return.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            The value returned by the last `ListTopicSnapshotsResponse`;
            indicates

            that this is a continuation of a prior `ListTopicSnapshots` call, and

            that the system should return the next page of data.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            The name of the topic that snapshots are attached to.
            Format is `projects/{project}/topics/{topic}`.
          in: path
          name: topic
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListTopicSnapshotsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{topic}/subscriptions":
    get:
      description: Lists the names of the subscriptions on this topic.
      operationId: pubsub.projects.topics.subscriptions.list
      parameters:
        - description: Maximum number of subscription names to return.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            The value returned by the last `ListTopicSubscriptionsResponse`;
            indicates

            that this is a continuation of a prior `ListTopicSubscriptions` call, and

            that the system should return the next page of data.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            The name of the topic that subscriptions are attached to.
            Format is `projects/{project}/topics/{topic}`.
          in: path
          name: topic
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListTopicSubscriptionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{topic}:publish":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic
        does not exist.
      operationId: pubsub.projects.topics.publish
      parameters:
        - description: |-
            The messages in the request will be published on this topic.
            Format is `projects/{project}/topics/{topic}`.
          in: path
          name: topic
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PublishRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PublishResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/pubsub
          Oauth2c:
            - https://www.googleapis.com/auth/pubsub
      tags:
        - projects
servers:
  - url: https://pubsub.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/pubsub: View and manage Pub/Sub topics and subscriptions
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/pubsub: View and manage Pub/Sub topics and subscriptions
  schemas:
    AcknowledgeRequest:
      description: Request for the Acknowledge method.
      properties:
        ackIds:
          description: >-
            The acknowledgment ID for the messages being acknowledged that was
            returned

            by the Pub/Sub system in the `Pull` response. Must not be empty.
          items:
            type: string
          type: array
      type: object
    Binding:
      description: Associates `members` with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/Expr"
        members:
          description: >+
            Specifies the identities requesting access for a Cloud Platform
            resource.

            `members` can have the following values:


            * `allUsers`: A special identifier that represents anyone who is
               on the internet; with or without a Google account.

            * `allAuthenticatedUsers`: A special identifier that represents anyone
               who is authenticated with a Google account or a service account.

            * `user:{emailid}`: An email address that represents a specific Google
               account. For example, `alice@example.com` .


            * `serviceAccount:{emailid}`: An email address that represents a service
               account. For example, `my-other-app@appspot.gserviceaccount.com`.

            * `group:{emailid}`: An email address that represents a Google group.
               For example, `admins@example.com`.


            * `domain:{domain}`: The G Suite domain (primary) that represents all the
               users of that domain. For example, `google.com` or `example.com`.

          items:
            type: string
          type: array
        role:
          description: |-
            Role that is assigned to `members`.
            For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          type: string
      type: object
    CreateSnapshotRequest:
      description: Request for the `CreateSnapshot` method.
      properties:
        labels:
          additionalProperties:
            type: string
          description: >-
            See <a href="https://cloud.google.com/pubsub/docs/labels"> Creating
            and

            managing labels</a>.
          type: object
        subscription:
          description: >-
            The subscription whose backlog the snapshot retains.

            Specifically, the created snapshot is guaranteed to retain:
             (a) The existing backlog on the subscription. More precisely, this is
                 defined as the messages in the subscription's backlog that are
                 unacknowledged upon the successful completion of the
                 `CreateSnapshot` request; as well as:
             (b) Any messages published to the subscription's topic following the
                 successful completion of the CreateSnapshot request.
            Format is `projects/{project}/subscriptions/{sub}`.
          type: string
      type: object
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated

        empty messages in your APIs. A typical example is to use it as the request

        or the response type of an API method. For instance:

            service Foo {
              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
            }

        The JSON representation for `Empty` is empty JSON object `{}`.
      properties: {}
      type: object
    ExpirationPolicy:
      description: |-
        A policy that specifies the conditions for resource expiration (i.e.,
        automatic resource deletion).
      properties:
        ttl:
          description: >-
            Specifies the "time-to-live" duration for an associated resource.
            The

            resource expires if it is not active for a period of `ttl`. The definition

            of "activity" depends on the type of the associated resource. The minimum

            and maximum allowed values for `ttl` depend on the type of the associated

            resource, as well. If `ttl` is not set, the associated resource never

            expires.
          format: google-duration
          type: string
      type: object
    Expr:
      description: |-
        Represents an expression text. Example:

            title: "User account presence"
            description: "Determines whether the request has a user account"
            expression: "size(request.user) > 0"
      properties:
        description:
          description: >-
            An optional description of the expression. This is a longer text
            which

            describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: |-
            Textual representation of an expression in
            Common Expression Language syntax.

            The application context of the containing message determines which
            well-known feature set of CEL is supported.
          type: string
        location:
          description: >-
            An optional string indicating the location of the expression for
            error

            reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: |-
            An optional title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
      type: object
    ListSnapshotsResponse:
      description: Response for the `ListSnapshots` method.
      properties:
        nextPageToken:
          description: >-
            If not empty, indicates that there may be more snapshot that match
            the

            request; this value should be passed in a new `ListSnapshotsRequest`.
          type: string
        snapshots:
          description: The resulting snapshots.
          items:
            $ref: "#/components/schemas/Snapshot"
          type: array
      type: object
    ListSubscriptionsResponse:
      description: Response for the `ListSubscriptions` method.
      properties:
        nextPageToken:
          description: >-
            If not empty, indicates that there may be more subscriptions that
            match

            the request; this value should be passed in a new

            `ListSubscriptionsRequest` to get more subscriptions.
          type: string
        subscriptions:
          description: The subscriptions that match the request.
          items:
            $ref: "#/components/schemas/Subscription"
          type: array
      type: object
    ListTopicSnapshotsResponse:
      description: Response for the `ListTopicSnapshots` method.
      properties:
        nextPageToken:
          description: |-
            If not empty, indicates that there may be more snapshots that match
            the request; this value should be passed in a new
            `ListTopicSnapshotsRequest` to get more snapshots.
          type: string
        snapshots:
          description: The names of the snapshots that match the request.
          items:
            type: string
          type: array
      type: object
    ListTopicSubscriptionsResponse:
      description: Response for the `ListTopicSubscriptions` method.
      properties:
        nextPageToken:
          description: >-
            If not empty, indicates that there may be more subscriptions that
            match

            the request; this value should be passed in a new

            `ListTopicSubscriptionsRequest` to get more subscriptions.
          type: string
        subscriptions:
          description: The names of the subscriptions that match the request.
          items:
            type: string
          type: array
      type: object
    ListTopicsResponse:
      description: Response for the `ListTopics` method.
      properties:
        nextPageToken:
          description: |-
            If not empty, indicates that there may be more topics that match the
            request; this value should be passed in a new `ListTopicsRequest`.
          type: string
        topics:
          description: The resulting topics.
          items:
            $ref: "#/components/schemas/Topic"
          type: array
      type: object
    MessageStoragePolicy:
      properties:
        allowedPersistenceRegions:
          description: >-
            A list of IDs of GCP regions where messages that are published to
            the topic

            may be persisted in storage. Messages published by publishers running in

            non-allowed GCP regions (or running outside of GCP altogether) will be

            routed for storage in one of the allowed regions. An empty list means that

            no regions are allowed, and is not a valid configuration.
          items:
            type: string
          type: array
      type: object
    ModifyAckDeadlineRequest:
      description: Request for the ModifyAckDeadline method.
      properties:
        ackDeadlineSeconds:
          description: >-
            The new ack deadline with respect to the time this request was sent
            to

            the Pub/Sub system. For example, if the value is 10, the new

            ack deadline will expire 10 seconds after the `ModifyAckDeadline` call

            was made. Specifying zero might immediately make the message available for

            delivery to another subscriber client. This typically results in an

            increase in the rate of message redeliveries (that is, duplicates).

            The minimum deadline you can specify is 0 seconds.

            The maximum deadline you can specify is 600 seconds (10 minutes).
          format: int32
          type: integer
        ackIds:
          description: List of acknowledgment IDs.
          items:
            type: string
          type: array
      type: object
    ModifyPushConfigRequest:
      description: Request for the ModifyPushConfig method.
      properties:
        pushConfig:
          $ref: "#/components/schemas/PushConfig"
      type: object
    OidcToken:
      description: |-
        Contains information needed for generating an
        [OpenID Connect
        token](https://developers.google.com/identity/protocols/OpenIDConnect).
      properties:
        audience:
          description: >-
            Audience to be used when generating OIDC token. The audience claim

            identifies the recipients that the JWT is intended for. The audience

            value is a single case-sensitive string. Having multiple values (array)

            for the audience field is not supported. More info about the OIDC JWT

            token audience here: https://tools.ietf.org/html/rfc7519#section-4.1.3

            Note: if not specified, the Push endpoint URL will be used.
          type: string
        serviceAccountEmail:
          description: >-
            [Service account

            email](https://cloud.google.com/iam/docs/service-accounts)

            to be used for generating the OIDC token. The caller (for

            CreateSubscription, UpdateSubscription, and ModifyPushConfig RPCs) must

            have the iam.serviceAccounts.actAs permission for the service account.
          type: string
      type: object
    Policy:
      description: >-
        Defines an Identity and Access Management (IAM) policy. It is used to

        specify access control policies for Cloud Platform resources.



        A `Policy` consists of a list of `bindings`. A `binding` binds a list of

        `members` to a `role`, where the members can be user accounts, Google groups,

        Google domains, and service accounts. A `role` is a named list of permissions

        defined by IAM.


        **JSON Example**

            {
              "bindings": [
                {
                  "role": "roles/owner",
                  "members": [
                    "user:mike@example.com",
                    "group:admins@example.com",
                    "domain:google.com",
                    "serviceAccount:my-other-app@appspot.gserviceaccount.com"
                  ]
                },
                {
                  "role": "roles/viewer",
                  "members": ["user:sean@example.com"]
                }
              ]
            }

        **YAML Example**

            bindings:
            - members:
              - user:mike@example.com
              - group:admins@example.com
              - domain:google.com
              - serviceAccount:my-other-app@appspot.gserviceaccount.com
              role: roles/owner
            - members:
              - user:sean@example.com
              role: roles/viewer


        For a description of IAM and its features, see the

        [IAM developer's guide](https://cloud.google.com/iam/docs).
      properties:
        bindings:
          description: |-
            Associates a list of `members` to a `role`.
            `bindings` with no members will result in an error.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help

            prevent simultaneous updates of a policy from overwriting each other.

            It is strongly suggested that systems make use of the `etag` in the

            read-modify-write cycle to perform policy updates in order to avoid race

            conditions: An `etag` is returned in the response to `getIamPolicy`, and

            systems are expected to put that etag in the request to `setIamPolicy` to

            ensure that their change will be applied to the same version of the policy.


            If no `etag` is provided in the call to `setIamPolicy`, then the existing

            policy is overwritten.
          format: byte
          type: string
        version:
          description: >-
            Specifies the format of the policy.


            Valid values are 0, 1, and 3. Requests specifying an invalid value will be

            rejected.


            Policies with any conditional bindings must specify version 3. Policies

            without any conditional bindings may specify any valid value or leave the

            field unset.
          format: int32
          type: integer
      type: object
    PublishRequest:
      description: Request for the Publish method.
      properties:
        messages:
          description: The messages to publish.
          items:
            $ref: "#/components/schemas/PubsubMessage"
          type: array
      type: object
    PublishResponse:
      description: Response for the `Publish` method.
      properties:
        messageIds:
          description: >-
            The server-assigned ID of each published message, in the same order
            as

            the messages in the request. IDs are guaranteed to be unique within

            the topic.
          items:
            type: string
          type: array
      type: object
    PubsubMessage:
      description: >-
        A message that is published by publishers and consumed by subscribers.
        The

        message must contain either a non-empty data field or at least one attribute.

        Note that client libraries represent this object differently

        depending on the language. See the corresponding

        <a href="https://cloud.google.com/pubsub/docs/reference/libraries">client

        library documentation</a> for more information. See

        <a href="https://cloud.google.com/pubsub/quotas">Quotas and limits</a>

        for more information about message limits.
      properties:
        attributes:
          additionalProperties:
            type: string
          description: Optional attributes for this message.
          type: object
        data:
          description: >-
            The message data field. If this field is empty, the message must
            contain

            at least one attribute.
          format: byte
          type: string
        messageId:
          description: >-
            ID of this message, assigned by the server when the message is
            published.

            Guaranteed to be unique within the topic. This value may be read by a

            subscriber that receives a `PubsubMessage` via a `Pull` call or a push

            delivery. It must not be populated by the publisher in a `Publish` call.
          type: string
        publishTime:
          description: >-
            The time at which the message was published, populated by the server
            when

            it receives the `Publish` call. It must not be populated by the

            publisher in a `Publish` call.
          format: google-datetime
          type: string
      type: object
    PullRequest:
      description: Request for the `Pull` method.
      properties:
        maxMessages:
          description: >-
            The maximum number of messages to return for this request. Must be a

            positive integer. The Pub/Sub system may return fewer than the number

            specified.
          format: int32
          type: integer
        returnImmediately:
          description: >-
            If this field set to true, the system will respond immediately even
            if

            it there are no messages available to return in the `Pull` response.

            Otherwise, the system may wait (for a bounded amount of time) until at

            least one message is available, rather than returning no messages.
          type: boolean
      type: object
    PullResponse:
      description: Response for the `Pull` method.
      properties:
        receivedMessages:
          description: >-
            Received Pub/Sub messages. The list will be empty if there are no
            more

            messages available in the backlog. For JSON, the response can be entirely

            empty. The Pub/Sub system may return fewer than the `maxMessages` requested

            even if there are more messages available in the backlog.
          items:
            $ref: "#/components/schemas/ReceivedMessage"
          type: array
      type: object
    PushConfig:
      description: Configuration for a push delivery endpoint.
      properties:
        attributes:
          additionalProperties:
            type: string
          description: >-
            Endpoint configuration attributes that can be used to control
            different

            aspects of the message delivery.


            The only currently supported attribute is `x-goog-version`, which you can

            use to change the format of the pushed message. This attribute

            indicates the version of the data expected by the endpoint. This

            controls the shape of the pushed message (i.e., its fields and metadata).


            If not present during the `CreateSubscription` call, it will default to

            the version of the Pub/Sub API used to make such call. If not present in a

            `ModifyPushConfig` call, its value will not be changed. `GetSubscription`

            calls will always return a valid version, even if the subscription was

            created without this attribute.


            The only supported values for the `x-goog-version` attribute are:


            * `v1beta1`: uses the push format defined in the v1beta1 Pub/Sub API.

            * `v1` or `v1beta2`: uses the push format defined in the v1 Pub/Sub API.


            For example:

            <pre><code>attributes { "x-goog-version": "v1" } </code></pre>
          type: object
        oidcToken:
          $ref: "#/components/schemas/OidcToken"
        pushEndpoint:
          description: >-
            A URL locating the endpoint to which messages should be pushed.

            For example, a Webhook endpoint might use "https://example.com/push".
          type: string
      type: object
    ReceivedMessage:
      description: A message and its corresponding acknowledgment ID.
      properties:
        ackId:
          description: This ID can be used to acknowledge the received message.
          type: string
        message:
          $ref: "#/components/schemas/PubsubMessage"
      type: object
    SeekRequest:
      description: Request for the `Seek` method.
      properties:
        snapshot:
          description: >-
            The snapshot to seek to. The snapshot's topic must be the same as
            that of

            the provided subscription.

            Format is `projects/{project}/snapshots/{snap}`.
          type: string
        time:
          description: >-
            The time to seek to.

            Messages retained in the subscription that were published before this

            time are marked as acknowledged, and messages retained in the

            subscription that were published after this time are marked as

            unacknowledged. Note that this operation affects only those messages

            retained in the subscription (configured by the combination of

            `message_retention_duration` and `retain_acked_messages`). For example,

            if `time` corresponds to a point before the message retention

            window (or to a point before the system's notion of the subscription

            creation time), only retained messages will be marked as unacknowledged,

            and already-expunged messages will not be restored.
          format: google-datetime
          type: string
      type: object
    SeekResponse:
      description: Response for the `Seek` method (this response is empty).
      properties: {}
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: "#/components/schemas/Policy"
      type: object
    Snapshot:
      description: >-
        A snapshot resource. Snapshots are used in

        <a href="https://cloud.google.com/pubsub/docs/replay-overview">Seek</a>

        operations, which allow

        you to manage message acknowledgments in bulk. That is, you can set the

        acknowledgment state of messages in an existing subscription to the state

        captured by a snapshot.
      properties:
        expireTime:
          description: >-
            The snapshot is guaranteed to exist up until this time.

            A newly-created snapshot expires no later than 7 days from the time of its

            creation. Its exact lifetime is determined at creation by the existing

            backlog in the source subscription. Specifically, the lifetime of the

            snapshot is `7 days - (age of oldest unacked message in the subscription)`.

            For example, consider a subscription whose oldest unacked message is 3 days

            old. If a snapshot is created from this subscription, the snapshot -- which

            will always capture this 3-day-old backlog as long as the snapshot

            exists -- will expire in 4 days. The service will refuse to create a

            snapshot that would expire in less than 1 hour after creation.
          format: google-datetime
          type: string
        labels:
          additionalProperties:
            type: string
          description: >-
            See <a href="https://cloud.google.com/pubsub/docs/labels"> Creating
            and

            managing labels</a>.
          type: object
        name:
          description: The name of the snapshot.
          type: string
        topic:
          description: The name of the topic from which this snapshot is retaining messages.
          type: string
      type: object
    Subscription:
      description: A subscription resource.
      properties:
        ackDeadlineSeconds:
          description: >-
            The approximate amount of time (on a best-effort basis) Pub/Sub
            waits for

            the subscriber to acknowledge receipt before resending the message. In the

            interval after the message is delivered and before it is acknowledged, it

            is considered to be <i>outstanding</i>. During that time period, the

            message will not be redelivered (on a best-effort basis).


            For pull subscriptions, this value is used as the initial value for the ack

            deadline. To override this value for a given message, call

            `ModifyAckDeadline` with the corresponding `ack_id` if using

            non-streaming pull or send the `ack_id` in a

            `StreamingModifyAckDeadlineRequest` if using streaming pull.

            The minimum custom deadline you can specify is 10 seconds.

            The maximum custom deadline you can specify is 600 seconds (10 minutes).

            If this parameter is 0, a default value of 10 seconds is used.


            For push delivery, this value is also used to set the request timeout for

            the call to the push endpoint.


            If the subscriber never acknowledges the message, the Pub/Sub

            system will eventually redeliver the message.
          format: int32
          type: integer
        expirationPolicy:
          $ref: "#/components/schemas/ExpirationPolicy"
        labels:
          additionalProperties:
            type: string
          description: >-
            See <a href="https://cloud.google.com/pubsub/docs/labels"> Creating
            and

            managing labels</a>.
          type: object
        messageRetentionDuration:
          description: >-
            How long to retain unacknowledged messages in the subscription's
            backlog,

            from the moment a message is published.

            If `retain_acked_messages` is true, then this also configures the retention

            of acknowledged messages, and thus configures how far back in time a `Seek`

            can be done. Defaults to 7 days. Cannot be more than 7 days or less than 10

            minutes.
          format: google-duration
          type: string
        name:
          description: >-
            The name of the subscription. It must have the format

            `"projects/{project}/subscriptions/{subscription}"`. `{subscription}` must

            start with a letter, and contain only letters (`[A-Za-z]`), numbers

            (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`),

            plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters

            in length, and it must not start with `"goog"`.
          type: string
        pushConfig:
          $ref: "#/components/schemas/PushConfig"
        retainAckedMessages:
          description: >-
            Indicates whether to retain acknowledged messages. If true, then

            messages are not expunged from the subscription's backlog, even if they are

            acknowledged, until they fall out of the `message_retention_duration`

            window. This must be true if you would like to

            <a

            href="https://cloud.google.com/pubsub/docs/replay-overview#seek_to_a_time">

            Seek to a timestamp</a>.
          type: boolean
        topic:
          description: >-
            The name of the topic from which this subscription is receiving
            messages.

            Format is `projects/{project}/topics/{topic}`.

            The value of this field will be `_deleted-topic_` if the topic has been

            deleted.
          type: string
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with

            wildcards (such as '*' or 'storage.*') are not allowed. For more

            information see

            [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: |-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          items:
            type: string
          type: array
      type: object
    Topic:
      description: A topic resource.
      properties:
        kmsKeyName:
          description: >-
            The resource name of the Cloud KMS CryptoKey to be used to protect
            access

            to messages published on this topic.


            The expected format is `projects/*/locations/*/keyRings/*/cryptoKeys/*`.
          type: string
        labels:
          additionalProperties:
            type: string
          description: >-
            See <a href="https://cloud.google.com/pubsub/docs/labels"> Creating
            and

            managing labels</a>.
          type: object
        messageStoragePolicy:
          $ref: "#/components/schemas/MessageStoragePolicy"
        name:
          description: >-
            The name of the topic. It must have the format

            `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter,

            and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`),

            underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent

            signs (`%`). It must be between 3 and 255 characters in length, and it

            must not start with `"goog"`.
          type: string
      type: object
    UpdateSnapshotRequest:
      description: Request for the UpdateSnapshot method.
      properties:
        snapshot:
          $ref: "#/components/schemas/Snapshot"
        updateMask:
          description: |-
            Indicates which fields in the provided snapshot to update.
            Must be specified and non-empty.
          format: google-fieldmask
          type: string
      type: object
    UpdateSubscriptionRequest:
      description: Request for the UpdateSubscription method.
      properties:
        subscription:
          $ref: "#/components/schemas/Subscription"
        updateMask:
          description: |-
            Indicates which fields in the provided subscription to update.
            Must be specified and non-empty.
          format: google-fieldmask
          type: string
      type: object
    UpdateTopicRequest:
      description: Request for the UpdateTopic method.
      properties:
        topic:
          $ref: "#/components/schemas/Topic"
        updateMask:
          description: >-
            Indicates which fields in the provided topic to update. Must be
            specified

            and non-empty. Note that if `update_mask` contains

            "message_storage_policy" then the new value will be determined based on the

            policy configured at the project or organization level. The

            `message_storage_policy` must not be set in the `topic` provided above.
          format: google-fieldmask
          type: string
      type: object
