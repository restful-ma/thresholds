openapi: 3.0.0
info:
  description: The Azure SQL Database management API provides a RESTful set of web APIs
    that interact with Azure SQL Database services to manage your databases. The
    API enables users to create, retrieve, update, and delete databases,
    servers, and other entities.
  title: SqlManagementClient
  version: 2017-10-01-preview
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/sql/resource-manager/Microsoft.Sql/preview/2017-10-01-preview/ManagedInstanceKeys.json
      version: "2.0"
  x-providerName: azure.com
  x-serviceName: sql-ManagedInstanceKeys
  x-tags:
    - Azure
    - Microsoft
paths:
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/keys":
    get:
      description: Gets a list of managed instance keys.
      operationId: ManagedInstanceKeys_ListByInstance
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - $ref: "#/components/parameters/ManagedInstanceNameParameter"
        - description: An OData filter expression that filters elements in the collection.
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved the list of managed instance keys.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManagedInstanceKeyListResult"
              examples:
                List the keys for a managed instance.:
                  $ref: "#/components/examples/List_the_keys_for_a_managed_instance."
        default:
          description: >-
            *** Error Responses: ***

             * 400 InvalidKeyName - An invalid value was given for the server key name.

             * 400 InvalidKeyType - The create server key type is not supported.

             * 400 InvalidUpsertKeyType - Service Managed type keys are managed by Azure SQL. This key type does not support create or update by the user.

             * 400 InvalidKeyUpsertRequest - The create server key request does not exist or has no properties object.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found
      tags:
        - ManagedInstanceKeys
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/keys/{keyName}":
    delete:
      description: Deletes the managed instance key with the given name.
      operationId: ManagedInstanceKeys_Delete
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - $ref: "#/components/parameters/ManagedInstanceNameParameter"
        - description: The name of the managed instance key to be deleted.
          in: path
          name: keyName
          required: true
          schema:
            type: string
          examples:
            Delete the managed instance key:
              value: someVault_someKey_01234567890123456789012345678901
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully deleted the managed instance key.
        "202":
          description: Accepted
        "204":
          description: The specified managed instance key does not exist.
        default:
          description: >-
            *** Error Responses: ***

             * 400 InvalidKeyName - An invalid value was given for the server key name.

             * 400 InvalidKeyType - The create server key type is not supported.

             * 400 InvalidUpsertKeyType - Service Managed type keys are managed by Azure SQL. This key type does not support create or update by the user.

             * 400 InvalidKeyUpsertRequest - The create server key request does not exist or has no properties object.

             * 400 AzureKeyVaultInvalidExpirationDate - The operation could not be completed because the Azure Key Vault key expiration date is invalid.

             * 400 SecurityAzureKeyVaultUrlNullOrEmpty - The operation could not be completed because the Azure Key Vault Uri is null or empty.

             * 400 AzureKeyVaultInvalidUri - An invalid response from Azure Key Vault. Please use a valid Azure Key Vault URI.

             * 400 SecurityAzureKeyVaultInvalidKeyName - The operation could not be completed because of an invalid Server Key name.

             * 400 AzureKeyVaultMalformedVaultUri - The provided Key Vault uri is not valid.

             * 400 SecurityAdalPrincipalCertExpiredError - The operation could not be completed because the Azure Key Vault principal certificate has expired.

             * 400 SecurityInvalidAzureKeyVaultRecoveryLevel - The provided Key Vault uri is not valid.

             * 400 KeyMaterialNotFoundOnRemoteServer - Remote server does not have access to key material used as a TDE protector.

             * 400 AzureKeyVaultMismatchError - Unexpected Key Vault region found in the http response.

             * 400 AzureKeyVaultRsaKeyNotSupported - The provided key vault uses unsupported RSA Key Size or Key Type. The supported RSA key size is 2048 and Key Type is RSA.

             * 401 AzureKeyVaultKeyDisabled - The operation could not be completed on the server because the Azure Key Vault key is disabled.

             * 401 AzureKeyVaultNoServerIdentity - The server identity is not correctly configured.

             * 401 AzureKeyVaultMissingPermissions - The server is missing required permissions on the Azure Key Vault. 

             * 401 AdalGenericError - The operation could not be completed because an Azure Active Directory error was encountered.

             * 401 AdalServicePrincipalNotFound - The operation could not be completed because an Azure Active Directory library Service Principal not found error was encountered.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 ResourceNotFound - The requested resource was not found.

             * 409 ServerKeyNameAlreadyExists - The server key already exists on the server.

             * 409 ServerKeyUriAlreadyExists - The server key URI already exists on the server.

             * 409 ServerKeyDoesNotExists - The server key does not exist.

             * 409 AzureKeyVaultKeyNameNotFound - The operation could not be completed because the Azure Key Vault Key name does not exist.

             * 409 AzureKeyVaultKeyInUse - The key is currently being used by the server.

             * 503 AzureKeyVaultConnectionFailed - The operation could not be completed on the server because attempts to connect to Azure Key Vault have failed

             * 503 AzureKeyVaultGenericConnectionError - The operation could not be completed because an error was encountered when attempting to retrieve Key Vault information .
      tags:
        - ManagedInstanceKeys
      x-ms-long-running-operation: true
    get:
      description: Gets a managed instance key.
      operationId: ManagedInstanceKeys_Get
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - $ref: "#/components/parameters/ManagedInstanceNameParameter"
        - description: The name of the managed instance key to be retrieved.
          in: path
          name: keyName
          required: true
          schema:
            type: string
          examples:
            Get the managed instance key:
              value: someVault_someKey_01234567890123456789012345678901
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved the specified managed instance key.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManagedInstanceKey"
              examples:
                Get the managed instance key:
                  $ref: "#/components/examples/Get_the_managed_instance_key"
        default:
          description: >-
            *** Error Responses: ***

             * 400 InvalidKeyName - An invalid value was given for the server key name.

             * 400 InvalidKeyType - The create server key type is not supported.

             * 400 InvalidUpsertKeyType - Service Managed type keys are managed by Azure SQL. This key type does not support create or update by the user.

             * 400 InvalidKeyUpsertRequest - The create server key request does not exist or has no properties object.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 ResourceNotFound - The requested resource was not found.
      tags:
        - ManagedInstanceKeys
    put:
      description: Creates or updates a managed instance key.
      operationId: ManagedInstanceKeys_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - $ref: "#/components/parameters/ManagedInstanceNameParameter"
        - description: The name of the managed instance key to be operated on (updated or
            created).
          in: path
          name: keyName
          required: true
          schema:
            type: string
          examples:
            Creates or updates a managed instance key:
              value: someVault_someKey_01234567890123456789012345678901
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ManagedInstanceKey"
        description: The requested managed instance key resource state.
        required: true
      responses:
        "200":
          description: Successfully updated the managed instance key.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManagedInstanceKey"
              examples:
                Creates or updates a managed instance key:
                  $ref: "#/components/examples/Creates_or_updates_a_managed_instanc\
                    e_key"
        "201":
          description: Successfully created the managed instance key.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManagedInstanceKey"
              examples:
                Creates or updates a managed instance key:
                  $ref: "#/components/examples/Creates_or_updates_a_managed_instanc\
                    e_key"
        "202":
          description: Accepted
        default:
          description: >-
            *** Error Responses: ***

             * 400 InvalidKeyName - An invalid value was given for the server key name.

             * 400 InvalidKeyType - The create server key type is not supported.

             * 400 InvalidUpsertKeyType - Service Managed type keys are managed by Azure SQL. This key type does not support create or update by the user.

             * 400 InvalidKeyUpsertRequest - The create server key request does not exist or has no properties object.

             * 400 AzureKeyVaultInvalidExpirationDate - The operation could not be completed because the Azure Key Vault key expiration date is invalid.

             * 400 SecurityAzureKeyVaultUrlNullOrEmpty - The operation could not be completed because the Azure Key Vault Uri is null or empty.

             * 400 AzureKeyVaultInvalidUri - An invalid response from Azure Key Vault. Please use a valid Azure Key Vault URI.

             * 400 SecurityAzureKeyVaultInvalidKeyName - The operation could not be completed because of an invalid Server Key name.

             * 400 AzureKeyVaultMalformedVaultUri - The provided Key Vault uri is not valid.

             * 400 SecurityAdalPrincipalCertExpiredError - The operation could not be completed because the Azure Key Vault principal certificate has expired.

             * 400 SecurityInvalidAzureKeyVaultRecoveryLevel - The provided Key Vault uri is not valid.

             * 400 KeyMaterialNotFoundOnRemoteServer - Remote server does not have access to key material used as a TDE protector.

             * 400 AzureKeyVaultMismatchError - Unexpected Key Vault region found in the http response.

             * 400 AzureKeyVaultRsaKeyNotSupported - The provided key vault uses unsupported RSA Key Size or Key Type. The supported RSA key size is 2048 and Key Type is RSA.

             * 401 AzureKeyVaultKeyDisabled - The operation could not be completed on the server because the Azure Key Vault key is disabled.

             * 401 AzureKeyVaultNoServerIdentity - The server identity is not correctly configured.

             * 401 AzureKeyVaultMissingPermissions - The server is missing required permissions on the Azure Key Vault. 

             * 401 AdalGenericError - The operation could not be completed because an Azure Active Directory error was encountered.

             * 401 AdalServicePrincipalNotFound - The operation could not be completed because an Azure Active Directory library Service Principal not found error was encountered.

             * 404 SubscriptionDoesNotHaveServer - The requested server was not found

             * 404 ResourceNotFound - The requested resource was not found.

             * 409 ServerKeyNameAlreadyExists - The server key already exists on the server.

             * 409 ServerKeyUriAlreadyExists - The server key URI already exists on the server.

             * 409 ServerKeyDoesNotExists - The server key does not exist.

             * 409 AzureKeyVaultKeyNameNotFound - The operation could not be completed because the Azure Key Vault Key name does not exist.

             * 409 AzureKeyVaultKeyInUse - The key is currently being used by the server.

             * 503 AzureKeyVaultConnectionFailed - The operation could not be completed on the server because attempts to connect to Azure Key Vault have failed

             * 503 AzureKeyVaultGenericConnectionError - The operation could not be completed because an error was encountered when attempting to retrieve Key Vault information .
      tags:
        - ManagedInstanceKeys
      x-ms-long-running-operation: true
servers:
  - url: https://management.azure.com
components:
  examples:
    List_the_keys_for_a_managed_instance.:
      value:
        value:
          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-7398/providers/Microsoft.Sql/managedInstances/sqlcrudtest-4645/keys/someVault_someKey_01234567890123456789012345678901
            kind: azurekeyvault
            name: someVault_someKey_01234567890123456789012345678901
            properties:
              creationDate: 2017-05-01T00:00:00.0Z
              serverKeyType: AzureKeyVault
              thumbprint: 00112233445566778899AABBCCDDEEFFAABBCCDD
              uri: https://someVault.vault.azure.net/keys/someKey/01234567890123456789012345678901
            type: Microsoft.Sql/managedInstances/keys
          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-7398/providers/Microsoft.Sql/managedInstances/sqlcrudtest-4645/keys/myVault_myKey_11111111111111111111111111111111
            kind: azurekeyvault
            name: myVault_myKey_11111111111111111111111111111111
            properties:
              creationDate: 2017-05-01T00:00:00.0Z
              serverKeyType: AzureKeyVault
              thumbprint: AAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBBBBB
              uri: https://myVault.vault.azure.net/keys/myKey/11111111111111111111111111111111
            type: Microsoft.Sql/managedInstances/keys
          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-7398/providers/Microsoft.Sql/managedInstances/sqlcrudtest-4645/keys/ServiceManaged
            kind: servicemanaged
            name: ServiceManaged
            properties:
              serverKeyType: ServiceManaged
            type: Microsoft.Sql/managedInstances/keys
    Get_the_managed_instance_key:
      value:
        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-7398/providers/Microsoft.Sql/managedInstances/sqlcrudtest-4645/keys/someVault_someKey_01234567890123456789012345678901
        kind: azurekeyvault
        name: sqlcrudtest-4645
        properties:
          creationDate: 2017-05-01T00:00:00.0Z
          serverKeyType: AzureKeyVault
          thumbprint: 00112233445566778899AABBCCDDEEFFAABBCCDD
          uri: https://someVault.vault.azure.net/keys/someKey/01234567890123456789012345678901
        type: Microsoft.Sql/managedInstances/keys
    Creates_or_updates_a_managed_instance_key:
      value:
        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-7398/providers/Microsoft.Sql/managedInstances/sqlcrudtest-4645/keys/someVault_someKey_01234567890123456789012345678901
        kind: azurekeyvault
        name: sqlcrudtest-4645
        properties:
          creationDate: 2017-05-01T00:00:00.0Z
          serverKeyType: AzureKeyVault
          thumbprint: 00112233445566778899AABBCCDDEEFFAABBCCDD
          uri: https://someVault.vault.azure.net/keys/someKey/01234567890123456789012345678901
        type: Microsoft.Sql/managedInstances/keys
  parameters:
    ApiVersionParameter:
      description: The API version to use for the request.
      in: query
      name: api-version
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
      examples:
        List the keys for a managed instance.:
          value: 2017-10-01-preview
        Delete the managed instance key:
          value: 2017-10-01-preview
        Get the managed instance key:
          value: 2017-10-01-preview
        Creates or updates a managed instance key:
          value: 2017-10-01-preview
    BlobAuditingPolicyNameParameter:
      description: The name of the blob auditing policy.
      in: path
      name: blobAuditingPolicyName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
        enum:
          - default
    DatabaseNameParameter:
      description: The name of the database.
      in: path
      name: databaseName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ManagedInstanceNameParameter:
      description: The name of the managed instance.
      in: path
      name: managedInstanceName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        List the keys for a managed instance.:
          value: sqlcrudtest-4645
        Delete the managed instance key:
          value: sqlcrudtest-4645
        Get the managed instance key:
          value: sqlcrudtest-4645
        Creates or updates a managed instance key:
          value: sqlcrudtest-4645
    ResourceGroupParameter:
      description: The name of the resource group that contains the resource. You can
        obtain this value from the Azure Resource Manager API or the portal.
      in: path
      name: resourceGroupName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        List the keys for a managed instance.:
          value: sqlcrudtest-7398
        Delete the managed instance key:
          value: sqlcrudtest-7398
        Get the managed instance key:
          value: sqlcrudtest-7398
        Creates or updates a managed instance key:
          value: sqlcrudtest-7398
    ServerNameParameter:
      description: The name of the server.
      in: path
      name: serverName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SqlVirtualMachineContainerNameParameter:
      description: The name of the SqlVirtualMachineContainer.
      in: path
      name: sqlVirtualMachineContainerName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SqlVirtualMachineInstanceNameParameter:
      description: The name of the SqlVirtualMachineInstance.
      in: path
      name: sqlVirtualMachineInstanceName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      description: The subscription ID that identifies an Azure subscription.
      in: path
      name: subscriptionId
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
      examples:
        List the keys for a managed instance.:
          value: 00000000-1111-2222-3333-444444444444
        Delete the managed instance key:
          value: 00000000-1111-2222-3333-444444444444
        Get the managed instance key:
          value: 00000000-1111-2222-3333-444444444444
        Creates or updates a managed instance key:
          value: 00000000-1111-2222-3333-444444444444
    VirtualClusterNameParameter:
      description: The name of the virtual cluster.
      in: path
      name: virtualClusterName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    ManagedInstanceKey:
      allOf:
        - allOf:
            - description: ARM resource.
              properties:
                id:
                  description: Resource ID.
                  readOnly: true
                  type: string
                name:
                  description: Resource name.
                  readOnly: true
                  type: string
                type:
                  description: Resource type.
                  readOnly: true
                  type: string
              type: object
              x-ms-azure-resource: true
          description: ARM proxy resource.
          properties: {}
          type: object
      description: A managed instance key.
      properties:
        kind:
          description: Kind of encryption protector. This is metadata used for the Azure
            portal experience.
          readOnly: true
          type: string
        properties:
          $ref: "#/components/schemas/ManagedInstanceKeyProperties"
      type: object
    ManagedInstanceKeyListResult:
      description: A list of managed instance keys.
      properties:
        nextLink:
          description: Link to retrieve next page of results.
          readOnly: true
          type: string
        value:
          description: Array of results.
          items:
            $ref: "#/components/schemas/ManagedInstanceKey"
          readOnly: true
          type: array
      type: object
    ManagedInstanceKeyProperties:
      description: Properties for a key execution.
      properties:
        creationDate:
          description: The key creation date.
          format: date-time
          readOnly: true
          type: string
        serverKeyType:
          description: The key type like 'ServiceManaged', 'AzureKeyVault'.
          enum:
            - ServiceManaged
            - AzureKeyVault
          type: string
          x-ms-enum:
            modelAsString: true
            name: ServerKeyType
          x-ms-mutability:
            - create
        thumbprint:
          description: Thumbprint of the key.
          readOnly: true
          type: string
        uri:
          description: The URI of the key. If the ServerKeyType is AzureKeyVault, then the
            URI is required.
          type: string
          x-ms-mutability:
            - create
      required:
        - serverKeyType
      type: object
