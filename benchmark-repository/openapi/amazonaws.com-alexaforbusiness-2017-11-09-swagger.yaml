openapi: 3.0.0
info:
  version: 2017-11-09
  x-release: v4
  title: Alexa For Business
  description: "Alexa for Business helps you use Alexa in your organization. Alexa for
    Business provides you with the tools to manage Alexa devices, enroll your
    users, and assign skills, at scale. You can build your own context-aware
    voice skills using the Alexa Skills Kit and the Alexa for Business API
    operations. You can also make these available as private skills for your
    organization. Alexa for Business makes it efficient to voice-enable your
    products and services, thus providing context-aware voice experiences for
    your customers. Device makers building with the Alexa Voice Service (AVS)
    can create fully integrated solutions, register their products with Alexa
    for Business, and manage them as shared devices in their organization. "
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: alexaforbusiness
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/alexaforbusiness-2017-11-09.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/a4b/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=AlexaForBusiness.ApproveSkill:
    post:
      operationId: ApproveSkill
      description: Associates a skill with the organization under the customer's AWS
        account. If a skill is private, the user implicitly accepts access to
        this skill during enablement.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApproveSkillResponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ApproveSkill
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApproveSkillRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.AssociateContactWithAddressBook:
    post:
      operationId: AssociateContactWithAddressBook
      description: Associates a contact with a given address book.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateContactWithAddressBookResponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.AssociateContactWithAddressBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateContactWithAddressBookRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.AssociateDeviceWithNetworkProfile:
    post:
      operationId: AssociateDeviceWithNetworkProfile
      description: Associates a device with the specified network profile.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateDeviceWithNetworkProfileRespon\
                  se"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "482":
          description: DeviceNotRegisteredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceNotRegisteredException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.AssociateDeviceWithNetworkProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateDeviceWithNetworkProfileRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.AssociateDeviceWithRoom:
    post:
      operationId: AssociateDeviceWithRoom
      description: "Associates a device with a given room. This applies all the settings
        from the room profile to the device, and all the skills in any skill
        groups added to that room. This operation requires the device to be
        online, or else a manual sync is required. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateDeviceWithRoomResponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "482":
          description: DeviceNotRegisteredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceNotRegisteredException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.AssociateDeviceWithRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateDeviceWithRoomRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.AssociateSkillGroupWithRoom:
    post:
      operationId: AssociateSkillGroupWithRoom
      description: Associates a skill group with a given room. This enables all skills in
        the associated skill group on all devices in the room.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateSkillGroupWithRoomResponse"
        "480":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.AssociateSkillGroupWithRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateSkillGroupWithRoomRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.AssociateSkillWithSkillGroup:
    post:
      operationId: AssociateSkillWithSkillGroup
      description: Associates a skill with a skill group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateSkillWithSkillGroupResponse"
        "480":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "482":
          description: SkillNotLinkedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SkillNotLinkedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.AssociateSkillWithSkillGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateSkillWithSkillGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.AssociateSkillWithUsers:
    post:
      operationId: AssociateSkillWithUsers
      description: Makes a private skill available for enrolled users to enable on their
        devices.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateSkillWithUsersResponse"
        "480":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.AssociateSkillWithUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateSkillWithUsersRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.CreateAddressBook:
    post:
      operationId: CreateAddressBook
      description: Creates an address book with the specified details.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAddressBookResponse"
        "480":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.CreateAddressBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAddressBookRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.CreateBusinessReportSchedule:
    post:
      operationId: CreateBusinessReportSchedule
      description: Creates a recurring schedule for usage reports to deliver to the
        specified S3 location with a specified daily or weekly interval.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateBusinessReportScheduleResponse"
        "480":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.CreateBusinessReportSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateBusinessReportScheduleRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.CreateConferenceProvider:
    post:
      operationId: CreateConferenceProvider
      description: Adds a new conference provider under the user's AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateConferenceProviderResponse"
        "480":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.CreateConferenceProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateConferenceProviderRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.CreateContact:
    post:
      operationId: CreateContact
      description: Creates a contact with the specified details.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateContactResponse"
        "480":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.CreateContact
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateContactRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.CreateGatewayGroup:
    post:
      operationId: CreateGatewayGroup
      description: Creates a gateway group with the specified details.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateGatewayGroupResponse"
        "480":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.CreateGatewayGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGatewayGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.CreateNetworkProfile:
    post:
      operationId: CreateNetworkProfile
      description: Creates a network profile with the specified details.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateNetworkProfileResponse"
        "480":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: InvalidCertificateAuthorityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCertificateAuthorityException"
        "484":
          description: InvalidServiceLinkedRoleStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidServiceLinkedRoleStateException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.CreateNetworkProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateNetworkProfileRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.CreateProfile:
    post:
      operationId: CreateProfile
      description: Creates a new room profile with the specified details.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateProfileResponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.CreateProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProfileRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.CreateRoom:
    post:
      operationId: CreateRoom
      description: Creates a room with the specified details.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRoomResponse"
        "480":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.CreateRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRoomRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.CreateSkillGroup:
    post:
      operationId: CreateSkillGroup
      description: Creates a skill group with a specified name and description.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateSkillGroupResponse"
        "480":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.CreateSkillGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSkillGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.CreateUser:
    post:
      operationId: CreateUser
      description: Creates a user.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateUserResponse"
        "480":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteAddressBook:
    post:
      operationId: DeleteAddressBook
      description: Deletes an address book by the address book ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteAddressBookResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteAddressBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteAddressBookRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteBusinessReportSchedule:
    post:
      operationId: DeleteBusinessReportSchedule
      description: Deletes the recurring report delivery schedule with the specified
        schedule ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteBusinessReportScheduleResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteBusinessReportSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteBusinessReportScheduleRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteConferenceProvider:
    post:
      operationId: DeleteConferenceProvider
      description: Deletes a conference provider.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteConferenceProviderResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteConferenceProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteConferenceProviderRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteContact:
    post:
      operationId: DeleteContact
      description: Deletes a contact by the contact ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteContactResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteContact
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteContactRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteDevice:
    post:
      operationId: DeleteDevice
      description: Removes a device from Alexa For Business.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDeviceResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "482":
          description: InvalidCertificateAuthorityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCertificateAuthorityException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDeviceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteDeviceUsageData:
    post:
      operationId: DeleteDeviceUsageData
      description: When this action is called for a specified shared device, it allows
        authorized users to delete the device's entire previous history of voice
        input data and associated response data. This action can be called once
        every 24 hours for a specific shared device.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDeviceUsageDataResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: DeviceNotRegisteredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceNotRegisteredException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteDeviceUsageData
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDeviceUsageDataRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteGatewayGroup:
    post:
      operationId: DeleteGatewayGroup
      description: Deletes a gateway group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteGatewayGroupResponse"
        "480":
          description: ResourceAssociatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAssociatedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteGatewayGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteGatewayGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteNetworkProfile:
    post:
      operationId: DeleteNetworkProfile
      description: Deletes a network profile by the network profile ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteNetworkProfileResponse"
        "480":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteNetworkProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteNetworkProfileRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteProfile:
    post:
      operationId: DeleteProfile
      description: Deletes a room profile by the profile ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteProfileResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteProfileRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteRoom:
    post:
      operationId: DeleteRoom
      description: Deletes a room by the room ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRoomResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRoomRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteRoomSkillParameter:
    post:
      operationId: DeleteRoomSkillParameter
      description: Deletes room skill parameter details by room, skill, and parameter key
        ID.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRoomSkillParameterResponse"
        "480":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteRoomSkillParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRoomSkillParameterRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteSkillAuthorization:
    post:
      operationId: DeleteSkillAuthorization
      description: Unlinks a third-party account from a skill.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSkillAuthorizationResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteSkillAuthorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteSkillAuthorizationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteSkillGroup:
    post:
      operationId: DeleteSkillGroup
      description: Deletes a skill group by skill group ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSkillGroupResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteSkillGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteSkillGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DeleteUser:
    post:
      operationId: DeleteUser
      description: Deletes a specified user by user ARN and enrollment ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteUserResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DeleteUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteUserRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DisassociateContactFromAddressBook:
    post:
      operationId: DisassociateContactFromAddressBook
      description: Disassociates a contact from a given address book.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateContactFromAddressBookRespo\
                  nse"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DisassociateContactFromAddressBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateContactFromAddressBookRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DisassociateDeviceFromRoom:
    post:
      operationId: DisassociateDeviceFromRoom
      description: Disassociates a device from its current room. The device continues to be
        connected to the Wi-Fi network and is still registered to the account.
        The device settings and skills are removed from the room.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateDeviceFromRoomResponse"
        "480":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "481":
          description: DeviceNotRegisteredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceNotRegisteredException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DisassociateDeviceFromRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateDeviceFromRoomRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DisassociateSkillFromSkillGroup:
    post:
      operationId: DisassociateSkillFromSkillGroup
      description: Disassociates a skill from a skill group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateSkillFromSkillGroupResponse"
        "480":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DisassociateSkillFromSkillGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateSkillFromSkillGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DisassociateSkillFromUsers:
    post:
      operationId: DisassociateSkillFromUsers
      description: Makes a private skill unavailable for enrolled users and prevents them
        from enabling it on their devices.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateSkillFromUsersResponse"
        "480":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DisassociateSkillFromUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateSkillFromUsersRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.DisassociateSkillGroupFromRoom:
    post:
      operationId: DisassociateSkillGroupFromRoom
      description: Disassociates a skill group from a specified room. This disables all
        skills in the skill group on all devices in the room.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateSkillGroupFromRoomResponse"
        "480":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.DisassociateSkillGroupFromRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateSkillGroupFromRoomRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.ForgetSmartHomeAppliances:
    post:
      operationId: ForgetSmartHomeAppliances
      description: Forgets smart home appliances associated to a room.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForgetSmartHomeAppliancesResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ForgetSmartHomeAppliances
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ForgetSmartHomeAppliancesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetAddressBook:
    post:
      operationId: GetAddressBook
      description: Gets address the book details by the address book ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAddressBookResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetAddressBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetAddressBookRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetConferencePreference:
    post:
      operationId: GetConferencePreference
      description: Retrieves the existing conference preferences.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetConferencePreferenceResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetConferencePreference
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetConferencePreferenceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetConferenceProvider:
    post:
      operationId: GetConferenceProvider
      description: Gets details about a specific conference provider.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetConferenceProviderResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetConferenceProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetConferenceProviderRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetContact:
    post:
      operationId: GetContact
      description: Gets the contact details by the contact ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetContactResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetContact
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetContactRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetDevice:
    post:
      operationId: GetDevice
      description: Gets the details of a device by device ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDeviceResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDeviceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetGateway:
    post:
      operationId: GetGateway
      description: Retrieves the details of a gateway.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetGatewayResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetGateway
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetGatewayRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetGatewayGroup:
    post:
      operationId: GetGatewayGroup
      description: Retrieves the details of a gateway group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetGatewayGroupResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetGatewayGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetGatewayGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetInvitationConfiguration:
    post:
      operationId: GetInvitationConfiguration
      description: Retrieves the configured values for the user enrollment invitation email
        template.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInvitationConfigurationResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetInvitationConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetInvitationConfigurationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetNetworkProfile:
    post:
      operationId: GetNetworkProfile
      description: Gets the network profile details by the network profile ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetNetworkProfileResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: InvalidSecretsManagerResourceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidSecretsManagerResourceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetNetworkProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetNetworkProfileRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetProfile:
    post:
      operationId: GetProfile
      description: Gets the details of a room profile by profile ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetProfileResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetProfileRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetRoom:
    post:
      operationId: GetRoom
      description: Gets room details by room ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRoomResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRoomRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetRoomSkillParameter:
    post:
      operationId: GetRoomSkillParameter
      description: Gets room skill parameter details by room, skill, and parameter key ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRoomSkillParameterResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetRoomSkillParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRoomSkillParameterRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.GetSkillGroup:
    post:
      operationId: GetSkillGroup
      description: Gets skill group details by skill group ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSkillGroupResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.GetSkillGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetSkillGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.ListBusinessReportSchedules:
    post:
      operationId: ListBusinessReportSchedules
      description: Lists the details of the schedules that a user configured.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListBusinessReportSchedulesResponse"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ListBusinessReportSchedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListBusinessReportSchedulesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.ListConferenceProviders:
    post:
      operationId: ListConferenceProviders
      description: Lists conference providers under a specific AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListConferenceProvidersResponse"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ListConferenceProviders
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListConferenceProvidersRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.ListDeviceEvents:
    post:
      operationId: ListDeviceEvents
      description: Lists the device event history, including device connection status, for
        up to 30 days.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDeviceEventsResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ListDeviceEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListDeviceEventsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.ListGatewayGroups:
    post:
      operationId: ListGatewayGroups
      description: Retrieves a list of gateway group summaries. Use GetGatewayGroup to
        retrieve details of a specific gateway group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGatewayGroupsResponse"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ListGatewayGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListGatewayGroupsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.ListGateways:
    post:
      operationId: ListGateways
      description: Retrieves a list of gateway summaries. Use GetGateway to retrieve
        details of a specific gateway. An optional gateway group ARN can be
        provided to only retrieve gateway summaries of gateways that are
        associated with that gateway group ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGatewaysResponse"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ListGateways
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListGatewaysRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.ListSkills:
    post:
      operationId: ListSkills
      description: Lists all enabled skills in a specific skill group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSkillsResponse"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ListSkills
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListSkillsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.ListSkillsStoreCategories:
    post:
      operationId: ListSkillsStoreCategories
      description: Lists all categories in the Alexa skill store.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSkillsStoreCategoriesResponse"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ListSkillsStoreCategories
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListSkillsStoreCategoriesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.ListSkillsStoreSkillsByCategory:
    post:
      operationId: ListSkillsStoreSkillsByCategory
      description: Lists all skills in the Alexa skill store by category.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSkillsStoreSkillsByCategoryResponse"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ListSkillsStoreSkillsByCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListSkillsStoreSkillsByCategoryRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.ListSmartHomeAppliances:
    post:
      operationId: ListSmartHomeAppliances
      description: Lists all of the smart home appliances associated with a room.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSmartHomeAppliancesResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ListSmartHomeAppliances
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListSmartHomeAppliancesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.ListTags:
    post:
      operationId: ListTags
      description: Lists all tags for the specified resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ListTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.PutConferencePreference:
    post:
      operationId: PutConferencePreference
      description: Sets the conference preferences on a specific conference provider at the
        account level.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutConferencePreferenceResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.PutConferencePreference
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutConferencePreferenceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.PutInvitationConfiguration:
    post:
      operationId: PutInvitationConfiguration
      description: Configures the email template for the user enrollment invitation with
        the specified attributes.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutInvitationConfigurationResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.PutInvitationConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutInvitationConfigurationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.PutRoomSkillParameter:
    post:
      operationId: PutRoomSkillParameter
      description: Updates room skill parameter details by room, skill, and parameter key
        ID. Not all skills have a room skill parameter.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutRoomSkillParameterResponse"
        "480":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.PutRoomSkillParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutRoomSkillParameterRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.PutSkillAuthorization:
    post:
      operationId: PutSkillAuthorization
      description: Links a user's account to a third-party skill provider. If this API
        operation is called by an assumed IAM role, the skill being linked must
        be a private skill. Also, the skill must be owned by the AWS account
        that assumed the IAM role.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutSkillAuthorizationResponse"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.PutSkillAuthorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutSkillAuthorizationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.RegisterAVSDevice:
    post:
      operationId: RegisterAVSDevice
      description: Registers an Alexa-enabled device built by an Original Equipment
        Manufacturer (OEM) using Alexa Voice Service (AVS).
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterAVSDeviceResponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "482":
          description: InvalidDeviceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeviceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.RegisterAVSDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterAVSDeviceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.RejectSkill:
    post:
      operationId: RejectSkill
      description: "Disassociates a skill from the organization under a user's AWS account.
        If the skill is a private skill, it moves to an AcceptStatus of PENDING.
        Any private or public skill that is rejected can be added later by
        calling the ApproveSkill API. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RejectSkillResponse"
        "480":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "481":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.RejectSkill
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RejectSkillRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.ResolveRoom:
    post:
      operationId: ResolveRoom
      description: Determines the details for the room from which a skill request was
        invoked. This operation is used by skill developers.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResolveRoomResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.ResolveRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResolveRoomRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.RevokeInvitation:
    post:
      operationId: RevokeInvitation
      description: Revokes an invitation and invalidates the enrollment URL.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RevokeInvitationResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.RevokeInvitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RevokeInvitationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.SearchAddressBooks:
    post:
      operationId: SearchAddressBooks
      description: Searches address books and lists the ones that meet a set of filter and
        sort criteria.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchAddressBooksResponse"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.SearchAddressBooks
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchAddressBooksRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.SearchContacts:
    post:
      operationId: SearchContacts
      description: Searches contacts and lists the ones that meet a set of filter and sort
        criteria.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchContactsResponse"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.SearchContacts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchContactsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.SearchDevices:
    post:
      operationId: SearchDevices
      description: Searches devices and lists the ones that meet a set of filter criteria.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchDevicesResponse"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.SearchDevices
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchDevicesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.SearchNetworkProfiles:
    post:
      operationId: SearchNetworkProfiles
      description: Searches network profiles and lists the ones that meet a set of filter
        and sort criteria.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchNetworkProfilesResponse"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.SearchNetworkProfiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchNetworkProfilesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.SearchProfiles:
    post:
      operationId: SearchProfiles
      description: Searches room profiles and lists the ones that meet a set of filter
        criteria.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchProfilesResponse"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.SearchProfiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchProfilesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.SearchRooms:
    post:
      operationId: SearchRooms
      description: Searches rooms and lists the ones that meet a set of filter and sort
        criteria.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchRoomsResponse"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.SearchRooms
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchRoomsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.SearchSkillGroups:
    post:
      operationId: SearchSkillGroups
      description: Searches skill groups and lists the ones that meet a set of filter and
        sort criteria.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchSkillGroupsResponse"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.SearchSkillGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchSkillGroupsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.SearchUsers:
    post:
      operationId: SearchUsers
      description: Searches users and lists the ones that meet a set of filter and sort
        criteria.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchUsersResponse"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.SearchUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchUsersRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.SendAnnouncement:
    post:
      operationId: SendAnnouncement
      description: "Triggers an asynchronous flow to send text, SSML, or audio
        announcements to rooms that are identified by a search or filter. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendAnnouncementResponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.SendAnnouncement
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendAnnouncementRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.SendInvitation:
    post:
      operationId: SendInvitation
      description: "Sends an enrollment invitation email with a URL to a user. The URL is
        valid for 30 days or until you call this operation again, whichever
        comes first. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendInvitationResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: InvalidUserStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidUserStatusException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.SendInvitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendInvitationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.StartDeviceSync:
    post:
      operationId: StartDeviceSync
      description: <p>Resets a device and its account to the known default settings. This
        clears all information and settings set by previous users in the
        following ways:</p> <ul> <li> <p>Bluetooth - This unpairs all bluetooth
        devices paired with your echo device.</p> </li> <li> <p>Volume - This
        resets the echo device's volume to the default value.</p> </li> <li>
        <p>Notifications - This clears all notifications from your echo
        device.</p> </li> <li> <p>Lists - This clears all to-do items from your
        echo device.</p> </li> <li> <p>Settings - This internally syncs the
        room's profile (if the device is assigned to a room), contacts, address
        books, delegation access for account linking, and communications (if
        enabled on the room profile).</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartDeviceSyncResponse"
        "480":
          description: DeviceNotRegisteredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceNotRegisteredException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.StartDeviceSync
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartDeviceSyncRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.StartSmartHomeApplianceDiscovery:
    post:
      operationId: StartSmartHomeApplianceDiscovery
      description: Initiates the discovery of any smart home appliances associated with the
        room.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartSmartHomeApplianceDiscoveryResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.StartSmartHomeApplianceDiscovery
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartSmartHomeApplianceDiscoveryRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.TagResource:
    post:
      operationId: TagResource
      description: Adds metadata tags to a specified resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.TagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.UntagResource:
    post:
      operationId: UntagResource
      description: Removes metadata tags from a specified resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.UntagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UntagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.UpdateAddressBook:
    post:
      operationId: UpdateAddressBook
      description: Updates address book details by the address book ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateAddressBookResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: NameInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.UpdateAddressBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAddressBookRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.UpdateBusinessReportSchedule:
    post:
      operationId: UpdateBusinessReportSchedule
      description: Updates the configuration of the report delivery schedule with the
        specified schedule ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateBusinessReportScheduleResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.UpdateBusinessReportSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateBusinessReportScheduleRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.UpdateConferenceProvider:
    post:
      operationId: UpdateConferenceProvider
      description: Updates an existing conference provider's settings.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateConferenceProviderResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.UpdateConferenceProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateConferenceProviderRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.UpdateContact:
    post:
      operationId: UpdateContact
      description: Updates the contact details by the contact ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateContactResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.UpdateContact
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateContactRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.UpdateDevice:
    post:
      operationId: UpdateDevice
      description: Updates the device name by device ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDeviceResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "482":
          description: DeviceNotRegisteredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceNotRegisteredException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.UpdateDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDeviceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.UpdateGateway:
    post:
      operationId: UpdateGateway
      description: Updates the details of a gateway. If any optional field is not provided,
        the existing corresponding value is left unmodified.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateGatewayResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: NameInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameInUseException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.UpdateGateway
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateGatewayRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.UpdateGatewayGroup:
    post:
      operationId: UpdateGatewayGroup
      description: Updates the details of a gateway group. If any optional field is not
        provided, the existing corresponding value is left unmodified.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateGatewayGroupResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: NameInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameInUseException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.UpdateGatewayGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateGatewayGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.UpdateNetworkProfile:
    post:
      operationId: UpdateNetworkProfile
      description: Updates a network profile by the network profile ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateNetworkProfileResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: NameInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: InvalidCertificateAuthorityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCertificateAuthorityException"
        "484":
          description: InvalidSecretsManagerResourceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidSecretsManagerResourceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.UpdateNetworkProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateNetworkProfileRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.UpdateProfile:
    post:
      operationId: UpdateProfile
      description: Updates an existing room profile by room profile ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateProfileResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: NameInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.UpdateProfile
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProfileRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.UpdateRoom:
    post:
      operationId: UpdateRoom
      description: Updates room details by room ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateRoomResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: NameInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameInUseException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.UpdateRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRoomRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AlexaForBusiness.UpdateSkillGroup:
    post:
      operationId: UpdateSkillGroup
      description: Updates skill group details by skill group ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateSkillGroupResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: NameInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NameInUseException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AlexaForBusiness.UpdateSkillGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSkillGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://a4b.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Alexa For Business multi-region endpoint
  - url: https://a4b.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Alexa For Business multi-region endpoint
  - url: http://a4b.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Alexa For Business endpoint for China (Beijing) and China (Ningxia)
  - url: https://a4b.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Alexa For Business endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    ApproveSkillResponse:
      type: object
      properties: {}
    ApproveSkillRequest:
      type: object
      required:
        - SkillId
      properties:
        SkillId:
          $ref: "#/components/schemas/SkillId"
    LimitExceededException: {}
    NotFoundException: {}
    ConcurrentModificationException: {}
    AssociateContactWithAddressBookResponse:
      type: object
      properties: {}
    AssociateContactWithAddressBookRequest:
      type: object
      required:
        - ContactArn
        - AddressBookArn
      properties:
        ContactArn:
          $ref: "#/components/schemas/Arn"
        AddressBookArn:
          $ref: "#/components/schemas/Arn"
    AssociateDeviceWithNetworkProfileResponse:
      type: object
      properties: {}
    AssociateDeviceWithNetworkProfileRequest:
      type: object
      required:
        - DeviceArn
        - NetworkProfileArn
      properties:
        DeviceArn:
          $ref: "#/components/schemas/Arn"
        NetworkProfileArn:
          $ref: "#/components/schemas/Arn"
    DeviceNotRegisteredException: {}
    AssociateDeviceWithRoomResponse:
      type: object
      properties: {}
    AssociateDeviceWithRoomRequest:
      type: object
      properties:
        DeviceArn:
          $ref: "#/components/schemas/Arn"
        RoomArn:
          $ref: "#/components/schemas/Arn"
    AssociateSkillGroupWithRoomResponse:
      type: object
      properties: {}
    AssociateSkillGroupWithRoomRequest:
      type: object
      properties:
        SkillGroupArn:
          $ref: "#/components/schemas/Arn"
        RoomArn:
          $ref: "#/components/schemas/Arn"
    AssociateSkillWithSkillGroupResponse:
      type: object
      properties: {}
    AssociateSkillWithSkillGroupRequest:
      type: object
      required:
        - SkillId
      properties:
        SkillGroupArn:
          $ref: "#/components/schemas/Arn"
        SkillId:
          $ref: "#/components/schemas/SkillId"
    SkillNotLinkedException: {}
    AssociateSkillWithUsersResponse:
      type: object
      properties: {}
    AssociateSkillWithUsersRequest:
      type: object
      required:
        - SkillId
      properties:
        SkillId:
          $ref: "#/components/schemas/SkillId"
    CreateAddressBookResponse:
      type: object
      properties:
        AddressBookArn:
          $ref: "#/components/schemas/Arn"
    CreateAddressBookRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/AddressBookName"
        Description:
          $ref: "#/components/schemas/AddressBookDescription"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
    AlreadyExistsException: {}
    CreateBusinessReportScheduleResponse:
      type: object
      properties:
        ScheduleArn:
          $ref: "#/components/schemas/Arn"
    CreateBusinessReportScheduleRequest:
      type: object
      required:
        - Format
        - ContentRange
      properties:
        ScheduleName:
          $ref: "#/components/schemas/BusinessReportScheduleName"
        S3BucketName:
          $ref: "#/components/schemas/CustomerS3BucketName"
        S3KeyPrefix:
          $ref: "#/components/schemas/S3KeyPrefix"
        Format:
          $ref: "#/components/schemas/BusinessReportFormat"
        ContentRange:
          $ref: "#/components/schemas/BusinessReportContentRange"
        Recurrence:
          $ref: "#/components/schemas/BusinessReportRecurrence"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
    CreateConferenceProviderResponse:
      type: object
      properties:
        ConferenceProviderArn:
          $ref: "#/components/schemas/Arn"
    CreateConferenceProviderRequest:
      type: object
      required:
        - ConferenceProviderName
        - ConferenceProviderType
        - MeetingSetting
      properties:
        ConferenceProviderName:
          $ref: "#/components/schemas/ConferenceProviderName"
        ConferenceProviderType:
          $ref: "#/components/schemas/ConferenceProviderType"
        IPDialIn:
          $ref: "#/components/schemas/IPDialIn"
        PSTNDialIn:
          $ref: "#/components/schemas/PSTNDialIn"
        MeetingSetting:
          $ref: "#/components/schemas/MeetingSetting"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
    CreateContactResponse:
      type: object
      properties:
        ContactArn:
          $ref: "#/components/schemas/Arn"
    CreateContactRequest:
      type: object
      required:
        - FirstName
      properties:
        DisplayName:
          $ref: "#/components/schemas/ContactName"
        FirstName:
          $ref: "#/components/schemas/ContactName"
        LastName:
          $ref: "#/components/schemas/ContactName"
        PhoneNumber:
          $ref: "#/components/schemas/RawPhoneNumber"
        PhoneNumbers:
          $ref: "#/components/schemas/PhoneNumberList"
        SipAddresses:
          $ref: "#/components/schemas/SipAddressList"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
    CreateGatewayGroupResponse:
      type: object
      properties:
        GatewayGroupArn:
          $ref: "#/components/schemas/Arn"
    CreateGatewayGroupRequest:
      type: object
      required:
        - Name
        - ClientRequestToken
      properties:
        Name:
          $ref: "#/components/schemas/GatewayGroupName"
        Description:
          $ref: "#/components/schemas/GatewayGroupDescription"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
    CreateNetworkProfileResponse:
      type: object
      properties:
        NetworkProfileArn:
          $ref: "#/components/schemas/Arn"
    CreateNetworkProfileRequest:
      type: object
      required:
        - NetworkProfileName
        - Ssid
        - SecurityType
        - ClientRequestToken
      properties:
        NetworkProfileName:
          $ref: "#/components/schemas/NetworkProfileName"
        Description:
          $ref: "#/components/schemas/NetworkProfileDescription"
        Ssid:
          $ref: "#/components/schemas/NetworkSsid"
        SecurityType:
          $ref: "#/components/schemas/NetworkSecurityType"
        EapMethod:
          $ref: "#/components/schemas/NetworkEapMethod"
        CurrentPassword:
          $ref: "#/components/schemas/CurrentWiFiPassword"
        NextPassword:
          $ref: "#/components/schemas/NextWiFiPassword"
        CertificateAuthorityArn:
          $ref: "#/components/schemas/Arn"
        TrustAnchors:
          $ref: "#/components/schemas/TrustAnchorList"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
    InvalidCertificateAuthorityException: {}
    InvalidServiceLinkedRoleStateException: {}
    CreateProfileResponse:
      type: object
      properties:
        ProfileArn:
          $ref: "#/components/schemas/Arn"
    CreateProfileRequest:
      type: object
      required:
        - ProfileName
        - Timezone
        - Address
        - DistanceUnit
        - TemperatureUnit
        - WakeWord
      properties:
        ProfileName:
          $ref: "#/components/schemas/ProfileName"
        Timezone:
          $ref: "#/components/schemas/Timezone"
        Address:
          $ref: "#/components/schemas/Address"
        DistanceUnit:
          $ref: "#/components/schemas/DistanceUnit"
        TemperatureUnit:
          $ref: "#/components/schemas/TemperatureUnit"
        WakeWord:
          $ref: "#/components/schemas/WakeWord"
        Locale:
          $ref: "#/components/schemas/DeviceLocale"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        SetupModeDisabled:
          $ref: "#/components/schemas/Boolean"
        MaxVolumeLimit:
          $ref: "#/components/schemas/MaxVolumeLimit"
        PSTNEnabled:
          $ref: "#/components/schemas/Boolean"
    CreateRoomResponse:
      type: object
      properties:
        RoomArn:
          $ref: "#/components/schemas/Arn"
    CreateRoomRequest:
      type: object
      required:
        - RoomName
      properties:
        RoomName:
          $ref: "#/components/schemas/RoomName"
        Description:
          $ref: "#/components/schemas/RoomDescription"
        ProfileArn:
          $ref: "#/components/schemas/Arn"
        ProviderCalendarId:
          $ref: "#/components/schemas/ProviderCalendarId"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        Tags:
          $ref: "#/components/schemas/TagList"
    CreateSkillGroupResponse:
      type: object
      properties:
        SkillGroupArn:
          $ref: "#/components/schemas/Arn"
    CreateSkillGroupRequest:
      type: object
      required:
        - SkillGroupName
      properties:
        SkillGroupName:
          $ref: "#/components/schemas/SkillGroupName"
        Description:
          $ref: "#/components/schemas/SkillGroupDescription"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
    CreateUserResponse:
      type: object
      properties:
        UserArn:
          $ref: "#/components/schemas/Arn"
    CreateUserRequest:
      type: object
      required:
        - UserId
      properties:
        UserId:
          $ref: "#/components/schemas/user_UserId"
        FirstName:
          $ref: "#/components/schemas/user_FirstName"
        LastName:
          $ref: "#/components/schemas/user_LastName"
        Email:
          $ref: "#/components/schemas/Email"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        Tags:
          $ref: "#/components/schemas/TagList"
    ResourceInUseException: {}
    DeleteAddressBookResponse:
      type: object
      properties: {}
    DeleteAddressBookRequest:
      type: object
      required:
        - AddressBookArn
      properties:
        AddressBookArn:
          $ref: "#/components/schemas/Arn"
    DeleteBusinessReportScheduleResponse:
      type: object
      properties: {}
    DeleteBusinessReportScheduleRequest:
      type: object
      required:
        - ScheduleArn
      properties:
        ScheduleArn:
          $ref: "#/components/schemas/Arn"
    DeleteConferenceProviderResponse:
      type: object
      properties: {}
    DeleteConferenceProviderRequest:
      type: object
      required:
        - ConferenceProviderArn
      properties:
        ConferenceProviderArn:
          $ref: "#/components/schemas/Arn"
    DeleteContactResponse:
      type: object
      properties: {}
    DeleteContactRequest:
      type: object
      required:
        - ContactArn
      properties:
        ContactArn:
          $ref: "#/components/schemas/Arn"
    DeleteDeviceResponse:
      type: object
      properties: {}
    DeleteDeviceRequest:
      type: object
      required:
        - DeviceArn
      properties:
        DeviceArn:
          $ref: "#/components/schemas/Arn"
    DeleteDeviceUsageDataResponse:
      type: object
      properties: {}
    DeleteDeviceUsageDataRequest:
      type: object
      required:
        - DeviceArn
        - DeviceUsageType
      properties:
        DeviceArn:
          $ref: "#/components/schemas/Arn"
        DeviceUsageType:
          $ref: "#/components/schemas/DeviceUsageType"
    DeleteGatewayGroupResponse:
      type: object
      properties: {}
    DeleteGatewayGroupRequest:
      type: object
      required:
        - GatewayGroupArn
      properties:
        GatewayGroupArn:
          $ref: "#/components/schemas/Arn"
    ResourceAssociatedException: {}
    DeleteNetworkProfileResponse:
      type: object
      properties: {}
    DeleteNetworkProfileRequest:
      type: object
      required:
        - NetworkProfileArn
      properties:
        NetworkProfileArn:
          $ref: "#/components/schemas/Arn"
    DeleteProfileResponse:
      type: object
      properties: {}
    DeleteProfileRequest:
      type: object
      properties:
        ProfileArn:
          $ref: "#/components/schemas/Arn"
    DeleteRoomResponse:
      type: object
      properties: {}
    DeleteRoomRequest:
      type: object
      properties:
        RoomArn:
          $ref: "#/components/schemas/Arn"
    DeleteRoomSkillParameterResponse:
      type: object
      properties: {}
    DeleteRoomSkillParameterRequest:
      type: object
      required:
        - SkillId
        - ParameterKey
      properties:
        RoomArn:
          $ref: "#/components/schemas/Arn"
        SkillId:
          $ref: "#/components/schemas/SkillId"
        ParameterKey:
          $ref: "#/components/schemas/RoomSkillParameterKey"
    DeleteSkillAuthorizationResponse:
      type: object
      properties: {}
    DeleteSkillAuthorizationRequest:
      type: object
      required:
        - SkillId
      properties:
        SkillId:
          $ref: "#/components/schemas/SkillId"
        RoomArn:
          $ref: "#/components/schemas/Arn"
    DeleteSkillGroupResponse:
      type: object
      properties: {}
    DeleteSkillGroupRequest:
      type: object
      properties:
        SkillGroupArn:
          $ref: "#/components/schemas/Arn"
    DeleteUserResponse:
      type: object
      properties: {}
    DeleteUserRequest:
      type: object
      required:
        - EnrollmentId
      properties:
        UserArn:
          $ref: "#/components/schemas/Arn"
        EnrollmentId:
          $ref: "#/components/schemas/EnrollmentId"
    DisassociateContactFromAddressBookResponse:
      type: object
      properties: {}
    DisassociateContactFromAddressBookRequest:
      type: object
      required:
        - ContactArn
        - AddressBookArn
      properties:
        ContactArn:
          $ref: "#/components/schemas/Arn"
        AddressBookArn:
          $ref: "#/components/schemas/Arn"
    DisassociateDeviceFromRoomResponse:
      type: object
      properties: {}
    DisassociateDeviceFromRoomRequest:
      type: object
      properties:
        DeviceArn:
          $ref: "#/components/schemas/Arn"
    DisassociateSkillFromSkillGroupResponse:
      type: object
      properties: {}
    DisassociateSkillFromSkillGroupRequest:
      type: object
      required:
        - SkillId
      properties:
        SkillGroupArn:
          $ref: "#/components/schemas/Arn"
        SkillId:
          $ref: "#/components/schemas/SkillId"
    DisassociateSkillFromUsersResponse:
      type: object
      properties: {}
    DisassociateSkillFromUsersRequest:
      type: object
      required:
        - SkillId
      properties:
        SkillId:
          $ref: "#/components/schemas/SkillId"
    DisassociateSkillGroupFromRoomResponse:
      type: object
      properties: {}
    DisassociateSkillGroupFromRoomRequest:
      type: object
      properties:
        SkillGroupArn:
          $ref: "#/components/schemas/Arn"
        RoomArn:
          $ref: "#/components/schemas/Arn"
    ForgetSmartHomeAppliancesResponse:
      type: object
      properties: {}
    ForgetSmartHomeAppliancesRequest:
      type: object
      required:
        - RoomArn
      properties:
        RoomArn:
          $ref: "#/components/schemas/Arn"
    GetAddressBookResponse:
      type: object
      properties:
        AddressBook:
          $ref: "#/components/schemas/AddressBook"
    GetAddressBookRequest:
      type: object
      required:
        - AddressBookArn
      properties:
        AddressBookArn:
          $ref: "#/components/schemas/Arn"
    GetConferencePreferenceResponse:
      type: object
      properties:
        Preference:
          $ref: "#/components/schemas/ConferencePreference"
    GetConferencePreferenceRequest:
      type: object
      properties: {}
    GetConferenceProviderResponse:
      type: object
      properties:
        ConferenceProvider:
          $ref: "#/components/schemas/ConferenceProvider"
    GetConferenceProviderRequest:
      type: object
      required:
        - ConferenceProviderArn
      properties:
        ConferenceProviderArn:
          $ref: "#/components/schemas/Arn"
    GetContactResponse:
      type: object
      properties:
        Contact:
          $ref: "#/components/schemas/Contact"
    GetContactRequest:
      type: object
      required:
        - ContactArn
      properties:
        ContactArn:
          $ref: "#/components/schemas/Arn"
    GetDeviceResponse:
      type: object
      properties:
        Device:
          $ref: "#/components/schemas/Device"
    GetDeviceRequest:
      type: object
      properties:
        DeviceArn:
          $ref: "#/components/schemas/Arn"
    GetGatewayResponse:
      type: object
      properties:
        Gateway:
          $ref: "#/components/schemas/Gateway"
    GetGatewayRequest:
      type: object
      required:
        - GatewayArn
      properties:
        GatewayArn:
          $ref: "#/components/schemas/Arn"
    GetGatewayGroupResponse:
      type: object
      properties:
        GatewayGroup:
          $ref: "#/components/schemas/GatewayGroup"
    GetGatewayGroupRequest:
      type: object
      required:
        - GatewayGroupArn
      properties:
        GatewayGroupArn:
          $ref: "#/components/schemas/Arn"
    GetInvitationConfigurationResponse:
      type: object
      properties:
        OrganizationName:
          $ref: "#/components/schemas/OrganizationName"
        ContactEmail:
          $ref: "#/components/schemas/Email"
        PrivateSkillIds:
          $ref: "#/components/schemas/ShortSkillIdList"
    GetInvitationConfigurationRequest:
      type: object
      properties: {}
    GetNetworkProfileResponse:
      type: object
      properties:
        NetworkProfile:
          $ref: "#/components/schemas/NetworkProfile"
    GetNetworkProfileRequest:
      type: object
      required:
        - NetworkProfileArn
      properties:
        NetworkProfileArn:
          $ref: "#/components/schemas/Arn"
    InvalidSecretsManagerResourceException: {}
    GetProfileResponse:
      type: object
      properties:
        Profile:
          $ref: "#/components/schemas/Profile"
    GetProfileRequest:
      type: object
      properties:
        ProfileArn:
          $ref: "#/components/schemas/Arn"
    GetRoomResponse:
      type: object
      properties:
        Room:
          $ref: "#/components/schemas/Room"
    GetRoomRequest:
      type: object
      properties:
        RoomArn:
          $ref: "#/components/schemas/Arn"
    GetRoomSkillParameterResponse:
      type: object
      properties:
        RoomSkillParameter:
          $ref: "#/components/schemas/RoomSkillParameter"
    GetRoomSkillParameterRequest:
      type: object
      required:
        - SkillId
        - ParameterKey
      properties:
        RoomArn:
          $ref: "#/components/schemas/Arn"
        SkillId:
          $ref: "#/components/schemas/SkillId"
        ParameterKey:
          $ref: "#/components/schemas/RoomSkillParameterKey"
    GetSkillGroupResponse:
      type: object
      properties:
        SkillGroup:
          $ref: "#/components/schemas/SkillGroup"
    GetSkillGroupRequest:
      type: object
      properties:
        SkillGroupArn:
          $ref: "#/components/schemas/Arn"
    ListBusinessReportSchedulesResponse:
      type: object
      properties:
        BusinessReportSchedules:
          $ref: "#/components/schemas/BusinessReportScheduleList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListBusinessReportSchedulesRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListConferenceProvidersResponse:
      type: object
      properties:
        ConferenceProviders:
          $ref: "#/components/schemas/ConferenceProvidersList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListConferenceProvidersRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListDeviceEventsResponse:
      type: object
      properties:
        DeviceEvents:
          $ref: "#/components/schemas/DeviceEventList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListDeviceEventsRequest:
      type: object
      required:
        - DeviceArn
      properties:
        DeviceArn:
          $ref: "#/components/schemas/Arn"
        EventType:
          $ref: "#/components/schemas/DeviceEventType"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListGatewayGroupsResponse:
      type: object
      properties:
        GatewayGroups:
          $ref: "#/components/schemas/GatewayGroupSummaries"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListGatewayGroupsRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListGatewaysResponse:
      type: object
      properties:
        Gateways:
          $ref: "#/components/schemas/GatewaySummaries"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListGatewaysRequest:
      type: object
      properties:
        GatewayGroupArn:
          $ref: "#/components/schemas/Arn"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListSkillsResponse:
      type: object
      properties:
        SkillSummaries:
          $ref: "#/components/schemas/SkillSummaryList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListSkillsRequest:
      type: object
      properties:
        SkillGroupArn:
          $ref: "#/components/schemas/Arn"
        EnablementType:
          $ref: "#/components/schemas/EnablementTypeFilter"
        SkillType:
          $ref: "#/components/schemas/SkillTypeFilter"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/SkillListMaxResults"
    ListSkillsStoreCategoriesResponse:
      type: object
      properties:
        CategoryList:
          $ref: "#/components/schemas/CategoryList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListSkillsStoreCategoriesRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListSkillsStoreSkillsByCategoryResponse:
      type: object
      properties:
        SkillsStoreSkills:
          $ref: "#/components/schemas/SkillsStoreSkillList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListSkillsStoreSkillsByCategoryRequest:
      type: object
      required:
        - CategoryId
      properties:
        CategoryId:
          $ref: "#/components/schemas/CategoryId"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/SkillListMaxResults"
    ListSmartHomeAppliancesResponse:
      type: object
      properties:
        SmartHomeAppliances:
          $ref: "#/components/schemas/SmartHomeApplianceList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListSmartHomeAppliancesRequest:
      type: object
      required:
        - RoomArn
      properties:
        RoomArn:
          $ref: "#/components/schemas/Arn"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListTagsResponse:
      type: object
      properties:
        Tags:
          $ref: "#/components/schemas/TagList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListTagsRequest:
      type: object
      required:
        - Arn
      properties:
        Arn:
          $ref: "#/components/schemas/Arn"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    PutConferencePreferenceResponse:
      type: object
      properties: {}
    PutConferencePreferenceRequest:
      type: object
      required:
        - ConferencePreference
      properties:
        ConferencePreference:
          $ref: "#/components/schemas/ConferencePreference"
    PutInvitationConfigurationResponse:
      type: object
      properties: {}
    PutInvitationConfigurationRequest:
      type: object
      required:
        - OrganizationName
      properties:
        OrganizationName:
          $ref: "#/components/schemas/OrganizationName"
        ContactEmail:
          $ref: "#/components/schemas/Email"
        PrivateSkillIds:
          $ref: "#/components/schemas/ShortSkillIdList"
    PutRoomSkillParameterResponse:
      type: object
      properties: {}
    PutRoomSkillParameterRequest:
      type: object
      required:
        - SkillId
        - RoomSkillParameter
      properties:
        RoomArn:
          $ref: "#/components/schemas/Arn"
        SkillId:
          $ref: "#/components/schemas/SkillId"
        RoomSkillParameter:
          $ref: "#/components/schemas/RoomSkillParameter"
    PutSkillAuthorizationResponse:
      type: object
      properties: {}
    PutSkillAuthorizationRequest:
      type: object
      required:
        - AuthorizationResult
        - SkillId
      properties:
        AuthorizationResult:
          $ref: "#/components/schemas/AuthorizationResult"
        SkillId:
          $ref: "#/components/schemas/SkillId"
        RoomArn:
          $ref: "#/components/schemas/Arn"
    UnauthorizedException: {}
    RegisterAVSDeviceResponse:
      type: object
      properties:
        DeviceArn:
          $ref: "#/components/schemas/Arn"
    RegisterAVSDeviceRequest:
      type: object
      required:
        - ClientId
        - UserCode
        - ProductId
        - DeviceSerialNumber
        - AmazonId
      properties:
        ClientId:
          $ref: "#/components/schemas/ClientId"
        UserCode:
          $ref: "#/components/schemas/UserCode"
        ProductId:
          $ref: "#/components/schemas/ProductId"
        DeviceSerialNumber:
          $ref: "#/components/schemas/DeviceSerialNumberForAVS"
        AmazonId:
          $ref: "#/components/schemas/AmazonId"
    InvalidDeviceException: {}
    RejectSkillResponse:
      type: object
      properties: {}
    RejectSkillRequest:
      type: object
      required:
        - SkillId
      properties:
        SkillId:
          $ref: "#/components/schemas/SkillId"
    ResolveRoomResponse:
      type: object
      properties:
        RoomArn:
          $ref: "#/components/schemas/Arn"
        RoomName:
          $ref: "#/components/schemas/RoomName"
        RoomSkillParameters:
          $ref: "#/components/schemas/RoomSkillParameters"
    ResolveRoomRequest:
      type: object
      required:
        - UserId
        - SkillId
      properties:
        UserId:
          $ref: "#/components/schemas/UserId"
        SkillId:
          $ref: "#/components/schemas/SkillId"
    RevokeInvitationResponse:
      type: object
      properties: {}
    RevokeInvitationRequest:
      type: object
      properties:
        UserArn:
          $ref: "#/components/schemas/Arn"
        EnrollmentId:
          $ref: "#/components/schemas/EnrollmentId"
    SearchAddressBooksResponse:
      type: object
      properties:
        AddressBooks:
          $ref: "#/components/schemas/AddressBookDataList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        TotalCount:
          $ref: "#/components/schemas/TotalCount"
    SearchAddressBooksRequest:
      type: object
      properties:
        Filters:
          $ref: "#/components/schemas/FilterList"
        SortCriteria:
          $ref: "#/components/schemas/SortList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    SearchContactsResponse:
      type: object
      properties:
        Contacts:
          $ref: "#/components/schemas/ContactDataList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        TotalCount:
          $ref: "#/components/schemas/TotalCount"
    SearchContactsRequest:
      type: object
      properties:
        Filters:
          $ref: "#/components/schemas/FilterList"
        SortCriteria:
          $ref: "#/components/schemas/SortList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    SearchDevicesResponse:
      type: object
      properties:
        Devices:
          $ref: "#/components/schemas/DeviceDataList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        TotalCount:
          $ref: "#/components/schemas/TotalCount"
    SearchDevicesRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        Filters:
          $ref: "#/components/schemas/FilterList"
        SortCriteria:
          $ref: "#/components/schemas/SortList"
    SearchNetworkProfilesResponse:
      type: object
      properties:
        NetworkProfiles:
          $ref: "#/components/schemas/NetworkProfileDataList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        TotalCount:
          $ref: "#/components/schemas/TotalCount"
    SearchNetworkProfilesRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        Filters:
          $ref: "#/components/schemas/FilterList"
        SortCriteria:
          $ref: "#/components/schemas/SortList"
    SearchProfilesResponse:
      type: object
      properties:
        Profiles:
          $ref: "#/components/schemas/ProfileDataList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        TotalCount:
          $ref: "#/components/schemas/TotalCount"
    SearchProfilesRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        Filters:
          $ref: "#/components/schemas/FilterList"
        SortCriteria:
          $ref: "#/components/schemas/SortList"
    SearchRoomsResponse:
      type: object
      properties:
        Rooms:
          $ref: "#/components/schemas/RoomDataList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        TotalCount:
          $ref: "#/components/schemas/TotalCount"
    SearchRoomsRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        Filters:
          $ref: "#/components/schemas/FilterList"
        SortCriteria:
          $ref: "#/components/schemas/SortList"
    SearchSkillGroupsResponse:
      type: object
      properties:
        SkillGroups:
          $ref: "#/components/schemas/SkillGroupDataList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        TotalCount:
          $ref: "#/components/schemas/TotalCount"
    SearchSkillGroupsRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        Filters:
          $ref: "#/components/schemas/FilterList"
        SortCriteria:
          $ref: "#/components/schemas/SortList"
    SearchUsersResponse:
      type: object
      properties:
        Users:
          $ref: "#/components/schemas/UserDataList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        TotalCount:
          $ref: "#/components/schemas/TotalCount"
    SearchUsersRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        Filters:
          $ref: "#/components/schemas/FilterList"
        SortCriteria:
          $ref: "#/components/schemas/SortList"
    SendAnnouncementResponse:
      type: object
      properties:
        AnnouncementArn:
          $ref: "#/components/schemas/Arn"
    SendAnnouncementRequest:
      type: object
      required:
        - RoomFilters
        - Content
        - ClientRequestToken
      properties:
        RoomFilters:
          $ref: "#/components/schemas/FilterList"
        Content:
          $ref: "#/components/schemas/Content"
        TimeToLiveInSeconds:
          $ref: "#/components/schemas/TimeToLiveInSeconds"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
    SendInvitationResponse:
      type: object
      properties: {}
    SendInvitationRequest:
      type: object
      properties:
        UserArn:
          $ref: "#/components/schemas/Arn"
    InvalidUserStatusException: {}
    StartDeviceSyncResponse:
      type: object
      properties: {}
    StartDeviceSyncRequest:
      type: object
      required:
        - Features
      properties:
        RoomArn:
          $ref: "#/components/schemas/Arn"
        DeviceArn:
          $ref: "#/components/schemas/Arn"
        Features:
          $ref: "#/components/schemas/Features"
    StartSmartHomeApplianceDiscoveryResponse:
      type: object
      properties: {}
    StartSmartHomeApplianceDiscoveryRequest:
      type: object
      required:
        - RoomArn
      properties:
        RoomArn:
          $ref: "#/components/schemas/Arn"
    TagResourceResponse:
      type: object
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - Arn
        - Tags
      properties:
        Arn:
          $ref: "#/components/schemas/Arn"
        Tags:
          $ref: "#/components/schemas/TagList"
    UntagResourceResponse:
      type: object
      properties: {}
    UntagResourceRequest:
      type: object
      required:
        - Arn
        - TagKeys
      properties:
        Arn:
          $ref: "#/components/schemas/Arn"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
    UpdateAddressBookResponse:
      type: object
      properties: {}
    UpdateAddressBookRequest:
      type: object
      required:
        - AddressBookArn
      properties:
        AddressBookArn:
          $ref: "#/components/schemas/Arn"
        Name:
          $ref: "#/components/schemas/AddressBookName"
        Description:
          $ref: "#/components/schemas/AddressBookDescription"
    NameInUseException: {}
    UpdateBusinessReportScheduleResponse:
      type: object
      properties: {}
    UpdateBusinessReportScheduleRequest:
      type: object
      required:
        - ScheduleArn
      properties:
        ScheduleArn:
          $ref: "#/components/schemas/Arn"
        S3BucketName:
          $ref: "#/components/schemas/CustomerS3BucketName"
        S3KeyPrefix:
          $ref: "#/components/schemas/S3KeyPrefix"
        Format:
          $ref: "#/components/schemas/BusinessReportFormat"
        ScheduleName:
          $ref: "#/components/schemas/BusinessReportScheduleName"
        Recurrence:
          $ref: "#/components/schemas/BusinessReportRecurrence"
    UpdateConferenceProviderResponse:
      type: object
      properties: {}
    UpdateConferenceProviderRequest:
      type: object
      required:
        - ConferenceProviderArn
        - ConferenceProviderType
        - MeetingSetting
      properties:
        ConferenceProviderArn:
          $ref: "#/components/schemas/Arn"
        ConferenceProviderType:
          $ref: "#/components/schemas/ConferenceProviderType"
        IPDialIn:
          $ref: "#/components/schemas/IPDialIn"
        PSTNDialIn:
          $ref: "#/components/schemas/PSTNDialIn"
        MeetingSetting:
          $ref: "#/components/schemas/MeetingSetting"
    UpdateContactResponse:
      type: object
      properties: {}
    UpdateContactRequest:
      type: object
      required:
        - ContactArn
      properties:
        ContactArn:
          $ref: "#/components/schemas/Arn"
        DisplayName:
          $ref: "#/components/schemas/ContactName"
        FirstName:
          $ref: "#/components/schemas/ContactName"
        LastName:
          $ref: "#/components/schemas/ContactName"
        PhoneNumber:
          $ref: "#/components/schemas/RawPhoneNumber"
        PhoneNumbers:
          $ref: "#/components/schemas/PhoneNumberList"
        SipAddresses:
          $ref: "#/components/schemas/SipAddressList"
    UpdateDeviceResponse:
      type: object
      properties: {}
    UpdateDeviceRequest:
      type: object
      properties:
        DeviceArn:
          $ref: "#/components/schemas/Arn"
        DeviceName:
          $ref: "#/components/schemas/DeviceName"
    UpdateGatewayResponse:
      type: object
      properties: {}
    UpdateGatewayRequest:
      type: object
      required:
        - GatewayArn
      properties:
        GatewayArn:
          $ref: "#/components/schemas/Arn"
        Name:
          $ref: "#/components/schemas/GatewayName"
        Description:
          $ref: "#/components/schemas/GatewayDescription"
        SoftwareVersion:
          $ref: "#/components/schemas/GatewayVersion"
    UpdateGatewayGroupResponse:
      type: object
      properties: {}
    UpdateGatewayGroupRequest:
      type: object
      required:
        - GatewayGroupArn
      properties:
        GatewayGroupArn:
          $ref: "#/components/schemas/Arn"
        Name:
          $ref: "#/components/schemas/GatewayGroupName"
        Description:
          $ref: "#/components/schemas/GatewayGroupDescription"
    UpdateNetworkProfileResponse:
      type: object
      properties: {}
    UpdateNetworkProfileRequest:
      type: object
      required:
        - NetworkProfileArn
      properties:
        NetworkProfileArn:
          $ref: "#/components/schemas/Arn"
        NetworkProfileName:
          $ref: "#/components/schemas/NetworkProfileName"
        Description:
          $ref: "#/components/schemas/NetworkProfileDescription"
        CurrentPassword:
          $ref: "#/components/schemas/CurrentWiFiPassword"
        NextPassword:
          $ref: "#/components/schemas/NextWiFiPassword"
        CertificateAuthorityArn:
          $ref: "#/components/schemas/Arn"
        TrustAnchors:
          $ref: "#/components/schemas/TrustAnchorList"
    UpdateProfileResponse:
      type: object
      properties: {}
    UpdateProfileRequest:
      type: object
      properties:
        ProfileArn:
          $ref: "#/components/schemas/Arn"
        ProfileName:
          $ref: "#/components/schemas/ProfileName"
        IsDefault:
          $ref: "#/components/schemas/Boolean"
        Timezone:
          $ref: "#/components/schemas/Timezone"
        Address:
          $ref: "#/components/schemas/Address"
        DistanceUnit:
          $ref: "#/components/schemas/DistanceUnit"
        TemperatureUnit:
          $ref: "#/components/schemas/TemperatureUnit"
        WakeWord:
          $ref: "#/components/schemas/WakeWord"
        Locale:
          $ref: "#/components/schemas/DeviceLocale"
        SetupModeDisabled:
          $ref: "#/components/schemas/Boolean"
        MaxVolumeLimit:
          $ref: "#/components/schemas/MaxVolumeLimit"
        PSTNEnabled:
          $ref: "#/components/schemas/Boolean"
    UpdateRoomResponse:
      type: object
      properties: {}
    UpdateRoomRequest:
      type: object
      properties:
        RoomArn:
          $ref: "#/components/schemas/Arn"
        RoomName:
          $ref: "#/components/schemas/RoomName"
        Description:
          $ref: "#/components/schemas/RoomDescription"
        ProviderCalendarId:
          $ref: "#/components/schemas/ProviderCalendarId"
        ProfileArn:
          $ref: "#/components/schemas/Arn"
    UpdateSkillGroupResponse:
      type: object
      properties: {}
    UpdateSkillGroupRequest:
      type: object
      properties:
        SkillGroupArn:
          $ref: "#/components/schemas/Arn"
        SkillGroupName:
          $ref: "#/components/schemas/SkillGroupName"
        Description:
          $ref: "#/components/schemas/SkillGroupDescription"
    Address:
      type: string
      minLength: 1
      maxLength: 500
    Arn:
      type: string
      pattern: arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
    AddressBookName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\u\
        FFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 100
    AddressBookDescription:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\u\
        FFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 200
    AddressBook:
      type: object
      properties:
        AddressBookArn:
          $ref: "#/components/schemas/Arn"
        Name:
          $ref: "#/components/schemas/AddressBookName"
        Description:
          $ref: "#/components/schemas/AddressBookDescription"
      description: An address book with attributes.
    AddressBookData:
      type: object
      properties:
        AddressBookArn:
          $ref: "#/components/schemas/Arn"
        Name:
          $ref: "#/components/schemas/AddressBookName"
        Description:
          $ref: "#/components/schemas/AddressBookDescription"
      description: Information related to an address book.
    AddressBookDataList:
      type: array
      items:
        $ref: "#/components/schemas/AddressBookData"
    AmazonId:
      type: string
      pattern: "[a-zA-Z0-9]{1,18}"
    ApplianceDescription:
      type: string
    ApplianceFriendlyName:
      type: string
    ApplianceManufacturerName:
      type: string
    SkillId:
      type: string
      pattern: (^amzn1\.ask\.skill\.[0-9a-f\-]{1,200})|(^amzn1\.echo-sdk-ams\.app\.[0-9a-f\-]{1,200})
    Locale:
      type: string
      enum:
        - en-US
    AudioLocation:
      type: string
      pattern: https://([A-Za-z0-9_.-]+)?(s3-[A-Za-z0-9-]+|s3\.([A-Za-z0-9-])+|s3|s3.dualstack\.([A-Za-z0-9-])+)+.amazonaws.com/.*
      minLength: 0
      maxLength: 1200
    Audio:
      type: object
      required:
        - Locale
        - Location
      properties:
        Locale:
          $ref: "#/components/schemas/Locale"
        Location:
          $ref: "#/components/schemas/AudioLocation"
      description: <p>The audio message. There is a 1 MB limit on the audio file input and
        the only supported format is MP3. To convert your MP3 audio files to an
        Alexa-friendly, </p> <p>required codec version (MPEG version 2) and bit
        rate (48 kbps), you might use converter software. One option for this is
        a command-line tool, FFmpeg. For more information, see <a
        href="https://www.ffmpeg.org/">FFmpeg</a>. The following command
        converts the provided &lt;input-file&gt; to an MP3 file that is played
        in the announcement:</p> <p> <code>ffmpeg -i &lt;input-file&gt; -ac 2
        -codec:a libmp3lame -b:a 48k -ar 16000 &lt;output-file.mp3&gt;</code>
        </p>
    AudioList:
      type: array
      items:
        $ref: "#/components/schemas/Audio"
      maxItems: 1
    Value:
      type: string
      minLength: 1
    AuthorizationResult:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/Value"
    Boolean:
      type: boolean
    BulletPoint:
      type: string
    BulletPoints:
      type: array
      items:
        $ref: "#/components/schemas/BulletPoint"
    BusinessReportStatus:
      type: string
      enum:
        - RUNNING
        - SUCCEEDED
        - FAILED
    BusinessReportFailureCode:
      type: string
      enum:
        - ACCESS_DENIED
        - NO_SUCH_BUCKET
        - INTERNAL_FAILURE
    BusinessReportS3Location:
      type: object
      properties:
        Path:
          $ref: "#/components/schemas/BusinessReportS3Path"
        BucketName:
          $ref: "#/components/schemas/CustomerS3BucketName"
      description: The S3 location of the output reports.
    BusinessReportDeliveryTime:
      type: string
      format: date-time
    BusinessReportDownloadUrl:
      type: string
    BusinessReport:
      type: object
      properties:
        Status:
          $ref: "#/components/schemas/BusinessReportStatus"
        FailureCode:
          $ref: "#/components/schemas/BusinessReportFailureCode"
        S3Location:
          $ref: "#/components/schemas/BusinessReportS3Location"
        DeliveryTime:
          $ref: "#/components/schemas/BusinessReportDeliveryTime"
        DownloadUrl:
          $ref: "#/components/schemas/BusinessReportDownloadUrl"
      description: Usage report with specified parameters.
    BusinessReportInterval:
      type: string
      enum:
        - ONE_DAY
        - ONE_WEEK
    BusinessReportContentRange:
      type: object
      properties:
        Interval:
          $ref: "#/components/schemas/BusinessReportInterval"
      description: The content range of the report.
    BusinessReportFormat:
      type: string
      enum:
        - CSV
        - CSV_ZIP
    Date:
      type: string
      pattern: ^\d{4}\-(0?[1-9]|1[012])\-(0?[1-9]|[12][0-9]|3[01])$
    BusinessReportRecurrence:
      type: object
      properties:
        StartDate:
          $ref: "#/components/schemas/Date"
      description: The recurrence of the reports.
    BusinessReportS3Path:
      type: string
    CustomerS3BucketName:
      type: string
      pattern: "[a-z0-9-\\.]{3,63}"
    BusinessReportScheduleName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\u\
        FFFD\\u10000-\\u10FFFF]*"
      minLength: 0
      maxLength: 64
    S3KeyPrefix:
      type: string
      pattern: "[A-Za-z0-9!_\\-\\.\\*'()/]*"
      minLength: 0
      maxLength: 100
    BusinessReportSchedule:
      type: object
      properties:
        ScheduleArn:
          $ref: "#/components/schemas/Arn"
        ScheduleName:
          $ref: "#/components/schemas/BusinessReportScheduleName"
        S3BucketName:
          $ref: "#/components/schemas/CustomerS3BucketName"
        S3KeyPrefix:
          $ref: "#/components/schemas/S3KeyPrefix"
        Format:
          $ref: "#/components/schemas/BusinessReportFormat"
        ContentRange:
          $ref: "#/components/schemas/BusinessReportContentRange"
        Recurrence:
          $ref: "#/components/schemas/BusinessReportRecurrence"
        LastBusinessReport:
          $ref: "#/components/schemas/BusinessReport"
      description: The schedule of the usage report.
    BusinessReportScheduleList:
      type: array
      items:
        $ref: "#/components/schemas/BusinessReportSchedule"
    CategoryId:
      type: integer
      minimum: 1
    CategoryName:
      type: string
    Category:
      type: object
      properties:
        CategoryId:
          $ref: "#/components/schemas/CategoryId"
        CategoryName:
          $ref: "#/components/schemas/CategoryName"
      description: The skill store category that is shown. Alexa skills are assigned a
        specific skill category during creation, such as News, Social, and
        Sports.
    CategoryList:
      type: array
      items:
        $ref: "#/components/schemas/Category"
    CertificateTime:
      type: string
      format: date-time
    ClientId:
      type: string
      pattern: ^\S\+\{1,256\}$
    ClientRequestToken:
      type: string
      pattern: "[a-zA-Z0-9][a-zA-Z0-9_-]*"
      description: A unique, user-specified identifier for the request that ensures
        idempotency.
      minLength: 10
      maxLength: 150
    CommsProtocol:
      type: string
      enum:
        - SIP
        - SIPS
        - H323
    ConferencePreference:
      type: object
      properties:
        DefaultConferenceProviderArn:
          $ref: "#/components/schemas/Arn"
      description: The default conference provider that is used if no other scheduled
        meetings are detected.
    ConferenceProviderName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\u\
        FFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 50
    ConferenceProviderType:
      type: string
      enum:
        - CHIME
        - BLUEJEANS
        - FUZE
        - GOOGLE_HANGOUTS
        - POLYCOM
        - RINGCENTRAL
        - SKYPE_FOR_BUSINESS
        - WEBEX
        - ZOOM
        - CUSTOM
    IPDialIn:
      type: object
      required:
        - Endpoint
        - CommsProtocol
      properties:
        Endpoint:
          $ref: "#/components/schemas/Endpoint"
        CommsProtocol:
          $ref: "#/components/schemas/CommsProtocol"
      description: The IP endpoint and protocol for calling.
    PSTNDialIn:
      type: object
      required:
        - CountryCode
        - PhoneNumber
        - OneClickIdDelay
        - OneClickPinDelay
      properties:
        CountryCode:
          $ref: "#/components/schemas/CountryCode"
        PhoneNumber:
          $ref: "#/components/schemas/OutboundPhoneNumber"
        OneClickIdDelay:
          $ref: "#/components/schemas/OneClickIdDelay"
        OneClickPinDelay:
          $ref: "#/components/schemas/OneClickPinDelay"
      description: The information for public switched telephone network (PSTN)
        conferencing.
    MeetingSetting:
      type: object
      required:
        - RequirePin
      properties:
        RequirePin:
          $ref: "#/components/schemas/RequirePin"
      description: <p>The values that indicate whether a pin is always required (YES),
        never required (NO), or OPTIONAL.</p> <ul> <li> <p>If YES, Alexa will
        always ask for a meeting pin.</p> </li> <li> <p>If NO, Alexa will never
        ask for a meeting pin.</p> </li> <li> <p>If OPTIONAL, Alexa will ask if
        you have a meeting pin and if the customer responds with yes, it will
        ask for the meeting pin.</p> </li> </ul>
    ConferenceProvider:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/Arn"
        Name:
          $ref: "#/components/schemas/ConferenceProviderName"
        Type:
          $ref: "#/components/schemas/ConferenceProviderType"
        IPDialIn:
          $ref: "#/components/schemas/IPDialIn"
        PSTNDialIn:
          $ref: "#/components/schemas/PSTNDialIn"
        MeetingSetting:
          $ref: "#/components/schemas/MeetingSetting"
      description: "An entity that provides a conferencing solution. Alexa for Business
        acts as the voice interface and mediator that connects users to their
        preferred conference provider. Examples of conference providers include
        Amazon Chime, Zoom, Cisco, and Polycom. "
    ConferenceProvidersList:
      type: array
      items:
        $ref: "#/components/schemas/ConferenceProvider"
    ConnectionStatus:
      type: string
      enum:
        - ONLINE
        - OFFLINE
    ContactName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\u\
        FFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 100
    RawPhoneNumber:
      type: string
      pattern: ^[\+0-9\#\,\(][\+0-9\-\.\/\(\)\,\#\s]+$
      minLength: 0
      maxLength: 50
      format: password
    PhoneNumberList:
      type: array
      items:
        $ref: "#/components/schemas/PhoneNumber"
      minItems: 0
      maxItems: 3
    SipAddressList:
      type: array
      items:
        $ref: "#/components/schemas/SipAddress"
      minItems: 0
      maxItems: 1
    Contact:
      type: object
      properties:
        ContactArn:
          $ref: "#/components/schemas/Arn"
        DisplayName:
          $ref: "#/components/schemas/ContactName"
        FirstName:
          $ref: "#/components/schemas/ContactName"
        LastName:
          $ref: "#/components/schemas/ContactName"
        PhoneNumber:
          $ref: "#/components/schemas/RawPhoneNumber"
        PhoneNumbers:
          $ref: "#/components/schemas/PhoneNumberList"
        SipAddresses:
          $ref: "#/components/schemas/SipAddressList"
      description: A contact with attributes.
    ContactData:
      type: object
      properties:
        ContactArn:
          $ref: "#/components/schemas/Arn"
        DisplayName:
          $ref: "#/components/schemas/ContactName"
        FirstName:
          $ref: "#/components/schemas/ContactName"
        LastName:
          $ref: "#/components/schemas/ContactName"
        PhoneNumber:
          $ref: "#/components/schemas/RawPhoneNumber"
        PhoneNumbers:
          $ref: "#/components/schemas/PhoneNumberList"
        SipAddresses:
          $ref: "#/components/schemas/SipAddressList"
      description: Information related to a contact.
    ContactDataList:
      type: array
      items:
        $ref: "#/components/schemas/ContactData"
    TextList:
      type: array
      items:
        $ref: "#/components/schemas/Text"
      maxItems: 1
    SsmlList:
      type: array
      items:
        $ref: "#/components/schemas/Ssml"
      maxItems: 1
    Content:
      type: object
      properties:
        TextList:
          $ref: "#/components/schemas/TextList"
        SsmlList:
          $ref: "#/components/schemas/SsmlList"
        AudioList:
          $ref: "#/components/schemas/AudioList"
      description: The content definition. This can contain only one text, SSML, or audio
        list object.
    CountryCode:
      type: string
      pattern: \d{1,3}
    GatewayGroupName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\u\
        FFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 100
    GatewayGroupDescription:
      type: string
      minLength: 0
      maxLength: 200
    NetworkProfileName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\u\
        FFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 100
    NetworkProfileDescription:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\u\
        FFFD\\u10000-\\u10FFFF]*"
      minLength: 0
      maxLength: 200
    NetworkSsid:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\u\
        FFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 32
    NetworkSecurityType:
      type: string
      enum:
        - OPEN
        - WEP
        - WPA_PSK
        - WPA2_PSK
        - WPA2_ENTERPRISE
    NetworkEapMethod:
      type: string
      enum:
        - EAP_TLS
    CurrentWiFiPassword:
      type: string
      pattern: "[\\x00-\\x7F]*"
      minLength: 5
      maxLength: 128
      format: password
    NextWiFiPassword:
      type: string
      pattern: (^$)|([\x00-\x7F]{5,})
      minLength: 0
      maxLength: 128
      format: password
    TrustAnchorList:
      type: array
      items:
        $ref: "#/components/schemas/TrustAnchor"
      minItems: 1
      maxItems: 5
    ProfileName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\u\
        FFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 100
    Timezone:
      type: string
      minLength: 1
      maxLength: 100
    DistanceUnit:
      type: string
      enum:
        - METRIC
        - IMPERIAL
    TemperatureUnit:
      type: string
      enum:
        - FAHRENHEIT
        - CELSIUS
    WakeWord:
      type: string
      enum:
        - ALEXA
        - AMAZON
        - ECHO
        - COMPUTER
    DeviceLocale:
      type: string
      minLength: 1
      maxLength: 256
    MaxVolumeLimit:
      type: integer
    RoomName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\u\
        FFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 100
    RoomDescription:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\u\
        FFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 200
    ProviderCalendarId:
      type: string
      minLength: 0
      maxLength: 100
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    SkillGroupName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\u\
        FFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 100
    SkillGroupDescription:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\u\
        FFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 200
    user_UserId:
      type: string
      pattern: "[a-zA-Z0-9@_+.-]*"
      minLength: 1
      maxLength: 128
    user_FirstName:
      type: string
      pattern: ([A-Za-z\-' 0-9._]|\p{IsLetter})*
      minLength: 0
      maxLength: 30
    user_LastName:
      type: string
      pattern: ([A-Za-z\-' 0-9._]|\p{IsLetter})*
      minLength: 0
      maxLength: 30
    Email:
      type: string
      pattern: ([0-9a-zA-Z]([+-.\w]*[0-9a-zA-Z])*@([0-9a-zA-Z]([-\w]*[0-9a-zA-Z]+)*\.)+[a-zA-Z]{2,9})
      minLength: 1
      maxLength: 128
    DeviceUsageType:
      type: string
      enum:
        - VOICE
    RoomSkillParameterKey:
      type: string
      minLength: 1
      maxLength: 256
    EnrollmentId:
      type: string
      minLength: 0
      maxLength: 128
    DeveloperName:
      type: string
    PrivacyPolicy:
      type: string
    Url:
      type: string
    DeveloperInfo:
      type: object
      properties:
        DeveloperName:
          $ref: "#/components/schemas/DeveloperName"
        PrivacyPolicy:
          $ref: "#/components/schemas/PrivacyPolicy"
        Email:
          $ref: "#/components/schemas/Email"
        Url:
          $ref: "#/components/schemas/Url"
      description: The details about the developer that published the skill.
    DeviceSerialNumber:
      type: string
      pattern: "[a-zA-Z0-9]{1,200}"
    DeviceType:
      type: string
      pattern: "[a-zA-Z0-9]{1,200}"
    DeviceName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\u\
        FFFD\\u10000-\\u10FFFF]*"
      minLength: 2
      maxLength: 100
    SoftwareVersion:
      type: string
    MacAddress:
      type: string
    DeviceStatus:
      type: string
      enum:
        - READY
        - PENDING
        - WAS_OFFLINE
        - DEREGISTERED
        - FAILED
    DeviceStatusInfo:
      type: object
      properties:
        DeviceStatusDetails:
          $ref: "#/components/schemas/DeviceStatusDetails"
        ConnectionStatus:
          $ref: "#/components/schemas/ConnectionStatus"
      description: Detailed information about a device's status.
    DeviceNetworkProfileInfo:
      type: object
      properties:
        NetworkProfileArn:
          $ref: "#/components/schemas/Arn"
        CertificateArn:
          $ref: "#/components/schemas/Arn"
        CertificateExpirationTime:
          $ref: "#/components/schemas/CertificateTime"
      description: Detailed information about a device's network profile.
    Device:
      type: object
      properties:
        DeviceArn:
          $ref: "#/components/schemas/Arn"
        DeviceSerialNumber:
          $ref: "#/components/schemas/DeviceSerialNumber"
        DeviceType:
          $ref: "#/components/schemas/DeviceType"
        DeviceName:
          $ref: "#/components/schemas/DeviceName"
        SoftwareVersion:
          $ref: "#/components/schemas/SoftwareVersion"
        MacAddress:
          $ref: "#/components/schemas/MacAddress"
        RoomArn:
          $ref: "#/components/schemas/Arn"
        DeviceStatus:
          $ref: "#/components/schemas/DeviceStatus"
        DeviceStatusInfo:
          $ref: "#/components/schemas/DeviceStatusInfo"
        NetworkProfileInfo:
          $ref: "#/components/schemas/DeviceNetworkProfileInfo"
      description: A device with attributes.
    DeviceData:
      type: object
      properties:
        DeviceArn:
          $ref: "#/components/schemas/Arn"
        DeviceSerialNumber:
          $ref: "#/components/schemas/DeviceSerialNumber"
        DeviceType:
          $ref: "#/components/schemas/DeviceType"
        DeviceName:
          $ref: "#/components/schemas/DeviceName"
        SoftwareVersion:
          $ref: "#/components/schemas/SoftwareVersion"
        MacAddress:
          $ref: "#/components/schemas/MacAddress"
        DeviceStatus:
          $ref: "#/components/schemas/DeviceStatus"
        NetworkProfileArn:
          $ref: "#/components/schemas/Arn"
        NetworkProfileName:
          $ref: "#/components/schemas/NetworkProfileName"
        RoomArn:
          $ref: "#/components/schemas/Arn"
        RoomName:
          $ref: "#/components/schemas/RoomName"
        DeviceStatusInfo:
          $ref: "#/components/schemas/DeviceStatusInfo"
      description: Device attributes.
    DeviceDataList:
      type: array
      items:
        $ref: "#/components/schemas/DeviceData"
    DeviceEventType:
      type: string
      enum:
        - CONNECTION_STATUS
        - DEVICE_STATUS
    DeviceEventValue:
      type: string
    DeviceEventTime:
      type: string
      format: date-time
    DeviceEvent:
      type: object
      properties:
        Type:
          $ref: "#/components/schemas/DeviceEventType"
        Value:
          $ref: "#/components/schemas/DeviceEventValue"
        Timestamp:
          $ref: "#/components/schemas/DeviceEventTime"
      description: The list of device events.
    DeviceEventList:
      type: array
      items:
        $ref: "#/components/schemas/DeviceEvent"
    DeviceSerialNumberForAVS:
      type: string
      pattern: ^[a-zA-Z0-9]{1,50}$
    Feature:
      type: string
      enum:
        - BLUETOOTH
        - VOLUME
        - NOTIFICATIONS
        - LISTS
        - SKILLS
        - NETWORK_PROFILE
        - SETTINGS
        - ALL
    DeviceStatusDetailCode:
      type: string
      enum:
        - DEVICE_SOFTWARE_UPDATE_NEEDED
        - DEVICE_WAS_OFFLINE
        - CREDENTIALS_ACCESS_FAILURE
        - TLS_VERSION_MISMATCH
        - ASSOCIATION_REJECTION
        - AUTHENTICATION_FAILURE
        - DHCP_FAILURE
        - INTERNET_UNAVAILABLE
        - DNS_FAILURE
        - UNKNOWN_FAILURE
        - CERTIFICATE_ISSUING_LIMIT_EXCEEDED
        - INVALID_CERTIFICATE_AUTHORITY
        - NETWORK_PROFILE_NOT_FOUND
        - INVALID_PASSWORD_STATE
        - PASSWORD_NOT_FOUND
    DeviceStatusDetail:
      type: object
      properties:
        Feature:
          $ref: "#/components/schemas/Feature"
        Code:
          $ref: "#/components/schemas/DeviceStatusDetailCode"
      description: Details of a device’s status.
    DeviceStatusDetails:
      type: array
      items:
        $ref: "#/components/schemas/DeviceStatusDetail"
    EnablementType:
      type: string
      enum:
        - ENABLED
        - PENDING
    EnablementTypeFilter:
      type: string
      enum:
        - ENABLED
        - PENDING
    EndUserLicenseAgreement:
      type: string
    Endpoint:
      type: string
      minLength: 1
      maxLength: 256
    EnrollmentStatus:
      type: string
      enum:
        - INITIALIZED
        - PENDING
        - REGISTERED
        - DISASSOCIATING
        - DEREGISTERING
    Features:
      type: array
      items:
        $ref: "#/components/schemas/Feature"
    FilterKey:
      type: string
      minLength: 1
      maxLength: 500
    FilterValueList:
      type: array
      items:
        $ref: "#/components/schemas/FilterValue"
      maxItems: 50
    Filter:
      type: object
      required:
        - Key
        - Values
      properties:
        Key:
          $ref: "#/components/schemas/FilterKey"
        Values:
          $ref: "#/components/schemas/FilterValueList"
      description: A filter name and value pair that is used to return a more specific list
        of results. Filters can be used to match a set of resources by various
        criteria.
    FilterList:
      type: array
      items:
        $ref: "#/components/schemas/Filter"
      maxItems: 25
    FilterValue:
      type: string
      minLength: 1
      maxLength: 500
    GatewayName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\u\
        FFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 253
    GatewayDescription:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\u\
        FFFD\\u10000-\\u10FFFF]*"
      minLength: 0
      maxLength: 200
    GatewayVersion:
      type: string
      minLength: 1
      maxLength: 50
    Gateway:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/Arn"
        Name:
          $ref: "#/components/schemas/GatewayName"
        Description:
          $ref: "#/components/schemas/GatewayDescription"
        GatewayGroupArn:
          $ref: "#/components/schemas/Arn"
        SoftwareVersion:
          $ref: "#/components/schemas/GatewayVersion"
      description: "The details of the gateway. "
    GatewayGroup:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/Arn"
        Name:
          $ref: "#/components/schemas/GatewayGroupName"
        Description:
          $ref: "#/components/schemas/GatewayGroupDescription"
      description: The details of the gateway group.
    GatewayGroupSummary:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/Arn"
        Name:
          $ref: "#/components/schemas/GatewayGroupName"
        Description:
          $ref: "#/components/schemas/GatewayGroupDescription"
      description: The summary of a gateway group.
    GatewayGroupSummaries:
      type: array
      items:
        $ref: "#/components/schemas/GatewayGroupSummary"
    GatewaySummary:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/Arn"
        Name:
          $ref: "#/components/schemas/GatewayName"
        Description:
          $ref: "#/components/schemas/GatewayDescription"
        GatewayGroupArn:
          $ref: "#/components/schemas/Arn"
        SoftwareVersion:
          $ref: "#/components/schemas/GatewayVersion"
      description: The summary of a gateway.
    GatewaySummaries:
      type: array
      items:
        $ref: "#/components/schemas/GatewaySummary"
    GenericKeyword:
      type: string
    GenericKeywords:
      type: array
      items:
        $ref: "#/components/schemas/GenericKeyword"
    OrganizationName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\u\
        FFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 100
    ShortSkillIdList:
      type: array
      items:
        $ref: "#/components/schemas/SkillId"
      minItems: 0
      maxItems: 3
    NetworkProfile:
      type: object
      properties:
        NetworkProfileArn:
          $ref: "#/components/schemas/Arn"
        NetworkProfileName:
          $ref: "#/components/schemas/NetworkProfileName"
        Description:
          $ref: "#/components/schemas/NetworkProfileDescription"
        Ssid:
          $ref: "#/components/schemas/NetworkSsid"
        SecurityType:
          $ref: "#/components/schemas/NetworkSecurityType"
        EapMethod:
          $ref: "#/components/schemas/NetworkEapMethod"
        CurrentPassword:
          $ref: "#/components/schemas/CurrentWiFiPassword"
        NextPassword:
          $ref: "#/components/schemas/NextWiFiPassword"
        CertificateAuthorityArn:
          $ref: "#/components/schemas/Arn"
        TrustAnchors:
          $ref: "#/components/schemas/TrustAnchorList"
      description: The network profile associated with a device.
    Profile:
      type: object
      properties:
        ProfileArn:
          $ref: "#/components/schemas/Arn"
        ProfileName:
          $ref: "#/components/schemas/ProfileName"
        IsDefault:
          $ref: "#/components/schemas/Boolean"
        Address:
          $ref: "#/components/schemas/Address"
        Timezone:
          $ref: "#/components/schemas/Timezone"
        DistanceUnit:
          $ref: "#/components/schemas/DistanceUnit"
        TemperatureUnit:
          $ref: "#/components/schemas/TemperatureUnit"
        WakeWord:
          $ref: "#/components/schemas/WakeWord"
        Locale:
          $ref: "#/components/schemas/DeviceLocale"
        SetupModeDisabled:
          $ref: "#/components/schemas/Boolean"
        MaxVolumeLimit:
          $ref: "#/components/schemas/MaxVolumeLimit"
        PSTNEnabled:
          $ref: "#/components/schemas/Boolean"
        AddressBookArn:
          $ref: "#/components/schemas/Arn"
      description: A room profile with attributes.
    Room:
      type: object
      properties:
        RoomArn:
          $ref: "#/components/schemas/Arn"
        RoomName:
          $ref: "#/components/schemas/RoomName"
        Description:
          $ref: "#/components/schemas/RoomDescription"
        ProviderCalendarId:
          $ref: "#/components/schemas/ProviderCalendarId"
        ProfileArn:
          $ref: "#/components/schemas/Arn"
      description: A room with attributes.
    RoomSkillParameter:
      type: object
      required:
        - ParameterKey
        - ParameterValue
      properties:
        ParameterKey:
          $ref: "#/components/schemas/RoomSkillParameterKey"
        ParameterValue:
          $ref: "#/components/schemas/RoomSkillParameterValue"
      description: A skill parameter associated with a room.
    SkillGroup:
      type: object
      properties:
        SkillGroupArn:
          $ref: "#/components/schemas/Arn"
        SkillGroupName:
          $ref: "#/components/schemas/SkillGroupName"
        Description:
          $ref: "#/components/schemas/SkillGroupDescription"
      description: A skill group with attributes.
    IconUrl:
      type: string
    InvocationPhrase:
      type: string
    Key:
      type: string
      minLength: 1
    NextToken:
      type: string
      minLength: 1
      maxLength: 1100
    MaxResults:
      type: integer
      minimum: 1
      maximum: 50
    SkillTypeFilter:
      type: string
      enum:
        - PUBLIC
        - PRIVATE
        - ALL
    SkillListMaxResults:
      type: integer
      minimum: 1
      maximum: 10
    SkillSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/SkillSummary"
    SkillsStoreSkillList:
      type: array
      items:
        $ref: "#/components/schemas/SkillsStoreSkill"
    SmartHomeApplianceList:
      type: array
      items:
        $ref: "#/components/schemas/SmartHomeAppliance"
    RequirePin:
      type: string
      enum:
        - YES
        - NO
        - OPTIONAL
    NetworkProfileData:
      type: object
      properties:
        NetworkProfileArn:
          $ref: "#/components/schemas/Arn"
        NetworkProfileName:
          $ref: "#/components/schemas/NetworkProfileName"
        Description:
          $ref: "#/components/schemas/NetworkProfileDescription"
        Ssid:
          $ref: "#/components/schemas/NetworkSsid"
        SecurityType:
          $ref: "#/components/schemas/NetworkSecurityType"
        EapMethod:
          $ref: "#/components/schemas/NetworkEapMethod"
        CertificateAuthorityArn:
          $ref: "#/components/schemas/Arn"
      description: The data associated with a network profile.
    NetworkProfileDataList:
      type: array
      items:
        $ref: "#/components/schemas/NetworkProfileData"
    NewInThisVersionBulletPoints:
      type: array
      items:
        $ref: "#/components/schemas/BulletPoint"
    OneClickIdDelay:
      type: string
      minLength: 1
      maxLength: 2
    OneClickPinDelay:
      type: string
      minLength: 1
      maxLength: 2
    OutboundPhoneNumber:
      type: string
      pattern: \d{10}
    PhoneNumberType:
      type: string
      enum:
        - MOBILE
        - WORK
        - HOME
      format: password
    PhoneNumber:
      type: object
      required:
        - Number
        - Type
      properties:
        Number:
          $ref: "#/components/schemas/RawPhoneNumber"
        Type:
          $ref: "#/components/schemas/PhoneNumberType"
      description: The phone number for the contact containing the raw number and phone
        number type.
    ProductDescription:
      type: string
    ProductId:
      type: string
      pattern: ^[a-zA-Z0-9_]{1,256}$
    ProfileData:
      type: object
      properties:
        ProfileArn:
          $ref: "#/components/schemas/Arn"
        ProfileName:
          $ref: "#/components/schemas/ProfileName"
        IsDefault:
          $ref: "#/components/schemas/Boolean"
        Address:
          $ref: "#/components/schemas/Address"
        Timezone:
          $ref: "#/components/schemas/Timezone"
        DistanceUnit:
          $ref: "#/components/schemas/DistanceUnit"
        TemperatureUnit:
          $ref: "#/components/schemas/TemperatureUnit"
        WakeWord:
          $ref: "#/components/schemas/WakeWord"
        Locale:
          $ref: "#/components/schemas/DeviceLocale"
      description: The data of a room profile.
    ProfileDataList:
      type: array
      items:
        $ref: "#/components/schemas/ProfileData"
    UserCode:
      type: string
      minLength: 1
      maxLength: 128
    ReleaseDate:
      type: string
    UserId:
      type: string
      pattern: amzn1\.[A-Za-z0-9+-\/=.]{1,300}
    RoomSkillParameters:
      type: array
      items:
        $ref: "#/components/schemas/RoomSkillParameter"
    ReviewKey:
      type: string
    ReviewValue:
      type: string
    Reviews:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/ReviewValue"
    RoomData:
      type: object
      properties:
        RoomArn:
          $ref: "#/components/schemas/Arn"
        RoomName:
          $ref: "#/components/schemas/RoomName"
        Description:
          $ref: "#/components/schemas/RoomDescription"
        ProviderCalendarId:
          $ref: "#/components/schemas/ProviderCalendarId"
        ProfileArn:
          $ref: "#/components/schemas/Arn"
        ProfileName:
          $ref: "#/components/schemas/ProfileName"
      description: The data of a room.
    RoomDataList:
      type: array
      items:
        $ref: "#/components/schemas/RoomData"
    RoomSkillParameterValue:
      type: string
      minLength: 1
      maxLength: 512
    Utterance:
      type: string
    SampleUtterances:
      type: array
      items:
        $ref: "#/components/schemas/Utterance"
    SortList:
      type: array
      items:
        $ref: "#/components/schemas/Sort"
      maxItems: 25
    TotalCount:
      type: integer
    SkillGroupDataList:
      type: array
      items:
        $ref: "#/components/schemas/SkillGroupData"
    UserDataList:
      type: array
      items:
        $ref: "#/components/schemas/UserData"
    TimeToLiveInSeconds:
      type: integer
      minimum: 1
      maximum: 3600
    ShortDescription:
      type: string
    SipUri:
      type: string
      pattern: ^sip[s]?:([^@:]+)\@([^@]+)$
      minLength: 1
      maxLength: 256
      format: password
    SipType:
      type: string
      enum:
        - WORK
      format: password
    SipAddress:
      type: object
      required:
        - Uri
        - Type
      properties:
        Uri:
          $ref: "#/components/schemas/SipUri"
        Type:
          $ref: "#/components/schemas/SipType"
      description: The SIP address for the contact containing the URI and SIP address type.
    SkillTypes:
      type: array
      items:
        $ref: "#/components/schemas/SkillStoreType"
    SkillDetails:
      type: object
      properties:
        ProductDescription:
          $ref: "#/components/schemas/ProductDescription"
        InvocationPhrase:
          $ref: "#/components/schemas/InvocationPhrase"
        ReleaseDate:
          $ref: "#/components/schemas/ReleaseDate"
        EndUserLicenseAgreement:
          $ref: "#/components/schemas/EndUserLicenseAgreement"
        GenericKeywords:
          $ref: "#/components/schemas/GenericKeywords"
        BulletPoints:
          $ref: "#/components/schemas/BulletPoints"
        NewInThisVersionBulletPoints:
          $ref: "#/components/schemas/NewInThisVersionBulletPoints"
        SkillTypes:
          $ref: "#/components/schemas/SkillTypes"
        Reviews:
          $ref: "#/components/schemas/Reviews"
        DeveloperInfo:
          $ref: "#/components/schemas/DeveloperInfo"
      description: Granular information about the skill.
    SkillGroupData:
      type: object
      properties:
        SkillGroupArn:
          $ref: "#/components/schemas/Arn"
        SkillGroupName:
          $ref: "#/components/schemas/SkillGroupName"
        Description:
          $ref: "#/components/schemas/SkillGroupDescription"
      description: The attributes of a skill group.
    SkillName:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\u\
        FFFD\\u10000-\\u10FFFF]*"
      minLength: 1
      maxLength: 100
    SkillStoreType:
      type: string
    boolean:
      type: boolean
    SkillType:
      type: string
      enum:
        - PUBLIC
        - PRIVATE
      pattern: "[a-zA-Z0-9][a-zA-Z0-9_-]*"
      minLength: 1
      maxLength: 100
    SkillSummary:
      type: object
      properties:
        SkillId:
          $ref: "#/components/schemas/SkillId"
        SkillName:
          $ref: "#/components/schemas/SkillName"
        SupportsLinking:
          $ref: "#/components/schemas/boolean"
        EnablementType:
          $ref: "#/components/schemas/EnablementType"
        SkillType:
          $ref: "#/components/schemas/SkillType"
      description: The summary of skills.
    SkillsStoreSkill:
      type: object
      properties:
        SkillId:
          $ref: "#/components/schemas/SkillId"
        SkillName:
          $ref: "#/components/schemas/SkillName"
        ShortDescription:
          $ref: "#/components/schemas/ShortDescription"
        IconUrl:
          $ref: "#/components/schemas/IconUrl"
        SampleUtterances:
          $ref: "#/components/schemas/SampleUtterances"
        SkillDetails:
          $ref: "#/components/schemas/SkillDetails"
        SupportsLinking:
          $ref: "#/components/schemas/boolean"
      description: The detailed information about an Alexa skill.
    SmartHomeAppliance:
      type: object
      properties:
        FriendlyName:
          $ref: "#/components/schemas/ApplianceFriendlyName"
        Description:
          $ref: "#/components/schemas/ApplianceDescription"
        ManufacturerName:
          $ref: "#/components/schemas/ApplianceManufacturerName"
      description: "A smart home appliance that can connect to a central system. Any
        domestic device can be a smart appliance. "
    SortKey:
      type: string
      minLength: 1
      maxLength: 500
    SortValue:
      type: string
      enum:
        - ASC
        - DESC
    Sort:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: "#/components/schemas/SortKey"
        Value:
          $ref: "#/components/schemas/SortValue"
      description: "An object representing a sort criteria. "
    SsmlValue:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\u\
        FFFD\\u10000-\\u10FFFF]*"
      minLength: 0
      maxLength: 4096
    Ssml:
      type: object
      required:
        - Locale
        - Value
      properties:
        Locale:
          $ref: "#/components/schemas/Locale"
        Value:
          $ref: "#/components/schemas/SsmlValue"
      description: The SSML message. For more information, see <a
        href="https://developer.amazon.com/docs/custom-skills/speech-synthesis-markup-language-ssml-reference.html">SSML
        Reference</a>.
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
        Value:
          $ref: "#/components/schemas/TagValue"
      description: "A key-value pair that can be associated with a resource. "
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
    TextValue:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u0085\\u00A0-\\uD7FF\\uE000-\\u\
        FFFD\\u10000-\\u10FFFF]*"
      minLength: 0
      maxLength: 4096
    Text:
      type: object
      required:
        - Locale
        - Value
      properties:
        Locale:
          $ref: "#/components/schemas/Locale"
        Value:
          $ref: "#/components/schemas/TextValue"
      description: The text message.
    TrustAnchor:
      type: string
      pattern: -{5}BEGIN
        CERTIFICATE-{5}\u000D?\u000A([A-Za-z0-9/+]{64}\u000D?\u000A)*[A-Za-z0-9/+]{1,64}={0,2}\u000D?\u000A-{5}END
        CERTIFICATE-{5}(\u000D?\u000A)?
    UserData:
      type: object
      properties:
        UserArn:
          $ref: "#/components/schemas/Arn"
        FirstName:
          $ref: "#/components/schemas/user_FirstName"
        LastName:
          $ref: "#/components/schemas/user_LastName"
        Email:
          $ref: "#/components/schemas/Email"
        EnrollmentStatus:
          $ref: "#/components/schemas/EnrollmentStatus"
        EnrollmentId:
          $ref: "#/components/schemas/EnrollmentId"
      description: Information related to a user.
