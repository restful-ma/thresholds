openapi: 3.0.0
info:
  version: 2016-10-24
  x-release: v4
  title: AWS Server Migration Service
  description: <fullname>AAWS Sever Migration Service</fullname> <p>This is the <i>AWS
    Sever Migration Service API Reference</i>. It provides descriptions, syntax,
    and usage examples for each of the actions and data types for the AWS Sever
    Migration Service (AWS SMS). The topic for each action shows the Query API
    request parameters and the XML response. You can also view the XML request
    elements in the WSDL.</p> <p>Alternatively, you can use one of the AWS SDKs
    to access an API that's tailored to the programming language or platform
    that you're using. For more information, see <a
    href="http://aws.amazon.com/tools/#SDKs">AWS SDKs</a>.</p> <p>To learn more
    about the Server Migration Service, see the following resources:</p> <ul>
    <li> <p> <a href="https://aws.amazon.com/server-migration-service/">AWS
    Sever Migration Service product page</a> </p> </li> <li> <p> <a
    href="https://docs.aws.amazon.com/server-migration-service/latest/userguide/server-migration.html">AWS
    Sever Migration Service User Guide</a> </p> </li> </ul>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: sms
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/sms-2016-10-24.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/sms/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.CreateApp:
    post:
      operationId: CreateApp
      description: Creates an application. An application consists of one or more server
        groups. Each server group contain one or more servers.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAppResponse"
        "480":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "483":
          description: InternalError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
        "484":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.CreateApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAppRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.CreateReplicationJob:
    post:
      operationId: CreateReplicationJob
      description: Creates a replication job. The replication job schedules periodic
        replication runs to replicate your server to AWS. Each replication run
        creates an Amazon Machine Image (AMI).
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateReplicationJobResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "482":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
        "483":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
        "484":
          description: ServerCannotBeReplicatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerCannotBeReplicatedException"
        "485":
          description: ReplicationJobAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplicationJobAlreadyExistsException"
        "486":
          description: NoConnectorsAvailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoConnectorsAvailableException"
        "487":
          description: InternalError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
        "488":
          description: TemporarilyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemporarilyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.CreateReplicationJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateReplicationJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DeleteApp:
    post:
      operationId: DeleteApp
      description: Deletes an existing application. Optionally deletes the launched stack
        associated with the application and all AWS SMS replication jobs for
        servers in the application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteAppResponse"
        "480":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "483":
          description: InternalError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
        "484":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.DeleteApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteAppRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DeleteAppLaunchConfiguration:
    post:
      operationId: DeleteAppLaunchConfiguration
      description: Deletes existing launch configuration for an application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteAppLaunchConfigurationResponse"
        "480":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "483":
          description: InternalError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
        "484":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.DeleteAppLaunchConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteAppLaunchConfigurationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DeleteAppReplicationConfiguration:
    post:
      operationId: DeleteAppReplicationConfiguration
      description: Deletes existing replication configuration for an application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteAppReplicationConfigurationRespon\
                  se"
        "480":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "483":
          description: InternalError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
        "484":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.DeleteAppReplicationConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteAppReplicationConfigurationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DeleteReplicationJob:
    post:
      operationId: DeleteReplicationJob
      description: <p>Deletes the specified replication job.</p> <p>After you delete a
        replication job, there are no further replication runs. AWS deletes the
        contents of the Amazon S3 bucket used to store AWS SMS artifacts. The
        AMIs created by the replication runs are not deleted.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteReplicationJobResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "482":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
        "483":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
        "484":
          description: ReplicationJobNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplicationJobNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.DeleteReplicationJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteReplicationJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DeleteServerCatalog:
    post:
      operationId: DeleteServerCatalog
      description: Deletes all servers from your server catalog.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteServerCatalogResponse"
        "480":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
        "481":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.DeleteServerCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteServerCatalogRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.DisassociateConnector:
    post:
      operationId: DisassociateConnector
      description: <p>Disassociates the specified connector from AWS SMS.</p> <p>After you
        disassociate a connector, it is no longer available to support
        replication jobs.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateConnectorResponse"
        "480":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "481":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
        "482":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
        "483":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.DisassociateConnector
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateConnectorRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GenerateChangeSet:
    post:
      operationId: GenerateChangeSet
      description: Generates a target change set for a currently launched stack and writes
        it to an Amazon S3 object in the customer’s Amazon S3 bucket.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateChangeSetResponse"
        "480":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "483":
          description: InternalError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
        "484":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.GenerateChangeSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateChangeSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GenerateTemplate:
    post:
      operationId: GenerateTemplate
      description: Generates an Amazon CloudFormation template based on the current launch
        configuration and writes it to an Amazon S3 object in the customer’s
        Amazon S3 bucket.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateTemplateResponse"
        "480":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "483":
          description: InternalError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
        "484":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.GenerateTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateTemplateRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetApp:
    post:
      operationId: GetApp
      description: Retrieve information about an application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAppResponse"
        "480":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "483":
          description: InternalError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
        "484":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.GetApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetAppRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetAppLaunchConfiguration:
    post:
      operationId: GetAppLaunchConfiguration
      description: Retrieves the application launch configuration associated with an
        application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAppLaunchConfigurationResponse"
        "480":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "483":
          description: InternalError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
        "484":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.GetAppLaunchConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetAppLaunchConfigurationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetAppReplicationConfiguration:
    post:
      operationId: GetAppReplicationConfiguration
      description: Retrieves an application replication configuration associatd with an
        application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAppReplicationConfigurationResponse"
        "480":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "483":
          description: InternalError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
        "484":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.GetAppReplicationConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetAppReplicationConfigurationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetConnectors:
    post:
      operationId: GetConnectors
      description: Describes the connectors registered with the AWS SMS.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetConnectorsResponse"
        "480":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.GetConnectors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetConnectorsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetReplicationJobs:
    post:
      operationId: GetReplicationJobs
      description: Describes the specified replication job or all of your replication jobs.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetReplicationJobsResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "482":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.GetReplicationJobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetReplicationJobsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetReplicationRuns:
    post:
      operationId: GetReplicationRuns
      description: Describes the replication runs for the specified replication job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetReplicationRunsResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "482":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.GetReplicationRuns
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetReplicationRunsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.GetServers:
    post:
      operationId: GetServers
      description: <p>Describes the servers in your server catalog.</p> <p>Before you can
        describe your servers, you must import them using
        <a>ImportServerCatalog</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetServersResponse"
        "480":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
      parameters:
        - name: maxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.GetServers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetServersRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.ImportServerCatalog:
    post:
      operationId: ImportServerCatalog
      description: <p>Gathers a complete list of on-premises servers. Connectors must be
        installed and monitoring all servers that you want to import.</p>
        <p>This call returns immediately, but might take additional time to
        retrieve all the servers.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportServerCatalogResponse"
        "480":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
        "481":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
        "482":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "483":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "484":
          description: NoConnectorsAvailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoConnectorsAvailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.ImportServerCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportServerCatalogRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.LaunchApp:
    post:
      operationId: LaunchApp
      description: Launches an application stack.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LaunchAppResponse"
        "480":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "483":
          description: InternalError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
        "484":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.LaunchApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LaunchAppRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.ListApps:
    post:
      operationId: ListApps
      description: Returns a list of summaries for all applications.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAppsResponse"
        "480":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "483":
          description: InternalError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
        "484":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.ListApps
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListAppsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.PutAppLaunchConfiguration:
    post:
      operationId: PutAppLaunchConfiguration
      description: Creates a launch configuration for an application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutAppLaunchConfigurationResponse"
        "480":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "483":
          description: InternalError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
        "484":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.PutAppLaunchConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutAppLaunchConfigurationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.PutAppReplicationConfiguration:
    post:
      operationId: PutAppReplicationConfiguration
      description: Creates or updates a replication configuration for an application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutAppReplicationConfigurationResponse"
        "480":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "483":
          description: InternalError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
        "484":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.PutAppReplicationConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutAppReplicationConfigurationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.StartAppReplication:
    post:
      operationId: StartAppReplication
      description: Starts replicating an application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartAppReplicationResponse"
        "480":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "483":
          description: InternalError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
        "484":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.StartAppReplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartAppReplicationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.StartOnDemandReplicationRun:
    post:
      operationId: StartOnDemandReplicationRun
      description: <p>Starts an on-demand replication run for the specified replication
        job. This replication run starts immediately. This replication run is in
        addition to the ones already scheduled.</p> <p>There is a limit on the
        number of on-demand replications runs you can request in a 24-hour
        period.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartOnDemandReplicationRunResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "482":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
        "483":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
        "484":
          description: ReplicationRunLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplicationRunLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.StartOnDemandReplicationRun
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartOnDemandReplicationRunRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.StopAppReplication:
    post:
      operationId: StopAppReplication
      description: Stops replicating an application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopAppReplicationResponse"
        "480":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "483":
          description: InternalError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
        "484":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.StopAppReplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopAppReplicationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.TerminateApp:
    post:
      operationId: TerminateApp
      description: Terminates the stack for an application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TerminateAppResponse"
        "480":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "483":
          description: InternalError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
        "484":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.TerminateApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TerminateAppRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.UpdateApp:
    post:
      operationId: UpdateApp
      description: Updates an application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateAppResponse"
        "480":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
        "481":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "482":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "483":
          description: InternalError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
        "484":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.UpdateApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAppRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSServerMigrationService_V2016_10_24.UpdateReplicationJob:
    post:
      operationId: UpdateReplicationJob
      description: Updates the specified settings for the specified replication job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateReplicationJobResponse"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: MissingRequiredParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MissingRequiredParameterException"
        "482":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
        "483":
          description: UnauthorizedOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedOperationException"
        "484":
          description: ServerCannotBeReplicatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerCannotBeReplicatedException"
        "485":
          description: ReplicationJobNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplicationJobNotFoundException"
        "486":
          description: InternalError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalError"
        "487":
          description: TemporarilyUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemporarilyUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSServerMigrationService_V2016_10_24.UpdateReplicationJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateReplicationJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://sms.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The SMS multi-region endpoint
  - url: https://sms.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The SMS multi-region endpoint
  - url: http://sms.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The SMS endpoint for China (Beijing) and China (Ningxia)
  - url: https://sms.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The SMS endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateAppResponse:
      type: object
      properties:
        appSummary:
          $ref: "#/components/schemas/AppSummary"
        serverGroups:
          $ref: "#/components/schemas/ServerGroups"
        tags:
          $ref: "#/components/schemas/Tags"
    CreateAppRequest:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/AppName"
        description:
          $ref: "#/components/schemas/AppDescription"
        roleName:
          $ref: "#/components/schemas/RoleName"
        clientToken:
          $ref: "#/components/schemas/ClientToken"
        serverGroups:
          $ref: "#/components/schemas/ServerGroups"
        tags:
          $ref: "#/components/schemas/Tags"
    UnauthorizedOperationException: {}
    InvalidParameterException: {}
    MissingRequiredParameterException: {}
    InternalError: {}
    OperationNotPermittedException: {}
    CreateReplicationJobResponse:
      type: object
      properties:
        replicationJobId:
          $ref: "#/components/schemas/ReplicationJobId"
    CreateReplicationJobRequest:
      type: object
      required:
        - serverId
        - seedReplicationTime
      properties:
        serverId:
          $ref: "#/components/schemas/ServerId"
        seedReplicationTime:
          $ref: "#/components/schemas/Timestamp"
        frequency:
          $ref: "#/components/schemas/Frequency"
        runOnce:
          $ref: "#/components/schemas/RunOnce"
        licenseType:
          $ref: "#/components/schemas/LicenseType"
        roleName:
          $ref: "#/components/schemas/RoleName"
        description:
          $ref: "#/components/schemas/Description"
        numberOfRecentAmisToKeep:
          $ref: "#/components/schemas/NumberOfRecentAmisToKeep"
        encrypted:
          $ref: "#/components/schemas/Encrypted"
        kmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
    ServerCannotBeReplicatedException: {}
    ReplicationJobAlreadyExistsException: {}
    NoConnectorsAvailableException: {}
    TemporarilyUnavailableException: {}
    DeleteAppResponse:
      type: object
      properties: {}
    DeleteAppRequest:
      type: object
      properties:
        appId:
          $ref: "#/components/schemas/AppId"
        forceStopAppReplication:
          $ref: "#/components/schemas/ForceStopAppReplication"
        forceTerminateApp:
          $ref: "#/components/schemas/ForceTerminateApp"
    DeleteAppLaunchConfigurationResponse:
      type: object
      properties: {}
    DeleteAppLaunchConfigurationRequest:
      type: object
      properties:
        appId:
          $ref: "#/components/schemas/AppId"
    DeleteAppReplicationConfigurationResponse:
      type: object
      properties: {}
    DeleteAppReplicationConfigurationRequest:
      type: object
      properties:
        appId:
          $ref: "#/components/schemas/AppId"
    DeleteReplicationJobResponse:
      type: object
      properties: {}
    DeleteReplicationJobRequest:
      type: object
      required:
        - replicationJobId
      properties:
        replicationJobId:
          $ref: "#/components/schemas/ReplicationJobId"
    ReplicationJobNotFoundException: {}
    DeleteServerCatalogResponse:
      type: object
      properties: {}
    DeleteServerCatalogRequest:
      type: object
      properties: {}
    DisassociateConnectorResponse:
      type: object
      properties: {}
    DisassociateConnectorRequest:
      type: object
      required:
        - connectorId
      properties:
        connectorId:
          $ref: "#/components/schemas/ConnectorId"
    GenerateChangeSetResponse:
      type: object
      properties:
        s3Location:
          $ref: "#/components/schemas/S3Location"
    GenerateChangeSetRequest:
      type: object
      properties:
        appId:
          $ref: "#/components/schemas/AppId"
        changesetFormat:
          $ref: "#/components/schemas/OutputFormat"
    GenerateTemplateResponse:
      type: object
      properties:
        s3Location:
          $ref: "#/components/schemas/S3Location"
    GenerateTemplateRequest:
      type: object
      properties:
        appId:
          $ref: "#/components/schemas/AppId"
        templateFormat:
          $ref: "#/components/schemas/OutputFormat"
    GetAppResponse:
      type: object
      properties:
        appSummary:
          $ref: "#/components/schemas/AppSummary"
        serverGroups:
          $ref: "#/components/schemas/ServerGroups"
        tags:
          $ref: "#/components/schemas/Tags"
    GetAppRequest:
      type: object
      properties:
        appId:
          $ref: "#/components/schemas/AppId"
    GetAppLaunchConfigurationResponse:
      type: object
      properties:
        appId:
          $ref: "#/components/schemas/AppId"
        roleName:
          $ref: "#/components/schemas/RoleName"
        serverGroupLaunchConfigurations:
          $ref: "#/components/schemas/ServerGroupLaunchConfigurations"
    GetAppLaunchConfigurationRequest:
      type: object
      properties:
        appId:
          $ref: "#/components/schemas/AppId"
    GetAppReplicationConfigurationResponse:
      type: object
      properties:
        serverGroupReplicationConfigurations:
          $ref: "#/components/schemas/ServerGroupReplicationConfigurations"
    GetAppReplicationConfigurationRequest:
      type: object
      properties:
        appId:
          $ref: "#/components/schemas/AppId"
    GetConnectorsResponse:
      type: object
      properties:
        connectorList:
          $ref: "#/components/schemas/ConnectorList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    GetConnectorsRequest:
      type: object
      properties:
        nextToken:
          $ref: "#/components/schemas/NextToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
    GetReplicationJobsResponse:
      type: object
      properties:
        replicationJobList:
          $ref: "#/components/schemas/ReplicationJobList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    GetReplicationJobsRequest:
      type: object
      properties:
        replicationJobId:
          $ref: "#/components/schemas/ReplicationJobId"
        nextToken:
          $ref: "#/components/schemas/NextToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
    GetReplicationRunsResponse:
      type: object
      properties:
        replicationJob:
          $ref: "#/components/schemas/ReplicationJob"
        replicationRunList:
          $ref: "#/components/schemas/ReplicationRunList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    GetReplicationRunsRequest:
      type: object
      required:
        - replicationJobId
      properties:
        replicationJobId:
          $ref: "#/components/schemas/ReplicationJobId"
        nextToken:
          $ref: "#/components/schemas/NextToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
    GetServersResponse:
      type: object
      properties:
        lastModifiedOn:
          $ref: "#/components/schemas/Timestamp"
        serverCatalogStatus:
          $ref: "#/components/schemas/ServerCatalogStatus"
        serverList:
          $ref: "#/components/schemas/ServerList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    GetServersRequest:
      type: object
      properties:
        nextToken:
          $ref: "#/components/schemas/NextToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
        vmServerAddressList:
          $ref: "#/components/schemas/VmServerAddressList"
    ImportServerCatalogResponse:
      type: object
      properties: {}
    ImportServerCatalogRequest:
      type: object
      properties: {}
    LaunchAppResponse:
      type: object
      properties: {}
    LaunchAppRequest:
      type: object
      properties:
        appId:
          $ref: "#/components/schemas/AppId"
    ListAppsResponse:
      type: object
      properties:
        apps:
          $ref: "#/components/schemas/Apps"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    ListAppsRequest:
      type: object
      properties:
        appIds:
          $ref: "#/components/schemas/AppIds"
        nextToken:
          $ref: "#/components/schemas/NextToken"
        maxResults:
          $ref: "#/components/schemas/MaxResults"
    PutAppLaunchConfigurationResponse:
      type: object
      properties: {}
    PutAppLaunchConfigurationRequest:
      type: object
      properties:
        appId:
          $ref: "#/components/schemas/AppId"
        roleName:
          $ref: "#/components/schemas/RoleName"
        serverGroupLaunchConfigurations:
          $ref: "#/components/schemas/ServerGroupLaunchConfigurations"
    PutAppReplicationConfigurationResponse:
      type: object
      properties: {}
    PutAppReplicationConfigurationRequest:
      type: object
      properties:
        appId:
          $ref: "#/components/schemas/AppId"
        serverGroupReplicationConfigurations:
          $ref: "#/components/schemas/ServerGroupReplicationConfigurations"
    StartAppReplicationResponse:
      type: object
      properties: {}
    StartAppReplicationRequest:
      type: object
      properties:
        appId:
          $ref: "#/components/schemas/AppId"
    StartOnDemandReplicationRunResponse:
      type: object
      properties:
        replicationRunId:
          $ref: "#/components/schemas/ReplicationRunId"
    StartOnDemandReplicationRunRequest:
      type: object
      required:
        - replicationJobId
      properties:
        replicationJobId:
          $ref: "#/components/schemas/ReplicationJobId"
        description:
          $ref: "#/components/schemas/Description"
    ReplicationRunLimitExceededException: {}
    StopAppReplicationResponse:
      type: object
      properties: {}
    StopAppReplicationRequest:
      type: object
      properties:
        appId:
          $ref: "#/components/schemas/AppId"
    TerminateAppResponse:
      type: object
      properties: {}
    TerminateAppRequest:
      type: object
      properties:
        appId:
          $ref: "#/components/schemas/AppId"
    UpdateAppResponse:
      type: object
      properties:
        appSummary:
          $ref: "#/components/schemas/AppSummary"
        serverGroups:
          $ref: "#/components/schemas/ServerGroups"
        tags:
          $ref: "#/components/schemas/Tags"
    UpdateAppRequest:
      type: object
      properties:
        appId:
          $ref: "#/components/schemas/AppId"
        name:
          $ref: "#/components/schemas/AppName"
        description:
          $ref: "#/components/schemas/AppDescription"
        roleName:
          $ref: "#/components/schemas/RoleName"
        serverGroups:
          $ref: "#/components/schemas/ServerGroups"
        tags:
          $ref: "#/components/schemas/Tags"
    UpdateReplicationJobResponse:
      type: object
      properties: {}
    UpdateReplicationJobRequest:
      type: object
      required:
        - replicationJobId
      properties:
        replicationJobId:
          $ref: "#/components/schemas/ReplicationJobId"
        frequency:
          $ref: "#/components/schemas/Frequency"
        nextReplicationRunStartTime:
          $ref: "#/components/schemas/Timestamp"
        licenseType:
          $ref: "#/components/schemas/LicenseType"
        roleName:
          $ref: "#/components/schemas/RoleName"
        description:
          $ref: "#/components/schemas/Description"
        numberOfRecentAmisToKeep:
          $ref: "#/components/schemas/NumberOfRecentAmisToKeep"
        encrypted:
          $ref: "#/components/schemas/Encrypted"
        kmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
    AmiId:
      type: string
    AppDescription:
      type: string
    AppId:
      type: string
    AppIds:
      type: array
      items:
        $ref: "#/components/schemas/AppId"
    AppLaunchStatus:
      type: string
      enum:
        - READY_FOR_CONFIGURATION
        - CONFIGURATION_IN_PROGRESS
        - CONFIGURATION_INVALID
        - READY_FOR_LAUNCH
        - VALIDATION_IN_PROGRESS
        - LAUNCH_PENDING
        - LAUNCH_IN_PROGRESS
        - LAUNCHED
        - DELTA_LAUNCH_IN_PROGRESS
        - DELTA_LAUNCH_FAILED
        - LAUNCH_FAILED
        - TERMINATE_IN_PROGRESS
        - TERMINATE_FAILED
        - TERMINATED
    AppLaunchStatusMessage:
      type: string
    AppName:
      type: string
    AppReplicationStatus:
      type: string
      enum:
        - READY_FOR_CONFIGURATION
        - CONFIGURATION_IN_PROGRESS
        - CONFIGURATION_INVALID
        - READY_FOR_REPLICATION
        - VALIDATION_IN_PROGRESS
        - REPLICATION_PENDING
        - REPLICATION_IN_PROGRESS
        - REPLICATED
        - DELTA_REPLICATION_IN_PROGRESS
        - DELTA_REPLICATED
        - DELTA_REPLICATION_FAILED
        - REPLICATION_FAILED
        - REPLICATION_STOPPING
        - REPLICATION_STOP_FAILED
        - REPLICATION_STOPPED
    AppReplicationStatusMessage:
      type: string
    AppStatus:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - UPDATING
        - DELETING
        - DELETED
        - DELETE_FAILED
    AppStatusMessage:
      type: string
    Timestamp:
      type: string
      format: date-time
    LaunchDetails:
      type: object
      properties:
        latestLaunchTime:
          $ref: "#/components/schemas/Timestamp"
        stackName:
          $ref: "#/components/schemas/StackName"
        stackId:
          $ref: "#/components/schemas/StackId"
      description: Details about the latest launch of an application.
    RoleName:
      type: string
    TotalServerGroups:
      type: integer
    TotalServers:
      type: integer
    AppSummary:
      type: object
      properties:
        appId:
          $ref: "#/components/schemas/AppId"
        name:
          $ref: "#/components/schemas/AppName"
        description:
          $ref: "#/components/schemas/AppDescription"
        status:
          $ref: "#/components/schemas/AppStatus"
        statusMessage:
          $ref: "#/components/schemas/AppStatusMessage"
        replicationStatus:
          $ref: "#/components/schemas/AppReplicationStatus"
        replicationStatusMessage:
          $ref: "#/components/schemas/AppReplicationStatusMessage"
        latestReplicationTime:
          $ref: "#/components/schemas/Timestamp"
        launchStatus:
          $ref: "#/components/schemas/AppLaunchStatus"
        launchStatusMessage:
          $ref: "#/components/schemas/AppLaunchStatusMessage"
        launchDetails:
          $ref: "#/components/schemas/LaunchDetails"
        creationTime:
          $ref: "#/components/schemas/Timestamp"
        lastModified:
          $ref: "#/components/schemas/Timestamp"
        roleName:
          $ref: "#/components/schemas/RoleName"
        totalServerGroups:
          $ref: "#/components/schemas/TotalServerGroups"
        totalServers:
          $ref: "#/components/schemas/TotalServers"
      description: Information about the application.
    Apps:
      type: array
      items:
        $ref: "#/components/schemas/AppSummary"
    AssociatePublicIpAddress:
      type: boolean
    BucketName:
      type: string
    ClientToken:
      type: string
    ConnectorId:
      type: string
    ConnectorVersion:
      type: string
    ConnectorStatus:
      type: string
      enum:
        - HEALTHY
        - UNHEALTHY
    ConnectorCapabilityList:
      type: array
      items:
        $ref: "#/components/schemas/ConnectorCapability"
    VmManagerName:
      type: string
    VmManagerType:
      type: string
      enum:
        - VSPHERE
        - SCVMM
        - HYPERV-MANAGER
    VmManagerId:
      type: string
    IpAddress:
      type: string
    MacAddress:
      type: string
    Connector:
      type: object
      properties:
        connectorId:
          $ref: "#/components/schemas/ConnectorId"
        version:
          $ref: "#/components/schemas/ConnectorVersion"
        status:
          $ref: "#/components/schemas/ConnectorStatus"
        capabilityList:
          $ref: "#/components/schemas/ConnectorCapabilityList"
        vmManagerName:
          $ref: "#/components/schemas/VmManagerName"
        vmManagerType:
          $ref: "#/components/schemas/VmManagerType"
        vmManagerId:
          $ref: "#/components/schemas/VmManagerId"
        ipAddress:
          $ref: "#/components/schemas/IpAddress"
        macAddress:
          $ref: "#/components/schemas/MacAddress"
        associatedOn:
          $ref: "#/components/schemas/Timestamp"
      description: Represents a connector.
    ConnectorCapability:
      type: string
      enum:
        - VSPHERE
        - SCVMM
        - HYPERV-MANAGER
        - SNAPSHOT_BATCHING
    ConnectorList:
      type: array
      items:
        $ref: "#/components/schemas/Connector"
    ServerGroups:
      type: array
      items:
        $ref: "#/components/schemas/ServerGroup"
    Tags:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    ServerId:
      type: string
    Frequency:
      type: integer
    RunOnce:
      type: boolean
    LicenseType:
      type: string
      enum:
        - AWS
        - BYOL
    Description:
      type: string
    NumberOfRecentAmisToKeep:
      type: integer
    Encrypted:
      type: boolean
    KmsKeyId:
      type: string
    ReplicationJobId:
      type: string
    ForceStopAppReplication:
      type: boolean
    ForceTerminateApp:
      type: boolean
    EC2KeyName:
      type: string
    OutputFormat:
      type: string
      enum:
        - JSON
        - YAML
    S3Location:
      type: object
      properties:
        bucket:
          $ref: "#/components/schemas/BucketName"
        key:
          $ref: "#/components/schemas/KeyName"
      description: Location of the Amazon S3 object in the customer's account.
    ServerGroupLaunchConfigurations:
      type: array
      items:
        $ref: "#/components/schemas/ServerGroupLaunchConfiguration"
    ServerGroupReplicationConfigurations:
      type: array
      items:
        $ref: "#/components/schemas/ServerGroupReplicationConfiguration"
    NextToken:
      type: string
    MaxResults:
      type: integer
    ReplicationJobList:
      type: array
      items:
        $ref: "#/components/schemas/ReplicationJob"
    ReplicationJob:
      type: object
      properties:
        replicationJobId:
          $ref: "#/components/schemas/ReplicationJobId"
        serverId:
          $ref: "#/components/schemas/ServerId"
        serverType:
          $ref: "#/components/schemas/ServerType"
        vmServer:
          $ref: "#/components/schemas/VmServer"
        seedReplicationTime:
          $ref: "#/components/schemas/Timestamp"
        frequency:
          $ref: "#/components/schemas/Frequency"
        runOnce:
          $ref: "#/components/schemas/RunOnce"
        nextReplicationRunStartTime:
          $ref: "#/components/schemas/Timestamp"
        licenseType:
          $ref: "#/components/schemas/LicenseType"
        roleName:
          $ref: "#/components/schemas/RoleName"
        latestAmiId:
          $ref: "#/components/schemas/AmiId"
        state:
          $ref: "#/components/schemas/ReplicationJobState"
        statusMessage:
          $ref: "#/components/schemas/ReplicationJobStatusMessage"
        description:
          $ref: "#/components/schemas/Description"
        numberOfRecentAmisToKeep:
          $ref: "#/components/schemas/NumberOfRecentAmisToKeep"
        encrypted:
          $ref: "#/components/schemas/Encrypted"
        kmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        replicationRunList:
          $ref: "#/components/schemas/ReplicationRunList"
      description: Represents a replication job.
    ReplicationRunList:
      type: array
      items:
        $ref: "#/components/schemas/ReplicationRun"
    VmServerAddressList:
      type: array
      items:
        $ref: "#/components/schemas/VmServerAddress"
    ServerCatalogStatus:
      type: string
      enum:
        - NOT_IMPORTED
        - IMPORTING
        - AVAILABLE
        - DELETED
        - EXPIRED
    ServerList:
      type: array
      items:
        $ref: "#/components/schemas/Server"
    InstanceType:
      type: string
    KeyName:
      type: string
    StackName:
      type: string
    StackId:
      type: string
    LaunchOrder:
      type: integer
    LogicalId:
      type: string
    ServerType:
      type: string
      enum:
        - VIRTUAL_MACHINE
    VmServer:
      type: object
      properties:
        vmServerAddress:
          $ref: "#/components/schemas/VmServerAddress"
        vmName:
          $ref: "#/components/schemas/VmName"
        vmManagerName:
          $ref: "#/components/schemas/VmManagerName"
        vmManagerType:
          $ref: "#/components/schemas/VmManagerType"
        vmPath:
          $ref: "#/components/schemas/VmPath"
      description: Represents a VM server.
    ReplicationJobState:
      type: string
      enum:
        - PENDING
        - ACTIVE
        - FAILED
        - DELETING
        - DELETED
        - COMPLETED
        - PAUSED_ON_FAILURE
        - FAILING
    ReplicationJobStatusMessage:
      type: string
    ReplicationJobTerminated:
      type: boolean
    ReplicationRunId:
      type: string
    ReplicationRunState:
      type: string
      enum:
        - PENDING
        - MISSED
        - ACTIVE
        - FAILED
        - COMPLETED
        - DELETING
        - DELETED
    ReplicationRunType:
      type: string
      enum:
        - ON_DEMAND
        - AUTOMATIC
    ReplicationRunStageDetails:
      type: object
      properties:
        stage:
          $ref: "#/components/schemas/ReplicationRunStage"
        stageProgress:
          $ref: "#/components/schemas/ReplicationRunStageProgress"
      description: Details of the current stage of a replication run.
    ReplicationRunStatusMessage:
      type: string
    ReplicationRun:
      type: object
      properties:
        replicationRunId:
          $ref: "#/components/schemas/ReplicationRunId"
        state:
          $ref: "#/components/schemas/ReplicationRunState"
        type:
          $ref: "#/components/schemas/ReplicationRunType"
        stageDetails:
          $ref: "#/components/schemas/ReplicationRunStageDetails"
        statusMessage:
          $ref: "#/components/schemas/ReplicationRunStatusMessage"
        amiId:
          $ref: "#/components/schemas/AmiId"
        scheduledStartTime:
          $ref: "#/components/schemas/Timestamp"
        completedTime:
          $ref: "#/components/schemas/Timestamp"
        description:
          $ref: "#/components/schemas/Description"
        encrypted:
          $ref: "#/components/schemas/Encrypted"
        kmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
      description: Represents a replication run.
    ReplicationRunStage:
      type: string
    ReplicationRunStageProgress:
      type: string
    SecurityGroup:
      type: string
    Server:
      type: object
      properties:
        serverId:
          $ref: "#/components/schemas/ServerId"
        serverType:
          $ref: "#/components/schemas/ServerType"
        vmServer:
          $ref: "#/components/schemas/VmServer"
        replicationJobId:
          $ref: "#/components/schemas/ReplicationJobId"
        replicationJobTerminated:
          $ref: "#/components/schemas/ReplicationJobTerminated"
      description: Represents a server.
    ServerGroupId:
      type: string
    ServerGroupName:
      type: string
    ServerGroup:
      type: object
      properties:
        serverGroupId:
          $ref: "#/components/schemas/ServerGroupId"
        name:
          $ref: "#/components/schemas/ServerGroupName"
        serverList:
          $ref: "#/components/schemas/ServerList"
      description: A logical grouping of servers.
    ServerLaunchConfigurations:
      type: array
      items:
        $ref: "#/components/schemas/ServerLaunchConfiguration"
    ServerGroupLaunchConfiguration:
      type: object
      properties:
        serverGroupId:
          $ref: "#/components/schemas/ServerGroupId"
        launchOrder:
          $ref: "#/components/schemas/LaunchOrder"
        serverLaunchConfigurations:
          $ref: "#/components/schemas/ServerLaunchConfigurations"
      description: Launch configuration for a server group.
    ServerReplicationConfigurations:
      type: array
      items:
        $ref: "#/components/schemas/ServerReplicationConfiguration"
    ServerGroupReplicationConfiguration:
      type: object
      properties:
        serverGroupId:
          $ref: "#/components/schemas/ServerGroupId"
        serverReplicationConfigurations:
          $ref: "#/components/schemas/ServerReplicationConfigurations"
      description: Replication configuration for a server group.
    VPC:
      type: string
    Subnet:
      type: string
    UserData:
      type: object
      properties:
        s3Location:
          $ref: "#/components/schemas/S3Location"
      description: A script that runs on first launch of an Amazon EC2 instance. Used for
        configuring the server during launch.
    ServerLaunchConfiguration:
      type: object
      properties:
        server:
          $ref: "#/components/schemas/Server"
        logicalId:
          $ref: "#/components/schemas/LogicalId"
        vpc:
          $ref: "#/components/schemas/VPC"
        subnet:
          $ref: "#/components/schemas/Subnet"
        securityGroup:
          $ref: "#/components/schemas/SecurityGroup"
        ec2KeyName:
          $ref: "#/components/schemas/EC2KeyName"
        userData:
          $ref: "#/components/schemas/UserData"
        instanceType:
          $ref: "#/components/schemas/InstanceType"
        associatePublicIpAddress:
          $ref: "#/components/schemas/AssociatePublicIpAddress"
      description: Launch configuration for a server.
    ServerReplicationParameters:
      type: object
      properties:
        seedTime:
          $ref: "#/components/schemas/Timestamp"
        frequency:
          $ref: "#/components/schemas/Frequency"
        runOnce:
          $ref: "#/components/schemas/RunOnce"
        licenseType:
          $ref: "#/components/schemas/LicenseType"
        numberOfRecentAmisToKeep:
          $ref: "#/components/schemas/NumberOfRecentAmisToKeep"
        encrypted:
          $ref: "#/components/schemas/Encrypted"
        kmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
      description: Replication parameters for replicating a server.
    ServerReplicationConfiguration:
      type: object
      properties:
        server:
          $ref: "#/components/schemas/Server"
        serverReplicationParameters:
          $ref: "#/components/schemas/ServerReplicationParameters"
      description: Replication configuration of a server.
    TagKey:
      type: string
    TagValue:
      type: string
    Tag:
      type: object
      properties:
        key:
          $ref: "#/components/schemas/TagKey"
        value:
          $ref: "#/components/schemas/TagValue"
      description: A label that can be assigned to an application.
    VmId:
      type: string
    VmName:
      type: string
    VmPath:
      type: string
    VmServerAddress:
      type: object
      properties:
        vmManagerId:
          $ref: "#/components/schemas/VmManagerId"
        vmId:
          $ref: "#/components/schemas/VmId"
      description: Represents a VM server location.
