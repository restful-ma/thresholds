openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: >
    Cloud Talent Solution provides the capability to create, read, update, and
    delete job postings, as well as search jobs based on keywords and filters.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Talent Solution
  version: v2
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://jobs.googleapis.com/$discovery/rest?version=v2
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: jobs
externalDocs:
  url: https://cloud.google.com/talent-solution/job-search/docs/
tags:
  - name: companies
  - name: jobs
  - name: v2
paths:
  /v2/companies:
    get:
      description: Lists all companies associated with a Cloud Talent Solution account.
      operationId: jobs.companies.list
      parameters:
        - description: |-
            Optional. Set to true if the companies request must have open jobs.

            Defaults to false.

            If true, at most page_size of companies are fetched, among which
            only those with open jobs are returned.
          in: query
          name: mustHaveOpenJobs
          schema:
            type: boolean
        - description: >-
            Optional. The maximum number of companies to be returned, at most
            100.

            Default is 100 if a non-positive number is provided.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The starting indicator from which to return results.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListCompaniesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/jobs
          Oauth2c:
            - https://www.googleapis.com/auth/jobs
      tags:
        - companies
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Creates a new company entity.
      operationId: jobs.companies.create
      requestBody:
        $ref: "#/components/requestBodies/Company"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Company"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/jobs
          Oauth2c:
            - https://www.googleapis.com/auth/jobs
      tags:
        - companies
  /v2/jobs:
    get:
      description: Lists jobs by filter.
      operationId: jobs.jobs.list
      parameters:
        - description: |-
            Required. The filter string specifies the jobs to be enumerated.

            Supported operator: =, AND

            The fields eligible for filtering are:

            * `companyName` (Required)
            * `requisitionId` (Optional)

            Sample Query:

            * companyName = "companies/123"
            * companyName = "companies/123" AND requisitionId = "req-1"
          in: query
          name: filter
          schema:
            type: string
        - description: |-
            Optional. If set to `true`, only Job.name, Job.requisition_id and
            Job.language_code will be returned.

            A typical use case is to synchronize job repositories.

            Defaults to false.
          in: query
          name: idsOnly
          schema:
            type: boolean
        - description: >-
            Optional. The maximum number of jobs to be returned per page of
            results.


            If ids_only is set to true, the maximum allowed page size

            is 1000. Otherwise, the maximum allowed page size is 100.


            Default is 100 if empty or a number < 1 is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The starting point of a query result.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListJobsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/jobs
          Oauth2c:
            - https://www.googleapis.com/auth/jobs
      tags:
        - jobs
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Creates a new job.

        Typically, the job becomes searchable within 10 seconds, but it may take
        up to 5 minutes.
      operationId: jobs.jobs.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateJobRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Job"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/jobs
          Oauth2c:
            - https://www.googleapis.com/auth/jobs
      tags:
        - jobs
  /v2/jobs:batchDelete:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Deletes a list of Job postings by filter.
      operationId: jobs.jobs.batchDelete
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDeleteJobsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/jobs
          Oauth2c:
            - https://www.googleapis.com/auth/jobs
      tags:
        - jobs
  /v2/jobs:deleteByFilter:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Deprecated. Use BatchDeleteJobs instead.


        Deletes the specified job by filter. You can specify whether to

        synchronously wait for validation, indexing, and general processing to be

        completed before the response is returned.
      operationId: jobs.jobs.deleteByFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteJobsByFilterRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/jobs
          Oauth2c:
            - https://www.googleapis.com/auth/jobs
      tags:
        - jobs
  /v2/jobs:histogram:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Deprecated. Use SearchJobsRequest.histogram_facets instead to make
        a single call with both search and histogram.

        Retrieves a histogram for the given
        GetHistogramRequest. This call provides a structured
        count of jobs that match against the search query, grouped by specified
        facets.

        This call constrains the visibility of jobs
        present in the database, and only counts jobs the caller has
        permission to search against.

        For example, use this call to generate the
        number of jobs in the U.S. by state.
      operationId: jobs.jobs.histogram
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetHistogramRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GetHistogramResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/jobs
          Oauth2c:
            - https://www.googleapis.com/auth/jobs
      tags:
        - jobs
  /v2/jobs:search:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Searches for jobs using the provided SearchJobsRequest.

        This call constrains the visibility of jobs
        present in the database, and only returns jobs that the caller has
        permission to search against.
      operationId: jobs.jobs.search
      requestBody:
        $ref: "#/components/requestBodies/SearchJobsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SearchJobsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/jobs
          Oauth2c:
            - https://www.googleapis.com/auth/jobs
      tags:
        - jobs
  /v2/jobs:searchForAlert:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Searches for jobs using the provided SearchJobsRequest.

        This API call is intended for the use case of targeting passive job
        seekers (for example, job seekers who have signed up to receive email
        alerts about potential job opportunities), and has different algorithmic
        adjustments that are targeted to passive job seekers.

        This call constrains the visibility of jobs
        present in the database, and only returns jobs the caller has
        permission to search against.
      operationId: jobs.jobs.searchForAlert
      requestBody:
        $ref: "#/components/requestBodies/SearchJobsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SearchJobsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/jobs
          Oauth2c:
            - https://www.googleapis.com/auth/jobs
      tags:
        - jobs
  "/v2/{companyName}/jobs":
    get:
      description: |-
        Deprecated. Use ListJobs instead.

        Lists all jobs associated with a company.
      operationId: jobs.companies.jobs.list
      parameters:
        - description: >-
            Required. The resource name of the company that owns the jobs to be
            listed,

            such as, "companies/0000aaaa-1111-bbbb-2222-cccc3333dddd".
          in: path
          name: companyName
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            Optional. If set to `true`, only job ID, job requisition ID and
            language code will be

            returned.


            A typical use is to synchronize job repositories.


            Defaults to false.
          in: query
          name: idsOnly
          schema:
            type: boolean
        - description: |-
            Deprecated. Please DO NOT use this field except for small companies.
            Suggest counting jobs page by page instead.

            Optional.

            Set to true if the total number of open jobs is to be returned.

            Defaults to false.
          in: query
          name: includeJobsCount
          schema:
            type: boolean
        - description: >-
            Optional. The requisition ID, also known as posting ID, assigned by
            the company

            to the job.


            The maximum number of allowable characters is 225.
          in: query
          name: jobRequisitionId
          schema:
            type: string
        - description: >-
            Optional. The maximum number of jobs to be returned per page of
            results.


            If ids_only is set to true, the maximum allowed page size

            is 1000. Otherwise, the maximum allowed page size is 100.


            Default is 100 if empty or a number < 1 is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The starting point of a query result.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListCompanyJobsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/jobs
          Oauth2c:
            - https://www.googleapis.com/auth/jobs
      tags:
        - companies
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v2/{name}":
    delete:
      description: Deletes the specified company.
      operationId: jobs.companies.delete
      parameters:
        - description: |-
            Deprecated. This field is not working anymore.

            Optional.

            If set to true, this call waits for all processing steps to complete
            before the job is cleaned up. Otherwise, the call returns while some
            steps are still taking place asynchronously, hence faster.
          in: query
          name: disableFastProcess
          schema:
            type: boolean
        - description: |-
            Required. The resource name of the company to be deleted,
            such as, "companies/0000aaaa-1111-bbbb-2222-cccc3333dddd".
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/jobs
          Oauth2c:
            - https://www.googleapis.com/auth/jobs
      tags:
        - companies
    get:
      description: Retrieves the specified company.
      operationId: jobs.companies.get
      parameters:
        - description: |-
            Required. Resource name of the company to retrieve,
            such as "companies/0000aaaa-1111-bbbb-2222-cccc3333dddd".
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Company"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/jobs
          Oauth2c:
            - https://www.googleapis.com/auth/jobs
      tags:
        - companies
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    patch:
      description: >-
        Updates the specified company. Company names can't be updated. To update
        a

        company name, delete the company and all jobs associated with it, and only

        then re-create them.
      operationId: jobs.companies.patch
      parameters:
        - description: >-
            Required during company update.


            The resource name for a company. This is generated by the service when a

            company is created, for example,

            "companies/0000aaaa-1111-bbbb-2222-cccc3333dddd".
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            Optional but strongly recommended to be provided for the best
            service

            experience.


            If update_company_fields is provided, only the specified fields in

            company are updated. Otherwise all the fields are updated.


            A field mask to specify the company fields to update. Valid values are:


            * displayName

            * website

            * imageUrl

            * companySize

            * distributorBillingCompanyId

            * companyInfoSources

            * careerPageLink

            * hiringAgency

            * hqLocation

            * eeoText

            * keywordSearchableCustomAttributes

            * title (deprecated)

            * keywordSearchableCustomFields (deprecated)
          in: query
          name: updateCompanyFields
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Company"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Company"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/jobs
          Oauth2c:
            - https://www.googleapis.com/auth/jobs
      tags:
        - companies
  /v2:complete:
    get:
      description: |-
        Completes the specified prefix with job keyword suggestions.
        Intended for use by a job search auto-complete search box.
      operationId: jobs.complete
      parameters:
        - description: Optional. If provided, restricts completion to the specified company.
          in: query
          name: companyName
          schema:
            type: string
        - description: |-
            Required. The language of the query. This is
            the BCP-47 language code, such as "en-US" or "sr-Latn".
            For more information, see
            [Tags for Identifying Languages](https://tools.ietf.org/html/bcp47).

            For CompletionType.JOB_TITLE type, only open jobs with same
            language_code are returned.

            For CompletionType.COMPANY_NAME type,
            only companies having open jobs with same language_code are
            returned.

            For CompletionType.COMBINED type, only open jobs with same
            language_code or companies having open jobs with same
            language_code are returned.
          in: query
          name: languageCode
          schema:
            type: string
        - description: |-
            Required. Completion result count.
            The maximum allowed page size is 10.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Required. The query used to generate suggestions.
          in: query
          name: query
          schema:
            type: string
        - description: Optional. The scope of the completion. The defaults is
            CompletionScope.PUBLIC.
          in: query
          name: scope
          schema:
            type: string
            enum:
              - COMPLETION_SCOPE_UNSPECIFIED
              - TENANT
              - PUBLIC
        - description: Optional. The completion topic. The default is
            CompletionType.COMBINED.
          in: query
          name: type
          schema:
            type: string
            enum:
              - COMPLETION_TYPE_UNSPECIFIED
              - JOB_TITLE
              - COMPANY_NAME
              - COMBINED
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CompleteQueryResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/jobs
          Oauth2c:
            - https://www.googleapis.com/auth/jobs
      tags:
        - v2
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
servers:
  - url: https://jobs.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  requestBodies:
    SearchJobsRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SearchJobsRequest"
    Company:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Company"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/jobs: Manage job postings
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/jobs: Manage job postings
  schemas:
    BatchDeleteJobsRequest:
      description: |-
        Input only.

        Batch delete jobs request.
      properties:
        filter:
          description: >-
            Required. The filter string specifies the jobs to be deleted.


            Supported operator: =, AND


            The fields eligible for filtering are:


            * `companyName` (Required)

            * `requisitionId` (Required)


            Sample Query: companyName = "companies/123" AND requisitionId = "req-1"
          type: string
      type: object
    BucketRange:
      description: Represents starting and ending value of a range in double.
      properties:
        from:
          description: Starting value of the bucket range.
          format: double
          type: number
        to:
          description: Ending value of the bucket range.
          format: double
          type: number
      type: object
    BucketizedCount:
      description: Represents count of jobs within one bucket.
      properties:
        count:
          description: Number of jobs whose numeric field value fall into `range`.
          format: int32
          type: integer
        range:
          $ref: "#/components/schemas/BucketRange"
      type: object
    CommuteInfo:
      description: |-
        Output only.

        Commute details related to this job.
      properties:
        jobLocation:
          $ref: "#/components/schemas/JobLocation"
        travelDuration:
          description: >-
            The number of seconds required to travel to the job location from
            the query

            location. A duration of 0 seconds indicates that the job is not

            reachable within the requested duration, but was returned as part of an

            expanded query.
          format: google-duration
          type: string
      type: object
    CommutePreference:
      description: |-
        Input only.

        Parameters needed for commute search.
      properties:
        allowNonStreetLevelAddress:
          description: >-
            Optional. If `true`, jobs without street level addresses may also be
            returned.

            For city level addresses, the city center is used. For state and coarser

            level addresses, text matching is used.

            If this field is set to `false` or is not specified, only jobs that include

            street level addresses will be returned by commute search.
          type: boolean
        departureHourLocal:
          description: >-
            Optional. The departure hour to use to calculate traffic impact.
            Accepts an

            integer between 0 and 23, representing the hour in the time zone of the

            start_location. Must not be present if road_traffic is specified.
          format: int32
          type: integer
        method:
          description: Required. The method of transportation for which to calculate the
            commute time.
          enum:
            - COMMUTE_METHOD_UNSPECIFIED
            - DRIVING
            - TRANSIT
          type: string
        roadTraffic:
          description: >-
            Optional. Specifies the traffic density to use when calculating
            commute time.

            Must not be present if departure_hour_local is specified.
          enum:
            - ROAD_TRAFFIC_UNSPECIFIED
            - TRAFFIC_FREE
            - BUSY_HOUR
          type: string
        startLocation:
          $ref: "#/components/schemas/LatLng"
        travelTime:
          description: >-
            Required. The maximum travel time in seconds. The maximum allowed
            value is `3600s`

            (one hour). Format is `123s`.
          format: google-duration
          type: string
      type: object
    Company:
      description: >-
        A Company resource represents a company in the service. A company is the

        entity that owns job listings, that is, the hiring entity responsible for

        employing applicants for the job position.
      properties:
        careerPageLink:
          description: >-
            Optional. The URL to employer's career site or careers page on the
            employer's web

            site.
          type: string
        companyInfoSources:
          description: >-
            Optional. Identifiers external to the application that help to
            further identify

            the employer.
          items:
            $ref: "#/components/schemas/CompanyInfoSource"
          type: array
        companySize:
          description: Optional. The employer's company size.
          enum:
            - COMPANY_SIZE_UNSPECIFIED
            - MINI
            - SMALL
            - SMEDIUM
            - MEDIUM
            - BIG
            - BIGGER
            - GIANT
          type: string
        disableLocationOptimization:
          description: |-
            Deprecated. Do not use this field.

            Optional.

            This field is no longer used. Any value set to it is ignored.
          type: boolean
        displayName:
          description: |-
            Required. The name of the employer to be displayed with the job,
            for example, "Google, LLC.".
          type: string
        distributorBillingCompanyId:
          description: >-
            Optional. The unique company identifier provided by the client to
            identify an

            employer for billing purposes. Recommended practice is to use

            the distributor_company_id.


            Defaults to same value as distributor_company_id when a value

            is not provided.
          type: string
        distributorCompanyId:
          description: >-
            Required. A client's company identifier, used to uniquely identify
            the

            company. If an employer has a subsidiary or sub-brand, such as "Alphabet"

            and "Google", which the client wishes to use as the company displayed on

            the job. Best practice is to create a distinct company identifier for each

            distinct brand displayed.


            The maximum number of allowed characters is 255.
          type: string
        eeoText:
          description: |-
            Optional. Equal Employment Opportunity legal disclaimer text to be
            associated with all jobs, and typically to be displayed in all
            roles.

            The maximum number of allowed characters is 500.
          type: string
        hiringAgency:
          description: >-
            Optional. Set to true if it is the hiring agency that post jobs for
            other

            employers.


            Defaults to false if not provided.
          type: boolean
        hqLocation:
          description: >-
            Optional. The street address of the company's main headquarters,
            which may be

            different from the job location. The service attempts

            to geolocate the provided address, and populates a more specific

            location wherever possible in structured_company_hq_location.
          type: string
        imageUrl:
          description: |-
            Optional. A URL that hosts the employer's company logo. If provided,
            the logo image should be squared at 80x80 pixels.

            The url must be a Google Photos or Google Album url.
            Only images in these Google sub-domains are accepted.
          type: string
        keywordSearchableCustomAttributes:
          description: >-
            Optional. A list of keys of filterable Job.custom_attributes, whose

            corresponding `string_values` are used in keyword search. Jobs with

            `string_values` under these specified field keys are returned if any

            of the values matches the search keyword. Custom field values with

            parenthesis, brackets and special symbols might not be properly searchable,

            and those keyword queries need to be surrounded by quotes.
          items:
            type: string
          type: array
        keywordSearchableCustomFields:
          description: >-
            Deprecated. Use keyword_searchable_custom_attributes instead.


            Optional.


            A list of filterable custom fields that should be used in keyword

            search. The jobs of this company are returned if any of these custom

            fields matches the search keyword. Custom field values with parenthesis,

            brackets and special symbols might not be properly searchable, and those

            keyword queries need to be surrounded by quotes.
          items:
            format: int32
            type: integer
          type: array
        name:
          description: >-
            Required during company update.


            The resource name for a company. This is generated by the service when a

            company is created, for example,

            "companies/0000aaaa-1111-bbbb-2222-cccc3333dddd".
          type: string
        structuredCompanyHqLocation:
          $ref: "#/components/schemas/JobLocation"
        suspended:
          description: >-
            Output only. Indicates whether a company is flagged to be suspended
            from public

            availability by the service when job content appears suspicious,

            abusive, or spammy.
          type: boolean
        title:
          description: |-
            Deprecated. Use display_name instead.

            Required.

            The name of the employer to be displayed with the job,
            for example, "Google, LLC.".
          type: string
        website:
          description: >-
            Optional. The URL representing the company's primary web site or
            home page,

            such as, "www.google.com".
          type: string
      type: object
    CompanyInfoSource:
      description: |-
        A resource that represents an external  Google identifier for a company,
        for example, a Google+ business page or a Google Maps business page.
        For unsupported types, use `unknown_type_id`.
      properties:
        freebaseMid:
          description: Optional. The Google's Knowledge Graph value for the employer's
            company.
          type: string
        gplusId:
          description: Optional. The numeric identifier for the employer's Google+ business
            page.
          type: string
        mapsCid:
          description: >-
            Optional. The numeric identifier for the employer's headquarters on
            Google Maps,

            namely, the Google Maps CID (cell id).
          type: string
        unknownTypeId:
          description: Optional. A Google identifier that does not match any of the other
            types.
          type: string
      type: object
    CompensationEntry:
      description: |-
        A compensation entry that represents one component of compensation, such
        as base pay, bonus, or other compensation type.

        Annualization: One compensation entry can be annualized if
        - it contains valid amount or range.
        - and its expected_units_per_year is set or can be derived.
        Its annualized range is determined as (amount or range) times
        expected_units_per_year.
      properties:
        amount:
          $ref: "#/components/schemas/Money"
        description:
          description: |-
            Optional. Compensation description.  For example, could
            indicate equity terms or provide additional context to an estimated
            bonus.
          type: string
        expectedUnitsPerYear:
          description: >-
            Optional. Expected number of units paid each year. If not specified,
            when

            Job.employment_types is FULLTIME, a default value is inferred

            based on unit. Default values:

            - HOURLY: 2080

            - DAILY: 260

            - WEEKLY: 52

            - MONTHLY: 12

            - ANNUAL: 1
          format: double
          type: number
        range:
          $ref: "#/components/schemas/CompensationRange"
        type:
          description: Required. Compensation type.
          enum:
            - COMPENSATION_TYPE_UNSPECIFIED
            - BASE
            - BONUS
            - SIGNING_BONUS
            - EQUITY
            - PROFIT_SHARING
            - COMMISSIONS
            - TIPS
            - OTHER_COMPENSATION_TYPE
          type: string
        unit:
          description: |-
            Optional. Frequency of the specified amount.

            Default is CompensationUnit.COMPENSATION_UNIT_UNSPECIFIED.
          enum:
            - COMPENSATION_UNIT_UNSPECIFIED
            - HOURLY
            - DAILY
            - WEEKLY
            - MONTHLY
            - YEARLY
            - ONE_TIME
            - OTHER_COMPENSATION_UNIT
          type: string
      type: object
    CompensationFilter:
      description: |-
        Input only.

        Filter on job compensation type and amount.
      properties:
        includeJobsWithUnspecifiedCompensationRange:
          description: Optional. Whether to include jobs whose compensation range is
            unspecified.
          type: boolean
        range:
          $ref: "#/components/schemas/CompensationRange"
        type:
          description: Required. Type of filter.
          enum:
            - FILTER_TYPE_UNSPECIFIED
            - UNIT_ONLY
            - UNIT_AND_AMOUNT
            - ANNUALIZED_BASE_AMOUNT
            - ANNUALIZED_TOTAL_AMOUNT
          type: string
        units:
          description: |-
            Required. Specify desired `base compensation entry's`
            CompensationInfo.CompensationUnit.
          items:
            enum:
              - COMPENSATION_UNIT_UNSPECIFIED
              - HOURLY
              - DAILY
              - WEEKLY
              - MONTHLY
              - YEARLY
              - ONE_TIME
              - OTHER_COMPENSATION_UNIT
            type: string
          type: array
      type: object
    CompensationHistogramRequest:
      description: |-
        Input only.

        Compensation based histogram request.
      properties:
        bucketingOption:
          $ref: "#/components/schemas/NumericBucketingOption"
        type:
          description: >-
            Required. Type of the request, representing which field the
            histogramming should be

            performed over. A single request can only specify one histogram of each

            `CompensationHistogramRequestType`.
          enum:
            - COMPENSATION_HISTOGRAM_REQUEST_TYPE_UNSPECIFIED
            - BASE
            - ANNUALIZED_BASE
            - ANNUALIZED_TOTAL
          type: string
      type: object
    CompensationHistogramResult:
      description: |-
        Output only.

        Compensation based histogram result.
      properties:
        result:
          $ref: "#/components/schemas/NumericBucketingResult"
        type:
          description: |-
            Type of the request, corresponding to
            CompensationHistogramRequest.type.
          enum:
            - COMPENSATION_HISTOGRAM_REQUEST_TYPE_UNSPECIFIED
            - BASE
            - ANNUALIZED_BASE
            - ANNUALIZED_TOTAL
          type: string
      type: object
    CompensationInfo:
      description: Job compensation details.
      properties:
        amount:
          $ref: "#/components/schemas/Money"
        annualizedBaseCompensationRange:
          $ref: "#/components/schemas/CompensationRange"
        annualizedTotalCompensationRange:
          $ref: "#/components/schemas/CompensationRange"
        entries:
          description: |-
            Optional. Job compensation information.

            At most one entry can be of type
            CompensationInfo.CompensationType.BASE, which is
            referred as ** base compensation entry ** for the job.
          items:
            $ref: "#/components/schemas/CompensationEntry"
          type: array
        max:
          $ref: "#/components/schemas/Money"
        min:
          $ref: "#/components/schemas/Money"
        type:
          description: |-
            Deprecated. Use entries instead.

            Optional.

            Type of job compensation.
          enum:
            - JOB_COMPENSATION_TYPE_UNSPECIFIED
            - HOURLY
            - SALARY
            - PER_PROJECT
            - COMMISSION
            - OTHER_TYPE
          type: string
      type: object
    CompensationRange:
      description: Compensation range.
      properties:
        max:
          $ref: "#/components/schemas/Money"
        min:
          $ref: "#/components/schemas/Money"
      type: object
    CompleteQueryResponse:
      description: |-
        Output only.

        Response of auto-complete query.
      properties:
        completionResults:
          description: Results of the matching job/company candidates.
          items:
            $ref: "#/components/schemas/CompletionResult"
          type: array
        metadata:
          $ref: "#/components/schemas/ResponseMetadata"
      type: object
    CompletionResult:
      description: |-
        Output only.

        Resource that represents completion results.
      properties:
        imageUrl:
          description: The URL for the company logo if `type=COMPANY_NAME`.
          type: string
        suggestion:
          description: The suggestion for the query.
          type: string
        type:
          description: The completion topic.
          enum:
            - COMPLETION_TYPE_UNSPECIFIED
            - JOB_TITLE
            - COMPANY_NAME
            - COMBINED
          type: string
      type: object
    CreateJobRequest:
      description: |-
        Input only.

        Create job request.
      properties:
        disableStreetAddressResolution:
          description: |-
            Deprecated. Please use processing_options. This flag is ignored if
            processing_options is set.

            Optional.

            If set to `true`, the service does not attempt to resolve a
            more precise address for the job.
          type: boolean
        job:
          $ref: "#/components/schemas/Job"
        processingOptions:
          $ref: "#/components/schemas/JobProcessingOptions"
      type: object
    CustomAttribute:
      description: Custom attribute values that are either filterable or non-filterable.
      properties:
        filterable:
          description: >-
            Optional. If the `filterable` flag is true, custom field values are
            searchable.

            If false, values are not searchable.


            Default is false.
          type: boolean
        longValue:
          description: |-
            Optional but at least one of string_values or long_value must
            be specified.

            This field is used to perform number range search.
            (`EQ`, `GT`, `GE`, `LE`, `LT`) over filterable `long_value`. For
            `long_value`, a value between Long.MIN and Long.MAX is allowed.
          format: int64
          type: string
        stringValues:
          $ref: "#/components/schemas/StringValues"
      type: object
    CustomAttributeHistogramRequest:
      description: |-
        Custom attributes histogram request. An error will be thrown if neither
        string_value_histogram or long_value_histogram_bucketing_option has
        been defined.
      properties:
        key:
          description: >-
            Required. Specifies the custom field key to perform a histogram on.
            If specified

            without `long_value_histogram_bucketing_option`, histogram on string values

            of the given `key` is triggered, otherwise histogram is performed on long

            values.
          type: string
        longValueHistogramBucketingOption:
          $ref: "#/components/schemas/NumericBucketingOption"
        stringValueHistogram:
          description: >-
            Optional. If set to true, the response will include the histogram
            value for

            each key as a string.
          type: boolean
      type: object
    CustomAttributeHistogramResult:
      description: |-
        Output only.

        Custom attribute histogram result.
      properties:
        key:
          description: Stores the key of custom attribute the histogram is performed on.
          type: string
        longValueHistogramResult:
          $ref: "#/components/schemas/NumericBucketingResult"
        stringValueHistogramResult:
          additionalProperties:
            format: int32
            type: integer
          description: >-
            Stores a map from the values of string custom field associated

            with `key` to the number of jobs with that value in this histogram result.
          type: object
      type: object
    CustomField:
      description: Resource that represents the custom data not captured by the standard
        fields.
      properties:
        values:
          description: Optional. The values of the custom data.
          items:
            type: string
          type: array
      type: object
    CustomFieldFilter:
      description: |-
        Input only.

        Custom field filter of the search.
      properties:
        queries:
          description: Required. The query strings for the filter.
          items:
            type: string
          type: array
        type:
          description: |-
            Optional. The type of filter.
            Defaults to FilterType.OR.
          enum:
            - FILTER_TYPE_UNSPECIFIED
            - OR
            - AND
            - NOT
          type: string
      type: object
    Date:
      description: >-
        Represents a whole or partial calendar date, e.g. a birthday. The time
        of day

        and time zone are either specified elsewhere or are not significant. The date

        is relative to the Proleptic Gregorian Calendar. This can represent:


        * A full date, with non-zero year, month and day values

        * A month and day value, with a zero year, e.g. an anniversary

        * A year on its own, with zero month and day values

        * A year and month value, with a zero day, e.g. a credit card expiration date


        Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.
      properties:
        day:
          description: >-
            Day of month. Must be from 1 to 31 and valid for the year and month,
            or 0

            if specifying a year by itself or a year and month where the day is not

            significant.
          format: int32
          type: integer
        month:
          description: >-
            Month of year. Must be from 1 to 12, or 0 if specifying a year
            without a

            month and day.
          format: int32
          type: integer
        year:
          description: >-
            Year of date. Must be from 1 to 9999, or 0 if specifying a date
            without

            a year.
          format: int32
          type: integer
      type: object
    DeleteJobsByFilterRequest:
      description: >-
        Deprecated. Use BatchDeleteJobsRequest instead.


        Input only.


        Delete job by filter request.


        The job typically becomes unsearchable within 10 seconds, but it may take

        up to 5 minutes.
      properties:
        disableFastProcess:
          description: >-
            Optional. If set to true, this call waits for all processing steps
            to complete

            before the job is cleaned up. Otherwise, the call returns while some

            steps are still taking place asynchronously, hence faster.
          type: boolean
        filter:
          $ref: "#/components/schemas/Filter"
      type: object
    DeviceInfo:
      description: >-
        Input only.


        Device information collected from the job seeker, candidate, or

        other entity conducting the job search. Providing this information improves

        the quality of the search results across devices.
      properties:
        deviceType:
          description: Optional. Type of the device.
          enum:
            - DEVICE_TYPE_UNSPECIFIED
            - WEB
            - MOBILE_WEB
            - ANDROID
            - IOS
            - BOT
            - OTHER
          type: string
        id:
          description: >-
            Optional. A device-specific ID. The ID must be a unique identifier
            that distinguishes

            the device from other devices.
          type: string
      type: object
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated

        empty messages in your APIs. A typical example is to use it as the request

        or the response type of an API method. For instance:

            service Foo {
              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
            }

        The JSON representation for `Empty` is empty JSON object `{}`.
      properties: {}
      type: object
    ExtendedCompensationFilter:
      description: |-
        Deprecated. Always use CompensationFilter.

        Input only.

        Filter on job compensation type and amount.
      properties:
        compensationRange:
          $ref: "#/components/schemas/ExtendedCompensationInfoCompensationRange"
        compensationUnits:
          description: |-
            Required. Specify desired `base compensation entry's`
            ExtendedCompensationInfo.CompensationUnit.
          items:
            enum:
              - EXTENDED_COMPENSATION_UNIT_UNSPECIFIED
              - HOURLY
              - DAILY
              - WEEKLY
              - MONTHLY
              - YEARLY
              - ONE_TIME
              - OTHER_COMPENSATION_UNIT
            type: string
          type: array
        currency:
          description: >-
            Optional. Specify currency in 3-letter

            [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) format. If

            unspecified, jobs are returned regardless of currency.
          type: string
        includeJobWithUnspecifiedCompensationRange:
          description: Optional. Whether to include jobs whose compensation range is
            unspecified.
          type: boolean
        type:
          description: Required. Type of filter.
          enum:
            - FILTER_TYPE_UNSPECIFIED
            - UNIT_ONLY
            - UNIT_AND_AMOUNT
            - ANNUALIZED_BASE_AMOUNT
            - ANNUALIZED_TOTAL_AMOUNT
          type: string
      type: object
    ExtendedCompensationInfo:
      description: |-
        Deprecated. Use CompensationInfo.

        Describes job compensation.
      properties:
        annualizedBaseCompensationRange:
          $ref: "#/components/schemas/ExtendedCompensationInfoCompensationRange"
        annualizedBaseCompensationUnspecified:
          description: >-
            Output only. Indicates annualized base compensation range cannot be
            derived, due to

            the job's base compensation entry cannot be annualized.

            See CompensationEntry for explanation on annualization and base

            compensation entry.
          type: boolean
        annualizedTotalCompensationRange:
          $ref: "#/components/schemas/ExtendedCompensationInfoCompensationRange"
        annualizedTotalCompensationUnspecified:
          description: >-
            Output only. Indicates annualized total compensation range cannot be
            derived, due to

            the job's all CompensationEntry cannot be annualized.

            See CompensationEntry for explanation on annualization and base

            compensation entry.
          type: boolean
        currency:
          description: >-
            Optional. A 3-letter [ISO
            4217](https://www.iso.org/iso-4217-currency-codes.html)

            currency code.
          type: string
        entries:
          description: |-
            Optional. Job compensation information.

            At most one entry can be of type
            ExtendedCompensationInfo.CompensationType.BASE, which is
            referred as ** base compensation entry ** for the job.
          items:
            $ref: "#/components/schemas/ExtendedCompensationInfoCompensationEntry"
          type: array
      type: object
    ExtendedCompensationInfoCompensationEntry:
      description: |-
        Deprecated. See CompensationInfo.

        A compensation entry that represents one component of compensation, such
        as base pay, bonus, or other compensation type.

        Annualization: One compensation entry can be annualized if
        - it contains valid amount or range.
        - and its expected_units_per_year is set or can be derived.
        Its annualized range is determined as (amount or range) times
        expected_units_per_year.
      properties:
        amount:
          $ref: "#/components/schemas/ExtendedCompensationInfoDecimal"
        description:
          description: Optional. Compensation description.
          type: string
        expectedUnitsPerYear:
          $ref: "#/components/schemas/ExtendedCompensationInfoDecimal"
        range:
          $ref: "#/components/schemas/ExtendedCompensationInfoCompensationRange"
        type:
          description: Required. Compensation type.
          enum:
            - EXTENDED_COMPENSATION_TYPE_UNSPECIFIED
            - BASE
            - BONUS
            - SIGNING_BONUS
            - EQUITY
            - PROFIT_SHARING
            - COMMISSIONS
            - TIPS
            - OTHER_COMPENSATION_TYPE
          type: string
        unit:
          description: |-
            Optional. Frequency of the specified amount.

            Default is CompensationUnit.COMPENSATION_UNIT_UNSPECIFIED.
          enum:
            - EXTENDED_COMPENSATION_UNIT_UNSPECIFIED
            - HOURLY
            - DAILY
            - WEEKLY
            - MONTHLY
            - YEARLY
            - ONE_TIME
            - OTHER_COMPENSATION_UNIT
          type: string
        unspecified:
          description: Optional. Indicates compensation amount and range are unset.
          type: boolean
      type: object
    ExtendedCompensationInfoCompensationRange:
      description: |-
        Deprecated. See CompensationInfo.

        Compensation range.
      properties:
        max:
          $ref: "#/components/schemas/ExtendedCompensationInfoDecimal"
        min:
          $ref: "#/components/schemas/ExtendedCompensationInfoDecimal"
      type: object
    ExtendedCompensationInfoDecimal:
      description: |-
        Deprecated. See CompensationInfo.

        Decimal number.
      properties:
        micros:
          description: >-
            Micro (10^-6) units.

            The value must be between -999,999 and +999,999 inclusive.

            If `units` is positive, `micros` must be positive or zero.

            If `units` is zero, `micros` can be positive, zero, or negative.

            If `units` is negative, `micros` must be negative or zero.

            For example -1.75 is represented as `units`=-1 and `micros`=-750,000.
          format: int32
          type: integer
        units:
          description: Whole units.
          format: int64
          type: string
      type: object
    Filter:
      description: |-
        Deprecated. Use BatchDeleteJobsRequest instead.

        Input only.

        Filter for jobs to be deleted.
      properties:
        requisitionId:
          description: >-
            Required. The requisition ID (or posting ID) assigned by the client
            to identify a

            job. This is intended for client identification and tracking of

            listings.

            name takes precedence over this field

            The maximum number of allowed characters is 225.
          type: string
      type: object
    GetHistogramRequest:
      description: |-
        Deprecated. Use SearchJobsRequest.histogram_facets instead to make
        a single call with both search and histogram.

        Input only.

        A request for the `GetHistogram` method.
      properties:
        allowBroadening:
          description: >-
            Optional. Controls whether to broaden the search to avoid too few
            results for a

            given query in instances where a search has sparse results. Results from a

            broadened query is a superset of the results from the original query.


            Defaults to false.
          type: boolean
        filters:
          $ref: "#/components/schemas/JobFilters"
        query:
          $ref: "#/components/schemas/JobQuery"
        requestMetadata:
          $ref: "#/components/schemas/RequestMetadata"
        searchTypes:
          description: >-
            Required. A list of facets that specify the histogram data to be
            calculated

            against and returned.


            Histogram response times can be slow, and counts

            can be approximations. This call may be temporarily or permanently removed

            prior to the production release of Cloud Talent Solution.
          items:
            enum:
              - JOB_FIELD_UNSPECIFIED
              - COMPANY_ID
              - EMPLOYMENT_TYPE
              - COMPANY_SIZE
              - DATE_PUBLISHED
              - CUSTOM_FIELD_1
              - CUSTOM_FIELD_2
              - CUSTOM_FIELD_3
              - CUSTOM_FIELD_4
              - CUSTOM_FIELD_5
              - CUSTOM_FIELD_6
              - CUSTOM_FIELD_7
              - CUSTOM_FIELD_8
              - CUSTOM_FIELD_9
              - CUSTOM_FIELD_10
              - CUSTOM_FIELD_11
              - CUSTOM_FIELD_12
              - CUSTOM_FIELD_13
              - CUSTOM_FIELD_14
              - CUSTOM_FIELD_15
              - CUSTOM_FIELD_16
              - CUSTOM_FIELD_17
              - CUSTOM_FIELD_18
              - CUSTOM_FIELD_19
              - CUSTOM_FIELD_20
              - EDUCATION_LEVEL
              - EXPERIENCE_LEVEL
              - ADMIN1
              - COUNTRY
              - CITY
              - LOCALE
              - LANGUAGE
              - CATEGORY
              - CITY_COORDINATE
              - ADMIN1_COUNTRY
              - COMPANY_TITLE
              - COMPANY_DISPLAY_NAME
              - BASE_COMPENSATION_UNIT
            type: string
          type: array
      type: object
    GetHistogramResponse:
      description: |-
        Deprecated. Use SearchJobsRequest.histogram_facets instead to make
        a single call with both search and histogram.

        Output only.

        The response of the GetHistogram method.
      properties:
        metadata:
          $ref: "#/components/schemas/ResponseMetadata"
        results:
          description: The Histogram results.
          items:
            $ref: "#/components/schemas/HistogramResult"
          type: array
      type: object
    HistogramFacets:
      description: |-
        Input only.

        Histogram facets to be specified in SearchJobsRequest.
      properties:
        compensationHistogramFacets:
          description: >-
            Optional. Specifies compensation field-based histogram requests.

            Duplicate values of CompensationHistogramRequest.type are not allowed.
          items:
            $ref: "#/components/schemas/CompensationHistogramRequest"
          type: array
        customAttributeHistogramFacets:
          description: |-
            Optional. Specifies the custom attributes histogram requests.
            Duplicate values of CustomAttributeHistogramRequest.key are not
            allowed.
          items:
            $ref: "#/components/schemas/CustomAttributeHistogramRequest"
          type: array
        simpleHistogramFacets:
          description: >-
            Optional. Specifies the simple type of histogram facets, for
            example,

            `COMPANY_SIZE`, `EMPLOYMENT_TYPE` etc. This field is equivalent to

            GetHistogramRequest.
          items:
            enum:
              - JOB_FIELD_UNSPECIFIED
              - COMPANY_ID
              - EMPLOYMENT_TYPE
              - COMPANY_SIZE
              - DATE_PUBLISHED
              - CUSTOM_FIELD_1
              - CUSTOM_FIELD_2
              - CUSTOM_FIELD_3
              - CUSTOM_FIELD_4
              - CUSTOM_FIELD_5
              - CUSTOM_FIELD_6
              - CUSTOM_FIELD_7
              - CUSTOM_FIELD_8
              - CUSTOM_FIELD_9
              - CUSTOM_FIELD_10
              - CUSTOM_FIELD_11
              - CUSTOM_FIELD_12
              - CUSTOM_FIELD_13
              - CUSTOM_FIELD_14
              - CUSTOM_FIELD_15
              - CUSTOM_FIELD_16
              - CUSTOM_FIELD_17
              - CUSTOM_FIELD_18
              - CUSTOM_FIELD_19
              - CUSTOM_FIELD_20
              - EDUCATION_LEVEL
              - EXPERIENCE_LEVEL
              - ADMIN1
              - COUNTRY
              - CITY
              - LOCALE
              - LANGUAGE
              - CATEGORY
              - CITY_COORDINATE
              - ADMIN1_COUNTRY
              - COMPANY_TITLE
              - COMPANY_DISPLAY_NAME
              - BASE_COMPENSATION_UNIT
            type: string
          type: array
      type: object
    HistogramResult:
      description: >-
        Output only.


        Result of a histogram call. The response contains the histogram map for the

        search type specified by HistogramResult.field.

        The response is a map of each filter value to the corresponding count of

        jobs for that filter.
      properties:
        searchType:
          description: The Histogram search filters.
          enum:
            - JOB_FIELD_UNSPECIFIED
            - COMPANY_ID
            - EMPLOYMENT_TYPE
            - COMPANY_SIZE
            - DATE_PUBLISHED
            - CUSTOM_FIELD_1
            - CUSTOM_FIELD_2
            - CUSTOM_FIELD_3
            - CUSTOM_FIELD_4
            - CUSTOM_FIELD_5
            - CUSTOM_FIELD_6
            - CUSTOM_FIELD_7
            - CUSTOM_FIELD_8
            - CUSTOM_FIELD_9
            - CUSTOM_FIELD_10
            - CUSTOM_FIELD_11
            - CUSTOM_FIELD_12
            - CUSTOM_FIELD_13
            - CUSTOM_FIELD_14
            - CUSTOM_FIELD_15
            - CUSTOM_FIELD_16
            - CUSTOM_FIELD_17
            - CUSTOM_FIELD_18
            - CUSTOM_FIELD_19
            - CUSTOM_FIELD_20
            - EDUCATION_LEVEL
            - EXPERIENCE_LEVEL
            - ADMIN1
            - COUNTRY
            - CITY
            - LOCALE
            - LANGUAGE
            - CATEGORY
            - CITY_COORDINATE
            - ADMIN1_COUNTRY
            - COMPANY_TITLE
            - COMPANY_DISPLAY_NAME
            - BASE_COMPENSATION_UNIT
          type: string
        values:
          additionalProperties:
            format: int32
            type: integer
          description: |-
            A map from the values of field to the number of jobs with that value
            in this search result.

            Key: search type (filter names, such as the companyName).

            Values: the count of jobs that match the filter for this search.
          type: object
      type: object
    HistogramResults:
      description: |-
        Output only.

        Histogram results that matches HistogramFacets specified in
        SearchJobsRequest.
      properties:
        compensationHistogramResults:
          description: |-
            Specifies compensation field-based histogram results that matches
            HistogramFacets.compensation_histogram_requests.
          items:
            $ref: "#/components/schemas/CompensationHistogramResult"
          type: array
        customAttributeHistogramResults:
          description: |-
            Specifies histogram results for custom attributes that
            matches HistogramFacets.custom_attribute_histogram_facets.
          items:
            $ref: "#/components/schemas/CustomAttributeHistogramResult"
          type: array
        simpleHistogramResults:
          description: |-
            Specifies histogram results that matches
            HistogramFacets.simple_histogram_facets.
          items:
            $ref: "#/components/schemas/HistogramResult"
          type: array
      type: object
    Job:
      description: >-
        A Job resource represents a job posting (also referred to as a "job
        listing"

        or "job requisition"). A job belongs to a Company, which is the hiring

        entity responsible for the job.
      properties:
        applicationEmailList:
          description: |-
            Optional but at least one of application_urls,
            application_email_list or application_instruction must be
            specified.

            Use this field to specify email address(es) to which resumes or
            applications can be sent.

            The maximum number of allowed characters is 255.
          items:
            type: string
          type: array
        applicationInstruction:
          description: >-
            Optional but at least one of application_urls,

            application_email_list or application_instruction must be

            specified.


            Use this field to provide instructions, such as "Mail your application

            to ...", that a candidate can follow to apply for the job.


            This field accepts and sanitizes HTML input, and also accepts

            bold, italic, ordered list, and unordered list markup tags.


            The maximum number of allowed characters is 3,000.
          type: string
        applicationUrls:
          description: >-
            Optional but at least one of application_urls,

            application_email_list or application_instruction must be

            specified.


            Use this URL field to direct an applicant to a website, for example to

            link to an online application form.


            The maximum number of allowed characters is 2,000.
          items:
            type: string
          type: array
        benefits:
          description: Optional. The benefits included with the job.
          items:
            enum:
              - JOB_BENEFIT_TYPE_UNSPECIFIED
              - CHILD_CARE
              - DENTAL
              - DOMESTIC_PARTNER
              - FLEXIBLE_HOURS
              - MEDICAL
              - LIFE_INSURANCE
              - PARENTAL_LEAVE
              - RETIREMENT_PLAN
              - SICK_DAYS
              - TELECOMMUTE
              - VACATION
              - VISION
            type: string
          type: array
        companyDisplayName:
          description: Output only. The name of the company listing the job.
          type: string
        companyName:
          description: |-
            Optional but one of company_name or distributor_company_id must be
            provided.

            The resource name of the company listing the job, such as
            /companies/foo. This field takes precedence over the
            distributor-assigned company identifier, distributor_company_id.
          type: string
        companyTitle:
          description: |-
            Deprecated. Use company_display_name instead.

            Output only.

            The name of the company listing the job.
          type: string
        compensationInfo:
          $ref: "#/components/schemas/CompensationInfo"
        createTime:
          description: Output only. The timestamp when this job was created.
          format: google-datetime
          type: string
        customAttributes:
          additionalProperties:
            $ref: "#/components/schemas/CustomAttribute"
          description: >-
            Optional. A map of fields to hold both filterable and non-filterable
            custom job

            attributes that are not covered by the provided structured fields.


            This field is a more general combination of the deprecated id-based

            filterable_custom_fields and string-based

            non_filterable_custom_fields.


            The keys of the map are strings up to 64 bytes and must match the

            pattern: a-zA-Z*.


            At most 100 filterable and at most 100 unfilterable keys are supported.

            For filterable `string_values`, across all keys at most 200 values are

            allowed, with each string no more than 255 characters. For unfilterable

            `string_values`, the maximum total size of `string_values` across all keys

            is 50KB.
          type: object
        department:
          description: >-
            Optional. The department or functional area within the company with
            the open

            position.


            The maximum number of allowed characters is 255.
          type: string
        description:
          description: >-
            Required. The description of the job, which typically includes a
            multi-paragraph

            description of the company and related information. Separate fields are

            provided on the job object for responsibilities,

            qualifications, and other job characteristics. Use of

            these separate job fields is recommended.


            This field accepts and sanitizes HTML input, and also accepts

            bold, italic, ordered list, and unordered list markup tags.


            The maximum number of allowed characters is 100,000.
          type: string
        distributorCompanyId:
          description: >-
            Optional but one of company_name or distributor_company_id must be

            provided.


            A unique company identifier used by job distributors to identify an

            employer's company entity. company_name takes precedence over

            this field, and is the recommended field to use to identify companies.


            The maximum number of allowed characters is 255.
          type: string
        educationLevels:
          description: |-
            Optional. The desired education level for the job, such as
            "Bachelors", "Masters", "Doctorate".
          items:
            enum:
              - EDUCATION_LEVEL_UNSPECIFIED
              - HIGH_SCHOOL
              - ASSOCIATE
              - BACHELORS
              - MASTERS
              - DOCTORATE
              - NO_DEGREE_REQUIRED
            type: string
          type: array
        employmentTypes:
          description: |-
            Optional. The employment type(s) of a job, for example,
            full time or
            part time.
          items:
            enum:
              - EMPLOYMENT_TYPE_UNSPECIFIED
              - FULL_TIME
              - PART_TIME
              - CONTRACTOR
              - TEMPORARY
              - INTERN
              - VOLUNTEER
              - PER_DIEM
              - CONTRACT_TO_HIRE
              - FLY_IN_FLY_OUT
              - OTHER
            type: string
          type: array
        endDate:
          $ref: "#/components/schemas/Date"
        expireTime:
          description: >-
            Optional but strongly recommended for the best service

            experience.


            The expiration timestamp of the job. After this timestamp, the

            job is marked as expired, and it no longer appears in search results. The

            expired job can't be deleted or listed by the DeleteJob and

            ListJobs APIs, but it can be retrieved with the GetJob API or

            updated with the UpdateJob API. An expired job can be updated and

            opened again by using a future expiration timestamp. Updating an expired

            job fails if there is another existing open job with same

            requisition_id, company_name and language_code.


            The expired jobs are retained in our system for 90 days. However, the

            overall expired job count cannot exceed 3 times the maximum of open jobs

            count over the past week, otherwise jobs with earlier expire time are

            cleaned first. Expired jobs are no longer accessible after they are cleaned

            out.

            The format of this field is RFC 3339 date strings. Example:

            2000-01-01T00:00:00.999999999Z

            See

            [https://www.ietf.org/rfc/rfc3339.txt](https://www.ietf.org/rfc/rfc3339.txt).


            A valid date range is between 1970-01-01T00:00:00.0Z and

            2100-12-31T23:59:59.999Z. Invalid dates are ignored and treated as expire

            time not provided.


            If this value is not provided at the time of job creation or is invalid,

            the job posting expires after 30 days from the job's creation time. For

            example, if the job was created on 2017/01/01 13:00AM UTC with an

            unspecified expiration date, the job expires after 2017/01/31 13:00AM UTC.


            If this value is not provided but expiry_date is, expiry_date is

            used.


            If this value is not provided on job update, it depends on the field masks

            set by UpdateJobRequest.update_job_fields. If the field masks include

            expiry_time, or the masks are empty meaning that every field is

            updated, the job posting expires after 30 days from the job's last

            update time. Otherwise the expiration date isn't updated.
          format: google-datetime
          type: string
        expiryDate:
          $ref: "#/components/schemas/Date"
        extendedCompensationInfo:
          $ref: "#/components/schemas/ExtendedCompensationInfo"
        filterableCustomFields:
          additionalProperties:
            $ref: "#/components/schemas/CustomField"
          description: >-
            Deprecated. Use custom_attributes instead.


            Optional.


            A map of fields to hold filterable custom job attributes not captured by

            the standard fields such as job_title, company_name, or

            level. These custom fields store arbitrary

            string values, and can be used for purposes not covered by

            the structured fields. For the best search experience, use of the

            structured rather than custom fields is recommended.


            Data stored in these custom fields fields are indexed and

            searched against by keyword searches (see

            SearchJobsRequest.custom_field_filters][]).


            The map key must be a number between 1-20. If an invalid key is

            provided on job create or update, an error is returned.
          type: object
        incentives:
          description: |-
            Optional. A description of bonus, commission, and other compensation
            incentives associated with the job not including salary or pay.

            The maximum number of allowed characters is 10,000.
          type: string
        jobLocations:
          description: Output only. Structured locations of the job, resolved from
            locations.
          items:
            $ref: "#/components/schemas/JobLocation"
          type: array
        jobTitle:
          description: |-
            Required. The title of the job, such as "Software Engineer"

            The maximum number of allowed characters is 500.
          type: string
        languageCode:
          description: >-
            Optional. The language of the posting. This field is distinct from

            any requirements for fluency that are associated with the job.


            Language codes must be in BCP-47 format, such as "en-US" or "sr-Latn".

            For more information, see

            [Tags for Identifying Languages](https://tools.ietf.org/html/bcp47){:

            class="external" target="_blank" }.


            If this field is unspecified and Job.description is present, detected

            language code based on Job.description is assigned, otherwise

            defaults to 'en_US'.
          type: string
        level:
          description: Optional. The experience level associated with the job, such as
            "Entry Level".
          enum:
            - JOB_LEVEL_UNSPECIFIED
            - ENTRY_LEVEL
            - EXPERIENCED
            - MANAGER
            - DIRECTOR
            - EXECUTIVE
          type: string
        locations:
          description: >-
            Optional but strongly recommended for the best service experience.


            Location(s) where the emploeyer is looking to hire for this job posting.


            Specifying the full street address(es) of the hiring location enables

            better API results, especially job searches by commute time.


            At most 50 locations are allowed for best search performance. If a job has

            more locations, it is suggested to split it into multiple jobs with unique

            requisition_ids (e.g. 'ReqA' becomes 'ReqA-1', 'ReqA-2', etc.) as

            multiple jobs with the same requisition_id, company_name and

            language_code are not allowed. If the original requisition_id must

            be preserved, a custom field should be used for storage. It is also

            suggested to group the locations that close to each other in the same job

            for better search experience.


            The maximum number of allowed characters is 500.
          items:
            type: string
          type: array
        name:
          description: >-
            Required during job update.


            Resource name assigned to a job by the API, for example, "/jobs/foo". Use

            of this field in job queries and API calls is preferred over the use of

            requisition_id since this value is unique.
          type: string
        promotionValue:
          description: >-
            Optional. A promotion value of the job, as determined by the client.

            The value determines the sort order of the jobs returned when searching for

            jobs using the featured jobs search call, with higher promotional values

            being returned first and ties being resolved by relevance sort. Only the

            jobs with a promotionValue >0 are returned in a FEATURED_JOB_SEARCH.


            Default value is 0, and negative values are treated as 0.
          format: int32
          type: integer
        publishDate:
          $ref: "#/components/schemas/Date"
        qualifications:
          description: >-
            Optional. A description of the qualifications required to perform
            the

            job. The use of this field is recommended

            as an alternative to using the more general description field.


            This field accepts and sanitizes HTML input, and also accepts

            bold, italic, ordered list, and unordered list markup tags.


            The maximum number of allowed characters is 10,000.
          type: string
        referenceUrl:
          description: Output only. The URL of a web page that displays job details.
          type: string
        region:
          description: >-
            Optional. The job Region (for example, state, country) throughout
            which the job

            is available. If this field is set, a

            LocationFilter in a search query within the job region

            finds this job if an exact location match is not specified.

            If this field is set, setting job locations

            to the same location level as this field is strongly recommended.
          enum:
            - REGION_UNSPECIFIED
            - STATE_WIDE
            - NATION_WIDE
            - TELECOMMUTE
          type: string
        requisitionId:
          description: >-
            Required. The requisition ID, also referred to as the posting ID,
            assigned by the

            client to identify a job. This field is intended to be used by clients

            for client identification and tracking of listings. A job is not allowed

            to be created if there is another job with the same requisition_id,

            company_name and language_code.


            The maximum number of allowed characters is 255.
          type: string
        responsibilities:
          description: >-
            Optional. A description of job responsibilities. The use of this
            field is

            recommended as an alternative to using the more general description

            field.


            This field accepts and sanitizes HTML input, and also accepts

            bold, italic, ordered list, and unordered list markup tags.


            The maximum number of allowed characters is 10,000.
          type: string
        startDate:
          $ref: "#/components/schemas/Date"
        unindexedCustomFields:
          additionalProperties:
            $ref: "#/components/schemas/CustomField"
          description: >-
            Deprecated. Use custom_attributes instead.


            Optional.


            A map of fields to hold non-filterable custom job attributes, similar to

            filterable_custom_fields. These fields are distinct in that the data

            in these fields are not indexed. Therefore, the client cannot search

            against them, nor can the client use them to list jobs.


            The key of the map can be any valid string.
          type: object
        updateTime:
          description: Output only. The timestamp when this job was last updated.
          format: google-datetime
          type: string
        visibility:
          description: |-
            Optional. The visibility of the job.
            Defaults to JobVisibility.PRIVATE if not specified.
            Currently only JobVisibility.PRIVATE is supported.
          enum:
            - JOB_VISIBILITY_UNSPECIFIED
            - PRIVATE
            - GOOGLE
            - PUBLIC
          type: string
      type: object
    JobFilters:
      description: |-
        Input only.

        Deprecated. Use JobQuery instead.

        The filters required to perform a search query or histogram.
      properties:
        categories:
          description: >-
            Optional. The category filter specifies the categories of jobs to
            search against.

            See Category for more information.


            If a value is not specified, jobs from any category are searched against.


            If multiple values are specified, jobs from any of the specified

            categories are searched against.
          items:
            enum:
              - JOB_CATEGORY_UNSPECIFIED
              - ACCOUNTING_AND_FINANCE
              - ADMINISTRATIVE_AND_OFFICE
              - ADVERTISING_AND_MARKETING
              - ANIMAL_CARE
              - ART_FASHION_AND_DESIGN
              - BUSINESS_OPERATIONS
              - CLEANING_AND_FACILITIES
              - COMPUTER_AND_IT
              - CONSTRUCTION
              - CUSTOMER_SERVICE
              - EDUCATION
              - ENTERTAINMENT_AND_TRAVEL
              - FARMING_AND_OUTDOORS
              - HEALTHCARE
              - HUMAN_RESOURCES
              - INSTALLATION_MAINTENANCE_AND_REPAIR
              - LEGAL
              - MANAGEMENT
              - MANUFACTURING_AND_WAREHOUSE
              - MEDIA_COMMUNICATIONS_AND_WRITING
              - OIL_GAS_AND_MINING
              - PERSONAL_CARE_AND_SERVICES
              - PROTECTIVE_SERVICES
              - REAL_ESTATE
              - RESTAURANT_AND_HOSPITALITY
              - SALES_AND_RETAIL
              - SCIENCE_AND_ENGINEERING
              - SOCIAL_SERVICES_AND_NON_PROFIT
              - SPORTS_FITNESS_AND_RECREATION
              - TRANSPORTATION_AND_LOGISTICS
            type: string
          type: array
        commuteFilter:
          $ref: "#/components/schemas/CommutePreference"
        companyNames:
          description: >-
            Optional. The company names filter specifies the company entities to
            search

            against.


            If a value is not specified, jobs are searched for against all companies.


            If multiple values are specified, jobs are searched against the

            specified companies.


            At most 20 company filters are allowed.
          items:
            type: string
          type: array
        companyTitles:
          description: >-
            Optional. This filter specifies the exact company titles

            of jobs to search against.


            If a value is not specified, jobs within the search results can be

            associated with any company.


            If multiple values are specified, jobs within the search results may be

            associated with any of the specified companies.


            At most 20 company title filters are allowed.
          items:
            type: string
          type: array
        compensationFilter:
          $ref: "#/components/schemas/CompensationFilter"
        customAttributeFilter:
          description: >-
            Optional. This filter specifies a structured syntax to match against
            the

            Job.custom_attributes that are marked as `filterable`.


            The syntax for this expression is a subset of Google SQL syntax.


            Supported operators are: =, !=, <, <=, >, >= where the left of the operator

            is a custom field key and the right of the operator is a number or string

            (surrounded by quotes) value.


            Supported functions are LOWER(<field_name>) to

            perform case insensitive match and EMPTY(<field_name>) to filter on the

            existence of a key.


            Boolean expressions (AND/OR/NOT) are supported up to 3 levels of

            nesting (For example, "((A AND B AND C) OR NOT D) AND E"), and there can

            be a maximum of 100 comparisons/functions in the expression. The expression

            must be < 3000 bytes in length.


            Sample Query:

            (key1 = "TEST" OR LOWER(key1)="test" OR NOT EMPTY(key1)) AND key2 > 100
          type: string
        customFieldFilters:
          additionalProperties:
            $ref: "#/components/schemas/CustomFieldFilter"
          description: >-
            Deprecated. Use custom_attribute_filter instead.


            Optional.


            This filter specifies searching against

            custom field values. See Job.filterable_custom_fields for information.

            The key value specifies a number between 1-20 (the service

            supports 20 custom fields) corresponding to the desired custom field map

            value. If an invalid key is provided or specified together with

            custom_attribute_filter, an error is thrown.
          type: object
        disableSpellCheck:
          description: |-
            Optional. This flag controls the spell-check feature. If false, the
            service attempts to correct a misspelled query,
            for example, "enginee" is corrected to "engineer".

            Defaults to false: a spell check is performed.
          type: boolean
        employmentTypes:
          description: >-
            Optional. The employment type filter specifies the employment type
            of jobs to

            search against, such as EmploymentType.FULL_TIME.


            If a value is not specified, jobs in the search results include any

            employment type.


            If multiple values are specified, jobs in the search results include any

            of the specified employment types.
          items:
            enum:
              - EMPLOYMENT_TYPE_UNSPECIFIED
              - FULL_TIME
              - PART_TIME
              - CONTRACTOR
              - TEMPORARY
              - INTERN
              - VOLUNTEER
              - PER_DIEM
              - CONTRACT_TO_HIRE
              - FLY_IN_FLY_OUT
              - OTHER
            type: string
          type: array
        extendedCompensationFilter:
          $ref: "#/components/schemas/ExtendedCompensationFilter"
        languageCodes:
          description: >-
            Optional. This filter specifies the locale of jobs to search
            against,

            for example, "en-US".


            If a value is not specified, the search results may contain jobs in any

            locale.



            Language codes should be in BCP-47 format, for example, "en-US" or

            "sr-Latn". For more information, see [Tags for Identifying

            Languages](https://tools.ietf.org/html/bcp47).


            At most 10 language code filters are allowed.
          items:
            type: string
          type: array
        locationFilters:
          description: >-
            Optional. The location filter specifies geo-regions containing the
            jobs to

            search against. See LocationFilter for more information.


            If a location value is not specified, jobs are retrieved

            from all locations.


            If multiple values are specified, jobs are retrieved from any of the

            specified locations. If different values are specified for the

            LocationFilter.distance_in_miles parameter, the maximum provided

            distance is used for all locations.


            At most 5 location filters are allowed.
          items:
            $ref: "#/components/schemas/LocationFilter"
          type: array
        publishDateRange:
          description: >-
            Optional. Jobs published within a range specified by this filter are
            searched

            against, for example, DateRange.PAST_MONTH. If a value is not

            specified, all open jobs are searched against regardless of the

            date they were published.
          enum:
            - DATE_RANGE_UNSPECIFIED
            - PAST_24_HOURS
            - PAST_WEEK
            - PAST_MONTH
            - PAST_YEAR
            - PAST_3_DAYS
          type: string
        query:
          description: >-
            Optional. The query filter contains the keywords that match against
            the job

            title, description, and location fields.


            The maximum query size is 255 bytes/characters.
          type: string
        tenantJobOnly:
          description: >-
            Deprecated. Do not use this field.


            This flag controls whether the job search should be restricted to jobs

            owned by the current user.


            Defaults to false where all jobs accessible to the

            user are searched against.
          type: boolean
      type: object
    JobLocation:
      description: |-
        Output only.

        A resource that represents a location with full geographic
        information.
      properties:
        latLng:
          $ref: "#/components/schemas/LatLng"
        locationType:
          description: >-
            The type of a location, which corresponds to the address lines field
            of

            PostalAddress. For example, "Downtown, Atlanta, GA, USA" has a type of

            LocationType#NEIGHBORHOOD, and "Kansas City, KS, USA" has a type of

            LocationType#LOCALITY.
          enum:
            - LOCATION_TYPE_UNSPECIFIED
            - COUNTRY
            - ADMINISTRATIVE_AREA
            - SUB_ADMINISTRATIVE_AREA
            - LOCALITY
            - POSTAL_CODE
            - SUB_LOCALITY
            - SUB_LOCALITY_1
            - SUB_LOCALITY_2
            - NEIGHBORHOOD
            - STREET_ADDRESS
          type: string
        postalAddress:
          $ref: "#/components/schemas/PostalAddress"
        radiusMeters:
          description: >-
            Radius in meters of the job location. This value is derived from the

            location bounding box in which a circle with the specified radius

            centered from LatLng coves the area associated with the job location.

            For example, currently, "Mountain View, CA, USA" has a radius of

            7885.79 meters.
          format: double
          type: number
      type: object
    JobProcessingOptions:
      description: |-
        Input only.

        Options for job processing.
      properties:
        disableStreetAddressResolution:
          description: >-
            Optional. If set to `true`, the service does not attempt to resolve
            a

            more precise address for the job.
          type: boolean
        htmlSanitization:
          description: >-
            Optional. Option for job HTML content sanitization. Applied fields
            are:


            * description

            * applicationInstruction

            * incentives

            * qualifications

            * responsibilities


            HTML tags in these fields may be stripped if sanitiazation is not disabled.


            Defaults to HtmlSanitization.SIMPLE_FORMATTING_ONLY.
          enum:
            - HTML_SANITIZATION_UNSPECIFIED
            - HTML_SANITIZATION_DISABLED
            - SIMPLE_FORMATTING_ONLY
          type: string
      type: object
    JobQuery:
      description: |-
        Input only.

        The query required to perform a search query or histogram.
      properties:
        categories:
          description: >-
            Optional. The category filter specifies the categories of jobs to
            search against.

            See Category for more information.


            If a value is not specified, jobs from any category are searched against.


            If multiple values are specified, jobs from any of the specified

            categories are searched against.
          items:
            enum:
              - JOB_CATEGORY_UNSPECIFIED
              - ACCOUNTING_AND_FINANCE
              - ADMINISTRATIVE_AND_OFFICE
              - ADVERTISING_AND_MARKETING
              - ANIMAL_CARE
              - ART_FASHION_AND_DESIGN
              - BUSINESS_OPERATIONS
              - CLEANING_AND_FACILITIES
              - COMPUTER_AND_IT
              - CONSTRUCTION
              - CUSTOMER_SERVICE
              - EDUCATION
              - ENTERTAINMENT_AND_TRAVEL
              - FARMING_AND_OUTDOORS
              - HEALTHCARE
              - HUMAN_RESOURCES
              - INSTALLATION_MAINTENANCE_AND_REPAIR
              - LEGAL
              - MANAGEMENT
              - MANUFACTURING_AND_WAREHOUSE
              - MEDIA_COMMUNICATIONS_AND_WRITING
              - OIL_GAS_AND_MINING
              - PERSONAL_CARE_AND_SERVICES
              - PROTECTIVE_SERVICES
              - REAL_ESTATE
              - RESTAURANT_AND_HOSPITALITY
              - SALES_AND_RETAIL
              - SCIENCE_AND_ENGINEERING
              - SOCIAL_SERVICES_AND_NON_PROFIT
              - SPORTS_FITNESS_AND_RECREATION
              - TRANSPORTATION_AND_LOGISTICS
            type: string
          type: array
        commuteFilter:
          $ref: "#/components/schemas/CommutePreference"
        companyDisplayNames:
          description: >-
            Optional. This filter specifies the exact company display

            name of the jobs to search against.


            If a value isn't specified, jobs within the search results are

            associated with any company.


            If multiple values are specified, jobs within the search results may be

            associated with any of the specified companies.


            At most 20 company display name filters are allowed.
          items:
            type: string
          type: array
        companyNames:
          description: >-
            Optional. This filter specifies the company entities to search
            against.


            If a value isn't specified, jobs are searched for against all

            companies.


            If multiple values are specified, jobs are searched against the

            companies specified.


            At most 20 company filters are allowed.
          items:
            type: string
          type: array
        compensationFilter:
          $ref: "#/components/schemas/CompensationFilter"
        customAttributeFilter:
          description: >-
            Optional. This filter specifies a structured syntax to match against
            the

            Job.custom_attributes marked as `filterable`.


            The syntax for this expression is a subset of Google SQL syntax.


            Supported operators are: =, !=, <, <=, >, >= where the left of the operator

            is a custom field key and the right of the operator is a number or string

            (surrounded by quotes) value.


            Supported functions are LOWER(<field_name>) to

            perform case insensitive match and EMPTY(<field_name>) to filter on the

            existence of a key.


            Boolean expressions (AND/OR/NOT) are supported up to 3 levels of

            nesting (for example, "((A AND B AND C) OR NOT D) AND E"), a maximum of 50

            comparisons/functions are allowed in the expression. The expression

            must be < 2000 characters in length.


            Sample Query:

            (key1 = "TEST" OR LOWER(key1)="test" OR NOT EMPTY(key1)) AND key2 > 100
          type: string
        disableSpellCheck:
          description: |-
            Optional. This flag controls the spell-check feature. If false, the
            service attempts to correct a misspelled query,
            for example, "enginee" is corrected to "engineer".

            Defaults to false: a spell check is performed.
          type: boolean
        employmentTypes:
          description: >-
            Optional. The employment type filter specifies the employment type
            of jobs to

            search against, such as EmploymentType.FULL_TIME.


            If a value is not specified, jobs in the search results include any

            employment type.


            If multiple values are specified, jobs in the search results include

            any of the specified employment types.
          items:
            enum:
              - EMPLOYMENT_TYPE_UNSPECIFIED
              - FULL_TIME
              - PART_TIME
              - CONTRACTOR
              - TEMPORARY
              - INTERN
              - VOLUNTEER
              - PER_DIEM
              - CONTRACT_TO_HIRE
              - FLY_IN_FLY_OUT
              - OTHER
            type: string
          type: array
        languageCodes:
          description: >-
            Optional. This filter specifies the locale of jobs to search
            against,

            for example, "en-US".


            If a value isn't specified, the search results can contain jobs in any

            locale.



            Language codes should be in BCP-47 format, such as "en-US" or "sr-Latn".

            For more information, see

            [Tags for Identifying Languages](https://tools.ietf.org/html/bcp47).


            At most 10 language code filters are allowed.
          items:
            type: string
          type: array
        locationFilters:
          description: >-
            Optional. The location filter specifies geo-regions containing the
            jobs to

            search against. See LocationFilter for more information.


            If a location value isn't specified, jobs fitting the other search

            criteria are retrieved regardless of where they're located.


            If multiple values are specified, jobs are retrieved from any of the

            specified locations. If different values are specified for the

            LocationFilter.distance_in_miles parameter, the maximum provided

            distance is used for all locations.


            At most 5 location filters are allowed.
          items:
            $ref: "#/components/schemas/LocationFilter"
          type: array
        publishDateRange:
          description: >-
            Optional. Jobs published within a range specified by this filter are
            searched

            against, for example, DateRange.PAST_MONTH. If a value isn't

            specified, all open jobs are searched against regardless of their

            published date.
          enum:
            - DATE_RANGE_UNSPECIFIED
            - PAST_24_HOURS
            - PAST_WEEK
            - PAST_MONTH
            - PAST_YEAR
            - PAST_3_DAYS
          type: string
        query:
          description: >-
            Optional. The query string that matches against the job title,
            description, and

            location fields.


            The maximum query size is 255 bytes.
          type: string
      type: object
    LatLng:
      description: >-
        An object representing a latitude/longitude pair. This is expressed as a
        pair

        of doubles representing degrees latitude and degrees longitude. Unless

        specified otherwise, this must conform to the

        <a href="http://www.unoosa.org/pdf/icg/2012/template/WGS_84.pdf">WGS84

        standard</a>. Values must be within normalized ranges.
      properties:
        latitude:
          description: The latitude in degrees. It must be in the range [-90.0, +90.0].
          format: double
          type: number
        longitude:
          description: The longitude in degrees. It must be in the range [-180.0, +180.0].
          format: double
          type: number
      type: object
    ListCompaniesResponse:
      description: |-
        Output only.

        The List companies response object.
      properties:
        companies:
          description: Companies for the current client.
          items:
            $ref: "#/components/schemas/Company"
          type: array
        metadata:
          $ref: "#/components/schemas/ResponseMetadata"
        nextPageToken:
          description: A token to retrieve the next page of results.
          type: string
      type: object
    ListCompanyJobsResponse:
      description: |-
        Deprecated. Use ListJobsResponse instead.

        Output only.

        The List jobs response object.
      properties:
        jobs:
          description: |-
            The Jobs for a given company.

            The maximum number of items returned is based on the limit field
            provided in the request.
          items:
            $ref: "#/components/schemas/Job"
          type: array
        metadata:
          $ref: "#/components/schemas/ResponseMetadata"
        nextPageToken:
          description: A token to retrieve the next page of results.
          type: string
        totalSize:
          description: |-
            The total number of open jobs. The result will be
            empty if ListCompanyJobsRequest.include_jobs_count is not enabled
            or if no open jobs are available.
          format: int64
          type: string
      type: object
    ListJobsResponse:
      description: |-
        Output only.

        List jobs response.
      properties:
        jobs:
          description: |-
            The Jobs for a given company.

            The maximum number of items returned is based on the limit field
            provided in the request.
          items:
            $ref: "#/components/schemas/Job"
          type: array
        metadata:
          $ref: "#/components/schemas/ResponseMetadata"
        nextPageToken:
          description: A token to retrieve the next page of results.
          type: string
      type: object
    LocationFilter:
      description: |-
        Input only.

        Geographic region of the search.
      properties:
        distanceInMiles:
          description: >-
            Optional. The distance_in_miles is applied when the location being
            searched for is

            identified as a city or smaller. When the location being searched for is a

            state or larger, this field is ignored.
          format: double
          type: number
        isTelecommute:
          description: >-
            Optional. Allows the client to return jobs without a

            set location, specifically, telecommuting jobs (telecomuting is considered

            by the service as a special location.

            Job.allow_telecommute indicates if a job permits telecommuting.

            If this field is true, telecommuting jobs are searched, and

            name and lat_lng are

            ignored.

            This filter can be used by itself to search exclusively for telecommuting

            jobs, or it can be combined with another location

            filter to search for a combination of job locations,

            such as "Mountain View" or "telecommuting" jobs. However, when used in

            combination with other location filters, telecommuting jobs can be

            treated as less relevant than other jobs in the search response.
          type: boolean
        latLng:
          $ref: "#/components/schemas/LatLng"
        name:
          description: Optional. The address name, such as "Mountain View" or "Bay Area".
          type: string
        regionCode:
          description: >-
            Optional. CLDR region code of the country/region of the address.
            This will be used

            to address ambiguity of the user-input location, e.g. "Liverpool"

            against "Liverpool, NY, US" or "Liverpool, UK".


            Set this field if all the jobs to search against are from a same region,

            or jobs are world-wide but the job seeker is from a specific region.


            See http://cldr.unicode.org/ and

            http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html

            for details. Example: "CH" for Switzerland.
          type: string
      type: object
    MatchingJob:
      description: |-
        Output only.

        Job entry with metadata inside SearchJobsResponse.
      properties:
        commuteInfo:
          $ref: "#/components/schemas/CommuteInfo"
        job:
          $ref: "#/components/schemas/Job"
        jobSummary:
          description: >-
            A summary of the job with core information that's displayed on the
            search

            results listing page.
          type: string
        jobTitleSnippet:
          description: >-
            Contains snippets of text from the Job.job_title field most

            closely matching a search query's keywords, if available. The matching

            query keywords are enclosed in HTML bold tags.
          type: string
        searchTextSnippet:
          description: >-
            Contains snippets of text from the Job.description and similar

            fields that most closely match a search query's keywords, if available.

            All HTML tags in the original fields are stripped when returned in this

            field, and matching query keywords are enclosed in HTML bold tags.
          type: string
      type: object
    Money:
      description: Represents an amount of money with its currency type.
      properties:
        currencyCode:
          description: The 3-letter currency code defined in ISO 4217.
          type: string
        nanos:
          description: >-
            Number of nano (10^-9) units of the amount.

            The value must be between -999,999,999 and +999,999,999 inclusive.

            If `units` is positive, `nanos` must be positive or zero.

            If `units` is zero, `nanos` can be positive, zero, or negative.

            If `units` is negative, `nanos` must be negative or zero.

            For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
          format: int32
          type: integer
        units:
          description: >-
            The whole units of the amount.

            For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
          format: int64
          type: string
      type: object
    NumericBucketingOption:
      description: >-
        Input only.


        Use this field to specify bucketing option for the histogram search response.
      properties:
        bucketBounds:
          description: >-
            Required. Two adjacent values form a histogram bucket. Values should
            be in

            ascending order. For example, if [5, 10, 15] are provided, four buckets are

            created: (-inf, 5), 5, 10), [10, 15), [15, inf). At most 20

            [buckets_bound is supported.
          items:
            format: double
            type: number
          type: array
        requiresMinMax:
          description: >-
            Optional. If set to true, the histogram result includes
            minimum/maximum

            value of the numeric field.
          type: boolean
      type: object
    NumericBucketingResult:
      description: |-
        Output only.

        Custom numeric bucketing result.
      properties:
        counts:
          description: |-
            Count within each bucket. Its size is the length of
            NumericBucketingOption.bucket_bounds plus 1.
          items:
            $ref: "#/components/schemas/BucketizedCount"
          type: array
        maxValue:
          description: >-
            Stores the maximum value of the numeric field. Will be populated
            only if

            [NumericBucketingOption.requires_min_max] is set to true.
          format: double
          type: number
        minValue:
          description: >-
            Stores the minimum value of the numeric field. Will be populated
            only if

            [NumericBucketingOption.requires_min_max] is set to true.
          format: double
          type: number
      type: object
    PostalAddress:
      description: >-
        Represents a postal address, e.g. for postal delivery or payments
        addresses.

        Given a postal address, a postal service can deliver items to a premise, P.O.

        Box or similar.

        It is not intended to model geographical locations (roads, towns,

        mountains).


        In typical usage an address would be created via user input or from importing

        existing data, depending on the type of process.


        Advice on address input / editing:
         - Use an i18n-ready address widget such as
           https://github.com/google/libaddressinput)
        - Users should not be presented with UI elements for input or editing of
          fields outside countries where that field is used.

        For more guidance on how to use this schema, please see:

        https://support.google.com/business/answer/6397478
      properties:
        addressLines:
          description: >-
            Unstructured address lines describing the lower levels of an
            address.


            Because values in address_lines do not have type information and may

            sometimes contain multiple values in a single field (e.g.

            "Austin, TX"), it is important that the line order is clear. The order of

            address lines should be "envelope order" for the country/region of the

            address. In places where this can vary (e.g. Japan), address_language is

            used to make it explicit (e.g. "ja" for large-to-small ordering and

            "ja-Latn" or "en" for small-to-large). This way, the most specific line of

            an address can be selected based on the language.


            The minimum permitted structural representation of an address consists

            of a region_code with all remaining information placed in the

            address_lines. It would be possible to format such an address very

            approximately without geocoding, but no semantic reasoning could be

            made about any of the address components until it was at least

            partially resolved.


            Creating an address only containing a region_code and address_lines, and

            then geocoding is the recommended way to handle completely unstructured

            addresses (as opposed to guessing which parts of the address should be

            localities or administrative areas).
          items:
            type: string
          type: array
        administrativeArea:
          description: >-
            Optional. Highest administrative subdivision which is used for
            postal

            addresses of a country or region.

            For example, this can be a state, a province, an oblast, or a prefecture.

            Specifically, for Spain this is the province and not the autonomous

            community (e.g. "Barcelona" and not "Catalonia").

            Many countries don't use an administrative area in postal addresses. E.g.

            in Switzerland this should be left unpopulated.
          type: string
        languageCode:
          description: >-
            Optional. BCP-47 language code of the contents of this address (if

            known). This is often the UI language of the input form or is expected

            to match one of the languages used in the address' country/region, or their

            transliterated equivalents.

            This can affect formatting in certain countries, but is not critical

            to the correctness of the data and will never affect any validation or

            other non-formatting related operations.


            If this value is not known, it should be omitted (rather than specifying a

            possibly incorrect default).


            Examples: "zh-Hant", "ja", "ja-Latn", "en".
          type: string
        locality:
          description: >-
            Optional. Generally refers to the city/town portion of the address.

            Examples: US city, IT comune, UK post town.

            In regions of the world where localities are not well defined or do not fit

            into this structure well, leave locality empty and use address_lines.
          type: string
        organization:
          description: Optional. The name of the organization at the address.
          type: string
        postalCode:
          description: >-
            Optional. Postal code of the address. Not all countries use or
            require

            postal codes to be present, but where they are used, they may trigger

            additional validation with other parts of the address (e.g. state/zip

            validation in the U.S.A.).
          type: string
        recipients:
          description: >-
            Optional. The recipient at the address.

            This field may, under certain circumstances, contain multiline information.

            For example, it might contain "care of" information.
          items:
            type: string
          type: array
        regionCode:
          description: >-
            Required. CLDR region code of the country/region of the address.
            This

            is never inferred and it is up to the user to ensure the value is

            correct. See http://cldr.unicode.org/ and

            http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html

            for details. Example: "CH" for Switzerland.
          type: string
        revision:
          description: >-
            The schema revision of the `PostalAddress`. This must be set to 0,
            which is

            the latest revision.


            All new revisions **must** be backward compatible with old revisions.
          format: int32
          type: integer
        sortingCode:
          description: >-
            Optional. Additional, country-specific, sorting code. This is not
            used

            in most regions. Where it is used, the value is either a string like

            "CEDEX", optionally followed by a number (e.g. "CEDEX 7"), or just a number

            alone, representing the "sector code" (Jamaica), "delivery area indicator"

            (Malawi) or "post office indicator" (e.g. Côte d'Ivoire).
          type: string
        sublocality:
          description: |-
            Optional. Sublocality of the address.
            For example, this can be neighborhoods, boroughs, districts.
          type: string
      type: object
    RequestMetadata:
      description: |-
        Input only.

        Meta information related to the job searcher or entity
        conducting the job search. This information is used to improve the
        performance of the service.
      properties:
        deviceInfo:
          $ref: "#/components/schemas/DeviceInfo"
        domain:
          description: >-
            Required. The client-defined scope or source of the service call,
            which typically

            is the domain on

            which the service has been implemented and is currently being run.


            For example, if the service is being run by client <em>Foo, Inc.</em>, on

            job board www.foo.com and career site www.bar.com, then this field is

            set to "foo.com" for use on the job board, and "bar.com" for use on the

            career site.


            If this field is not available for some reason, send "UNKNOWN". Note that

            any improvements to the service model for a particular tenant site rely on

            this field being set correctly to some domain.
          type: string
        sessionId:
          description: >-
            Required. A unique session identification string. A session is
            defined as the

            duration of an end user's interaction with the service over a period.

            Obfuscate this field for privacy concerns before

            providing it to the API.


            If this field is not available for some reason, please send "UNKNOWN". Note

            that any improvements to the service model for a particular tenant site,

            rely on this field being set correctly to some unique session_id.
          type: string
        userId:
          description: >-
            Required. A unique user identification string, as determined by the
            client. The

            client is responsible for ensuring client-level uniqueness of this value

            in order to have the strongest positive impact on search quality.

            Obfuscate this field for privacy concerns before

            providing it to the service.


            If this field is not available for some reason, please send "UNKNOWN". Note

            that any improvements to the service model for a particular tenant site,

            rely on this field being set correctly to some unique user_id.
          type: string
      type: object
    ResponseMetadata:
      description: |-
        Output only.

        Additional information returned to client, such as debugging
        information.
      properties:
        experimentIdList:
          description: |-
            Identifiers for the versions of the search algorithm used during
            this API invocation if multiple algorithms are used.
            The default value is empty.
            For search response only.
          items:
            format: int32
            type: integer
          type: array
        mode:
          description: For search response only. Indicates the mode of a performed search.
          enum:
            - SEARCH_MODE_UNSPECIFIED
            - JOB_SEARCH
            - FEATURED_JOB_SEARCH
            - EMAIL_ALERT_SEARCH
          type: string
        requestId:
          description: |-
            A unique id associated with this call.
            This id is logged for tracking purposes.
          type: string
      type: object
    SearchJobsRequest:
      description: |-
        Input only.

        The Request body of the `SearchJobs` call.
      properties:
        disableRelevanceThresholding:
          description: >-
            Optional. Controls whether to disable relevance thresholding.
            Relevance

            thresholding removes jobs that have low relevance in search results,

            for example, removing "Assistant to the CEO" positions from the search

            results of a search for "CEO".


            Disabling relevance thresholding improves the accuracy of subsequent

            search requests.


            Defaults to false.
          type: boolean
        enableBroadening:
          description: >-
            Optional. Controls whether to broaden the search when it produces
            sparse results.

            Broadened queries append results to the end of the matching results

            list.


            Defaults to false.
          type: boolean
        enablePreciseResultSize:
          description: >-
            Optional. Controls if the search job request requires the return of
            a precise

            count of the first 300 results. Setting this to `true` ensures

            consistency in the number of results per page. Best practice is to set this

            value to true if a client allows users to jump directly to a

            non-sequential search results page.


            Enabling this flag may adversely impact performance.


            Defaults to false.
          type: boolean
        filters:
          $ref: "#/components/schemas/JobFilters"
        histogramFacets:
          $ref: "#/components/schemas/HistogramFacets"
        jobView:
          description: |-
            Optional. The number of job attributes returned for jobs in the
            search response. Defaults to JobView.SMALL if no value is specified.
          enum:
            - JOB_VIEW_UNSPECIFIED
            - SMALL
            - MINIMAL
            - FULL
          type: string
        mode:
          description: Required. Mode of a search.
          enum:
            - SEARCH_MODE_UNSPECIFIED
            - JOB_SEARCH
            - FEATURED_JOB_SEARCH
            - EMAIL_ALERT_SEARCH
          type: string
        offset:
          description: >-
            Optional. An integer that specifies the current offset (that is,
            starting result

            location, amongst the jobs deemed by the API as relevant) in search

            results. This field is only considered if page_token is unset.


            For example, 0 means to  return results starting from the first matching

            job, and 10 means to return from the 11th job. This can be used for

            pagination, (for example, pageSize = 10 and offset = 10 means to return

            from the second page).
          format: int32
          type: integer
        orderBy:
          description: |-
            Deprecated. Use sort_by instead.

            Optional.

            The criteria determining how search results are sorted.
            Defaults to SortBy.RELEVANCE_DESC if no value is specified.
          enum:
            - SORT_BY_UNSPECIFIED
            - RELEVANCE_DESC
            - PUBLISHED_DATE_DESC
            - UPDATED_DATE_DESC
            - TITLE
            - TITLE_DESC
            - ANNUALIZED_BASE_COMPENSATION
            - ANNUALIZED_TOTAL_COMPENSATION
            - ANNUALIZED_BASE_COMPENSATION_DESC
            - ANNUALIZED_TOTAL_COMPENSATION_DESC
          type: string
        pageSize:
          description: >-
            Optional. A limit on the number of jobs returned in the search
            results.

            Increasing this value above the default value of 10 can increase search

            response time. The value can be between 1 and 100.
          format: int32
          type: integer
        pageToken:
          description: |-
            Optional. The token specifying the current offset within
            search results. See SearchJobsResponse.next_page_token for
            an explanation of how to obtain the next set of query results.
          type: string
        query:
          $ref: "#/components/schemas/JobQuery"
        requestMetadata:
          $ref: "#/components/schemas/RequestMetadata"
        sortBy:
          description: |-
            Optional. The criteria determining how search results are sorted.
            Defaults to SortBy.RELEVANCE_DESC if no value is specified.
          enum:
            - SORT_BY_UNSPECIFIED
            - RELEVANCE_DESC
            - PUBLISHED_DATE_DESC
            - UPDATED_DATE_DESC
            - TITLE
            - TITLE_DESC
            - ANNUALIZED_BASE_COMPENSATION
            - ANNUALIZED_TOTAL_COMPENSATION
            - ANNUALIZED_BASE_COMPENSATION_DESC
            - ANNUALIZED_TOTAL_COMPENSATION_DESC
          type: string
      type: object
    SearchJobsResponse:
      description: |-
        Output only.

        Response for SearchJob method.
      properties:
        appliedCommuteFilter:
          $ref: "#/components/schemas/CommutePreference"
        appliedJobLocationFilters:
          description: >-
            The location filters that the service applied to the specified
            query. If

            any filters are lat-lng based, the JobLocation.location_type is

            JobLocation.LocationType#LOCATION_TYPE_UNSPECIFIED.
          items:
            $ref: "#/components/schemas/JobLocation"
          type: array
        estimatedTotalSize:
          description: |-
            An estimation of the number of jobs that match the specified query.

            This number is not guaranteed to be accurate. For accurate results,
            seenenable_precise_result_size.
          format: int64
          type: string
        histogramResults:
          $ref: "#/components/schemas/HistogramResults"
        jobView:
          description: Corresponds to SearchJobsRequest.job_view.
          enum:
            - JOB_VIEW_UNSPECIFIED
            - SMALL
            - MINIMAL
            - FULL
          type: string
        matchingJobs:
          description: The Job entities that match the specified SearchJobsRequest.
          items:
            $ref: "#/components/schemas/MatchingJob"
          type: array
        metadata:
          $ref: "#/components/schemas/ResponseMetadata"
        nextPageToken:
          description: >-
            The token that specifies the starting position of the next page of
            results.

            This field is empty if there are no more results.
          type: string
        numJobsFromBroadenedQuery:
          description: >-
            If query broadening is enabled, we may append additional results
            from the

            broadened query. This number indicates how many of the jobs returned in the

            jobs field are from the broadened query. These results are always at the

            end of the jobs list. In particular, a value of 0 means all the jobs in the

            jobs list are from the original (without broadening) query. If this

            field is non-zero, subsequent requests with offset after this result set

            should contain all broadened results.
          format: int32
          type: integer
        spellResult:
          $ref: "#/components/schemas/SpellingCorrection"
        totalSize:
          description: |-
            The precise result count, which is available only if the client set
            enable_precise_result_size to `true` or if the response
            is the last page of results. Otherwise, the value will be `-1`.
          format: int64
          type: string
      type: object
    SpellingCorrection:
      description: |-
        Output only.

        Spell check result.
      properties:
        corrected:
          description: Indicates if the query was corrected by the spell checker.
          type: boolean
        correctedText:
          description: Correction output consisting of the corrected keyword string.
          type: string
      type: object
    StringValues:
      description: Represents array of string values.
      properties:
        values:
          description: Required. String values.
          items:
            type: string
          type: array
      type: object
    UpdateJobRequest:
      description: |-
        Input only.

        Update job request.
      properties:
        disableStreetAddressResolution:
          description: >-
            Deprecated. Please use processing_options. This flag is ignored if

            processing_options is set.


            Optional.


            If set to `true`, the service does not attempt resolve a more precise

            address for the job.
          type: boolean
        job:
          $ref: "#/components/schemas/Job"
        processingOptions:
          $ref: "#/components/schemas/JobProcessingOptions"
        updateJobFields:
          description: >-
            Optional but strongly recommended to be provided for the best
            service

            experience.


            If update_job_fields is provided, only the specified fields in

            job are updated. Otherwise all the fields are updated.


            A field mask to restrict the fields that are updated. Valid values are:


            * jobTitle

            * employmentTypes

            * description

            * applicationUrls

            * applicationEmailList

            * applicationInstruction

            * responsibilities

            * qualifications

            * educationLevels

            * level

            * department

            * startDate

            * endDate

            * compensationInfo

            * incentives

            * languageCode

            * benefits

            * expireTime

            * customAttributes

            * visibility

            * publishDate

            * promotionValue

            * locations

            * region

            * expiryDate (deprecated)

            * filterableCustomFields (deprecated)

            * unindexedCustomFields (deprecated)
          format: google-fieldmask
          type: string
      type: object
