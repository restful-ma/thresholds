openapi: 3.0.0
info:
  version: 2018-01-06
  x-release: v4
  title: AWS Auto Scaling Plans
  description: <fullname>AWS Auto Scaling</fullname> <p>Use AWS Auto Scaling to quickly
    discover all the scalable AWS resources for your application and configure
    dynamic scaling and predictive scaling for your resources using scaling
    plans. Use this service in conjunction with the Amazon EC2 Auto Scaling,
    Application Auto Scaling, Amazon CloudWatch, and AWS CloudFormation
    services. </p> <p>Currently, predictive scaling is only available for Amazon
    EC2 Auto Scaling groups.</p> <p>For more information about AWS Auto Scaling,
    including information about granting IAM users required permissions for AWS
    Auto Scaling actions, see the <a
    href="https://docs.aws.amazon.com/autoscaling/plans/userguide/what-is-aws-auto-scaling.html">AWS
    Auto Scaling User Guide</a>.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: autoscaling-plans
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/autoscaling-plans-2018-01-06.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/autoscaling/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=AnyScaleScalingPlannerFrontendService.CreateScalingPlan:
    post:
      operationId: CreateScalingPlan
      description: Creates a scaling plan.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateScalingPlanResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: ConcurrentUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentUpdateException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AnyScaleScalingPlannerFrontendService.CreateScalingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateScalingPlanRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AnyScaleScalingPlannerFrontendService.DeleteScalingPlan:
    post:
      operationId: DeleteScalingPlan
      description: <p>Deletes the specified scaling plan.</p> <p>Deleting a scaling plan
        deletes the underlying <a>ScalingInstruction</a> for all of the scalable
        resources that are covered by the plan.</p> <p>If the plan has launched
        resources or has scaling activities in progress, you must delete those
        resources separately.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteScalingPlanResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ObjectNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectNotFoundException"
        "482":
          description: ConcurrentUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentUpdateException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AnyScaleScalingPlannerFrontendService.DeleteScalingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteScalingPlanRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AnyScaleScalingPlannerFrontendService.DescribeScalingPlanResources:
    post:
      operationId: DescribeScalingPlanResources
      description: Describes the scalable resources in the specified scaling plan.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeScalingPlanResourcesResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "482":
          description: ConcurrentUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentUpdateException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AnyScaleScalingPlannerFrontendService.DescribeScalingPlanResources
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeScalingPlanResourcesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AnyScaleScalingPlannerFrontendService.DescribeScalingPlans:
    post:
      operationId: DescribeScalingPlans
      description: Describes one or more of your scaling plans.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeScalingPlansResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "482":
          description: ConcurrentUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentUpdateException"
        "483":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AnyScaleScalingPlannerFrontendService.DescribeScalingPlans
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeScalingPlansRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AnyScaleScalingPlannerFrontendService.GetScalingPlanResourceForecastData:
    post:
      operationId: GetScalingPlanResourceForecastData
      description: <p>Retrieves the forecast data for a scalable resource.</p> <p>Capacity
        forecasts are represented as predicted values, or data points, that are
        calculated using historical data points from a specified CloudWatch load
        metric. Data points are available for up to 56 days. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetScalingPlanResourceForecastDataRespo\
                  nse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AnyScaleScalingPlannerFrontendService.GetScalingPlanResourceForecastData
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetScalingPlanResourceForecastDataRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AnyScaleScalingPlannerFrontendService.UpdateScalingPlan:
    post:
      operationId: UpdateScalingPlan
      description: <p>Updates the specified scaling plan.</p> <p>You cannot update a
        scaling plan if it is in the process of being created, updated, or
        deleted.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateScalingPlanResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConcurrentUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentUpdateException"
        "482":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "483":
          description: ObjectNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AnyScaleScalingPlannerFrontendService.UpdateScalingPlan
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateScalingPlanRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://autoscaling.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS Auto Scaling Plans multi-region endpoint
  - url: https://autoscaling.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS Auto Scaling Plans multi-region endpoint
  - url: http://autoscaling.amazonaws.com
    variables: {}
    description: The general AWS Auto Scaling Plans endpoint for US East (N. Virginia)
  - url: https://autoscaling.amazonaws.com
    variables: {}
    description: The general AWS Auto Scaling Plans endpoint for US East (N. Virginia)
  - url: http://autoscaling.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Auto Scaling Plans endpoint for China (Beijing) and China (Ningxia)
  - url: https://autoscaling.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Auto Scaling Plans endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateScalingPlanResponse:
      type: object
      required:
        - ScalingPlanVersion
      properties:
        ScalingPlanVersion:
          $ref: "#/components/schemas/ScalingPlanVersion"
    CreateScalingPlanRequest:
      type: object
      required:
        - ScalingPlanName
        - ApplicationSource
        - ScalingInstructions
      properties:
        ScalingPlanName:
          $ref: "#/components/schemas/ScalingPlanName"
        ApplicationSource:
          $ref: "#/components/schemas/ApplicationSource"
        ScalingInstructions:
          $ref: "#/components/schemas/ScalingInstructions"
    ValidationException: {}
    LimitExceededException: {}
    ConcurrentUpdateException: {}
    InternalServiceException: {}
    DeleteScalingPlanResponse:
      type: object
      properties: {}
    DeleteScalingPlanRequest:
      type: object
      required:
        - ScalingPlanName
        - ScalingPlanVersion
      properties:
        ScalingPlanName:
          $ref: "#/components/schemas/ScalingPlanName"
        ScalingPlanVersion:
          $ref: "#/components/schemas/ScalingPlanVersion"
    ObjectNotFoundException: {}
    DescribeScalingPlanResourcesResponse:
      type: object
      properties:
        ScalingPlanResources:
          $ref: "#/components/schemas/ScalingPlanResources"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeScalingPlanResourcesRequest:
      type: object
      required:
        - ScalingPlanName
        - ScalingPlanVersion
      properties:
        ScalingPlanName:
          $ref: "#/components/schemas/ScalingPlanName"
        ScalingPlanVersion:
          $ref: "#/components/schemas/ScalingPlanVersion"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    InvalidNextTokenException: {}
    DescribeScalingPlansResponse:
      type: object
      properties:
        ScalingPlans:
          $ref: "#/components/schemas/ScalingPlans"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeScalingPlansRequest:
      type: object
      properties:
        ScalingPlanNames:
          $ref: "#/components/schemas/ScalingPlanNames"
        ScalingPlanVersion:
          $ref: "#/components/schemas/ScalingPlanVersion"
        ApplicationSources:
          $ref: "#/components/schemas/ApplicationSources"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    GetScalingPlanResourceForecastDataResponse:
      type: object
      required:
        - Datapoints
      properties:
        Datapoints:
          $ref: "#/components/schemas/Datapoints"
    GetScalingPlanResourceForecastDataRequest:
      type: object
      required:
        - ScalingPlanName
        - ScalingPlanVersion
        - ServiceNamespace
        - ResourceId
        - ScalableDimension
        - ForecastDataType
        - StartTime
        - EndTime
      properties:
        ScalingPlanName:
          $ref: "#/components/schemas/ScalingPlanName"
        ScalingPlanVersion:
          $ref: "#/components/schemas/ScalingPlanVersion"
        ServiceNamespace:
          $ref: "#/components/schemas/ServiceNamespace"
        ResourceId:
          $ref: "#/components/schemas/XmlString"
        ScalableDimension:
          $ref: "#/components/schemas/ScalableDimension"
        ForecastDataType:
          $ref: "#/components/schemas/ForecastDataType"
        StartTime:
          $ref: "#/components/schemas/TimestampType"
        EndTime:
          $ref: "#/components/schemas/TimestampType"
    UpdateScalingPlanResponse:
      type: object
      properties: {}
    UpdateScalingPlanRequest:
      type: object
      required:
        - ScalingPlanName
        - ScalingPlanVersion
      properties:
        ScalingPlanName:
          $ref: "#/components/schemas/ScalingPlanName"
        ScalingPlanVersion:
          $ref: "#/components/schemas/ScalingPlanVersion"
        ApplicationSource:
          $ref: "#/components/schemas/ApplicationSource"
        ScalingInstructions:
          $ref: "#/components/schemas/ScalingInstructions"
    XmlString:
      type: string
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
    TagFilters:
      type: array
      items:
        $ref: "#/components/schemas/TagFilter"
    ApplicationSource:
      type: object
      properties:
        CloudFormationStackARN:
          $ref: "#/components/schemas/XmlString"
        TagFilters:
          $ref: "#/components/schemas/TagFilters"
      description: Represents an application source.
    ApplicationSources:
      type: array
      items:
        $ref: "#/components/schemas/ApplicationSource"
    Cooldown:
      type: integer
    ScalingPlanName:
      type: string
      pattern: "[\\p{Print}&&[^|:/]]+"
      minLength: 1
      maxLength: 128
    ScalingInstructions:
      type: array
      items:
        $ref: "#/components/schemas/ScalingInstruction"
    ScalingPlanVersion:
      type: integer
    MetricName:
      type: string
    MetricNamespace:
      type: string
    MetricDimensions:
      type: array
      items:
        $ref: "#/components/schemas/MetricDimension"
    MetricStatistic:
      type: string
      enum:
        - Average
        - Minimum
        - Maximum
        - SampleCount
        - Sum
    MetricUnit:
      type: string
    CustomizedLoadMetricSpecification:
      type: object
      required:
        - MetricName
        - Namespace
        - Statistic
      properties:
        MetricName:
          $ref: "#/components/schemas/MetricName"
        Namespace:
          $ref: "#/components/schemas/MetricNamespace"
        Dimensions:
          $ref: "#/components/schemas/MetricDimensions"
        Statistic:
          $ref: "#/components/schemas/MetricStatistic"
        Unit:
          $ref: "#/components/schemas/MetricUnit"
      description: <p>Represents a CloudWatch metric of your choosing that can be used for
        predictive scaling. </p> <p>For predictive scaling to work with a
        customized load metric specification, AWS Auto Scaling needs access to
        the <code>Sum</code> and <code>Average</code> statistics that CloudWatch
        computes from metric data. Statistics are calculations used to aggregate
        data over specified time periods.</p> <p>When you choose a load metric,
        make sure that the required <code>Sum</code> and <code>Average</code>
        statistics for your metric are available in CloudWatch and that they
        provide relevant data for predictive scaling. The <code>Sum</code>
        statistic must represent the total load on the resource, and the
        <code>Average</code> statistic must represent the average load per
        capacity unit of the resource. For example, there is a metric that
        counts the number of requests processed by your Auto Scaling group. If
        the <code>Sum</code> statistic represents the total request count
        processed by the group, then the <code>Average</code> statistic for the
        specified metric must represent the average request count processed by
        each instance of the group.</p> <p>For information about terminology,
        available metrics, or how to publish new metrics, see <a
        href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html">Amazon
        CloudWatch Concepts</a> in the <i>Amazon CloudWatch User Guide</i>. </p>
    CustomizedScalingMetricSpecification:
      type: object
      required:
        - MetricName
        - Namespace
        - Statistic
      properties:
        MetricName:
          $ref: "#/components/schemas/MetricName"
        Namespace:
          $ref: "#/components/schemas/MetricNamespace"
        Dimensions:
          $ref: "#/components/schemas/MetricDimensions"
        Statistic:
          $ref: "#/components/schemas/MetricStatistic"
        Unit:
          $ref: "#/components/schemas/MetricUnit"
      description: <p>Represents a CloudWatch metric of your choosing that can be used for
        dynamic scaling as part of a target tracking scaling policy. </p> <p>To
        create your customized scaling metric specification:</p> <ul> <li>
        <p>Add values for each required parameter from CloudWatch. You can use
        an existing metric, or a new metric that you create. To use your own
        metric, you must first publish the metric to CloudWatch. For more
        information, see <a
        href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html">Publish
        Custom Metrics</a> in the <i>Amazon CloudWatch User Guide</i>.</p> </li>
        <li> <p>Choose a metric that changes proportionally with capacity. The
        value of the metric should increase or decrease in inverse proportion to
        the number of capacity units. That is, the value of the metric should
        decrease when capacity increases. </p> </li> </ul> <p>For more
        information about CloudWatch, see <a
        href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html">Amazon
        CloudWatch Concepts</a>. </p>
    TimestampType:
      type: string
      format: date-time
    MetricScale:
      type: number
      format: double
    Datapoint:
      type: object
      properties:
        Timestamp:
          $ref: "#/components/schemas/TimestampType"
        Value:
          $ref: "#/components/schemas/MetricScale"
      description: Represents a single value in the forecast data used for predictive
        scaling.
    Datapoints:
      type: array
      items:
        $ref: "#/components/schemas/Datapoint"
    MaxResults:
      type: integer
    NextToken:
      type: string
    ScalingPlanResources:
      type: array
      items:
        $ref: "#/components/schemas/ScalingPlanResource"
    ScalingPlanNames:
      type: array
      items:
        $ref: "#/components/schemas/ScalingPlanName"
    ScalingPlans:
      type: array
      items:
        $ref: "#/components/schemas/ScalingPlan"
    DisableDynamicScaling:
      type: boolean
    DisableScaleIn:
      type: boolean
    ForecastDataType:
      type: string
      enum:
        - CapacityForecast
        - LoadForecast
        - ScheduledActionMinCapacity
        - ScheduledActionMaxCapacity
    ServiceNamespace:
      type: string
      enum:
        - autoscaling
        - ecs
        - ec2
        - rds
        - dynamodb
    ScalableDimension:
      type: string
      enum:
        - autoscaling:autoScalingGroup:DesiredCapacity
        - ecs:service:DesiredCount
        - ec2:spot-fleet-request:TargetCapacity
        - rds:cluster:ReadReplicaCount
        - dynamodb:table:ReadCapacityUnits
        - dynamodb:table:WriteCapacityUnits
        - dynamodb:index:ReadCapacityUnits
        - dynamodb:index:WriteCapacityUnits
    LoadMetricType:
      type: string
      enum:
        - ASGTotalCPUUtilization
        - ASGTotalNetworkIn
        - ASGTotalNetworkOut
        - ALBTargetGroupRequestCount
    MetricDimensionName:
      type: string
    MetricDimensionValue:
      type: string
    MetricDimension:
      type: object
      required:
        - Name
        - Value
      properties:
        Name:
          $ref: "#/components/schemas/MetricDimensionName"
        Value:
          $ref: "#/components/schemas/MetricDimensionValue"
      description: Represents a dimension for a customized metric.
    PolicyName:
      type: string
      pattern: \p{Print}+
      minLength: 1
      maxLength: 256
    PolicyType:
      type: string
      enum:
        - TargetTrackingScaling
    ResourceLabel:
      type: string
      minLength: 1
      maxLength: 1023
    PredefinedLoadMetricSpecification:
      type: object
      required:
        - PredefinedLoadMetricType
      properties:
        PredefinedLoadMetricType:
          $ref: "#/components/schemas/LoadMetricType"
        ResourceLabel:
          $ref: "#/components/schemas/ResourceLabel"
      description: "Represents a predefined metric that can be used for predictive scaling.
        "
    ScalingMetricType:
      type: string
      enum:
        - ASGAverageCPUUtilization
        - ASGAverageNetworkIn
        - ASGAverageNetworkOut
        - DynamoDBReadCapacityUtilization
        - DynamoDBWriteCapacityUtilization
        - ECSServiceAverageCPUUtilization
        - ECSServiceAverageMemoryUtilization
        - ALBRequestCountPerTarget
        - RDSReaderAverageCPUUtilization
        - RDSReaderAverageDatabaseConnections
        - EC2SpotFleetRequestAverageCPUUtilization
        - EC2SpotFleetRequestAverageNetworkIn
        - EC2SpotFleetRequestAverageNetworkOut
    PredefinedScalingMetricSpecification:
      type: object
      required:
        - PredefinedScalingMetricType
      properties:
        PredefinedScalingMetricType:
          $ref: "#/components/schemas/ScalingMetricType"
        ResourceLabel:
          $ref: "#/components/schemas/ResourceLabel"
      description: Represents a predefined metric that can be used for dynamic scaling as
        part of a target tracking scaling policy.
    PredictiveScalingMaxCapacityBehavior:
      type: string
      enum:
        - SetForecastCapacityToMaxCapacity
        - SetMaxCapacityToForecastCapacity
        - SetMaxCapacityAboveForecastCapacity
    PredictiveScalingMode:
      type: string
      enum:
        - ForecastAndScale
        - ForecastOnly
    ResourceCapacity:
      type: integer
    ResourceIdMaxLen1600:
      type: string
      minLength: 1
      maxLength: 1600
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
    TargetTrackingConfigurations:
      type: array
      items:
        $ref: "#/components/schemas/TargetTrackingConfiguration"
    ScheduledActionBufferTime:
      type: integer
      minimum: 0
    ScalingPolicyUpdateBehavior:
      type: string
      enum:
        - KeepExternalPolicies
        - ReplaceExternalPolicies
    ScalingInstruction:
      type: object
      required:
        - ServiceNamespace
        - ResourceId
        - ScalableDimension
        - MinCapacity
        - MaxCapacity
        - TargetTrackingConfigurations
      properties:
        ServiceNamespace:
          $ref: "#/components/schemas/ServiceNamespace"
        ResourceId:
          $ref: "#/components/schemas/ResourceIdMaxLen1600"
        ScalableDimension:
          $ref: "#/components/schemas/ScalableDimension"
        MinCapacity:
          $ref: "#/components/schemas/ResourceCapacity"
        MaxCapacity:
          $ref: "#/components/schemas/ResourceCapacity"
        TargetTrackingConfigurations:
          $ref: "#/components/schemas/TargetTrackingConfigurations"
        PredefinedLoadMetricSpecification:
          $ref: "#/components/schemas/PredefinedLoadMetricSpecification"
        CustomizedLoadMetricSpecification:
          $ref: "#/components/schemas/CustomizedLoadMetricSpecification"
        ScheduledActionBufferTime:
          $ref: "#/components/schemas/ScheduledActionBufferTime"
        PredictiveScalingMaxCapacityBehavior:
          $ref: "#/components/schemas/PredictiveScalingMaxCapacityBehavior"
        PredictiveScalingMaxCapacityBuffer:
          $ref: "#/components/schemas/ResourceCapacity"
        PredictiveScalingMode:
          $ref: "#/components/schemas/PredictiveScalingMode"
        ScalingPolicyUpdateBehavior:
          $ref: "#/components/schemas/ScalingPolicyUpdateBehavior"
        DisableDynamicScaling:
          $ref: "#/components/schemas/DisableDynamicScaling"
      description: <p>Describes a scaling instruction for a scalable resource.</p> <p>The
        scaling instruction is used in combination with a scaling plan, which is
        a set of instructions for configuring dynamic scaling and predictive
        scaling for the scalable resources in your application. Each scaling
        instruction applies to one resource.</p> <p>AWS Auto Scaling creates
        target tracking scaling policies based on the scaling instructions.
        Target tracking scaling policies adjust the capacity of your scalable
        resource as required to maintain resource utilization at the target
        value that you specified. </p> <p>AWS Auto Scaling also configures
        predictive scaling for your Amazon EC2 Auto Scaling groups using a
        subset of parameters, including the load metric, the scaling metric, the
        target value for the scaling metric, the predictive scaling mode
        (forecast and scale or forecast only), and the desired behavior when the
        forecast capacity exceeds the maximum capacity of the resource. With
        predictive scaling, AWS Auto Scaling generates forecasts with traffic
        predictions for the two days ahead and schedules scaling actions that
        proactively add and remove resource capacity to match the forecast. </p>
        <p>We recommend waiting a minimum of 24 hours after creating an Auto
        Scaling group to configure predictive scaling. At minimum, there must be
        24 hours of historical data to generate a forecast.</p> <p>For more
        information, see <a
        href="https://docs.aws.amazon.com/autoscaling/plans/userguide/auto-scaling-getting-started.html">Getting
        Started with AWS Auto Scaling</a>.</p>
    ScalingPlanStatusCode:
      type: string
      enum:
        - Active
        - ActiveWithProblems
        - CreationInProgress
        - CreationFailed
        - DeletionInProgress
        - DeletionFailed
        - UpdateInProgress
        - UpdateFailed
    ScalingPlan:
      type: object
      required:
        - ScalingPlanName
        - ScalingPlanVersion
        - ApplicationSource
        - ScalingInstructions
        - StatusCode
      properties:
        ScalingPlanName:
          $ref: "#/components/schemas/ScalingPlanName"
        ScalingPlanVersion:
          $ref: "#/components/schemas/ScalingPlanVersion"
        ApplicationSource:
          $ref: "#/components/schemas/ApplicationSource"
        ScalingInstructions:
          $ref: "#/components/schemas/ScalingInstructions"
        StatusCode:
          $ref: "#/components/schemas/ScalingPlanStatusCode"
        StatusMessage:
          $ref: "#/components/schemas/XmlString"
        StatusStartTime:
          $ref: "#/components/schemas/TimestampType"
        CreationTime:
          $ref: "#/components/schemas/TimestampType"
      description: Represents a scaling plan.
    ScalingPolicies:
      type: array
      items:
        $ref: "#/components/schemas/ScalingPolicy"
    ScalingStatusCode:
      type: string
      enum:
        - Inactive
        - PartiallyActive
        - Active
    ScalingPlanResource:
      type: object
      required:
        - ScalingPlanName
        - ScalingPlanVersion
        - ServiceNamespace
        - ResourceId
        - ScalableDimension
        - ScalingStatusCode
      properties:
        ScalingPlanName:
          $ref: "#/components/schemas/ScalingPlanName"
        ScalingPlanVersion:
          $ref: "#/components/schemas/ScalingPlanVersion"
        ServiceNamespace:
          $ref: "#/components/schemas/ServiceNamespace"
        ResourceId:
          $ref: "#/components/schemas/ResourceIdMaxLen1600"
        ScalableDimension:
          $ref: "#/components/schemas/ScalableDimension"
        ScalingPolicies:
          $ref: "#/components/schemas/ScalingPolicies"
        ScalingStatusCode:
          $ref: "#/components/schemas/ScalingStatusCode"
        ScalingStatusMessage:
          $ref: "#/components/schemas/XmlString"
      description: Represents a scalable resource.
    ScalingPolicy:
      type: object
      required:
        - PolicyName
        - PolicyType
      properties:
        PolicyName:
          $ref: "#/components/schemas/PolicyName"
        PolicyType:
          $ref: "#/components/schemas/PolicyType"
        TargetTrackingConfiguration:
          $ref: "#/components/schemas/TargetTrackingConfiguration"
      description: Represents a scaling policy.
    TargetTrackingConfiguration:
      type: object
      required:
        - TargetValue
      properties:
        PredefinedScalingMetricSpecification:
          $ref: "#/components/schemas/PredefinedScalingMetricSpecification"
        CustomizedScalingMetricSpecification:
          $ref: "#/components/schemas/CustomizedScalingMetricSpecification"
        TargetValue:
          $ref: "#/components/schemas/MetricScale"
        DisableScaleIn:
          $ref: "#/components/schemas/DisableScaleIn"
        ScaleOutCooldown:
          $ref: "#/components/schemas/Cooldown"
        ScaleInCooldown:
          $ref: "#/components/schemas/Cooldown"
        EstimatedInstanceWarmup:
          $ref: "#/components/schemas/Cooldown"
      description: Describes a target tracking configuration to use with AWS Auto Scaling.
        Used with <a>ScalingInstruction</a> and <a>ScalingPolicy</a>.
    XmlStringMaxLen128:
      type: string
      minLength: 1
      maxLength: 128
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
    TagValues:
      type: array
      items:
        $ref: "#/components/schemas/XmlStringMaxLen256"
    TagFilter:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/XmlStringMaxLen128"
        Values:
          $ref: "#/components/schemas/TagValues"
      description: Represents a tag.
    XmlStringMaxLen256:
      type: string
      minLength: 1
      maxLength: 256
      x-pattern: "[\\u0020-\\uD7FF\\uE000-\\uFFFD\\uD800\\uDC00-\\uDBFF\\uDFFF\\r\\n\\t]*"
