openapi: 3.0.0
info:
  contact:
    x-twitter: microsoft
  title: Custom Vision Training Client
  version: "3.1"
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://twitter.com/microsoft/profile_image?size=original
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/cognitiveservices/data-plane/CustomVision/Training/stable/v3.1/Training.json
      version: "2.0"
  x-preferred: false
  x-providerName: microsoft.com
  x-serviceName: cognitiveservices-Training
  x-tags:
    - Microsoft
paths:
  /domains:
    get:
      operationId: GetDomains
      parameters:
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Domain"
                type: array
              examples:
                Successful GetDomains request:
                  $ref: "#/components/examples/Successful_GetDomains_request"
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Domain"
                type: array
              examples:
                Successful GetDomains request:
                  $ref: "#/components/examples/Successful_GetDomains_request"
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Domain"
                type: array
              examples:
                Successful GetDomains request:
                  $ref: "#/components/examples/Successful_GetDomains_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Get a list of the available domains.
      tags:
        - DomainsApi
  "/domains/{domainId}":
    get:
      operationId: GetDomain
      parameters:
        - description: The id of the domain to get information about.
          in: path
          name: domainId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetDomain request:
              value: b30a91ae-e3c1-4f73-a81e-c270bff27c39
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Domain"
              examples:
                Successful GetDomain request:
                  $ref: "#/components/examples/Successful_GetDomain_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/Domain"
              examples:
                Successful GetDomain request:
                  $ref: "#/components/examples/Successful_GetDomain_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/Domain"
              examples:
                Successful GetDomain request:
                  $ref: "#/components/examples/Successful_GetDomain_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Get information about a specific domain.
      tags:
        - DomainsApi
  /projects:
    get:
      operationId: GetProjects
      parameters:
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Project"
                type: array
              examples:
                Successful GetProjects request:
                  $ref: "#/components/examples/Successful_GetProjects_request"
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Project"
                type: array
              examples:
                Successful GetProjects request:
                  $ref: "#/components/examples/Successful_GetProjects_request"
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Project"
                type: array
              examples:
                Successful GetProjects request:
                  $ref: "#/components/examples/Successful_GetProjects_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Get your projects.
      tags:
        - ProjectApi
    post:
      operationId: CreateProject
      parameters:
        - description: Name of the project.
          in: query
          name: name
          required: true
          schema:
            type: string
          examples:
            Successful CreateProject request:
              value: My New Project
        - description: The description of the project.
          in: query
          name: description
          required: false
          schema:
            type: string
          examples:
            Successful CreateProject request:
              value: A test project
        - description: The id of the domain to use for this project. Defaults to General.
          in: query
          name: domainId
          required: false
          schema:
            type: string
            format: uuid
          examples:
            Successful CreateProject request:
              value: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
        - description: The type of classifier to create for this project.
          in: query
          name: classificationType
          required: false
          schema:
            type: string
            enum:
              - Multiclass
              - Multilabel
        - description: List of platforms the trained model is intending exporting to.
          in: query
          name: targetExportPlatforms
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              enum:
                - CoreML
                - TensorFlow
                - DockerFile
                - ONNX
                - VAIDK
              type: string
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
              examples:
                Successful CreateProject request:
                  $ref: "#/components/examples/Successful_CreateProject_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/Project"
              examples:
                Successful CreateProject request:
                  $ref: "#/components/examples/Successful_CreateProject_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/Project"
              examples:
                Successful CreateProject request:
                  $ref: "#/components/examples/Successful_CreateProject_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Create a project.
      tags:
        - ProjectApi
  "/projects/{projectId}":
    delete:
      operationId: DeleteProject
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful DeleteProject request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "204":
          description: No Content
        default:
          description: Error response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Delete a specific project.
      tags:
        - ProjectApi
    get:
      operationId: GetProject
      parameters:
        - description: The id of the project to get.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetProject request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
              examples:
                Successful GetProject request:
                  $ref: "#/components/examples/Successful_GetProject_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/Project"
              examples:
                Successful GetProject request:
                  $ref: "#/components/examples/Successful_GetProject_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/Project"
              examples:
                Successful GetProject request:
                  $ref: "#/components/examples/Successful_GetProject_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Get a specific project.
      tags:
        - ProjectApi
    patch:
      operationId: UpdateProject
      parameters:
        - description: The id of the project to update.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful UpdateProject request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project"
          application/xml:
            schema:
              $ref: "#/components/schemas/Project"
          text/xml:
            schema:
              $ref: "#/components/schemas/Project"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Project"
        description: The updated project model.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
              examples:
                Successful UpdateProject request:
                  $ref: "#/components/examples/Successful_UpdateProject_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/Project"
              examples:
                Successful UpdateProject request:
                  $ref: "#/components/examples/Successful_UpdateProject_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/Project"
              examples:
                Successful UpdateProject request:
                  $ref: "#/components/examples/Successful_UpdateProject_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Update a specific project.
      tags:
        - ProjectApi
  "/projects/{projectId}/images":
    delete:
      operationId: DeleteImages
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful DeleteImages request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: Ids of the images to be deleted. Limited to 256 images per batch.
          in: query
          name: imageIds
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              format: uuid
              type: string
              nullable: false
            minItems: 0
            maxItems: 256
          examples:
            Successful DeleteImages request:
              value:
                - e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
                - cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
        - description: Flag to specify delete all images, specify this flag or a list of
            images. Using this flag will return a 202 response to indicate the
            images are being deleted.
          in: query
          name: allImages
          required: false
          schema:
            type: boolean
        - description: Removes these images from all iterations, not just the current
            workspace. Using this flag will return a 202 response to indicate
            the images are being deleted.
          in: query
          name: allIterations
          required: false
          schema:
            type: boolean
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "202":
          description: Accepted
        "204":
          description: No Content
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Delete images from the set of training images.
      tags:
        - ImageApi
    post:
      description: "This API accepts body content as multipart/form-data and
        application/octet-stream. When using multipart\r

        multiple image files can be sent at once, with a maximum of 64
        files"
      operationId: CreateImagesFromData
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful CreateImagesFromData request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: The tags ids with which to tag each image. Limited to 20.
          in: query
          name: tagIds
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              format: uuid
              type: string
              nullable: false
            minItems: 0
            maxItems: 20
          examples:
            Successful CreateImagesFromData request:
              value:
                - b607964f-7bd6-4a3b-a869-6791fb6aab87
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        $ref: "#/components/requestBodies/CreateImagesFromData"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromData request:
                  $ref: "#/components/examples/Successful_CreateImagesFromData_requ\
                    est"
            application/xml:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromData request:
                  $ref: "#/components/examples/Successful_CreateImagesFromData_requ\
                    est"
            text/xml:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromData request:
                  $ref: "#/components/examples/Successful_CreateImagesFromData_requ\
                    est"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Add the provided images to the set of training images.
      tags:
        - ImageApi
  "/projects/{projectId}/images/files":
    post:
      description: This API accepts a batch of files, and optionally tags, to create
        images. There is a limit of 64 images and 20 tags.
      operationId: CreateImagesFromFiles
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful CreateImagesFromFiles request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImageFileCreateBatch"
          application/xml:
            schema:
              $ref: "#/components/schemas/ImageFileCreateBatch"
          text/xml:
            schema:
              $ref: "#/components/schemas/ImageFileCreateBatch"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ImageFileCreateBatch"
        description: The batch of image files to add. Limited to 64 images and 20 tags per
          batch.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromFiles request:
                  $ref: "#/components/examples/Successful_CreateImagesFromFiles_req\
                    uest"
            application/xml:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromFiles request:
                  $ref: "#/components/examples/Successful_CreateImagesFromFiles_req\
                    uest"
            text/xml:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromFiles request:
                  $ref: "#/components/examples/Successful_CreateImagesFromFiles_req\
                    uest"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Add the provided batch of images to the set of training images.
      tags:
        - ImageApi
  "/projects/{projectId}/images/id":
    get:
      description: "This API will return a set of Images for the specified tags and
        optionally iteration. If no iteration is specified the\r

        current workspace is used."
      operationId: GetImagesByIds
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetImagesByIds request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: The list of image ids to retrieve. Limited to 256.
          in: query
          name: imageIds
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              format: uuid
              type: string
              nullable: false
            minItems: 0
            maxItems: 256
        - description: The iteration id. Defaults to workspace.
          in: query
          name: iterationId
          required: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetImagesByIds request:
              value: cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
              examples:
                Successful GetImagesByIds request:
                  $ref: "#/components/examples/Successful_GetImagesByIds_request"
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
              examples:
                Successful GetImagesByIds request:
                  $ref: "#/components/examples/Successful_GetImagesByIds_request"
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
              examples:
                Successful GetImagesByIds request:
                  $ref: "#/components/examples/Successful_GetImagesByIds_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Get images by id for a given project iteration.
      tags:
        - ImageApi
  "/projects/{projectId}/images/predictions":
    post:
      description: This API creates a batch of images from predicted images specified.
        There is a limit of 64 images and 20 tags.
      operationId: CreateImagesFromPredictions
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful CreateImagesFromPredictions request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImageIdCreateBatch"
          application/xml:
            schema:
              $ref: "#/components/schemas/ImageIdCreateBatch"
          text/xml:
            schema:
              $ref: "#/components/schemas/ImageIdCreateBatch"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ImageIdCreateBatch"
        description: Image and tag ids. Limited to 64 images and 20 tags per batch.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromPredictions request:
                  $ref: "#/components/examples/Successful_CreateImagesFromPredictio\
                    ns_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromPredictions request:
                  $ref: "#/components/examples/Successful_CreateImagesFromPredictio\
                    ns_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromPredictions request:
                  $ref: "#/components/examples/Successful_CreateImagesFromPredictio\
                    ns_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Add the specified predicted images to the set of training images.
      tags:
        - ImageApi
  "/projects/{projectId}/images/regions":
    delete:
      operationId: DeleteImageRegions
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful DeleteImageRegions request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: Regions to delete. Limited to 64.
          in: query
          name: regionIds
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              format: uuid
              type: string
              nullable: false
            minItems: 0
            maxItems: 64
          examples:
            Successful DeleteImageRegions request:
              value:
                - ""
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "204":
          description: No Content
        default:
          description: Error response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Delete a set of image regions.
      tags:
        - ImageApi
    post:
      description: "This API accepts a batch of image regions, and optionally tags, to
        update existing images with region information.\r

        There is a limit of 64 entries in the batch."
      operationId: CreateImageRegions
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful CreateImageRegions request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImageRegionCreateBatch"
          application/xml:
            schema:
              $ref: "#/components/schemas/ImageRegionCreateBatch"
          text/xml:
            schema:
              $ref: "#/components/schemas/ImageRegionCreateBatch"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ImageRegionCreateBatch"
        description: Batch of image regions which include a tag and bounding box. Limited
          to 64.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageRegionCreateSummary"
              examples:
                Successful CreateImageRegions request:
                  $ref: "#/components/examples/Successful_CreateImageRegions_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/ImageRegionCreateSummary"
              examples:
                Successful CreateImageRegions request:
                  $ref: "#/components/examples/Successful_CreateImageRegions_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/ImageRegionCreateSummary"
              examples:
                Successful CreateImageRegions request:
                  $ref: "#/components/examples/Successful_CreateImageRegions_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Create a set of image regions.
      tags:
        - ImageApi
  "/projects/{projectId}/images/suggested":
    post:
      description: This API will fetch untagged images filtered by suggested tags Ids. It
        returns an empty array if no images are found.
      operationId: QuerySuggestedImages
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful QuerySuggestedImages request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: IterationId to use for the suggested tags and regions.
          in: query
          name: iterationId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful QuerySuggestedImages request:
              value: b7b9d99c-a2c6-4658-9900-a98d2ff5bc66
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SuggestedTagAndRegionQueryToken"
          application/xml:
            schema:
              $ref: "#/components/schemas/SuggestedTagAndRegionQueryToken"
          text/xml:
            schema:
              $ref: "#/components/schemas/SuggestedTagAndRegionQueryToken"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/SuggestedTagAndRegionQueryToken"
        description: Contains properties we need to query suggested images.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuggestedTagAndRegionQuery"
              examples:
                Successful QuerySuggestedImages request:
                  $ref: "#/components/examples/Successful_QuerySuggestedImages_requ\
                    est"
            application/xml:
              schema:
                $ref: "#/components/schemas/SuggestedTagAndRegionQuery"
              examples:
                Successful QuerySuggestedImages request:
                  $ref: "#/components/examples/Successful_QuerySuggestedImages_requ\
                    est"
            text/xml:
              schema:
                $ref: "#/components/schemas/SuggestedTagAndRegionQuery"
              examples:
                Successful QuerySuggestedImages request:
                  $ref: "#/components/examples/Successful_QuerySuggestedImages_requ\
                    est"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Get untagged images whose suggested tags match given tags. Returns empty
        array if no images are found.
      tags:
        - ImageApi
  "/projects/{projectId}/images/suggested/count":
    post:
      description: This API takes in tagIds to get count of untagged images per suggested
        tags for a given threshold.
      operationId: QuerySuggestedImageCount
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful QuerySuggestedImageCount request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: IterationId to use for the suggested tags and regions.
          in: query
          name: iterationId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful QuerySuggestedImageCount request:
              value: b7b9d99c-a2c6-4658-9900-a98d2ff5bc66
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagFilter"
          application/xml:
            schema:
              $ref: "#/components/schemas/TagFilter"
          text/xml:
            schema:
              $ref: "#/components/schemas/TagFilter"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/TagFilter"
        description: Model that contains tagIds, threshold and projectType to query by.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
              examples:
                Successful QuerySuggestedImageCount request:
                  $ref: "#/components/examples/Successful_QuerySuggestedImageCount_\
                    request"
            application/xml:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
              examples:
                Successful QuerySuggestedImageCount request:
                  $ref: "#/components/examples/Successful_QuerySuggestedImageCount_\
                    request"
            text/xml:
              schema:
                additionalProperties:
                  format: int32
                  type: integer
                type: object
              examples:
                Successful QuerySuggestedImageCount request:
                  $ref: "#/components/examples/Successful_QuerySuggestedImageCount_\
                    request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Get count of images whose suggested tags match given tags and their
        probabilities are greater than or equal to the given threshold. Returns
        count as 0 if none found.
      tags:
        - ImageApi
  "/projects/{projectId}/images/tagged":
    get:
      description: "This API supports batching and range selection. By default it will only
        return first 50 images matching images.\r

        Use the {take} and {skip} parameters to control how many images
        to return in a given batch.\r

        The filtering is on an and/or relationship. For example, if the
        provided tag ids are for the \"Dog\" and\r

        \"Cat\" tags, then only images tagged with Dog and/or Cat will
        be returned"
      operationId: GetTaggedImages
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetTaggedImages request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: The iteration id. Defaults to workspace.
          in: query
          name: iterationId
          required: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetTaggedImages request:
              value: cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
        - description: A list of tags ids to filter the images. Defaults to all tagged
            images when null. Limited to 20.
          in: query
          name: tagIds
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              format: uuid
              type: string
              nullable: false
            minItems: 0
            maxItems: 20
        - description: The ordering. Defaults to newest.
          in: query
          name: orderBy
          required: false
          schema:
            type: string
            enum:
              - Newest
              - Oldest
        - description: Maximum number of images to return. Defaults to 50, limited to 256.
          in: query
          name: take
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 256
            default: 50
        - description: Number of images to skip before beginning the image batch. Defaults
            to 0.
          in: query
          name: skip
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
              examples:
                Successful GetTaggedImages request:
                  $ref: "#/components/examples/Successful_GetTaggedImages_request"
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
              examples:
                Successful GetTaggedImages request:
                  $ref: "#/components/examples/Successful_GetTaggedImages_request"
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
              examples:
                Successful GetTaggedImages request:
                  $ref: "#/components/examples/Successful_GetTaggedImages_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Get tagged images for a given project iteration.
      tags:
        - ImageApi
  "/projects/{projectId}/images/tagged/count":
    get:
      description: "The filtering is on an and/or relationship. For example, if the
        provided tag ids are for the \"Dog\" and\r

        \"Cat\" tags, then only images tagged with Dog and/or Cat will
        be returned"
      operationId: GetTaggedImageCount
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetTaggedImageCount request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: The iteration id. Defaults to workspace.
          in: query
          name: iterationId
          required: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetTaggedImageCount request:
              value: cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
        - description: A list of tags ids to filter the images to count. Defaults to all
            tags when null.
          in: query
          name: tagIds
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              format: uuid
              type: string
              nullable: false
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                format: int32
                type: integer
              examples:
                Successful GetTaggedImageCount request:
                  $ref: "#/components/examples/Successful_GetTaggedImageCount_reque\
                    st"
            application/xml:
              schema:
                format: int32
                type: integer
              examples:
                Successful GetTaggedImageCount request:
                  $ref: "#/components/examples/Successful_GetTaggedImageCount_reque\
                    st"
            text/xml:
              schema:
                format: int32
                type: integer
              examples:
                Successful GetTaggedImageCount request:
                  $ref: "#/components/examples/Successful_GetTaggedImageCount_reque\
                    st"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Gets the number of images tagged with the provided {tagIds}.
      tags:
        - ImageApi
  "/projects/{projectId}/images/tags":
    delete:
      operationId: DeleteImageTags
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful DeleteImageTags request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: Image ids. Limited to 64 images.
          in: query
          name: imageIds
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              format: uuid
              type: string
              nullable: false
            minItems: 0
            maxItems: 64
          examples:
            Successful DeleteImageTags request:
              value:
                - e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
                - cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
        - description: Tags to be deleted from the specified images. Limited to 20 tags.
          in: query
          name: tagIds
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              format: uuid
              type: string
              nullable: false
            minItems: 0
            maxItems: 20
          examples:
            Successful DeleteImageTags request:
              value:
                - e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
                - cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "204":
          description: No Content
        default:
          description: Error response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Remove a set of tags from a set of images.
      tags:
        - ImageApi
    post:
      operationId: CreateImageTags
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful CreateImageTags request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImageTagCreateBatch"
          application/xml:
            schema:
              $ref: "#/components/schemas/ImageTagCreateBatch"
          text/xml:
            schema:
              $ref: "#/components/schemas/ImageTagCreateBatch"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ImageTagCreateBatch"
        description: Batch of image tags. Limited to 128 tags per batch.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageTagCreateSummary"
              examples:
                Successful CreateImageTags request:
                  $ref: "#/components/examples/Successful_CreateImageTags_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/ImageTagCreateSummary"
              examples:
                Successful CreateImageTags request:
                  $ref: "#/components/examples/Successful_CreateImageTags_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/ImageTagCreateSummary"
              examples:
                Successful CreateImageTags request:
                  $ref: "#/components/examples/Successful_CreateImageTags_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Associate a set of images with a set of tags.
      tags:
        - ImageApi
  "/projects/{projectId}/images/untagged":
    get:
      description: "This API supports batching and range selection. By default it will only
        return first 50 images matching images.\r

        Use the {take} and {skip} parameters to control how many images
        to return in a given batch."
      operationId: GetUntaggedImages
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetUntaggedImages request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: The iteration id. Defaults to workspace.
          in: query
          name: iterationId
          required: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetUntaggedImages request:
              value: cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
        - description: The ordering. Defaults to newest.
          in: query
          name: orderBy
          required: false
          schema:
            type: string
            enum:
              - Newest
              - Oldest
        - description: Maximum number of images to return. Defaults to 50, limited to 256.
          in: query
          name: take
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 256
            default: 50
        - description: Number of images to skip before beginning the image batch. Defaults
            to 0.
          in: query
          name: skip
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
              examples:
                Successful GetUntaggedImages request:
                  $ref: "#/components/examples/Successful_GetUntaggedImages_request"
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
              examples:
                Successful GetUntaggedImages request:
                  $ref: "#/components/examples/Successful_GetUntaggedImages_request"
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Image"
                type: array
              examples:
                Successful GetUntaggedImages request:
                  $ref: "#/components/examples/Successful_GetUntaggedImages_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Get untagged images for a given project iteration.
      tags:
        - ImageApi
  "/projects/{projectId}/images/untagged/count":
    get:
      description: "This API returns the images which have no tags for a given project and
        optionally an iteration. If no iteration is specified the\r

        current workspace is used."
      operationId: GetUntaggedImageCount
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetUntaggedImageCount request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: The iteration id. Defaults to workspace.
          in: query
          name: iterationId
          required: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetUntaggedImageCount request:
              value: cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                format: int32
                type: integer
              examples:
                Successful GetUntaggedImageCount request:
                  $ref: "#/components/examples/Successful_GetUntaggedImageCount_req\
                    uest"
            application/xml:
              schema:
                format: int32
                type: integer
              examples:
                Successful GetUntaggedImageCount request:
                  $ref: "#/components/examples/Successful_GetUntaggedImageCount_req\
                    uest"
            text/xml:
              schema:
                format: int32
                type: integer
              examples:
                Successful GetUntaggedImageCount request:
                  $ref: "#/components/examples/Successful_GetUntaggedImageCount_req\
                    uest"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Gets the number of untagged images.
      tags:
        - ImageApi
  "/projects/{projectId}/images/urls":
    post:
      description: This API accepts a batch of urls, and optionally tags, to create images.
        There is a limit of 64 images and 20 tags.
      operationId: CreateImagesFromUrls
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful CreateImagesFromUrls request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImageUrlCreateBatch"
          application/xml:
            schema:
              $ref: "#/components/schemas/ImageUrlCreateBatch"
          text/xml:
            schema:
              $ref: "#/components/schemas/ImageUrlCreateBatch"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ImageUrlCreateBatch"
        description: Image urls and tag ids. Limited to 64 images and 20 tags per batch.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromUrls request:
                  $ref: "#/components/examples/Successful_CreateImagesFromUrls_requ\
                    est"
            application/xml:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromUrls request:
                  $ref: "#/components/examples/Successful_CreateImagesFromUrls_requ\
                    est"
            text/xml:
              schema:
                $ref: "#/components/schemas/ImageCreateSummary"
              examples:
                Successful CreateImagesFromUrls request:
                  $ref: "#/components/examples/Successful_CreateImagesFromUrls_requ\
                    est"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Add the provided images urls to the set of training images.
      tags:
        - ImageApi
  "/projects/{projectId}/images/{imageId}/regionproposals":
    post:
      description: This API will get region proposals for an image along with confidences
        for the region. It returns an empty array if no proposals are found.
      operationId: GetImageRegionProposals
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetImageRegionProposals request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: The image id.
          in: path
          name: imageId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetImageRegionProposals request:
              value: 4d6eb844-42ee-42bc-bd6f-c32455ef07c9
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImageRegionProposal"
              examples:
                Successful GetImageRegionProposals request:
                  $ref: "#/components/examples/Successful_GetImageRegionProposals_r\
                    equest"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Get region proposals for an image. Returns empty array if no proposals
        are found.
      tags:
        - ImageRegionProposalApi
  "/projects/{projectId}/iterations":
    get:
      operationId: GetIterations
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetIterations request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Iteration"
                type: array
              examples:
                Successful GetIterations request:
                  $ref: "#/components/examples/Successful_GetIterations_request"
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Iteration"
                type: array
              examples:
                Successful GetIterations request:
                  $ref: "#/components/examples/Successful_GetIterations_request"
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Iteration"
                type: array
              examples:
                Successful GetIterations request:
                  $ref: "#/components/examples/Successful_GetIterations_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Get iterations for the project.
      tags:
        - ProjectApi
  "/projects/{projectId}/iterations/{iterationId}":
    delete:
      operationId: DeleteIteration
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful DeleteIteration request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: The iteration id.
          in: path
          name: iterationId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful DeleteIteration request:
              value: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "204":
          description: No Content
        default:
          description: Error response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Delete a specific iteration of a project.
      tags:
        - ProjectApi
    get:
      operationId: GetIteration
      parameters:
        - description: The id of the project the iteration belongs to.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetIteration request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: The id of the iteration to get.
          in: path
          name: iterationId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetIteration request:
              value: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Iteration"
              examples:
                Successful GetIteration request:
                  $ref: "#/components/examples/Successful_GetIteration_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/Iteration"
              examples:
                Successful GetIteration request:
                  $ref: "#/components/examples/Successful_GetIteration_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/Iteration"
              examples:
                Successful GetIteration request:
                  $ref: "#/components/examples/Successful_GetIteration_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Get a specific iteration.
      tags:
        - ProjectApi
    patch:
      operationId: UpdateIteration
      parameters:
        - description: Project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful UpdateIteration request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: Iteration id.
          in: path
          name: iterationId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful UpdateIteration request:
              value: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Iteration"
          application/xml:
            schema:
              $ref: "#/components/schemas/Iteration"
          text/xml:
            schema:
              $ref: "#/components/schemas/Iteration"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Iteration"
        description: The updated iteration model.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Iteration"
              examples:
                Successful UpdateIteration request:
                  $ref: "#/components/examples/Successful_UpdateIteration_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/Iteration"
              examples:
                Successful UpdateIteration request:
                  $ref: "#/components/examples/Successful_UpdateIteration_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/Iteration"
              examples:
                Successful UpdateIteration request:
                  $ref: "#/components/examples/Successful_UpdateIteration_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Update a specific iteration.
      tags:
        - ProjectApi
  "/projects/{projectId}/iterations/{iterationId}/export":
    get:
      operationId: GetExports
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetExports request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: The iteration id.
          in: path
          name: iterationId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetExports request:
              value: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Export"
                type: array
              examples:
                Successful GetExports request:
                  $ref: "#/components/examples/Successful_GetExports_request"
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Export"
                type: array
              examples:
                Successful GetExports request:
                  $ref: "#/components/examples/Successful_GetExports_request"
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Export"
                type: array
              examples:
                Successful GetExports request:
                  $ref: "#/components/examples/Successful_GetExports_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Get the list of exports for a specific iteration.
      tags:
        - ProjectApi
    post:
      operationId: ExportIteration
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful ExportIteration request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: The iteration id.
          in: path
          name: iterationId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful ExportIteration request:
              value: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
        - description: The target platform.
          in: query
          name: platform
          required: true
          schema:
            type: string
            enum:
              - CoreML
              - TensorFlow
              - DockerFile
              - ONNX
              - VAIDK
          examples:
            Successful ExportIteration request:
              value: TensorFlow
        - description: The flavor of the target platform.
          in: query
          name: flavor
          required: false
          schema:
            type: string
            enum:
              - Linux
              - Windows
              - ONNX10
              - ONNX12
              - ARM
              - TensorFlowNormal
              - TensorFlowLite
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Export"
              examples:
                Successful ExportIteration request:
                  $ref: "#/components/examples/Successful_ExportIteration_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/Export"
              examples:
                Successful ExportIteration request:
                  $ref: "#/components/examples/Successful_ExportIteration_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/Export"
              examples:
                Successful ExportIteration request:
                  $ref: "#/components/examples/Successful_ExportIteration_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Export a trained iteration.
      tags:
        - ProjectApi
  "/projects/{projectId}/iterations/{iterationId}/performance":
    get:
      operationId: GetIterationPerformance
      parameters:
        - description: The id of the project the iteration belongs to.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetIterationPerformance request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: The id of the iteration to get.
          in: path
          name: iterationId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetIterationPerformance request:
              value: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
        - description: The threshold used to determine true predictions.
          in: query
          name: threshold
          required: false
          schema:
            type: number
            format: float
          examples:
            Successful GetIterationPerformance request:
              value: 0.9
        - description: If applicable, the bounding box overlap threshold used to determine
            true predictions.
          in: query
          name: overlapThreshold
          required: false
          schema:
            type: number
            format: float
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IterationPerformance"
              examples:
                Successful GetIterationPerformance request:
                  $ref: "#/components/examples/Successful_GetIterationPerformance_r\
                    equest"
            application/xml:
              schema:
                $ref: "#/components/schemas/IterationPerformance"
              examples:
                Successful GetIterationPerformance request:
                  $ref: "#/components/examples/Successful_GetIterationPerformance_r\
                    equest"
            text/xml:
              schema:
                $ref: "#/components/schemas/IterationPerformance"
              examples:
                Successful GetIterationPerformance request:
                  $ref: "#/components/examples/Successful_GetIterationPerformance_r\
                    equest"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Get detailed performance information about an iteration.
      tags:
        - ProjectApi
  "/projects/{projectId}/iterations/{iterationId}/performance/images":
    get:
      description: "This API supports batching and range selection. By default it will only
        return first 50 images matching images.\r

        Use the {take} and {skip} parameters to control how many images
        to return in a given batch.\r

        The filtering is on an and/or relationship. For example, if the
        provided tag ids are for the \"Dog\" and\r

        \"Cat\" tags, then only images tagged with Dog and/or Cat will
        be returned"
      operationId: GetImagePerformances
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetImagePerformances request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: The iteration id. Defaults to workspace.
          in: path
          name: iterationId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetImagePerformances request:
              value: b7b9d99c-a2c6-4658-9900-a98d2ff5bc66
        - description: A list of tags ids to filter the images. Defaults to all tagged
            images when null. Limited to 20.
          in: query
          name: tagIds
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              format: uuid
              type: string
              nullable: false
            minItems: 0
            maxItems: 20
          examples:
            Successful GetImagePerformances request:
              value:
                - ""
        - description: The ordering. Defaults to newest.
          in: query
          name: orderBy
          required: false
          schema:
            type: string
            enum:
              - Newest
              - Oldest
          examples:
            Successful GetImagePerformances request:
              value: Newest
        - description: Maximum number of images to return. Defaults to 50, limited to 256.
          in: query
          name: take
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 256
            default: 50
        - description: Number of images to skip before beginning the image batch. Defaults
            to 0.
          in: query
          name: skip
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ImagePerformance"
                type: array
              examples:
                Successful GetImagePerformances request:
                  $ref: "#/components/examples/Successful_GetImagePerformances_requ\
                    est"
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/ImagePerformance"
                type: array
              examples:
                Successful GetImagePerformances request:
                  $ref: "#/components/examples/Successful_GetImagePerformances_requ\
                    est"
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/ImagePerformance"
                type: array
              examples:
                Successful GetImagePerformances request:
                  $ref: "#/components/examples/Successful_GetImagePerformances_requ\
                    est"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Get image with its prediction for a given project iteration.
      tags:
        - ProjectApi
  "/projects/{projectId}/iterations/{iterationId}/performance/images/count":
    get:
      description: "The filtering is on an and/or relationship. For example, if the
        provided tag ids are for the \"Dog\" and\r

        \"Cat\" tags, then only images tagged with Dog and/or Cat will
        be returned"
      operationId: GetImagePerformanceCount
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetImagePerformanceCount request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: The iteration id. Defaults to workspace.
          in: path
          name: iterationId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetImagePerformanceCount request:
              value: cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
        - description: A list of tags ids to filter the images to count. Defaults to all
            tags when null.
          in: query
          name: tagIds
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              format: uuid
              type: string
              nullable: false
          examples:
            Successful GetImagePerformanceCount request:
              value:
                - b5f7e6a2-a481-49a6-afec-a7cef1af3544
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                format: int32
                type: integer
              examples:
                Successful GetImagePerformanceCount request:
                  $ref: "#/components/examples/Successful_GetImagePerformanceCount_\
                    request"
            application/xml:
              schema:
                format: int32
                type: integer
              examples:
                Successful GetImagePerformanceCount request:
                  $ref: "#/components/examples/Successful_GetImagePerformanceCount_\
                    request"
            text/xml:
              schema:
                format: int32
                type: integer
              examples:
                Successful GetImagePerformanceCount request:
                  $ref: "#/components/examples/Successful_GetImagePerformanceCount_\
                    request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: "Gets the number of images tagged with the provided {tagIds} that have
        prediction results from\r

        training for the provided iteration {iterationId}."
      tags:
        - ProjectApi
  "/projects/{projectId}/iterations/{iterationId}/publish":
    delete:
      operationId: UnpublishIteration
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful UnpublishIteration request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: The iteration id.
          in: path
          name: iterationId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful UnpublishIteration request:
              value: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "204":
          description: No Content
        default:
          description: Error response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Unpublish a specific iteration.
      tags:
        - ProjectApi
    post:
      operationId: PublishIteration
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful PublishIteration request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: The iteration id.
          in: path
          name: iterationId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful PublishIteration request:
              value: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
        - description: The name to give the published iteration.
          in: query
          name: publishName
          required: true
          schema:
            type: string
          examples:
            Successful PublishIteration request:
              value: Model1
        - description: The id of the prediction resource to publish to.
          in: query
          name: predictionId
          required: true
          schema:
            type: string
          examples:
            Successful PublishIteration request:
              value: /subscriptions/{subscription}/resourceGroups/{resource group
                name}/providers/Microsoft.CognitiveServices/accounts/{resource
                name}
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
              examples:
                Successful PublishIteration request:
                  $ref: "#/components/examples/Successful_PublishIteration_request"
            application/xml:
              schema:
                type: boolean
              examples:
                Successful PublishIteration request:
                  $ref: "#/components/examples/Successful_PublishIteration_request"
            text/xml:
              schema:
                type: boolean
              examples:
                Successful PublishIteration request:
                  $ref: "#/components/examples/Successful_PublishIteration_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Publish a specific iteration.
      tags:
        - ProjectApi
  "/projects/{projectId}/predictions":
    delete:
      operationId: DeletePrediction
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful DeletePrediction request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: The prediction ids. Limited to 64.
          in: query
          name: ids
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              format: uuid
              type: string
              nullable: false
            minItems: 0
            maxItems: 64
          examples:
            Successful DeletePrediction request:
              value:
                - e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
                - cf0f83fb-ebaa-4b25-8e34-613a6a0b8a12
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "204":
          description: No Content
        default:
          description: Error response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Delete a set of predicted images and their associated prediction results.
      tags:
        - PredictionsApi
  "/projects/{projectId}/predictions/query":
    post:
      operationId: QueryPredictions
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful QueryPredictions request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PredictionQueryToken"
          application/xml:
            schema:
              $ref: "#/components/schemas/PredictionQueryToken"
          text/xml:
            schema:
              $ref: "#/components/schemas/PredictionQueryToken"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PredictionQueryToken"
        description: Parameters used to query the predictions. Limited to combining 2 tags.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PredictionQueryResult"
              examples:
                Successful QueryPredictions request:
                  $ref: "#/components/examples/Successful_QueryPredictions_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/PredictionQueryResult"
              examples:
                Successful QueryPredictions request:
                  $ref: "#/components/examples/Successful_QueryPredictions_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/PredictionQueryResult"
              examples:
                Successful QueryPredictions request:
                  $ref: "#/components/examples/Successful_QueryPredictions_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Get images that were sent to your prediction endpoint.
      tags:
        - PredictionsApi
  "/projects/{projectId}/quicktest/image":
    post:
      operationId: QuickTestImage
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful QuickTestImage request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: "Optional. Specifies the id of a particular iteration to evaluate
            against.\r

            \            The default iteration for the project will
            be used when not specified."
          in: query
          name: iterationId
          required: false
          schema:
            type: string
            format: uuid
          examples:
            Successful QuickTestImage request:
              value: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
        - description: Optional. Specifies whether or not to store the result of this
            prediction. The default is true, to store.
          in: query
          name: store
          required: false
          schema:
            type: boolean
            default: true
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        $ref: "#/components/requestBodies/CreateImagesFromData"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImagePrediction"
              examples:
                Successful QuickTestImage request:
                  $ref: "#/components/examples/Successful_QuickTestImage_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/ImagePrediction"
              examples:
                Successful QuickTestImage request:
                  $ref: "#/components/examples/Successful_QuickTestImage_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/ImagePrediction"
              examples:
                Successful QuickTestImage request:
                  $ref: "#/components/examples/Successful_QuickTestImage_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Quick test an image.
      tags:
        - PredictionsApi
  "/projects/{projectId}/quicktest/url":
    post:
      operationId: QuickTestImageUrl
      parameters:
        - description: The project to evaluate against.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful QuickTestImageUrl request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: "Optional. Specifies the id of a particular iteration to evaluate
            against.\r

            \            The default iteration for the project will
            be used when not specified."
          in: query
          name: iterationId
          required: false
          schema:
            type: string
            format: uuid
          examples:
            Successful QuickTestImageUrl request:
              value: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
        - description: Optional. Specifies whether or not to store the result of this
            prediction. The default is true, to store.
          in: query
          name: store
          required: false
          schema:
            type: boolean
            default: true
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImageUrl"
          application/xml:
            schema:
              $ref: "#/components/schemas/ImageUrl"
          text/xml:
            schema:
              $ref: "#/components/schemas/ImageUrl"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ImageUrl"
        description: An ImageUrl that contains the url of the image to be evaluated.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImagePrediction"
              examples:
                Successful QuickTestImageUrl request:
                  $ref: "#/components/examples/Successful_QuickTestImageUrl_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/ImagePrediction"
              examples:
                Successful QuickTestImageUrl request:
                  $ref: "#/components/examples/Successful_QuickTestImageUrl_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/ImagePrediction"
              examples:
                Successful QuickTestImageUrl request:
                  $ref: "#/components/examples/Successful_QuickTestImageUrl_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Quick test an image url.
      tags:
        - PredictionsApi
  "/projects/{projectId}/tags":
    get:
      operationId: GetTags
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetTags request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: The iteration id. Defaults to workspace.
          in: query
          name: iterationId
          required: false
          schema:
            type: string
            format: uuid
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Tag"
                type: array
              examples:
                Successful GetTags request:
                  $ref: "#/components/examples/Successful_GetTags_request"
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Tag"
                type: array
              examples:
                Successful GetTags request:
                  $ref: "#/components/examples/Successful_GetTags_request"
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Tag"
                type: array
              examples:
                Successful GetTags request:
                  $ref: "#/components/examples/Successful_GetTags_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Get the tags for a given project and iteration.
      tags:
        - TagsApi
    post:
      operationId: CreateTag
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful CreateTag request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: The tag name.
          in: query
          name: name
          required: true
          schema:
            type: string
          examples:
            Successful CreateTag request:
              value: Tag1
        - description: Optional description for the tag.
          in: query
          name: description
          required: false
          schema:
            type: string
          examples:
            Successful CreateTag request:
              value: Description of Tag1
        - description: Optional type for the tag.
          in: query
          name: type
          required: false
          schema:
            type: string
            enum:
              - Regular
              - Negative
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
              examples:
                Successful CreateTag request:
                  $ref: "#/components/examples/Successful_CreateTag_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/Tag"
              examples:
                Successful CreateTag request:
                  $ref: "#/components/examples/Successful_CreateTag_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/Tag"
              examples:
                Successful CreateTag request:
                  $ref: "#/components/examples/Successful_CreateTag_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Create a tag for the project.
      tags:
        - TagsApi
  "/projects/{projectId}/tags/{tagId}":
    delete:
      operationId: DeleteTag
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful DeleteTag request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: Id of the tag to be deleted.
          in: path
          name: tagId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful DeleteTag request:
              value: 9e27bc1b-7ae7-4e3b-a4e5-36153479dc01
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "204":
          description: No Content
        default:
          description: Error response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Delete a tag from the project.
      tags:
        - TagsApi
    get:
      operationId: GetTag
      parameters:
        - description: The project this tag belongs to.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetTag request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: The tag id.
          in: path
          name: tagId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful GetTag request:
              value: 9e27bc1b-7ae7-4e3b-a4e5-36153479dc01
        - description: The iteration to retrieve this tag from. Optional, defaults to
            current training set.
          in: query
          name: iterationId
          required: false
          schema:
            type: string
            format: uuid
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
              examples:
                Successful GetTag request:
                  $ref: "#/components/examples/Successful_GetTag_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/Tag"
              examples:
                Successful GetTag request:
                  $ref: "#/components/examples/Successful_GetTag_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/Tag"
              examples:
                Successful GetTag request:
                  $ref: "#/components/examples/Successful_GetTag_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Get information about a specific tag.
      tags:
        - TagsApi
    patch:
      operationId: UpdateTag
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful UpdateTag request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: The id of the target tag.
          in: path
          name: tagId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful UpdateTag request:
              value: 9e27bc1b-7ae7-4e3b-a4e5-36153479dc01
        - $ref: "#/components/parameters/ApiKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Tag"
          application/xml:
            schema:
              $ref: "#/components/schemas/Tag"
          text/xml:
            schema:
              $ref: "#/components/schemas/Tag"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Tag"
        description: The updated tag model.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tag"
              examples:
                Successful UpdateTag request:
                  $ref: "#/components/examples/Successful_UpdateTag_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/Tag"
              examples:
                Successful UpdateTag request:
                  $ref: "#/components/examples/Successful_UpdateTag_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/Tag"
              examples:
                Successful UpdateTag request:
                  $ref: "#/components/examples/Successful_UpdateTag_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Update a tag.
      tags:
        - TagsApi
  "/projects/{projectId}/tagsandregions/suggestions":
    post:
      description: "This API will get suggested tags and regions for an array/batch of
        untagged images along with confidences for the tags. It returns an empty
        array if no tags are found.\r

        There is a limit of 64 images in the batch."
      operationId: SuggestTagsAndRegions
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful SuggestTagsAndRegions request:
              value: bc3f7dad-5544-468c-8573-3ef04d55463e
        - description: IterationId to use for tag and region suggestion.
          in: query
          name: iterationId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful SuggestTagsAndRegions request:
              value: 4d6eb844-42ee-42bc-bd6f-c32455ef07c9
        - description: Array of image ids tag suggestion are needed for. Use
            GetUntaggedImages API to get imageIds.
          in: query
          name: imageIds
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              format: uuid
              type: string
              nullable: false
            minItems: 0
            maxItems: 64
          examples:
            Successful SuggestTagsAndRegions request:
              value:
                - e7f08c23-9e54-49f7-b609-69a0240ba306
                - ce632666-4b66-4adb-aa0a-ad8b7c32df06
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SuggestedTagAndRegion"
                type: array
              examples:
                Successful SuggestTagsAndRegions request:
                  $ref: "#/components/examples/Successful_SuggestTagsAndRegions_req\
                    uest"
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/SuggestedTagAndRegion"
                type: array
              examples:
                Successful SuggestTagsAndRegions request:
                  $ref: "#/components/examples/Successful_SuggestTagsAndRegions_req\
                    uest"
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/SuggestedTagAndRegion"
                type: array
              examples:
                Successful SuggestTagsAndRegions request:
                  $ref: "#/components/examples/Successful_SuggestTagsAndRegions_req\
                    uest"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Suggest tags and regions for an array/batch of untagged images. Returns
        empty array if no tags are found.
      tags:
        - SuggestTagsAndRegionsApi
  "/projects/{projectId}/train":
    post:
      operationId: TrainProject
      parameters:
        - description: The project id.
          in: path
          name: projectId
          required: true
          x-nullable: false
          schema:
            type: string
            format: uuid
          examples:
            Successful TrainProject request:
              value: 64b822c5-8082-4b36-a426-27225f4aa18c
        - description: "The type of training to use to train the project (default:
            Regular)."
          in: query
          name: trainingType
          required: false
          schema:
            type: string
            enum:
              - Regular
              - Advanced
        - description: The number of hours reserved as budget for training (if applicable).
          in: query
          name: reservedBudgetInHours
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - description: "Whether to force train even if dataset and configuration does not
            change (default: false)."
          in: query
          name: forceTrain
          required: false
          schema:
            type: boolean
            default: false
        - description: "The email address to send notification to when training finishes
            (default: null)."
          in: query
          name: notificationEmailAddress
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/ApiKey"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Iteration"
              examples:
                Successful TrainProject request:
                  $ref: "#/components/examples/Successful_TrainProject_request"
            application/xml:
              schema:
                $ref: "#/components/schemas/Iteration"
              examples:
                Successful TrainProject request:
                  $ref: "#/components/examples/Successful_TrainProject_request"
            text/xml:
              schema:
                $ref: "#/components/schemas/Iteration"
              examples:
                Successful TrainProject request:
                  $ref: "#/components/examples/Successful_TrainProject_request"
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            application/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
            text/xml:
              schema:
                $ref: "#/components/schemas/CustomVisionError"
      summary: Queues project for training.
      tags:
        - ProjectApi
servers:
  - url: https://southcentralus.api.cognitive.microsoft.com/customvision/v3.1/training
  - url: "{Endpoint}/customvision/v3.1/training"
    variables:
      Endpoint:
        description: Supported Cognitive Services endpoints.
        x-ms-parameter-location: client
        x-ms-skip-url-encoding: true
        default: ""
components:
  examples:
    Successful_GetDomains_request:
      value:
        - enabled: true
          exportable: false
          id: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
          name: General
          type: Classification
        - enabled: true
          exportable: false
          id: c151d5b5-dd07-472a-acc8-15d29dea8518
          name: Food
          type: Classification
        - enabled: true
          exportable: false
          id: ca455789-012d-4b50-9fec-5bb63841c793
          name: Landmarks
          type: Classification
        - enabled: true
          exportable: false
          id: b30a91ae-e3c1-4f73-a81e-c270bff27c39
          name: Retail
          type: Classification
        - enabled: true
          exportable: false
          id: 45badf75-3591-4f26-a705-45678d3e9f5f
          name: Adult
          type: Classification
        - enabled: true
          exportable: false
          id: 0732100f-1a38-4e49-a514-c9b44c697ab5
          name: General (compact)
          type: Classification
        - enabled: true
          exportable: false
          id: b5cfd229-2ac7-4b2b-8d0a-2b0661344894
          name: Landmarks (compact)
          type: Classification
        - enabled: true
          exportable: false
          id: 6b4faeda-8396-481b-9f8b-177b9fa3097f
          name: Retail (compact)
          type: Classification
    Successful_GetDomain_request:
      value:
        enabled: true
        exportable: false
        id: b30a91ae-e3c1-4f73-a81e-c270bff27c39
        name: Retail
        type: Classification
    Successful_GetProjects_request:
      value:
        - created: 2017-12-18T05:43:18Z
          description: ""
          id: bc3f7dad-5544-468c-8573-3ef04d55463e
          lastModified: 2017-12-18T05:43:18Z
          name: My New Project
          settings:
            domainId: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
          thumbnailUri: ""
    Successful_CreateProject_request:
      value:
        created: 2017-12-18T05:43:18Z
        description: A test project
        id: bc3f7dad-5544-468c-8573-3ef04d55463e
        lastModified: 2017-12-18T05:43:18Z
        name: My New Project
        settings:
          domainId: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
        thumbnailUri: ""
    Successful_GetProject_request:
      value:
        created: 2017-12-18T05:43:18Z
        description: A test project
        id: bc3f7dad-5544-468c-8573-3ef04d55463e
        lastModified: 2017-12-18T05:43:18Z
        name: My New Project
        settings:
          domainId: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
        thumbnailUri: ""
    Successful_UpdateProject_request:
      value:
        created: 2017-12-18T05:43:18Z
        description: A new Description
        id: bc3f7dad-5544-468c-8573-3ef04d55463e
        lastModified: 2017-12-18T05:43:19Z
        name: New Project Name
        settings:
          domainId: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
        thumbnailUri: ""
    Successful_CreateImagesFromData_request:
      value:
        images:
          - image:
              created: 2017-12-19T15:56:10Z
              height: 900
              id: 4d6eb844-42ee-42bc-bd6f-c32455ef07c9
              originalImageUri: "{Image Uri}"
              resizedImageUri: "{Resized Image Uri}"
              tags:
                - created: 2017-12-19T15:56:09Z
                  tagId: b607964f-7bd6-4a3b-a869-6791fb6aab87
                  tagName: tag 1
              thumbnailUri: "{Thumbnail Uri}"
              width: 1095
            sourceUrl: '"hemlock_10.jpg"'
            status: OK
          - image:
              created: 2017-12-19T15:56:10Z
              height: 1531
              id: f1855a92-b873-47e7-b513-f07a667ceda1
              originalImageUri: "{Image Uri}"
              resizedImageUri: "{Resized Image Uri}"
              tags:
                - created: 2017-12-19T15:56:09Z
                  tagId: b607964f-7bd6-4a3b-a869-6791fb6aab87
                  tagName: tag 1
              thumbnailUri: "{Thumbnail Uri}"
              width: 900
            sourceUrl: '"hemlock_6.jpg"'
            status: OK
        isBatchSuccessful: true
    Successful_CreateImagesFromFiles_request:
      value:
        images:
          - image:
              created: 2017-12-19T15:56:10Z
              height: 900
              id: 4d6eb844-42ee-42bc-bd6f-c32455ef07c9
              originalImageUri: "{Image Uri}"
              resizedImageUri: "{Resized Image Uri}"
              tags:
                - created: 2017-12-19T15:56:09Z
                  tagId: b607964f-7bd6-4a3b-a869-6791fb6aab87
                  tagName: tag 1
              thumbnailUri: "{Thumbnail Uri}"
              width: 1095
            sourceUrl: '"hemlock_10.jpg"'
            status: OK
        isBatchSuccessful: true
    Successful_GetImagesByIds_request:
      value: []
    Successful_CreateImagesFromPredictions_request:
      value:
        images:
          - image:
              created: 2017-12-19T15:56:10Z
              height: 900
              id: 4d6eb844-42ee-42bc-bd6f-c32455ef07c9
              originalImageUri: "{Image Uri}"
              resizedImageUri: "{Resized Image Uri}"
              tags:
                - created: 2017-12-19T15:56:09Z
                  tagId: b607964f-7bd6-4a3b-a869-6791fb6aab87
                  tagName: tag 1
              thumbnailUri: "{Thumbnail Uri}"
              width: 1095
            sourceUrl: '"hemlock_10.jpg"'
            status: OK
        isBatchSuccessful: true
    Successful_CreateImageRegions_request:
      value:
        created: []
        duplicated: []
        exceeded: []
    Successful_QuerySuggestedImages_request:
      value:
        results:
          - created: 2018-01-31T20:18:26Z
            domain: b30a91ae-e3c1-4f73-a81e-c270bff27c39
            id: dfd2d346-3ed5-4e1e-857d-af4e32cec042
            iteration: b7b9d99c-a2c6-4658-9900-a98d2ff5bc66
            originalImageUri: <image uri>
            predictions:
              - probability: 1
                tagId: b5f7e6a2-a481-49a6-afec-a7cef1af3544
                tagName: Tag 1
              - probability: 3.60627153e-12
                tagId: 45619cda-d1c9-4bc8-a3e1-87c5d81adbc3
                tagName: Tag 2
            project: 8988643a-ae70-447d-9a22-15c4255e5ecb
            resizedImageUri: <resized image uri>
            thumbnailUri: <thumbnail uri>
        token:
          continuation: ""
          maxCount: 0
          session: 1:286613
          sortBy: Newest
          tagIds:
            - b5f7e6a2-a481-49a6-afec-a7cef1af3544
    Successful_QuerySuggestedImageCount_request:
      value:
        b5f7e6a2-a481-49a6-afec-a7cef1af3544: 1
    Successful_GetTaggedImages_request:
      value: []
    Successful_GetTaggedImageCount_request:
      value: "10"
    Successful_CreateImageTags_request:
      value:
        created:
          - imageId: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
            tagId: 349d72ac-0948-4d51-b1e4-c14a1f9b848a
    Successful_GetUntaggedImages_request:
      value: []
    Successful_GetUntaggedImageCount_request:
      value: "10"
    Successful_CreateImagesFromUrls_request:
      value:
        images:
          - image:
              created: 2017-12-19T15:56:10Z
              height: 900
              id: 4d6eb844-42ee-42bc-bd6f-c32455ef07c9
              originalImageUri: "{Image Uri}"
              resizedImageUri: "{Resized Image Uri}"
              tags:
                - created: 2017-12-19T15:56:09Z
                  tagId: b607964f-7bd6-4a3b-a869-6791fb6aab87
                  tagName: tag name
              thumbnailUri: "{Thumbnail Uri}"
              width: 1095
            sourceUrl: "{url to image}"
            status: OK
        isBatchSuccessful: true
    Successful_GetImageRegionProposals_request:
      value:
        imageId: 4d6eb844-42ee-42bc-bd6f-c32455ef07c9
        projectId: bc3f7dad-5544-468c-8573-3ef04d55463e
        proposals:
          - boundingBox:
              height: 0.25
              left: 0.25
              top: 0.25
              width: 0.25
            confidence: 0.25
    Successful_GetIterations_request:
      value:
        - created: 2017-12-18T22:40:29Z
          domainId: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
          exportable: false
          exportableTo:
            - ONNX
            - DockerFile
            - TensorFlow
            - CoreML
          id: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
          lastModified: 2017-12-18T22:40:41Z
          name: Iteration 1
          projectId: 64b822c5-8082-4b36-a426-27225f4aa18c
          publishName: ""
          reservedBudgetInHours: 0
          status: Completed
          trainedAt: 2017-12-18T22:40:41Z
          trainingType: Regular
        - created: 2017-12-18T22:40:36Z
          domainId: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
          exportable: false
          exportableTo:
            - ONNX
            - DockerFile
            - TensorFlow
            - CoreML
          id: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
          lastModified: 2017-12-19T15:47:02Z
          name: Iteration 2
          projectId: 64b822c5-8082-4b36-a426-27225f4aa18c
          publishName: model1
          reservedBudgetInHours: 5
          status: Completed
          trainedAt: 2017-12-19T15:47:02Z
          trainingType: Regular
        - created: 2017-12-19T15:46:59Z
          exportable: false
          exportableTo:
            - ONNX
            - DockerFile
            - TensorFlow
            - CoreML
          id: 3adaf7b2-18fc-4376-9da4-b5ea160a7cf5
          lastModified: 2017-12-19T15:46:59Z
          name: Iteration 3
          projectId: 64b822c5-8082-4b36-a426-27225f4aa18c
          publishName: ""
          reservedBudgetInHours: 0
          status: New
          trainingType: Regular
    Successful_GetIteration_request:
      value:
        created: 2017-12-18T22:40:36Z
        domainId: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
        exportable: false
        exportableTo:
          - ONNX
          - DockerFile
          - TensorFlow
          - CoreML
        id: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
        lastModified: 2017-12-19T15:47:02Z
        name: Iteration 2
        projectId: 64b822c5-8082-4b36-a426-27225f4aa18c
        publishName: ""
        reservedBudgetInHours: 0
        status: Completed
        trainedAt: 2017-12-19T15:47:02Z
        trainingType: Regular
    Successful_UpdateIteration_request:
      value:
        created: 2017-12-18T22:40:36Z
        domainId: ee85a74c-405e-4adc-bb47-ffa8ca0c9f31
        exportable: false
        exportableTo:
          - ONNX
          - DockerFile
          - TensorFlow
          - CoreML
        id: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
        lastModified: 2017-12-19T15:53:07Z
        name: Best Iteration
        projectId: 64b822c5-8082-4b36-a426-27225f4aa18c
        publishName: ""
        reservedBudgetInHours: 0
        status: Completed
        trainedAt: 2017-12-19T15:47:02Z
        trainingType: Regular
    Successful_GetExports_request:
      value:
        - downloadUri: "{Download URI}"
          newerVersionAvailable: false
          platform: TensorFlow
          status: Done
    Successful_ExportIteration_request:
      value:
        downloadUri: ""
        newerVersionAvailable: false
        platform: TensorFlow
        status: Exporting
    Successful_GetIterationPerformance_request:
      value:
        perTagPerformance:
          - id: e31ff107-5505-4753-be42-b369b21b026c
            name: Hemlock
            precision: 1
            precisionStdDeviation: 0
            recall: 1
            recallStdDeviation: 0
          - id: 349d72ac-0948-4d51-b1e4-c14a1f9b848a
            name: Japanese Cherry
            precision: 1
            precisionStdDeviation: 0
            recall: 1
            recallStdDeviation: 0
        precision: 1
        precisionStdDeviation: 0
        recall: 1
        recallStdDeviation: 0
    Successful_GetImagePerformances_request:
      value:
        - created: 2018-01-31T20:18:26Z
          height: 1600
          id: dfd2d346-3ed5-4e1e-857d-af4e32cec042
          imageUri: <image uri>
          predictions:
            - boundingBox:
                height: 0.25
                left: 0.25
                top: 0.25
                width: 0.25
              probability: 1
              tagId: b5f7e6a2-a481-49a6-afec-a7cef1af3544
              tagName: Tag 1
          regions: []
          tags: []
          thumbnailUri: <thumbnail uri>
          width: 600
    Successful_GetImagePerformanceCount_request:
      value: "1"
    Successful_PublishIteration_request:
      value: true
    Successful_QueryPredictions_request:
      value:
        results:
          - created: 2018-01-31T20:18:26Z
            domain: b30a91ae-e3c1-4f73-a81e-c270bff27c39
            id: dfd2d346-3ed5-4e1e-857d-af4e32cec042
            iteration: b7b9d99c-a2c6-4658-9900-a98d2ff5bc66
            originalImageUri: <image uri>
            predictions:
              - probability: 1
                tagId: b5f7e6a2-a481-49a6-afec-a7cef1af3544
                tagName: Tag 1
              - probability: 3.60627153e-12
                tagId: 45619cda-d1c9-4bc8-a3e1-87c5d81adbc3
                tagName: Tag 2
            project: 8988643a-ae70-447d-9a22-15c4255e5ecb
            resizedImageUri: <resized image uri>
            thumbnailUri: <thumbnail uri>
        token:
          application: ""
          continuation: ""
          maxCount: 0
          orderBy: Newest
          session: 1:286613
          tags:
            - id: b5f7e6a2-a481-49a6-afec-a7cef1af3544
              maxThreshold: 1
              minThreshold: 0.9
    Successful_QuickTestImage_request:
      value:
        created: 2017-12-19T14:21:41Z
        id: 951098b2-9b69-427b-bddb-d5cb618874e3
        iteration: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
        predictions:
          - probability: 0.05149666
            tagId: e31ff107-5505-4753-be42-b369b21b026c
            tagName: Hemlock
          - probability: 0
            tagId: 349d72ac-0948-4d51-b1e4-c14a1f9b848a
            tagName: Japanese Cherry
        project: 64b822c5-8082-4b36-a426-27225f4aa18c
    Successful_QuickTestImageUrl_request:
      value:
        created: 2017-12-19T14:21:41Z
        id: 951098b2-9b69-427b-bddb-d5cb618874e3
        iteration: fe1e83c4-6f50-4899-9544-6bb08cf0e15a
        predictions:
          - probability: 0.05149666
            tagId: e31ff107-5505-4753-be42-b369b21b026c
            tagName: Hemlock
          - probability: 0
            tagId: 349d72ac-0948-4d51-b1e4-c14a1f9b848a
            tagName: Japanese Cherry
        project: 64b822c5-8082-4b36-a426-27225f4aa18c
    Successful_GetTags_request:
      value:
        - description: Description of Tag1
          id: 9e27bc1b-7ae7-4e3b-a4e5-36153479dc01
          imageCount: 0
          name: Tag1
          type: Regular
    Successful_CreateTag_request:
      value:
        description: Description of Tag1
        id: 9e27bc1b-7ae7-4e3b-a4e5-36153479dc01
        imageCount: 0
        name: Tag1
        type: Regular
    Successful_GetTag_request:
      value:
        description: Description of Tag1
        id: 9e27bc1b-7ae7-4e3b-a4e5-36153479dc01
        imageCount: 0
        name: Tag1
        type: Regular
    Successful_UpdateTag_request:
      value:
        description: Better description
        id: 9e27bc1b-7ae7-4e3b-a4e5-36153479dc01
        imageCount: 0
        name: Better Tag Name
        type: Regular
    Successful_SuggestTagsAndRegions_request:
      value:
        - created: 2019-07-08T13:43:18Z
          id: 8497e814-23cc-47d7-b24b-691cef0bcec9
          iteration: ce271ee4-cc13-460f-b66f-993f8005522d
          predictionUncertainty: 0.32
          predictions:
            - probability: 1
              tagId: b5f7e6a2-a481-49a6-afec-a7cef1af3544
              tagName: Tag 1
            - probability: 3.60627153e-12
              tagId: 45619cda-d1c9-4bc8-a3e1-87c5d81adbc3
              tagName: Tag 2
          project: bc3f7dad-5544-468c-8573-3ef04d55463e
    Successful_TrainProject_request:
      value:
        created: 2017-12-18T22:40:36Z
        exportable: false
        exportableTo:
          - ONNX
          - DockerFile
          - TensorFlow
          - CoreML
        id: e31a14ab-5d78-4f7b-a267-3a1e4fd8a758
        lastModified: 2017-12-19T15:46:58Z
        name: Iteration 2
        projectId: 64b822c5-8082-4b36-a426-27225f4aa18c
        publishName: ""
        reservedBudgetInHours: 0
        status: Training
        trainingType: Regular
  parameters:
    ApiKey:
      description: API key.
      in: header
      name: Training-Key
      required: true
      x-ms-client-name: ApiKey
      x-ms-parameter-location: client
      schema:
        type: string
      examples:
        Successful GetDomains request:
          value: "{API Key}"
        Successful GetDomain request:
          value: "{API Key}"
        Successful GetProjects request:
          value: "{API Key}"
        Successful CreateProject request:
          value: "{API Key}"
        Successful DeleteProject request:
          value: "{API Key}"
        Successful GetProject request:
          value: "{API Key}"
        Successful UpdateProject request:
          value: "{API Key}"
        Successful DeleteImages request:
          value: "{API Key}"
        Successful CreateImagesFromData request:
          value: "{API Key}"
        Successful CreateImagesFromFiles request:
          value: "{API Key}"
        Successful GetImagesByIds request:
          value: "{API Key}"
        Successful CreateImagesFromPredictions request:
          value: "{API Key}"
        Successful DeleteImageRegions request:
          value: "{API Key}"
        Successful CreateImageRegions request:
          value: "{API Key}"
        Successful QuerySuggestedImages request:
          value: "{API Key}"
        Successful QuerySuggestedImageCount request:
          value: "{API Key}"
        Successful GetTaggedImages request:
          value: "{API Key}"
        Successful GetTaggedImageCount request:
          value: "{API Key}"
        Successful DeleteImageTags request:
          value: "{API Key}"
        Successful CreateImageTags request:
          value: "{API Key}"
        Successful GetUntaggedImages request:
          value: "{API Key}"
        Successful GetUntaggedImageCount request:
          value: "{API Key}"
        Successful CreateImagesFromUrls request:
          value: "{API Key}"
        Successful GetImageRegionProposals request:
          value: "{API Key}"
        Successful GetIterations request:
          value: "{API Key}"
        Successful DeleteIteration request:
          value: "{API Key}"
        Successful GetIteration request:
          value: "{API Key}"
        Successful UpdateIteration request:
          value: "{API Key}"
        Successful GetExports request:
          value: "{API Key}"
        Successful ExportIteration request:
          value: "{API Key}"
        Successful GetIterationPerformance request:
          value: "{API Key}"
        Successful GetImagePerformances request:
          value: "{API Key}"
        Successful GetImagePerformanceCount request:
          value: "{API Key}"
        Successful UnpublishIteration request:
          value: "{API Key}"
        Successful PublishIteration request:
          value: "{API Key}"
        Successful DeletePrediction request:
          value: "{API Key}"
        Successful QueryPredictions request:
          value: "{API Key}"
        Successful QuickTestImage request:
          value: "{API Key}"
        Successful QuickTestImageUrl request:
          value: "{API Key}"
        Successful GetTags request:
          value: "{API Key}"
        Successful CreateTag request:
          value: "{API Key}"
        Successful DeleteTag request:
          value: "{API Key}"
        Successful GetTag request:
          value: "{API Key}"
        Successful UpdateTag request:
          value: "{API Key}"
        Successful SuggestTagsAndRegions request:
          value: "{API Key}"
        Successful TrainProject request:
          value: "{API Key}"
    Endpoint:
      description: Supported Cognitive Services endpoints.
      in: path
      name: Endpoint
      required: true
      x-ms-parameter-location: client
      x-ms-skip-url-encoding: true
      schema:
        type: string
  requestBodies:
    CreateImagesFromData:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              imageData:
                description: Binary image data. Supported formats are JPEG, GIF, PNG, and
                  BMP. Supports images up to 6MB.
                type: string
                format: binary
            required:
              - imageData
  schemas:
    BoundingBox:
      description: Bounding box that defines a region of an image.
      properties:
        height:
          description: Height.
          format: float
          readOnly: false
          type: number
          nullable: false
        left:
          description: Coordinate of the left boundary.
          format: float
          readOnly: false
          type: number
          nullable: false
        top:
          description: Coordinate of the top boundary.
          format: float
          readOnly: false
          type: number
          nullable: false
        width:
          description: Width.
          format: float
          readOnly: false
          type: number
          nullable: false
      required:
        - left
        - top
        - width
        - height
      type: object
    CustomVisionError:
      properties:
        code:
          description: The error code.
          enum:
            - NoError
            - BadRequest
            - BadRequestExceededBatchSize
            - BadRequestNotSupported
            - BadRequestInvalidIds
            - BadRequestProjectName
            - BadRequestProjectNameNotUnique
            - BadRequestProjectDescription
            - BadRequestProjectUnknownDomain
            - BadRequestProjectUnknownClassification
            - BadRequestProjectUnsupportedDomainTypeChange
            - BadRequestProjectUnsupportedExportPlatform
            - BadRequestProjectImagePreprocessingSettings
            - BadRequestIterationName
            - BadRequestIterationNameNotUnique
            - BadRequestIterationDescription
            - BadRequestIterationIsNotTrained
            - BadRequestWorkspaceCannotBeModified
            - BadRequestWorkspaceNotDeletable
            - BadRequestTagName
            - BadRequestTagNameNotUnique
            - BadRequestTagDescription
            - BadRequestTagType
            - BadRequestMultipleNegativeTag
            - BadRequestImageTags
            - BadRequestImageRegions
            - BadRequestNegativeAndRegularTagOnSameImage
            - BadRequestRequiredParamIsNull
            - BadRequestIterationIsPublished
            - BadRequestInvalidPublishName
            - BadRequestInvalidPublishTarget
            - BadRequestUnpublishFailed
            - BadRequestIterationNotPublished
            - BadRequestSubscriptionApi
            - BadRequestExceedProjectLimit
            - BadRequestExceedIterationPerProjectLimit
            - BadRequestExceedTagPerProjectLimit
            - BadRequestExceedTagPerImageLimit
            - BadRequestExceededQuota
            - BadRequestCannotMigrateProjectWithName
            - BadRequestNotLimitedTrial
            - BadRequestImageBatch
            - BadRequestImageStream
            - BadRequestImageUrl
            - BadRequestImageFormat
            - BadRequestImageSizeBytes
            - BadRequestImageExceededCount
            - BadRequestTrainingNotNeeded
            - BadRequestTrainingNotNeededButTrainingPipelineUpdated
            - BadRequestTrainingValidationFailed
            - BadRequestClassificationTrainingValidationFailed
            - BadRequestMultiClassClassificationTrainingValidationFailed
            - BadRequestMultiLabelClassificationTrainingValidationFailed
            - BadRequestDetectionTrainingValidationFailed
            - BadRequestTrainingAlreadyInProgress
            - BadRequestDetectionTrainingNotAllowNegativeTag
            - BadRequestInvalidEmailAddress
            - BadRequestDomainNotSupportedForAdvancedTraining
            - BadRequestExportPlatformNotSupportedForAdvancedTraining
            - BadRequestReservedBudgetInHoursNotEnoughForAdvancedTraining
            - BadRequestExportValidationFailed
            - BadRequestExportAlreadyInProgress
            - BadRequestPredictionIdsMissing
            - BadRequestPredictionIdsExceededCount
            - BadRequestPredictionTagsExceededCount
            - BadRequestPredictionResultsExceededCount
            - BadRequestPredictionInvalidApplicationName
            - BadRequestPredictionInvalidQueryParameters
            - BadRequestInvalid
            - UnsupportedMediaType
            - Forbidden
            - ForbiddenUser
            - ForbiddenUserResource
            - ForbiddenUserSignupDisabled
            - ForbiddenUserSignupAllowanceExceeded
            - ForbiddenUserDoesNotExist
            - ForbiddenUserDisabled
            - ForbiddenUserInsufficientCapability
            - ForbiddenDRModeEnabled
            - ForbiddenInvalid
            - NotFound
            - NotFoundProject
            - NotFoundProjectDefaultIteration
            - NotFoundIteration
            - NotFoundIterationPerformance
            - NotFoundTag
            - NotFoundImage
            - NotFoundDomain
            - NotFoundApimSubscription
            - NotFoundInvalid
            - Conflict
            - ConflictInvalid
            - ErrorUnknown
            - ErrorProjectInvalidWorkspace
            - ErrorProjectInvalidPipelineConfiguration
            - ErrorProjectInvalidDomain
            - ErrorProjectTrainingRequestFailed
            - ErrorProjectExportRequestFailed
            - ErrorFeaturizationServiceUnavailable
            - ErrorFeaturizationQueueTimeout
            - ErrorFeaturizationInvalidFeaturizer
            - ErrorFeaturizationAugmentationUnavailable
            - ErrorFeaturizationUnrecognizedJob
            - ErrorFeaturizationAugmentationError
            - ErrorExporterInvalidPlatform
            - ErrorExporterInvalidFeaturizer
            - ErrorExporterInvalidClassifier
            - ErrorPredictionServiceUnavailable
            - ErrorPredictionModelNotFound
            - ErrorPredictionModelNotCached
            - ErrorPrediction
            - ErrorPredictionStorage
            - ErrorRegionProposal
            - ErrorInvalid
          type: string
          x-ms-enum:
            modelAsString: true
            name: CustomVisionErrorCodes
        message:
          description: A message explaining the error reported by the service.
          type: string
      required:
        - code
        - message
      type: object
    Domain:
      properties:
        enabled:
          readOnly: true
          type: boolean
          nullable: false
        exportable:
          readOnly: true
          type: boolean
          nullable: false
        id:
          format: uuid
          readOnly: true
          type: string
          nullable: false
        name:
          readOnly: true
          type: string
          nullable: false
        type:
          enum:
            - Classification
            - ObjectDetection
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: DomainType
          nullable: false
      type: object
    Export:
      properties:
        downloadUri:
          description: URI used to download the model.
          readOnly: true
          type: string
        flavor:
          description: Flavor of the export.
          enum:
            - Linux
            - Windows
            - ONNX10
            - ONNX12
            - ARM
            - TensorFlowNormal
            - TensorFlowLite
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExportFlavor
          nullable: true
        newerVersionAvailable:
          description: Indicates an updated version of the export package is available and
            should be re-exported for the latest changes.
          readOnly: true
          type: boolean
          nullable: false
        platform:
          description: Platform of the export.
          enum:
            - CoreML
            - TensorFlow
            - DockerFile
            - ONNX
            - VAIDK
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExportPlatform
          nullable: false
        status:
          description: Status of the export.
          enum:
            - Exporting
            - Failed
            - Done
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ExportStatus
          nullable: false
      type: object
    Image:
      description: Image model to be sent as JSON.
      properties:
        created:
          description: Date the image was created.
          format: date-time
          readOnly: true
          type: string
          nullable: false
        height:
          description: Height of the image.
          format: int32
          readOnly: true
          type: integer
          nullable: false
        id:
          description: Id of the image.
          format: uuid
          readOnly: true
          type: string
          nullable: false
        originalImageUri:
          description: The URI to the original uploaded image.
          readOnly: true
          type: string
        regions:
          description: Regions associated with this image.
          items:
            $ref: "#/components/schemas/ImageRegion"
          readOnly: true
          type: array
          nullable: true
        resizedImageUri:
          description: The URI to the (resized) image used for training.
          readOnly: true
          type: string
        tags:
          description: Tags associated with this image.
          items:
            $ref: "#/components/schemas/ImageTag"
          readOnly: true
          type: array
          nullable: true
        thumbnailUri:
          description: The URI to the thumbnail of the original image.
          readOnly: true
          type: string
        width:
          description: Width of the image.
          format: int32
          readOnly: true
          type: integer
          nullable: false
      type: object
    ImageCreateResult:
      properties:
        image:
          $ref: "#/components/schemas/Image"
        sourceUrl:
          description: Source URL of the image.
          readOnly: true
          type: string
          nullable: false
        status:
          description: Status of the image creation.
          enum:
            - OK
            - OKDuplicate
            - ErrorSource
            - ErrorImageFormat
            - ErrorImageSize
            - ErrorStorage
            - ErrorLimitExceed
            - ErrorTagLimitExceed
            - ErrorRegionLimitExceed
            - ErrorUnknown
            - ErrorNegativeAndRegularTagOnSameImage
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ImageCreateStatus
          nullable: false
      type: object
    ImageCreateSummary:
      properties:
        images:
          description: List of the image creation results.
          items:
            $ref: "#/components/schemas/ImageCreateResult"
          readOnly: true
          type: array
        isBatchSuccessful:
          description: True if all of the images in the batch were created successfully,
            otherwise false.
          readOnly: true
          type: boolean
          nullable: false
      type: object
    ImageFileCreateBatch:
      properties:
        images:
          items:
            $ref: "#/components/schemas/ImageFileCreateEntry"
          readOnly: false
          type: array
        tagIds:
          items:
            format: uuid
            type: string
            nullable: false
          readOnly: false
          type: array
      type: object
    ImageFileCreateEntry:
      properties:
        contents:
          format: byte
          readOnly: false
          type: string
        name:
          readOnly: false
          type: string
          nullable: false
        regions:
          items:
            $ref: "#/components/schemas/Region"
          readOnly: false
          type: array
        tagIds:
          items:
            format: uuid
            type: string
            nullable: false
          readOnly: false
          type: array
      type: object
    ImageIdCreateBatch:
      properties:
        images:
          items:
            $ref: "#/components/schemas/ImageIdCreateEntry"
          readOnly: false
          type: array
        tagIds:
          items:
            format: uuid
            type: string
            nullable: false
          readOnly: false
          type: array
      type: object
    ImageIdCreateEntry:
      properties:
        id:
          description: Id of the image.
          format: uuid
          readOnly: false
          type: string
          nullable: false
        regions:
          items:
            $ref: "#/components/schemas/Region"
          readOnly: false
          type: array
        tagIds:
          items:
            format: uuid
            type: string
            nullable: false
          readOnly: false
          type: array
      type: object
    ImagePerformance:
      description: Image performance model.
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
          nullable: false
        height:
          format: int32
          readOnly: true
          type: integer
          nullable: false
        id:
          format: uuid
          readOnly: true
          type: string
          nullable: false
        imageUri:
          readOnly: true
          type: string
        predictions:
          items:
            $ref: "#/components/schemas/Prediction"
          readOnly: true
          type: array
          nullable: true
        regions:
          items:
            $ref: "#/components/schemas/ImageRegion"
          readOnly: true
          type: array
          nullable: true
        tags:
          items:
            $ref: "#/components/schemas/ImageTag"
          readOnly: true
          type: array
          nullable: true
        thumbnailUri:
          readOnly: true
          type: string
        width:
          format: int32
          readOnly: true
          type: integer
          nullable: false
      type: object
    ImagePrediction:
      description: Result of an image prediction request.
      properties:
        created:
          description: Date this prediction was created.
          format: date-time
          readOnly: true
          type: string
          nullable: false
        id:
          description: Prediction Id.
          format: uuid
          readOnly: true
          type: string
          nullable: false
        iteration:
          description: Iteration Id.
          format: uuid
          readOnly: true
          type: string
          nullable: false
        predictions:
          description: List of predictions.
          items:
            $ref: "#/components/schemas/Prediction"
          readOnly: true
          type: array
        project:
          description: Project Id.
          format: uuid
          readOnly: true
          type: string
          nullable: false
      type: object
    ImageProcessingSettings:
      description: Represents image preprocessing settings used by image augmentation.
      properties:
        augmentationMethods:
          additionalProperties:
            type: boolean
          description: "Gets or sets enabled image transforms. The key corresponds to the
            transform name. If value is set to true, then correspondent
            transform is enabled. Otherwise this transform will not be used.\r

            Augmentation will be uniformly distributed among enabled
            transforms."
          readOnly: false
          type: object
          nullable: true
      type: object
    ImageRegion:
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
          nullable: false
        height:
          description: Height.
          format: float
          readOnly: false
          type: number
          nullable: false
        left:
          description: Coordinate of the left boundary.
          format: float
          readOnly: false
          type: number
          nullable: false
        regionId:
          format: uuid
          readOnly: true
          type: string
          nullable: false
        tagId:
          description: Id of the tag associated with this region.
          format: uuid
          readOnly: false
          type: string
          nullable: false
        tagName:
          readOnly: true
          type: string
          nullable: false
        top:
          description: Coordinate of the top boundary.
          format: float
          readOnly: false
          type: number
          nullable: false
        width:
          description: Width.
          format: float
          readOnly: false
          type: number
          nullable: false
      required:
        - tagId
        - left
        - top
        - width
        - height
      type: object
    ImageRegionCreateBatch:
      description: Batch of image region information to create.
      properties:
        regions:
          items:
            $ref: "#/components/schemas/ImageRegionCreateEntry"
          readOnly: false
          type: array
      type: object
    ImageRegionCreateEntry:
      description: Entry associating a region to an image.
      properties:
        height:
          description: Height.
          format: float
          readOnly: false
          type: number
          nullable: false
        imageId:
          description: Id of the image.
          format: uuid
          readOnly: false
          type: string
          nullable: false
        left:
          description: Coordinate of the left boundary.
          format: float
          readOnly: false
          type: number
          nullable: false
        tagId:
          description: Id of the tag associated with this region.
          format: uuid
          readOnly: false
          type: string
          nullable: false
        top:
          description: Coordinate of the top boundary.
          format: float
          readOnly: false
          type: number
          nullable: false
        width:
          description: Width.
          format: float
          readOnly: false
          type: number
          nullable: false
      required:
        - imageId
        - tagId
        - left
        - top
        - width
        - height
      type: object
    ImageRegionCreateResult:
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
          nullable: false
        height:
          description: Height.
          format: float
          readOnly: false
          type: number
          nullable: false
        imageId:
          format: uuid
          readOnly: true
          type: string
          nullable: false
        left:
          description: Coordinate of the left boundary.
          format: float
          readOnly: false
          type: number
          nullable: false
        regionId:
          format: uuid
          readOnly: true
          type: string
          nullable: false
        tagId:
          description: Id of the tag associated with this region.
          format: uuid
          readOnly: false
          type: string
          nullable: false
        tagName:
          readOnly: true
          type: string
          nullable: false
        top:
          description: Coordinate of the top boundary.
          format: float
          readOnly: false
          type: number
          nullable: false
        width:
          description: Width.
          format: float
          readOnly: false
          type: number
          nullable: false
      required:
        - tagId
        - left
        - top
        - width
        - height
      type: object
    ImageRegionCreateSummary:
      properties:
        created:
          items:
            $ref: "#/components/schemas/ImageRegionCreateResult"
          readOnly: false
          type: array
          nullable: true
        duplicated:
          items:
            $ref: "#/components/schemas/ImageRegionCreateEntry"
          readOnly: false
          type: array
          nullable: true
        exceeded:
          items:
            $ref: "#/components/schemas/ImageRegionCreateEntry"
          readOnly: false
          type: array
          nullable: true
      type: object
    ImageRegionProposal:
      properties:
        imageId:
          format: uuid
          readOnly: true
          type: string
          nullable: false
        projectId:
          format: uuid
          readOnly: true
          type: string
          nullable: false
        proposals:
          items:
            $ref: "#/components/schemas/RegionProposal"
          readOnly: true
          type: array
      type: object
    ImageTag:
      properties:
        created:
          format: date-time
          readOnly: true
          type: string
          nullable: false
        tagId:
          format: uuid
          readOnly: true
          type: string
          nullable: false
        tagName:
          readOnly: true
          type: string
          nullable: false
      type: object
    ImageTagCreateBatch:
      description: Batch of image tags.
      properties:
        tags:
          description: Image Tag entries to include in this batch.
          items:
            $ref: "#/components/schemas/ImageTagCreateEntry"
          readOnly: false
          type: array
      type: object
    ImageTagCreateEntry:
      description: Entry associating a tag to an image.
      properties:
        imageId:
          description: Id of the image.
          format: uuid
          readOnly: false
          type: string
          nullable: false
        tagId:
          description: Id of the tag.
          format: uuid
          readOnly: false
          type: string
          nullable: false
      type: object
    ImageTagCreateSummary:
      properties:
        created:
          items:
            $ref: "#/components/schemas/ImageTagCreateEntry"
          readOnly: false
          type: array
          nullable: true
        duplicated:
          items:
            $ref: "#/components/schemas/ImageTagCreateEntry"
          readOnly: false
          type: array
          nullable: true
        exceeded:
          items:
            $ref: "#/components/schemas/ImageTagCreateEntry"
          readOnly: false
          type: array
          nullable: true
      type: object
    ImageUrl:
      description: Image url.
      properties:
        url:
          description: Url of the image.
          readOnly: false
          type: string
          nullable: false
      required:
        - url
      type: object
    ImageUrlCreateBatch:
      properties:
        images:
          items:
            $ref: "#/components/schemas/ImageUrlCreateEntry"
          readOnly: false
          type: array
        tagIds:
          items:
            format: uuid
            type: string
            nullable: false
          readOnly: false
          type: array
      type: object
    ImageUrlCreateEntry:
      properties:
        regions:
          items:
            $ref: "#/components/schemas/Region"
          readOnly: false
          type: array
        tagIds:
          items:
            format: uuid
            type: string
            nullable: false
          readOnly: false
          type: array
        url:
          description: Url of the image.
          readOnly: false
          type: string
          nullable: false
      required:
        - url
      type: object
    Iteration:
      description: Iteration model to be sent over JSON.
      properties:
        classificationType:
          description: Gets the classification type of the project.
          enum:
            - Multiclass
            - Multilabel
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: Classifier
          nullable: true
        created:
          description: Gets the time this iteration was completed.
          format: date-time
          readOnly: true
          type: string
          nullable: false
        domainId:
          description: Get or sets a guid of the domain the iteration has been trained on.
          format: uuid
          readOnly: true
          type: string
          nullable: true
        exportable:
          description: Whether the iteration can be exported to another format for download.
          readOnly: true
          type: boolean
          nullable: false
        exportableTo:
          description: A set of platforms this iteration can export to.
          items:
            enum:
              - CoreML
              - TensorFlow
              - DockerFile
              - ONNX
              - VAIDK
            type: string
            nullable: false
          readOnly: true
          type: array
        id:
          description: Gets the id of the iteration.
          format: uuid
          readOnly: true
          type: string
          nullable: false
        lastModified:
          description: Gets the time this iteration was last modified.
          format: date-time
          readOnly: true
          type: string
          nullable: false
        name:
          description: Gets or sets the name of the iteration.
          readOnly: false
          type: string
          nullable: false
        originalPublishResourceId:
          description: Resource Provider Id this iteration was originally published to.
          readOnly: true
          type: string
          nullable: false
        projectId:
          description: Gets the project id of the iteration.
          format: uuid
          readOnly: true
          type: string
          nullable: false
        publishName:
          description: Name of the published model.
          readOnly: true
          type: string
          nullable: false
        reservedBudgetInHours:
          description: Gets the reserved advanced training budget for the iteration.
          format: int32
          readOnly: true
          type: integer
          nullable: false
        status:
          description: Gets the current iteration status.
          readOnly: true
          type: string
          nullable: false
        trainedAt:
          description: Gets the time this iteration was last modified.
          format: date-time
          readOnly: true
          type: string
          nullable: true
        trainingTimeInMinutes:
          description: Gets the training time for the iteration.
          format: int32
          readOnly: true
          type: integer
          nullable: false
        trainingType:
          description: Gets the training type of the iteration.
          enum:
            - Regular
            - Advanced
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: TrainingType
          nullable: false
      required:
        - name
      type: object
    IterationPerformance:
      description: Represents the detailed performance data for a trained iteration.
      properties:
        averagePrecision:
          description: Gets the average precision when applicable.
          format: float
          readOnly: true
          type: number
          nullable: true
        perTagPerformance:
          description: Gets the per-tag performance details for this iteration.
          items:
            $ref: "#/components/schemas/TagPerformance"
          readOnly: true
          type: array
        precision:
          description: Gets the precision.
          format: float
          readOnly: true
          type: number
          nullable: false
        precisionStdDeviation:
          description: Gets the standard deviation for the precision.
          format: float
          readOnly: true
          type: number
          nullable: false
        recall:
          description: Gets the recall.
          format: float
          readOnly: true
          type: number
          nullable: false
        recallStdDeviation:
          description: Gets the standard deviation for the recall.
          format: float
          readOnly: true
          type: number
          nullable: false
      type: object
    Prediction:
      description: Prediction result.
      properties:
        boundingBox:
          $ref: "#/components/schemas/BoundingBox"
        probability:
          description: Probability of the tag.
          format: float
          readOnly: true
          type: number
          nullable: false
        tagId:
          description: Id of the predicted tag.
          format: uuid
          readOnly: true
          type: string
          nullable: false
        tagName:
          description: Name of the predicted tag.
          readOnly: true
          type: string
          nullable: true
      type: object
    PredictionQueryResult:
      description: Query result of the prediction images that were sent to your prediction
        endpoint.
      properties:
        results:
          description: Result of an prediction request.
          items:
            $ref: "#/components/schemas/StoredImagePrediction"
          readOnly: true
          type: array
        token:
          $ref: "#/components/schemas/PredictionQueryToken"
      type: object
    PredictionQueryTag:
      properties:
        id:
          format: uuid
          readOnly: false
          type: string
          nullable: false
        maxThreshold:
          format: float
          readOnly: false
          type: number
          nullable: false
        minThreshold:
          format: float
          readOnly: false
          type: number
          nullable: false
      type: object
    PredictionQueryToken:
      properties:
        application:
          readOnly: false
          type: string
          nullable: false
        continuation:
          readOnly: false
          type: string
          nullable: false
        endTime:
          format: date-time
          readOnly: false
          type: string
          nullable: true
        iterationId:
          format: uuid
          readOnly: false
          type: string
          nullable: true
        maxCount:
          format: int32
          readOnly: false
          type: integer
          nullable: false
        orderBy:
          enum:
            - Newest
            - Oldest
            - Suggested
          readOnly: false
          type: string
          x-ms-enum:
            modelAsString: true
            name: OrderBy
          nullable: false
        session:
          readOnly: false
          type: string
          nullable: false
        startTime:
          format: date-time
          readOnly: false
          type: string
          nullable: true
        tags:
          items:
            $ref: "#/components/schemas/PredictionQueryTag"
          readOnly: false
          type: array
      type: object
    Project:
      description: Represents a project.
      properties:
        created:
          description: Gets the date this project was created.
          format: date-time
          readOnly: true
          type: string
          nullable: false
        description:
          description: Gets or sets the description of the project.
          readOnly: false
          type: string
          nullable: true
        drModeEnabled:
          description: Gets if the Disaster Recovery (DR) mode is on, indicating the
            project is temporarily read-only.
          readOnly: true
          type: boolean
          nullable: true
        id:
          description: Gets the project id.
          format: uuid
          readOnly: true
          type: string
          nullable: false
        lastModified:
          description: Gets the date this project was last modified.
          format: date-time
          readOnly: true
          type: string
          nullable: false
        name:
          description: Gets or sets the name of the project.
          readOnly: false
          type: string
          nullable: false
        settings:
          $ref: "#/components/schemas/ProjectSettings"
        thumbnailUri:
          description: Gets the thumbnail url representing the image.
          readOnly: true
          type: string
      required:
        - name
        - description
        - settings
      type: object
    ProjectSettings:
      description: Represents settings associated with a project.
      properties:
        classificationType:
          description: Gets or sets the classification type of the project.
          enum:
            - Multiclass
            - Multilabel
          readOnly: false
          type: string
          x-ms-enum:
            modelAsString: true
            name: Classifier
          nullable: true
        detectionParameters:
          description: Detection parameters in use, if any.
          readOnly: true
          type: string
          nullable: false
        domainId:
          description: Gets or sets the id of the Domain to use with this project.
          format: uuid
          readOnly: false
          type: string
          nullable: false
        imageProcessingSettings:
          $ref: "#/components/schemas/ImageProcessingSettings"
        targetExportPlatforms:
          description: A list of ExportPlatform that the trained model should be able to
            support.
          items:
            enum:
              - CoreML
              - TensorFlow
              - DockerFile
              - ONNX
              - VAIDK
            type: string
            nullable: false
          readOnly: false
          type: array
        useNegativeSet:
          description: Indicates if negative set is being used.
          readOnly: true
          type: boolean
          nullable: true
      type: object
    Region:
      properties:
        height:
          description: Height.
          format: float
          readOnly: false
          type: number
          nullable: false
        left:
          description: Coordinate of the left boundary.
          format: float
          readOnly: false
          type: number
          nullable: false
        tagId:
          description: Id of the tag associated with this region.
          format: uuid
          readOnly: false
          type: string
          nullable: false
        top:
          description: Coordinate of the top boundary.
          format: float
          readOnly: false
          type: number
          nullable: false
        width:
          description: Width.
          format: float
          readOnly: false
          type: number
          nullable: false
      required:
        - tagId
        - left
        - top
        - width
        - height
      type: object
    RegionProposal:
      properties:
        boundingBox:
          $ref: "#/components/schemas/BoundingBox"
        confidence:
          format: float
          readOnly: true
          type: number
          nullable: false
      type: object
    StoredImagePrediction:
      description: Result of an image prediction request.
      properties:
        created:
          description: Date this prediction was created.
          format: date-time
          readOnly: true
          type: string
          nullable: false
        domain:
          description: Domain used for the prediction.
          format: uuid
          readOnly: true
          type: string
          nullable: false
        id:
          description: Prediction Id.
          format: uuid
          readOnly: true
          type: string
          nullable: false
        iteration:
          description: Iteration Id.
          format: uuid
          readOnly: true
          type: string
          nullable: false
        originalImageUri:
          description: The URI to the original prediction image.
          readOnly: true
          type: string
        predictions:
          description: List of predictions.
          items:
            $ref: "#/components/schemas/Prediction"
          readOnly: true
          type: array
        project:
          description: Project Id.
          format: uuid
          readOnly: true
          type: string
          nullable: false
        resizedImageUri:
          description: The URI to the (resized) prediction image.
          readOnly: true
          type: string
        thumbnailUri:
          description: The URI to the thumbnail of the original prediction image.
          readOnly: true
          type: string
      type: object
    StoredSuggestedTagAndRegion:
      description: Result of a suggested tags and regions request of the untagged image.
      properties:
        created:
          description: Date this prediction was created.
          format: date-time
          readOnly: true
          type: string
          nullable: false
        domain:
          description: Domain used for the prediction.
          format: uuid
          readOnly: true
          type: string
          nullable: false
        height:
          description: Height of the resized image.
          format: int32
          readOnly: true
          type: integer
          nullable: false
        id:
          description: Prediction Id.
          format: uuid
          readOnly: true
          type: string
          nullable: false
        iteration:
          description: Iteration Id.
          format: uuid
          readOnly: true
          type: string
          nullable: false
        originalImageUri:
          description: The URI to the original prediction image.
          readOnly: true
          type: string
        predictionUncertainty:
          description: Uncertainty (entropy) of suggested tags or regions per image.
          format: double
          readOnly: true
          type: number
          nullable: false
        predictions:
          description: List of predictions.
          items:
            $ref: "#/components/schemas/Prediction"
          readOnly: true
          type: array
        project:
          description: Project Id.
          format: uuid
          readOnly: true
          type: string
          nullable: false
        resizedImageUri:
          description: The URI to the (resized) prediction image.
          readOnly: true
          type: string
        thumbnailUri:
          description: The URI to the thumbnail of the original prediction image.
          readOnly: true
          type: string
        width:
          description: Width of the resized image.
          format: int32
          readOnly: true
          type: integer
          nullable: false
      type: object
    SuggestedTagAndRegion:
      description: Result of a suggested tags and regions request.
      properties:
        created:
          description: Date this prediction was created.
          format: date-time
          readOnly: true
          type: string
          nullable: false
        id:
          description: Prediction Id.
          format: uuid
          readOnly: true
          type: string
          nullable: false
        iteration:
          description: Iteration Id.
          format: uuid
          readOnly: true
          type: string
          nullable: false
        predictionUncertainty:
          description: Uncertainty (entropy) of suggested tags or regions per image.
          format: double
          readOnly: true
          type: number
          nullable: false
        predictions:
          description: List of predictions.
          items:
            $ref: "#/components/schemas/Prediction"
          readOnly: true
          type: array
        project:
          description: Project Id.
          format: uuid
          readOnly: true
          type: string
          nullable: false
      type: object
    SuggestedTagAndRegionQuery:
      description: The array of result images and token containing session and continuation
        Ids for the next query.
      properties:
        results:
          description: Result of a suggested tags and regions request of the untagged image.
          items:
            $ref: "#/components/schemas/StoredSuggestedTagAndRegion"
          readOnly: true
          type: array
        token:
          $ref: "#/components/schemas/SuggestedTagAndRegionQueryToken"
      type: object
    SuggestedTagAndRegionQueryToken:
      description: "Contains properties we need to fetch suggested tags for. For the first
        call, Session and continuation set to null.\r

        Then on subsequent calls, uses the session/continuation from the
        previous SuggestedTagAndRegionQuery result to fetch additional results."
      properties:
        continuation:
          description: Continuation Id for database pagination. Initially null but later
            used to paginate.
          readOnly: false
          type: string
          nullable: false
        maxCount:
          description: Maximum number of results you want to be returned in the response.
          format: int32
          readOnly: false
          type: integer
          nullable: false
        session:
          description: SessionId for database query. Initially set to null but later used
            to paginate.
          readOnly: false
          type: string
          nullable: false
        sortBy:
          description: OrderBy. Ordering mechanism for your results.
          enum:
            - UncertaintyAscending
            - UncertaintyDescending
          readOnly: false
          type: string
          x-ms-enum:
            modelAsString: true
            name: SortBy
          nullable: false
        tagIds:
          description: Existing TagIds in project to filter suggested tags on.
          items:
            format: uuid
            type: string
            nullable: false
          readOnly: false
          type: array
        threshold:
          description: Confidence threshold to filter suggested tags on.
          format: double
          readOnly: false
          type: number
          nullable: false
      type: object
    Tag:
      description: Represents a Tag.
      properties:
        description:
          description: Gets or sets the description of the tag.
          readOnly: false
          type: string
          nullable: true
        id:
          description: Gets the Tag ID.
          format: uuid
          readOnly: true
          type: string
          nullable: false
        imageCount:
          description: Gets the number of images with this tag.
          format: int32
          readOnly: true
          type: integer
          nullable: false
        name:
          description: Gets or sets the name of the tag.
          readOnly: false
          type: string
          nullable: false
        type:
          description: Gets or sets the type of the tag.
          enum:
            - Regular
            - Negative
          readOnly: false
          type: string
          x-ms-enum:
            modelAsString: true
            name: TagType
          nullable: false
      required:
        - name
        - description
        - type
      type: object
    TagFilter:
      description: Model that query for counting of images whose suggested tags match given
        tags and their probability are greater than or equal to the given
        threshold.
      properties:
        tagIds:
          description: Existing TagIds in project to get suggested tags count for.
          items:
            format: uuid
            type: string
            nullable: false
          readOnly: false
          type: array
        threshold:
          description: Confidence threshold to filter suggested tags on.
          format: double
          readOnly: false
          type: number
          nullable: false
      type: object
    TagPerformance:
      description: Represents performance data for a particular tag in a trained iteration.
      properties:
        averagePrecision:
          description: Gets the average precision when applicable.
          format: float
          readOnly: true
          type: number
          nullable: true
        id:
          format: uuid
          readOnly: true
          type: string
          nullable: false
        name:
          readOnly: true
          type: string
          nullable: false
        precision:
          description: Gets the precision.
          format: float
          readOnly: true
          type: number
          nullable: false
        precisionStdDeviation:
          description: Gets the standard deviation for the precision.
          format: float
          readOnly: true
          type: number
          nullable: false
        recall:
          description: Gets the recall.
          format: float
          readOnly: true
          type: number
          nullable: false
        recallStdDeviation:
          description: Gets the standard deviation for the recall.
          format: float
          readOnly: true
          type: number
          nullable: false
      type: object
