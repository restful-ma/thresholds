openapi: 3.0.0
info:
  version: 2012-06-01
  x-release: v4
  title: Elastic Load Balancing
  description: '<fullname>Elastic Load Balancing</fullname> <p>A load balancer can
    distribute incoming traffic across your EC2 instances. This enables you to
    increase the availability of your application. The load balancer also
    monitors the health of its registered instances and ensures that it routes
    traffic only to healthy instances. You configure your load balancer to
    accept incoming traffic by specifying one or more listeners, which are
    configured with a protocol and port number for connections from clients to
    the load balancer and a protocol and port number for connections from the
    load balancer to the instances.</p> <p>Elastic Load Balancing supports three
    types of load balancers: Application Load Balancers, Network Load Balancers,
    and Classic Load Balancers. You can select a load balancer based on your
    application needs. For more information, see the <a
    href="http://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/">Elastic
    Load Balancing User Guide</a>.</p> <p>This reference covers the 2012-06-01
    API, which supports Classic Load Balancers. The 2015-12-01 API supports
    Application Load Balancers and Network Load Balancers.</p> <p>To get
    started, create a load balancer with one or more listeners using
    <a>CreateLoadBalancer</a>. Register your instances with the load balancer
    using <a>RegisterInstancesWithLoadBalancer</a>.</p> <p>All Elastic Load
    Balancing operations are <i>idempotent</i>, which means that they complete
    at most one time. If you repeat an operation, it succeeds with a 200 OK
    response code.</p>'
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: elasticloadbalancing
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/elasticloadbalancing-2012-06-01.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/elasticloadbalancing/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#Action=AddTags:
    get:
      x-aws-operation-name: AddTags
      operationId: GET AddTags
      description: <p>Adds the specified tags to the specified load balancer. Each load
        balancer can have a maximum of 10 tags.</p> <p>Each tag consists of a
        key and an optional value. If a tag with the same key is already
        associated with the load balancer, <code>AddTags</code> updates its
        value.</p> <p>For more information, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/add-remove-tags.html">Tag
        Your Classic Load Balancer</a> in the <i>Classic Load Balancers
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AddTagsOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: TooManyTagsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "482":
          description: DuplicateTagKeysException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicateTagKeysException"
      parameters:
        - name: LoadBalancerNames
          in: query
          required: true
          description: The name of the load balancer. You can specify one load balancer
            only.
          schema:
            type: array
            items:
              type: string
        - name: Tags
          in: query
          required: true
          description: The tags.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: AddTags
      operationId: POST AddTags
      description: <p>Adds the specified tags to the specified load balancer. Each load
        balancer can have a maximum of 10 tags.</p> <p>Each tag consists of a
        key and an optional value. If a tag with the same key is already
        associated with the load balancer, <code>AddTags</code> updates its
        value.</p> <p>For more information, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/add-remove-tags.html">Tag
        Your Classic Load Balancer</a> in the <i>Classic Load Balancers
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AddTagsOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: TooManyTagsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "482":
          description: DuplicateTagKeysException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicateTagKeysException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerNames:
                  description: The name of the load balancer. You can specify one load
                    balancer only.
                  type: array
                  items:
                    type: string
                Tags:
                  description: The tags.
                  type: array
                  items:
                    type: string
              required:
                - LoadBalancerNames
                - Tags
  /#Action=ApplySecurityGroupsToLoadBalancer:
    get:
      x-aws-operation-name: ApplySecurityGroupsToLoadBalancer
      operationId: GET ApplySecurityGroupsToLoadBalancer
      description: <p>Associates one or more security groups with your load balancer in a
        virtual private cloud (VPC). The specified security groups override the
        previously associated security groups.</p> <p>For more information, see
        <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-security-groups.html#elb-vpc-security-groups">Security
        Groups for Load Balancers in a VPC</a> in the <i>Classic Load Balancers
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ApplySecurityGroupsToLoadBalancerOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
        "482":
          description: InvalidSecurityGroupException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSecurityGroupException"
      parameters:
        - name: LoadBalancerName
          in: query
          required: true
          description: The name of the load balancer.
          schema:
            type: string
        - name: SecurityGroups
          in: query
          required: true
          description: The IDs of the security groups to associate with the load balancer.
            Note that you cannot specify the name of the security group.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ApplySecurityGroupsToLoadBalancer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ApplySecurityGroupsToLoadBalancer
      operationId: POST ApplySecurityGroupsToLoadBalancer
      description: <p>Associates one or more security groups with your load balancer in a
        virtual private cloud (VPC). The specified security groups override the
        previously associated security groups.</p> <p>For more information, see
        <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-security-groups.html#elb-vpc-security-groups">Security
        Groups for Load Balancers in a VPC</a> in the <i>Classic Load Balancers
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ApplySecurityGroupsToLoadBalancerOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
        "482":
          description: InvalidSecurityGroupException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSecurityGroupException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ApplySecurityGroupsToLoadBalancer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerName:
                  description: The name of the load balancer.
                  type: string
                SecurityGroups:
                  description: The IDs of the security groups to associate with the load
                    balancer. Note that you cannot specify the name of the
                    security group.
                  type: array
                  items:
                    type: string
              required:
                - LoadBalancerName
                - SecurityGroups
  /#Action=AttachLoadBalancerToSubnets:
    get:
      x-aws-operation-name: AttachLoadBalancerToSubnets
      operationId: GET AttachLoadBalancerToSubnets
      description: <p>Adds one or more subnets to the set of configured subnets for the
        specified load balancer.</p> <p>The load balancer evenly distributes
        requests across all registered subnets. For more information, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-manage-subnets.html">Add
        or Remove Subnets for Your Load Balancer in a VPC</a> in the <i>Classic
        Load Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AttachLoadBalancerToSubnetsOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
        "482":
          description: SubnetNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubnetNotFoundException"
        "483":
          description: InvalidSubnetException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnetException"
      parameters:
        - name: LoadBalancerName
          in: query
          required: true
          description: The name of the load balancer.
          schema:
            type: string
        - name: Subnets
          in: query
          required: true
          description: The IDs of the subnets to add. You can add only one subnet per
            Availability Zone.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AttachLoadBalancerToSubnets
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: AttachLoadBalancerToSubnets
      operationId: POST AttachLoadBalancerToSubnets
      description: <p>Adds one or more subnets to the set of configured subnets for the
        specified load balancer.</p> <p>The load balancer evenly distributes
        requests across all registered subnets. For more information, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-manage-subnets.html">Add
        or Remove Subnets for Your Load Balancer in a VPC</a> in the <i>Classic
        Load Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AttachLoadBalancerToSubnetsOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
        "482":
          description: SubnetNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubnetNotFoundException"
        "483":
          description: InvalidSubnetException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnetException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AttachLoadBalancerToSubnets
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerName:
                  description: The name of the load balancer.
                  type: string
                Subnets:
                  description: The IDs of the subnets to add. You can add only one subnet
                    per Availability Zone.
                  type: array
                  items:
                    type: string
              required:
                - LoadBalancerName
                - Subnets
  /#Action=ConfigureHealthCheck:
    get:
      x-aws-operation-name: ConfigureHealthCheck
      operationId: GET ConfigureHealthCheck
      description: <p>Specifies the health check settings to use when evaluating the health
        state of your EC2 instances.</p> <p>For more information, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-healthchecks.html">Configure
        Health Checks for Your Load Balancer</a> in the <i>Classic Load
        Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConfigureHealthCheckOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
      parameters:
        - name: LoadBalancerName
          in: query
          required: true
          description: The name of the load balancer.
          schema:
            type: string
        - name: HealthCheck.Target
          in: query
          description: >-
            Information about a health check.

            <p>The instance being checked. The protocol is either TCP, HTTP, HTTPS, or SSL. The range of valid ports is one (1) through 65535.</p> <p>TCP is the default, specified as a TCP: port pair, for example "TCP:5000". In this case, a health check simply attempts to open a TCP connection to the instance on the specified port. Failure to connect within the configured timeout is considered unhealthy.</p> <p>SSL is also specified as SSL: port pair, for example, SSL:5000.</p> <p>For HTTP/HTTPS, you must include a ping path in the string. HTTP is specified as a HTTP:port;/;PathToPing; grouping, for example "HTTP:80/weather/us/wa/seattle". In this case, a HTTP GET request is issued to the instance on the given port and path. Any answer other than "200 OK" within the timeout period is considered unhealthy.</p> <p>The total length of the HTTP ping target must be 1024 16-bit Unicode characters or less.</p>
          schema:
            type: string
        - name: HealthCheck.Interval
          in: query
          description: >-
            Information about a health check.

            The approximate interval, in seconds, between health checks of an individual instance.
          schema:
            type: string
        - name: HealthCheck.Timeout
          in: query
          description: >-
            Information about a health check.

            <p>The amount of time, in seconds, during which no response means a failed health check.</p> <p>This value must be less than the <code>Interval</code> value.</p>
          schema:
            type: string
        - name: HealthCheck.UnhealthyThreshold
          in: query
          description: >-
            Information about a health check.

            The number of consecutive health check failures required before moving the instance to the <code>Unhealthy</code> state.
          schema:
            type: string
        - name: HealthCheck.HealthyThreshold
          in: query
          description: >-
            Information about a health check.

            The number of consecutive health checks successes required before moving the instance to the <code>Healthy</code> state.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ConfigureHealthCheck
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ConfigureHealthCheck
      operationId: POST ConfigureHealthCheck
      description: <p>Specifies the health check settings to use when evaluating the health
        state of your EC2 instances.</p> <p>For more information, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-healthchecks.html">Configure
        Health Checks for Your Load Balancer</a> in the <i>Classic Load
        Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConfigureHealthCheckOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ConfigureHealthCheck
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerName:
                  description: The name of the load balancer.
                  type: string
                HealthCheck.Target:
                  description: >-
                    Information about a health check.

                    <p>The instance being checked. The protocol is either TCP, HTTP, HTTPS, or SSL. The range of valid ports is one (1) through 65535.</p> <p>TCP is the default, specified as a TCP: port pair, for example "TCP:5000". In this case, a health check simply attempts to open a TCP connection to the instance on the specified port. Failure to connect within the configured timeout is considered unhealthy.</p> <p>SSL is also specified as SSL: port pair, for example, SSL:5000.</p> <p>For HTTP/HTTPS, you must include a ping path in the string. HTTP is specified as a HTTP:port;/;PathToPing; grouping, for example "HTTP:80/weather/us/wa/seattle". In this case, a HTTP GET request is issued to the instance on the given port and path. Any answer other than "200 OK" within the timeout period is considered unhealthy.</p> <p>The total length of the HTTP ping target must be 1024 16-bit Unicode characters or less.</p>
                  type: string
                HealthCheck.Interval:
                  description: >-
                    Information about a health check.

                    The approximate interval, in seconds, between health checks of an individual instance.
                  type: string
                HealthCheck.Timeout:
                  description: >-
                    Information about a health check.

                    <p>The amount of time, in seconds, during which no response means a failed health check.</p> <p>This value must be less than the <code>Interval</code> value.</p>
                  type: string
                HealthCheck.UnhealthyThreshold:
                  description: >-
                    Information about a health check.

                    The number of consecutive health check failures required before moving the instance to the <code>Unhealthy</code> state.
                  type: string
                HealthCheck.HealthyThreshold:
                  description: >-
                    Information about a health check.

                    The number of consecutive health checks successes required before moving the instance to the <code>Healthy</code> state.
                  type: string
              required:
                - LoadBalancerName
  /#Action=CreateAppCookieStickinessPolicy:
    get:
      x-aws-operation-name: CreateAppCookieStickinessPolicy
      operationId: GET CreateAppCookieStickinessPolicy
      description: <p>Generates a stickiness policy with sticky session lifetimes that
        follow that of an application-generated cookie. This policy can be
        associated only with HTTP/HTTPS listeners.</p> <p>This policy is similar
        to the policy created by <a>CreateLBCookieStickinessPolicy</a>, except
        that the lifetime of the special Elastic Load Balancing cookie,
        <code>AWSELB</code>, follows the lifetime of the application-generated
        cookie specified in the policy configuration. The load balancer only
        inserts a new stickiness cookie when the application response includes a
        new application cookie.</p> <p>If the application cookie is explicitly
        removed or expires, the session stops being sticky until a new
        application cookie is issued.</p> <p>For more information, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-application">Application-Controlled
        Session Stickiness</a> in the <i>Classic Load Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateAppCookieStickinessPolicyOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: DuplicatePolicyNameException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicatePolicyNameException"
        "482":
          description: TooManyPoliciesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyPoliciesException"
        "483":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: LoadBalancerName
          in: query
          required: true
          description: The name of the load balancer.
          schema:
            type: string
        - name: PolicyName
          in: query
          required: true
          description: The name of the policy being created. Policy names must consist of
            alphanumeric characters and dashes (-). This name must be unique
            within the set of policies for this load balancer.
          schema:
            type: string
        - name: CookieName
          in: query
          required: true
          description: The name of the application cookie used for stickiness.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateAppCookieStickinessPolicy
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateAppCookieStickinessPolicy
      operationId: POST CreateAppCookieStickinessPolicy
      description: <p>Generates a stickiness policy with sticky session lifetimes that
        follow that of an application-generated cookie. This policy can be
        associated only with HTTP/HTTPS listeners.</p> <p>This policy is similar
        to the policy created by <a>CreateLBCookieStickinessPolicy</a>, except
        that the lifetime of the special Elastic Load Balancing cookie,
        <code>AWSELB</code>, follows the lifetime of the application-generated
        cookie specified in the policy configuration. The load balancer only
        inserts a new stickiness cookie when the application response includes a
        new application cookie.</p> <p>If the application cookie is explicitly
        removed or expires, the session stops being sticky until a new
        application cookie is issued.</p> <p>For more information, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-application">Application-Controlled
        Session Stickiness</a> in the <i>Classic Load Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateAppCookieStickinessPolicyOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: DuplicatePolicyNameException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicatePolicyNameException"
        "482":
          description: TooManyPoliciesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyPoliciesException"
        "483":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateAppCookieStickinessPolicy
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerName:
                  description: The name of the load balancer.
                  type: string
                PolicyName:
                  description: The name of the policy being created. Policy names must
                    consist of alphanumeric characters and dashes (-). This name
                    must be unique within the set of policies for this load
                    balancer.
                  type: string
                CookieName:
                  description: The name of the application cookie used for stickiness.
                  type: string
              required:
                - LoadBalancerName
                - PolicyName
                - CookieName
  /#Action=CreateLBCookieStickinessPolicy:
    get:
      x-aws-operation-name: CreateLBCookieStickinessPolicy
      operationId: GET CreateLBCookieStickinessPolicy
      description: <p>Generates a stickiness policy with sticky session lifetimes
        controlled by the lifetime of the browser (user-agent) or a specified
        expiration period. This policy can be associated only with HTTP/HTTPS
        listeners.</p> <p>When a load balancer implements this policy, the load
        balancer uses a special cookie to track the instance for each request.
        When the load balancer receives a request, it first checks to see if
        this cookie is present in the request. If so, the load balancer sends
        the request to the application server specified in the cookie. If not,
        the load balancer sends the request to a server that is chosen based on
        the existing load-balancing algorithm.</p> <p>A cookie is inserted into
        the response for binding subsequent requests from the same user to that
        server. The validity of the cookie is based on the cookie expiration
        time, which is specified in the policy configuration.</p> <p>For more
        information, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-duration">Duration-Based
        Session Stickiness</a> in the <i>Classic Load Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateLBCookieStickinessPolicyOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: DuplicatePolicyNameException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicatePolicyNameException"
        "482":
          description: TooManyPoliciesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyPoliciesException"
        "483":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: LoadBalancerName
          in: query
          required: true
          description: The name of the load balancer.
          schema:
            type: string
        - name: PolicyName
          in: query
          required: true
          description: The name of the policy being created. Policy names must consist of
            alphanumeric characters and dashes (-). This name must be unique
            within the set of policies for this load balancer.
          schema:
            type: string
        - name: CookieExpirationPeriod
          in: query
          required: false
          description: The time period, in seconds, after which the cookie should be
            considered stale. If you do not specify this parameter, the default
            value is 0, which indicates that the sticky session should last for
            the duration of the browser session.
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateLBCookieStickinessPolicy
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateLBCookieStickinessPolicy
      operationId: POST CreateLBCookieStickinessPolicy
      description: <p>Generates a stickiness policy with sticky session lifetimes
        controlled by the lifetime of the browser (user-agent) or a specified
        expiration period. This policy can be associated only with HTTP/HTTPS
        listeners.</p> <p>When a load balancer implements this policy, the load
        balancer uses a special cookie to track the instance for each request.
        When the load balancer receives a request, it first checks to see if
        this cookie is present in the request. If so, the load balancer sends
        the request to the application server specified in the cookie. If not,
        the load balancer sends the request to a server that is chosen based on
        the existing load-balancing algorithm.</p> <p>A cookie is inserted into
        the response for binding subsequent requests from the same user to that
        server. The validity of the cookie is based on the cookie expiration
        time, which is specified in the policy configuration.</p> <p>For more
        information, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-duration">Duration-Based
        Session Stickiness</a> in the <i>Classic Load Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateLBCookieStickinessPolicyOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: DuplicatePolicyNameException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicatePolicyNameException"
        "482":
          description: TooManyPoliciesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyPoliciesException"
        "483":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateLBCookieStickinessPolicy
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerName:
                  description: The name of the load balancer.
                  type: string
                PolicyName:
                  description: The name of the policy being created. Policy names must
                    consist of alphanumeric characters and dashes (-). This name
                    must be unique within the set of policies for this load
                    balancer.
                  type: string
                CookieExpirationPeriod:
                  description: The time period, in seconds, after which the cookie should
                    be considered stale. If you do not specify this parameter,
                    the default value is 0, which indicates that the sticky
                    session should last for the duration of the browser session.
                  type: integer
              required:
                - LoadBalancerName
                - PolicyName
  /#Action=CreateLoadBalancer:
    get:
      x-aws-operation-name: CreateLoadBalancer
      operationId: GET CreateLoadBalancer
      description: <p>Creates a Classic Load Balancer.</p> <p>You can add listeners,
        security groups, subnets, and tags when you create your load balancer,
        or you can add them later using <a>CreateLoadBalancerListeners</a>,
        <a>ApplySecurityGroupsToLoadBalancer</a>,
        <a>AttachLoadBalancerToSubnets</a>, and <a>AddTags</a>.</p> <p>To
        describe your current load balancers, see <a>DescribeLoadBalancers</a>.
        When you are finished with a load balancer, you can delete it using
        <a>DeleteLoadBalancer</a>.</p> <p>You can create up to 20 load balancers
        per region per account. You can request an increase for the number of
        load balancers for your account. For more information, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-limits.html">Limits
        for Your Classic Load Balancer</a> in the <i>Classic Load Balancers
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateAccessPointOutput"
        "480":
          description: DuplicateAccessPointNameException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicateAccessPointNameException"
        "481":
          description: TooManyAccessPointsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyAccessPointsException"
        "482":
          description: CertificateNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateNotFoundException"
        "483":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
        "484":
          description: SubnetNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubnetNotFoundException"
        "485":
          description: InvalidSubnetException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnetException"
        "486":
          description: InvalidSecurityGroupException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSecurityGroupException"
        "487":
          description: InvalidSchemeException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSchemeException"
        "488":
          description: TooManyTagsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "489":
          description: DuplicateTagKeysException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicateTagKeysException"
        "490":
          description: UnsupportedProtocolException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedProtocolException"
        "491":
          description: OperationNotPermittedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: LoadBalancerName
          in: query
          required: true
          description: <p>The name of the load balancer.</p> <p>This name must be unique
            within your set of load balancers for the region, must have a
            maximum of 32 characters, must contain only alphanumeric characters
            or hyphens, and cannot begin or end with a hyphen.</p>
          schema:
            type: string
        - name: Listeners
          in: query
          required: true
          description: <p>The listeners.</p> <p>For more information, see <a
            href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html">Listeners
            for Your Classic Load Balancer</a> in the <i>Classic Load Balancers
            Guide</i>.</p>
          schema:
            type: array
            items:
              type: string
        - name: AvailabilityZones
          in: query
          required: false
          description: <p>One or more Availability Zones from the same region as the load
            balancer.</p> <p>You must specify at least one Availability
            Zone.</p> <p>You can add more Availability Zones after you create
            the load balancer using
            <a>EnableAvailabilityZonesForLoadBalancer</a>.</p>
          schema:
            type: array
            items:
              type: string
        - name: Subnets
          in: query
          required: false
          description: The IDs of the subnets in your VPC to attach to the load balancer.
            Specify one subnet per Availability Zone specified in
            <code>AvailabilityZones</code>.
          schema:
            type: array
            items:
              type: string
        - name: SecurityGroups
          in: query
          required: false
          description: The IDs of the security groups to assign to the load balancer.
          schema:
            type: array
            items:
              type: string
        - name: Scheme
          in: query
          required: false
          description: <p>The type of a load balancer. Valid only for load balancers in a
            VPC.</p> <p>By default, Elastic Load Balancing creates an
            Internet-facing load balancer with a DNS name that resolves to
            public IP addresses. For more information about Internet-facing and
            Internal load balancers, see <a
            href="http://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/how-elastic-load-balancing-works.html#load-balancer-scheme">Load
            Balancer Scheme</a> in the <i>Elastic Load Balancing User
            Guide</i>.</p> <p>Specify <code>internal</code> to create a load
            balancer with a DNS name that resolves to private IP addresses.</p>
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: <p>A list of tags to assign to the load balancer.</p> <p>For more
            information about tagging your load balancer, see <a
            href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/add-remove-tags.html">Tag
            Your Classic Load Balancer</a> in the <i>Classic Load Balancers
            Guide</i>.</p>
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateLoadBalancer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateLoadBalancer
      operationId: POST CreateLoadBalancer
      description: <p>Creates a Classic Load Balancer.</p> <p>You can add listeners,
        security groups, subnets, and tags when you create your load balancer,
        or you can add them later using <a>CreateLoadBalancerListeners</a>,
        <a>ApplySecurityGroupsToLoadBalancer</a>,
        <a>AttachLoadBalancerToSubnets</a>, and <a>AddTags</a>.</p> <p>To
        describe your current load balancers, see <a>DescribeLoadBalancers</a>.
        When you are finished with a load balancer, you can delete it using
        <a>DeleteLoadBalancer</a>.</p> <p>You can create up to 20 load balancers
        per region per account. You can request an increase for the number of
        load balancers for your account. For more information, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-limits.html">Limits
        for Your Classic Load Balancer</a> in the <i>Classic Load Balancers
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateAccessPointOutput"
        "480":
          description: DuplicateAccessPointNameException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicateAccessPointNameException"
        "481":
          description: TooManyAccessPointsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyAccessPointsException"
        "482":
          description: CertificateNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateNotFoundException"
        "483":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
        "484":
          description: SubnetNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubnetNotFoundException"
        "485":
          description: InvalidSubnetException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnetException"
        "486":
          description: InvalidSecurityGroupException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSecurityGroupException"
        "487":
          description: InvalidSchemeException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSchemeException"
        "488":
          description: TooManyTagsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "489":
          description: DuplicateTagKeysException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicateTagKeysException"
        "490":
          description: UnsupportedProtocolException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedProtocolException"
        "491":
          description: OperationNotPermittedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateLoadBalancer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerName:
                  description: <p>The name of the load balancer.</p> <p>This name must be
                    unique within your set of load balancers for the region,
                    must have a maximum of 32 characters, must contain only
                    alphanumeric characters or hyphens, and cannot begin or end
                    with a hyphen.</p>
                  type: string
                Listeners:
                  description: <p>The listeners.</p> <p>For more information, see <a
                    href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html">Listeners
                    for Your Classic Load Balancer</a> in the <i>Classic Load
                    Balancers Guide</i>.</p>
                  type: array
                  items:
                    type: string
                AvailabilityZones:
                  description: <p>One or more Availability Zones from the same region as
                    the load balancer.</p> <p>You must specify at least one
                    Availability Zone.</p> <p>You can add more Availability
                    Zones after you create the load balancer using
                    <a>EnableAvailabilityZonesForLoadBalancer</a>.</p>
                  type: array
                  items:
                    type: string
                Subnets:
                  description: The IDs of the subnets in your VPC to attach to the load
                    balancer. Specify one subnet per Availability Zone specified
                    in <code>AvailabilityZones</code>.
                  type: array
                  items:
                    type: string
                SecurityGroups:
                  description: The IDs of the security groups to assign to the load
                    balancer.
                  type: array
                  items:
                    type: string
                Scheme:
                  description: <p>The type of a load balancer. Valid only for load
                    balancers in a VPC.</p> <p>By default, Elastic Load
                    Balancing creates an Internet-facing load balancer with a
                    DNS name that resolves to public IP addresses. For more
                    information about Internet-facing and Internal load
                    balancers, see <a
                    href="http://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/how-elastic-load-balancing-works.html#load-balancer-scheme">Load
                    Balancer Scheme</a> in the <i>Elastic Load Balancing User
                    Guide</i>.</p> <p>Specify <code>internal</code> to create a
                    load balancer with a DNS name that resolves to private IP
                    addresses.</p>
                  type: string
                Tags:
                  description: <p>A list of tags to assign to the load balancer.</p> <p>For
                    more information about tagging your load balancer, see <a
                    href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/add-remove-tags.html">Tag
                    Your Classic Load Balancer</a> in the <i>Classic Load
                    Balancers Guide</i>.</p>
                  type: array
                  items:
                    type: string
              required:
                - LoadBalancerName
                - Listeners
  /#Action=CreateLoadBalancerListeners:
    get:
      x-aws-operation-name: CreateLoadBalancerListeners
      operationId: GET CreateLoadBalancerListeners
      description: <p>Creates one or more listeners for the specified load balancer. If a
        listener with the specified port does not already exist, it is created;
        otherwise, the properties of the new listener must match the properties
        of the existing listener.</p> <p>For more information, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html">Listeners
        for Your Classic Load Balancer</a> in the <i>Classic Load Balancers
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateLoadBalancerListenerOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: DuplicateListenerException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicateListenerException"
        "482":
          description: CertificateNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateNotFoundException"
        "483":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
        "484":
          description: UnsupportedProtocolException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedProtocolException"
      parameters:
        - name: LoadBalancerName
          in: query
          required: true
          description: The name of the load balancer.
          schema:
            type: string
        - name: Listeners
          in: query
          required: true
          description: The listeners.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateLoadBalancerListeners
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateLoadBalancerListeners
      operationId: POST CreateLoadBalancerListeners
      description: <p>Creates one or more listeners for the specified load balancer. If a
        listener with the specified port does not already exist, it is created;
        otherwise, the properties of the new listener must match the properties
        of the existing listener.</p> <p>For more information, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html">Listeners
        for Your Classic Load Balancer</a> in the <i>Classic Load Balancers
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateLoadBalancerListenerOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: DuplicateListenerException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicateListenerException"
        "482":
          description: CertificateNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateNotFoundException"
        "483":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
        "484":
          description: UnsupportedProtocolException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedProtocolException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateLoadBalancerListeners
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerName:
                  description: The name of the load balancer.
                  type: string
                Listeners:
                  description: The listeners.
                  type: array
                  items:
                    type: string
              required:
                - LoadBalancerName
                - Listeners
  /#Action=CreateLoadBalancerPolicy:
    get:
      x-aws-operation-name: CreateLoadBalancerPolicy
      operationId: GET CreateLoadBalancerPolicy
      description: <p>Creates a policy with the specified attributes for the specified load
        balancer.</p> <p>Policies are settings that are saved for your load
        balancer and that can be applied to the listener or the application
        server, depending on the policy type.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateLoadBalancerPolicyOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: PolicyTypeNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PolicyTypeNotFoundException"
        "482":
          description: DuplicatePolicyNameException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicatePolicyNameException"
        "483":
          description: TooManyPoliciesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyPoliciesException"
        "484":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: LoadBalancerName
          in: query
          required: true
          description: The name of the load balancer.
          schema:
            type: string
        - name: PolicyName
          in: query
          required: true
          description: The name of the load balancer policy to be created. This name must
            be unique within the set of policies for this load balancer.
          schema:
            type: string
        - name: PolicyTypeName
          in: query
          required: true
          description: The name of the base policy type. To get the list of policy types,
            use <a>DescribeLoadBalancerPolicyTypes</a>.
          schema:
            type: string
        - name: PolicyAttributes
          in: query
          required: false
          description: The policy attributes.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateLoadBalancerPolicy
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateLoadBalancerPolicy
      operationId: POST CreateLoadBalancerPolicy
      description: <p>Creates a policy with the specified attributes for the specified load
        balancer.</p> <p>Policies are settings that are saved for your load
        balancer and that can be applied to the listener or the application
        server, depending on the policy type.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateLoadBalancerPolicyOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: PolicyTypeNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PolicyTypeNotFoundException"
        "482":
          description: DuplicatePolicyNameException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicatePolicyNameException"
        "483":
          description: TooManyPoliciesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyPoliciesException"
        "484":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateLoadBalancerPolicy
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerName:
                  description: The name of the load balancer.
                  type: string
                PolicyName:
                  description: The name of the load balancer policy to be created. This
                    name must be unique within the set of policies for this load
                    balancer.
                  type: string
                PolicyTypeName:
                  description: The name of the base policy type. To get the list of policy
                    types, use <a>DescribeLoadBalancerPolicyTypes</a>.
                  type: string
                PolicyAttributes:
                  description: The policy attributes.
                  type: array
                  items:
                    type: string
              required:
                - LoadBalancerName
                - PolicyName
                - PolicyTypeName
  /#Action=DeleteLoadBalancer:
    get:
      x-aws-operation-name: DeleteLoadBalancer
      operationId: GET DeleteLoadBalancer
      description: <p>Deletes the specified load balancer.</p> <p>If you are attempting to
        recreate a load balancer, you must reconfigure all settings. The DNS
        name associated with a deleted load balancer are no longer usable. The
        name and associated DNS record of the deleted load balancer no longer
        exist and traffic sent to any of its IP addresses is no longer delivered
        to your instances.</p> <p>If the load balancer does not exist or has
        already been deleted, the call to <code>DeleteLoadBalancer</code> still
        succeeds.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteAccessPointOutput"
      parameters:
        - name: LoadBalancerName
          in: query
          required: true
          description: The name of the load balancer.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteLoadBalancer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteLoadBalancer
      operationId: POST DeleteLoadBalancer
      description: <p>Deletes the specified load balancer.</p> <p>If you are attempting to
        recreate a load balancer, you must reconfigure all settings. The DNS
        name associated with a deleted load balancer are no longer usable. The
        name and associated DNS record of the deleted load balancer no longer
        exist and traffic sent to any of its IP addresses is no longer delivered
        to your instances.</p> <p>If the load balancer does not exist or has
        already been deleted, the call to <code>DeleteLoadBalancer</code> still
        succeeds.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteAccessPointOutput"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteLoadBalancer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        $ref: "#/components/requestBodies/POST_DeleteLoadBalancer"
  /#Action=DeleteLoadBalancerListeners:
    get:
      x-aws-operation-name: DeleteLoadBalancerListeners
      operationId: GET DeleteLoadBalancerListeners
      description: Deletes the specified listeners from the specified load balancer.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteLoadBalancerListenerOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
      parameters:
        - name: LoadBalancerName
          in: query
          required: true
          description: The name of the load balancer.
          schema:
            type: string
        - name: LoadBalancerPorts
          in: query
          required: true
          description: The client port numbers of the listeners.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteLoadBalancerListeners
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteLoadBalancerListeners
      operationId: POST DeleteLoadBalancerListeners
      description: Deletes the specified listeners from the specified load balancer.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteLoadBalancerListenerOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteLoadBalancerListeners
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerName:
                  description: The name of the load balancer.
                  type: string
                LoadBalancerPorts:
                  description: The client port numbers of the listeners.
                  type: array
                  items:
                    type: string
              required:
                - LoadBalancerName
                - LoadBalancerPorts
  /#Action=DeleteLoadBalancerPolicy:
    get:
      x-aws-operation-name: DeleteLoadBalancerPolicy
      operationId: GET DeleteLoadBalancerPolicy
      description: Deletes the specified policy from the specified load balancer. This
        policy must not be enabled for any listeners.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteLoadBalancerPolicyOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: LoadBalancerName
          in: query
          required: true
          description: The name of the load balancer.
          schema:
            type: string
        - name: PolicyName
          in: query
          required: true
          description: The name of the policy.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteLoadBalancerPolicy
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteLoadBalancerPolicy
      operationId: POST DeleteLoadBalancerPolicy
      description: Deletes the specified policy from the specified load balancer. This
        policy must not be enabled for any listeners.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteLoadBalancerPolicyOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteLoadBalancerPolicy
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerName:
                  description: The name of the load balancer.
                  type: string
                PolicyName:
                  description: The name of the policy.
                  type: string
              required:
                - LoadBalancerName
                - PolicyName
  /#Action=DeregisterInstancesFromLoadBalancer:
    get:
      x-aws-operation-name: DeregisterInstancesFromLoadBalancer
      operationId: GET DeregisterInstancesFromLoadBalancer
      description: <p>Deregisters the specified instances from the specified load balancer.
        After the instance is deregistered, it no longer receives traffic from
        the load balancer.</p> <p>You can use <a>DescribeLoadBalancers</a> to
        verify that the instance is deregistered from the load balancer.</p>
        <p>For more information, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-deregister-register-instances.html">Register
        or De-Register EC2 Instances</a> in the <i>Classic Load Balancers
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeregisterEndPointsOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: InvalidEndPointException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidEndPointException"
      parameters:
        - name: LoadBalancerName
          in: query
          required: true
          description: The name of the load balancer.
          schema:
            type: string
        - name: Instances
          in: query
          required: true
          description: The IDs of the instances.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeregisterInstancesFromLoadBalancer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeregisterInstancesFromLoadBalancer
      operationId: POST DeregisterInstancesFromLoadBalancer
      description: <p>Deregisters the specified instances from the specified load balancer.
        After the instance is deregistered, it no longer receives traffic from
        the load balancer.</p> <p>You can use <a>DescribeLoadBalancers</a> to
        verify that the instance is deregistered from the load balancer.</p>
        <p>For more information, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-deregister-register-instances.html">Register
        or De-Register EC2 Instances</a> in the <i>Classic Load Balancers
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeregisterEndPointsOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: InvalidEndPointException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidEndPointException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeregisterInstancesFromLoadBalancer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        $ref: "#/components/requestBodies/POST_DeregisterInstancesFromLoadBalancer"
  /#Action=DescribeAccountLimits:
    get:
      x-aws-operation-name: DescribeAccountLimits
      operationId: GET DescribeAccountLimits
      description: <p>Describes the current Elastic Load Balancing resource limits for your
        AWS account.</p> <p>For more information, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-limits.html">Limits
        for Your Classic Load Balancer</a> in the <i>Classic Load Balancers
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeAccountLimitsOutput"
      parameters:
        - name: Marker
          in: query
          required: false
          description: The marker for the next set of results. (You received this marker
            from a previous call.)
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: The maximum number of results to return with this call.
          schema:
            type: integer
            minimum: 1
            maximum: 400
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAccountLimits
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeAccountLimits
      operationId: POST DescribeAccountLimits
      description: <p>Describes the current Elastic Load Balancing resource limits for your
        AWS account.</p> <p>For more information, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-limits.html">Limits
        for Your Classic Load Balancer</a> in the <i>Classic Load Balancers
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeAccountLimitsOutput"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAccountLimits
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Marker:
                  description: The marker for the next set of results. (You received this
                    marker from a previous call.)
                  type: string
                PageSize:
                  description: The maximum number of results to return with this call.
                  type: integer
                  minimum: 1
                  maximum: 400
  /#Action=DescribeInstanceHealth:
    get:
      x-aws-operation-name: DescribeInstanceHealth
      operationId: GET DescribeInstanceHealth
      description: Describes the state of the specified instances with respect to the
        specified load balancer. If no instances are specified, the call
        describes the state of all instances that are currently registered with
        the load balancer. If instances are specified, their state is returned
        even if they are no longer registered with the load balancer. The state
        of terminated instances is not returned.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeEndPointStateOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: InvalidEndPointException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidEndPointException"
      parameters:
        - name: LoadBalancerName
          in: query
          required: true
          description: The name of the load balancer.
          schema:
            type: string
        - name: Instances
          in: query
          required: false
          description: The IDs of the instances.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeInstanceHealth
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeInstanceHealth
      operationId: POST DescribeInstanceHealth
      description: Describes the state of the specified instances with respect to the
        specified load balancer. If no instances are specified, the call
        describes the state of all instances that are currently registered with
        the load balancer. If instances are specified, their state is returned
        even if they are no longer registered with the load balancer. The state
        of terminated instances is not returned.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeEndPointStateOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: InvalidEndPointException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidEndPointException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeInstanceHealth
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerName:
                  description: The name of the load balancer.
                  type: string
                Instances:
                  description: The IDs of the instances.
                  type: array
                  items:
                    type: string
              required:
                - LoadBalancerName
  /#Action=DescribeLoadBalancerAttributes:
    get:
      x-aws-operation-name: DescribeLoadBalancerAttributes
      operationId: GET DescribeLoadBalancerAttributes
      description: Describes the attributes for the specified load balancer.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeLoadBalancerAttributesOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: LoadBalancerAttributeNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerAttributeNotFoundException"
      parameters:
        - name: LoadBalancerName
          in: query
          required: true
          description: The name of the load balancer.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLoadBalancerAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeLoadBalancerAttributes
      operationId: POST DescribeLoadBalancerAttributes
      description: Describes the attributes for the specified load balancer.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeLoadBalancerAttributesOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: LoadBalancerAttributeNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerAttributeNotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLoadBalancerAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        $ref: "#/components/requestBodies/POST_DeleteLoadBalancer"
  /#Action=DescribeLoadBalancerPolicies:
    get:
      x-aws-operation-name: DescribeLoadBalancerPolicies
      operationId: GET DescribeLoadBalancerPolicies
      description: <p>Describes the specified policies.</p> <p>If you specify a load
        balancer name, the action returns the descriptions of all policies
        created for the load balancer. If you specify a policy name associated
        with your load balancer, the action returns the description of that
        policy. If you don't specify a load balancer name, the action returns
        descriptions of the specified sample policies, or descriptions of all
        sample policies. The names of the sample policies have the
        <code>ELBSample-</code> prefix.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeLoadBalancerPoliciesOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: PolicyNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PolicyNotFoundException"
      parameters:
        - name: LoadBalancerName
          in: query
          required: false
          description: The name of the load balancer.
          schema:
            type: string
        - name: PolicyNames
          in: query
          required: false
          description: The names of the policies.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLoadBalancerPolicies
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeLoadBalancerPolicies
      operationId: POST DescribeLoadBalancerPolicies
      description: <p>Describes the specified policies.</p> <p>If you specify a load
        balancer name, the action returns the descriptions of all policies
        created for the load balancer. If you specify a policy name associated
        with your load balancer, the action returns the description of that
        policy. If you don't specify a load balancer name, the action returns
        descriptions of the specified sample policies, or descriptions of all
        sample policies. The names of the sample policies have the
        <code>ELBSample-</code> prefix.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeLoadBalancerPoliciesOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: PolicyNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PolicyNotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLoadBalancerPolicies
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerName:
                  description: The name of the load balancer.
                  type: string
                PolicyNames:
                  description: The names of the policies.
                  type: array
                  items:
                    type: string
  /#Action=DescribeLoadBalancerPolicyTypes:
    get:
      x-aws-operation-name: DescribeLoadBalancerPolicyTypes
      operationId: GET DescribeLoadBalancerPolicyTypes
      description: <p>Describes the specified load balancer policy types or all load
        balancer policy types.</p> <p>The description of each type indicates how
        it can be used. For example, some policies can be used only with layer 7
        listeners, some policies can be used only with layer 4 listeners, and
        some policies can be used only with your EC2 instances.</p> <p>You can
        use <a>CreateLoadBalancerPolicy</a> to create a policy configuration for
        any of these policy types. Then, depending on the policy type, use
        either <a>SetLoadBalancerPoliciesOfListener</a> or
        <a>SetLoadBalancerPoliciesForBackendServer</a> to set the policy.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeLoadBalancerPolicyTypesOutput"
        "480":
          description: PolicyTypeNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PolicyTypeNotFoundException"
      parameters:
        - name: PolicyTypeNames
          in: query
          required: false
          description: The names of the policy types. If no names are specified, describes
            all policy types defined by Elastic Load Balancing.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLoadBalancerPolicyTypes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeLoadBalancerPolicyTypes
      operationId: POST DescribeLoadBalancerPolicyTypes
      description: <p>Describes the specified load balancer policy types or all load
        balancer policy types.</p> <p>The description of each type indicates how
        it can be used. For example, some policies can be used only with layer 7
        listeners, some policies can be used only with layer 4 listeners, and
        some policies can be used only with your EC2 instances.</p> <p>You can
        use <a>CreateLoadBalancerPolicy</a> to create a policy configuration for
        any of these policy types. Then, depending on the policy type, use
        either <a>SetLoadBalancerPoliciesOfListener</a> or
        <a>SetLoadBalancerPoliciesForBackendServer</a> to set the policy.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeLoadBalancerPolicyTypesOutput"
        "480":
          description: PolicyTypeNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PolicyTypeNotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLoadBalancerPolicyTypes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                PolicyTypeNames:
                  description: The names of the policy types. If no names are specified,
                    describes all policy types defined by Elastic Load
                    Balancing.
                  type: array
                  items:
                    type: string
  /#Action=DescribeLoadBalancers:
    get:
      x-aws-operation-name: DescribeLoadBalancers
      operationId: GET DescribeLoadBalancers
      description: Describes the specified the load balancers. If no load balancers are
        specified, the call describes all of your load balancers.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeAccessPointsOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: DependencyThrottleException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependencyThrottleException"
      parameters:
        - name: LoadBalancerNames
          in: query
          required: false
          description: The names of the load balancers.
          schema:
            type: array
            items:
              type: string
        - name: Marker
          in: query
          required: false
          description: The marker for the next set of results. (You received this marker
            from a previous call.)
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: The maximum number of results to return with this call (a number
            from 1 to 400). The default is 400.
          schema:
            type: integer
            minimum: 1
            maximum: 400
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLoadBalancers
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeLoadBalancers
      operationId: POST DescribeLoadBalancers
      description: Describes the specified the load balancers. If no load balancers are
        specified, the call describes all of your load balancers.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeAccessPointsOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: DependencyThrottleException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DependencyThrottleException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLoadBalancers
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerNames:
                  description: The names of the load balancers.
                  type: array
                  items:
                    type: string
                Marker:
                  description: The marker for the next set of results. (You received this
                    marker from a previous call.)
                  type: string
                PageSize:
                  description: The maximum number of results to return with this call (a
                    number from 1 to 400). The default is 400.
                  type: integer
                  minimum: 1
                  maximum: 400
  /#Action=DescribeTags:
    get:
      x-aws-operation-name: DescribeTags
      operationId: GET DescribeTags
      description: Describes the tags associated with the specified load balancers.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeTagsOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
      parameters:
        - name: LoadBalancerNames
          in: query
          required: true
          description: The names of the load balancers.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeTags
      operationId: POST DescribeTags
      description: Describes the tags associated with the specified load balancers.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeTagsOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerNames:
                  description: The names of the load balancers.
                  type: array
                  items:
                    type: string
              required:
                - LoadBalancerNames
  /#Action=DetachLoadBalancerFromSubnets:
    get:
      x-aws-operation-name: DetachLoadBalancerFromSubnets
      operationId: GET DetachLoadBalancerFromSubnets
      description: <p>Removes the specified subnets from the set of configured subnets for
        the load balancer.</p> <p>After a subnet is removed, all EC2 instances
        registered with the load balancer in the removed subnet go into the
        <code>OutOfService</code> state. Then, the load balancer balances the
        traffic among the remaining routable subnets.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DetachLoadBalancerFromSubnetsOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: LoadBalancerName
          in: query
          required: true
          description: The name of the load balancer.
          schema:
            type: string
        - name: Subnets
          in: query
          required: true
          description: The IDs of the subnets.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DetachLoadBalancerFromSubnets
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DetachLoadBalancerFromSubnets
      operationId: POST DetachLoadBalancerFromSubnets
      description: <p>Removes the specified subnets from the set of configured subnets for
        the load balancer.</p> <p>After a subnet is removed, all EC2 instances
        registered with the load balancer in the removed subnet go into the
        <code>OutOfService</code> state. Then, the load balancer balances the
        traffic among the remaining routable subnets.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DetachLoadBalancerFromSubnetsOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DetachLoadBalancerFromSubnets
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerName:
                  description: The name of the load balancer.
                  type: string
                Subnets:
                  description: The IDs of the subnets.
                  type: array
                  items:
                    type: string
              required:
                - LoadBalancerName
                - Subnets
  /#Action=DisableAvailabilityZonesForLoadBalancer:
    get:
      x-aws-operation-name: DisableAvailabilityZonesForLoadBalancer
      operationId: GET DisableAvailabilityZonesForLoadBalancer
      description: <p>Removes the specified Availability Zones from the set of Availability
        Zones for the specified load balancer in EC2-Classic or a default
        VPC.</p> <p>For load balancers in a non-default VPC, use
        <a>DetachLoadBalancerFromSubnets</a>.</p> <p>There must be at least one
        Availability Zone registered with a load balancer at all times. After an
        Availability Zone is removed, all instances registered with the load
        balancer that are in the removed Availability Zone go into the
        <code>OutOfService</code> state. Then, the load balancer attempts to
        equally balance the traffic among its remaining Availability Zones.</p>
        <p>For more information, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-az.html">Add
        or Remove Availability Zones</a> in the <i>Classic Load Balancers
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RemoveAvailabilityZonesOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: LoadBalancerName
          in: query
          required: true
          description: The name of the load balancer.
          schema:
            type: string
        - name: AvailabilityZones
          in: query
          required: true
          description: The Availability Zones.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DisableAvailabilityZonesForLoadBalancer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DisableAvailabilityZonesForLoadBalancer
      operationId: POST DisableAvailabilityZonesForLoadBalancer
      description: <p>Removes the specified Availability Zones from the set of Availability
        Zones for the specified load balancer in EC2-Classic or a default
        VPC.</p> <p>For load balancers in a non-default VPC, use
        <a>DetachLoadBalancerFromSubnets</a>.</p> <p>There must be at least one
        Availability Zone registered with a load balancer at all times. After an
        Availability Zone is removed, all instances registered with the load
        balancer that are in the removed Availability Zone go into the
        <code>OutOfService</code> state. Then, the load balancer attempts to
        equally balance the traffic among its remaining Availability Zones.</p>
        <p>For more information, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-az.html">Add
        or Remove Availability Zones</a> in the <i>Classic Load Balancers
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RemoveAvailabilityZonesOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DisableAvailabilityZonesForLoadBalancer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerName:
                  description: The name of the load balancer.
                  type: string
                AvailabilityZones:
                  description: The Availability Zones.
                  type: array
                  items:
                    type: string
              required:
                - LoadBalancerName
                - AvailabilityZones
  /#Action=EnableAvailabilityZonesForLoadBalancer:
    get:
      x-aws-operation-name: EnableAvailabilityZonesForLoadBalancer
      operationId: GET EnableAvailabilityZonesForLoadBalancer
      description: <p>Adds the specified Availability Zones to the set of Availability
        Zones for the specified load balancer in EC2-Classic or a default
        VPC.</p> <p>For load balancers in a non-default VPC, use
        <a>AttachLoadBalancerToSubnets</a>.</p> <p>The load balancer evenly
        distributes requests across all its registered Availability Zones that
        contain instances. For more information, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-az.html">Add
        or Remove Availability Zones</a> in the <i>Classic Load Balancers
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AddAvailabilityZonesOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
      parameters:
        - name: LoadBalancerName
          in: query
          required: true
          description: The name of the load balancer.
          schema:
            type: string
        - name: AvailabilityZones
          in: query
          required: true
          description: The Availability Zones. These must be in the same region as the load
            balancer.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - EnableAvailabilityZonesForLoadBalancer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: EnableAvailabilityZonesForLoadBalancer
      operationId: POST EnableAvailabilityZonesForLoadBalancer
      description: <p>Adds the specified Availability Zones to the set of Availability
        Zones for the specified load balancer in EC2-Classic or a default
        VPC.</p> <p>For load balancers in a non-default VPC, use
        <a>AttachLoadBalancerToSubnets</a>.</p> <p>The load balancer evenly
        distributes requests across all its registered Availability Zones that
        contain instances. For more information, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-az.html">Add
        or Remove Availability Zones</a> in the <i>Classic Load Balancers
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AddAvailabilityZonesOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - EnableAvailabilityZonesForLoadBalancer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerName:
                  description: The name of the load balancer.
                  type: string
                AvailabilityZones:
                  description: The Availability Zones. These must be in the same region as
                    the load balancer.
                  type: array
                  items:
                    type: string
              required:
                - LoadBalancerName
                - AvailabilityZones
  /#Action=ModifyLoadBalancerAttributes:
    get:
      x-aws-operation-name: ModifyLoadBalancerAttributes
      operationId: GET ModifyLoadBalancerAttributes
      description: <p>Modifies the attributes of the specified load balancer.</p> <p>You
        can modify the load balancer attributes, such as
        <code>AccessLogs</code>, <code>ConnectionDraining</code>, and
        <code>CrossZoneLoadBalancing</code> by either enabling or disabling
        them. Or, you can modify the load balancer attribute
        <code>ConnectionSettings</code> by specifying an idle connection timeout
        value for your load balancer.</p> <p>For more information, see the
        following in the <i>Classic Load Balancers Guide</i>:</p> <ul> <li> <p>
        <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-crosszone-lb.html">Cross-Zone
        Load Balancing</a> </p> </li> <li> <p> <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-conn-drain.html">Connection
        Draining</a> </p> </li> <li> <p> <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/access-log-collection.html">Access
        Logs</a> </p> </li> <li> <p> <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-idle-timeout.html">Idle
        Connection Timeout</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyLoadBalancerAttributesOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: LoadBalancerAttributeNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerAttributeNotFoundException"
        "482":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: LoadBalancerName
          in: query
          required: true
          description: The name of the load balancer.
          schema:
            type: string
        - name: LoadBalancerAttributes.CrossZoneLoadBalancing
          in: query
          description: >-
            The attributes for a load balancer.

            <p>If enabled, the load balancer routes the request traffic evenly across all instances regardless of the Availability Zones.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-crosszone-lb.html">Configure Cross-Zone Load Balancing</a> in the <i>Classic Load Balancers Guide</i>.</p>
          schema:
            type: string
        - name: LoadBalancerAttributes.AccessLog
          in: query
          description: >-
            The attributes for a load balancer.

            <p>If enabled, the load balancer captures detailed information of all requests and delivers the information to the Amazon S3 bucket that you specify.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-access-logs.html">Enable Access Logs</a> in the <i>Classic Load Balancers Guide</i>.</p>
          schema:
            type: string
        - name: LoadBalancerAttributes.ConnectionDraining
          in: query
          description: >-
            The attributes for a load balancer.

            <p>If enabled, the load balancer allows existing requests to complete before the load balancer shifts traffic away from a deregistered or unhealthy instance.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-conn-drain.html">Configure Connection Draining</a> in the <i>Classic Load Balancers Guide</i>.</p>
          schema:
            type: string
        - name: LoadBalancerAttributes.ConnectionSettings
          in: query
          description: >-
            The attributes for a load balancer.

            <p>If enabled, the load balancer allows the connections to remain idle (no data is sent over the connection) for the specified duration.</p> <p>By default, Elastic Load Balancing maintains a 60-second idle connection timeout for both front-end and back-end connections of your load balancer. For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-idle-timeout.html">Configure Idle Connection Timeout</a> in the <i>Classic Load Balancers Guide</i>.</p>
          schema:
            type: string
        - name: LoadBalancerAttributes.AdditionalAttributes
          in: query
          description: |-
            The attributes for a load balancer.
            This parameter is reserved.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyLoadBalancerAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyLoadBalancerAttributes
      operationId: POST ModifyLoadBalancerAttributes
      description: <p>Modifies the attributes of the specified load balancer.</p> <p>You
        can modify the load balancer attributes, such as
        <code>AccessLogs</code>, <code>ConnectionDraining</code>, and
        <code>CrossZoneLoadBalancing</code> by either enabling or disabling
        them. Or, you can modify the load balancer attribute
        <code>ConnectionSettings</code> by specifying an idle connection timeout
        value for your load balancer.</p> <p>For more information, see the
        following in the <i>Classic Load Balancers Guide</i>:</p> <ul> <li> <p>
        <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-crosszone-lb.html">Cross-Zone
        Load Balancing</a> </p> </li> <li> <p> <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-conn-drain.html">Connection
        Draining</a> </p> </li> <li> <p> <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/access-log-collection.html">Access
        Logs</a> </p> </li> <li> <p> <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-idle-timeout.html">Idle
        Connection Timeout</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyLoadBalancerAttributesOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: LoadBalancerAttributeNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerAttributeNotFoundException"
        "482":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyLoadBalancerAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerName:
                  description: The name of the load balancer.
                  type: string
                LoadBalancerAttributes.CrossZoneLoadBalancing:
                  description: >-
                    The attributes for a load balancer.

                    <p>If enabled, the load balancer routes the request traffic evenly across all instances regardless of the Availability Zones.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-crosszone-lb.html">Configure Cross-Zone Load Balancing</a> in the <i>Classic Load Balancers Guide</i>.</p>
                  type: string
                LoadBalancerAttributes.AccessLog:
                  description: >-
                    The attributes for a load balancer.

                    <p>If enabled, the load balancer captures detailed information of all requests and delivers the information to the Amazon S3 bucket that you specify.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-access-logs.html">Enable Access Logs</a> in the <i>Classic Load Balancers Guide</i>.</p>
                  type: string
                LoadBalancerAttributes.ConnectionDraining:
                  description: >-
                    The attributes for a load balancer.

                    <p>If enabled, the load balancer allows existing requests to complete before the load balancer shifts traffic away from a deregistered or unhealthy instance.</p> <p>For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-conn-drain.html">Configure Connection Draining</a> in the <i>Classic Load Balancers Guide</i>.</p>
                  type: string
                LoadBalancerAttributes.ConnectionSettings:
                  description: >-
                    The attributes for a load balancer.

                    <p>If enabled, the load balancer allows the connections to remain idle (no data is sent over the connection) for the specified duration.</p> <p>By default, Elastic Load Balancing maintains a 60-second idle connection timeout for both front-end and back-end connections of your load balancer. For more information, see <a href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-idle-timeout.html">Configure Idle Connection Timeout</a> in the <i>Classic Load Balancers Guide</i>.</p>
                  type: string
                LoadBalancerAttributes.AdditionalAttributes:
                  description: |-
                    The attributes for a load balancer.
                    This parameter is reserved.
                  type: array
                  items:
                    type: string
              required:
                - LoadBalancerName
  /#Action=RegisterInstancesWithLoadBalancer:
    get:
      x-aws-operation-name: RegisterInstancesWithLoadBalancer
      operationId: GET RegisterInstancesWithLoadBalancer
      description: <p>Adds the specified instances to the specified load balancer.</p>
        <p>The instance must be a running instance in the same network as the
        load balancer (EC2-Classic or the same VPC). If you have EC2-Classic
        instances and a load balancer in a VPC with ClassicLink enabled, you can
        link the EC2-Classic instances to that VPC and then register the linked
        EC2-Classic instances with the load balancer in the VPC.</p> <p>Note
        that <code>RegisterInstanceWithLoadBalancer</code> completes when the
        request has been registered. Instance registration takes a little time
        to complete. To check the state of the registered instances, use
        <a>DescribeLoadBalancers</a> or <a>DescribeInstanceHealth</a>.</p>
        <p>After the instance is registered, it starts receiving traffic and
        requests from the load balancer. Any instance that is not in one of the
        Availability Zones registered for the load balancer is moved to the
        <code>OutOfService</code> state. If an Availability Zone is added to the
        load balancer later, any instances registered with the load balancer
        move to the <code>InService</code> state.</p> <p>To deregister instances
        from a load balancer, use
        <a>DeregisterInstancesFromLoadBalancer</a>.</p> <p>For more information,
        see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-deregister-register-instances.html">Register
        or De-Register EC2 Instances</a> in the <i>Classic Load Balancers
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RegisterEndPointsOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: InvalidEndPointException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidEndPointException"
      parameters:
        - name: LoadBalancerName
          in: query
          required: true
          description: The name of the load balancer.
          schema:
            type: string
        - name: Instances
          in: query
          required: true
          description: The IDs of the instances.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RegisterInstancesWithLoadBalancer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RegisterInstancesWithLoadBalancer
      operationId: POST RegisterInstancesWithLoadBalancer
      description: <p>Adds the specified instances to the specified load balancer.</p>
        <p>The instance must be a running instance in the same network as the
        load balancer (EC2-Classic or the same VPC). If you have EC2-Classic
        instances and a load balancer in a VPC with ClassicLink enabled, you can
        link the EC2-Classic instances to that VPC and then register the linked
        EC2-Classic instances with the load balancer in the VPC.</p> <p>Note
        that <code>RegisterInstanceWithLoadBalancer</code> completes when the
        request has been registered. Instance registration takes a little time
        to complete. To check the state of the registered instances, use
        <a>DescribeLoadBalancers</a> or <a>DescribeInstanceHealth</a>.</p>
        <p>After the instance is registered, it starts receiving traffic and
        requests from the load balancer. Any instance that is not in one of the
        Availability Zones registered for the load balancer is moved to the
        <code>OutOfService</code> state. If an Availability Zone is added to the
        load balancer later, any instances registered with the load balancer
        move to the <code>InService</code> state.</p> <p>To deregister instances
        from a load balancer, use
        <a>DeregisterInstancesFromLoadBalancer</a>.</p> <p>For more information,
        see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-deregister-register-instances.html">Register
        or De-Register EC2 Instances</a> in the <i>Classic Load Balancers
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RegisterEndPointsOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: InvalidEndPointException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidEndPointException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RegisterInstancesWithLoadBalancer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        $ref: "#/components/requestBodies/POST_DeregisterInstancesFromLoadBalancer"
  /#Action=RemoveTags:
    get:
      x-aws-operation-name: RemoveTags
      operationId: GET RemoveTags
      description: Removes one or more tags from the specified load balancer.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RemoveTagsOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
      parameters:
        - name: LoadBalancerNames
          in: query
          required: true
          description: The name of the load balancer. You can specify a maximum of one load
            balancer name.
          schema:
            type: array
            items:
              type: string
        - name: Tags
          in: query
          required: true
          description: The list of tag keys to remove.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RemoveTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RemoveTags
      operationId: POST RemoveTags
      description: Removes one or more tags from the specified load balancer.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RemoveTagsOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RemoveTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerNames:
                  description: The name of the load balancer. You can specify a maximum of
                    one load balancer name.
                  type: array
                  items:
                    type: string
                Tags:
                  description: The list of tag keys to remove.
                  type: array
                  items:
                    type: string
              required:
                - LoadBalancerNames
                - Tags
  /#Action=SetLoadBalancerListenerSSLCertificate:
    get:
      x-aws-operation-name: SetLoadBalancerListenerSSLCertificate
      operationId: GET SetLoadBalancerListenerSSLCertificate
      description: <p>Sets the certificate that terminates the specified listener's SSL
        connections. The specified certificate replaces any prior certificate
        that was used on the same load balancer and port.</p> <p>For more
        information about updating your SSL certificate, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-update-ssl-cert.html">Replace
        the SSL Certificate for Your Load Balancer</a> in the <i>Classic Load
        Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SetLoadBalancerListenerSSLCertificateOu\
                  tput"
        "480":
          description: CertificateNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateNotFoundException"
        "481":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "482":
          description: ListenerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListenerNotFoundException"
        "483":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
        "484":
          description: UnsupportedProtocolException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedProtocolException"
      parameters:
        - name: LoadBalancerName
          in: query
          required: true
          description: The name of the load balancer.
          schema:
            type: string
        - name: LoadBalancerPort
          in: query
          required: true
          description: The port that uses the specified SSL certificate.
          schema:
            type: integer
        - name: SSLCertificateId
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the SSL certificate.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetLoadBalancerListenerSSLCertificate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: SetLoadBalancerListenerSSLCertificate
      operationId: POST SetLoadBalancerListenerSSLCertificate
      description: <p>Sets the certificate that terminates the specified listener's SSL
        connections. The specified certificate replaces any prior certificate
        that was used on the same load balancer and port.</p> <p>For more
        information about updating your SSL certificate, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-update-ssl-cert.html">Replace
        the SSL Certificate for Your Load Balancer</a> in the <i>Classic Load
        Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SetLoadBalancerListenerSSLCertificateOu\
                  tput"
        "480":
          description: CertificateNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateNotFoundException"
        "481":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "482":
          description: ListenerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListenerNotFoundException"
        "483":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
        "484":
          description: UnsupportedProtocolException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedProtocolException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetLoadBalancerListenerSSLCertificate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerName:
                  description: The name of the load balancer.
                  type: string
                LoadBalancerPort:
                  description: The port that uses the specified SSL certificate.
                  type: integer
                SSLCertificateId:
                  description: The Amazon Resource Name (ARN) of the SSL certificate.
                  type: string
              required:
                - LoadBalancerName
                - LoadBalancerPort
                - SSLCertificateId
  /#Action=SetLoadBalancerPoliciesForBackendServer:
    get:
      x-aws-operation-name: SetLoadBalancerPoliciesForBackendServer
      operationId: GET SetLoadBalancerPoliciesForBackendServer
      description: <p>Replaces the set of policies associated with the specified port on
        which the EC2 instance is listening with a new set of policies. At this
        time, only the back-end server authentication policy type can be applied
        to the instance ports; this policy type is composed of multiple public
        key policies.</p> <p>Each time you use
        <code>SetLoadBalancerPoliciesForBackendServer</code> to enable the
        policies, use the <code>PolicyNames</code> parameter to list the
        policies that you want to enable.</p> <p>You can use
        <a>DescribeLoadBalancers</a> or <a>DescribeLoadBalancerPolicies</a> to
        verify that the policy is associated with the EC2 instance.</p> <p>For
        more information about enabling back-end instance authentication, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-create-https-ssl-load-balancer.html#configure_backendauth_clt">Configure
        Back-end Instance Authentication</a> in the <i>Classic Load Balancers
        Guide</i>. For more information about Proxy Protocol, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-proxy-protocol.html">Configure
        Proxy Protocol Support</a> in the <i>Classic Load Balancers
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SetLoadBalancerPoliciesForBackendServer\
                  Output"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: PolicyNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PolicyNotFoundException"
        "482":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: LoadBalancerName
          in: query
          required: true
          description: The name of the load balancer.
          schema:
            type: string
        - name: InstancePort
          in: query
          required: true
          description: The port number associated with the EC2 instance.
          schema:
            type: integer
        - name: PolicyNames
          in: query
          required: true
          description: The names of the policies. If the list is empty, then all current
            polices are removed from the EC2 instance.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetLoadBalancerPoliciesForBackendServer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: SetLoadBalancerPoliciesForBackendServer
      operationId: POST SetLoadBalancerPoliciesForBackendServer
      description: <p>Replaces the set of policies associated with the specified port on
        which the EC2 instance is listening with a new set of policies. At this
        time, only the back-end server authentication policy type can be applied
        to the instance ports; this policy type is composed of multiple public
        key policies.</p> <p>Each time you use
        <code>SetLoadBalancerPoliciesForBackendServer</code> to enable the
        policies, use the <code>PolicyNames</code> parameter to list the
        policies that you want to enable.</p> <p>You can use
        <a>DescribeLoadBalancers</a> or <a>DescribeLoadBalancerPolicies</a> to
        verify that the policy is associated with the EC2 instance.</p> <p>For
        more information about enabling back-end instance authentication, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-create-https-ssl-load-balancer.html#configure_backendauth_clt">Configure
        Back-end Instance Authentication</a> in the <i>Classic Load Balancers
        Guide</i>. For more information about Proxy Protocol, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-proxy-protocol.html">Configure
        Proxy Protocol Support</a> in the <i>Classic Load Balancers
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SetLoadBalancerPoliciesForBackendServer\
                  Output"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: PolicyNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PolicyNotFoundException"
        "482":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetLoadBalancerPoliciesForBackendServer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerName:
                  description: The name of the load balancer.
                  type: string
                InstancePort:
                  description: The port number associated with the EC2 instance.
                  type: integer
                PolicyNames:
                  description: The names of the policies. If the list is empty, then all
                    current polices are removed from the EC2 instance.
                  type: array
                  items:
                    type: string
              required:
                - LoadBalancerName
                - InstancePort
                - PolicyNames
  /#Action=SetLoadBalancerPoliciesOfListener:
    get:
      x-aws-operation-name: SetLoadBalancerPoliciesOfListener
      operationId: GET SetLoadBalancerPoliciesOfListener
      description: <p>Replaces the current set of policies for the specified load balancer
        port with the specified set of policies.</p> <p>To enable back-end
        server authentication, use
        <a>SetLoadBalancerPoliciesForBackendServer</a>.</p> <p>For more
        information about setting policies, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/ssl-config-update.html">Update
        the SSL Negotiation Configuration</a>, <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-duration">Duration-Based
        Session Stickiness</a>, and <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-application">Application-Controlled
        Session Stickiness</a> in the <i>Classic Load Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SetLoadBalancerPoliciesOfListenerOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: PolicyNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PolicyNotFoundException"
        "482":
          description: ListenerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListenerNotFoundException"
        "483":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: LoadBalancerName
          in: query
          required: true
          description: The name of the load balancer.
          schema:
            type: string
        - name: LoadBalancerPort
          in: query
          required: true
          description: The external port of the load balancer.
          schema:
            type: integer
        - name: PolicyNames
          in: query
          required: true
          description: The names of the policies. This list must include all policies to be
            enabled. If you omit a policy that is currently enabled, it is
            disabled. If the list is empty, all current policies are disabled.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetLoadBalancerPoliciesOfListener
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: SetLoadBalancerPoliciesOfListener
      operationId: POST SetLoadBalancerPoliciesOfListener
      description: <p>Replaces the current set of policies for the specified load balancer
        port with the specified set of policies.</p> <p>To enable back-end
        server authentication, use
        <a>SetLoadBalancerPoliciesForBackendServer</a>.</p> <p>For more
        information about setting policies, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/ssl-config-update.html">Update
        the SSL Negotiation Configuration</a>, <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-duration">Duration-Based
        Session Stickiness</a>, and <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-application">Application-Controlled
        Session Stickiness</a> in the <i>Classic Load Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SetLoadBalancerPoliciesOfListenerOutput"
        "480":
          description: AccessPointNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AccessPointNotFoundException"
        "481":
          description: PolicyNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PolicyNotFoundException"
        "482":
          description: ListenerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListenerNotFoundException"
        "483":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetLoadBalancerPoliciesOfListener
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2012-06-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerName:
                  description: The name of the load balancer.
                  type: string
                LoadBalancerPort:
                  description: The external port of the load balancer.
                  type: integer
                PolicyNames:
                  description: The names of the policies. This list must include all
                    policies to be enabled. If you omit a policy that is
                    currently enabled, it is disabled. If the list is empty, all
                    current policies are disabled.
                  type: array
                  items:
                    type: string
              required:
                - LoadBalancerName
                - LoadBalancerPort
                - PolicyNames
servers:
  - url: http://elasticloadbalancing.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Elastic Load Balancing multi-region endpoint
  - url: https://elasticloadbalancing.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Elastic Load Balancing multi-region endpoint
  - url: http://elasticloadbalancing.amazonaws.com
    variables: {}
    description: The general Elastic Load Balancing endpoint for US East (N. Virginia)
  - url: https://elasticloadbalancing.amazonaws.com
    variables: {}
    description: The general Elastic Load Balancing endpoint for US East (N. Virginia)
  - url: http://elasticloadbalancing.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Elastic Load Balancing endpoint for China (Beijing) and China (Ningxia)
  - url: https://elasticloadbalancing.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Elastic Load Balancing endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  requestBodies:
    POST_DeregisterInstancesFromLoadBalancer:
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              LoadBalancerName:
                description: The name of the load balancer.
                type: string
              Instances:
                description: The IDs of the instances.
                type: array
                items:
                  type: string
            required:
              - LoadBalancerName
              - Instances
    POST_DeleteLoadBalancer:
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              LoadBalancerName:
                description: The name of the load balancer.
                type: string
            required:
              - LoadBalancerName
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AddTagsOutput:
      type: object
      properties: {}
      description: Contains the output of AddTags.
    AccessPointName:
      type: string
    Tag:
      type: object
      required:
        - Key
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
        Value:
          $ref: "#/components/schemas/TagValue"
      description: Information about a tag.
    AccessPointNotFoundException: {}
    TooManyTagsException: {}
    DuplicateTagKeysException: {}
    ApplySecurityGroupsToLoadBalancerOutput:
      type: object
      example:
        SecurityGroups:
          - sg-fc448899
      properties:
        SecurityGroups:
          $ref: "#/components/schemas/SecurityGroups"
      description: Contains the output of ApplySecurityGroupsToLoadBalancer.
    SecurityGroupId:
      type: string
    InvalidConfigurationRequestException: {}
    InvalidSecurityGroupException: {}
    AttachLoadBalancerToSubnetsOutput:
      type: object
      example:
        Subnets:
          - subnet-15aaab61
          - subnet-0ecac448
      properties:
        Subnets:
          $ref: "#/components/schemas/Subnets"
      description: Contains the output of AttachLoadBalancerToSubnets.
    SubnetId:
      type: string
    SubnetNotFoundException: {}
    InvalidSubnetException: {}
    ConfigureHealthCheckOutput:
      type: object
      example:
        HealthCheck:
          HealthyThreshold: 2
          Interval: 30
          Target: HTTP:80/png
          Timeout: 3
          UnhealthyThreshold: 2
      properties:
        HealthCheck:
          $ref: "#/components/schemas/HealthCheck"
      description: Contains the output of ConfigureHealthCheck.
    HealthCheckTarget:
      type: string
    HealthCheckInterval:
      type: integer
      minimum: 5
      maximum: 300
    HealthCheckTimeout:
      type: integer
      minimum: 2
      maximum: 60
    UnhealthyThreshold:
      type: integer
      minimum: 2
      maximum: 10
    HealthyThreshold:
      type: integer
      minimum: 2
      maximum: 10
    CreateAppCookieStickinessPolicyOutput:
      type: object
      properties: {}
      description: Contains the output for CreateAppCookieStickinessPolicy.
    DuplicatePolicyNameException: {}
    TooManyPoliciesException: {}
    CreateLBCookieStickinessPolicyOutput:
      type: object
      properties: {}
      description: Contains the output for CreateLBCookieStickinessPolicy.
    CreateAccessPointOutput:
      type: object
      example:
        DNSName: internal-my-load-balancer-123456789.us-west-2.elb.amazonaws.com
      properties:
        DNSName:
          $ref: "#/components/schemas/DNSName"
      description: Contains the output for CreateLoadBalancer.
    Listener:
      type: object
      required:
        - Protocol
        - LoadBalancerPort
        - InstancePort
      properties:
        Protocol:
          $ref: "#/components/schemas/Protocol"
        LoadBalancerPort:
          $ref: "#/components/schemas/AccessPointPort"
        InstanceProtocol:
          $ref: "#/components/schemas/Protocol"
        InstancePort:
          $ref: "#/components/schemas/InstancePort"
        SSLCertificateId:
          $ref: "#/components/schemas/SSLCertificateId"
      description: <p>Information about a listener.</p> <p>For information about the
        protocols and the ports supported by Elastic Load Balancing, see <a
        href="http://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-listener-config.html">Listeners
        for Your Classic Load Balancer</a> in the <i>Classic Load Balancers
        Guide</i>.</p>
    AvailabilityZone:
      type: string
    DuplicateAccessPointNameException: {}
    TooManyAccessPointsException: {}
    CertificateNotFoundException: {}
    InvalidSchemeException: {}
    UnsupportedProtocolException: {}
    OperationNotPermittedException: {}
    CreateLoadBalancerListenerOutput:
      type: object
      properties: {}
      description: Contains the parameters for CreateLoadBalancerListener.
    DuplicateListenerException: {}
    CreateLoadBalancerPolicyOutput:
      type: object
      properties: {}
      description: Contains the output of CreateLoadBalancerPolicy.
    PolicyAttribute:
      type: object
      properties:
        AttributeName:
          $ref: "#/components/schemas/AttributeName"
        AttributeValue:
          $ref: "#/components/schemas/AttributeValue"
      description: Information about a policy attribute.
    PolicyTypeNotFoundException: {}
    DeleteAccessPointOutput:
      type: object
      properties: {}
      description: Contains the output of DeleteLoadBalancer.
    DeleteLoadBalancerListenerOutput:
      type: object
      properties: {}
      description: Contains the output of DeleteLoadBalancerListeners.
    AccessPointPort:
      type: integer
    DeleteLoadBalancerPolicyOutput:
      type: object
      properties: {}
      description: Contains the output of DeleteLoadBalancerPolicy.
    DeregisterEndPointsOutput:
      type: object
      example:
        Instances:
          - InstanceId: i-207d9717
          - InstanceId: i-afefb49b
      properties:
        Instances:
          $ref: "#/components/schemas/Instances"
      description: Contains the output of DeregisterInstancesFromLoadBalancer.
    Instance:
      type: object
      properties:
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
      description: The ID of an EC2 instance.
    InvalidEndPointException: {}
    DescribeAccountLimitsOutput:
      type: object
      properties:
        Limits:
          $ref: "#/components/schemas/Limits"
        NextMarker:
          $ref: "#/components/schemas/Marker"
    DescribeEndPointStateOutput:
      type: object
      example:
        InstanceStates:
          - Description: N/A
            InstanceId: i-207d9717
            ReasonCode: N/A
            State: InService
          - Description: N/A
            InstanceId: i-afefb49b
            ReasonCode: N/A
            State: InService
      properties:
        InstanceStates:
          $ref: "#/components/schemas/InstanceStates"
      description: Contains the output for DescribeInstanceHealth.
    DescribeLoadBalancerAttributesOutput:
      type: object
      example:
        LoadBalancerAttributes:
          AccessLog:
            Enabled: false
          ConnectionDraining:
            Enabled: false
            Timeout: 300
          ConnectionSettings:
            IdleTimeout: 60
          CrossZoneLoadBalancing:
            Enabled: false
      properties:
        LoadBalancerAttributes:
          $ref: "#/components/schemas/LoadBalancerAttributes"
      description: Contains the output of DescribeLoadBalancerAttributes.
    LoadBalancerAttributeNotFoundException: {}
    DescribeLoadBalancerPoliciesOutput:
      type: object
      example:
        PolicyDescriptions:
          - PolicyAttributeDescriptions:
              - AttributeName: PublicKeyPolicyName
                AttributeValue: my-PublicKey-policy
            PolicyName: my-authentication-policy
            PolicyTypeName: BackendServerAuthenticationPolicyType
      properties:
        PolicyDescriptions:
          $ref: "#/components/schemas/PolicyDescriptions"
      description: Contains the output of DescribeLoadBalancerPolicies.
    PolicyName:
      type: string
    PolicyNotFoundException: {}
    DescribeLoadBalancerPolicyTypesOutput:
      type: object
      example:
        PolicyTypeDescriptions:
          - Description: Policy that controls whether to include the IP address and port of
              the originating request for TCP messages. This policy operates on
              TCP listeners only.
            PolicyAttributeTypeDescriptions:
              - AttributeName: ProxyProtocol
                AttributeType: Boolean
                Cardinality: ONE
            PolicyTypeName: ProxyProtocolPolicyType
      properties:
        PolicyTypeDescriptions:
          $ref: "#/components/schemas/PolicyTypeDescriptions"
      description: Contains the output of DescribeLoadBalancerPolicyTypes.
    PolicyTypeName:
      type: string
    DescribeAccessPointsOutput:
      type: object
      example:
        LoadBalancerDescriptions:
          - AvailabilityZones:
              - us-west-2a
            BackendServerDescriptions:
              - InstancePort: 80
                PolicyNames:
                  - my-ProxyProtocol-policy
            CanonicalHostedZoneName: my-load-balancer-1234567890.us-west-2.elb.amazonaws.com
            CanonicalHostedZoneNameID: Z3DZXE0EXAMPLE
            CreatedTime: 2015-03-19T03:24:02.650Z
            DNSName: my-load-balancer-1234567890.us-west-2.elb.amazonaws.com
            HealthCheck:
              HealthyThreshold: 2
              Interval: 30
              Target: HTTP:80/png
              Timeout: 3
              UnhealthyThreshold: 2
            Instances:
              - InstanceId: i-207d9717
              - InstanceId: i-afefb49b
            ListenerDescriptions:
              - Listener:
                  InstancePort: 80
                  InstanceProtocol: HTTP
                  LoadBalancerPort: 80
                  Protocol: HTTP
                PolicyNames: []
              - Listener:
                  InstancePort: 443
                  InstanceProtocol: HTTPS
                  LoadBalancerPort: 443
                  Protocol: HTTPS
                  SSLCertificateId: arn:aws:iam::123456789012:server-certificate/my-server-cert
                PolicyNames:
                  - ELBSecurityPolicy-2015-03
            LoadBalancerName: my-load-balancer
            Policies:
              AppCookieStickinessPolicies: []
              LBCookieStickinessPolicies:
                - CookieExpirationPeriod: 60
                  PolicyName: my-duration-cookie-policy
              OtherPolicies:
                - my-PublicKey-policy
                - my-authentication-policy
                - my-SSLNegotiation-policy
                - my-ProxyProtocol-policy
                - ELBSecurityPolicy-2015-03
            Scheme: internet-facing
            SecurityGroups:
              - sg-a61988c3
            SourceSecurityGroup:
              GroupName: my-elb-sg
              OwnerAlias: "123456789012"
            Subnets:
              - subnet-15aaab61
            VPCId: vpc-a01106c2
      properties:
        LoadBalancerDescriptions:
          $ref: "#/components/schemas/LoadBalancerDescriptions"
        NextMarker:
          $ref: "#/components/schemas/Marker"
      description: Contains the parameters for DescribeLoadBalancers.
    DependencyThrottleException: {}
    DescribeTagsOutput:
      type: object
      example:
        TagDescriptions:
          - LoadBalancerName: my-load-balancer
            Tags:
              - Key: project
                Value: lima
              - Key: department
                Value: digital-media
      properties:
        TagDescriptions:
          $ref: "#/components/schemas/TagDescriptions"
      description: Contains the output for DescribeTags.
    DetachLoadBalancerFromSubnetsOutput:
      type: object
      example:
        Subnets:
          - subnet-15aaab61
      properties:
        Subnets:
          $ref: "#/components/schemas/Subnets"
      description: Contains the output of DetachLoadBalancerFromSubnets.
    RemoveAvailabilityZonesOutput:
      type: object
      example:
        AvailabilityZones:
          - us-west-2b
      properties:
        AvailabilityZones:
          $ref: "#/components/schemas/AvailabilityZones"
      description: Contains the output for DisableAvailabilityZonesForLoadBalancer.
    AddAvailabilityZonesOutput:
      type: object
      example:
        AvailabilityZones:
          - us-west-2a
          - us-west-2b
      properties:
        AvailabilityZones:
          $ref: "#/components/schemas/AvailabilityZones"
      description: Contains the output of EnableAvailabilityZonesForLoadBalancer.
    ModifyLoadBalancerAttributesOutput:
      type: object
      example:
        LoadBalancerAttributes:
          ConnectionDraining:
            Enabled: true
            Timeout: 300
        LoadBalancerName: my-load-balancer
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
        LoadBalancerAttributes:
          $ref: "#/components/schemas/LoadBalancerAttributes"
      description: Contains the output of ModifyLoadBalancerAttributes.
    CrossZoneLoadBalancing:
      type: object
      required:
        - Enabled
      properties:
        Enabled:
          $ref: "#/components/schemas/CrossZoneLoadBalancingEnabled"
      description: Information about the <code>CrossZoneLoadBalancing</code> attribute.
    AccessLog:
      type: object
      required:
        - Enabled
      properties:
        Enabled:
          $ref: "#/components/schemas/AccessLogEnabled"
        S3BucketName:
          $ref: "#/components/schemas/S3BucketName"
        EmitInterval:
          $ref: "#/components/schemas/AccessLogInterval"
        S3BucketPrefix:
          $ref: "#/components/schemas/AccessLogPrefix"
      description: Information about the <code>AccessLog</code> attribute.
    ConnectionDraining:
      type: object
      required:
        - Enabled
      properties:
        Enabled:
          $ref: "#/components/schemas/ConnectionDrainingEnabled"
        Timeout:
          $ref: "#/components/schemas/ConnectionDrainingTimeout"
      description: Information about the <code>ConnectionDraining</code> attribute.
    ConnectionSettings:
      type: object
      required:
        - IdleTimeout
      properties:
        IdleTimeout:
          $ref: "#/components/schemas/IdleTimeout"
      description: Information about the <code>ConnectionSettings</code> attribute.
    AdditionalAttributes:
      type: array
      items:
        $ref: "#/components/schemas/AdditionalAttribute"
      maxItems: 10
    CrossZoneLoadBalancingEnabled:
      type: boolean
    AccessLogEnabled:
      type: boolean
    S3BucketName:
      type: string
    AccessLogInterval:
      type: integer
    AccessLogPrefix:
      type: string
    ConnectionDrainingEnabled:
      type: boolean
    ConnectionDrainingTimeout:
      type: integer
    IdleTimeout:
      type: integer
      minimum: 1
      maximum: 3600
    AdditionalAttribute:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/AdditionalAttributeKey"
        Value:
          $ref: "#/components/schemas/AdditionalAttributeValue"
      description: This data type is reserved.
    RegisterEndPointsOutput:
      type: object
      example:
        Instances:
          - InstanceId: i-d6f6fae3
          - InstanceId: i-207d9717
          - InstanceId: i-afefb49b
      properties:
        Instances:
          $ref: "#/components/schemas/Instances"
      description: Contains the output of RegisterInstancesWithLoadBalancer.
    RemoveTagsOutput:
      type: object
      properties: {}
      description: Contains the output of RemoveTags.
    TagKeyOnly:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
      description: The key of a tag.
    SetLoadBalancerListenerSSLCertificateOutput:
      type: object
      properties: {}
      description: Contains the output of SetLoadBalancerListenerSSLCertificate.
    ListenerNotFoundException: {}
    SetLoadBalancerPoliciesForBackendServerOutput:
      type: object
      properties: {}
      description: Contains the output of SetLoadBalancerPoliciesForBackendServer.
    SetLoadBalancerPoliciesOfListenerOutput:
      type: object
      properties: {}
      description: Contains the output of SetLoadBalancePoliciesOfListener.
    AvailabilityZones:
      type: array
      items:
        $ref: "#/components/schemas/AvailabilityZone"
    AddAvailabilityZonesInput:
      type: object
      required:
        - LoadBalancerName
        - AvailabilityZones
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
        AvailabilityZones:
          $ref: "#/components/schemas/AvailabilityZones"
      description: Contains the parameters for EnableAvailabilityZonesForLoadBalancer.
    LoadBalancerNames:
      type: array
      items:
        $ref: "#/components/schemas/AccessPointName"
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
      minItems: 1
    AddTagsInput:
      type: object
      required:
        - LoadBalancerNames
        - Tags
      properties:
        LoadBalancerNames:
          $ref: "#/components/schemas/LoadBalancerNames"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: Contains the parameters for AddTags.
    AdditionalAttributeKey:
      type: string
      pattern: ^[a-zA-Z0-9.]+$
      maxLength: 256
    AdditionalAttributeValue:
      type: string
      pattern: ^[a-zA-Z0-9.]+$
      maxLength: 256
    AppCookieStickinessPolicy:
      type: object
      properties:
        PolicyName:
          $ref: "#/components/schemas/PolicyName"
        CookieName:
          $ref: "#/components/schemas/CookieName"
      description: Information about a policy for application-controlled session stickiness.
    AppCookieStickinessPolicies:
      type: array
      items:
        $ref: "#/components/schemas/AppCookieStickinessPolicy"
    CookieName:
      type: string
    SecurityGroups:
      type: array
      items:
        $ref: "#/components/schemas/SecurityGroupId"
    ApplySecurityGroupsToLoadBalancerInput:
      type: object
      required:
        - LoadBalancerName
        - SecurityGroups
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
        SecurityGroups:
          $ref: "#/components/schemas/SecurityGroups"
      description: Contains the parameters for ApplySecurityGroupsToLoadBalancer.
    Subnets:
      type: array
      items:
        $ref: "#/components/schemas/SubnetId"
    AttachLoadBalancerToSubnetsInput:
      type: object
      required:
        - LoadBalancerName
        - Subnets
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
        Subnets:
          $ref: "#/components/schemas/Subnets"
      description: Contains the parameters for AttachLoaBalancerToSubnets.
    AttributeName:
      type: string
    AttributeType:
      type: string
    AttributeValue:
      type: string
    InstancePort:
      type: integer
      minimum: 1
      maximum: 65535
    PolicyNames:
      type: array
      items:
        $ref: "#/components/schemas/PolicyName"
    BackendServerDescription:
      type: object
      properties:
        InstancePort:
          $ref: "#/components/schemas/InstancePort"
        PolicyNames:
          $ref: "#/components/schemas/PolicyNames"
      description: Information about the configuration of an EC2 instance.
    BackendServerDescriptions:
      type: array
      items:
        $ref: "#/components/schemas/BackendServerDescription"
    Cardinality:
      type: string
    HealthCheck:
      type: object
      required:
        - Target
        - Interval
        - Timeout
        - UnhealthyThreshold
        - HealthyThreshold
      properties:
        Target:
          $ref: "#/components/schemas/HealthCheckTarget"
        Interval:
          $ref: "#/components/schemas/HealthCheckInterval"
        Timeout:
          $ref: "#/components/schemas/HealthCheckTimeout"
        UnhealthyThreshold:
          $ref: "#/components/schemas/UnhealthyThreshold"
        HealthyThreshold:
          $ref: "#/components/schemas/HealthyThreshold"
      description: Information about a health check.
    ConfigureHealthCheckInput:
      type: object
      required:
        - LoadBalancerName
        - HealthCheck
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
        HealthCheck:
          $ref: "#/components/schemas/HealthCheck"
      description: Contains the parameters for ConfigureHealthCheck.
    CookieExpirationPeriod:
      type: integer
    Listeners:
      type: array
      items:
        $ref: "#/components/schemas/Listener"
    LoadBalancerScheme:
      type: string
    CreateAccessPointInput:
      type: object
      required:
        - LoadBalancerName
        - Listeners
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
        Listeners:
          $ref: "#/components/schemas/Listeners"
        AvailabilityZones:
          $ref: "#/components/schemas/AvailabilityZones"
        Subnets:
          $ref: "#/components/schemas/Subnets"
        SecurityGroups:
          $ref: "#/components/schemas/SecurityGroups"
        Scheme:
          $ref: "#/components/schemas/LoadBalancerScheme"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: Contains the parameters for CreateLoadBalancer.
    DNSName:
      type: string
    CreateAppCookieStickinessPolicyInput:
      type: object
      required:
        - LoadBalancerName
        - PolicyName
        - CookieName
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
        PolicyName:
          $ref: "#/components/schemas/PolicyName"
        CookieName:
          $ref: "#/components/schemas/CookieName"
      description: Contains the parameters for CreateAppCookieStickinessPolicy.
    CreateLBCookieStickinessPolicyInput:
      type: object
      required:
        - LoadBalancerName
        - PolicyName
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
        PolicyName:
          $ref: "#/components/schemas/PolicyName"
        CookieExpirationPeriod:
          $ref: "#/components/schemas/CookieExpirationPeriod"
      description: Contains the parameters for CreateLBCookieStickinessPolicy.
    CreateLoadBalancerListenerInput:
      type: object
      required:
        - LoadBalancerName
        - Listeners
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
        Listeners:
          $ref: "#/components/schemas/Listeners"
      description: Contains the parameters for CreateLoadBalancerListeners.
    PolicyAttributes:
      type: array
      items:
        $ref: "#/components/schemas/PolicyAttribute"
    CreateLoadBalancerPolicyInput:
      type: object
      required:
        - LoadBalancerName
        - PolicyName
        - PolicyTypeName
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
        PolicyName:
          $ref: "#/components/schemas/PolicyName"
        PolicyTypeName:
          $ref: "#/components/schemas/PolicyTypeName"
        PolicyAttributes:
          $ref: "#/components/schemas/PolicyAttributes"
      description: Contains the parameters for CreateLoadBalancerPolicy.
    CreatedTime:
      type: string
      format: date-time
    DefaultValue:
      type: string
    DeleteAccessPointInput:
      type: object
      required:
        - LoadBalancerName
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
      description: Contains the parameters for DeleteLoadBalancer.
    Ports:
      type: array
      items:
        $ref: "#/components/schemas/AccessPointPort"
    DeleteLoadBalancerListenerInput:
      type: object
      required:
        - LoadBalancerName
        - LoadBalancerPorts
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
        LoadBalancerPorts:
          $ref: "#/components/schemas/Ports"
      description: Contains the parameters for DeleteLoadBalancerListeners.
    DeleteLoadBalancerPolicyInput:
      type: object
      required:
        - LoadBalancerName
        - PolicyName
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
        PolicyName:
          $ref: "#/components/schemas/PolicyName"
      description: Contains the parameters for DeleteLoadBalancerPolicy.
    Instances:
      type: array
      items:
        $ref: "#/components/schemas/Instance"
    DeregisterEndPointsInput:
      type: object
      required:
        - LoadBalancerName
        - Instances
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
        Instances:
          $ref: "#/components/schemas/Instances"
      description: Contains the parameters for DeregisterInstancesFromLoadBalancer.
    Marker:
      type: string
    PageSize:
      type: integer
      minimum: 1
      maximum: 400
    DescribeAccessPointsInput:
      type: object
      properties:
        LoadBalancerNames:
          $ref: "#/components/schemas/LoadBalancerNames"
        Marker:
          $ref: "#/components/schemas/Marker"
        PageSize:
          $ref: "#/components/schemas/PageSize"
      description: Contains the parameters for DescribeLoadBalancers.
    LoadBalancerDescriptions:
      type: array
      items:
        $ref: "#/components/schemas/LoadBalancerDescription"
    DescribeAccountLimitsInput:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/Marker"
        PageSize:
          $ref: "#/components/schemas/PageSize"
    Limits:
      type: array
      items:
        $ref: "#/components/schemas/Limit"
    DescribeEndPointStateInput:
      type: object
      required:
        - LoadBalancerName
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
        Instances:
          $ref: "#/components/schemas/Instances"
      description: Contains the parameters for DescribeInstanceHealth.
    InstanceStates:
      type: array
      items:
        $ref: "#/components/schemas/InstanceState"
    DescribeLoadBalancerAttributesInput:
      type: object
      required:
        - LoadBalancerName
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
      description: Contains the parameters for DescribeLoadBalancerAttributes.
    LoadBalancerAttributes:
      type: object
      properties:
        CrossZoneLoadBalancing:
          $ref: "#/components/schemas/CrossZoneLoadBalancing"
        AccessLog:
          $ref: "#/components/schemas/AccessLog"
        ConnectionDraining:
          $ref: "#/components/schemas/ConnectionDraining"
        ConnectionSettings:
          $ref: "#/components/schemas/ConnectionSettings"
        AdditionalAttributes:
          $ref: "#/components/schemas/AdditionalAttributes"
      description: The attributes for a load balancer.
    DescribeLoadBalancerPoliciesInput:
      type: object
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
        PolicyNames:
          $ref: "#/components/schemas/PolicyNames"
      description: Contains the parameters for DescribeLoadBalancerPolicies.
    PolicyDescriptions:
      type: array
      items:
        $ref: "#/components/schemas/PolicyDescription"
    PolicyTypeNames:
      type: array
      items:
        $ref: "#/components/schemas/PolicyTypeName"
    DescribeLoadBalancerPolicyTypesInput:
      type: object
      properties:
        PolicyTypeNames:
          $ref: "#/components/schemas/PolicyTypeNames"
      description: Contains the parameters for DescribeLoadBalancerPolicyTypes.
    PolicyTypeDescriptions:
      type: array
      items:
        $ref: "#/components/schemas/PolicyTypeDescription"
    LoadBalancerNamesMax20:
      type: array
      items:
        $ref: "#/components/schemas/AccessPointName"
      minItems: 1
      maxItems: 20
    DescribeTagsInput:
      type: object
      required:
        - LoadBalancerNames
      properties:
        LoadBalancerNames:
          $ref: "#/components/schemas/LoadBalancerNamesMax20"
      description: Contains the parameters for DescribeTags.
    TagDescriptions:
      type: array
      items:
        $ref: "#/components/schemas/TagDescription"
    Description:
      type: string
    DetachLoadBalancerFromSubnetsInput:
      type: object
      required:
        - LoadBalancerName
        - Subnets
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
        Subnets:
          $ref: "#/components/schemas/Subnets"
      description: Contains the parameters for DetachLoadBalancerFromSubnets.
    EndPointPort:
      type: integer
    InstanceId:
      type: string
    State:
      type: string
    ReasonCode:
      type: string
    InstanceState:
      type: object
      properties:
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        State:
          $ref: "#/components/schemas/State"
        ReasonCode:
          $ref: "#/components/schemas/ReasonCode"
        Description:
          $ref: "#/components/schemas/Description"
      description: Information about the state of an EC2 instance.
    LBCookieStickinessPolicy:
      type: object
      properties:
        PolicyName:
          $ref: "#/components/schemas/PolicyName"
        CookieExpirationPeriod:
          $ref: "#/components/schemas/CookieExpirationPeriod"
      description: Information about a policy for duration-based session stickiness.
    LBCookieStickinessPolicies:
      type: array
      items:
        $ref: "#/components/schemas/LBCookieStickinessPolicy"
    Name:
      type: string
    Max:
      type: string
    Limit:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/Name"
        Max:
          $ref: "#/components/schemas/Max"
      description: Information about an Elastic Load Balancing resource limit for your AWS
        account.
    Protocol:
      type: string
    SSLCertificateId:
      type: string
    ListenerDescription:
      type: object
      properties:
        Listener:
          $ref: "#/components/schemas/Listener"
        PolicyNames:
          $ref: "#/components/schemas/PolicyNames"
      description: The policies enabled for a listener.
    ListenerDescriptions:
      type: array
      items:
        $ref: "#/components/schemas/ListenerDescription"
    Policies:
      type: object
      properties:
        AppCookieStickinessPolicies:
          $ref: "#/components/schemas/AppCookieStickinessPolicies"
        LBCookieStickinessPolicies:
          $ref: "#/components/schemas/LBCookieStickinessPolicies"
        OtherPolicies:
          $ref: "#/components/schemas/PolicyNames"
      description: The policies for a load balancer.
    VPCId:
      type: string
    SourceSecurityGroup:
      type: object
      properties:
        OwnerAlias:
          $ref: "#/components/schemas/SecurityGroupOwnerAlias"
        GroupName:
          $ref: "#/components/schemas/SecurityGroupName"
      description: Information about a source security group.
    LoadBalancerDescription:
      type: object
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
        DNSName:
          $ref: "#/components/schemas/DNSName"
        CanonicalHostedZoneName:
          $ref: "#/components/schemas/DNSName"
        CanonicalHostedZoneNameID:
          $ref: "#/components/schemas/DNSName"
        ListenerDescriptions:
          $ref: "#/components/schemas/ListenerDescriptions"
        Policies:
          $ref: "#/components/schemas/Policies"
        BackendServerDescriptions:
          $ref: "#/components/schemas/BackendServerDescriptions"
        AvailabilityZones:
          $ref: "#/components/schemas/AvailabilityZones"
        Subnets:
          $ref: "#/components/schemas/Subnets"
        VPCId:
          $ref: "#/components/schemas/VPCId"
        Instances:
          $ref: "#/components/schemas/Instances"
        HealthCheck:
          $ref: "#/components/schemas/HealthCheck"
        SourceSecurityGroup:
          $ref: "#/components/schemas/SourceSecurityGroup"
        SecurityGroups:
          $ref: "#/components/schemas/SecurityGroups"
        CreatedTime:
          $ref: "#/components/schemas/CreatedTime"
        Scheme:
          $ref: "#/components/schemas/LoadBalancerScheme"
      description: Information about a load balancer.
    ModifyLoadBalancerAttributesInput:
      type: object
      required:
        - LoadBalancerName
        - LoadBalancerAttributes
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
        LoadBalancerAttributes:
          $ref: "#/components/schemas/LoadBalancerAttributes"
      description: Contains the parameters for ModifyLoadBalancerAttributes.
    PolicyAttributeDescription:
      type: object
      properties:
        AttributeName:
          $ref: "#/components/schemas/AttributeName"
        AttributeValue:
          $ref: "#/components/schemas/AttributeValue"
      description: Information about a policy attribute.
    PolicyAttributeDescriptions:
      type: array
      items:
        $ref: "#/components/schemas/PolicyAttributeDescription"
    PolicyAttributeTypeDescription:
      type: object
      properties:
        AttributeName:
          $ref: "#/components/schemas/AttributeName"
        AttributeType:
          $ref: "#/components/schemas/AttributeType"
        Description:
          $ref: "#/components/schemas/Description"
        DefaultValue:
          $ref: "#/components/schemas/DefaultValue"
        Cardinality:
          $ref: "#/components/schemas/Cardinality"
      description: Information about a policy attribute type.
    PolicyAttributeTypeDescriptions:
      type: array
      items:
        $ref: "#/components/schemas/PolicyAttributeTypeDescription"
    PolicyDescription:
      type: object
      properties:
        PolicyName:
          $ref: "#/components/schemas/PolicyName"
        PolicyTypeName:
          $ref: "#/components/schemas/PolicyTypeName"
        PolicyAttributeDescriptions:
          $ref: "#/components/schemas/PolicyAttributeDescriptions"
      description: Information about a policy.
    PolicyTypeDescription:
      type: object
      properties:
        PolicyTypeName:
          $ref: "#/components/schemas/PolicyTypeName"
        Description:
          $ref: "#/components/schemas/Description"
        PolicyAttributeTypeDescriptions:
          $ref: "#/components/schemas/PolicyAttributeTypeDescriptions"
      description: Information about a policy type.
    RegisterEndPointsInput:
      type: object
      required:
        - LoadBalancerName
        - Instances
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
        Instances:
          $ref: "#/components/schemas/Instances"
      description: Contains the parameters for RegisterInstancesWithLoadBalancer.
    RemoveAvailabilityZonesInput:
      type: object
      required:
        - LoadBalancerName
        - AvailabilityZones
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
        AvailabilityZones:
          $ref: "#/components/schemas/AvailabilityZones"
      description: Contains the parameters for DisableAvailabilityZonesForLoadBalancer.
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKeyOnly"
      minItems: 1
    RemoveTagsInput:
      type: object
      required:
        - LoadBalancerNames
        - Tags
      properties:
        LoadBalancerNames:
          $ref: "#/components/schemas/LoadBalancerNames"
        Tags:
          $ref: "#/components/schemas/TagKeyList"
      description: Contains the parameters for RemoveTags.
    SecurityGroupName:
      type: string
    SecurityGroupOwnerAlias:
      type: string
    SetLoadBalancerListenerSSLCertificateInput:
      type: object
      required:
        - LoadBalancerName
        - LoadBalancerPort
        - SSLCertificateId
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
        LoadBalancerPort:
          $ref: "#/components/schemas/AccessPointPort"
        SSLCertificateId:
          $ref: "#/components/schemas/SSLCertificateId"
      description: Contains the parameters for SetLoadBalancerListenerSSLCertificate.
    SetLoadBalancerPoliciesForBackendServerInput:
      type: object
      required:
        - LoadBalancerName
        - InstancePort
        - PolicyNames
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
        InstancePort:
          $ref: "#/components/schemas/EndPointPort"
        PolicyNames:
          $ref: "#/components/schemas/PolicyNames"
      description: Contains the parameters for SetLoadBalancerPoliciesForBackendServer.
    SetLoadBalancerPoliciesOfListenerInput:
      type: object
      required:
        - LoadBalancerName
        - LoadBalancerPort
        - PolicyNames
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
        LoadBalancerPort:
          $ref: "#/components/schemas/AccessPointPort"
        PolicyNames:
          $ref: "#/components/schemas/PolicyNames"
      description: Contains the parameters for SetLoadBalancePoliciesOfListener.
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 256
    TagDescription:
      type: object
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/AccessPointName"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: The tags associated with a load balancer.
