openapi: 3.0.0
info:
  title: ContainerInstanceManagementClient
  version: 2018-06-01
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/containerinstance/resource-manager/Microsoft.ContainerInstance/stable/2018-06-01/containerInstance.json
      version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: containerinstance-containerInstance
  x-tags:
    - Azure
    - Microsoft
security:
  - azure_auth:
      - user_impersonation
paths:
  /providers/Microsoft.ContainerInstance/operations:
    get:
      description: List the operations for Azure Container Instance service.
      operationId: Operations_List
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationListResult"
              examples:
                OperationsList:
                  $ref: "#/components/examples/OperationsList"
      tags:
        - Operations
  "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/containerGroups":
    get:
      description: Get a list of container groups in the specified subscription. This
        operation returns properties of each container group including
        containers, image registry credentials, restart policy, IP address type,
        OS type, state, and volumes.
      operationId: ContainerGroups_List
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerGroupListResult"
              examples:
                ContainerGroupsList:
                  $ref: "#/components/examples/ContainerGroupsList"
      summary: Get a list of container groups in the specified subscription.
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/locations/{location}/usages":
    get:
      description: Get the usage for a subscription
      operationId: ContainerGroupUsage_List
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/LocationParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsageListResult"
              examples:
                ContainerUsage:
                  $ref: "#/components/examples/ContainerUsage"
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups":
    get:
      description: Get a list of container groups in a specified subscription and resource
        group. This operation returns properties of each container group
        including containers, image registry credentials, restart policy, IP
        address type, OS type, state, and volumes.
      operationId: ContainerGroups_ListByResourceGroup
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerGroupListResult"
              examples:
                ContainerGroupsListByResourceGroup:
                  $ref: "#/components/examples/ContainerGroupsListByResourceGroup"
      summary: Get a list of container groups in the specified subscription and
        resource group.
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}":
    delete:
      description: Delete the specified container group in the specified subscription and
        resource group. The operation does not delete other resources provided
        by the user, such as volumes.
      operationId: ContainerGroups_Delete
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/ContainerGroupNameParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerGroup"
        "204":
          description: No Content - the specified container group was not found.
      summary: Delete the specified container group.
    get:
      description: Gets the properties of the specified container group in the specified
        subscription and resource group. The operation returns the properties of
        each container group including containers, image registry credentials,
        restart policy, IP address type, OS type, state, and volumes.
      operationId: ContainerGroups_Get
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/ContainerGroupNameParameter"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerGroup"
              examples:
                ContainerGroupsGet_Failed:
                  $ref: "#/components/examples/ContainerGroupsGet_Failed"
                ContainerGroupsGet_Succeeded:
                  $ref: "#/components/examples/ContainerGroupsGet_Succeeded"
      summary: Get the properties of the specified container group.
    patch:
      description: Updates container group tags with specified values.
      operationId: ContainerGroups_Update
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/ContainerGroupNameParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Resource"
        description: The container group resource with just the tags to be updated.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerGroup"
              examples:
                ContainerGroupsUpdate:
                  $ref: "#/components/examples/ContainerGroupsUpdate"
      summary: Update container groups.
    put:
      description: Create or update container groups with specified configurations.
      operationId: ContainerGroups_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/ContainerGroupNameParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContainerGroup"
        description: The properties of the container group to be created or updated.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerGroup"
              examples:
                ContainerGroupsCreateOrUpdate:
                  $ref: "#/components/examples/ContainerGroupsCreateOrUpdate"
        "201":
          description: Created - the container group is created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerGroup"
              examples:
                ContainerGroupsCreateOrUpdate:
                  $ref: "#/components/examples/ContainerGroupsCreateOrUpdate"
      summary: Create or update container groups.
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/containers/{containerName}/exec":
    post:
      description: Executes a command for a specific container instance in a specified
        resource group and container group.
      operationId: Container_ExecuteCommand
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/ContainerGroupNameParameter"
        - description: The name of the container instance.
          in: path
          name: containerName
          required: true
          schema:
            type: string
          examples:
            ContainerExec:
              value: container1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContainerExecRequest"
        description: The request for the exec command.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerExecResponse"
              examples:
                ContainerExec:
                  $ref: "#/components/examples/ContainerExec"
      summary: Executes a command in a specific container instance.
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/containers/{containerName}/logs":
    get:
      description: Get the logs for a specified container instance in a specified resource
        group and container group.
      operationId: Container_ListLogs
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/ContainerGroupNameParameter"
        - description: The name of the container instance.
          in: path
          name: containerName
          required: true
          schema:
            type: string
          examples:
            ContainerListLogs:
              value: container1
        - description: The number of lines to show from the tail of the container instance
            log. If not provided, all available logs are shown up to 4mb.
          in: query
          name: tail
          schema:
            type: integer
          examples:
            ContainerListLogs:
              value: 10
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Logs"
              examples:
                ContainerListLogs:
                  $ref: "#/components/examples/ContainerListLogs"
      summary: Get the logs for a specified container instance.
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/restart":
    post:
      description: Restarts all containers in a container group in place. If container
        image has updates, new image will be downloaded.
      operationId: ContainerGroups_Restart
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/ContainerGroupNameParameter"
      responses:
        "204":
          description: NoContent
      summary: Restarts all containers in a container group.
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/stop":
    post:
      description: Stops all containers in a container group. Compute resources will be
        deallocated and billing will stop.
      operationId: ContainerGroups_Stop
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/ContainerGroupNameParameter"
      responses:
        "204":
          description: NoContent
      summary: Stops all containers in a container group.
servers:
  - url: https://management.azure.com
components:
  examples:
    OperationsList:
      value:
        value:
          - display:
              description: Get all container goups.
              operation: Get Container Groups
              provider: Microsoft Container Instance
              resource: Container Group
            name: Microsoft.ContainerInstance/containerGroups/read
            origin: User
    ContainerGroupsList:
      value:
        value:
          - id: /subscriptions/subid/resourceGroups/demo/providers/Microsoft.ContainerInstance/containerGroups/demo1
            location: WestUs
            name: demo1
            properties:
              containers:
                - name: demo1
                  properties:
                    command: []
                    environmentVariables: []
                    image: nginx
                    instanceView:
                      currentState:
                        detailStatus: ""
                        startTime: 2017-10-17T17:27:21Z
                        state: Running
                      events: []
                      restartCount: 0
                    ports:
                      - port: 80
                    resources:
                      requests:
                        cpu: 1
                        memoryInGB: 1.5
                    volumeMounts:
                      - mountPath: /mnt/volume1
                        name: volume1
                        readOnly: false
              imageRegistryCredentials:
                - server: azcloudconsoleregistry.azurecr.io
                  username: azcloudconsoleregistry
              ipAddress:
                ip: 10.0.0.1
                ports:
                  - port: 80
                    protocol: TCP
                type: Public
              osType: Linux
              provisioningState: Succeeded
              volumes:
                - azureFile:
                    readOnly: false
                    shareName: share1
                    storageAccountName: storage1
                  name: volume1
            type: Microsoft.ContainerInstance/containerGroups
    ContainerUsage:
      value:
        value:
          - currentValue: 1
            limit: 2000
            name:
              localizedValue: Container Groups
              value: ContainerGroups
            unit: Count
    ContainerGroupsListByResourceGroup:
      value:
        value:
          - id: /subscriptions/subid/resourceGroups/demo/providers/Microsoft.ContainerInstance/containerGroups/demo1
            location: WestUs
            name: demo1
            properties:
              containers:
                - name: demo1
                  properties:
                    command: []
                    environmentVariables: []
                    image: nginx
                    ports:
                      - port: 80
                    resources:
                      requests:
                        cpu: 1
                        memoryInGB: 1.5
                    volumeMounts:
                      - mountPath: /mnt/volume1
                        name: volume1
                        readOnly: false
              imageRegistryCredentials:
                - server: azcloudconsoleregistry.azurecr.io
                  username: azcloudconsoleregistry
              ipAddress:
                ip: 10.0.0.1
                ports:
                  - port: 80
                    protocol: TCP
                type: Public
              osType: Linux
              provisioningState: Succeeded
              volumes:
                - azureFile:
                    readOnly: false
                    shareName: share1
                    storageAccountName: storage1
                  name: volume1
            type: Microsoft.ContainerInstance/containerGroups
    ContainerGroupsGet_Failed:
      value:
        id: /subscriptions/subid/resourceGroups/demo/providers/Microsoft.ContainerInstance/containerGroups/demo1
        location: WestUs
        name: demo1
        properties:
          containers:
            - name: demo1
              properties:
                command: []
                environmentVariables: []
                image: nginx
                instanceView:
                  currentState:
                    detailStatus: ""
                    startTime: 2017-08-08T00:09:10Z
                    state: Waiting
                  events:
                    - count: 1
                      firstTimestamp: 2017-08-08T00:09:01Z
                      lastTimestamp: 2017-08-08T00:09:01Z
                      message: pulling image "nginx"
                      name: Pulling
                      type: Normal
                    - count: 1
                      firstTimestamp: 2017-08-08T00:09:10Z
                      lastTimestamp: 2017-08-08T00:09:10Z
                      message: Successfully pulled image "nginx"
                      name: Pulled
                      type: Normal
                  restartCount: 0
                ports:
                  - port: 80
                resources:
                  requests:
                    cpu: 1
                    memoryInGB: 1.5
                volumeMounts:
                  - mountPath: /mnt/volume1
                    name: volume1
                    readOnly: false
          imageRegistryCredentials:
            - server: azcloudconsoleregistry.azurecr.io
              username: azcloudconsoleregistry
          instanceView:
            events:
              - count: 1
                firstTimestamp: 2017-10-08T00:19:10Z
                lastTimestamp: 2017-10-08T00:19:10Z
                message: "Output: mount error(2): Permission denied"
                name: FailedMount
                type: Normal
            state: Pending
          ipAddress:
            ip: 10.0.0.1
            ports:
              - port: 80
                protocol: TCP
            type: Public
          osType: Linux
          provisioningState: Failed
          volumes:
            - azureFile:
                readOnly: false
                shareName: share1
                storageAccountName: storage1
              name: volume1
        type: Microsoft.ContainerInstance/containerGroups
    ContainerGroupsGet_Succeeded:
      value:
        id: /subscriptions/subid/resourceGroups/demo/providers/Microsoft.ContainerInstance/containerGroups/demo1
        location: WestUs
        name: demo1
        properties:
          containers:
            - name: demo1
              properties:
                command: []
                environmentVariables: []
                image: nginx
                ports:
                  - port: 80
                resources:
                  requests:
                    cpu: 1
                    memoryInGB: 1.5
                volumeMounts:
                  - mountPath: /mnt/volume1
                    name: volume1
                    readOnly: false
          imageRegistryCredentials:
            - server: azcloudconsoleregistry.azurecr.io
              username: azcloudconsoleregistry
          ipAddress:
            ip: 10.0.0.1
            ports:
              - port: 80
                protocol: TCP
            type: Public
          osType: Linux
          provisioningState: Succeeded
          volumes:
            - azureFile:
                readOnly: false
                shareName: share1
                storageAccountName: storage1
              name: volume1
        type: Microsoft.ContainerInstance/containerGroups
    ContainerGroupsUpdate:
      value:
        id: /subscriptions/subid/resourceGroups/demoResource/providers/Microsoft.ContainerInstance/containerGroups/demo1
        location: WestUs
        name: demo1
        properties:
          containers:
            - name: demo1
              properties:
                command: []
                environmentVariables: []
                image: nginx
                ports:
                  - port: 80
                resources:
                  requests:
                    cpu: 1
                    memoryInGB: 1.5
                volumeMounts:
                  - mountPath: /mnt/volume1
                    name: volume1
                    readOnly: false
                  - mountPath: /mnt/volume2
                    name: volume2
                    readOnly: false
                  - mountPath: /mnt/volume3
                    name: volume3
                    readOnly: true
          imageRegistryCredentials: []
          ipAddress:
            dnsNameLabel: dnsnamelabel1
            fqdn: dnsnamelabel1.azure-container.io
            ip: 10.0.0.1
            ports:
              - port: 80
                protocol: TCP
            type: Public
          osType: Linux
          provisioningState: Succeeded
          volumes:
            - azureFile:
                shareName: shareName
                storageAccountName: accountName
              name: volume1
            - emptyDir: {}
              name: volume2
            - name: volume3
              secret: {}
        tags:
          tag1key: tag1Value
          tag2key: tag2Value
        type: Microsoft.ContainerInstance/containerGroups
    ContainerGroupsCreateOrUpdate:
      value:
        id: /subscriptions/subid/resourceGroups/demo/providers/Microsoft.ContainerInstance/containerGroups/demo1
        location: WestUs
        name: demo1
        properties:
          containers:
            - name: demo1
              properties:
                command: []
                environmentVariables: []
                image: nginx
                ports:
                  - port: 80
                resources:
                  requests:
                    cpu: 1
                    memoryInGB: 1.5
                volumeMounts:
                  - mountPath: /mnt/volume1
                    name: volume1
                    readOnly: false
                  - mountPath: /mnt/volume2
                    name: volume2
                    readOnly: false
                  - mountPath: /mnt/volume3
                    name: volume3
                    readOnly: true
          imageRegistryCredentials: []
          ipAddress:
            dnsNameLabel: dnsnamelabel1
            fqdn: dnsnamelabel1.azure-container.io
            ip: 10.0.0.1
            ports:
              - port: 80
                protocol: TCP
            type: Public
          osType: Linux
          provisioningState: Succeeded
          volumes:
            - azureFile:
                shareName: shareName
                storageAccountName: accountName
              name: volume1
            - emptyDir: {}
              name: volume2
            - name: volume3
              secret: {}
        type: Microsoft.ContainerInstance/containerGroups
    ContainerExec:
      value:
        password: password
        webSocketUri: wss://web-socket-uri
    ContainerListLogs:
      value:
        content: log content
  parameters:
    ApiVersionParameter:
      description: Client API version
      in: query
      name: api-version
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
      examples:
        OperationsList:
          value: 2018-06-01
        ContainerGroupsList:
          value: 2018-06-01
        ContainerUsage:
          value: 2018-06-01
        ContainerGroupsListByResourceGroup:
          value: 2018-06-01
        ContainerGroupsDelete:
          value: 2018-06-01
        ContainerGroupsGet_Failed:
          value: 2018-06-01
        ContainerGroupsGet_Succeeded:
          value: 2018-06-01
        ContainerGroupsUpdate:
          value: 2018-06-01
        ContainerGroupsCreateOrUpdate:
          value: 2018-06-01
        ContainerExec:
          value: 2018-06-01
        ContainerListLogs:
          value: 2018-06-01
        ContainerRestart:
          value: 2018-06-01
        ContainerStop:
          value: 2018-06-01
    ContainerGroupNameParameter:
      description: The name of the container group.
      in: path
      name: containerGroupName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        ContainerGroupsDelete:
          value: demo1
        ContainerGroupsGet_Failed:
          value: demo1
        ContainerGroupsGet_Succeeded:
          value: demo1
        ContainerGroupsUpdate:
          value: demo1
        ContainerGroupsCreateOrUpdate:
          value: demo1
        ContainerExec:
          value: demo1
        ContainerListLogs:
          value: demo1
        ContainerRestart:
          value: demo1
        ContainerStop:
          value: demo1
    LocationParameter:
      description: The identifier for the physical azure location.
      in: path
      name: location
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        ContainerUsage:
          value: westcentralus
    OperationIdParameter:
      description: The operation Id.
      in: path
      name: operationId
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceGroupNameParameter:
      description: The name of the resource group.
      in: path
      name: resourceGroupName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        ContainerGroupsListByResourceGroup:
          value: demo
        ContainerGroupsDelete:
          value: demo
        ContainerGroupsGet_Failed:
          value: demo
        ContainerGroupsGet_Succeeded:
          value: demo
        ContainerGroupsUpdate:
          value: demoResource
        ContainerGroupsCreateOrUpdate:
          value: demo
        ContainerExec:
          value: demo
        ContainerListLogs:
          value: demo
        ContainerRestart:
          value: demo
        ContainerStop:
          value: demo
    SubscriptionIdParameter:
      description: Subscription credentials which uniquely identify Microsoft Azure
        subscription. The subscription ID forms part of the URI for every
        service call.
      in: path
      name: subscriptionId
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
      examples:
        ContainerGroupsList:
          value: subid
        ContainerUsage:
          value: subid
        ContainerGroupsListByResourceGroup:
          value: subid
        ContainerGroupsDelete:
          value: subid
        ContainerGroupsGet_Failed:
          value: subid
        ContainerGroupsGet_Succeeded:
          value: subid
        ContainerGroupsUpdate:
          value: subid
        ContainerGroupsCreateOrUpdate:
          value: subid
        ContainerExec:
          value: subid
        ContainerListLogs:
          value: subid
        ContainerRestart:
          value: subid
        ContainerStop:
          value: subid
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: Impersonate your user account
  schemas:
    AzureFileVolume:
      description: The properties of the Azure File volume. Azure File shares are mounted
        as volumes.
      properties:
        readOnly:
          description: The flag indicating whether the Azure File shared mounted as a
            volume is read-only.
          type: boolean
        shareName:
          description: The name of the Azure File share to be mounted as a volume.
          type: string
        storageAccountKey:
          description: The storage account access key used to access the Azure File share.
          type: string
        storageAccountName:
          description: The name of the storage account that contains the Azure File share.
          type: string
      required:
        - shareName
        - storageAccountName
      type: object
    Container:
      description: A container instance.
      properties:
        name:
          description: The user-provided name of the container instance.
          type: string
        properties:
          $ref: "#/components/schemas/ContainerProperties"
      required:
        - properties
        - name
      type: object
    ContainerExec:
      description: The container execution command, for liveness or readiness probe
      properties:
        command:
          description: The commands to execute within the container.
          items:
            type: string
          type: array
      type: object
    ContainerExecRequest:
      description: The container exec request.
      properties:
        command:
          description: The command to be executed.
          type: string
        terminalSize:
          description: The size of the terminal.
          properties:
            cols:
              description: The column size of the terminal
              type: integer
            rows:
              description: The row size of the terminal
              type: integer
          type: object
      type: object
    ContainerExecResponse:
      description: The information for the container exec command.
      properties:
        password:
          description: The password to start the exec command.
          type: string
        webSocketUri:
          description: The uri for the exec websocket.
          type: string
      type: object
    ContainerGroup:
      allOf:
        - $ref: "#/components/schemas/Resource"
        - properties:
            properties:
              properties:
                containers:
                  description: The containers within the container group.
                  items:
                    $ref: "#/components/schemas/Container"
                  type: array
                diagnostics:
                  $ref: "#/components/schemas/ContainerGroupDiagnostics"
                imageRegistryCredentials:
                  description: The image registry credentials by which the container group
                    is created from.
                  items:
                    $ref: "#/components/schemas/ImageRegistryCredential"
                  type: array
                instanceView:
                  description: The instance view of the container group. Only valid in
                    response.
                  properties:
                    events:
                      description: The events of this container group.
                      items:
                        $ref: "#/components/schemas/Event"
                      readOnly: true
                      type: array
                    state:
                      description: The state of the container group. Only valid in response.
                      readOnly: true
                      type: string
                  readOnly: true
                  type: object
                ipAddress:
                  $ref: "#/components/schemas/IpAddress"
                osType:
                  description: The operating system type required by the containers in the
                    container group.
                  enum:
                    - Windows
                    - Linux
                  type: string
                  x-ms-enum:
                    modelAsString: true
                    name: OperatingSystemTypes
                provisioningState:
                  description: The provisioning state of the container group. This only
                    appears in the response.
                  readOnly: true
                  type: string
                restartPolicy:
                  description: >
                    Restart policy for all containers within the container
                    group. 

                    - `Always` Always restart

                    - `OnFailure` Restart on failure

                    - `Never` Never restart
                  enum:
                    - Always
                    - OnFailure
                    - Never
                  type: string
                  x-ms-enum:
                    modelAsString: true
                    name: ContainerGroupRestartPolicy
                volumes:
                  description: The list of volumes that can be mounted by containers in
                    this container group.
                  items:
                    $ref: "#/components/schemas/Volume"
                  type: array
              required:
                - containers
                - osType
              type: object
              x-ms-client-flatten: true
          required:
            - properties
          type: object
      description: A container group.
    ContainerGroupDiagnostics:
      description: Container group diagnostic information.
      properties:
        logAnalytics:
          $ref: "#/components/schemas/LogAnalytics"
      type: object
    ContainerGroupListResult:
      description: The container group list response that contains the container group
        properties.
      properties:
        nextLink:
          description: The URI to fetch the next page of container groups.
          type: string
        value:
          description: The list of container groups.
          items:
            $ref: "#/components/schemas/ContainerGroup"
          type: array
      type: object
    ContainerHttpGet:
      description: The container Http Get settings, for liveness or readiness probe
      properties:
        path:
          description: The path to probe.
          type: string
        port:
          description: The port number to probe.
          format: int32
          type: integer
        scheme:
          description: The scheme.
          enum:
            - http
            - https
          type: string
      required:
        - port
      type: object
    ContainerPort:
      description: The port exposed on the container instance.
      properties:
        port:
          description: The port number exposed within the container group.
          format: int32
          type: integer
        protocol:
          description: The protocol associated with the port.
          enum:
            - TCP
            - UDP
          type: string
          x-ms-enum:
            modelAsString: true
            name: ContainerNetworkProtocol
      required:
        - port
      type: object
    ContainerProbe:
      description: The container probe, for liveness or readiness
      properties:
        exec:
          $ref: "#/components/schemas/ContainerExec"
        failureThreshold:
          description: The failure threshold.
          format: int32
          type: integer
        httpGet:
          $ref: "#/components/schemas/ContainerHttpGet"
        initialDelaySeconds:
          description: The initial delay seconds.
          format: int32
          type: integer
        periodSeconds:
          description: The period seconds.
          format: int32
          type: integer
        successThreshold:
          description: The success threshold.
          format: int32
          type: integer
        timeoutSeconds:
          description: The timeout seconds.
          format: int32
          type: integer
      type: object
    ContainerProperties:
      description: The container instance properties.
      properties:
        command:
          description: The commands to execute within the container instance in exec form.
          items:
            type: string
          type: array
        environmentVariables:
          description: The environment variables to set in the container instance.
          items:
            $ref: "#/components/schemas/EnvironmentVariable"
          type: array
        image:
          description: The name of the image used to create the container instance.
          type: string
        instanceView:
          description: The instance view of the container instance. Only valid in response.
          properties:
            currentState:
              $ref: "#/components/schemas/ContainerState"
            events:
              description: The events of the container instance.
              items:
                $ref: "#/components/schemas/Event"
              readOnly: true
              type: array
            previousState:
              $ref: "#/components/schemas/ContainerState"
            restartCount:
              description: The number of times that the container instance has been
                restarted.
              readOnly: true
              type: integer
          readOnly: true
          type: object
        livenessProbe:
          $ref: "#/components/schemas/ContainerProbe"
        ports:
          description: The exposed ports on the container instance.
          items:
            $ref: "#/components/schemas/ContainerPort"
          type: array
        readinessProbe:
          $ref: "#/components/schemas/ContainerProbe"
        resources:
          $ref: "#/components/schemas/ResourceRequirements"
        volumeMounts:
          description: The volume mounts available to the container instance.
          items:
            $ref: "#/components/schemas/VolumeMount"
          type: array
      required:
        - image
        - resources
      type: object
    ContainerState:
      description: The container instance state.
      properties:
        detailStatus:
          description: The human-readable status of the container instance state.
          type: string
        exitCode:
          description: The container instance exit codes correspond to those from the
            `docker run` command.
          type: integer
        finishTime:
          description: The date-time when the container instance state finished.
          format: date-time
          type: string
        startTime:
          description: The date-time when the container instance state started.
          format: date-time
          type: string
        state:
          description: The state of the container instance.
          type: string
      type: object
    EmptyDirVolume:
      description: The empty directory volume.
      properties: {}
      type: object
    EnvironmentVariable:
      description: The environment variable to set within the container instance.
      properties:
        name:
          description: The name of the environment variable.
          type: string
        secureValue:
          description: The value of the secure environment variable.
          type: string
        value:
          description: The value of the environment variable.
          type: string
      required:
        - name
      type: object
    Event:
      description: A container group or container instance event.
      properties:
        count:
          description: The count of the event.
          type: integer
        firstTimestamp:
          description: The date-time of the earliest logged event.
          format: date-time
          type: string
        lastTimestamp:
          description: The date-time of the latest logged event.
          format: date-time
          type: string
        message:
          description: The event message.
          type: string
        name:
          description: The event name.
          type: string
        type:
          description: The event type.
          type: string
      type: object
    GitRepoVolume:
      description: Represents a volume that is populated with the contents of a git
        repository
      properties:
        directory:
          description: Target directory name. Must not contain or start with '..'.  If '.'
            is supplied, the volume directory will be the git
            repository.  Otherwise, if specified, the volume will contain the
            git repository in the subdirectory with the given name.
          type: string
        repository:
          description: Repository URL
          type: string
        revision:
          description: Commit hash for the specified revision.
          type: string
      required:
        - repository
    ImageRegistryCredential:
      description: Image registry credential.
      properties:
        password:
          description: The password for the private registry.
          type: string
        server:
          description: The Docker image registry server without a protocol such as "http"
            and "https".
          type: string
        username:
          description: The username for the private registry.
          type: string
      required:
        - server
        - username
      type: object
    IpAddress:
      description: IP address for the container group.
      properties:
        dnsNameLabel:
          description: The Dns name label for the IP.
          type: string
        fqdn:
          description: The FQDN for the IP.
          readOnly: true
          type: string
        ip:
          description: The IP exposed to the public internet.
          type: string
        ports:
          description: The list of ports exposed on the container group.
          items:
            $ref: "#/components/schemas/Port"
          type: array
        type:
          description: Specifies if the IP is exposed to the public internet.
          enum:
            - Public
          type: string
          x-ms-enum:
            modelAsString: true
            name: ContainerGroupIpAddressType
      required:
        - ports
        - type
      type: object
    LogAnalytics:
      description: Container group log analytics information.
      properties:
        workspaceId:
          description: The workspace id for log analytics
          type: string
        workspaceKey:
          description: The workspace key for log analytics
          type: string
      required:
        - workspaceId
        - workspaceKey
      type: object
    Logs:
      description: The logs.
      properties:
        content:
          description: The content of the log.
          type: string
      type: object
    Operation:
      description: An operation for Azure Container Instance service.
      properties:
        display:
          description: The display information of the operation.
          properties:
            description:
              description: The description of the operation.
              type: string
            operation:
              description: The friendly name of the operation.
              type: string
            provider:
              description: The name of the provider of the operation.
              type: string
            resource:
              description: The name of the resource type of the operation.
              type: string
          type: object
        name:
          description: The name of the operation.
          type: string
        origin:
          description: The intended executor of the operation.
          enum:
            - User
            - System
          type: string
          x-ms-enum:
            modelAsString: true
            name: ContainerInstanceOperationsOrigin
      required:
        - name
        - display
      type: object
    OperationListResult:
      description: The operation list response that contains all operations for Azure
        Container Instance service.
      properties:
        nextLink:
          description: The URI to fetch the next page of operations.
          type: string
        value:
          description: The list of operations.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    Port:
      description: The port exposed on the container group.
      properties:
        port:
          description: The port number.
          format: int32
          type: integer
        protocol:
          description: The protocol associated with the port.
          enum:
            - TCP
            - UDP
          type: string
          x-ms-enum:
            modelAsString: true
            name: ContainerGroupNetworkProtocol
      required:
        - port
      type: object
    Resource:
      description: The Resource model definition.
      properties:
        id:
          description: The resource id.
          readOnly: true
          type: string
        location:
          description: The resource location.
          type: string
        name:
          description: The resource name.
          readOnly: true
          type: string
        tags:
          additionalProperties:
            type: string
          description: The resource tags.
          type: object
        type:
          description: The resource type.
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
    ResourceLimits:
      description: The resource limits.
      properties:
        cpu:
          description: The CPU limit of this container instance.
          format: double
          type: number
        memoryInGB:
          description: The memory limit in GB of this container instance.
          format: double
          type: number
      type: object
    ResourceRequests:
      description: The resource requests.
      properties:
        cpu:
          description: The CPU request of this container instance.
          format: double
          type: number
        memoryInGB:
          description: The memory request in GB of this container instance.
          format: double
          type: number
      required:
        - memoryInGB
        - cpu
      type: object
    ResourceRequirements:
      description: The resource requirements.
      properties:
        limits:
          $ref: "#/components/schemas/ResourceLimits"
        requests:
          $ref: "#/components/schemas/ResourceRequests"
      required:
        - requests
      type: object
    SecretVolume:
      additionalProperties:
        type: string
      description: The secret volume.
      type: object
    Usage:
      description: A single usage result
      properties:
        currentValue:
          description: The current usage of the resource
          readOnly: true
          type: integer
        limit:
          description: The maximum permitted usage of the resource.
          readOnly: true
          type: integer
        name:
          description: The name object of the resource
          properties:
            localizedValue:
              description: The localized name of the resource
              readOnly: true
              type: string
            value:
              description: The name of the resource
              readOnly: true
              type: string
          readOnly: true
          type: object
        unit:
          description: Unit of the usage result
          readOnly: true
          type: string
      type: object
    UsageListResult:
      description: The response containing the usage data
      properties:
        value:
          items:
            $ref: "#/components/schemas/Usage"
          readOnly: true
          type: array
      type: object
    Volume:
      description: The properties of the volume.
      properties:
        azureFile:
          $ref: "#/components/schemas/AzureFileVolume"
        emptyDir:
          $ref: "#/components/schemas/EmptyDirVolume"
        gitRepo:
          $ref: "#/components/schemas/GitRepoVolume"
        name:
          description: The name of the volume.
          type: string
        secret:
          $ref: "#/components/schemas/SecretVolume"
      required:
        - name
      type: object
    VolumeMount:
      description: The properties of the volume mount.
      properties:
        mountPath:
          description: The path within the container where the volume should be mounted.
            Must not contain colon (:).
          type: string
        name:
          description: The name of the volume mount.
          type: string
        readOnly:
          description: The flag indicating whether the volume mount is read-only.
          type: boolean
      required:
        - name
        - mountPath
      type: object
