openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: The Cloud Filestore API is used for creating and managing cloud file servers.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Filestore
  version: v1beta1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://file.googleapis.com/$discovery/rest?version=v1beta1
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: file
externalDocs:
  url: https://cloud.google.com/filestore/
tags:
  - name: projects
paths:
  "/v1beta1/{name}":
    delete:
      description: Deletes an instance.
      operationId: file.projects.locations.instances.delete
      parameters:
        - description: |-
            The instance resource name, in the format
            projects/{project_id}/locations/{location}/instances/{instance_id}
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets the details of a specific instance.
      operationId: file.projects.locations.instances.get
      parameters:
        - description: |-
            The instance resource name, in the format
            projects/{project_id}/locations/{location}/instances/{instance_id}.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Instance"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    patch:
      description: Updates the settings of a specific instance.
      operationId: file.projects.locations.instances.patch
      parameters:
        - description: >-
            Output only. The resource name of the instance, in the format

            projects/{project_id}/locations/{location_id}/instances/{instance_id}.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            Mask of fields to update.  At least one path must be supplied in
            this

            field.  The elements of the repeated paths field may only include these

            fields:

            "description"

            "file_shares"

            "labels"
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Instance"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1beta1/{name}/locations":
    get:
      description: Lists information about the supported locations for this service.
      operationId: file.projects.locations.list
      parameters:
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The resource that owns the locations collection, if applicable.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1beta1/{name}/operations":
    get:
      description: |-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.

        NOTE: the `name` binding allows API services to override the binding
        to use different resource name schemes, such as `users/*/operations`. To
        override the binding, API services can add a binding such as
        `"/v1/{name=users/*}/operations"` to their service configuration.
        For backwards compatibility, the default name includes the operations
        collection id, however overriding users must ensure the name binding
        is the parent resource, without the operations collection id.
      operationId: file.projects.locations.operations.list
      parameters:
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1beta1/{name}:cancel":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation.  The
        server

        makes a best effort to cancel the operation, but success is not

        guaranteed.  If the server doesn't support this method, it returns

        `google.rpc.Code.UNIMPLEMENTED`.  Clients can use

        Operations.GetOperation or

        other methods to check whether the cancellation succeeded or whether the

        operation completed despite cancellation. On successful cancellation,

        the operation is not deleted; instead, it becomes an operation with

        an Operation.error value with a google.rpc.Status.code of 1,

        corresponding to `Code.CANCELLED`.
      operationId: file.projects.locations.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelOperationRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1beta1/{parent}/instances":
    get:
      description: |-
        Lists all instances in a project for either a specified location
        or for all locations.
      operationId: file.projects.locations.instances.list
      parameters:
        - description: List filter.
          in: query
          name: filter
          schema:
            type: string
        - description: Sort results. Supported values are "name", "name desc" or ""
            (unsorted).
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of items to return.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            The next_page_token value to use if there are additional
            results to retrieve for this list request.
          in: query
          name: pageToken
          schema:
            type: string
        - description: >-
            The project and location for which to retrieve instance information,

            in the format projects/{project_id}/locations/{location}. In Cloud

            Filestore, locations map to GCP zones, for example **us-west1-b**. To

            retrieve instance information for all locations, use "-" for the {location}

            value.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListInstancesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Creates an instance.
      operationId: file.projects.locations.instances.create
      parameters:
        - description: |-
            The name of the instance to create.
            The name must be unique for the specified project and location.
          in: query
          name: instanceId
          schema:
            type: string
        - description: |-
            The instance's project and location, in the format
            projects/{project_id}/locations/{location}. In Cloud Filestore,
            locations map to GCP zones, for example **us-west1-b**.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Instance"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
servers:
  - url: https://file.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  requestBodies:
    Instance:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Instance"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
  schemas:
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated

        empty messages in your APIs. A typical example is to use it as the request

        or the response type of an API method. For instance:

            service Foo {
              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
            }

        The JSON representation for `Empty` is empty JSON object `{}`.
      properties: {}
      type: object
    FileShareConfig:
      description: File share configuration for the instance.
      properties:
        capacityGb:
          description: |-
            File share capacity in gigabytes (GB).
            Cloud Filestore defines 1 GB as 1024^3 bytes.
          format: int64
          type: string
        name:
          description: The name of the file share (must be 16 characters or less).
          type: string
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1Instance:
      description: >-
        Instance represents the interface for SLM services to actuate the state

        of control plane resources.


        Example Instance in JSON, where
          consumer-project=snapchat,
          producer-project=cloud-sql:

        ```json

        Instance:

        {
          "name":
          "projects/snapchat/locations/us-east1/instances/prod-instance",
          "create_time": {
            "seconds": 1526406431,
          },
          "labels": {
            "env": "prod",
            "foo": "bar"
          },
          "state": READY,
          "software_versions": {
            "software_update": "cloud-sql-09-28-2018",
          },
          "maintenance_policy_names": {
            "UpdatePolicy":
            "projects/snapchat/locations/us-east1/maintenancePolicies/prod-update-policy",
          }
          "rollout_metadata": {
            "projects/cloud-sql/locations/global/rolloutTypes/software_update": {
              "release":
              "projects/cloud-sql/locations/global/releases/cloud-sql-09-28-2018",
              "rollout":
              "projects/cloud-sql/locations/us-east1/rollouts/cloud-sql-09-28-2018-canary",
            },
            "projects/cloud-sql/locations/global/rolloutTypes/instance_restart": {
              "release":
              "projects/cloud-sql/locations/global/releases/cloud-sql-09-20-repair",
              "rollout":
              "projects/cloud-sql/locations/us-east1/rollouts/cloud-sql-09-20-repair-100-percent",
            }
          }
          "tenant_project_id": "cloud-sql-test-tenant",
          "producer_metadata": {
            "cloud-sql-tier": "basic",
            "cloud-sql-instance-size": "1G",
          },
          "provisioned_resources": [
            {
              "resource-type": "compute-instance",
              "resource-url":
              "https://www.googleapis.com/compute/v1/projects/cloud-sql/zones/us-east1-b/instances/vm-1",
            }
          ],
          "maintenance_schedules": {
            "csa_rollout": {
               "start_time": {
                  "seconds": 1526406431,
               },
               "end_time": {
                  "seconds": 1535406431,
               },
            },
            "ncsa_rollout": {
               "start_time": {
                  "seconds": 1526406431,
               },
               "end_time": {
                  "seconds": 1535406431,
               },
            }
          },
          "consumer_defined_name": "my-sql-instance1",
        }

        ```
      properties:
        consumerDefinedName:
          description: >-
            consumer_defined_name is the name that is set by the consumer. On
            the other

            hand Name field represents system-assigned id of an instance so consumers

            are not necessarily aware of it.

            consumer_defined_name is used for notification/UI purposes for consumer to

            recognize their instances.
          type: string
        createTime:
          description: Output only. Timestamp when the resource was created.
          format: google-datetime
          type: string
        labels:
          additionalProperties:
            type: string
          description: >-
            Optional. Resource labels to represent user provided metadata. Each
            label

            is a key-value pair, where both the key and the value are arbitrary strings

            provided by the user.
          type: object
        maintenancePolicyNames:
          additionalProperties:
            type: string
          description: >-
            The MaintenancePolicies that have been attached to the instance.

            The key must be of the type name of the oneof policy name defined in

            MaintenancePolicy, and the referenced policy must define the same policy

            type. For complete details of MaintenancePolicy, please refer to

            go/cloud-saas-mw-ug.
          type: object
        maintenanceSchedules:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudSaasacceleratorManagementProvide\
              rsV1MaintenanceSchedule"
          description: >-
            The MaintenanceSchedule contains the scheduling information of
            published

            maintenance schedule.
          type: object
        name:
          description: >-
            Unique name of the resource. It uses the form:
             `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
          type: string
        producerMetadata:
          additionalProperties:
            type: string
          description: |-
            Output only. Custom string attributes used primarily to expose
            producer-specific information in monitoring dashboards.
            See go/get-instance-metadata.
          type: object
        provisionedResources:
          description: |-
            Output only. The list of data plane resources provisioned for this
            instance, e.g. compute VMs. See go/get-instance-metadata.
          items:
            $ref: "#/components/schemas/GoogleCloudSaasacceleratorManagementProvide\
              rsV1ProvisionedResource"
          type: array
        rolloutMetadata:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudSaasacceleratorManagementProvide\
              rsV1RolloutMetadata"
          description: >-
            The map between RolloutType and the corresponding RolloutMetadata.

            This is only mutated by rollout service. For actuation implementation,

            this information is pass-through for Rollout management. Producer shall

            not modify by itself.

            For update of a single entry in this map, the update field mask shall

            follow this sementics: go/advanced-field-masks
          type: object
        sloMetadata:
          $ref: "#/components/schemas/GoogleCloudSaasacceleratorManagementProviders\
            V1SloMetadata"
        softwareVersions:
          additionalProperties:
            type: string
          description: |-
            Software versions that are used to deploy this instance. This can be
            mutated by rollout services.
          type: object
        state:
          description: >-
            Output only. Current lifecycle state of the resource (e.g. if it's
            being

            created or ready to use).
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - UPDATING
            - REPAIRING
            - DELETING
          type: string
        tenantProjectId:
          description: |-
            Output only. ID of the associated GCP tenant project.
            See go/get-instance-metadata.
          type: string
        updateTime:
          description: Output only. Timestamp when the resource was last modified.
          format: google-datetime
          type: string
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule:
      description: >-
        Maintenance schedule which is exposed to customer and potentially end
        user,

        indicating published upcoming future maintenance schedule
      properties:
        canReschedule:
          description: >-
            Can this scheduled update be rescheduled?

            By default, it's true and API needs to do explicitly check whether it's

            set, if it's set as false explicitly, it's false
          type: boolean
        endTime:
          description: The scheduled end time for the maintenance.
          format: google-datetime
          type: string
        rolloutManagementPolicy:
          description: >-
            The rollout management policy this maintenance schedule is
            associated

            with. When doing reschedule update request, the reschedule should be

            against this given policy.
          type: string
        startTime:
          description: The scheduled start time for the maintenance.
          format: google-datetime
          type: string
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata:
      description: >-
        Node information for custom per-node SLO implementations.

        SSA does not support per-node SLO, but producers can populate per-node

        information in SloMetadata for custom precomputations.

        SSA Eligibility Exporter will emit per-node metric based on this information.
      properties:
        exclusions:
          description: >-
            By default node is eligible if instance is eligible.

            But individual node might be excluded from SLO by adding entry here.

            For semantic see SloMetadata.exclusions.

            If both instance and node level exclusions are present for time period,

            the node level's reason will be reported by Eligibility Exporter.
          items:
            $ref: "#/components/schemas/GoogleCloudSaasacceleratorManagementProvide\
              rsV1SloExclusion"
          type: array
        location:
          description: The location of the node, if different from instance location.
          type: string
        nodeId:
          description: |-
            The id of the node.
            This should be equal to SaasInstanceNode.node_id.
          type: string
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1NotificationMetadata:
      description: NotificationMetadata is the notification state for an instance.
      properties:
        rescheduled:
          description: Whether the instance update has been rescheduled.
          type: boolean
        scheduledEndTime:
          description: >-
            The scheduled end time for the maintenance window during which
            update

            can be performed on the instance.
          format: google-datetime
          type: string
        scheduledStartTime:
          description: |-
            The scheduled start time for the maintenance window during which
            update can be performed on the instance.
          format: google-datetime
          type: string
        targetRelease:
          description: The target release to be applied to the instance.
          type: string
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource:
      description: Describes provisioned dataplane resources.
      properties:
        resourceType:
          description: >-
            Type of the resource. This can be either a GCP resource or a custom
            one

            (e.g. another cloud provider's VM). For GCP compute resources use singular

            form of the names listed in GCP compute API documentation

            (https://cloud.google.com/compute/docs/reference/rest/v1/), prefixed with

            'compute-', for example: 'compute-instance', 'compute-disk',

            'compute-autoscaler'.
          type: string
        resourceUrl:
          description: |-
            URL identifying the resource, e.g.
            "https://www.googleapis.com/compute/v1/projects/...)".
          type: string
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1RolloutMetadata:
      description: RolloutMetadata for an actuation instance. It maps to a single
        RolloutType.
      properties:
        notification:
          $ref: "#/components/schemas/GoogleCloudSaasacceleratorManagementProviders\
            V1NotificationMetadata"
        releaseName:
          description: The last Release that has been applied to the instance.
          type: string
        rolloutName:
          description: The last rollout that has been applied to the instance.
          type: string
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1SloExclusion:
      description: SloExclusion represents an excusion in SLI calculation applies to all
        SLOs.
      properties:
        exclusionDuration:
          description: >-
            Exclusion duration. No restrictions on the possible values.


            When an ongoing operation is taking longer than initially expected,

            an existing entry in the exclusion list can be updated by extending the

            duration. This is supported by the subsystem exporting eligibility data

            as long as such extension is committed at least 10 minutes before the

            original exclusion expiration - otherwise it is possible that there will

            be "gaps" in the exclusion application in the exported timeseries.
          format: google-duration
          type: string
        exclusionStartTime:
          description: Start time of the exclusion. No alignment (e.g. to a full minute)
            needed.
          format: google-datetime
          type: string
        reason:
          description: >-
            Human-readable reason for the exclusion.

            This should be a static string (e.g. "Disruptive update in progress")

            and should not contain dynamically generated data (e.g. instance name).

            Can be left empty.
          type: string
        sliName:
          description: |-
            Name of an SLI that this exclusion applies to. Can be left empty,
            signaling that the instance should be excluded from all SLIs defined
            in the service SLO configuration.
          type: string
      type: object
    GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata:
      description: >-
        SloMetadata contains resources required for proper SLO classification of
        the

        instance.
      properties:
        exclusions:
          description: >-
            List of SLO exclusion windows. When multiple entries in the list
            match

            (matching the exclusion time-window against current time point)

            the exclusion reason used in the first matching entry will be published.


            It is not needed to include expired exclusion in this list, as only the

            currently applicable exclusions are taken into account by the eligibility

            exporting subsystem (the historical state of exclusions will be reflected

            in the historically produced timeseries regardless of the current state).


            This field can be used to mark the instance as temporary ineligible

            for the purpose of SLO calculation. For permanent instance SLO exclusion,

            a dedicated tier name can be used that does not have targets specified

            in the service SLO configuration.
          items:
            $ref: "#/components/schemas/GoogleCloudSaasacceleratorManagementProvide\
              rsV1SloExclusion"
          type: array
        nodes:
          description: >-
            Optional: list of nodes.

            Some producers need to use per-node metadata to calculate SLO.

            This field allows such producers to publish per-node SLO meta data,

            which will be consumed by SSA Eligibility Exporter and published in the

            form of per node metric to Monarch.
          items:
            $ref: "#/components/schemas/GoogleCloudSaasacceleratorManagementProvide\
              rsV1NodeSloMetadata"
          type: array
        tier:
          description: >-
            Name of the SLO tier the Instance belongs to. This name will be
            expected to

            match the tiers specified in the service SLO configuration.


            Field is mandatory and must not be empty.
          type: string
      type: object
    Instance:
      description: A Cloud Filestore instance.
      properties:
        createTime:
          description: Output only. The time when the instance was created.
          format: google-datetime
          type: string
        description:
          description: Optional. A description of the instance (2048 characters or less).
          type: string
        etag:
          description: >-
            Server-specified ETag for the instance resource to prevent
            simultaneous

            updates from overwriting each other.
          type: string
        fileShares:
          description: |-
            File system shares on the instance.
            For this version, only a single file share is supported.
          items:
            $ref: "#/components/schemas/FileShareConfig"
          type: array
        labels:
          additionalProperties:
            type: string
          description: Resource labels to represent user provided metadata.
          type: object
        name:
          description: >-
            Output only. The resource name of the instance, in the format

            projects/{project_id}/locations/{location_id}/instances/{instance_id}.
          type: string
        networks:
          description: |-
            VPC networks to which the instance is connected.
            For this version, only a single network is supported.
          items:
            $ref: "#/components/schemas/NetworkConfig"
          type: array
        state:
          description: Output only. The instance state.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - REPAIRING
            - DELETING
            - ERROR
          type: string
        statusMessage:
          description: Output only. Additional information about the instance state, if
            available.
          type: string
        tier:
          description: The service tier of the instance.
          enum:
            - TIER_UNSPECIFIED
            - STANDARD
            - PREMIUM
          type: string
      type: object
    ListInstancesResponse:
      description: ListInstancesResponse is the result of ListInstancesRequest.
      properties:
        instances:
          description: >-
            A list of instances in the project for the specified location.


            If the {location} value in the request is "-", the response contains a list

            of instances from all locations. If any location is unreachable, the

            response will only return instances in reachable locations and the

            "unreachable" field will be populated with a list of unreachable locations.
          items:
            $ref: "#/components/schemas/Instance"
          type: array
        nextPageToken:
          description: >-
            The token you can use to retrieve the next page of results. Not
            returned

            if there are no more results in the list.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Location"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the
            request.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    Location:
      description: A resource that represents Google Cloud Platform location.
      properties:
        displayName:
          description: |-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: |-
            Cross-service attributes for the location. For example

                {"cloud.googleapis.com/region": "us-east1"}
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata. For example the available capacity at the
            given

            location.
          type: object
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations.

            For example: `"projects/example-project/locations/us-east1"`
          type: string
      type: object
    NetworkConfig:
      description: Network configuration for the instance.
      properties:
        ipAddresses:
          description: >-
            Output only. IPv4 addresses in the format

            {octet 1}.{octet 2}.{octet 3}.{octet 4} or IPv6 addresses in the format

            {block 1}:{block 2}:{block 3}:{block 4}:{block 5}:{block 6}:{block

            7}:{block 8}.
          items:
            type: string
          type: array
        modes:
          description: |-
            Internet protocol versions for which the instance has IP addresses
            assigned. For this version, only MODE_IPV4 is supported.
          items:
            enum:
              - ADDRESS_MODE_UNSPECIFIED
              - MODE_IPV4
            type: string
          type: array
        network:
          description: >-
            The name of the Google Compute Engine

            [VPC network](/compute/docs/networks-and-firewalls#networks) to which the

            instance is connected.
          type: string
        reservedIpRange:
          description: >-
            A /29 CIDR block in one of the

            [internal IP address

            ranges](https://www.arin.net/knowledge/address_filters.html) that

            identifies the range of IP addresses reserved for this instance. For

            example, 10.0.0.0/29 or 192.168.0.0/29. The range you specify can't overlap

            with either existing subnets or assigned IP address ranges for other Cloud

            Filestore instances in the selected VPC network.
          type: string
      type: object
    Operation:
      description: >-
        This resource represents a long-running operation that is the result of
        a

        network API call.
      properties:
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress.

            If `true`, the operation is completed, and either `error` or `response` is

            available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata associated with the operation.  It
            typically

            contains progress information and common metadata such as create time.

            Some services might not provide such metadata.  Any method that returns a

            long-running operation should document the metadata type, if any.
          type: object
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that

            originally returns it. If you use the default HTTP mapping, the

            `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            The normal response of the operation in case of success.  If the
            original

            method returns no data on success, such as `Delete`, the response is

            `google.protobuf.Empty`.  If the original method is standard

            `Get`/`Create`/`Update`, the response should be the resource.  For other

            methods, the response should have the type `XxxResponse`, where `Xxx`

            is the original method name.  For example, if the original method name

            is `TakeSnapshot()`, the inferred response type is

            `TakeSnapshotResponse`.
          type: object
      type: object
    OperationMetadata:
      description: Represents the metadata of the long-running operation.
      properties:
        apiVersion:
          description: "[Output only] API version used to start the operation."
          type: string
        cancelRequested:
          description: |-
            [Output only] Identifies whether the user has requested cancellation
            of the operation. Operations that have successfully been cancelled
            have Operation.error value with a google.rpc.Status.code of 1,
            corresponding to `Code.CANCELLED`.
          type: boolean
        createTime:
          description: "[Output only] The time the operation was created."
          format: google-datetime
          type: string
        endTime:
          description: "[Output only] The time the operation finished running."
          format: google-datetime
          type: string
        statusDetail:
          description: "[Output only] Human-readable status of the operation, if any."
          type: string
        target:
          description: "[Output only] Server-defined resource path for the target of the
            operation."
          type: string
        verb:
          description: "[Output only] Name of the verb executed by the operation."
          type: string
      type: object
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for

        different programming environments, including REST APIs and RPC APIs. It is

        used by [gRPC](https://github.com/grpc). Each `Status` message contains

        three pieces of data: error code, error message, and error details.


        You can find out more about this error model and how to work with it in the

        [API Design Guide](https://cloud.google.com/apis/design/errors).
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: >-
            A list of messages that carry the error details.  There is a common
            set of

            message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: |-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
