openapi: 3.0.0
x-hasEquivalentPaths: true
info:
  contact:
    name: Google
    url: https://google.com
  description: Manages lightweight user-provided functions executed in response to events.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Functions
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://cloudfunctions.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: cloudfunctions
externalDocs:
  url: https://cloud.google.com/functions
tags:
  - name: operations
  - name: projects
paths:
  /v1/operations:
    get:
      description: |-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.

        NOTE: the `name` binding allows API services to override the binding
        to use different resource name schemes, such as `users/*/operations`. To
        override the binding, API services can add a binding such as
        `"/v1/{name=users/*}/operations"` to their service configuration.
        For backwards compatibility, the default name includes the operations
        collection id, however overriding users must ensure the name binding
        is the parent resource, without the operations collection id.
      operationId: cloudfunctions.operations.list
      parameters:
        - description: "Required. A filter for matching the requested operations.<br><br>
            The supported formats of <b>filter</b> are:<br> To query for
            specific function: <code>project:*,location:*,function:*</code><br>
            To query for all of the latest operations for a project:
            <code>project:*,latest:true</code>"
          in: query
          name: filter
          schema:
            type: string
        - description: Must not be set.
          in: query
          name: name
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - operations
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{location}/functions":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Creates a new function. If a function with the given name already exists
        in

        the specified project, the long running operation will return

        `ALREADY_EXISTS` error.
      operationId: cloudfunctions.projects.locations.functions.create
      parameters:
        - description: >-
            Required. The project and location in which the function should be
            created, specified

            in the format `projects/*/locations/*`
          in: path
          name: location
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CloudFunction"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{name}":
    delete:
      description: >-
        Deletes a function with the given name from the specified project. If
        the

        given function is used by some trigger, the trigger will be updated to

        remove this function.
      operationId: cloudfunctions.projects.locations.functions.delete
      parameters:
        - description: Required. The name of the function which should be deleted.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: >-
        Gets the latest state of a long-running operation.  Clients can use this

        method to poll the operation result at intervals as recommended by the API

        service.
      operationId: cloudfunctions.operations.get
      parameters:
        - description: The name of the operation resource.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - operations
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    patch:
      description: Updates existing function.
      operationId: cloudfunctions.projects.locations.functions.patch
      parameters:
        - description: |-
            A user-defined name of the function. Function names must be unique
            globally and match pattern `projects/*/locations/*/functions/*`
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: Required list of fields to be updated in this request.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/CloudFunction"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{name}/locations":
    get:
      description: Lists information about the supported locations for this service.
      operationId: cloudfunctions.projects.locations.list
      parameters:
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The resource that owns the locations collection, if applicable.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{name}:call":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Synchronously invokes a deployed Cloud Function. To be used for testing
        purposes as very limited traffic is allowed. For more information on
        the actual limits, refer to
        [Rate Limits](https://cloud.google.com/functions/quotas#rate_limits).
      operationId: cloudfunctions.projects.locations.functions.call
      parameters:
        - description: Required. The name of the function to be called.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CallFunctionRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/CallFunctionResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{name}:generateDownloadUrl":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Returns a signed URL for downloading deployed function source code.
        The URL is only valid for a limited period and should be used within
        minutes after generation.
        For more information about the signed URL usage see:
        https://cloud.google.com/storage/docs/access-control/signed-urls
      operationId: cloudfunctions.projects.locations.functions.generateDownloadUrl
      parameters:
        - description: >-
            The name of function for which source code Google Cloud Storage
            signed

            URL should be generated.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateDownloadUrlRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GenerateDownloadUrlResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{parent}/functions":
    get:
      description: Returns a list of functions that belong to the requested project.
      operationId: cloudfunctions.projects.locations.functions.list
      parameters:
        - description: Maximum number of functions to return per call.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            The value returned by the last
            `ListFunctionsResponse`; indicates that
            this is a continuation of a prior `ListFunctions` call, and that the
            system should return the next page of data.
          in: query
          name: pageToken
          schema:
            type: string
        - description: >-
            The project and location from which the function should be listed,

            specified in the format `projects/*/locations/*`

            If you want to list functions in all locations, use "-" in place of a

            location.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListFunctionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{parent}/functions:generateUploadUrl":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Returns a signed URL for uploading a function source code.

        For more information about the signed URL usage see:

        https://cloud.google.com/storage/docs/access-control/signed-urls.

        Once the function source code upload is complete, the used signed

        URL should be provided in CreateFunction or UpdateFunction request

        as a reference to the function source code.


        When uploading source code to the generated signed URL, please follow

        these restrictions:


        * Source file type should be a zip file.

        * Source file size should not exceed 100MB limit.

        * No credentials should be attached - the signed URLs provide access to the
          target bucket using internal service identity; if credentials were
          attached, the identity from the credentials would be used, but that
          identity does not have permissions to upload files to the URL.

        When making a HTTP PUT request, these two headers need to be specified:


        * `content-type: application/zip`

        * `x-goog-content-length-range: 0,104857600`


        And this header SHOULD NOT be specified:


        * `Authorization: Bearer YOUR_TOKEN`
      operationId: cloudfunctions.projects.locations.functions.generateUploadUrl
      parameters:
        - description: >-
            The project and location in which the Google Cloud Storage signed
            URL

            should be generated, specified in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateUploadUrlRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GenerateUploadUrlResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{resource}:getIamPolicy":
    get:
      description: >-
        Gets the IAM access control policy for a function.

        Returns an empty policy if the function exists and does not have a policy

        set.
      operationId: cloudfunctions.projects.locations.functions.getIamPolicy
      parameters:
        - description: >-
            Optional. The policy format version to be returned.


            Valid values are 0, 1, and 3. Requests specifying an invalid value will be

            rejected.


            Requests for policies with any conditional bindings must specify version 3.

            Policies without any conditional bindings may specify any valid value or

            leave the field unset.
          in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
        - description: >-
            REQUIRED: The resource for which the policy is being requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{resource}:setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Sets the IAM access control policy on the specified function.
        Replaces any existing policy.
      operationId: cloudfunctions.projects.locations.functions.setIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being specified.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetIamPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{resource}:testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Tests the specified permissions against the IAM access control policy
        for a function.
        If the function does not exist, this will return an empty set of
        permissions, not a NOT_FOUND error.
      operationId: cloudfunctions.projects.locations.functions.testIamPermissions
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy detail is being
            requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestIamPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
servers:
  - url: https://cloudfunctions.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  requestBodies:
    CloudFunction:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CloudFunction"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
  schemas:
    AuditConfig:
      description: >-
        Specifies the audit configuration for a service.

        The configuration determines which permission types are logged, and what

        identities, if any, are exempted from logging.

        An AuditConfig must have one or more AuditLogConfigs.


        If there are AuditConfigs for both `allServices` and a specific service,

        the union of the two AuditConfigs is used for that service: the log_types

        specified in each AuditConfig are enabled, and the exempted_members in each

        AuditLogConfig are exempted.


        Example Policy with multiple AuditConfigs:

            {
              "audit_configs": [
                {
                  "service": "allServices"
                  "audit_log_configs": [
                    {
                      "log_type": "DATA_READ",
                      "exempted_members": [
                        "user:jose@example.com"
                      ]
                    },
                    {
                      "log_type": "DATA_WRITE",
                    },
                    {
                      "log_type": "ADMIN_READ",
                    }
                  ]
                },
                {
                  "service": "sampleservice.googleapis.com"
                  "audit_log_configs": [
                    {
                      "log_type": "DATA_READ",
                    },
                    {
                      "log_type": "DATA_WRITE",
                      "exempted_members": [
                        "user:aliya@example.com"
                      ]
                    }
                  ]
                }
              ]
            }

        For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ

        logging. It also exempts jose@example.com from DATA_READ logging, and

        aliya@example.com from DATA_WRITE logging.
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: "#/components/schemas/AuditLogConfig"
          type: array
        service:
          description: |-
            Specifies a service that will be enabled for audit logging.
            For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
      type: object
    AuditLogConfig:
      description: |-
        Provides the configuration for logging a type of permissions.
        Example:

            {
              "audit_log_configs": [
                {
                  "log_type": "DATA_READ",
                  "exempted_members": [
                    "user:jose@example.com"
                  ]
                },
                {
                  "log_type": "DATA_WRITE",
                }
              ]
            }

        This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      properties:
        exemptedMembers:
          description: |-
            Specifies the identities that do not cause logging for this type of
            permission.
            Follows the same format of Binding.members.
          items:
            type: string
          type: array
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
      type: object
    Binding:
      description: Associates `members` with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/Expr"
        members:
          description: >+
            Specifies the identities requesting access for a Cloud Platform
            resource.

            `members` can have the following values:


            * `allUsers`: A special identifier that represents anyone who is
               on the internet; with or without a Google account.

            * `allAuthenticatedUsers`: A special identifier that represents anyone
               who is authenticated with a Google account or a service account.

            * `user:{emailid}`: An email address that represents a specific Google
               account. For example, `alice@example.com` .


            * `serviceAccount:{emailid}`: An email address that represents a service
               account. For example, `my-other-app@appspot.gserviceaccount.com`.

            * `group:{emailid}`: An email address that represents a Google group.
               For example, `admins@example.com`.


            * `domain:{domain}`: The G Suite domain (primary) that represents all the
               users of that domain. For example, `google.com` or `example.com`.

          items:
            type: string
          type: array
        role:
          description: |-
            Role that is assigned to `members`.
            For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          type: string
      type: object
    CallFunctionRequest:
      description: Request for the `CallFunction` method.
      properties:
        data:
          description: Required. Input to be passed to the function.
          type: string
      type: object
    CallFunctionResponse:
      description: Response of `CallFunction` method.
      properties:
        error:
          description: |-
            Either system or user-function generated error. Set if execution
            was not successful.
          type: string
        executionId:
          description: Execution id of function invocation.
          type: string
        result:
          description: >-
            Result populated for successful execution of synchronous function.
            Will

            not be populated if function does not return a result through context.
          type: string
      type: object
    CloudFunction:
      description: >-
        Describes a Cloud Function that contains user computation executed in

        response to an event. It encapsulate function and triggers configurations.
      properties:
        availableMemoryMb:
          description: |-
            The amount of memory in MB available for a function.
            Defaults to 256MB.
          format: int32
          type: integer
        description:
          description: User-provided description of a function.
          type: string
        entryPoint:
          description: >-
            The name of the function (as defined in source code) that will be

            executed. Defaults to the resource name suffix, if not specified. For

            backward compatibility, if function with given name is not found, then the

            system will try to use function named "function".

            For Node.js this is name of a function exported by the module specified

            in `source_location`.
          type: string
        environmentVariables:
          additionalProperties:
            type: string
          description: Environment variables that shall be available during function
            execution.
          type: object
        eventTrigger:
          $ref: "#/components/schemas/EventTrigger"
        httpsTrigger:
          $ref: "#/components/schemas/HttpsTrigger"
        labels:
          additionalProperties:
            type: string
          description: Labels associated with this Cloud Function.
          type: object
        maxInstances:
          description: >-
            The limit on the maximum number of function instances that may
            coexist at a

            given time.
          format: int32
          type: integer
        name:
          description: |-
            A user-defined name of the function. Function names must be unique
            globally and match pattern `projects/*/locations/*/functions/*`
          type: string
        network:
          description: >-
            The VPC Network that this cloud function can connect to. It can be

            either the fully-qualified URI, or the short name of the network resource.

            If the short network name is used, the network must belong to the same

            project. Otherwise, it must belong to a project within the same

            organization. The format of this field is either

            `projects/{project}/global/networks/{network}` or `{network}`, where

            {project} is a project id where the network is defined, and {network} is

            the short name of the network.


            This field is mutually exclusive with `vpc_connector` and will be replaced

            by it.


            See [the VPC documentation](https://cloud.google.com/compute/docs/vpc) for

            more information on connecting Cloud projects.
          type: string
        runtime:
          description: >-
            The runtime in which to run the function. Required when deploying a
            new

            function, optional when updating an existing function. For a complete

            list of possible choices, see the

            [`gcloud` command

            reference](/sdk/gcloud/reference/functions/deploy#--runtime).
          type: string
        serviceAccountEmail:
          description: |-
            The email of the function's service account. If empty, defaults to
            `{project_id}@appspot.gserviceaccount.com`.
          type: string
        sourceArchiveUrl:
          description: >-
            The Google Cloud Storage URL, starting with gs://, pointing to the
            zip

            archive which contains the function.
          type: string
        sourceRepository:
          $ref: "#/components/schemas/SourceRepository"
        sourceUploadUrl:
          description: >-
            The Google Cloud Storage signed URL used for source uploading,
            generated

            by google.cloud.functions.v1.GenerateUploadUrl
          type: string
        status:
          description: Output only. Status of the function deployment.
          enum:
            - CLOUD_FUNCTION_STATUS_UNSPECIFIED
            - ACTIVE
            - OFFLINE
            - DEPLOY_IN_PROGRESS
            - DELETE_IN_PROGRESS
            - UNKNOWN
          type: string
        timeout:
          description: |-
            The function execution timeout. Execution is considered failed and
            can be terminated if the function is not completed at the end of the
            timeout period. Defaults to 60 seconds.
          format: google-duration
          type: string
        updateTime:
          description: Output only. The last update timestamp of a Cloud Function.
          format: google-datetime
          type: string
        versionId:
          description: >-
            Output only. The version identifier of the Cloud Function. Each
            deployment attempt

            results in a new version of a function being created.
          format: int64
          type: string
        vpcConnector:
          description: >-
            The VPC Network Connector that this cloud function can connect to.
            It can

            be either the fully-qualified URI, or the short name of the network

            connector resource. The format of this field is

            `projects/*/locations/*/connectors/*`


            This field is mutually exclusive with `network` field and will eventually

            replace it.


            See [the VPC documentation](https://cloud.google.com/compute/docs/vpc) for

            more information on connecting Cloud projects.
          type: string
      type: object
    EventTrigger:
      description: |-
        Describes EventTrigger, used to request events be sent from another
        service.
      properties:
        eventType:
          description: >-
            Required. The type of event to observe. For example:

            `providers/cloud.storage/eventTypes/object.change` and

            `providers/cloud.pubsub/eventTypes/topic.publish`.


            Event types match pattern `providers/*/eventTypes/*.*`.

            The pattern contains:


            1. namespace: For example, `cloud.storage` and
               `google.firebase.analytics`.
            2. resource type: The type of resource on which event occurs. For
               example, the Google Cloud Storage API includes the type `object`.
            3. action: The action that generates the event. For example, action for
               a Google Cloud Storage Object is 'change'.
            These parts are lower case.
          type: string
        failurePolicy:
          $ref: "#/components/schemas/FailurePolicy"
        resource:
          description: >-
            Required. The resource(s) from which to observe events, for example,

            `projects/_/buckets/myBucket`.


            Not all syntactically correct values are accepted by all services. For

            example:


            1. The authorization model must support it. Google Cloud Functions
               only allows EventTriggers to be deployed that observe resources in the
               same project as the `CloudFunction`.
            2. The resource type must match the pattern expected for an
               `event_type`. For example, an `EventTrigger` that has an
               `event_type` of "google.pubsub.topic.publish" should have a resource
               that matches Google Cloud Pub/Sub topics.

            Additionally, some services may support short names when creating an

            `EventTrigger`. These will always be returned in the normalized "long"

            format.


            See each *service's* documentation for supported formats.
          type: string
        service:
          description: >-
            The hostname of the service that should be observed.


            If no string is provided, the default service implementing the API will

            be used. For example, `storage.googleapis.com` is the default for all

            event types in the `google.storage` namespace.
          type: string
      type: object
    Expr:
      description: |-
        Represents an expression text. Example:

            title: "User account presence"
            description: "Determines whether the request has a user account"
            expression: "size(request.user) > 0"
      properties:
        description:
          description: >-
            An optional description of the expression. This is a longer text
            which

            describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: |-
            Textual representation of an expression in
            Common Expression Language syntax.

            The application context of the containing message determines which
            well-known feature set of CEL is supported.
          type: string
        location:
          description: >-
            An optional string indicating the location of the expression for
            error

            reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: |-
            An optional title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
      type: object
    FailurePolicy:
      description: |-
        Describes the policy in case of function's execution failure.
        If empty, then defaults to ignoring failures (i.e. not retrying them).
      properties:
        retry:
          $ref: "#/components/schemas/Retry"
      type: object
    GenerateDownloadUrlRequest:
      description: Request of `GenerateDownloadUrl` method.
      properties:
        versionId:
          description: >-
            The optional version of function. If not set, default, current
            version

            is used.
          format: uint64
          type: string
      type: object
    GenerateDownloadUrlResponse:
      description: Response of `GenerateDownloadUrl` method.
      properties:
        downloadUrl:
          description: >-
            The generated Google Cloud Storage signed URL that should be used
            for

            function source code download.
          type: string
      type: object
    GenerateUploadUrlRequest:
      description: Request of `GenerateSourceUploadUrl` method.
      properties: {}
      type: object
    GenerateUploadUrlResponse:
      description: Response of `GenerateSourceUploadUrl` method.
      properties:
        uploadUrl:
          description: >-
            The generated Google Cloud Storage signed URL that should be used
            for a

            function source code upload. The uploaded file should be a zip archive

            which contains a function.
          type: string
      type: object
    HttpsTrigger:
      description: Describes HttpsTrigger, could be used to connect web hooks to function.
      properties:
        url:
          description: Output only. The deployed url for the function.
          type: string
      type: object
    ListFunctionsResponse:
      description: Response for the `ListFunctions` method.
      properties:
        functions:
          description: The functions that match the request.
          items:
            $ref: "#/components/schemas/CloudFunction"
          type: array
        nextPageToken:
          description: |-
            If not empty, indicates that there may be more functions that match
            the request; this value should be passed in a new
            google.cloud.functions.v1.ListFunctionsRequest
            to get more functions.
          type: string
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Location"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the
            request.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    Location:
      description: A resource that represents Google Cloud Platform location.
      properties:
        displayName:
          description: |-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: |-
            Cross-service attributes for the location. For example

                {"cloud.googleapis.com/region": "us-east1"}
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata. For example the available capacity at the
            given

            location.
          type: object
        name:
          description: >-
            Resource name for the location, which may vary between
            implementations.

            For example: `"projects/example-project/locations/us-east1"`
          type: string
      type: object
    Operation:
      description: >-
        This resource represents a long-running operation that is the result of
        a

        network API call.
      properties:
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress.

            If `true`, the operation is completed, and either `error` or `response` is

            available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            Service-specific metadata associated with the operation.  It
            typically

            contains progress information and common metadata such as create time.

            Some services might not provide such metadata.  Any method that returns a

            long-running operation should document the metadata type, if any.
          type: object
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that

            originally returns it. If you use the default HTTP mapping, the

            `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            The normal response of the operation in case of success.  If the
            original

            method returns no data on success, such as `Delete`, the response is

            `google.protobuf.Empty`.  If the original method is standard

            `Get`/`Create`/`Update`, the response should be the resource.  For other

            methods, the response should have the type `XxxResponse`, where `Xxx`

            is the original method name.  For example, if the original method name

            is `TakeSnapshot()`, the inferred response type is

            `TakeSnapshotResponse`.
          type: object
      type: object
    OperationMetadataV1:
      description: Metadata describing an Operation
      properties:
        request:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The original request that started the operation.
          type: object
        target:
          description: |-
            Target of the operation - for example
            projects/project-1/locations/region-1/functions/function-1
          type: string
        type:
          description: Type of operation.
          enum:
            - OPERATION_UNSPECIFIED
            - CREATE_FUNCTION
            - UPDATE_FUNCTION
            - DELETE_FUNCTION
          type: string
        updateTime:
          description: The last update timestamp of the operation.
          format: google-datetime
          type: string
        versionId:
          description: |-
            Version id of the function created or updated by an API call.
            This field is only populated for Create and Update operations.
          format: int64
          type: string
      type: object
    OperationMetadataV1Beta2:
      description: Metadata describing an Operation
      properties:
        request:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The original request that started the operation.
          type: object
        target:
          description: |-
            Target of the operation - for example
            projects/project-1/locations/region-1/functions/function-1
          type: string
        type:
          description: Type of operation.
          enum:
            - OPERATION_UNSPECIFIED
            - CREATE_FUNCTION
            - UPDATE_FUNCTION
            - DELETE_FUNCTION
          type: string
        updateTime:
          description: The last update timestamp of the operation.
          format: google-datetime
          type: string
        versionId:
          description: |-
            Version id of the function created or updated by an API call.
            This field is only populated for Create and Update operations.
          format: int64
          type: string
      type: object
    Policy:
      description: >-
        Defines an Identity and Access Management (IAM) policy. It is used to

        specify access control policies for Cloud Platform resources.



        A `Policy` consists of a list of `bindings`. A `binding` binds a list of

        `members` to a `role`, where the members can be user accounts, Google groups,

        Google domains, and service accounts. A `role` is a named list of permissions

        defined by IAM.


        **JSON Example**

            {
              "bindings": [
                {
                  "role": "roles/owner",
                  "members": [
                    "user:mike@example.com",
                    "group:admins@example.com",
                    "domain:google.com",
                    "serviceAccount:my-other-app@appspot.gserviceaccount.com"
                  ]
                },
                {
                  "role": "roles/viewer",
                  "members": ["user:sean@example.com"]
                }
              ]
            }

        **YAML Example**

            bindings:
            - members:
              - user:mike@example.com
              - group:admins@example.com
              - domain:google.com
              - serviceAccount:my-other-app@appspot.gserviceaccount.com
              role: roles/owner
            - members:
              - user:sean@example.com
              role: roles/viewer


        For a description of IAM and its features, see the

        [IAM developer's guide](https://cloud.google.com/iam/docs).
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: "#/components/schemas/AuditConfig"
          type: array
        bindings:
          description: |-
            Associates a list of `members` to a `role`.
            `bindings` with no members will result in an error.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help

            prevent simultaneous updates of a policy from overwriting each other.

            It is strongly suggested that systems make use of the `etag` in the

            read-modify-write cycle to perform policy updates in order to avoid race

            conditions: An `etag` is returned in the response to `getIamPolicy`, and

            systems are expected to put that etag in the request to `setIamPolicy` to

            ensure that their change will be applied to the same version of the policy.


            If no `etag` is provided in the call to `setIamPolicy`, then the existing

            policy is overwritten.
          format: byte
          type: string
        version:
          description: >-
            Specifies the format of the policy.


            Valid values are 0, 1, and 3. Requests specifying an invalid value will be

            rejected.


            Policies with any conditional bindings must specify version 3. Policies

            without any conditional bindings may specify any valid value or leave the

            field unset.
          format: int32
          type: integer
      type: object
    Retry:
      description: >-
        Describes the retry policy in case of function's execution failure.

        A function execution will be retried on any failure.

        A failed execution will be retried up to 7 days with an exponential backoff

        (capped at 10 seconds).

        Retried execution is charged as any other execution.
      properties: {}
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: "#/components/schemas/Policy"
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only

            the fields in the mask will be modified. If no mask is provided, the

            following default mask is used:

            paths: "bindings, etag"

            This field is only used by Cloud IAM.
          format: google-fieldmask
          type: string
      type: object
    SourceRepository:
      description: |-
        Describes SourceRepository, used to represent parameters related to
        source repository where a function is hosted.
      properties:
        deployedUrl:
          description: >-
            Output only. The URL pointing to the hosted repository where the
            function

            were defined at the time of deployment. It always points to a specific

            commit in the format described above.
          type: string
        url:
          description: >-
            The URL pointing to the hosted repository where the function is
            defined.

            There are supported Cloud Source Repository URLs in the following

            formats:


            To refer to a specific commit:

            `https://source.developers.google.com/projects/*/repos/*/revisions/*/paths/*`

            To refer to a moveable alias (branch):

            `https://source.developers.google.com/projects/*/repos/*/moveable-aliases/*/paths/*`

            In particular, to refer to HEAD use `master` moveable alias.

            To refer to a specific fixed alias (tag):

            `https://source.developers.google.com/projects/*/repos/*/fixed-aliases/*/paths/*`


            You may omit `paths/*` if you want to use the main directory.
          type: string
      type: object
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for

        different programming environments, including REST APIs and RPC APIs. It is

        used by [gRPC](https://github.com/grpc). Each `Status` message contains

        three pieces of data: error code, error message, and error details.


        You can find out more about this error model and how to work with it in the

        [API Design Guide](https://cloud.google.com/apis/design/errors).
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: >-
            A list of messages that carry the error details.  There is a common
            set of

            message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: |-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with

            wildcards (such as '*' or 'storage.*') are not allowed. For more

            information see

            [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: |-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          items:
            type: string
          type: array
      type: object
