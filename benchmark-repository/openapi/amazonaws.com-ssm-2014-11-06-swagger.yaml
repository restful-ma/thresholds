openapi: 3.0.0
info:
  version: 2014-11-06
  x-release: v4
  title: Amazon Simple Systems Manager (SSM)
  description: <fullname>AWS Systems Manager</fullname> <p>AWS Systems Manager is a
    collection of capabilities that helps you automate management tasks such as
    collecting system inventory, applying operating system (OS) patches,
    automating the creation of Amazon Machine Images (AMIs), and configuring
    operating systems (OSs) and applications at scale. Systems Manager lets you
    remotely and securely manage the configuration of your managed instances. A
    <i>managed instance</i> is any Amazon EC2 instance or on-premises machine in
    your hybrid environment that has been configured for Systems Manager.</p>
    <p>This reference is intended to be used with the <a
    href="http://docs.aws.amazon.com/systems-manager/latest/userguide/">AWS
    Systems Manager User Guide</a>.</p> <p>To get started, verify prerequisites
    and configure managed instances. For more information, see <a
    href="http://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-setting-up.html">Setting
    Up AWS Systems Manager</a> in the <i>AWS Systems Manager User Guide</i>.</p>
    <p>For information about other API actions you can perform on Amazon EC2
    instances, see the <a
    href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/">Amazon EC2 API
    Reference</a>. For information about how to use a Query API, see <a
    href="http://docs.aws.amazon.com/AWSEC2/latest/APIReference/making-api-requests.html">Making
    API Requests</a>. </p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: ssm
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/ssm-2014-11-06.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/ssm/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=AmazonSSM.AddTagsToResource:
    post:
      operationId: AddTagsToResource
      description: "<p>Adds or overwrites one or more tags for the specified resource. Tags
        are metadata that you can assign to your documents, managed instances,
        maintenance windows, Parameter Store parameters, and patch baselines.
        Tags enable you to categorize your resources in different ways, for
        example, by purpose, owner, or environment. Each tag consists of a key
        and an optional value, both of which you define. For example, you could
        define a set of tags for your account's managed instances that helps you
        track each instance's owner and stack level. For example: Key=Owner and
        Value=DbAdmin, SysAdmin, or Dev. Or Key=Stack and Value=Production,
        Pre-Production, or Test.</p> <p>Each resource can have a maximum of 50
        tags. </p> <p>We recommend that you devise a set of tag keys that meets
        your needs for each resource type. Using a consistent set of tag keys
        makes it easier for you to manage your resources. You can search and
        filter the resources based on the tags you add. Tags don't have any
        semantic meaning to Amazon EC2 and are interpreted strictly as a string
        of characters. </p> <p>For more information about tags, see <a
        href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.ht\
        ml\">Tagging Your Amazon EC2 Resources</a> in the <i>Amazon EC2 User
        Guide</i>.</p>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddTagsToResourceResult"
        "480":
          description: InvalidResourceType
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceType"
        "481":
          description: InvalidResourceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceId"
        "482":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "483":
          description: TooManyTagsError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTagsError"
        "484":
          description: TooManyUpdates
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyUpdates"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.AddTagsToResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddTagsToResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.CancelCommand:
    post:
      operationId: CancelCommand
      description: Attempts to cancel the command specified by the Command ID. There is no
        guarantee that the command will be terminated and the underlying process
        stopped.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelCommandResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidCommandId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommandId"
        "482":
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceId"
        "483":
          description: DuplicateInstanceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateInstanceId"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.CancelCommand
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelCommandRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.CancelMaintenanceWindowExecution:
    post:
      operationId: CancelMaintenanceWindowExecution
      description: Stops a maintenance window execution that is already in progress and
        cancels any tasks in the window that have not already starting running.
        (Tasks already in progress will continue to completion.)
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelMaintenanceWindowExecutionResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.CancelMaintenanceWindowExecution
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelMaintenanceWindowExecutionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.CreateActivation:
    post:
      operationId: CreateActivation
      description: Registers your on-premises server or virtual machine with Amazon EC2 so
        that you can manage these resources using Run Command. An on-premises
        server or virtual machine that has been registered with EC2 is called a
        managed instance. For more information about activations, see <a
        href="http://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-managedinstances.html">Setting
        Up AWS Systems Manager for Hybrid Environments</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateActivationResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.CreateActivation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateActivationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.CreateAssociation:
    post:
      operationId: CreateAssociation
      description: <p>Associates the specified Systems Manager document with the specified
        instances or targets.</p> <p>When you associate a document with one or
        more instances using instance IDs or tags, SSM Agent running on the
        instance processes the document and configures the instance as
        specified.</p> <p>If you associate a document with an instance that
        already has an associated document, the system returns the
        AssociationAlreadyExists exception.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAssociationResult"
        "480":
          description: AssociationAlreadyExists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociationAlreadyExists"
        "481":
          description: AssociationLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociationLimitExceeded"
        "482":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "483":
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocument"
        "484":
          description: InvalidDocumentVersion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocumentVersion"
        "485":
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceId"
        "486":
          description: UnsupportedPlatformType
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedPlatformType"
        "487":
          description: InvalidOutputLocation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOutputLocation"
        "488":
          description: InvalidParameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameters"
        "489":
          description: InvalidTarget
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTarget"
        "490":
          description: InvalidSchedule
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidSchedule"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.CreateAssociation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAssociationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.CreateAssociationBatch:
    post:
      operationId: CreateAssociationBatch
      description: <p>Associates the specified Systems Manager document with the specified
        instances or targets.</p> <p>When you associate a document with one or
        more instances using instance IDs or tags, SSM Agent running on the
        instance processes the document and configures the instance as
        specified.</p> <p>If you associate a document with an instance that
        already has an associated document, the system returns the
        AssociationAlreadyExists exception.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAssociationBatchResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocument"
        "482":
          description: InvalidDocumentVersion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocumentVersion"
        "483":
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceId"
        "484":
          description: InvalidParameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameters"
        "485":
          description: DuplicateInstanceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateInstanceId"
        "486":
          description: AssociationLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociationLimitExceeded"
        "487":
          description: UnsupportedPlatformType
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedPlatformType"
        "488":
          description: InvalidOutputLocation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOutputLocation"
        "489":
          description: InvalidTarget
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTarget"
        "490":
          description: InvalidSchedule
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidSchedule"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.CreateAssociationBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAssociationBatchRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.CreateDocument:
    post:
      operationId: CreateDocument
      description: <p>Creates a Systems Manager document.</p> <p>After you create a
        document, you can use CreateAssociation to associate it with one or more
        running instances.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDocumentResult"
        "480":
          description: DocumentAlreadyExists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentAlreadyExists"
        "481":
          description: MaxDocumentSizeExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaxDocumentSizeExceeded"
        "482":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "483":
          description: InvalidDocumentContent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocumentContent"
        "484":
          description: DocumentLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentLimitExceeded"
        "485":
          description: InvalidDocumentSchemaVersion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocumentSchemaVersion"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.CreateDocument
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDocumentRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.CreateMaintenanceWindow:
    post:
      operationId: CreateMaintenanceWindow
      description: <p>Creates a new maintenance window.</p> <note> <p>The value you specify
        for <code>Duration</code> determines the specific end time for the
        maintenance window based on the time it begins. No maintenance window
        tasks are permitted to start after the resulting endtime minus the
        number of hours you specify for <code>Cutoff</code>. For example, if the
        maintenance window starts at 3 PM, the duration is three hours, and the
        value you specify for <code>Cutoff</code> is one hour, no maintenance
        window tasks can start after 5 PM.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateMaintenanceWindowResult"
        "480":
          description: IdempotentParameterMismatch
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdempotentParameterMismatch"
        "481":
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceededException"
        "482":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.CreateMaintenanceWindow
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMaintenanceWindowRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.CreateOpsItem:
    post:
      operationId: CreateOpsItem
      description: <p>Creates a new OpsItem. You must have permission in AWS Identity and
        Access Management (IAM) to create a new OpsItem. For more information,
        see <a
        href="http://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html">Getting
        Started with OpsCenter</a> in the <i>AWS Systems Manager User
        Guide</i>.</p> <p>Operations engineers and IT professionals use
        OpsCenter to view, investigate, and remediate operational issues
        impacting the performance and health of their AWS resources. For more
        information, see <a
        href="http://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html">AWS
        Systems Manager OpsCenter</a> in the <i>AWS Systems Manager User
        Guide</i>. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateOpsItemResponse"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: OpsItemAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpsItemAlreadyExistsException"
        "482":
          description: OpsItemLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpsItemLimitExceededException"
        "483":
          description: OpsItemInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpsItemInvalidParameterException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.CreateOpsItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOpsItemRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.CreatePatchBaseline:
    post:
      operationId: CreatePatchBaseline
      description: <p>Creates a patch baseline.</p> <note> <p>For information about valid
        key and value pairs in <code>PatchFilters</code> for each supported
        operating system type, see <a
        href="http://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html">PatchFilter</a>.</p>
        </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePatchBaselineResult"
        "480":
          description: IdempotentParameterMismatch
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdempotentParameterMismatch"
        "481":
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceededException"
        "482":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.CreatePatchBaseline
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePatchBaselineRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.CreateResourceDataSync:
    post:
      operationId: CreateResourceDataSync
      description: <p>Creates a resource data sync configuration to a single bucket in
        Amazon S3. This is an asynchronous operation that returns immediately.
        After a successful initial sync is completed, the system continuously
        syncs data to the Amazon S3 bucket. To check the status of the sync, use
        the <a>ListResourceDataSync</a>.</p> <p>By default, data is not
        encrypted in Amazon S3. We strongly recommend that you enable encryption
        in Amazon S3 to ensure secure data storage. We also recommend that you
        secure access to the Amazon S3 bucket by creating a restrictive bucket
        policy. For more information, see <a
        href="http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-inventory-datasync.html">Configuring
        Resource Data Sync for Inventory</a> in the <i>AWS Systems Manager User
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateResourceDataSyncResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: ResourceDataSyncCountExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceDataSyncCountExceededException"
        "482":
          description: ResourceDataSyncAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceDataSyncAlreadyExistsException"
        "483":
          description: ResourceDataSyncInvalidConfigurationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceDataSyncInvalidConfigurationExc\
                  eption"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.CreateResourceDataSync
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateResourceDataSyncRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DeleteActivation:
    post:
      operationId: DeleteActivation
      description: Deletes an activation. You are not required to delete an activation. If
        you delete an activation, you can no longer use it to register
        additional managed instances. Deleting an activation does not
        de-register managed instances. You must manually de-register managed
        instances.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteActivationResult"
        "480":
          description: InvalidActivationId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidActivationId"
        "481":
          description: InvalidActivation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidActivation"
        "482":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "483":
          description: TooManyUpdates
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyUpdates"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DeleteActivation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteActivationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DeleteAssociation:
    post:
      operationId: DeleteAssociation
      description: <p>Disassociates the specified Systems Manager document from the
        specified instance.</p> <p>When you disassociate a document from an
        instance, it does not change the configuration of the instance. To
        change the configuration state of an instance after you disassociate a
        document, you must create a new document with the desired configuration
        and associate it with the instance.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteAssociationResult"
        "480":
          description: AssociationDoesNotExist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociationDoesNotExist"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "482":
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocument"
        "483":
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceId"
        "484":
          description: TooManyUpdates
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyUpdates"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DeleteAssociation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteAssociationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DeleteDocument:
    post:
      operationId: DeleteDocument
      description: <p>Deletes the Systems Manager document and all instance associations to
        the document.</p> <p>Before you delete the document, we recommend that
        you use <a>DeleteAssociation</a> to disassociate all instances that are
        associated with the document.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDocumentResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocument"
        "482":
          description: InvalidDocumentOperation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocumentOperation"
        "483":
          description: AssociatedInstances
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociatedInstances"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DeleteDocument
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDocumentRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DeleteInventory:
    post:
      operationId: DeleteInventory
      description: Delete a custom inventory type, or the data associated with a custom
        Inventory type. Deleting a custom inventory type is also referred to as
        deleting a custom inventory schema.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteInventoryResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidTypeNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTypeNameException"
        "482":
          description: InvalidOptionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOptionException"
        "483":
          description: InvalidDeleteInventoryParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeleteInventoryParametersExcepti\
                  on"
        "484":
          description: InvalidInventoryRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInventoryRequestException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DeleteInventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteInventoryRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DeleteMaintenanceWindow:
    post:
      operationId: DeleteMaintenanceWindow
      description: Deletes a maintenance window.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteMaintenanceWindowResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DeleteMaintenanceWindow
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteMaintenanceWindowRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DeleteParameter:
    post:
      operationId: DeleteParameter
      description: Delete a parameter from the system.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteParameterResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: ParameterNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParameterNotFound"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DeleteParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteParameterRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DeleteParameters:
    post:
      operationId: DeleteParameters
      description: Delete a list of parameters.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteParametersResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DeleteParameters
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteParametersRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DeletePatchBaseline:
    post:
      operationId: DeletePatchBaseline
      description: Deletes a patch baseline.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeletePatchBaselineResult"
        "480":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DeletePatchBaseline
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeletePatchBaselineRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DeleteResourceDataSync:
    post:
      operationId: DeleteResourceDataSync
      description: Deletes a Resource Data Sync configuration. After the configuration is
        deleted, changes to inventory data on managed instances are no longer
        synced with the target Amazon S3 bucket. Deleting a sync configuration
        does not delete data in the target Amazon S3 bucket.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResourceDataSyncResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: ResourceDataSyncNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceDataSyncNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DeleteResourceDataSync
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteResourceDataSyncRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DeregisterManagedInstance:
    post:
      operationId: DeregisterManagedInstance
      description: Removes the server or virtual machine from the list of registered
        servers. You can reregister the instance again at any time. If you don't
        plan to use Run Command on the server, we suggest uninstalling SSM Agent
        first.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeregisterManagedInstanceResult"
        "480":
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceId"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DeregisterManagedInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeregisterManagedInstanceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DeregisterPatchBaselineForPatchGroup:
    post:
      operationId: DeregisterPatchBaselineForPatchGroup
      description: Removes a patch group from a patch baseline.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeregisterPatchBaselineForPatchGroupRes\
                  ult"
        "480":
          description: InvalidResourceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceId"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DeregisterPatchBaselineForPatchGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeregisterPatchBaselineForPatchGroupReque\
                st"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DeregisterTargetFromMaintenanceWindow:
    post:
      operationId: DeregisterTargetFromMaintenanceWindow
      description: Removes a target from a maintenance window.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeregisterTargetFromMaintenanceWindowRe\
                  sult"
        "480":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "482":
          description: TargetInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TargetInUseException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DeregisterTargetFromMaintenanceWindow
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeregisterTargetFromMaintenanceWindowRequ\
                est"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DeregisterTaskFromMaintenanceWindow:
    post:
      operationId: DeregisterTaskFromMaintenanceWindow
      description: Removes a task from a maintenance window.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeregisterTaskFromMaintenanceWindowResu\
                  lt"
        "480":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DeregisterTaskFromMaintenanceWindow
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeregisterTaskFromMaintenanceWindowRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeActivations:
    post:
      operationId: DescribeActivations
      description: Describes details about the activation, such as the date and time the
        activation was created, its expiration date, the IAM role assigned to
        the instances in the activation, and the number of instances registered
        by using this activation.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeActivationsResult"
        "480":
          description: InvalidFilter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilter"
        "481":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "482":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeActivations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeActivationsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeAssociation:
    post:
      operationId: DescribeAssociation
      description: "Describes the association for the specified target or instance. If you
        created the association by using the <code>Targets</code> parameter,
        then you must retrieve the association by using the association ID. If
        you created the association by specifying an instance ID and a Systems
        Manager document, then you retrieve the association by specifying the
        document name and the instance ID. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAssociationResult"
        "480":
          description: AssociationDoesNotExist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociationDoesNotExist"
        "481":
          description: InvalidAssociationVersion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAssociationVersion"
        "482":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "483":
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocument"
        "484":
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceId"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeAssociation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeAssociationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeAssociationExecutionTargets:
    post:
      operationId: DescribeAssociationExecutionTargets
      description: Use this API action to view information about a specific execution of a
        specific association.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAssociationExecutionTargetsResu\
                  lt"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: AssociationDoesNotExist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociationDoesNotExist"
        "482":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "483":
          description: AssociationExecutionDoesNotExist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociationExecutionDoesNotExist"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeAssociationExecutionTargets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeAssociationExecutionTargetsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeAssociationExecutions:
    post:
      operationId: DescribeAssociationExecutions
      description: "Use this API action to view all executions for a specific association
        ID. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAssociationExecutionsResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: AssociationDoesNotExist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociationDoesNotExist"
        "482":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeAssociationExecutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeAssociationExecutionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeAutomationExecutions:
    post:
      operationId: DescribeAutomationExecutions
      description: Provides details about all active and terminated Automation executions.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAutomationExecutionsResult"
        "480":
          description: InvalidFilterKey
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilterKey"
        "481":
          description: InvalidFilterValue
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilterValue"
        "482":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "483":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeAutomationExecutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeAutomationExecutionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeAutomationStepExecutions:
    post:
      operationId: DescribeAutomationStepExecutions
      description: Information about all active and terminated step executions in an
        Automation workflow.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAutomationStepExecutionsResult"
        "480":
          description: AutomationExecutionNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationExecutionNotFoundException"
        "481":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "482":
          description: InvalidFilterKey
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilterKey"
        "483":
          description: InvalidFilterValue
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilterValue"
        "484":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeAutomationStepExecutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeAutomationStepExecutionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeAvailablePatches:
    post:
      operationId: DescribeAvailablePatches
      description: Lists all patches eligible to be included in a patch baseline.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAvailablePatchesResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeAvailablePatches
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeAvailablePatchesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeDocument:
    post:
      operationId: DescribeDocument
      description: Describes the specified Systems Manager document.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDocumentResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocument"
        "482":
          description: InvalidDocumentVersion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocumentVersion"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeDocument
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeDocumentRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeDocumentPermission:
    post:
      operationId: DescribeDocumentPermission
      description: "Describes the permissions for a Systems Manager document. If you
        created the document, you are the owner. If a document is shared, it can
        either be shared privately (by specifying a user's AWS account ID) or
        publicly (<i>All</i>). "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDocumentPermissionResponse"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocument"
        "482":
          description: InvalidPermissionType
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPermissionType"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeDocumentPermission
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeDocumentPermissionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeEffectiveInstanceAssociations:
    post:
      operationId: DescribeEffectiveInstanceAssociations
      description: All associations for the instance(s).
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeEffectiveInstanceAssociationsRe\
                  sult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceId"
        "482":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeEffectiveInstanceAssociations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeEffectiveInstanceAssociationsRequ\
                est"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeEffectivePatchesForPatchBaseline:
    post:
      operationId: DescribeEffectivePatchesForPatchBaseline
      description: Retrieves the current effective patches (the patch and the approval
        state) for the specified patch baseline. Note that this API applies only
        to Windows patch baselines.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeEffectivePatchesForPatchBaselin\
                  eResult"
        "480":
          description: InvalidResourceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceId"
        "481":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
        "482":
          description: UnsupportedOperatingSystem
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperatingSystem"
        "483":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeEffectivePatchesForPatchBaseline
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeEffectivePatchesForPatchBaselineR\
                equest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeInstanceAssociationsStatus:
    post:
      operationId: DescribeInstanceAssociationsStatus
      description: The status of the associations for the instance(s).
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeInstanceAssociationsStatusResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceId"
        "482":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeInstanceAssociationsStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeInstanceAssociationsStatusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeInstanceInformation:
    post:
      operationId: DescribeInstanceInformation
      description: <p>Describes one or more of your instances. You can use this to get
        information about instances like the operating system platform, the SSM
        Agent version (Linux), status etc. If you specify one or more instance
        IDs, it returns information for those instances. If you do not specify
        instance IDs, it returns information for all your instances. If you
        specify an instance ID that is not valid or an instance that you do not
        own, you receive an error. </p> <note> <p>The IamRole field for this API
        action is the Amazon Identity and Access Management (IAM) role assigned
        to on-premises instances. This call does not return the IAM role for
        Amazon EC2 instances.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeInstanceInformationResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceId"
        "482":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "483":
          description: InvalidInstanceInformationFilterValue
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceInformationFilterValue"
        "484":
          description: InvalidFilterKey
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilterKey"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeInstanceInformation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeInstanceInformationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeInstancePatchStates:
    post:
      operationId: DescribeInstancePatchStates
      description: Retrieves the high-level patch state of one or more instances.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeInstancePatchStatesResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeInstancePatchStates
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeInstancePatchStatesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeInstancePatchStatesForPatchGroup:
    post:
      operationId: DescribeInstancePatchStatesForPatchGroup
      description: Retrieves the high-level patch state for the instances in the specified
        patch group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeInstancePatchStatesForPatchGrou\
                  pResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidFilter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilter"
        "482":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeInstancePatchStatesForPatchGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeInstancePatchStatesForPatchGroupR\
                equest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeInstancePatches:
    post:
      operationId: DescribeInstancePatches
      description: Retrieves information about the patches on the specified instance and
        their state relative to the patch baseline being used for the instance.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeInstancePatchesResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceId"
        "482":
          description: InvalidFilter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilter"
        "483":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeInstancePatches
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeInstancePatchesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeInventoryDeletions:
    post:
      operationId: DescribeInventoryDeletions
      description: Describes a specific delete inventory operation.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeInventoryDeletionsResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidDeletionIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeletionIdException"
        "482":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeInventoryDeletions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeInventoryDeletionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowExecutionTaskInvocations:
    post:
      operationId: DescribeMaintenanceWindowExecutionTaskInvocations
      description: Retrieves the individual task executions (one per target) for a
        particular task run as part of a maintenance window execution.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeMaintenanceWindowExecutionTaskI\
                  nvocationsResult"
        "480":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeMaintenanceWindowExecutionTaskInvocations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeMaintenanceWindowExecutionTaskInv\
                ocationsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowExecutionTasks:
    post:
      operationId: DescribeMaintenanceWindowExecutionTasks
      description: For a given maintenance window execution, lists the tasks that were run.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeMaintenanceWindowExecutionTasks\
                  Result"
        "480":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeMaintenanceWindowExecutionTasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeMaintenanceWindowExecutionTasksRe\
                quest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowExecutions:
    post:
      operationId: DescribeMaintenanceWindowExecutions
      description: Lists the executions of a maintenance window. This includes information
        about when the maintenance window was scheduled to be active, and
        information about tasks registered and run with the maintenance window.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeMaintenanceWindowExecutionsResu\
                  lt"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeMaintenanceWindowExecutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeMaintenanceWindowExecutionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowSchedule:
    post:
      operationId: DescribeMaintenanceWindowSchedule
      description: Retrieves information about upcoming executions of a maintenance window.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeMaintenanceWindowScheduleResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeMaintenanceWindowSchedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeMaintenanceWindowScheduleRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowTargets:
    post:
      operationId: DescribeMaintenanceWindowTargets
      description: Lists the targets registered with the maintenance window.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeMaintenanceWindowTargetsResult"
        "480":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeMaintenanceWindowTargets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeMaintenanceWindowTargetsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowTasks:
    post:
      operationId: DescribeMaintenanceWindowTasks
      description: Lists the tasks in a maintenance window.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeMaintenanceWindowTasksResult"
        "480":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeMaintenanceWindowTasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeMaintenanceWindowTasksRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindows:
    post:
      operationId: DescribeMaintenanceWindows
      description: Retrieves the maintenance windows in an AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeMaintenanceWindowsResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeMaintenanceWindows
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeMaintenanceWindowsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeMaintenanceWindowsForTarget:
    post:
      operationId: DescribeMaintenanceWindowsForTarget
      description: Retrieves information about the maintenance window targets or tasks that
        an instance is associated with.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeMaintenanceWindowsForTargetResu\
                  lt"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeMaintenanceWindowsForTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeMaintenanceWindowsForTargetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeOpsItems:
    post:
      operationId: DescribeOpsItems
      description: <p>Query a set of OpsItems. You must have permission in AWS Identity and
        Access Management (IAM) to query a list of OpsItems. For more
        information, see <a
        href="http://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html">Getting
        Started with OpsCenter</a> in the <i>AWS Systems Manager User
        Guide</i>.</p> <p>Operations engineers and IT professionals use
        OpsCenter to view, investigate, and remediate operational issues
        impacting the performance and health of their AWS resources. For more
        information, see <a
        href="http://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html">AWS
        Systems Manager OpsCenter</a> in the <i>AWS Systems Manager User
        Guide</i>. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeOpsItemsResponse"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeOpsItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeOpsItemsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeParameters:
    post:
      operationId: DescribeParameters
      description: <p>Get information about a parameter.</p> <p>Request results are
        returned on a best-effort basis. If you specify <code>MaxResults</code>
        in the request, the response includes information up to the limit
        specified. The number of items returned, however, can be between zero
        and the value of <code>MaxResults</code>. If the service reaches an
        internal limit while processing the results, it stops the operation and
        returns the matching values up to that point and a
        <code>NextToken</code>. You can specify the <code>NextToken</code> in a
        subsequent call to get the next set of results.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeParametersResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidFilterKey
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilterKey"
        "482":
          description: InvalidFilterOption
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilterOption"
        "483":
          description: InvalidFilterValue
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilterValue"
        "484":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeParameters
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeParametersRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribePatchBaselines:
    post:
      operationId: DescribePatchBaselines
      description: Lists the patch baselines in your AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePatchBaselinesResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribePatchBaselines
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribePatchBaselinesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribePatchGroupState:
    post:
      operationId: DescribePatchGroupState
      description: Returns high-level aggregated patch compliance state for a patch group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePatchGroupStateResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribePatchGroupState
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribePatchGroupStateRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribePatchGroups:
    post:
      operationId: DescribePatchGroups
      description: Lists all patch groups that have been registered with patch baselines.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePatchGroupsResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribePatchGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribePatchGroupsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribePatchProperties:
    post:
      operationId: DescribePatchProperties
      description: "<p>Lists the properties of available patches organized by product,
        product family, classification, severity, and other properties of
        available patches. You can use the reported properties in the filters
        you specify in requests for actions such as <a>CreatePatchBaseline</a>,
        <a>UpdatePatchBaseline</a>, <a>DescribeAvailablePatches</a>, and
        <a>DescribePatchBaselines</a>.</p> <p>The following section lists the
        properties that can be used in filters for each major operating system
        type:</p> <dl> <dt>WINDOWS</dt> <dd> <p>Valid properties: PRODUCT,
        PRODUCT_FAMILY, CLASSIFICATION, MSRC_SEVERITY</p> </dd>
        <dt>AMAZON_LINUX</dt> <dd> <p>Valid properties: PRODUCT, CLASSIFICATION,
        SEVERITY</p> </dd> <dt>AMAZON_LINUX_2</dt> <dd> <p>Valid properties:
        PRODUCT, CLASSIFICATION, SEVERITY</p> </dd> <dt>UBUNTU </dt> <dd>
        <p>Valid properties: PRODUCT, PRIORITY</p> </dd>
        <dt>REDHAT_ENTERPRISE_LINUX</dt> <dd> <p>Valid properties: PRODUCT,
        CLASSIFICATION, SEVERITY</p> </dd> <dt>SUSE</dt> <dd> <p>Valid
        properties: PRODUCT, CLASSIFICATION, SEVERITY</p> </dd> <dt>CENTOS</dt>
        <dd> <p>Valid properties: PRODUCT, CLASSIFICATION, SEVERITY</p> </dd>
        </dl>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePatchPropertiesResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribePatchProperties
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribePatchPropertiesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.DescribeSessions:
    post:
      operationId: DescribeSessions
      description: Retrieves a list of all active sessions (both connected and
        disconnected) or terminated sessions from the past 30 days.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeSessionsResponse"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidFilterKey
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilterKey"
        "482":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.DescribeSessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeSessionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.GetAutomationExecution:
    post:
      operationId: GetAutomationExecution
      description: Get detailed information about a particular Automation execution.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAutomationExecutionResult"
        "480":
          description: AutomationExecutionNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationExecutionNotFoundException"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.GetAutomationExecution
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetAutomationExecutionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.GetCommandInvocation:
    post:
      operationId: GetCommandInvocation
      description: "Returns detailed information about command execution for an invocation
        or plugin. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCommandInvocationResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidCommandId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommandId"
        "482":
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceId"
        "483":
          description: InvalidPluginName
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPluginName"
        "484":
          description: InvocationDoesNotExist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvocationDoesNotExist"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.GetCommandInvocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetCommandInvocationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.GetConnectionStatus:
    post:
      operationId: GetConnectionStatus
      description: Retrieves the Session Manager connection status for an instance to
        determine whether it is connected and ready to receive Session Manager
        connections.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetConnectionStatusResponse"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.GetConnectionStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetConnectionStatusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.GetDefaultPatchBaseline:
    post:
      operationId: GetDefaultPatchBaseline
      description: <p>Retrieves the default patch baseline. Note that Systems Manager
        supports creating multiple default patch baselines. For example, you can
        create a default patch baseline for each operating system.</p> <p>If you
        do not specify an operating system value, the default patch baseline for
        Windows is returned.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDefaultPatchBaselineResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.GetDefaultPatchBaseline
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDefaultPatchBaselineRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.GetDeployablePatchSnapshotForInstance:
    post:
      operationId: GetDeployablePatchSnapshotForInstance
      description: "Retrieves the current snapshot for the patch baseline the instance
        uses. This API is primarily used by the AWS-RunPatchBaseline Systems
        Manager document. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDeployablePatchSnapshotForInstanceRe\
                  sult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: UnsupportedOperatingSystem
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedOperatingSystem"
        "482":
          description: UnsupportedFeatureRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedFeatureRequiredException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.GetDeployablePatchSnapshotForInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDeployablePatchSnapshotForInstanceRequ\
                est"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.GetDocument:
    post:
      operationId: GetDocument
      description: Gets the contents of the specified Systems Manager document.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDocumentResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocument"
        "482":
          description: InvalidDocumentVersion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocumentVersion"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.GetDocument
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDocumentRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.GetInventory:
    post:
      operationId: GetInventory
      description: Query inventory information.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInventoryResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidFilter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilter"
        "482":
          description: InvalidInventoryGroupException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInventoryGroupException"
        "483":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "484":
          description: InvalidTypeNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTypeNameException"
        "485":
          description: InvalidAggregatorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAggregatorException"
        "486":
          description: InvalidResultAttributeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResultAttributeException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.GetInventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetInventoryRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.GetInventorySchema:
    post:
      operationId: GetInventorySchema
      description: "Return a list of inventory type names for the account, or return a list
        of attribute names for a specific Inventory item type. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInventorySchemaResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidTypeNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTypeNameException"
        "482":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.GetInventorySchema
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetInventorySchemaRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.GetMaintenanceWindow:
    post:
      operationId: GetMaintenanceWindow
      description: Retrieves a maintenance window.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMaintenanceWindowResult"
        "480":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.GetMaintenanceWindow
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetMaintenanceWindowRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.GetMaintenanceWindowExecution:
    post:
      operationId: GetMaintenanceWindowExecution
      description: Retrieves details about a specific a maintenance window execution.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMaintenanceWindowExecutionResult"
        "480":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.GetMaintenanceWindowExecution
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetMaintenanceWindowExecutionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.GetMaintenanceWindowExecutionTask:
    post:
      operationId: GetMaintenanceWindowExecutionTask
      description: Retrieves the details about a specific task run as part of a maintenance
        window execution.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMaintenanceWindowExecutionTaskResult"
        "480":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.GetMaintenanceWindowExecutionTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetMaintenanceWindowExecutionTaskRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.GetMaintenanceWindowExecutionTaskInvocation:
    post:
      operationId: GetMaintenanceWindowExecutionTaskInvocation
      description: Retrieves information about a specific task running on a specific target.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMaintenanceWindowExecutionTaskInvoca\
                  tionResult"
        "480":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.GetMaintenanceWindowExecutionTaskInvocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetMaintenanceWindowExecutionTaskInvocati\
                onRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.GetMaintenanceWindowTask:
    post:
      operationId: GetMaintenanceWindowTask
      description: Lists the tasks in a maintenance window.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMaintenanceWindowTaskResult"
        "480":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.GetMaintenanceWindowTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetMaintenanceWindowTaskRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.GetOpsItem:
    post:
      operationId: GetOpsItem
      description: <p>Get information about an OpsItem by using the ID. You must have
        permission in AWS Identity and Access Management (IAM) to view
        information about an OpsItem. For more information, see <a
        href="http://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html">Getting
        Started with OpsCenter</a> in the <i>AWS Systems Manager User
        Guide</i>.</p> <p>Operations engineers and IT professionals use
        OpsCenter to view, investigate, and remediate operational issues
        impacting the performance and health of their AWS resources. For more
        information, see <a
        href="http://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html">AWS
        Systems Manager OpsCenter</a> in the <i>AWS Systems Manager User
        Guide</i>. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOpsItemResponse"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: OpsItemNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpsItemNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.GetOpsItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetOpsItemRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.GetOpsSummary:
    post:
      operationId: GetOpsSummary
      description: View a summary of OpsItems based on specified filters and aggregators.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOpsSummaryResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidFilter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilter"
        "482":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "483":
          description: InvalidTypeNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTypeNameException"
        "484":
          description: InvalidAggregatorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAggregatorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.GetOpsSummary
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetOpsSummaryRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.GetParameter:
    post:
      operationId: GetParameter
      description: Get information about a parameter by using the parameter name. Don't
        confuse this API action with the <a>GetParameters</a> API action.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetParameterResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidKeyId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidKeyId"
        "482":
          description: ParameterNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParameterNotFound"
        "483":
          description: ParameterVersionNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParameterVersionNotFound"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.GetParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetParameterRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.GetParameterHistory:
    post:
      operationId: GetParameterHistory
      description: Query a list of all parameters used by the AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetParameterHistoryResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: ParameterNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParameterNotFound"
        "482":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "483":
          description: InvalidKeyId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidKeyId"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.GetParameterHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetParameterHistoryRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.GetParameters:
    post:
      operationId: GetParameters
      description: Get details of a parameter. Don't confuse this API action with the
        <a>GetParameter</a> API action.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetParametersResult"
        "480":
          description: InvalidKeyId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidKeyId"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.GetParameters
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetParametersRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.GetParametersByPath:
    post:
      operationId: GetParametersByPath
      description: <p>Retrieve parameters in a specific hierarchy. For more information,
        see <a
        href="http://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-working.html">Working
        with Systems Manager Parameters</a> in the <i>AWS Systems Manager User
        Guide</i>. </p> <p>Request results are returned on a best-effort basis.
        If you specify <code>MaxResults</code> in the request, the response
        includes information up to the limit specified. The number of items
        returned, however, can be between zero and the value of
        <code>MaxResults</code>. If the service reaches an internal limit while
        processing the results, it stops the operation and returns the matching
        values up to that point and a <code>NextToken</code>. You can specify
        the <code>NextToken</code> in a subsequent call to get the next set of
        results.</p> <note> <p>This API action doesn't support filtering by
        tags. </p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetParametersByPathResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidFilterKey
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilterKey"
        "482":
          description: InvalidFilterOption
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilterOption"
        "483":
          description: InvalidFilterValue
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilterValue"
        "484":
          description: InvalidKeyId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidKeyId"
        "485":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.GetParametersByPath
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetParametersByPathRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.GetPatchBaseline:
    post:
      operationId: GetPatchBaseline
      description: Retrieves information about a patch baseline.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPatchBaselineResult"
        "480":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
        "481":
          description: InvalidResourceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceId"
        "482":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.GetPatchBaseline
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetPatchBaselineRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.GetPatchBaselineForPatchGroup:
    post:
      operationId: GetPatchBaselineForPatchGroup
      description: Retrieves the patch baseline that should be used for the specified patch
        group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPatchBaselineForPatchGroupResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.GetPatchBaselineForPatchGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetPatchBaselineForPatchGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.GetServiceSetting:
    post:
      operationId: GetServiceSetting
      description: <p> <code>ServiceSetting</code> is an account-level setting for an AWS
        service. This setting defines how a user interacts with or uses a
        service or a feature of a service. For example, if an AWS service
        charges money to the account based on feature or service usage, then the
        AWS service team might create a default setting of "false". This means
        the user can't use this feature unless they change the setting to "true"
        and intentionally opt in for a paid feature.</p> <p>Services map a
        <code>SettingId</code> object to a setting value. AWS services teams
        define the default value for a <code>SettingId</code>. You can't create
        a new <code>SettingId</code>, but you can overwrite the default value if
        you have the <code>ssm:UpdateServiceSetting</code> permission for the
        setting. Use the <a>UpdateServiceSetting</a> API action to change the
        default setting. Or use the <a>ResetServiceSetting</a> to change the
        value back to the original value defined by the AWS service team.</p>
        <p>Query the current service setting for the account. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetServiceSettingResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: ServiceSettingNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceSettingNotFound"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.GetServiceSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetServiceSettingRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.LabelParameterVersion:
    post:
      operationId: LabelParameterVersion
      description: <p>A parameter label is a user-defined alias to help you manage
        different versions of a parameter. When you modify a parameter, Systems
        Manager automatically saves a new version and increments the version
        number by one. A label can help you remember the purpose of a parameter
        when there are multiple versions. </p> <p>Parameter labels have the
        following requirements and restrictions.</p> <ul> <li> <p>A version of a
        parameter can have a maximum of 10 labels.</p> </li> <li> <p>You can't
        attach the same label to different versions of the same parameter. For
        example, if version 1 has the label Production, then you can't attach
        Production to version 2.</p> </li> <li> <p>You can move a label from one
        version of a parameter to another.</p> </li> <li> <p>You can't create a
        label when you create a new parameter. You must attach a label to a
        specific version of a parameter.</p> </li> <li> <p>You can't delete a
        parameter label. If you no longer want to use a parameter label, then
        you must move it to a different version of a parameter.</p> </li> <li>
        <p>A label can have a maximum of 100 characters.</p> </li> <li>
        <p>Labels can contain letters (case sensitive), numbers, periods (.),
        hyphens (-), or underscores (_).</p> </li> <li> <p>Labels can't begin
        with a number, "aws," or "ssm" (not case sensitive). If a label fails to
        meet these requirements, then the label is not associated with a
        parameter and the system displays it in the list of InvalidLabels.</p>
        </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LabelParameterVersionResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: TooManyUpdates
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyUpdates"
        "482":
          description: ParameterNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParameterNotFound"
        "483":
          description: ParameterVersionNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParameterVersionNotFound"
        "484":
          description: ParameterVersionLabelLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParameterVersionLabelLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.LabelParameterVersion
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LabelParameterVersionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.ListAssociationVersions:
    post:
      operationId: ListAssociationVersions
      description: Retrieves all versions of an association for a specific association ID.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAssociationVersionsResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "482":
          description: AssociationDoesNotExist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociationDoesNotExist"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.ListAssociationVersions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListAssociationVersionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.ListAssociations:
    post:
      operationId: ListAssociations
      description: Lists the associations for the specified Systems Manager document or
        instance.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAssociationsResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.ListAssociations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListAssociationsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.ListCommandInvocations:
    post:
      operationId: ListCommandInvocations
      description: An invocation is copy of a command sent to a specific instance. A
        command can apply to one or more instances. A command invocation applies
        to one instance. For example, if a user runs SendCommand against three
        instances, then a command invocation is created for each requested
        instance ID. ListCommandInvocations provide status about command
        execution.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCommandInvocationsResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidCommandId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommandId"
        "482":
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceId"
        "483":
          description: InvalidFilterKey
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilterKey"
        "484":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.ListCommandInvocations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListCommandInvocationsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.ListCommands:
    post:
      operationId: ListCommands
      description: Lists the commands requested by users of the AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCommandsResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidCommandId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCommandId"
        "482":
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceId"
        "483":
          description: InvalidFilterKey
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilterKey"
        "484":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.ListCommands
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListCommandsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.ListComplianceItems:
    post:
      operationId: ListComplianceItems
      description: "For a specified resource ID, this API action returns a list of
        compliance statuses for different resource types. Currently, you can
        only specify one resource ID per call. List results depend on the
        criteria specified in the filter. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListComplianceItemsResult"
        "480":
          description: InvalidResourceType
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceType"
        "481":
          description: InvalidResourceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceId"
        "482":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "483":
          description: InvalidFilter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilter"
        "484":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.ListComplianceItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListComplianceItemsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.ListComplianceSummaries:
    post:
      operationId: ListComplianceSummaries
      description: "Returns a summary count of compliant and non-compliant resources for a
        compliance type. For example, this call can return State Manager
        associations, patches, or custom compliance types according to the
        filter criteria that you specify. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListComplianceSummariesResult"
        "480":
          description: InvalidFilter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilter"
        "481":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "482":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.ListComplianceSummaries
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListComplianceSummariesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.ListDocumentVersions:
    post:
      operationId: ListDocumentVersions
      description: List all versions for a document.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDocumentVersionsResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "482":
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocument"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.ListDocumentVersions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListDocumentVersionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.ListDocuments:
    post:
      operationId: ListDocuments
      description: Describes one or more of your Systems Manager documents.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDocumentsResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "482":
          description: InvalidFilterKey
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilterKey"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.ListDocuments
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListDocumentsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.ListInventoryEntries:
    post:
      operationId: ListInventoryEntries
      description: A list of inventory items returned by the request.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListInventoryEntriesResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceId"
        "482":
          description: InvalidTypeNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTypeNameException"
        "483":
          description: InvalidFilter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilter"
        "484":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.ListInventoryEntries
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListInventoryEntriesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.ListResourceComplianceSummaries:
    post:
      operationId: ListResourceComplianceSummaries
      description: Returns a resource-level summary count. The summary includes information
        about compliant and non-compliant statuses and detailed compliance-item
        severity counts, according to the filter criteria you specify.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListResourceComplianceSummariesResult"
        "480":
          description: InvalidFilter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilter"
        "481":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
        "482":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.ListResourceComplianceSummaries
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListResourceComplianceSummariesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.ListResourceDataSync:
    post:
      operationId: ListResourceDataSync
      description: <p>Lists your resource data sync configurations. Includes information
        about the last time a sync attempted to start, the last sync status, and
        the last time a sync successfully completed.</p> <p>The number of sync
        configurations might be too large to return using a single call to
        <code>ListResourceDataSync</code>. You can limit the number of sync
        configurations returned by using the <code>MaxResults</code> parameter.
        To determine whether there are more sync configurations to list, check
        the value of <code>NextToken</code> in the output. If there are more
        sync configurations to list, you can request them by specifying the
        <code>NextToken</code> returned in the call to the parameter of a
        subsequent call. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListResourceDataSyncResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidNextToken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextToken"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.ListResourceDataSync
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListResourceDataSyncRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: Returns a list of the tags assigned to the specified resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResult"
        "480":
          description: InvalidResourceType
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceType"
        "481":
          description: InvalidResourceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceId"
        "482":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.ListTagsForResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagsForResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.ModifyDocumentPermission:
    post:
      operationId: ModifyDocumentPermission
      description: Shares a Systems Manager document publicly or privately. If you share a
        document privately, you must specify the AWS user account IDs for those
        people who can use the document. If you share a document publicly, you
        must specify <i>All</i> as the account ID.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModifyDocumentPermissionResponse"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocument"
        "482":
          description: InvalidPermissionType
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPermissionType"
        "483":
          description: DocumentPermissionLimit
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentPermissionLimit"
        "484":
          description: DocumentLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.ModifyDocumentPermission
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModifyDocumentPermissionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.PutComplianceItems:
    post:
      operationId: PutComplianceItems
      description: "<p>Registers a compliance type and other compliance details on a
        designated resource. This action lets you register custom compliance
        details with a resource. This call overwrites existing compliance
        information on the resource, so you must provide a full list of
        compliance items each time that you send the request.</p>
        <p>ComplianceType can be one of the following:</p> <ul> <li>
        <p>ExecutionId: The execution ID when the patch, association, or custom
        compliance item was applied.</p> </li> <li> <p>ExecutionType: Specify
        patch, association, or Custom:<code>string</code>.</p> </li> <li>
        <p>ExecutionTime. The time the patch, association, or custom compliance
        item was applied to the instance.</p> </li> <li> <p>Id: The patch,
        association, or custom compliance ID.</p> </li> <li> <p>Title: A
        title.</p> </li> <li> <p>Status: The status of the compliance item. For
        example, <code>approved</code> for patches, or <code>Failed</code> for
        associations.</p> </li> <li> <p>Severity: A patch severity. For example,
        <code>critical</code>.</p> </li> <li> <p>DocumentName: A SSM document
        name. For example, AWS-RunPatchBaseline.</p> </li> <li>
        <p>DocumentVersion: An SSM document version number. For example, 4.</p>
        </li> <li> <p>Classification: A patch classification. For example,
        <code>security updates</code>.</p> </li> <li> <p>PatchBaselineId: A
        patch baseline ID.</p> </li> <li> <p>PatchSeverity: A patch severity.
        For example, <code>Critical</code>.</p> </li> <li> <p>PatchState: A
        patch state. For example, <code>InstancesWithFailedPatches</code>.</p>
        </li> <li> <p>PatchGroup: The name of a patch group.</p> </li> <li>
        <p>InstalledTime: The time the association, patch, or custom compliance
        item was applied to the resource. Specify the time by using the
        following format: yyyy-MM-dd'T'HH:mm:ss'Z'</p> </li> </ul>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutComplianceItemsResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidItemContentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidItemContentException"
        "482":
          description: TotalSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TotalSizeLimitExceededException"
        "483":
          description: ItemSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemSizeLimitExceededException"
        "484":
          description: ComplianceTypeCountLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ComplianceTypeCountLimitExceededExcepti\
                  on"
        "485":
          description: InvalidResourceType
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceType"
        "486":
          description: InvalidResourceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceId"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.PutComplianceItems
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutComplianceItemsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.PutInventory:
    post:
      operationId: PutInventory
      description: Bulk update custom inventory items on one more instance. The request
        adds an inventory item, if it doesn't already exist, or updates an
        inventory item, if it does exist.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutInventoryResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceId"
        "482":
          description: InvalidTypeNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTypeNameException"
        "483":
          description: InvalidItemContentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidItemContentException"
        "484":
          description: TotalSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TotalSizeLimitExceededException"
        "485":
          description: ItemSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemSizeLimitExceededException"
        "486":
          description: ItemContentMismatchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemContentMismatchException"
        "487":
          description: CustomSchemaCountLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomSchemaCountLimitExceededException"
        "488":
          description: UnsupportedInventorySchemaVersionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedInventorySchemaVersionExcept\
                  ion"
        "489":
          description: UnsupportedInventoryItemContextException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedInventoryItemContextException"
        "490":
          description: InvalidInventoryItemContextException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInventoryItemContextException"
        "491":
          description: SubTypeCountLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubTypeCountLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.PutInventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutInventoryRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.PutParameter:
    post:
      operationId: PutParameter
      description: Add a parameter to the system.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutParameterResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidKeyId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidKeyId"
        "482":
          description: ParameterLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParameterLimitExceeded"
        "483":
          description: TooManyUpdates
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyUpdates"
        "484":
          description: ParameterAlreadyExists
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParameterAlreadyExists"
        "485":
          description: HierarchyLevelLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HierarchyLevelLimitExceededException"
        "486":
          description: HierarchyTypeMismatchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HierarchyTypeMismatchException"
        "487":
          description: InvalidAllowedPatternException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAllowedPatternException"
        "488":
          description: ParameterMaxVersionLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParameterMaxVersionLimitExceeded"
        "489":
          description: ParameterPatternMismatchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParameterPatternMismatchException"
        "490":
          description: UnsupportedParameterType
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedParameterType"
        "491":
          description: PoliciesLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PoliciesLimitExceededException"
        "492":
          description: InvalidPolicyTypeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPolicyTypeException"
        "493":
          description: InvalidPolicyAttributeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPolicyAttributeException"
        "494":
          description: IncompatiblePolicyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatiblePolicyException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.PutParameter
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutParameterRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.RegisterDefaultPatchBaseline:
    post:
      operationId: RegisterDefaultPatchBaseline
      description: <p>Defines the default patch baseline for the relevant operating
        system.</p> <p>To reset the AWS predefined patch baseline as the
        default, specify the full patch baseline ARN as the baseline ID value.
        For example, for CentOS, specify
        <code>arn:aws:ssm:us-east-2:733109147000:patchbaseline/pb-0574b43a65ea646ed</code>
        instead of <code>pb-0574b43a65ea646ed</code>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterDefaultPatchBaselineResult"
        "480":
          description: InvalidResourceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceId"
        "481":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
        "482":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.RegisterDefaultPatchBaseline
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterDefaultPatchBaselineRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.RegisterPatchBaselineForPatchGroup:
    post:
      operationId: RegisterPatchBaselineForPatchGroup
      description: Registers a patch baseline for a patch group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterPatchBaselineForPatchGroupResult"
        "480":
          description: AlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlreadyExistsException"
        "481":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
        "482":
          description: InvalidResourceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceId"
        "483":
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceededException"
        "484":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.RegisterPatchBaselineForPatchGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterPatchBaselineForPatchGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.RegisterTargetWithMaintenanceWindow:
    post:
      operationId: RegisterTargetWithMaintenanceWindow
      description: Registers a target with a maintenance window.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterTargetWithMaintenanceWindowResu\
                  lt"
        "480":
          description: IdempotentParameterMismatch
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdempotentParameterMismatch"
        "481":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
        "482":
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceededException"
        "483":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.RegisterTargetWithMaintenanceWindow
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterTargetWithMaintenanceWindowRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.RegisterTaskWithMaintenanceWindow:
    post:
      operationId: RegisterTaskWithMaintenanceWindow
      description: Adds a new task to a maintenance window.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterTaskWithMaintenanceWindowResult"
        "480":
          description: IdempotentParameterMismatch
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdempotentParameterMismatch"
        "481":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
        "482":
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceededException"
        "483":
          description: FeatureNotAvailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeatureNotAvailableException"
        "484":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.RegisterTaskWithMaintenanceWindow
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterTaskWithMaintenanceWindowRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.RemoveTagsFromResource:
    post:
      operationId: RemoveTagsFromResource
      description: Removes tag keys from the specified resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemoveTagsFromResourceResult"
        "480":
          description: InvalidResourceType
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceType"
        "481":
          description: InvalidResourceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceId"
        "482":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "483":
          description: TooManyUpdates
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyUpdates"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.RemoveTagsFromResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoveTagsFromResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.ResetServiceSetting:
    post:
      operationId: ResetServiceSetting
      description: <p> <code>ServiceSetting</code> is an account-level setting for an AWS
        service. This setting defines how a user interacts with or uses a
        service or a feature of a service. For example, if an AWS service
        charges money to the account based on feature or service usage, then the
        AWS service team might create a default setting of "false". This means
        the user can't use this feature unless they change the setting to "true"
        and intentionally opt in for a paid feature.</p> <p>Services map a
        <code>SettingId</code> object to a setting value. AWS services teams
        define the default value for a <code>SettingId</code>. You can't create
        a new <code>SettingId</code>, but you can overwrite the default value if
        you have the <code>ssm:UpdateServiceSetting</code> permission for the
        setting. Use the <a>GetServiceSetting</a> API action to view the current
        value. Use the <a>UpdateServiceSetting</a> API action to change the
        default setting. </p> <p>Reset the service setting for the account to
        the default value as provisioned by the AWS service team. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResetServiceSettingResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: ServiceSettingNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceSettingNotFound"
        "482":
          description: TooManyUpdates
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyUpdates"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.ResetServiceSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetServiceSettingRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.ResumeSession:
    post:
      operationId: ResumeSession
      description: <p>Reconnects a session to an instance after it has been disconnected.
        Connections can be resumed for disconnected sessions, but not terminated
        sessions.</p> <note> <p>This command is primarily for use by client
        machines to automatically reconnect during intermittent network issues.
        It is not intended for any other use.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResumeSessionResponse"
        "480":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.ResumeSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResumeSessionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.SendAutomationSignal:
    post:
      operationId: SendAutomationSignal
      description: "Sends a signal to an Automation execution to change the current
        behavior or status of the execution. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendAutomationSignalResult"
        "480":
          description: AutomationExecutionNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationExecutionNotFoundException"
        "481":
          description: AutomationStepNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationStepNotFoundException"
        "482":
          description: InvalidAutomationSignalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAutomationSignalException"
        "483":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.SendAutomationSignal
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendAutomationSignalRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.SendCommand:
    post:
      operationId: SendCommand
      description: Runs commands on one or more managed instances.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendCommandResult"
        "480":
          description: DuplicateInstanceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateInstanceId"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "482":
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceId"
        "483":
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocument"
        "484":
          description: InvalidDocumentVersion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocumentVersion"
        "485":
          description: InvalidOutputFolder
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOutputFolder"
        "486":
          description: InvalidParameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameters"
        "487":
          description: UnsupportedPlatformType
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedPlatformType"
        "488":
          description: MaxDocumentSizeExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaxDocumentSizeExceeded"
        "489":
          description: InvalidRole
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRole"
        "490":
          description: InvalidNotificationConfig
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNotificationConfig"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.SendCommand
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendCommandRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.StartAssociationsOnce:
    post:
      operationId: StartAssociationsOnce
      description: Use this API action to run an association immediately and only one time.
        This action can be helpful when troubleshooting associations.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartAssociationsOnceResult"
        "480":
          description: InvalidAssociation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAssociation"
        "481":
          description: AssociationDoesNotExist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociationDoesNotExist"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.StartAssociationsOnce
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartAssociationsOnceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.StartAutomationExecution:
    post:
      operationId: StartAutomationExecution
      description: Initiates execution of an Automation document.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartAutomationExecutionResult"
        "480":
          description: AutomationDefinitionNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationDefinitionNotFoundException"
        "481":
          description: InvalidAutomationExecutionParametersException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAutomationExecutionParametersExc\
                  eption"
        "482":
          description: AutomationExecutionLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationExecutionLimitExceededExcepti\
                  on"
        "483":
          description: AutomationDefinitionVersionNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationDefinitionVersionNotFoundExce\
                  ption"
        "484":
          description: IdempotentParameterMismatch
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdempotentParameterMismatch"
        "485":
          description: InvalidTarget
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTarget"
        "486":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.StartAutomationExecution
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartAutomationExecutionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.StartSession:
    post:
      operationId: StartSession
      description: '<p>Initiates a connection to a target (for example, an instance) for a
        Session Manager session. Returns a URL and token that can be used to
        open a WebSocket connection for sending input and receiving outputs.</p>
        <note> <p>AWS CLI usage: <code>start-session</code> is an interactive
        command that requires the Session Manager plugin to be installed on the
        client machine making the call. For information, see <a
        href="http://docs.aws.amazon.com/systems-manager/latest/userguide/session-manager-working-with-install-plugin.html">
        Install the Session Manager Plugin for the AWS CLI</a> in the <i>AWS
        Systems Manager User Guide</i>.</p> <p>AWS Tools for PowerShell usage:
        Start-SSMSession is not currently supported by AWS Tools for PowerShell
        on Windows local machines.</p> </note>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartSessionResponse"
        "480":
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocument"
        "481":
          description: TargetNotConnected
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TargetNotConnected"
        "482":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.StartSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartSessionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.StopAutomationExecution:
    post:
      operationId: StopAutomationExecution
      description: Stop an Automation that is currently running.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopAutomationExecutionResult"
        "480":
          description: AutomationExecutionNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationExecutionNotFoundException"
        "481":
          description: InvalidAutomationStatusUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAutomationStatusUpdateException"
        "482":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.StopAutomationExecution
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopAutomationExecutionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.TerminateSession:
    post:
      operationId: TerminateSession
      description: Permanently ends a session and closes the data connection between the
        Session Manager client and SSM Agent on the instance. A terminated
        session cannot be resumed.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TerminateSessionResponse"
        "480":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.TerminateSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TerminateSessionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.UpdateAssociation:
    post:
      operationId: UpdateAssociation
      description: "<p>Updates an association. You can update the association name and
        version, the document version, schedule, parameters, and Amazon S3
        output. </p> <p>In order to call this API action, your IAM user account,
        group, or role must be configured with permission to call the
        <a>DescribeAssociation</a> API action. If you don't have permission to
        call DescribeAssociation, then you receive the following error: <code>An
        error occurred (AccessDeniedException) when calling the
        UpdateAssociation operation: User: &lt;user_arn&gt; is not authorized to
        perform: ssm:DescribeAssociation on resource:
        &lt;resource_arn&gt;</code> </p> <important> <p>When you update an
        association, the association immediately runs against the specified
        targets.</p> </important>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateAssociationResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidSchedule
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidSchedule"
        "482":
          description: InvalidParameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameters"
        "483":
          description: InvalidOutputLocation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOutputLocation"
        "484":
          description: InvalidDocumentVersion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocumentVersion"
        "485":
          description: AssociationDoesNotExist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociationDoesNotExist"
        "486":
          description: InvalidUpdate
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidUpdate"
        "487":
          description: TooManyUpdates
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyUpdates"
        "488":
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocument"
        "489":
          description: InvalidTarget
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTarget"
        "490":
          description: InvalidAssociationVersion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAssociationVersion"
        "491":
          description: AssociationVersionLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociationVersionLimitExceeded"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.UpdateAssociation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAssociationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.UpdateAssociationStatus:
    post:
      operationId: UpdateAssociationStatus
      description: Updates the status of the Systems Manager document associated with the
        specified instance.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateAssociationStatusResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceId"
        "482":
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocument"
        "483":
          description: AssociationDoesNotExist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociationDoesNotExist"
        "484":
          description: StatusUnchanged
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusUnchanged"
        "485":
          description: TooManyUpdates
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyUpdates"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.UpdateAssociationStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAssociationStatusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.UpdateDocument:
    post:
      operationId: UpdateDocument
      description: Updates one or more values for an SSM document.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDocumentResult"
        "480":
          description: MaxDocumentSizeExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaxDocumentSizeExceeded"
        "481":
          description: DocumentVersionLimitExceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentVersionLimitExceeded"
        "482":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "483":
          description: DuplicateDocumentContent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateDocumentContent"
        "484":
          description: DuplicateDocumentVersionName
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateDocumentVersionName"
        "485":
          description: InvalidDocumentContent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocumentContent"
        "486":
          description: InvalidDocumentVersion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocumentVersion"
        "487":
          description: InvalidDocumentSchemaVersion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocumentSchemaVersion"
        "488":
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocument"
        "489":
          description: InvalidDocumentOperation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocumentOperation"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.UpdateDocument
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDocumentRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.UpdateDocumentDefaultVersion:
    post:
      operationId: UpdateDocumentDefaultVersion
      description: "Set the default version of a document. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDocumentDefaultVersionResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: InvalidDocument
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocument"
        "482":
          description: InvalidDocumentVersion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocumentVersion"
        "483":
          description: InvalidDocumentSchemaVersion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDocumentSchemaVersion"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.UpdateDocumentDefaultVersion
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDocumentDefaultVersionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.UpdateMaintenanceWindow:
    post:
      operationId: UpdateMaintenanceWindow
      description: <p>Updates an existing maintenance window. Only specified parameters are
        modified.</p> <note> <p>The value you specify for <code>Duration</code>
        determines the specific end time for the maintenance window based on the
        time it begins. No maintenance window tasks are permitted to start after
        the resulting endtime minus the number of hours you specify for
        <code>Cutoff</code>. For example, if the maintenance window starts at 3
        PM, the duration is three hours, and the value you specify for
        <code>Cutoff</code> is one hour, no maintenance window tasks can start
        after 5 PM.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateMaintenanceWindowResult"
        "480":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.UpdateMaintenanceWindow
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMaintenanceWindowRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.UpdateMaintenanceWindowTarget:
    post:
      operationId: UpdateMaintenanceWindowTarget
      description: <p>Modifies the target of an existing maintenance window. You can change
        the following:</p> <ul> <li> <p>Name</p> </li> <li> <p>Description</p>
        </li> <li> <p>Owner</p> </li> <li> <p>IDs for an ID target</p> </li>
        <li> <p>Tags for a Tag target</p> </li> <li> <p>From any supported tag
        type to another. The three supported tag types are ID target, Tag
        target, and resource group. For more information, see <a>Target</a>.</p>
        </li> </ul> <note> <p>If a parameter is null, then the corresponding
        field is not modified.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateMaintenanceWindowTargetResult"
        "480":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.UpdateMaintenanceWindowTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMaintenanceWindowTargetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.UpdateMaintenanceWindowTask:
    post:
      operationId: UpdateMaintenanceWindowTask
      description: <p>Modifies a task assigned to a maintenance window. You can't change
        the task type, but you can change the following values:</p> <ul> <li>
        <p>TaskARN. For example, you can change a RUN_COMMAND task from
        AWS-RunPowerShellScript to AWS-RunShellScript.</p> </li> <li>
        <p>ServiceRoleArn</p> </li> <li> <p>TaskInvocationParameters</p> </li>
        <li> <p>Priority</p> </li> <li> <p>MaxConcurrency</p> </li> <li>
        <p>MaxErrors</p> </li> </ul> <p>If a parameter is null, then the
        corresponding field is not modified. Also, if you set Replace to true,
        then all fields required by the <a>RegisterTaskWithMaintenanceWindow</a>
        action are required for this request. Optional fields that aren't
        specified are set to null.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateMaintenanceWindowTaskResult"
        "480":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.UpdateMaintenanceWindowTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateMaintenanceWindowTaskRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.UpdateManagedInstanceRole:
    post:
      operationId: UpdateManagedInstanceRole
      description: Assigns or changes an Amazon Identity and Access Management (IAM) role
        for the managed instance.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateManagedInstanceRoleResult"
        "480":
          description: InvalidInstanceId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceId"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.UpdateManagedInstanceRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateManagedInstanceRoleRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.UpdateOpsItem:
    post:
      operationId: UpdateOpsItem
      description: <p>Edit or change an OpsItem. You must have permission in AWS Identity
        and Access Management (IAM) to update an OpsItem. For more information,
        see <a
        href="http://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter-getting-started.html">Getting
        Started with OpsCenter</a> in the <i>AWS Systems Manager User
        Guide</i>.</p> <p>Operations engineers and IT professionals use
        OpsCenter to view, investigate, and remediate operational issues
        impacting the performance and health of their AWS resources. For more
        information, see <a
        href="http://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html">AWS
        Systems Manager OpsCenter</a> in the <i>AWS Systems Manager User
        Guide</i>. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateOpsItemResponse"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: OpsItemNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpsItemNotFoundException"
        "482":
          description: OpsItemAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpsItemAlreadyExistsException"
        "483":
          description: OpsItemLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpsItemLimitExceededException"
        "484":
          description: OpsItemInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OpsItemInvalidParameterException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.UpdateOpsItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateOpsItemRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.UpdatePatchBaseline:
    post:
      operationId: UpdatePatchBaseline
      description: <p>Modifies an existing patch baseline. Fields not specified in the
        request are left unchanged.</p> <note> <p>For information about valid
        key and value pairs in <code>PatchFilters</code> for each supported
        operating system type, see <a
        href="http://docs.aws.amazon.com/systems-manager/latest/APIReference/API_PatchFilter.html">PatchFilter</a>.</p>
        </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdatePatchBaselineResult"
        "480":
          description: DoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DoesNotExistException"
        "481":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.UpdatePatchBaseline
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePatchBaselineRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AmazonSSM.UpdateServiceSetting:
    post:
      operationId: UpdateServiceSetting
      description: <p> <code>ServiceSetting</code> is an account-level setting for an AWS
        service. This setting defines how a user interacts with or uses a
        service or a feature of a service. For example, if an AWS service
        charges money to the account based on feature or service usage, then the
        AWS service team might create a default setting of "false". This means
        the user can't use this feature unless they change the setting to "true"
        and intentionally opt in for a paid feature.</p> <p>Services map a
        <code>SettingId</code> object to a setting value. AWS services teams
        define the default value for a <code>SettingId</code>. You can't create
        a new <code>SettingId</code>, but you can overwrite the default value if
        you have the <code>ssm:UpdateServiceSetting</code> permission for the
        setting. Use the <a>GetServiceSetting</a> API action to view the current
        value. Or, use the <a>ResetServiceSetting</a> to change the value back
        to the original value defined by the AWS service team.</p> <p>Update the
        service setting for the account. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateServiceSettingResult"
        "480":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
        "481":
          description: ServiceSettingNotFound
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceSettingNotFound"
        "482":
          description: TooManyUpdates
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyUpdates"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AmazonSSM.UpdateServiceSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateServiceSettingRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://ssm.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon SSM multi-region endpoint
  - url: https://ssm.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon SSM multi-region endpoint
  - url: http://ssm.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon SSM endpoint for China (Beijing) and China (Ningxia)
  - url: https://ssm.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon SSM endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AddTagsToResourceResult:
      type: object
      properties: {}
    AddTagsToResourceRequest:
      type: object
      required:
        - ResourceType
        - ResourceId
        - Tags
      properties:
        ResourceType:
          $ref: "#/components/schemas/ResourceTypeForTagging"
        ResourceId:
          $ref: "#/components/schemas/ResourceId"
        Tags:
          $ref: "#/components/schemas/TagList"
    InvalidResourceType: {}
    InvalidResourceId: {}
    InternalServerError: {}
    TooManyTagsError: {}
    TooManyUpdates: {}
    CancelCommandResult:
      type: object
      properties: {}
      description: Whether or not the command was successfully canceled. There is no
        guarantee that a request can be canceled.
    CancelCommandRequest:
      type: object
      required:
        - CommandId
      properties:
        CommandId:
          $ref: "#/components/schemas/CommandId"
        InstanceIds:
          $ref: "#/components/schemas/InstanceIdList"
      description: <p/>
    InvalidCommandId: {}
    InvalidInstanceId: {}
    DuplicateInstanceId: {}
    CancelMaintenanceWindowExecutionResult:
      type: object
      properties:
        WindowExecutionId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionId"
    CancelMaintenanceWindowExecutionRequest:
      type: object
      required:
        - WindowExecutionId
      properties:
        WindowExecutionId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionId"
    DoesNotExistException: {}
    CreateActivationResult:
      type: object
      properties:
        ActivationId:
          $ref: "#/components/schemas/ActivationId"
        ActivationCode:
          $ref: "#/components/schemas/ActivationCode"
    CreateActivationRequest:
      type: object
      required:
        - IamRole
      properties:
        Description:
          $ref: "#/components/schemas/ActivationDescription"
        DefaultInstanceName:
          $ref: "#/components/schemas/DefaultInstanceName"
        IamRole:
          $ref: "#/components/schemas/IamRole"
        RegistrationLimit:
          $ref: "#/components/schemas/RegistrationLimit"
        ExpirationDate:
          $ref: "#/components/schemas/ExpirationDate"
        Tags:
          $ref: "#/components/schemas/TagList"
    CreateAssociationResult:
      type: object
      properties:
        AssociationDescription:
          $ref: "#/components/schemas/AssociationDescription"
    CreateAssociationRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/DocumentARN"
        DocumentVersion:
          $ref: "#/components/schemas/DocumentVersion"
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        Parameters:
          $ref: "#/components/schemas/Parameters"
        Targets:
          $ref: "#/components/schemas/Targets"
        ScheduleExpression:
          $ref: "#/components/schemas/ScheduleExpression"
        OutputLocation:
          $ref: "#/components/schemas/InstanceAssociationOutputLocation"
        AssociationName:
          $ref: "#/components/schemas/AssociationName"
        AutomationTargetParameterName:
          $ref: "#/components/schemas/AutomationTargetParameterName"
        MaxErrors:
          $ref: "#/components/schemas/MaxErrors"
        MaxConcurrency:
          $ref: "#/components/schemas/MaxConcurrency"
        ComplianceSeverity:
          $ref: "#/components/schemas/AssociationComplianceSeverity"
    AssociationAlreadyExists: {}
    AssociationLimitExceeded: {}
    InvalidDocument: {}
    InvalidDocumentVersion: {}
    UnsupportedPlatformType: {}
    InvalidOutputLocation: {}
    InvalidParameters: {}
    InvalidTarget: {}
    InvalidSchedule: {}
    CreateAssociationBatchResult:
      type: object
      properties:
        Successful:
          $ref: "#/components/schemas/AssociationDescriptionList"
        Failed:
          $ref: "#/components/schemas/FailedCreateAssociationList"
    CreateAssociationBatchRequest:
      type: object
      required:
        - Entries
      properties:
        Entries:
          $ref: "#/components/schemas/CreateAssociationBatchRequestEntries"
    CreateDocumentResult:
      type: object
      properties:
        DocumentDescription:
          $ref: "#/components/schemas/DocumentDescription"
    CreateDocumentRequest:
      type: object
      required:
        - Content
        - Name
      properties:
        Content:
          $ref: "#/components/schemas/DocumentContent"
        Attachments:
          $ref: "#/components/schemas/AttachmentsSourceList"
        Name:
          $ref: "#/components/schemas/DocumentName"
        VersionName:
          $ref: "#/components/schemas/DocumentVersionName"
        DocumentType:
          $ref: "#/components/schemas/DocumentType"
        DocumentFormat:
          $ref: "#/components/schemas/DocumentFormat"
        TargetType:
          $ref: "#/components/schemas/TargetType"
        Tags:
          $ref: "#/components/schemas/TagList"
    DocumentAlreadyExists: {}
    MaxDocumentSizeExceeded: {}
    InvalidDocumentContent: {}
    DocumentLimitExceeded: {}
    InvalidDocumentSchemaVersion: {}
    CreateMaintenanceWindowResult:
      type: object
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
    CreateMaintenanceWindowRequest:
      type: object
      required:
        - Name
        - Schedule
        - Duration
        - Cutoff
        - AllowUnassociatedTargets
      properties:
        Name:
          $ref: "#/components/schemas/MaintenanceWindowName"
        Description:
          $ref: "#/components/schemas/MaintenanceWindowDescription"
        StartDate:
          $ref: "#/components/schemas/MaintenanceWindowStringDateTime"
        EndDate:
          $ref: "#/components/schemas/MaintenanceWindowStringDateTime"
        Schedule:
          $ref: "#/components/schemas/MaintenanceWindowSchedule"
        ScheduleTimezone:
          $ref: "#/components/schemas/MaintenanceWindowTimezone"
        Duration:
          $ref: "#/components/schemas/MaintenanceWindowDurationHours"
        Cutoff:
          $ref: "#/components/schemas/MaintenanceWindowCutoff"
        AllowUnassociatedTargets:
          $ref: "#/components/schemas/MaintenanceWindowAllowUnassociatedTargets"
        ClientToken:
          $ref: "#/components/schemas/ClientToken"
        Tags:
          $ref: "#/components/schemas/TagList"
    IdempotentParameterMismatch: {}
    ResourceLimitExceededException: {}
    CreateOpsItemResponse:
      type: object
      properties:
        OpsItemId:
          $ref: "#/components/schemas/String"
    CreateOpsItemRequest:
      type: object
      required:
        - Description
        - Source
        - Title
      properties:
        Description:
          $ref: "#/components/schemas/OpsItemDescription"
        OperationalData:
          $ref: "#/components/schemas/OpsItemOperationalData"
        Notifications:
          $ref: "#/components/schemas/OpsItemNotifications"
        Priority:
          $ref: "#/components/schemas/OpsItemPriority"
        RelatedOpsItems:
          $ref: "#/components/schemas/RelatedOpsItems"
        Source:
          $ref: "#/components/schemas/OpsItemSource"
        Title:
          $ref: "#/components/schemas/OpsItemTitle"
        Tags:
          $ref: "#/components/schemas/TagList"
    OpsItemAlreadyExistsException: {}
    OpsItemLimitExceededException: {}
    OpsItemInvalidParameterException: {}
    CreatePatchBaselineResult:
      type: object
      properties:
        BaselineId:
          $ref: "#/components/schemas/BaselineId"
    CreatePatchBaselineRequest:
      type: object
      required:
        - Name
      properties:
        OperatingSystem:
          $ref: "#/components/schemas/OperatingSystem"
        Name:
          $ref: "#/components/schemas/BaselineName"
        GlobalFilters:
          $ref: "#/components/schemas/PatchFilterGroup"
        ApprovalRules:
          $ref: "#/components/schemas/PatchRuleGroup"
        ApprovedPatches:
          $ref: "#/components/schemas/PatchIdList"
        ApprovedPatchesComplianceLevel:
          $ref: "#/components/schemas/PatchComplianceLevel"
        ApprovedPatchesEnableNonSecurity:
          $ref: "#/components/schemas/Boolean"
        RejectedPatches:
          $ref: "#/components/schemas/PatchIdList"
        RejectedPatchesAction:
          $ref: "#/components/schemas/PatchAction"
        Description:
          $ref: "#/components/schemas/BaselineDescription"
        Sources:
          $ref: "#/components/schemas/PatchSourceList"
        ClientToken:
          $ref: "#/components/schemas/ClientToken"
        Tags:
          $ref: "#/components/schemas/TagList"
    CreateResourceDataSyncResult:
      type: object
      properties: {}
    CreateResourceDataSyncRequest:
      type: object
      required:
        - SyncName
        - S3Destination
      properties:
        SyncName:
          $ref: "#/components/schemas/ResourceDataSyncName"
        S3Destination:
          $ref: "#/components/schemas/ResourceDataSyncS3Destination"
    ResourceDataSyncCountExceededException: {}
    ResourceDataSyncAlreadyExistsException: {}
    ResourceDataSyncInvalidConfigurationException: {}
    DeleteActivationResult:
      type: object
      properties: {}
    DeleteActivationRequest:
      type: object
      required:
        - ActivationId
      properties:
        ActivationId:
          $ref: "#/components/schemas/ActivationId"
    InvalidActivationId: {}
    InvalidActivation: {}
    DeleteAssociationResult:
      type: object
      properties: {}
    DeleteAssociationRequest:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/DocumentARN"
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        AssociationId:
          $ref: "#/components/schemas/AssociationId"
    AssociationDoesNotExist: {}
    DeleteDocumentResult:
      type: object
      properties: {}
    DeleteDocumentRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/DocumentName"
        DocumentVersion:
          $ref: "#/components/schemas/DocumentVersion"
        VersionName:
          $ref: "#/components/schemas/DocumentVersionName"
    InvalidDocumentOperation: {}
    AssociatedInstances: {}
    DeleteInventoryResult:
      type: object
      properties:
        DeletionId:
          $ref: "#/components/schemas/InventoryDeletionId"
        TypeName:
          $ref: "#/components/schemas/InventoryItemTypeName"
        DeletionSummary:
          $ref: "#/components/schemas/InventoryDeletionSummary"
    DeleteInventoryRequest:
      type: object
      required:
        - TypeName
      properties:
        TypeName:
          $ref: "#/components/schemas/InventoryItemTypeName"
        SchemaDeleteOption:
          $ref: "#/components/schemas/InventorySchemaDeleteOption"
        DryRun:
          $ref: "#/components/schemas/DryRun"
        ClientToken:
          $ref: "#/components/schemas/ClientToken"
    InvalidTypeNameException: {}
    InvalidOptionException: {}
    InvalidDeleteInventoryParametersException: {}
    InvalidInventoryRequestException: {}
    DeleteMaintenanceWindowResult:
      type: object
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
    DeleteMaintenanceWindowRequest:
      type: object
      required:
        - WindowId
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
    DeleteParameterResult:
      type: object
      properties: {}
    DeleteParameterRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/PSParameterName"
    ParameterNotFound: {}
    DeleteParametersResult:
      type: object
      properties:
        DeletedParameters:
          $ref: "#/components/schemas/ParameterNameList"
        InvalidParameters:
          $ref: "#/components/schemas/ParameterNameList"
    DeleteParametersRequest:
      type: object
      required:
        - Names
      properties:
        Names:
          $ref: "#/components/schemas/ParameterNameList"
    DeletePatchBaselineResult:
      type: object
      properties:
        BaselineId:
          $ref: "#/components/schemas/BaselineId"
    DeletePatchBaselineRequest:
      type: object
      required:
        - BaselineId
      properties:
        BaselineId:
          $ref: "#/components/schemas/BaselineId"
    ResourceInUseException: {}
    DeleteResourceDataSyncResult:
      type: object
      properties: {}
    DeleteResourceDataSyncRequest:
      type: object
      required:
        - SyncName
      properties:
        SyncName:
          $ref: "#/components/schemas/ResourceDataSyncName"
    ResourceDataSyncNotFoundException: {}
    DeregisterManagedInstanceResult:
      type: object
      properties: {}
    DeregisterManagedInstanceRequest:
      type: object
      required:
        - InstanceId
      properties:
        InstanceId:
          $ref: "#/components/schemas/ManagedInstanceId"
    DeregisterPatchBaselineForPatchGroupResult:
      type: object
      properties:
        BaselineId:
          $ref: "#/components/schemas/BaselineId"
        PatchGroup:
          $ref: "#/components/schemas/PatchGroup"
    DeregisterPatchBaselineForPatchGroupRequest:
      type: object
      required:
        - BaselineId
        - PatchGroup
      properties:
        BaselineId:
          $ref: "#/components/schemas/BaselineId"
        PatchGroup:
          $ref: "#/components/schemas/PatchGroup"
    DeregisterTargetFromMaintenanceWindowResult:
      type: object
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        WindowTargetId:
          $ref: "#/components/schemas/MaintenanceWindowTargetId"
    DeregisterTargetFromMaintenanceWindowRequest:
      type: object
      required:
        - WindowId
        - WindowTargetId
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        WindowTargetId:
          $ref: "#/components/schemas/MaintenanceWindowTargetId"
        Safe:
          $ref: "#/components/schemas/Boolean"
    TargetInUseException: {}
    DeregisterTaskFromMaintenanceWindowResult:
      type: object
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        WindowTaskId:
          $ref: "#/components/schemas/MaintenanceWindowTaskId"
    DeregisterTaskFromMaintenanceWindowRequest:
      type: object
      required:
        - WindowId
        - WindowTaskId
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        WindowTaskId:
          $ref: "#/components/schemas/MaintenanceWindowTaskId"
    DescribeActivationsResult:
      type: object
      properties:
        ActivationList:
          $ref: "#/components/schemas/ActivationList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeActivationsRequest:
      type: object
      properties:
        Filters:
          $ref: "#/components/schemas/DescribeActivationsFilterList"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    InvalidFilter: {}
    InvalidNextToken: {}
    DescribeAssociationResult:
      type: object
      properties:
        AssociationDescription:
          $ref: "#/components/schemas/AssociationDescription"
    DescribeAssociationRequest:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/DocumentARN"
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        AssociationId:
          $ref: "#/components/schemas/AssociationId"
        AssociationVersion:
          $ref: "#/components/schemas/AssociationVersion"
    InvalidAssociationVersion: {}
    DescribeAssociationExecutionTargetsResult:
      type: object
      properties:
        AssociationExecutionTargets:
          $ref: "#/components/schemas/AssociationExecutionTargetsList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeAssociationExecutionTargetsRequest:
      type: object
      required:
        - AssociationId
        - ExecutionId
      properties:
        AssociationId:
          $ref: "#/components/schemas/AssociationId"
        ExecutionId:
          $ref: "#/components/schemas/AssociationExecutionId"
        Filters:
          $ref: "#/components/schemas/AssociationExecutionTargetsFilterList"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    AssociationExecutionDoesNotExist: {}
    DescribeAssociationExecutionsResult:
      type: object
      properties:
        AssociationExecutions:
          $ref: "#/components/schemas/AssociationExecutionsList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeAssociationExecutionsRequest:
      type: object
      required:
        - AssociationId
      properties:
        AssociationId:
          $ref: "#/components/schemas/AssociationId"
        Filters:
          $ref: "#/components/schemas/AssociationExecutionFilterList"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeAutomationExecutionsResult:
      type: object
      properties:
        AutomationExecutionMetadataList:
          $ref: "#/components/schemas/AutomationExecutionMetadataList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeAutomationExecutionsRequest:
      type: object
      properties:
        Filters:
          $ref: "#/components/schemas/AutomationExecutionFilterList"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    InvalidFilterKey: {}
    InvalidFilterValue: {}
    DescribeAutomationStepExecutionsResult:
      type: object
      properties:
        StepExecutions:
          $ref: "#/components/schemas/StepExecutionList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeAutomationStepExecutionsRequest:
      type: object
      required:
        - AutomationExecutionId
      properties:
        AutomationExecutionId:
          $ref: "#/components/schemas/AutomationExecutionId"
        Filters:
          $ref: "#/components/schemas/StepExecutionFilterList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        ReverseOrder:
          $ref: "#/components/schemas/Boolean"
    AutomationExecutionNotFoundException: {}
    DescribeAvailablePatchesResult:
      type: object
      properties:
        Patches:
          $ref: "#/components/schemas/PatchList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeAvailablePatchesRequest:
      type: object
      properties:
        Filters:
          $ref: "#/components/schemas/PatchOrchestratorFilterList"
        MaxResults:
          $ref: "#/components/schemas/PatchBaselineMaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeDocumentResult:
      type: object
      properties:
        Document:
          $ref: "#/components/schemas/DocumentDescription"
    DescribeDocumentRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/DocumentARN"
        DocumentVersion:
          $ref: "#/components/schemas/DocumentVersion"
        VersionName:
          $ref: "#/components/schemas/DocumentVersionName"
    DescribeDocumentPermissionResponse:
      type: object
      properties:
        AccountIds:
          $ref: "#/components/schemas/AccountIdList"
    DescribeDocumentPermissionRequest:
      type: object
      required:
        - Name
        - PermissionType
      properties:
        Name:
          $ref: "#/components/schemas/DocumentName"
        PermissionType:
          $ref: "#/components/schemas/DocumentPermissionType"
    InvalidPermissionType: {}
    DescribeEffectiveInstanceAssociationsResult:
      type: object
      properties:
        Associations:
          $ref: "#/components/schemas/InstanceAssociationList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeEffectiveInstanceAssociationsRequest:
      type: object
      required:
        - InstanceId
      properties:
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        MaxResults:
          $ref: "#/components/schemas/EffectiveInstanceAssociationMaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeEffectivePatchesForPatchBaselineResult:
      type: object
      properties:
        EffectivePatches:
          $ref: "#/components/schemas/EffectivePatchList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeEffectivePatchesForPatchBaselineRequest:
      type: object
      required:
        - BaselineId
      properties:
        BaselineId:
          $ref: "#/components/schemas/BaselineId"
        MaxResults:
          $ref: "#/components/schemas/PatchBaselineMaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    UnsupportedOperatingSystem: {}
    DescribeInstanceAssociationsStatusResult:
      type: object
      properties:
        InstanceAssociationStatusInfos:
          $ref: "#/components/schemas/InstanceAssociationStatusInfos"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeInstanceAssociationsStatusRequest:
      type: object
      required:
        - InstanceId
      properties:
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeInstanceInformationResult:
      type: object
      properties:
        InstanceInformationList:
          $ref: "#/components/schemas/InstanceInformationList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeInstanceInformationRequest:
      type: object
      properties:
        InstanceInformationFilterList:
          $ref: "#/components/schemas/InstanceInformationFilterList"
        Filters:
          $ref: "#/components/schemas/InstanceInformationStringFilterList"
        MaxResults:
          $ref: "#/components/schemas/MaxResultsEC2Compatible"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    InvalidInstanceInformationFilterValue: {}
    DescribeInstancePatchStatesResult:
      type: object
      properties:
        InstancePatchStates:
          $ref: "#/components/schemas/InstancePatchStateList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeInstancePatchStatesRequest:
      type: object
      required:
        - InstanceIds
      properties:
        InstanceIds:
          $ref: "#/components/schemas/InstanceIdList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/PatchComplianceMaxResults"
    DescribeInstancePatchStatesForPatchGroupResult:
      type: object
      properties:
        InstancePatchStates:
          $ref: "#/components/schemas/InstancePatchStatesList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeInstancePatchStatesForPatchGroupRequest:
      type: object
      required:
        - PatchGroup
      properties:
        PatchGroup:
          $ref: "#/components/schemas/PatchGroup"
        Filters:
          $ref: "#/components/schemas/InstancePatchStateFilterList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/PatchComplianceMaxResults"
    DescribeInstancePatchesResult:
      type: object
      properties:
        Patches:
          $ref: "#/components/schemas/PatchComplianceDataList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeInstancePatchesRequest:
      type: object
      required:
        - InstanceId
      properties:
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        Filters:
          $ref: "#/components/schemas/PatchOrchestratorFilterList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/PatchComplianceMaxResults"
    DescribeInventoryDeletionsResult:
      type: object
      properties:
        InventoryDeletions:
          $ref: "#/components/schemas/InventoryDeletionsList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeInventoryDeletionsRequest:
      type: object
      properties:
        DeletionId:
          $ref: "#/components/schemas/InventoryDeletionId"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    InvalidDeletionIdException: {}
    DescribeMaintenanceWindowExecutionTaskInvocationsResult:
      type: object
      properties:
        WindowExecutionTaskInvocationIdentities:
          $ref: "#/components/schemas/MaintenanceWindowExecutionTaskInvocationIdent\
            ityList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeMaintenanceWindowExecutionTaskInvocationsRequest:
      type: object
      required:
        - WindowExecutionId
        - TaskId
      properties:
        WindowExecutionId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionId"
        TaskId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionTaskId"
        Filters:
          $ref: "#/components/schemas/MaintenanceWindowFilterList"
        MaxResults:
          $ref: "#/components/schemas/MaintenanceWindowMaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeMaintenanceWindowExecutionTasksResult:
      type: object
      properties:
        WindowExecutionTaskIdentities:
          $ref: "#/components/schemas/MaintenanceWindowExecutionTaskIdentityList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeMaintenanceWindowExecutionTasksRequest:
      type: object
      required:
        - WindowExecutionId
      properties:
        WindowExecutionId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionId"
        Filters:
          $ref: "#/components/schemas/MaintenanceWindowFilterList"
        MaxResults:
          $ref: "#/components/schemas/MaintenanceWindowMaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeMaintenanceWindowExecutionsResult:
      type: object
      properties:
        WindowExecutions:
          $ref: "#/components/schemas/MaintenanceWindowExecutionList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeMaintenanceWindowExecutionsRequest:
      type: object
      required:
        - WindowId
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        Filters:
          $ref: "#/components/schemas/MaintenanceWindowFilterList"
        MaxResults:
          $ref: "#/components/schemas/MaintenanceWindowMaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeMaintenanceWindowScheduleResult:
      type: object
      properties:
        ScheduledWindowExecutions:
          $ref: "#/components/schemas/ScheduledWindowExecutionList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeMaintenanceWindowScheduleRequest:
      type: object
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        Targets:
          $ref: "#/components/schemas/Targets"
        ResourceType:
          $ref: "#/components/schemas/MaintenanceWindowResourceType"
        Filters:
          $ref: "#/components/schemas/PatchOrchestratorFilterList"
        MaxResults:
          $ref: "#/components/schemas/MaintenanceWindowSearchMaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeMaintenanceWindowTargetsResult:
      type: object
      properties:
        Targets:
          $ref: "#/components/schemas/MaintenanceWindowTargetList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeMaintenanceWindowTargetsRequest:
      type: object
      required:
        - WindowId
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        Filters:
          $ref: "#/components/schemas/MaintenanceWindowFilterList"
        MaxResults:
          $ref: "#/components/schemas/MaintenanceWindowMaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeMaintenanceWindowTasksResult:
      type: object
      properties:
        Tasks:
          $ref: "#/components/schemas/MaintenanceWindowTaskList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeMaintenanceWindowTasksRequest:
      type: object
      required:
        - WindowId
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        Filters:
          $ref: "#/components/schemas/MaintenanceWindowFilterList"
        MaxResults:
          $ref: "#/components/schemas/MaintenanceWindowMaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeMaintenanceWindowsResult:
      type: object
      properties:
        WindowIdentities:
          $ref: "#/components/schemas/MaintenanceWindowIdentityList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeMaintenanceWindowsRequest:
      type: object
      properties:
        Filters:
          $ref: "#/components/schemas/MaintenanceWindowFilterList"
        MaxResults:
          $ref: "#/components/schemas/MaintenanceWindowMaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeMaintenanceWindowsForTargetResult:
      type: object
      properties:
        WindowIdentities:
          $ref: "#/components/schemas/MaintenanceWindowsForTargetList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeMaintenanceWindowsForTargetRequest:
      type: object
      required:
        - Targets
        - ResourceType
      properties:
        Targets:
          $ref: "#/components/schemas/Targets"
        ResourceType:
          $ref: "#/components/schemas/MaintenanceWindowResourceType"
        MaxResults:
          $ref: "#/components/schemas/MaintenanceWindowSearchMaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeOpsItemsResponse:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/String"
        OpsItemSummaries:
          $ref: "#/components/schemas/OpsItemSummaries"
    DescribeOpsItemsRequest:
      type: object
      properties:
        OpsItemFilters:
          $ref: "#/components/schemas/OpsItemFilters"
        MaxResults:
          $ref: "#/components/schemas/OpsItemMaxResults"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeParametersResult:
      type: object
      properties:
        Parameters:
          $ref: "#/components/schemas/ParameterMetadataList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeParametersRequest:
      type: object
      properties:
        Filters:
          $ref: "#/components/schemas/ParametersFilterList"
        ParameterFilters:
          $ref: "#/components/schemas/ParameterStringFilterList"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    InvalidFilterOption: {}
    DescribePatchBaselinesResult:
      type: object
      properties:
        BaselineIdentities:
          $ref: "#/components/schemas/PatchBaselineIdentityList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribePatchBaselinesRequest:
      type: object
      properties:
        Filters:
          $ref: "#/components/schemas/PatchOrchestratorFilterList"
        MaxResults:
          $ref: "#/components/schemas/PatchBaselineMaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribePatchGroupStateResult:
      type: object
      properties:
        Instances:
          $ref: "#/components/schemas/Integer"
        InstancesWithInstalledPatches:
          $ref: "#/components/schemas/Integer"
        InstancesWithInstalledOtherPatches:
          $ref: "#/components/schemas/Integer"
        InstancesWithInstalledRejectedPatches:
          $ref: "#/components/schemas/InstancesCount"
        InstancesWithMissingPatches:
          $ref: "#/components/schemas/Integer"
        InstancesWithFailedPatches:
          $ref: "#/components/schemas/Integer"
        InstancesWithNotApplicablePatches:
          $ref: "#/components/schemas/Integer"
        InstancesWithUnreportedNotApplicablePatches:
          $ref: "#/components/schemas/Integer"
    DescribePatchGroupStateRequest:
      type: object
      required:
        - PatchGroup
      properties:
        PatchGroup:
          $ref: "#/components/schemas/PatchGroup"
    DescribePatchGroupsResult:
      type: object
      properties:
        Mappings:
          $ref: "#/components/schemas/PatchGroupPatchBaselineMappingList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribePatchGroupsRequest:
      type: object
      properties:
        MaxResults:
          $ref: "#/components/schemas/PatchBaselineMaxResults"
        Filters:
          $ref: "#/components/schemas/PatchOrchestratorFilterList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribePatchPropertiesResult:
      type: object
      properties:
        Properties:
          $ref: "#/components/schemas/PatchPropertiesList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribePatchPropertiesRequest:
      type: object
      required:
        - OperatingSystem
        - Property
      properties:
        OperatingSystem:
          $ref: "#/components/schemas/OperatingSystem"
        Property:
          $ref: "#/components/schemas/PatchProperty"
        PatchSet:
          $ref: "#/components/schemas/PatchSet"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeSessionsResponse:
      type: object
      properties:
        Sessions:
          $ref: "#/components/schemas/SessionList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeSessionsRequest:
      type: object
      required:
        - State
      properties:
        State:
          $ref: "#/components/schemas/SessionState"
        MaxResults:
          $ref: "#/components/schemas/SessionMaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        Filters:
          $ref: "#/components/schemas/SessionFilterList"
    GetAutomationExecutionResult:
      type: object
      properties:
        AutomationExecution:
          $ref: "#/components/schemas/AutomationExecution"
    GetAutomationExecutionRequest:
      type: object
      required:
        - AutomationExecutionId
      properties:
        AutomationExecutionId:
          $ref: "#/components/schemas/AutomationExecutionId"
    GetCommandInvocationResult:
      type: object
      properties:
        CommandId:
          $ref: "#/components/schemas/CommandId"
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        Comment:
          $ref: "#/components/schemas/Comment"
        DocumentName:
          $ref: "#/components/schemas/DocumentName"
        DocumentVersion:
          $ref: "#/components/schemas/DocumentVersion"
        PluginName:
          $ref: "#/components/schemas/CommandPluginName"
        ResponseCode:
          $ref: "#/components/schemas/ResponseCode"
        ExecutionStartDateTime:
          $ref: "#/components/schemas/StringDateTime"
        ExecutionElapsedTime:
          $ref: "#/components/schemas/StringDateTime"
        ExecutionEndDateTime:
          $ref: "#/components/schemas/StringDateTime"
        Status:
          $ref: "#/components/schemas/CommandInvocationStatus"
        StatusDetails:
          $ref: "#/components/schemas/StatusDetails"
        StandardOutputContent:
          $ref: "#/components/schemas/StandardOutputContent"
        StandardOutputUrl:
          $ref: "#/components/schemas/Url"
        StandardErrorContent:
          $ref: "#/components/schemas/StandardErrorContent"
        StandardErrorUrl:
          $ref: "#/components/schemas/Url"
        CloudWatchOutputConfig:
          $ref: "#/components/schemas/CloudWatchOutputConfig"
    GetCommandInvocationRequest:
      type: object
      required:
        - CommandId
        - InstanceId
      properties:
        CommandId:
          $ref: "#/components/schemas/CommandId"
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        PluginName:
          $ref: "#/components/schemas/CommandPluginName"
    InvalidPluginName: {}
    InvocationDoesNotExist: {}
    GetConnectionStatusResponse:
      type: object
      properties:
        Target:
          $ref: "#/components/schemas/SessionTarget"
        Status:
          $ref: "#/components/schemas/ConnectionStatus"
    GetConnectionStatusRequest:
      type: object
      required:
        - Target
      properties:
        Target:
          $ref: "#/components/schemas/SessionTarget"
    GetDefaultPatchBaselineResult:
      type: object
      properties:
        BaselineId:
          $ref: "#/components/schemas/BaselineId"
        OperatingSystem:
          $ref: "#/components/schemas/OperatingSystem"
    GetDefaultPatchBaselineRequest:
      type: object
      properties:
        OperatingSystem:
          $ref: "#/components/schemas/OperatingSystem"
    GetDeployablePatchSnapshotForInstanceResult:
      type: object
      properties:
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        SnapshotId:
          $ref: "#/components/schemas/SnapshotId"
        SnapshotDownloadUrl:
          $ref: "#/components/schemas/SnapshotDownloadUrl"
        Product:
          $ref: "#/components/schemas/Product"
    GetDeployablePatchSnapshotForInstanceRequest:
      type: object
      required:
        - InstanceId
        - SnapshotId
      properties:
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        SnapshotId:
          $ref: "#/components/schemas/SnapshotId"
    UnsupportedFeatureRequiredException: {}
    GetDocumentResult:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/DocumentARN"
        VersionName:
          $ref: "#/components/schemas/DocumentVersionName"
        DocumentVersion:
          $ref: "#/components/schemas/DocumentVersion"
        Status:
          $ref: "#/components/schemas/DocumentStatus"
        StatusInformation:
          $ref: "#/components/schemas/DocumentStatusInformation"
        Content:
          $ref: "#/components/schemas/DocumentContent"
        DocumentType:
          $ref: "#/components/schemas/DocumentType"
        DocumentFormat:
          $ref: "#/components/schemas/DocumentFormat"
        AttachmentsContent:
          $ref: "#/components/schemas/AttachmentContentList"
    GetDocumentRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/DocumentARN"
        VersionName:
          $ref: "#/components/schemas/DocumentVersionName"
        DocumentVersion:
          $ref: "#/components/schemas/DocumentVersion"
        DocumentFormat:
          $ref: "#/components/schemas/DocumentFormat"
    GetInventoryResult:
      type: object
      properties:
        Entities:
          $ref: "#/components/schemas/InventoryResultEntityList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    GetInventoryRequest:
      type: object
      properties:
        Filters:
          $ref: "#/components/schemas/InventoryFilterList"
        Aggregators:
          $ref: "#/components/schemas/InventoryAggregatorList"
        ResultAttributes:
          $ref: "#/components/schemas/ResultAttributeList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    InvalidInventoryGroupException: {}
    InvalidAggregatorException: {}
    InvalidResultAttributeException: {}
    GetInventorySchemaResult:
      type: object
      properties:
        Schemas:
          $ref: "#/components/schemas/InventoryItemSchemaResultList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    GetInventorySchemaRequest:
      type: object
      properties:
        TypeName:
          $ref: "#/components/schemas/InventoryItemTypeNameFilter"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/GetInventorySchemaMaxResults"
        Aggregator:
          $ref: "#/components/schemas/AggregatorSchemaOnly"
        SubType:
          $ref: "#/components/schemas/IsSubTypeSchema"
    GetMaintenanceWindowResult:
      type: object
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        Name:
          $ref: "#/components/schemas/MaintenanceWindowName"
        Description:
          $ref: "#/components/schemas/MaintenanceWindowDescription"
        StartDate:
          $ref: "#/components/schemas/MaintenanceWindowStringDateTime"
        EndDate:
          $ref: "#/components/schemas/MaintenanceWindowStringDateTime"
        Schedule:
          $ref: "#/components/schemas/MaintenanceWindowSchedule"
        ScheduleTimezone:
          $ref: "#/components/schemas/MaintenanceWindowTimezone"
        NextExecutionTime:
          $ref: "#/components/schemas/MaintenanceWindowStringDateTime"
        Duration:
          $ref: "#/components/schemas/MaintenanceWindowDurationHours"
        Cutoff:
          $ref: "#/components/schemas/MaintenanceWindowCutoff"
        AllowUnassociatedTargets:
          $ref: "#/components/schemas/MaintenanceWindowAllowUnassociatedTargets"
        Enabled:
          $ref: "#/components/schemas/MaintenanceWindowEnabled"
        CreatedDate:
          $ref: "#/components/schemas/DateTime"
        ModifiedDate:
          $ref: "#/components/schemas/DateTime"
    GetMaintenanceWindowRequest:
      type: object
      required:
        - WindowId
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
    GetMaintenanceWindowExecutionResult:
      type: object
      properties:
        WindowExecutionId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionId"
        TaskIds:
          $ref: "#/components/schemas/MaintenanceWindowExecutionTaskIdList"
        Status:
          $ref: "#/components/schemas/MaintenanceWindowExecutionStatus"
        StatusDetails:
          $ref: "#/components/schemas/MaintenanceWindowExecutionStatusDetails"
        StartTime:
          $ref: "#/components/schemas/DateTime"
        EndTime:
          $ref: "#/components/schemas/DateTime"
    GetMaintenanceWindowExecutionRequest:
      type: object
      required:
        - WindowExecutionId
      properties:
        WindowExecutionId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionId"
    GetMaintenanceWindowExecutionTaskResult:
      type: object
      properties:
        WindowExecutionId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionId"
        TaskExecutionId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionTaskId"
        TaskArn:
          $ref: "#/components/schemas/MaintenanceWindowTaskArn"
        ServiceRole:
          $ref: "#/components/schemas/ServiceRole"
        Type:
          $ref: "#/components/schemas/MaintenanceWindowTaskType"
        TaskParameters:
          $ref: "#/components/schemas/MaintenanceWindowTaskParametersList"
        Priority:
          $ref: "#/components/schemas/MaintenanceWindowTaskPriority"
        MaxConcurrency:
          $ref: "#/components/schemas/MaxConcurrency"
        MaxErrors:
          $ref: "#/components/schemas/MaxErrors"
        Status:
          $ref: "#/components/schemas/MaintenanceWindowExecutionStatus"
        StatusDetails:
          $ref: "#/components/schemas/MaintenanceWindowExecutionStatusDetails"
        StartTime:
          $ref: "#/components/schemas/DateTime"
        EndTime:
          $ref: "#/components/schemas/DateTime"
    GetMaintenanceWindowExecutionTaskRequest:
      type: object
      required:
        - WindowExecutionId
        - TaskId
      properties:
        WindowExecutionId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionId"
        TaskId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionTaskId"
    GetMaintenanceWindowExecutionTaskInvocationResult:
      type: object
      properties:
        WindowExecutionId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionId"
        TaskExecutionId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionTaskId"
        InvocationId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionTaskInvocationId"
        ExecutionId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionTaskExecutionId"
        TaskType:
          $ref: "#/components/schemas/MaintenanceWindowTaskType"
        Parameters:
          $ref: "#/components/schemas/MaintenanceWindowExecutionTaskInvocationParam\
            eters"
        Status:
          $ref: "#/components/schemas/MaintenanceWindowExecutionStatus"
        StatusDetails:
          $ref: "#/components/schemas/MaintenanceWindowExecutionStatusDetails"
        StartTime:
          $ref: "#/components/schemas/DateTime"
        EndTime:
          $ref: "#/components/schemas/DateTime"
        OwnerInformation:
          $ref: "#/components/schemas/OwnerInformation"
        WindowTargetId:
          $ref: "#/components/schemas/MaintenanceWindowTaskTargetId"
    GetMaintenanceWindowExecutionTaskInvocationRequest:
      type: object
      required:
        - WindowExecutionId
        - TaskId
        - InvocationId
      properties:
        WindowExecutionId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionId"
        TaskId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionTaskId"
        InvocationId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionTaskInvocationId"
    GetMaintenanceWindowTaskResult:
      type: object
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        WindowTaskId:
          $ref: "#/components/schemas/MaintenanceWindowTaskId"
        Targets:
          $ref: "#/components/schemas/Targets"
        TaskArn:
          $ref: "#/components/schemas/MaintenanceWindowTaskArn"
        ServiceRoleArn:
          $ref: "#/components/schemas/ServiceRole"
        TaskType:
          $ref: "#/components/schemas/MaintenanceWindowTaskType"
        TaskParameters:
          $ref: "#/components/schemas/MaintenanceWindowTaskParameters"
        TaskInvocationParameters:
          $ref: "#/components/schemas/MaintenanceWindowTaskInvocationParameters"
        Priority:
          $ref: "#/components/schemas/MaintenanceWindowTaskPriority"
        MaxConcurrency:
          $ref: "#/components/schemas/MaxConcurrency"
        MaxErrors:
          $ref: "#/components/schemas/MaxErrors"
        LoggingInfo:
          $ref: "#/components/schemas/LoggingInfo"
        Name:
          $ref: "#/components/schemas/MaintenanceWindowName"
        Description:
          $ref: "#/components/schemas/MaintenanceWindowDescription"
    GetMaintenanceWindowTaskRequest:
      type: object
      required:
        - WindowId
        - WindowTaskId
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        WindowTaskId:
          $ref: "#/components/schemas/MaintenanceWindowTaskId"
    GetOpsItemResponse:
      type: object
      properties:
        OpsItem:
          $ref: "#/components/schemas/OpsItem"
    GetOpsItemRequest:
      type: object
      required:
        - OpsItemId
      properties:
        OpsItemId:
          $ref: "#/components/schemas/OpsItemId"
    OpsItemNotFoundException: {}
    GetOpsSummaryResult:
      type: object
      properties:
        Entities:
          $ref: "#/components/schemas/OpsEntityList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    GetOpsSummaryRequest:
      type: object
      required:
        - Aggregators
      properties:
        Filters:
          $ref: "#/components/schemas/OpsFilterList"
        Aggregators:
          $ref: "#/components/schemas/OpsAggregatorList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    GetParameterResult:
      type: object
      properties:
        Parameter:
          $ref: "#/components/schemas/Parameter"
    GetParameterRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/PSParameterName"
        WithDecryption:
          $ref: "#/components/schemas/Boolean"
    InvalidKeyId: {}
    ParameterVersionNotFound: {}
    GetParameterHistoryResult:
      type: object
      properties:
        Parameters:
          $ref: "#/components/schemas/ParameterHistoryList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    GetParameterHistoryRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/PSParameterName"
        WithDecryption:
          $ref: "#/components/schemas/Boolean"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    GetParametersResult:
      type: object
      properties:
        Parameters:
          $ref: "#/components/schemas/ParameterList"
        InvalidParameters:
          $ref: "#/components/schemas/ParameterNameList"
    GetParametersRequest:
      type: object
      required:
        - Names
      properties:
        Names:
          $ref: "#/components/schemas/ParameterNameList"
        WithDecryption:
          $ref: "#/components/schemas/Boolean"
    GetParametersByPathResult:
      type: object
      properties:
        Parameters:
          $ref: "#/components/schemas/ParameterList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    GetParametersByPathRequest:
      type: object
      required:
        - Path
      properties:
        Path:
          $ref: "#/components/schemas/PSParameterName"
        Recursive:
          $ref: "#/components/schemas/Boolean"
        ParameterFilters:
          $ref: "#/components/schemas/ParameterStringFilterList"
        WithDecryption:
          $ref: "#/components/schemas/Boolean"
        MaxResults:
          $ref: "#/components/schemas/GetParametersByPathMaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    GetPatchBaselineResult:
      type: object
      properties:
        BaselineId:
          $ref: "#/components/schemas/BaselineId"
        Name:
          $ref: "#/components/schemas/BaselineName"
        OperatingSystem:
          $ref: "#/components/schemas/OperatingSystem"
        GlobalFilters:
          $ref: "#/components/schemas/PatchFilterGroup"
        ApprovalRules:
          $ref: "#/components/schemas/PatchRuleGroup"
        ApprovedPatches:
          $ref: "#/components/schemas/PatchIdList"
        ApprovedPatchesComplianceLevel:
          $ref: "#/components/schemas/PatchComplianceLevel"
        ApprovedPatchesEnableNonSecurity:
          $ref: "#/components/schemas/Boolean"
        RejectedPatches:
          $ref: "#/components/schemas/PatchIdList"
        RejectedPatchesAction:
          $ref: "#/components/schemas/PatchAction"
        PatchGroups:
          $ref: "#/components/schemas/PatchGroupList"
        CreatedDate:
          $ref: "#/components/schemas/DateTime"
        ModifiedDate:
          $ref: "#/components/schemas/DateTime"
        Description:
          $ref: "#/components/schemas/BaselineDescription"
        Sources:
          $ref: "#/components/schemas/PatchSourceList"
    GetPatchBaselineRequest:
      type: object
      required:
        - BaselineId
      properties:
        BaselineId:
          $ref: "#/components/schemas/BaselineId"
    GetPatchBaselineForPatchGroupResult:
      type: object
      properties:
        BaselineId:
          $ref: "#/components/schemas/BaselineId"
        PatchGroup:
          $ref: "#/components/schemas/PatchGroup"
        OperatingSystem:
          $ref: "#/components/schemas/OperatingSystem"
    GetPatchBaselineForPatchGroupRequest:
      type: object
      required:
        - PatchGroup
      properties:
        PatchGroup:
          $ref: "#/components/schemas/PatchGroup"
        OperatingSystem:
          $ref: "#/components/schemas/OperatingSystem"
    GetServiceSettingResult:
      type: object
      properties:
        ServiceSetting:
          $ref: "#/components/schemas/ServiceSetting"
      description: The query result body of the GetServiceSetting API action.
    GetServiceSettingRequest:
      type: object
      required:
        - SettingId
      properties:
        SettingId:
          $ref: "#/components/schemas/ServiceSettingId"
      description: The request body of the GetServiceSetting API action.
    ServiceSettingNotFound: {}
    LabelParameterVersionResult:
      type: object
      properties:
        InvalidLabels:
          $ref: "#/components/schemas/ParameterLabelList"
        ParameterVersion:
          $ref: "#/components/schemas/PSParameterVersion"
    LabelParameterVersionRequest:
      type: object
      required:
        - Name
        - Labels
      properties:
        Name:
          $ref: "#/components/schemas/PSParameterName"
        ParameterVersion:
          $ref: "#/components/schemas/PSParameterVersion"
        Labels:
          $ref: "#/components/schemas/ParameterLabelList"
    ParameterVersionLabelLimitExceeded: {}
    ListAssociationVersionsResult:
      type: object
      properties:
        AssociationVersions:
          $ref: "#/components/schemas/AssociationVersionList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListAssociationVersionsRequest:
      type: object
      required:
        - AssociationId
      properties:
        AssociationId:
          $ref: "#/components/schemas/AssociationId"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListAssociationsResult:
      type: object
      properties:
        Associations:
          $ref: "#/components/schemas/AssociationList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListAssociationsRequest:
      type: object
      properties:
        AssociationFilterList:
          $ref: "#/components/schemas/AssociationFilterList"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListCommandInvocationsResult:
      type: object
      properties:
        CommandInvocations:
          $ref: "#/components/schemas/CommandInvocationList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListCommandInvocationsRequest:
      type: object
      properties:
        CommandId:
          $ref: "#/components/schemas/CommandId"
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        MaxResults:
          $ref: "#/components/schemas/CommandMaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        Filters:
          $ref: "#/components/schemas/CommandFilterList"
        Details:
          $ref: "#/components/schemas/Boolean"
    ListCommandsResult:
      type: object
      properties:
        Commands:
          $ref: "#/components/schemas/CommandList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListCommandsRequest:
      type: object
      properties:
        CommandId:
          $ref: "#/components/schemas/CommandId"
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        MaxResults:
          $ref: "#/components/schemas/CommandMaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        Filters:
          $ref: "#/components/schemas/CommandFilterList"
    ListComplianceItemsResult:
      type: object
      properties:
        ComplianceItems:
          $ref: "#/components/schemas/ComplianceItemList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListComplianceItemsRequest:
      type: object
      properties:
        Filters:
          $ref: "#/components/schemas/ComplianceStringFilterList"
        ResourceIds:
          $ref: "#/components/schemas/ComplianceResourceIdList"
        ResourceTypes:
          $ref: "#/components/schemas/ComplianceResourceTypeList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListComplianceSummariesResult:
      type: object
      properties:
        ComplianceSummaryItems:
          $ref: "#/components/schemas/ComplianceSummaryItemList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListComplianceSummariesRequest:
      type: object
      properties:
        Filters:
          $ref: "#/components/schemas/ComplianceStringFilterList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListDocumentVersionsResult:
      type: object
      properties:
        DocumentVersions:
          $ref: "#/components/schemas/DocumentVersionList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListDocumentVersionsRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/DocumentName"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListDocumentsResult:
      type: object
      properties:
        DocumentIdentifiers:
          $ref: "#/components/schemas/DocumentIdentifierList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListDocumentsRequest:
      type: object
      properties:
        DocumentFilterList:
          $ref: "#/components/schemas/DocumentFilterList"
        Filters:
          $ref: "#/components/schemas/DocumentKeyValuesFilterList"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListInventoryEntriesResult:
      type: object
      properties:
        TypeName:
          $ref: "#/components/schemas/InventoryItemTypeName"
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        SchemaVersion:
          $ref: "#/components/schemas/InventoryItemSchemaVersion"
        CaptureTime:
          $ref: "#/components/schemas/InventoryItemCaptureTime"
        Entries:
          $ref: "#/components/schemas/InventoryItemEntryList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListInventoryEntriesRequest:
      type: object
      required:
        - InstanceId
        - TypeName
      properties:
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        TypeName:
          $ref: "#/components/schemas/InventoryItemTypeName"
        Filters:
          $ref: "#/components/schemas/InventoryFilterList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListResourceComplianceSummariesResult:
      type: object
      properties:
        ResourceComplianceSummaryItems:
          $ref: "#/components/schemas/ResourceComplianceSummaryItemList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListResourceComplianceSummariesRequest:
      type: object
      properties:
        Filters:
          $ref: "#/components/schemas/ComplianceStringFilterList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListResourceDataSyncResult:
      type: object
      properties:
        ResourceDataSyncItems:
          $ref: "#/components/schemas/ResourceDataSyncItemList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListResourceDataSyncRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
    ListTagsForResourceResult:
      type: object
      properties:
        TagList:
          $ref: "#/components/schemas/TagList"
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceType
        - ResourceId
      properties:
        ResourceType:
          $ref: "#/components/schemas/ResourceTypeForTagging"
        ResourceId:
          $ref: "#/components/schemas/ResourceId"
    ModifyDocumentPermissionResponse:
      type: object
      properties: {}
    ModifyDocumentPermissionRequest:
      type: object
      required:
        - Name
        - PermissionType
      properties:
        Name:
          $ref: "#/components/schemas/DocumentName"
        PermissionType:
          $ref: "#/components/schemas/DocumentPermissionType"
        AccountIdsToAdd:
          $ref: "#/components/schemas/AccountIdList"
        AccountIdsToRemove:
          $ref: "#/components/schemas/AccountIdList"
    DocumentPermissionLimit: {}
    PutComplianceItemsResult:
      type: object
      properties: {}
    PutComplianceItemsRequest:
      type: object
      required:
        - ResourceId
        - ResourceType
        - ComplianceType
        - ExecutionSummary
        - Items
      properties:
        ResourceId:
          $ref: "#/components/schemas/ComplianceResourceId"
        ResourceType:
          $ref: "#/components/schemas/ComplianceResourceType"
        ComplianceType:
          $ref: "#/components/schemas/ComplianceTypeName"
        ExecutionSummary:
          $ref: "#/components/schemas/ComplianceExecutionSummary"
        Items:
          $ref: "#/components/schemas/ComplianceItemEntryList"
        ItemContentHash:
          $ref: "#/components/schemas/ComplianceItemContentHash"
    InvalidItemContentException: {}
    TotalSizeLimitExceededException: {}
    ItemSizeLimitExceededException: {}
    ComplianceTypeCountLimitExceededException: {}
    PutInventoryResult:
      type: object
      properties:
        Message:
          $ref: "#/components/schemas/PutInventoryMessage"
    PutInventoryRequest:
      type: object
      required:
        - InstanceId
        - Items
      properties:
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        Items:
          $ref: "#/components/schemas/InventoryItemList"
    ItemContentMismatchException: {}
    CustomSchemaCountLimitExceededException: {}
    UnsupportedInventorySchemaVersionException: {}
    UnsupportedInventoryItemContextException: {}
    InvalidInventoryItemContextException: {}
    SubTypeCountLimitExceededException: {}
    PutParameterResult:
      type: object
      properties:
        Version:
          $ref: "#/components/schemas/PSParameterVersion"
        Tier:
          $ref: "#/components/schemas/ParameterTier"
    PutParameterRequest:
      type: object
      required:
        - Name
        - Value
        - Type
      properties:
        Name:
          $ref: "#/components/schemas/PSParameterName"
        Description:
          $ref: "#/components/schemas/ParameterDescription"
        Value:
          $ref: "#/components/schemas/PSParameterValue"
        Type:
          $ref: "#/components/schemas/ParameterType"
        KeyId:
          $ref: "#/components/schemas/ParameterKeyId"
        Overwrite:
          $ref: "#/components/schemas/Boolean"
        AllowedPattern:
          $ref: "#/components/schemas/AllowedPattern"
        Tags:
          $ref: "#/components/schemas/TagList"
        Tier:
          $ref: "#/components/schemas/ParameterTier"
        Policies:
          $ref: "#/components/schemas/ParameterPolicies"
    ParameterLimitExceeded: {}
    ParameterAlreadyExists: {}
    HierarchyLevelLimitExceededException: {}
    HierarchyTypeMismatchException: {}
    InvalidAllowedPatternException: {}
    ParameterMaxVersionLimitExceeded: {}
    ParameterPatternMismatchException: {}
    UnsupportedParameterType: {}
    PoliciesLimitExceededException: {}
    InvalidPolicyTypeException: {}
    InvalidPolicyAttributeException: {}
    IncompatiblePolicyException: {}
    RegisterDefaultPatchBaselineResult:
      type: object
      properties:
        BaselineId:
          $ref: "#/components/schemas/BaselineId"
    RegisterDefaultPatchBaselineRequest:
      type: object
      required:
        - BaselineId
      properties:
        BaselineId:
          $ref: "#/components/schemas/BaselineId"
    RegisterPatchBaselineForPatchGroupResult:
      type: object
      properties:
        BaselineId:
          $ref: "#/components/schemas/BaselineId"
        PatchGroup:
          $ref: "#/components/schemas/PatchGroup"
    RegisterPatchBaselineForPatchGroupRequest:
      type: object
      required:
        - BaselineId
        - PatchGroup
      properties:
        BaselineId:
          $ref: "#/components/schemas/BaselineId"
        PatchGroup:
          $ref: "#/components/schemas/PatchGroup"
    AlreadyExistsException: {}
    RegisterTargetWithMaintenanceWindowResult:
      type: object
      properties:
        WindowTargetId:
          $ref: "#/components/schemas/MaintenanceWindowTargetId"
    RegisterTargetWithMaintenanceWindowRequest:
      type: object
      required:
        - WindowId
        - ResourceType
        - Targets
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        ResourceType:
          $ref: "#/components/schemas/MaintenanceWindowResourceType"
        Targets:
          $ref: "#/components/schemas/Targets"
        OwnerInformation:
          $ref: "#/components/schemas/OwnerInformation"
        Name:
          $ref: "#/components/schemas/MaintenanceWindowName"
        Description:
          $ref: "#/components/schemas/MaintenanceWindowDescription"
        ClientToken:
          $ref: "#/components/schemas/ClientToken"
    RegisterTaskWithMaintenanceWindowResult:
      type: object
      properties:
        WindowTaskId:
          $ref: "#/components/schemas/MaintenanceWindowTaskId"
    RegisterTaskWithMaintenanceWindowRequest:
      type: object
      required:
        - WindowId
        - Targets
        - TaskArn
        - TaskType
        - MaxConcurrency
        - MaxErrors
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        Targets:
          $ref: "#/components/schemas/Targets"
        TaskArn:
          $ref: "#/components/schemas/MaintenanceWindowTaskArn"
        ServiceRoleArn:
          $ref: "#/components/schemas/ServiceRole"
        TaskType:
          $ref: "#/components/schemas/MaintenanceWindowTaskType"
        TaskParameters:
          $ref: "#/components/schemas/MaintenanceWindowTaskParameters"
        TaskInvocationParameters:
          $ref: "#/components/schemas/MaintenanceWindowTaskInvocationParameters"
        Priority:
          $ref: "#/components/schemas/MaintenanceWindowTaskPriority"
        MaxConcurrency:
          $ref: "#/components/schemas/MaxConcurrency"
        MaxErrors:
          $ref: "#/components/schemas/MaxErrors"
        LoggingInfo:
          $ref: "#/components/schemas/LoggingInfo"
        Name:
          $ref: "#/components/schemas/MaintenanceWindowName"
        Description:
          $ref: "#/components/schemas/MaintenanceWindowDescription"
        ClientToken:
          $ref: "#/components/schemas/ClientToken"
    FeatureNotAvailableException: {}
    RemoveTagsFromResourceResult:
      type: object
      properties: {}
    RemoveTagsFromResourceRequest:
      type: object
      required:
        - ResourceType
        - ResourceId
        - TagKeys
      properties:
        ResourceType:
          $ref: "#/components/schemas/ResourceTypeForTagging"
        ResourceId:
          $ref: "#/components/schemas/ResourceId"
        TagKeys:
          $ref: "#/components/schemas/KeyList"
    ResetServiceSettingResult:
      type: object
      properties:
        ServiceSetting:
          $ref: "#/components/schemas/ServiceSetting"
      description: The result body of the ResetServiceSetting API action.
    ResetServiceSettingRequest:
      type: object
      required:
        - SettingId
      properties:
        SettingId:
          $ref: "#/components/schemas/ServiceSettingId"
      description: The request body of the ResetServiceSetting API action.
    ResumeSessionResponse:
      type: object
      properties:
        SessionId:
          $ref: "#/components/schemas/SessionId"
        TokenValue:
          $ref: "#/components/schemas/TokenValue"
        StreamUrl:
          $ref: "#/components/schemas/StreamUrl"
    ResumeSessionRequest:
      type: object
      required:
        - SessionId
      properties:
        SessionId:
          $ref: "#/components/schemas/SessionId"
    SendAutomationSignalResult:
      type: object
      properties: {}
    SendAutomationSignalRequest:
      type: object
      required:
        - AutomationExecutionId
        - SignalType
      properties:
        AutomationExecutionId:
          $ref: "#/components/schemas/AutomationExecutionId"
        SignalType:
          $ref: "#/components/schemas/SignalType"
        Payload:
          $ref: "#/components/schemas/AutomationParameterMap"
    AutomationStepNotFoundException: {}
    InvalidAutomationSignalException: {}
    SendCommandResult:
      type: object
      properties:
        Command:
          $ref: "#/components/schemas/Command"
    SendCommandRequest:
      type: object
      required:
        - DocumentName
      properties:
        InstanceIds:
          $ref: "#/components/schemas/InstanceIdList"
        Targets:
          $ref: "#/components/schemas/Targets"
        DocumentName:
          $ref: "#/components/schemas/DocumentARN"
        DocumentVersion:
          $ref: "#/components/schemas/DocumentVersion"
        DocumentHash:
          $ref: "#/components/schemas/DocumentHash"
        DocumentHashType:
          $ref: "#/components/schemas/DocumentHashType"
        TimeoutSeconds:
          $ref: "#/components/schemas/TimeoutSeconds"
        Comment:
          $ref: "#/components/schemas/Comment"
        Parameters:
          $ref: "#/components/schemas/Parameters"
        OutputS3Region:
          $ref: "#/components/schemas/S3Region"
        OutputS3BucketName:
          $ref: "#/components/schemas/S3BucketName"
        OutputS3KeyPrefix:
          $ref: "#/components/schemas/S3KeyPrefix"
        MaxConcurrency:
          $ref: "#/components/schemas/MaxConcurrency"
        MaxErrors:
          $ref: "#/components/schemas/MaxErrors"
        ServiceRoleArn:
          $ref: "#/components/schemas/ServiceRole"
        NotificationConfig:
          $ref: "#/components/schemas/NotificationConfig"
        CloudWatchOutputConfig:
          $ref: "#/components/schemas/CloudWatchOutputConfig"
    InvalidOutputFolder: {}
    InvalidRole: {}
    InvalidNotificationConfig: {}
    StartAssociationsOnceResult:
      type: object
      properties: {}
    StartAssociationsOnceRequest:
      type: object
      required:
        - AssociationIds
      properties:
        AssociationIds:
          $ref: "#/components/schemas/AssociationIdList"
    InvalidAssociation: {}
    StartAutomationExecutionResult:
      type: object
      properties:
        AutomationExecutionId:
          $ref: "#/components/schemas/AutomationExecutionId"
    StartAutomationExecutionRequest:
      type: object
      required:
        - DocumentName
      properties:
        DocumentName:
          $ref: "#/components/schemas/DocumentARN"
        DocumentVersion:
          $ref: "#/components/schemas/DocumentVersion"
        Parameters:
          $ref: "#/components/schemas/AutomationParameterMap"
        ClientToken:
          $ref: "#/components/schemas/IdempotencyToken"
        Mode:
          $ref: "#/components/schemas/ExecutionMode"
        TargetParameterName:
          $ref: "#/components/schemas/AutomationParameterKey"
        Targets:
          $ref: "#/components/schemas/Targets"
        TargetMaps:
          $ref: "#/components/schemas/TargetMaps"
        MaxConcurrency:
          $ref: "#/components/schemas/MaxConcurrency"
        MaxErrors:
          $ref: "#/components/schemas/MaxErrors"
        TargetLocations:
          $ref: "#/components/schemas/TargetLocations"
    AutomationDefinitionNotFoundException: {}
    InvalidAutomationExecutionParametersException: {}
    AutomationExecutionLimitExceededException: {}
    AutomationDefinitionVersionNotFoundException: {}
    StartSessionResponse:
      type: object
      properties:
        SessionId:
          $ref: "#/components/schemas/SessionId"
        TokenValue:
          $ref: "#/components/schemas/TokenValue"
        StreamUrl:
          $ref: "#/components/schemas/StreamUrl"
    StartSessionRequest:
      type: object
      required:
        - Target
      properties:
        Target:
          $ref: "#/components/schemas/SessionTarget"
        DocumentName:
          $ref: "#/components/schemas/DocumentARN"
        Parameters:
          $ref: "#/components/schemas/SessionManagerParameters"
    TargetNotConnected: {}
    StopAutomationExecutionResult:
      type: object
      properties: {}
    StopAutomationExecutionRequest:
      type: object
      required:
        - AutomationExecutionId
      properties:
        AutomationExecutionId:
          $ref: "#/components/schemas/AutomationExecutionId"
        Type:
          $ref: "#/components/schemas/StopType"
    InvalidAutomationStatusUpdateException: {}
    TerminateSessionResponse:
      type: object
      properties:
        SessionId:
          $ref: "#/components/schemas/SessionId"
    TerminateSessionRequest:
      type: object
      required:
        - SessionId
      properties:
        SessionId:
          $ref: "#/components/schemas/SessionId"
    UpdateAssociationResult:
      type: object
      properties:
        AssociationDescription:
          $ref: "#/components/schemas/AssociationDescription"
    UpdateAssociationRequest:
      type: object
      required:
        - AssociationId
      properties:
        AssociationId:
          $ref: "#/components/schemas/AssociationId"
        Parameters:
          $ref: "#/components/schemas/Parameters"
        DocumentVersion:
          $ref: "#/components/schemas/DocumentVersion"
        ScheduleExpression:
          $ref: "#/components/schemas/ScheduleExpression"
        OutputLocation:
          $ref: "#/components/schemas/InstanceAssociationOutputLocation"
        Name:
          $ref: "#/components/schemas/DocumentARN"
        Targets:
          $ref: "#/components/schemas/Targets"
        AssociationName:
          $ref: "#/components/schemas/AssociationName"
        AssociationVersion:
          $ref: "#/components/schemas/AssociationVersion"
        AutomationTargetParameterName:
          $ref: "#/components/schemas/AutomationTargetParameterName"
        MaxErrors:
          $ref: "#/components/schemas/MaxErrors"
        MaxConcurrency:
          $ref: "#/components/schemas/MaxConcurrency"
        ComplianceSeverity:
          $ref: "#/components/schemas/AssociationComplianceSeverity"
    InvalidUpdate: {}
    AssociationVersionLimitExceeded: {}
    UpdateAssociationStatusResult:
      type: object
      properties:
        AssociationDescription:
          $ref: "#/components/schemas/AssociationDescription"
    UpdateAssociationStatusRequest:
      type: object
      required:
        - Name
        - InstanceId
        - AssociationStatus
      properties:
        Name:
          $ref: "#/components/schemas/DocumentARN"
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        AssociationStatus:
          $ref: "#/components/schemas/AssociationStatus"
    StatusUnchanged: {}
    UpdateDocumentResult:
      type: object
      properties:
        DocumentDescription:
          $ref: "#/components/schemas/DocumentDescription"
    UpdateDocumentRequest:
      type: object
      required:
        - Content
        - Name
      properties:
        Content:
          $ref: "#/components/schemas/DocumentContent"
        Attachments:
          $ref: "#/components/schemas/AttachmentsSourceList"
        Name:
          $ref: "#/components/schemas/DocumentName"
        VersionName:
          $ref: "#/components/schemas/DocumentVersionName"
        DocumentVersion:
          $ref: "#/components/schemas/DocumentVersion"
        DocumentFormat:
          $ref: "#/components/schemas/DocumentFormat"
        TargetType:
          $ref: "#/components/schemas/TargetType"
    DocumentVersionLimitExceeded: {}
    DuplicateDocumentContent: {}
    DuplicateDocumentVersionName: {}
    UpdateDocumentDefaultVersionResult:
      type: object
      properties:
        Description:
          $ref: "#/components/schemas/DocumentDefaultVersionDescription"
    UpdateDocumentDefaultVersionRequest:
      type: object
      required:
        - Name
        - DocumentVersion
      properties:
        Name:
          $ref: "#/components/schemas/DocumentName"
        DocumentVersion:
          $ref: "#/components/schemas/DocumentVersionNumber"
    UpdateMaintenanceWindowResult:
      type: object
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        Name:
          $ref: "#/components/schemas/MaintenanceWindowName"
        Description:
          $ref: "#/components/schemas/MaintenanceWindowDescription"
        StartDate:
          $ref: "#/components/schemas/MaintenanceWindowStringDateTime"
        EndDate:
          $ref: "#/components/schemas/MaintenanceWindowStringDateTime"
        Schedule:
          $ref: "#/components/schemas/MaintenanceWindowSchedule"
        ScheduleTimezone:
          $ref: "#/components/schemas/MaintenanceWindowTimezone"
        Duration:
          $ref: "#/components/schemas/MaintenanceWindowDurationHours"
        Cutoff:
          $ref: "#/components/schemas/MaintenanceWindowCutoff"
        AllowUnassociatedTargets:
          $ref: "#/components/schemas/MaintenanceWindowAllowUnassociatedTargets"
        Enabled:
          $ref: "#/components/schemas/MaintenanceWindowEnabled"
    UpdateMaintenanceWindowRequest:
      type: object
      required:
        - WindowId
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        Name:
          $ref: "#/components/schemas/MaintenanceWindowName"
        Description:
          $ref: "#/components/schemas/MaintenanceWindowDescription"
        StartDate:
          $ref: "#/components/schemas/MaintenanceWindowStringDateTime"
        EndDate:
          $ref: "#/components/schemas/MaintenanceWindowStringDateTime"
        Schedule:
          $ref: "#/components/schemas/MaintenanceWindowSchedule"
        ScheduleTimezone:
          $ref: "#/components/schemas/MaintenanceWindowTimezone"
        Duration:
          $ref: "#/components/schemas/MaintenanceWindowDurationHours"
        Cutoff:
          $ref: "#/components/schemas/MaintenanceWindowCutoff"
        AllowUnassociatedTargets:
          $ref: "#/components/schemas/MaintenanceWindowAllowUnassociatedTargets"
        Enabled:
          $ref: "#/components/schemas/MaintenanceWindowEnabled"
        Replace:
          $ref: "#/components/schemas/Boolean"
    UpdateMaintenanceWindowTargetResult:
      type: object
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        WindowTargetId:
          $ref: "#/components/schemas/MaintenanceWindowTargetId"
        Targets:
          $ref: "#/components/schemas/Targets"
        OwnerInformation:
          $ref: "#/components/schemas/OwnerInformation"
        Name:
          $ref: "#/components/schemas/MaintenanceWindowName"
        Description:
          $ref: "#/components/schemas/MaintenanceWindowDescription"
    UpdateMaintenanceWindowTargetRequest:
      type: object
      required:
        - WindowId
        - WindowTargetId
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        WindowTargetId:
          $ref: "#/components/schemas/MaintenanceWindowTargetId"
        Targets:
          $ref: "#/components/schemas/Targets"
        OwnerInformation:
          $ref: "#/components/schemas/OwnerInformation"
        Name:
          $ref: "#/components/schemas/MaintenanceWindowName"
        Description:
          $ref: "#/components/schemas/MaintenanceWindowDescription"
        Replace:
          $ref: "#/components/schemas/Boolean"
    UpdateMaintenanceWindowTaskResult:
      type: object
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        WindowTaskId:
          $ref: "#/components/schemas/MaintenanceWindowTaskId"
        Targets:
          $ref: "#/components/schemas/Targets"
        TaskArn:
          $ref: "#/components/schemas/MaintenanceWindowTaskArn"
        ServiceRoleArn:
          $ref: "#/components/schemas/ServiceRole"
        TaskParameters:
          $ref: "#/components/schemas/MaintenanceWindowTaskParameters"
        TaskInvocationParameters:
          $ref: "#/components/schemas/MaintenanceWindowTaskInvocationParameters"
        Priority:
          $ref: "#/components/schemas/MaintenanceWindowTaskPriority"
        MaxConcurrency:
          $ref: "#/components/schemas/MaxConcurrency"
        MaxErrors:
          $ref: "#/components/schemas/MaxErrors"
        LoggingInfo:
          $ref: "#/components/schemas/LoggingInfo"
        Name:
          $ref: "#/components/schemas/MaintenanceWindowName"
        Description:
          $ref: "#/components/schemas/MaintenanceWindowDescription"
    UpdateMaintenanceWindowTaskRequest:
      type: object
      required:
        - WindowId
        - WindowTaskId
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        WindowTaskId:
          $ref: "#/components/schemas/MaintenanceWindowTaskId"
        Targets:
          $ref: "#/components/schemas/Targets"
        TaskArn:
          $ref: "#/components/schemas/MaintenanceWindowTaskArn"
        ServiceRoleArn:
          $ref: "#/components/schemas/ServiceRole"
        TaskParameters:
          $ref: "#/components/schemas/MaintenanceWindowTaskParameters"
        TaskInvocationParameters:
          $ref: "#/components/schemas/MaintenanceWindowTaskInvocationParameters"
        Priority:
          $ref: "#/components/schemas/MaintenanceWindowTaskPriority"
        MaxConcurrency:
          $ref: "#/components/schemas/MaxConcurrency"
        MaxErrors:
          $ref: "#/components/schemas/MaxErrors"
        LoggingInfo:
          $ref: "#/components/schemas/LoggingInfo"
        Name:
          $ref: "#/components/schemas/MaintenanceWindowName"
        Description:
          $ref: "#/components/schemas/MaintenanceWindowDescription"
        Replace:
          $ref: "#/components/schemas/Boolean"
    UpdateManagedInstanceRoleResult:
      type: object
      properties: {}
    UpdateManagedInstanceRoleRequest:
      type: object
      required:
        - InstanceId
        - IamRole
      properties:
        InstanceId:
          $ref: "#/components/schemas/ManagedInstanceId"
        IamRole:
          $ref: "#/components/schemas/IamRole"
    UpdateOpsItemResponse:
      type: object
      properties: {}
    UpdateOpsItemRequest:
      type: object
      required:
        - OpsItemId
      properties:
        Description:
          $ref: "#/components/schemas/OpsItemDescription"
        OperationalData:
          $ref: "#/components/schemas/OpsItemOperationalData"
        OperationalDataToDelete:
          $ref: "#/components/schemas/OpsItemOpsDataKeysList"
        Notifications:
          $ref: "#/components/schemas/OpsItemNotifications"
        Priority:
          $ref: "#/components/schemas/OpsItemPriority"
        RelatedOpsItems:
          $ref: "#/components/schemas/RelatedOpsItems"
        Status:
          $ref: "#/components/schemas/OpsItemStatus"
        OpsItemId:
          $ref: "#/components/schemas/OpsItemId"
        Title:
          $ref: "#/components/schemas/OpsItemTitle"
    UpdatePatchBaselineResult:
      type: object
      properties:
        BaselineId:
          $ref: "#/components/schemas/BaselineId"
        Name:
          $ref: "#/components/schemas/BaselineName"
        OperatingSystem:
          $ref: "#/components/schemas/OperatingSystem"
        GlobalFilters:
          $ref: "#/components/schemas/PatchFilterGroup"
        ApprovalRules:
          $ref: "#/components/schemas/PatchRuleGroup"
        ApprovedPatches:
          $ref: "#/components/schemas/PatchIdList"
        ApprovedPatchesComplianceLevel:
          $ref: "#/components/schemas/PatchComplianceLevel"
        ApprovedPatchesEnableNonSecurity:
          $ref: "#/components/schemas/Boolean"
        RejectedPatches:
          $ref: "#/components/schemas/PatchIdList"
        RejectedPatchesAction:
          $ref: "#/components/schemas/PatchAction"
        CreatedDate:
          $ref: "#/components/schemas/DateTime"
        ModifiedDate:
          $ref: "#/components/schemas/DateTime"
        Description:
          $ref: "#/components/schemas/BaselineDescription"
        Sources:
          $ref: "#/components/schemas/PatchSourceList"
    UpdatePatchBaselineRequest:
      type: object
      required:
        - BaselineId
      properties:
        BaselineId:
          $ref: "#/components/schemas/BaselineId"
        Name:
          $ref: "#/components/schemas/BaselineName"
        GlobalFilters:
          $ref: "#/components/schemas/PatchFilterGroup"
        ApprovalRules:
          $ref: "#/components/schemas/PatchRuleGroup"
        ApprovedPatches:
          $ref: "#/components/schemas/PatchIdList"
        ApprovedPatchesComplianceLevel:
          $ref: "#/components/schemas/PatchComplianceLevel"
        ApprovedPatchesEnableNonSecurity:
          $ref: "#/components/schemas/Boolean"
        RejectedPatches:
          $ref: "#/components/schemas/PatchIdList"
        RejectedPatchesAction:
          $ref: "#/components/schemas/PatchAction"
        Description:
          $ref: "#/components/schemas/BaselineDescription"
        Sources:
          $ref: "#/components/schemas/PatchSourceList"
        Replace:
          $ref: "#/components/schemas/Boolean"
    UpdateServiceSettingResult:
      type: object
      properties: {}
      description: The result body of the UpdateServiceSetting API action.
    UpdateServiceSettingRequest:
      type: object
      required:
        - SettingId
        - SettingValue
      properties:
        SettingId:
          $ref: "#/components/schemas/ServiceSettingId"
        SettingValue:
          $ref: "#/components/schemas/ServiceSettingValue"
      description: The request body of the UpdateServiceSetting API action.
    Account:
      type: string
    AccountId:
      type: string
      pattern: \(\?i\)all\|[0-9]\{12\}
    AccountIdList:
      type: array
      items:
        $ref: "#/components/schemas/AccountId"
      maxItems: 20
    Accounts:
      type: array
      items:
        $ref: "#/components/schemas/Account"
      minItems: 1
      maxItems: 50
    ActivationId:
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
    ActivationDescription:
      type: string
      minLength: 0
      maxLength: 256
    DefaultInstanceName:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 256
    IamRole:
      type: string
      maxLength: 64
    RegistrationLimit:
      type: integer
      minimum: 1
      maximum: 1000
    RegistrationsCount:
      type: integer
      minimum: 1
      maximum: 1000
    ExpirationDate:
      type: string
      format: date-time
    Boolean:
      type: boolean
    CreatedDate:
      type: string
      format: date-time
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
      maxItems: 1000
    Activation:
      type: object
      properties:
        ActivationId:
          $ref: "#/components/schemas/ActivationId"
        Description:
          $ref: "#/components/schemas/ActivationDescription"
        DefaultInstanceName:
          $ref: "#/components/schemas/DefaultInstanceName"
        IamRole:
          $ref: "#/components/schemas/IamRole"
        RegistrationLimit:
          $ref: "#/components/schemas/RegistrationLimit"
        RegistrationsCount:
          $ref: "#/components/schemas/RegistrationsCount"
        ExpirationDate:
          $ref: "#/components/schemas/ExpirationDate"
        Expired:
          $ref: "#/components/schemas/Boolean"
        CreatedDate:
          $ref: "#/components/schemas/CreatedDate"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: An activation registers one or more on-premises servers or virtual
        machines (VMs) with AWS so that you can configure those servers or VMs
        using Run Command. A server or VM that has been registered with AWS is
        called a managed instance.
    ActivationCode:
      type: string
      minLength: 20
      maxLength: 250
    ActivationList:
      type: array
      items:
        $ref: "#/components/schemas/Activation"
    ResourceTypeForTagging:
      type: string
      enum:
        - Document
        - ManagedInstance
        - MaintenanceWindow
        - Parameter
        - PatchBaseline
        - OpsItem
    ResourceId:
      type: string
    AgentErrorCode:
      type: string
      maxLength: 10
    AggregatorSchemaOnly:
      type: boolean
    AllowedPattern:
      type: string
      minLength: 0
      maxLength: 1024
    ApproveAfterDays:
      type: integer
      minimum: 0
      maximum: 100
    DocumentARN:
      type: string
      pattern: ^[a-zA-Z0-9_\-.:/]{3,128}$
    InstanceId:
      type: string
      pattern: (^i-(\w{8}|\w{17})$)|(^mi-\w{17}$)
    AssociationId:
      type: string
      pattern: "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F\
        ]{12}"
    AssociationVersion:
      type: string
      pattern: ([$]LATEST)|([1-9][0-9]*)
    DocumentVersion:
      type: string
      pattern: ([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)
    Targets:
      type: array
      items:
        $ref: "#/components/schemas/Target"
      minItems: 0
      maxItems: 5
    DateTime:
      type: string
      format: date-time
    AssociationOverview:
      type: object
      properties:
        Status:
          $ref: "#/components/schemas/StatusName"
        DetailedStatus:
          $ref: "#/components/schemas/StatusName"
        AssociationStatusAggregatedCount:
          $ref: "#/components/schemas/AssociationStatusAggregatedCount"
      description: Information about the association.
    ScheduleExpression:
      type: string
      minLength: 1
      maxLength: 256
    AssociationName:
      type: string
      pattern: ^[a-zA-Z0-9_\-.]{3,128}$
    Association:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/DocumentARN"
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        AssociationId:
          $ref: "#/components/schemas/AssociationId"
        AssociationVersion:
          $ref: "#/components/schemas/AssociationVersion"
        DocumentVersion:
          $ref: "#/components/schemas/DocumentVersion"
        Targets:
          $ref: "#/components/schemas/Targets"
        LastExecutionDate:
          $ref: "#/components/schemas/DateTime"
        Overview:
          $ref: "#/components/schemas/AssociationOverview"
        ScheduleExpression:
          $ref: "#/components/schemas/ScheduleExpression"
        AssociationName:
          $ref: "#/components/schemas/AssociationName"
      description: Describes an association of a Systems Manager document and an instance.
    AssociationComplianceSeverity:
      type: string
      enum:
        - CRITICAL
        - HIGH
        - MEDIUM
        - LOW
        - UNSPECIFIED
    AssociationStatus:
      type: object
      required:
        - Date
        - Name
        - Message
      properties:
        Date:
          $ref: "#/components/schemas/DateTime"
        Name:
          $ref: "#/components/schemas/AssociationStatusName"
        Message:
          $ref: "#/components/schemas/StatusMessage"
        AdditionalInfo:
          $ref: "#/components/schemas/StatusAdditionalInfo"
      description: Describes an association status.
    AutomationTargetParameterName:
      type: string
      minLength: 1
      maxLength: 50
    Parameters:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/ParameterValueList"
    InstanceAssociationOutputLocation:
      type: object
      properties:
        S3Location:
          $ref: "#/components/schemas/S3OutputLocation"
      description: An Amazon S3 bucket where you want to store the results of this request.
    MaxErrors:
      type: string
      pattern: ^([1-9][0-9]*|[0]|[1-9][0-9]%|[0-9]%|100%)$
      minLength: 1
      maxLength: 7
    MaxConcurrency:
      type: string
      pattern: ^([1-9][0-9]*|[1-9][0-9]%|[1-9]%|100%)$
      minLength: 1
      maxLength: 7
    AssociationDescription:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/DocumentARN"
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        AssociationVersion:
          $ref: "#/components/schemas/AssociationVersion"
        Date:
          $ref: "#/components/schemas/DateTime"
        LastUpdateAssociationDate:
          $ref: "#/components/schemas/DateTime"
        Status:
          $ref: "#/components/schemas/AssociationStatus"
        Overview:
          $ref: "#/components/schemas/AssociationOverview"
        DocumentVersion:
          $ref: "#/components/schemas/DocumentVersion"
        AutomationTargetParameterName:
          $ref: "#/components/schemas/AutomationTargetParameterName"
        Parameters:
          $ref: "#/components/schemas/Parameters"
        AssociationId:
          $ref: "#/components/schemas/AssociationId"
        Targets:
          $ref: "#/components/schemas/Targets"
        ScheduleExpression:
          $ref: "#/components/schemas/ScheduleExpression"
        OutputLocation:
          $ref: "#/components/schemas/InstanceAssociationOutputLocation"
        LastExecutionDate:
          $ref: "#/components/schemas/DateTime"
        LastSuccessfulExecutionDate:
          $ref: "#/components/schemas/DateTime"
        AssociationName:
          $ref: "#/components/schemas/AssociationName"
        MaxErrors:
          $ref: "#/components/schemas/MaxErrors"
        MaxConcurrency:
          $ref: "#/components/schemas/MaxConcurrency"
        ComplianceSeverity:
          $ref: "#/components/schemas/AssociationComplianceSeverity"
      description: Describes the parameters for a document.
    AssociationDescriptionList:
      type: array
      items:
        $ref: "#/components/schemas/AssociationDescription"
    AssociationExecutionId:
      type: string
      pattern: "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F\
        ]{12}"
    StatusName:
      type: string
    ResourceCountByStatus:
      type: string
    AssociationExecution:
      type: object
      properties:
        AssociationId:
          $ref: "#/components/schemas/AssociationId"
        AssociationVersion:
          $ref: "#/components/schemas/AssociationVersion"
        ExecutionId:
          $ref: "#/components/schemas/AssociationExecutionId"
        Status:
          $ref: "#/components/schemas/StatusName"
        DetailedStatus:
          $ref: "#/components/schemas/StatusName"
        CreatedTime:
          $ref: "#/components/schemas/DateTime"
        LastExecutionDate:
          $ref: "#/components/schemas/DateTime"
        ResourceCountByStatus:
          $ref: "#/components/schemas/ResourceCountByStatus"
      description: Includes information about the specified association.
    AssociationExecutionFilterKey:
      type: string
      enum:
        - ExecutionId
        - Status
        - CreatedTime
    AssociationExecutionFilterValue:
      type: string
      minLength: 1
    AssociationFilterOperatorType:
      type: string
      enum:
        - EQUAL
        - LESS_THAN
        - GREATER_THAN
    AssociationExecutionFilter:
      type: object
      required:
        - Key
        - Value
        - Type
      properties:
        Key:
          $ref: "#/components/schemas/AssociationExecutionFilterKey"
        Value:
          $ref: "#/components/schemas/AssociationExecutionFilterValue"
        Type:
          $ref: "#/components/schemas/AssociationFilterOperatorType"
      description: Filters used in the request.
    AssociationExecutionFilterList:
      type: array
      items:
        $ref: "#/components/schemas/AssociationExecutionFilter"
      minItems: 1
    AssociationResourceId:
      type: string
      minLength: 1
      maxLength: 100
    AssociationResourceType:
      type: string
      minLength: 1
      maxLength: 50
    OutputSource:
      type: object
      properties:
        OutputSourceId:
          $ref: "#/components/schemas/OutputSourceId"
        OutputSourceType:
          $ref: "#/components/schemas/OutputSourceType"
      description: Information about the source where the association execution details are
        stored.
    AssociationExecutionTarget:
      type: object
      properties:
        AssociationId:
          $ref: "#/components/schemas/AssociationId"
        AssociationVersion:
          $ref: "#/components/schemas/AssociationVersion"
        ExecutionId:
          $ref: "#/components/schemas/AssociationExecutionId"
        ResourceId:
          $ref: "#/components/schemas/AssociationResourceId"
        ResourceType:
          $ref: "#/components/schemas/AssociationResourceType"
        Status:
          $ref: "#/components/schemas/StatusName"
        DetailedStatus:
          $ref: "#/components/schemas/StatusName"
        LastExecutionDate:
          $ref: "#/components/schemas/DateTime"
        OutputSource:
          $ref: "#/components/schemas/OutputSource"
      description: Includes information about the specified association execution.
    AssociationExecutionTargetsFilterKey:
      type: string
      enum:
        - Status
        - ResourceId
        - ResourceType
    AssociationExecutionTargetsFilterValue:
      type: string
      minLength: 1
    AssociationExecutionTargetsFilter:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: "#/components/schemas/AssociationExecutionTargetsFilterKey"
        Value:
          $ref: "#/components/schemas/AssociationExecutionTargetsFilterValue"
      description: Filters for the association execution.
    AssociationExecutionTargetsFilterList:
      type: array
      items:
        $ref: "#/components/schemas/AssociationExecutionTargetsFilter"
      minItems: 1
    AssociationExecutionTargetsList:
      type: array
      items:
        $ref: "#/components/schemas/AssociationExecutionTarget"
    AssociationExecutionsList:
      type: array
      items:
        $ref: "#/components/schemas/AssociationExecution"
    AssociationFilterKey:
      type: string
      enum:
        - InstanceId
        - Name
        - AssociationId
        - AssociationStatusName
        - LastExecutedBefore
        - LastExecutedAfter
        - AssociationName
    AssociationFilterValue:
      type: string
      minLength: 1
    AssociationFilter:
      type: object
      required:
        - key
        - value
      properties:
        key:
          $ref: "#/components/schemas/AssociationFilterKey"
        value:
          $ref: "#/components/schemas/AssociationFilterValue"
      description: Describes a filter.
    AssociationFilterList:
      type: array
      items:
        $ref: "#/components/schemas/AssociationFilter"
      minItems: 1
    AssociationIdList:
      type: array
      items:
        $ref: "#/components/schemas/AssociationId"
      minItems: 1
      maxItems: 10
    AssociationList:
      type: array
      items:
        $ref: "#/components/schemas/Association"
    AssociationStatusAggregatedCount:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/InstanceCount"
    AssociationStatusName:
      type: string
      enum:
        - Pending
        - Success
        - Failed
    StatusMessage:
      type: string
      minLength: 1
      maxLength: 1024
    StatusAdditionalInfo:
      type: string
      maxLength: 1024
    InstanceCount:
      type: integer
    AssociationVersionInfo:
      type: object
      properties:
        AssociationId:
          $ref: "#/components/schemas/AssociationId"
        AssociationVersion:
          $ref: "#/components/schemas/AssociationVersion"
        CreatedDate:
          $ref: "#/components/schemas/DateTime"
        Name:
          $ref: "#/components/schemas/DocumentARN"
        DocumentVersion:
          $ref: "#/components/schemas/DocumentVersion"
        Parameters:
          $ref: "#/components/schemas/Parameters"
        Targets:
          $ref: "#/components/schemas/Targets"
        ScheduleExpression:
          $ref: "#/components/schemas/ScheduleExpression"
        OutputLocation:
          $ref: "#/components/schemas/InstanceAssociationOutputLocation"
        AssociationName:
          $ref: "#/components/schemas/AssociationName"
        MaxErrors:
          $ref: "#/components/schemas/MaxErrors"
        MaxConcurrency:
          $ref: "#/components/schemas/MaxConcurrency"
        ComplianceSeverity:
          $ref: "#/components/schemas/AssociationComplianceSeverity"
      description: Information about the association version.
    AssociationVersionList:
      type: array
      items:
        $ref: "#/components/schemas/AssociationVersionInfo"
      minItems: 1
    AttachmentName:
      type: string
      pattern: ^[a-zA-Z0-9_\-.]{3,128}$
    ContentLength:
      type: integer
    AttachmentHash:
      type: string
      maxLength: 256
    AttachmentHashType:
      type: string
      enum:
        - Sha256
    AttachmentUrl:
      type: string
    AttachmentContent:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/AttachmentName"
        Size:
          $ref: "#/components/schemas/ContentLength"
        Hash:
          $ref: "#/components/schemas/AttachmentHash"
        HashType:
          $ref: "#/components/schemas/AttachmentHashType"
        Url:
          $ref: "#/components/schemas/AttachmentUrl"
      description: A structure that includes attributes that describe a document attachment.
    AttachmentContentList:
      type: array
      items:
        $ref: "#/components/schemas/AttachmentContent"
    AttachmentInformation:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/AttachmentName"
      description: An attribute of an attachment, such as the attachment name.
    AttachmentInformationList:
      type: array
      items:
        $ref: "#/components/schemas/AttachmentInformation"
    AttachmentsSourceKey:
      type: string
      enum:
        - SourceUrl
    AttachmentsSourceValues:
      type: array
      items:
        $ref: "#/components/schemas/AttachmentsSourceValue"
      minItems: 1
      maxItems: 1
    AttachmentsSource:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/AttachmentsSourceKey"
        Values:
          $ref: "#/components/schemas/AttachmentsSourceValues"
      description: A key and value pair that identifies the location of an attachment to a
        document.
    AttachmentsSourceList:
      type: array
      items:
        $ref: "#/components/schemas/AttachmentsSource"
      minItems: 0
      maxItems: 1
    AttachmentsSourceValue:
      type: string
      minLength: 1
      maxLength: 1024
    AttributeName:
      type: string
      minLength: 1
      maxLength: 64
    AttributeValue:
      type: string
      minLength: 0
      maxLength: 4096
    AutomationActionName:
      type: string
      pattern: ^aws:[a-zA-Z]{3,25}$
    AutomationExecutionId:
      type: string
      minLength: 36
      maxLength: 36
    DocumentName:
      type: string
      pattern: ^[a-zA-Z0-9_\-.]{3,128}$
    AutomationExecutionStatus:
      type: string
      enum:
        - Pending
        - InProgress
        - Waiting
        - Success
        - TimedOut
        - Cancelling
        - Cancelled
        - Failed
    StepExecutionList:
      type: array
      items:
        $ref: "#/components/schemas/StepExecution"
    AutomationParameterMap:
      type: object
      minProperties: 1
      maxProperties: 200
      additionalProperties:
        $ref: "#/components/schemas/AutomationParameterValueList"
    String:
      type: string
    ExecutionMode:
      type: string
      enum:
        - Auto
        - Interactive
    AutomationParameterKey:
      type: string
      minLength: 1
      maxLength: 50
    TargetMaps:
      type: array
      items:
        $ref: "#/components/schemas/TargetMap"
      minItems: 0
      maxItems: 300
    ResolvedTargets:
      type: object
      properties:
        ParameterValues:
          $ref: "#/components/schemas/TargetParameterList"
        Truncated:
          $ref: "#/components/schemas/Boolean"
      description: Information about targets that resolved during the Automation execution.
    TargetLocations:
      type: array
      items:
        $ref: "#/components/schemas/TargetLocation"
      minItems: 1
      maxItems: 100
    ProgressCounters:
      type: object
      properties:
        TotalSteps:
          $ref: "#/components/schemas/Integer"
        SuccessSteps:
          $ref: "#/components/schemas/Integer"
        FailedSteps:
          $ref: "#/components/schemas/Integer"
        CancelledSteps:
          $ref: "#/components/schemas/Integer"
        TimedOutSteps:
          $ref: "#/components/schemas/Integer"
      description: An aggregate of step execution statuses displayed in the AWS Console for
        a multi-Region and multi-account Automation execution.
    AutomationExecution:
      type: object
      properties:
        AutomationExecutionId:
          $ref: "#/components/schemas/AutomationExecutionId"
        DocumentName:
          $ref: "#/components/schemas/DocumentName"
        DocumentVersion:
          $ref: "#/components/schemas/DocumentVersion"
        ExecutionStartTime:
          $ref: "#/components/schemas/DateTime"
        ExecutionEndTime:
          $ref: "#/components/schemas/DateTime"
        AutomationExecutionStatus:
          $ref: "#/components/schemas/AutomationExecutionStatus"
        StepExecutions:
          $ref: "#/components/schemas/StepExecutionList"
        StepExecutionsTruncated:
          $ref: "#/components/schemas/Boolean"
        Parameters:
          $ref: "#/components/schemas/AutomationParameterMap"
        Outputs:
          $ref: "#/components/schemas/AutomationParameterMap"
        FailureMessage:
          $ref: "#/components/schemas/String"
        Mode:
          $ref: "#/components/schemas/ExecutionMode"
        ParentAutomationExecutionId:
          $ref: "#/components/schemas/AutomationExecutionId"
        ExecutedBy:
          $ref: "#/components/schemas/String"
        CurrentStepName:
          $ref: "#/components/schemas/String"
        CurrentAction:
          $ref: "#/components/schemas/String"
        TargetParameterName:
          $ref: "#/components/schemas/AutomationParameterKey"
        Targets:
          $ref: "#/components/schemas/Targets"
        TargetMaps:
          $ref: "#/components/schemas/TargetMaps"
        ResolvedTargets:
          $ref: "#/components/schemas/ResolvedTargets"
        MaxConcurrency:
          $ref: "#/components/schemas/MaxConcurrency"
        MaxErrors:
          $ref: "#/components/schemas/MaxErrors"
        Target:
          $ref: "#/components/schemas/String"
        TargetLocations:
          $ref: "#/components/schemas/TargetLocations"
        ProgressCounters:
          $ref: "#/components/schemas/ProgressCounters"
      description: Detailed information about the current state of an individual Automation
        execution.
    AutomationExecutionFilterKey:
      type: string
      enum:
        - DocumentNamePrefix
        - ExecutionStatus
        - ExecutionId
        - ParentExecutionId
        - CurrentAction
        - StartTimeBefore
        - StartTimeAfter
        - AutomationType
    AutomationExecutionFilterValueList:
      type: array
      items:
        $ref: "#/components/schemas/AutomationExecutionFilterValue"
      minItems: 1
      maxItems: 10
    AutomationExecutionFilter:
      type: object
      required:
        - Key
        - Values
      properties:
        Key:
          $ref: "#/components/schemas/AutomationExecutionFilterKey"
        Values:
          $ref: "#/components/schemas/AutomationExecutionFilterValueList"
      description: A filter used to match specific automation executions. This is used to
        limit the scope of Automation execution information returned.
    AutomationExecutionFilterList:
      type: array
      items:
        $ref: "#/components/schemas/AutomationExecutionFilter"
      minItems: 1
      maxItems: 10
    AutomationExecutionFilterValue:
      type: string
      minLength: 1
      maxLength: 150
    AutomationType:
      type: string
      enum:
        - CrossAccount
        - Local
    AutomationExecutionMetadata:
      type: object
      properties:
        AutomationExecutionId:
          $ref: "#/components/schemas/AutomationExecutionId"
        DocumentName:
          $ref: "#/components/schemas/DocumentName"
        DocumentVersion:
          $ref: "#/components/schemas/DocumentVersion"
        AutomationExecutionStatus:
          $ref: "#/components/schemas/AutomationExecutionStatus"
        ExecutionStartTime:
          $ref: "#/components/schemas/DateTime"
        ExecutionEndTime:
          $ref: "#/components/schemas/DateTime"
        ExecutedBy:
          $ref: "#/components/schemas/String"
        LogFile:
          $ref: "#/components/schemas/String"
        Outputs:
          $ref: "#/components/schemas/AutomationParameterMap"
        Mode:
          $ref: "#/components/schemas/ExecutionMode"
        ParentAutomationExecutionId:
          $ref: "#/components/schemas/AutomationExecutionId"
        CurrentStepName:
          $ref: "#/components/schemas/String"
        CurrentAction:
          $ref: "#/components/schemas/String"
        FailureMessage:
          $ref: "#/components/schemas/String"
        TargetParameterName:
          $ref: "#/components/schemas/AutomationParameterKey"
        Targets:
          $ref: "#/components/schemas/Targets"
        TargetMaps:
          $ref: "#/components/schemas/TargetMaps"
        ResolvedTargets:
          $ref: "#/components/schemas/ResolvedTargets"
        MaxConcurrency:
          $ref: "#/components/schemas/MaxConcurrency"
        MaxErrors:
          $ref: "#/components/schemas/MaxErrors"
        Target:
          $ref: "#/components/schemas/String"
        AutomationType:
          $ref: "#/components/schemas/AutomationType"
      description: Details about a specific Automation execution.
    AutomationExecutionMetadataList:
      type: array
      items:
        $ref: "#/components/schemas/AutomationExecutionMetadata"
    AutomationParameterValueList:
      type: array
      items:
        $ref: "#/components/schemas/AutomationParameterValue"
      minItems: 0
      maxItems: 10
    AutomationParameterValue:
      type: string
      minLength: 1
      maxLength: 512
    BaselineDescription:
      type: string
      minLength: 1
      maxLength: 1024
    BaselineId:
      type: string
      pattern: ^[a-zA-Z0-9_\-:/]{20,128}$
      minLength: 20
      maxLength: 128
    BaselineName:
      type: string
      pattern: ^[a-zA-Z0-9_\-.]{3,128}$
      minLength: 3
      maxLength: 128
    BatchErrorMessage:
      type: string
    CommandId:
      type: string
      minLength: 36
      maxLength: 36
    InstanceIdList:
      type: array
      items:
        $ref: "#/components/schemas/InstanceId"
      minItems: 0
      maxItems: 50
    MaintenanceWindowExecutionId:
      type: string
      pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
      minLength: 36
      maxLength: 36
    ClientToken:
      type: string
      minLength: 1
      maxLength: 64
    CloudWatchLogGroupName:
      type: string
      pattern: "[\\.\\-_/#A-Za-z0-9]+"
      minLength: 1
      maxLength: 512
    CloudWatchOutputEnabled:
      type: boolean
    CloudWatchOutputConfig:
      type: object
      properties:
        CloudWatchLogGroupName:
          $ref: "#/components/schemas/CloudWatchLogGroupName"
        CloudWatchOutputEnabled:
          $ref: "#/components/schemas/CloudWatchOutputEnabled"
      description: Configuration options for sending command output to CloudWatch Logs.
    Comment:
      type: string
      maxLength: 100
    CommandStatus:
      type: string
      enum:
        - Pending
        - InProgress
        - Success
        - Cancelled
        - Failed
        - TimedOut
        - Cancelling
    StatusDetails:
      type: string
      minLength: 0
      maxLength: 100
    S3Region:
      type: string
      minLength: 3
      maxLength: 20
    S3BucketName:
      type: string
      minLength: 3
      maxLength: 63
    S3KeyPrefix:
      type: string
      maxLength: 500
    TargetCount:
      type: integer
    CompletedCount:
      type: integer
    ErrorCount:
      type: integer
    DeliveryTimedOutCount:
      type: integer
    ServiceRole:
      type: string
    NotificationConfig:
      type: object
      properties:
        NotificationArn:
          $ref: "#/components/schemas/NotificationArn"
        NotificationEvents:
          $ref: "#/components/schemas/NotificationEventList"
        NotificationType:
          $ref: "#/components/schemas/NotificationType"
      description: Configurations for sending notifications.
    Command:
      type: object
      properties:
        CommandId:
          $ref: "#/components/schemas/CommandId"
        DocumentName:
          $ref: "#/components/schemas/DocumentName"
        DocumentVersion:
          $ref: "#/components/schemas/DocumentVersion"
        Comment:
          $ref: "#/components/schemas/Comment"
        ExpiresAfter:
          $ref: "#/components/schemas/DateTime"
        Parameters:
          $ref: "#/components/schemas/Parameters"
        InstanceIds:
          $ref: "#/components/schemas/InstanceIdList"
        Targets:
          $ref: "#/components/schemas/Targets"
        RequestedDateTime:
          $ref: "#/components/schemas/DateTime"
        Status:
          $ref: "#/components/schemas/CommandStatus"
        StatusDetails:
          $ref: "#/components/schemas/StatusDetails"
        OutputS3Region:
          $ref: "#/components/schemas/S3Region"
        OutputS3BucketName:
          $ref: "#/components/schemas/S3BucketName"
        OutputS3KeyPrefix:
          $ref: "#/components/schemas/S3KeyPrefix"
        MaxConcurrency:
          $ref: "#/components/schemas/MaxConcurrency"
        MaxErrors:
          $ref: "#/components/schemas/MaxErrors"
        TargetCount:
          $ref: "#/components/schemas/TargetCount"
        CompletedCount:
          $ref: "#/components/schemas/CompletedCount"
        ErrorCount:
          $ref: "#/components/schemas/ErrorCount"
        DeliveryTimedOutCount:
          $ref: "#/components/schemas/DeliveryTimedOutCount"
        ServiceRole:
          $ref: "#/components/schemas/ServiceRole"
        NotificationConfig:
          $ref: "#/components/schemas/NotificationConfig"
        CloudWatchOutputConfig:
          $ref: "#/components/schemas/CloudWatchOutputConfig"
      description: Describes a command request.
    CommandFilterKey:
      type: string
      enum:
        - InvokedAfter
        - InvokedBefore
        - Status
        - ExecutionStage
        - DocumentName
    CommandFilterValue:
      type: string
      minLength: 1
      maxLength: 128
    CommandFilter:
      type: object
      required:
        - key
        - value
      properties:
        key:
          $ref: "#/components/schemas/CommandFilterKey"
        value:
          $ref: "#/components/schemas/CommandFilterValue"
      description: Describes a command filter.
    CommandFilterList:
      type: array
      items:
        $ref: "#/components/schemas/CommandFilter"
      minItems: 1
      maxItems: 5
    InstanceTagName:
      type: string
      maxLength: 255
    CommandInvocationStatus:
      type: string
      enum:
        - Pending
        - InProgress
        - Delayed
        - Success
        - Cancelled
        - TimedOut
        - Failed
        - Cancelling
    InvocationTraceOutput:
      type: string
      maxLength: 2500
    Url:
      type: string
    CommandPluginList:
      type: array
      items:
        $ref: "#/components/schemas/CommandPlugin"
    CommandInvocation:
      type: object
      properties:
        CommandId:
          $ref: "#/components/schemas/CommandId"
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        InstanceName:
          $ref: "#/components/schemas/InstanceTagName"
        Comment:
          $ref: "#/components/schemas/Comment"
        DocumentName:
          $ref: "#/components/schemas/DocumentName"
        DocumentVersion:
          $ref: "#/components/schemas/DocumentVersion"
        RequestedDateTime:
          $ref: "#/components/schemas/DateTime"
        Status:
          $ref: "#/components/schemas/CommandInvocationStatus"
        StatusDetails:
          $ref: "#/components/schemas/StatusDetails"
        TraceOutput:
          $ref: "#/components/schemas/InvocationTraceOutput"
        StandardOutputUrl:
          $ref: "#/components/schemas/Url"
        StandardErrorUrl:
          $ref: "#/components/schemas/Url"
        CommandPlugins:
          $ref: "#/components/schemas/CommandPluginList"
        ServiceRole:
          $ref: "#/components/schemas/ServiceRole"
        NotificationConfig:
          $ref: "#/components/schemas/NotificationConfig"
        CloudWatchOutputConfig:
          $ref: "#/components/schemas/CloudWatchOutputConfig"
      description: "An invocation is copy of a command sent to a specific instance. A
        command can apply to one or more instances. A command invocation applies
        to one instance. For example, if a user runs SendCommand against three
        instances, then a command invocation is created for each requested
        instance ID. A command invocation returns status and detail information
        about a command you ran. "
    CommandInvocationList:
      type: array
      items:
        $ref: "#/components/schemas/CommandInvocation"
    CommandList:
      type: array
      items:
        $ref: "#/components/schemas/Command"
    CommandMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    CommandPluginName:
      type: string
      minLength: 4
    CommandPluginStatus:
      type: string
      enum:
        - Pending
        - InProgress
        - Success
        - TimedOut
        - Cancelled
        - Failed
    ResponseCode:
      type: integer
    CommandPluginOutput:
      type: string
      maxLength: 2500
    CommandPlugin:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/CommandPluginName"
        Status:
          $ref: "#/components/schemas/CommandPluginStatus"
        StatusDetails:
          $ref: "#/components/schemas/StatusDetails"
        ResponseCode:
          $ref: "#/components/schemas/ResponseCode"
        ResponseStartDateTime:
          $ref: "#/components/schemas/DateTime"
        ResponseFinishDateTime:
          $ref: "#/components/schemas/DateTime"
        Output:
          $ref: "#/components/schemas/CommandPluginOutput"
        StandardOutputUrl:
          $ref: "#/components/schemas/Url"
        StandardErrorUrl:
          $ref: "#/components/schemas/Url"
        OutputS3Region:
          $ref: "#/components/schemas/S3Region"
        OutputS3BucketName:
          $ref: "#/components/schemas/S3BucketName"
        OutputS3KeyPrefix:
          $ref: "#/components/schemas/S3KeyPrefix"
      description: Describes plugin details.
    ComplianceExecutionId:
      type: string
      maxLength: 100
    ComplianceExecutionType:
      type: string
      maxLength: 50
    ComplianceExecutionSummary:
      type: object
      required:
        - ExecutionTime
      properties:
        ExecutionTime:
          $ref: "#/components/schemas/DateTime"
        ExecutionId:
          $ref: "#/components/schemas/ComplianceExecutionId"
        ExecutionType:
          $ref: "#/components/schemas/ComplianceExecutionType"
      description: "A summary of the call execution that includes an execution ID, the type
        of execution (for example, <code>Command</code>), and the date/time of
        the execution using a datetime object that is saved in the following
        format: yyyy-MM-dd'T'HH:mm:ss'Z'."
    ComplianceFilterValue:
      type: string
    ComplianceTypeName:
      type: string
      pattern: "[A-Za-z0-9_\\-]\\w+|Custom:[a-zA-Z0-9_\\-]\\w+"
      minLength: 1
      maxLength: 100
    ComplianceResourceType:
      type: string
      minLength: 1
      maxLength: 50
    ComplianceResourceId:
      type: string
      minLength: 1
      maxLength: 100
    ComplianceItemId:
      type: string
      minLength: 1
      maxLength: 100
    ComplianceItemTitle:
      type: string
      maxLength: 500
    ComplianceStatus:
      type: string
      enum:
        - COMPLIANT
        - NON_COMPLIANT
    ComplianceSeverity:
      type: string
      enum:
        - CRITICAL
        - HIGH
        - MEDIUM
        - LOW
        - INFORMATIONAL
        - UNSPECIFIED
    ComplianceItemDetails:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/AttributeValue"
    ComplianceItem:
      type: object
      properties:
        ComplianceType:
          $ref: "#/components/schemas/ComplianceTypeName"
        ResourceType:
          $ref: "#/components/schemas/ComplianceResourceType"
        ResourceId:
          $ref: "#/components/schemas/ComplianceResourceId"
        Id:
          $ref: "#/components/schemas/ComplianceItemId"
        Title:
          $ref: "#/components/schemas/ComplianceItemTitle"
        Status:
          $ref: "#/components/schemas/ComplianceStatus"
        Severity:
          $ref: "#/components/schemas/ComplianceSeverity"
        ExecutionSummary:
          $ref: "#/components/schemas/ComplianceExecutionSummary"
        Details:
          $ref: "#/components/schemas/ComplianceItemDetails"
      description: Information about the compliance as defined by the resource type. For
        example, for a patch resource type, <code>Items</code> includes
        information about the PatchSeverity, Classification, etc.
    ComplianceItemContentHash:
      type: string
      maxLength: 256
    ComplianceItemEntry:
      type: object
      required:
        - Severity
        - Status
      properties:
        Id:
          $ref: "#/components/schemas/ComplianceItemId"
        Title:
          $ref: "#/components/schemas/ComplianceItemTitle"
        Severity:
          $ref: "#/components/schemas/ComplianceSeverity"
        Status:
          $ref: "#/components/schemas/ComplianceStatus"
        Details:
          $ref: "#/components/schemas/ComplianceItemDetails"
      description: Information about a compliance item.
    ComplianceItemEntryList:
      type: array
      items:
        $ref: "#/components/schemas/ComplianceItemEntry"
      minItems: 0
      maxItems: 10000
    ComplianceItemList:
      type: array
      items:
        $ref: "#/components/schemas/ComplianceItem"
    ComplianceQueryOperatorType:
      type: string
      enum:
        - EQUAL
        - NOT_EQUAL
        - BEGIN_WITH
        - LESS_THAN
        - GREATER_THAN
    ComplianceResourceIdList:
      type: array
      items:
        $ref: "#/components/schemas/ComplianceResourceId"
      minItems: 1
    ComplianceResourceTypeList:
      type: array
      items:
        $ref: "#/components/schemas/ComplianceResourceType"
      minItems: 1
    ComplianceStringFilterKey:
      type: string
      minLength: 1
      maxLength: 200
    ComplianceStringFilterValueList:
      type: array
      items:
        $ref: "#/components/schemas/ComplianceFilterValue"
      minItems: 1
      maxItems: 20
    ComplianceStringFilter:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/ComplianceStringFilterKey"
        Values:
          $ref: "#/components/schemas/ComplianceStringFilterValueList"
        Type:
          $ref: "#/components/schemas/ComplianceQueryOperatorType"
      description: One or more filters. Use a filter to return a more specific list of
        results.
    ComplianceStringFilterList:
      type: array
      items:
        $ref: "#/components/schemas/ComplianceStringFilter"
    ComplianceSummaryCount:
      type: integer
    CompliantSummary:
      type: object
      properties:
        CompliantCount:
          $ref: "#/components/schemas/ComplianceSummaryCount"
        SeveritySummary:
          $ref: "#/components/schemas/SeveritySummary"
      description: A summary of resources that are compliant. The summary is organized
        according to the resource count for each compliance type.
    NonCompliantSummary:
      type: object
      properties:
        NonCompliantCount:
          $ref: "#/components/schemas/ComplianceSummaryCount"
        SeveritySummary:
          $ref: "#/components/schemas/SeveritySummary"
      description: A summary of resources that are not compliant. The summary is organized
        according to resource type.
    ComplianceSummaryItem:
      type: object
      properties:
        ComplianceType:
          $ref: "#/components/schemas/ComplianceTypeName"
        CompliantSummary:
          $ref: "#/components/schemas/CompliantSummary"
        NonCompliantSummary:
          $ref: "#/components/schemas/NonCompliantSummary"
      description: A summary of compliance information by compliance type.
    ComplianceSummaryItemList:
      type: array
      items:
        $ref: "#/components/schemas/ComplianceSummaryItem"
    SeveritySummary:
      type: object
      properties:
        CriticalCount:
          $ref: "#/components/schemas/ComplianceSummaryCount"
        HighCount:
          $ref: "#/components/schemas/ComplianceSummaryCount"
        MediumCount:
          $ref: "#/components/schemas/ComplianceSummaryCount"
        LowCount:
          $ref: "#/components/schemas/ComplianceSummaryCount"
        InformationalCount:
          $ref: "#/components/schemas/ComplianceSummaryCount"
        UnspecifiedCount:
          $ref: "#/components/schemas/ComplianceSummaryCount"
      description: The number of managed instances found for each patch severity level
        defined in the request filter.
    ComputerName:
      type: string
      minLength: 1
      maxLength: 255
    ConnectionStatus:
      type: string
      enum:
        - Connected
        - NotConnected
    CreateAssociationBatchRequestEntries:
      type: array
      items:
        $ref: "#/components/schemas/CreateAssociationBatchRequestEntry"
      minItems: 1
    CreateAssociationBatchRequestEntry:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/DocumentARN"
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        Parameters:
          $ref: "#/components/schemas/Parameters"
        AutomationTargetParameterName:
          $ref: "#/components/schemas/AutomationTargetParameterName"
        DocumentVersion:
          $ref: "#/components/schemas/DocumentVersion"
        Targets:
          $ref: "#/components/schemas/Targets"
        ScheduleExpression:
          $ref: "#/components/schemas/ScheduleExpression"
        OutputLocation:
          $ref: "#/components/schemas/InstanceAssociationOutputLocation"
        AssociationName:
          $ref: "#/components/schemas/AssociationName"
        MaxErrors:
          $ref: "#/components/schemas/MaxErrors"
        MaxConcurrency:
          $ref: "#/components/schemas/MaxConcurrency"
        ComplianceSeverity:
          $ref: "#/components/schemas/AssociationComplianceSeverity"
      description: Describes the association of a Systems Manager SSM document and an
        instance.
    FailedCreateAssociationList:
      type: array
      items:
        $ref: "#/components/schemas/FailedCreateAssociation"
    DocumentContent:
      type: string
      minLength: 1
    DocumentVersionName:
      type: string
      pattern: ^[a-zA-Z0-9_\-.]{1,128}$
    DocumentType:
      type: string
      enum:
        - Command
        - Policy
        - Automation
        - Session
        - Package
    DocumentFormat:
      type: string
      enum:
        - YAML
        - JSON
    TargetType:
      type: string
      pattern: ^\/[\w\.\-\:\/]*$
      maxLength: 200
    DocumentDescription:
      type: object
      properties:
        Sha1:
          $ref: "#/components/schemas/DocumentSha1"
        Hash:
          $ref: "#/components/schemas/DocumentHash"
        HashType:
          $ref: "#/components/schemas/DocumentHashType"
        Name:
          $ref: "#/components/schemas/DocumentARN"
        VersionName:
          $ref: "#/components/schemas/DocumentVersionName"
        Owner:
          $ref: "#/components/schemas/DocumentOwner"
        CreatedDate:
          $ref: "#/components/schemas/DateTime"
        Status:
          $ref: "#/components/schemas/DocumentStatus"
        StatusInformation:
          $ref: "#/components/schemas/DocumentStatusInformation"
        DocumentVersion:
          $ref: "#/components/schemas/DocumentVersion"
        Description:
          $ref: "#/components/schemas/DescriptionInDocument"
        Parameters:
          $ref: "#/components/schemas/DocumentParameterList"
        PlatformTypes:
          $ref: "#/components/schemas/PlatformTypeList"
        DocumentType:
          $ref: "#/components/schemas/DocumentType"
        SchemaVersion:
          $ref: "#/components/schemas/DocumentSchemaVersion"
        LatestVersion:
          $ref: "#/components/schemas/DocumentVersion"
        DefaultVersion:
          $ref: "#/components/schemas/DocumentVersion"
        DocumentFormat:
          $ref: "#/components/schemas/DocumentFormat"
        TargetType:
          $ref: "#/components/schemas/TargetType"
        Tags:
          $ref: "#/components/schemas/TagList"
        AttachmentsInformation:
          $ref: "#/components/schemas/AttachmentInformationList"
      description: "Describes a Systems Manager document. "
    MaintenanceWindowName:
      type: string
      pattern: ^[a-zA-Z0-9_\-.]{3,128}$
      minLength: 3
      maxLength: 128
    MaintenanceWindowDescription:
      type: string
      minLength: 1
      maxLength: 128
      format: password
    MaintenanceWindowStringDateTime:
      type: string
    MaintenanceWindowSchedule:
      type: string
      minLength: 1
      maxLength: 256
    MaintenanceWindowTimezone:
      type: string
    MaintenanceWindowDurationHours:
      type: integer
      minimum: 1
      maximum: 24
    MaintenanceWindowCutoff:
      type: integer
      minimum: 0
      maximum: 23
    MaintenanceWindowAllowUnassociatedTargets:
      type: boolean
    MaintenanceWindowId:
      type: string
      pattern: ^mw-[0-9a-f]{17}$
      minLength: 20
      maxLength: 20
    OpsItemDescription:
      type: string
      minLength: 1
      maxLength: 1024
    OpsItemOperationalData:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/OpsItemDataValue"
    OpsItemNotifications:
      type: array
      items:
        $ref: "#/components/schemas/OpsItemNotification"
    OpsItemPriority:
      type: integer
      minimum: 1
      maximum: 5
    RelatedOpsItems:
      type: array
      items:
        $ref: "#/components/schemas/RelatedOpsItem"
    OpsItemSource:
      type: string
      minLength: 1
      maxLength: 64
    OpsItemTitle:
      type: string
      minLength: 1
      maxLength: 1024
    OperatingSystem:
      type: string
      enum:
        - WINDOWS
        - AMAZON_LINUX
        - AMAZON_LINUX_2
        - UBUNTU
        - REDHAT_ENTERPRISE_LINUX
        - SUSE
        - CENTOS
    PatchFilterGroup:
      type: object
      required:
        - PatchFilters
      properties:
        PatchFilters:
          $ref: "#/components/schemas/PatchFilterList"
      description: A set of patch filters, typically used for approval rules.
    PatchRuleGroup:
      type: object
      required:
        - PatchRules
      properties:
        PatchRules:
          $ref: "#/components/schemas/PatchRuleList"
      description: A set of rules defining the approval rules for a patch baseline.
    PatchIdList:
      type: array
      items:
        $ref: "#/components/schemas/PatchId"
      minItems: 0
      maxItems: 50
    PatchComplianceLevel:
      type: string
      enum:
        - CRITICAL
        - HIGH
        - MEDIUM
        - LOW
        - INFORMATIONAL
        - UNSPECIFIED
    PatchAction:
      type: string
      enum:
        - ALLOW_AS_DEPENDENCY
        - BLOCK
    PatchSourceList:
      type: array
      items:
        $ref: "#/components/schemas/PatchSource"
      minItems: 0
      maxItems: 20
    ResourceDataSyncName:
      type: string
      minLength: 1
      maxLength: 64
    ResourceDataSyncS3Destination:
      type: object
      required:
        - BucketName
        - SyncFormat
        - Region
      properties:
        BucketName:
          $ref: "#/components/schemas/ResourceDataSyncS3BucketName"
        Prefix:
          $ref: "#/components/schemas/ResourceDataSyncS3Prefix"
        SyncFormat:
          $ref: "#/components/schemas/ResourceDataSyncS3Format"
        Region:
          $ref: "#/components/schemas/ResourceDataSyncS3Region"
        AWSKMSKeyARN:
          $ref: "#/components/schemas/ResourceDataSyncAWSKMSKeyARN"
      description: Information about the target Amazon S3 bucket for the Resource Data Sync.
    DefaultBaseline:
      type: boolean
    InventoryItemTypeName:
      type: string
      pattern: ^(AWS|Custom):.*$
      minLength: 1
      maxLength: 100
    InventorySchemaDeleteOption:
      type: string
      enum:
        - DisableSchema
        - DeleteSchema
    DryRun:
      type: boolean
    InventoryDeletionId:
      type: string
    InventoryDeletionSummary:
      type: object
      properties:
        TotalCount:
          $ref: "#/components/schemas/TotalCount"
        RemainingCount:
          $ref: "#/components/schemas/RemainingCount"
        SummaryItems:
          $ref: "#/components/schemas/InventoryDeletionSummaryItems"
      description: Information about the delete operation.
    PSParameterName:
      type: string
      minLength: 1
      maxLength: 2048
    ParameterNameList:
      type: array
      items:
        $ref: "#/components/schemas/PSParameterName"
      minItems: 1
      maxItems: 10
    ManagedInstanceId:
      type: string
      pattern: ^mi-[0-9a-f]{17}$
    PatchGroup:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 256
    MaintenanceWindowTargetId:
      type: string
      pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
      minLength: 36
      maxLength: 36
    MaintenanceWindowTaskId:
      type: string
      pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
      minLength: 36
      maxLength: 36
    DescribeActivationsFilterKeys:
      type: string
      enum:
        - ActivationIds
        - DefaultInstanceName
        - IamRole
    StringList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    DescribeActivationsFilter:
      type: object
      properties:
        FilterKey:
          $ref: "#/components/schemas/DescribeActivationsFilterKeys"
        FilterValues:
          $ref: "#/components/schemas/StringList"
      description: Filter for the DescribeActivation API.
    DescribeActivationsFilterList:
      type: array
      items:
        $ref: "#/components/schemas/DescribeActivationsFilter"
    MaxResults:
      type: integer
      minimum: 1
      maximum: 50
    NextToken:
      type: string
    StepExecutionFilterList:
      type: array
      items:
        $ref: "#/components/schemas/StepExecutionFilter"
      minItems: 1
      maxItems: 6
    PatchOrchestratorFilterList:
      type: array
      items:
        $ref: "#/components/schemas/PatchOrchestratorFilter"
      minItems: 0
      maxItems: 5
    PatchBaselineMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    PatchList:
      type: array
      items:
        $ref: "#/components/schemas/Patch"
    DocumentPermissionType:
      type: string
      enum:
        - Share
    EffectiveInstanceAssociationMaxResults:
      type: integer
      minimum: 1
      maximum: 5
    InstanceAssociationList:
      type: array
      items:
        $ref: "#/components/schemas/InstanceAssociation"
    EffectivePatchList:
      type: array
      items:
        $ref: "#/components/schemas/EffectivePatch"
    InstanceAssociationStatusInfos:
      type: array
      items:
        $ref: "#/components/schemas/InstanceAssociationStatusInfo"
    InstanceInformationFilterList:
      type: array
      items:
        $ref: "#/components/schemas/InstanceInformationFilter"
      minItems: 0
    InstanceInformationStringFilterList:
      type: array
      items:
        $ref: "#/components/schemas/InstanceInformationStringFilter"
      minItems: 0
    MaxResultsEC2Compatible:
      type: integer
      minimum: 5
      maximum: 50
    InstanceInformationList:
      type: array
      items:
        $ref: "#/components/schemas/InstanceInformation"
    InstancePatchStateFilterList:
      type: array
      items:
        $ref: "#/components/schemas/InstancePatchStateFilter"
      minItems: 0
      maxItems: 4
    PatchComplianceMaxResults:
      type: integer
      minimum: 10
      maximum: 100
    InstancePatchStatesList:
      type: array
      items:
        $ref: "#/components/schemas/InstancePatchState"
      minItems: 1
      maxItems: 5
    InstancePatchStateList:
      type: array
      items:
        $ref: "#/components/schemas/InstancePatchState"
    PatchComplianceDataList:
      type: array
      items:
        $ref: "#/components/schemas/PatchComplianceData"
    InventoryDeletionsList:
      type: array
      items:
        $ref: "#/components/schemas/InventoryDeletionStatusItem"
    MaintenanceWindowExecutionTaskId:
      type: string
      pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
      minLength: 36
      maxLength: 36
    MaintenanceWindowFilterList:
      type: array
      items:
        $ref: "#/components/schemas/MaintenanceWindowFilter"
      minItems: 0
      maxItems: 5
    MaintenanceWindowMaxResults:
      type: integer
      minimum: 10
      maximum: 100
    MaintenanceWindowExecutionTaskInvocationIdentityList:
      type: array
      items:
        $ref: "#/components/schemas/MaintenanceWindowExecutionTaskInvocationIdentity"
    MaintenanceWindowExecutionTaskIdentityList:
      type: array
      items:
        $ref: "#/components/schemas/MaintenanceWindowExecutionTaskIdentity"
    MaintenanceWindowExecutionList:
      type: array
      items:
        $ref: "#/components/schemas/MaintenanceWindowExecution"
    MaintenanceWindowResourceType:
      type: string
      enum:
        - INSTANCE
        - RESOURCE_GROUP
    MaintenanceWindowSearchMaxResults:
      type: integer
      minimum: 1
    ScheduledWindowExecutionList:
      type: array
      items:
        $ref: "#/components/schemas/ScheduledWindowExecution"
    MaintenanceWindowTargetList:
      type: array
      items:
        $ref: "#/components/schemas/MaintenanceWindowTarget"
    MaintenanceWindowTaskList:
      type: array
      items:
        $ref: "#/components/schemas/MaintenanceWindowTask"
    MaintenanceWindowsForTargetList:
      type: array
      items:
        $ref: "#/components/schemas/MaintenanceWindowIdentityForTarget"
    MaintenanceWindowIdentityList:
      type: array
      items:
        $ref: "#/components/schemas/MaintenanceWindowIdentity"
    OpsItemFilters:
      type: array
      items:
        $ref: "#/components/schemas/OpsItemFilter"
    OpsItemMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    OpsItemSummaries:
      type: array
      items:
        $ref: "#/components/schemas/OpsItemSummary"
    ParametersFilterList:
      type: array
      items:
        $ref: "#/components/schemas/ParametersFilter"
    ParameterStringFilterList:
      type: array
      items:
        $ref: "#/components/schemas/ParameterStringFilter"
    ParameterMetadataList:
      type: array
      items:
        $ref: "#/components/schemas/ParameterMetadata"
    PatchBaselineIdentityList:
      type: array
      items:
        $ref: "#/components/schemas/PatchBaselineIdentity"
    Integer:
      type: integer
    InstancesCount:
      type: integer
    PatchGroupPatchBaselineMappingList:
      type: array
      items:
        $ref: "#/components/schemas/PatchGroupPatchBaselineMapping"
    PatchProperty:
      type: string
      enum:
        - PRODUCT
        - PRODUCT_FAMILY
        - CLASSIFICATION
        - MSRC_SEVERITY
        - PRIORITY
        - SEVERITY
    PatchSet:
      type: string
      enum:
        - OS
        - APPLICATION
    PatchPropertiesList:
      type: array
      items:
        $ref: "#/components/schemas/PatchPropertyEntry"
    SessionState:
      type: string
      enum:
        - Active
        - History
    SessionMaxResults:
      type: integer
      minimum: 1
      maximum: 200
    SessionFilterList:
      type: array
      items:
        $ref: "#/components/schemas/SessionFilter"
      minItems: 1
      maxItems: 5
    SessionList:
      type: array
      items:
        $ref: "#/components/schemas/Session"
    DescriptionInDocument:
      type: string
    DocumentDefaultVersionDescription:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/DocumentName"
        DefaultVersion:
          $ref: "#/components/schemas/DocumentVersion"
        DefaultVersionName:
          $ref: "#/components/schemas/DocumentVersionName"
      description: A default version of a document.
    DocumentSha1:
      type: string
    DocumentHash:
      type: string
      maxLength: 256
    DocumentHashType:
      type: string
      enum:
        - Sha256
        - Sha1
    DocumentOwner:
      type: string
    DocumentStatus:
      type: string
      enum:
        - Creating
        - Active
        - Updating
        - Deleting
        - Failed
      description: The status of a document.
    DocumentStatusInformation:
      type: string
    DocumentParameterList:
      type: array
      items:
        $ref: "#/components/schemas/DocumentParameter"
    PlatformTypeList:
      type: array
      items:
        $ref: "#/components/schemas/PlatformType"
    DocumentSchemaVersion:
      type: string
      pattern: ([0-9]+)\.([0-9]+)
    DocumentFilterKey:
      type: string
      enum:
        - Name
        - Owner
        - PlatformTypes
        - DocumentType
    DocumentFilterValue:
      type: string
      minLength: 1
    DocumentFilter:
      type: object
      required:
        - key
        - value
      properties:
        key:
          $ref: "#/components/schemas/DocumentFilterKey"
        value:
          $ref: "#/components/schemas/DocumentFilterValue"
      description: Describes a filter.
    DocumentFilterList:
      type: array
      items:
        $ref: "#/components/schemas/DocumentFilter"
      minItems: 1
    DocumentIdentifier:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/DocumentARN"
        Owner:
          $ref: "#/components/schemas/DocumentOwner"
        VersionName:
          $ref: "#/components/schemas/DocumentVersionName"
        PlatformTypes:
          $ref: "#/components/schemas/PlatformTypeList"
        DocumentVersion:
          $ref: "#/components/schemas/DocumentVersion"
        DocumentType:
          $ref: "#/components/schemas/DocumentType"
        SchemaVersion:
          $ref: "#/components/schemas/DocumentSchemaVersion"
        DocumentFormat:
          $ref: "#/components/schemas/DocumentFormat"
        TargetType:
          $ref: "#/components/schemas/TargetType"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: Describes the name of a Systems Manager document.
    DocumentIdentifierList:
      type: array
      items:
        $ref: "#/components/schemas/DocumentIdentifier"
    DocumentKeyValuesFilterKey:
      type: string
      minLength: 1
      maxLength: 128
    DocumentKeyValuesFilterValues:
      type: array
      items:
        $ref: "#/components/schemas/DocumentKeyValuesFilterValue"
    DocumentKeyValuesFilter:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/DocumentKeyValuesFilterKey"
        Values:
          $ref: "#/components/schemas/DocumentKeyValuesFilterValues"
      description: "<p>One or more filters. Use a filter to return a more specific list of
        documents.</p> <p>For keys, you can specify one or more tags that have
        been applied to a document. </p> <p>Other valid values include Owner,
        Name, PlatformTypes, and DocumentType.</p> <p>Note that only one Owner
        can be specified in a request. For example:
        <code>Key=Owner,Values=Self</code>.</p> <p>If you use Name as a key, you
        can use a name prefix to return a list of documents. For example, in the
        AWS CLI, to return a list of all documents that begin with
        <code>Te</code>, run the following command:</p> <p> <code>aws ssm
        list-documents --filters Key=Name,Values=Te</code> </p> <p>If you
        specify more than two keys, only documents that are identified by all
        the tags are returned in the results. If you specify more than two
        values for a key, documents that are identified by any of the values are
        returned in the results.</p> <p>To specify a custom key and value pair,
        use the format <code>Key=tag:[tagName],Values=[valueName]</code>.</p>
        <p>For example, if you created a Key called region and are using the AWS
        CLI to call the <code>list-documents</code> command: </p> <p> <code>aws
        ssm list-documents --filters Key=tag:region,Values=east,west
        Key=Owner,Values=Self</code> </p>"
    DocumentKeyValuesFilterList:
      type: array
      items:
        $ref: "#/components/schemas/DocumentKeyValuesFilter"
      minItems: 0
      maxItems: 6
    DocumentKeyValuesFilterValue:
      type: string
      minLength: 1
      maxLength: 256
    DocumentParameterName:
      type: string
    DocumentParameterType:
      type: string
      enum:
        - String
        - StringList
    DocumentParameterDescrption:
      type: string
    DocumentParameterDefaultValue:
      type: string
    DocumentParameter:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/DocumentParameterName"
        Type:
          $ref: "#/components/schemas/DocumentParameterType"
        Description:
          $ref: "#/components/schemas/DocumentParameterDescrption"
        DefaultValue:
          $ref: "#/components/schemas/DocumentParameterDefaultValue"
      description: "Parameters specified in a System Manager document that run on the
        server when the command is run. "
    DocumentVersionInfo:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/DocumentName"
        DocumentVersion:
          $ref: "#/components/schemas/DocumentVersion"
        VersionName:
          $ref: "#/components/schemas/DocumentVersionName"
        CreatedDate:
          $ref: "#/components/schemas/DateTime"
        IsDefaultVersion:
          $ref: "#/components/schemas/Boolean"
        DocumentFormat:
          $ref: "#/components/schemas/DocumentFormat"
        Status:
          $ref: "#/components/schemas/DocumentStatus"
        StatusInformation:
          $ref: "#/components/schemas/DocumentStatusInformation"
      description: Version information about the document.
    DocumentVersionList:
      type: array
      items:
        $ref: "#/components/schemas/DocumentVersionInfo"
      minItems: 1
    DocumentVersionNumber:
      type: string
      pattern: (^[1-9][0-9]*$)
    Patch:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/PatchId"
        ReleaseDate:
          $ref: "#/components/schemas/DateTime"
        Title:
          $ref: "#/components/schemas/PatchTitle"
        Description:
          $ref: "#/components/schemas/PatchDescription"
        ContentUrl:
          $ref: "#/components/schemas/PatchContentUrl"
        Vendor:
          $ref: "#/components/schemas/PatchVendor"
        ProductFamily:
          $ref: "#/components/schemas/PatchProductFamily"
        Product:
          $ref: "#/components/schemas/PatchProduct"
        Classification:
          $ref: "#/components/schemas/PatchClassification"
        MsrcSeverity:
          $ref: "#/components/schemas/PatchMsrcSeverity"
        KbNumber:
          $ref: "#/components/schemas/PatchKbNumber"
        MsrcNumber:
          $ref: "#/components/schemas/PatchMsrcNumber"
        Language:
          $ref: "#/components/schemas/PatchLanguage"
      description: Represents metadata about a patch.
    PatchStatus:
      type: object
      properties:
        DeploymentStatus:
          $ref: "#/components/schemas/PatchDeploymentStatus"
        ComplianceLevel:
          $ref: "#/components/schemas/PatchComplianceLevel"
        ApprovalDate:
          $ref: "#/components/schemas/DateTime"
      description: Information about the approval status of a patch.
    EffectivePatch:
      type: object
      properties:
        Patch:
          $ref: "#/components/schemas/Patch"
        PatchStatus:
          $ref: "#/components/schemas/PatchStatus"
      description: The EffectivePatch structure defines metadata about a patch along with
        the approval state of the patch in a particular patch baseline. The
        approval state includes information about whether the patch is currently
        approved, due to be approved by a rule, explicitly approved, or
        explicitly rejected and the date the patch was or will be approved.
    ExecutionRoleName:
      type: string
      minLength: 1
      maxLength: 64
    Fault:
      type: string
      enum:
        - Client
        - Server
        - Unknown
    FailedCreateAssociation:
      type: object
      properties:
        Entry:
          $ref: "#/components/schemas/CreateAssociationBatchRequestEntry"
        Message:
          $ref: "#/components/schemas/BatchErrorMessage"
        Fault:
          $ref: "#/components/schemas/Fault"
      description: Describes a failed association.
    FailureDetails:
      type: object
      properties:
        FailureStage:
          $ref: "#/components/schemas/String"
        FailureType:
          $ref: "#/components/schemas/String"
        Details:
          $ref: "#/components/schemas/AutomationParameterMap"
      description: Information about an Automation failure.
    StringDateTime:
      type: string
      pattern: ^([\-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d(?!:))?)?(\17[0-5]\d([\.,]\d)?)?([zZ]|([\-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$
    StandardOutputContent:
      type: string
      maxLength: 24000
    StandardErrorContent:
      type: string
      maxLength: 8000
    SessionTarget:
      type: string
      minLength: 1
      maxLength: 50
    SnapshotId:
      type: string
      pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
      minLength: 36
      maxLength: 36
    SnapshotDownloadUrl:
      type: string
    Product:
      type: string
    InventoryFilterList:
      type: array
      items:
        $ref: "#/components/schemas/InventoryFilter"
      minItems: 1
      maxItems: 5
    InventoryAggregatorList:
      type: array
      items:
        $ref: "#/components/schemas/InventoryAggregator"
      minItems: 1
      maxItems: 10
    ResultAttributeList:
      type: array
      items:
        $ref: "#/components/schemas/ResultAttribute"
      minItems: 1
      maxItems: 1
    InventoryResultEntityList:
      type: array
      items:
        $ref: "#/components/schemas/InventoryResultEntity"
    GetInventorySchemaMaxResults:
      type: integer
      minimum: 50
      maximum: 200
    InventoryItemTypeNameFilter:
      type: string
      minLength: 0
      maxLength: 100
    IsSubTypeSchema:
      type: boolean
    InventoryItemSchemaResultList:
      type: array
      items:
        $ref: "#/components/schemas/InventoryItemSchema"
    MaintenanceWindowExecutionTaskIdList:
      type: array
      items:
        $ref: "#/components/schemas/MaintenanceWindowExecutionTaskId"
    MaintenanceWindowExecutionStatus:
      type: string
      enum:
        - PENDING
        - IN_PROGRESS
        - SUCCESS
        - FAILED
        - TIMED_OUT
        - CANCELLING
        - CANCELLED
        - SKIPPED_OVERLAPPING
    MaintenanceWindowExecutionStatusDetails:
      type: string
      minLength: 0
      maxLength: 250
    MaintenanceWindowExecutionTaskInvocationId:
      type: string
      pattern: ^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$
      minLength: 36
      maxLength: 36
    MaintenanceWindowExecutionTaskExecutionId:
      type: string
    MaintenanceWindowTaskType:
      type: string
      enum:
        - RUN_COMMAND
        - AUTOMATION
        - STEP_FUNCTIONS
        - LAMBDA
    MaintenanceWindowExecutionTaskInvocationParameters:
      type: string
      format: password
    OwnerInformation:
      type: string
      minLength: 1
      maxLength: 128
      format: password
    MaintenanceWindowTaskTargetId:
      type: string
      maxLength: 36
    MaintenanceWindowTaskArn:
      type: string
      minLength: 1
      maxLength: 1600
    MaintenanceWindowTaskParametersList:
      type: array
      items:
        $ref: "#/components/schemas/MaintenanceWindowTaskParameters"
    MaintenanceWindowTaskPriority:
      type: integer
      minimum: 0
    MaintenanceWindowEnabled:
      type: boolean
    MaintenanceWindowTaskParameters:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/MaintenanceWindowTaskParameterValueExpression"
    MaintenanceWindowTaskInvocationParameters:
      type: object
      properties:
        RunCommand:
          $ref: "#/components/schemas/MaintenanceWindowRunCommandParameters"
        Automation:
          $ref: "#/components/schemas/MaintenanceWindowAutomationParameters"
        StepFunctions:
          $ref: "#/components/schemas/MaintenanceWindowStepFunctionsParameters"
        Lambda:
          $ref: "#/components/schemas/MaintenanceWindowLambdaParameters"
      description: The parameters for task execution.
    LoggingInfo:
      type: object
      required:
        - S3BucketName
        - S3Region
      properties:
        S3BucketName:
          $ref: "#/components/schemas/S3BucketName"
        S3KeyPrefix:
          $ref: "#/components/schemas/S3KeyPrefix"
        S3Region:
          $ref: "#/components/schemas/S3Region"
      description: <p>Information about an Amazon S3 bucket to write instance-level logs
        to.</p> <note> <p> <code>LoggingInfo</code> has been deprecated. To
        specify an S3 bucket to contain logs, instead use the
        <code>OutputS3BucketName</code> and <code>OutputS3KeyPrefix</code>
        options in the <code>TaskInvocationParameters</code> structure. For
        information about how Systems Manager handles these options for the
        supported maintenance window task types, see
        <a>MaintenanceWindowTaskInvocationParameters</a>.</p> </note>
    OpsItemId:
      type: string
      pattern: ^(oi)-[0-9a-f]{12}$
    OpsItem:
      type: object
      properties:
        CreatedBy:
          $ref: "#/components/schemas/String"
        CreatedTime:
          $ref: "#/components/schemas/DateTime"
        Description:
          $ref: "#/components/schemas/OpsItemDescription"
        LastModifiedBy:
          $ref: "#/components/schemas/String"
        LastModifiedTime:
          $ref: "#/components/schemas/DateTime"
        Notifications:
          $ref: "#/components/schemas/OpsItemNotifications"
        Priority:
          $ref: "#/components/schemas/OpsItemPriority"
        RelatedOpsItems:
          $ref: "#/components/schemas/RelatedOpsItems"
        Status:
          $ref: "#/components/schemas/OpsItemStatus"
        OpsItemId:
          $ref: "#/components/schemas/OpsItemId"
        Version:
          $ref: "#/components/schemas/String"
        Title:
          $ref: "#/components/schemas/OpsItemTitle"
        Source:
          $ref: "#/components/schemas/OpsItemSource"
        OperationalData:
          $ref: "#/components/schemas/OpsItemOperationalData"
      description: 'Operations engineers and IT professionals use OpsCenter to view,
        investigate, and remediate operational issues impacting the performance
        and health of their AWS resources. For more information, see <a
        href="http://docs.aws.amazon.com/systems-manager/latest/userguide/OpsCenter.html">AWS
        Systems Manager OpsCenter</a> in the <i>AWS Systems Manager User
        Guide</i>. '
    OpsFilterList:
      type: array
      items:
        $ref: "#/components/schemas/OpsFilter"
      minItems: 1
      maxItems: 5
    OpsAggregatorList:
      type: array
      items:
        $ref: "#/components/schemas/OpsAggregator"
      minItems: 1
      maxItems: 12
    OpsEntityList:
      type: array
      items:
        $ref: "#/components/schemas/OpsEntity"
    ParameterHistoryList:
      type: array
      items:
        $ref: "#/components/schemas/ParameterHistory"
    Parameter:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/PSParameterName"
        Type:
          $ref: "#/components/schemas/ParameterType"
        Value:
          $ref: "#/components/schemas/PSParameterValue"
        Version:
          $ref: "#/components/schemas/PSParameterVersion"
        Selector:
          $ref: "#/components/schemas/PSParameterSelector"
        SourceResult:
          $ref: "#/components/schemas/String"
        LastModifiedDate:
          $ref: "#/components/schemas/DateTime"
        ARN:
          $ref: "#/components/schemas/String"
      description: An Amazon EC2 Systems Manager parameter in Parameter Store.
    GetParametersByPathMaxResults:
      type: integer
      minimum: 1
      maximum: 10
    ParameterList:
      type: array
      items:
        $ref: "#/components/schemas/Parameter"
    PatchGroupList:
      type: array
      items:
        $ref: "#/components/schemas/PatchGroup"
    ServiceSettingId:
      type: string
      minLength: 1
      maxLength: 1000
    ServiceSetting:
      type: object
      properties:
        SettingId:
          $ref: "#/components/schemas/ServiceSettingId"
        SettingValue:
          $ref: "#/components/schemas/ServiceSettingValue"
        LastModifiedDate:
          $ref: "#/components/schemas/DateTime"
        LastModifiedUser:
          $ref: "#/components/schemas/String"
        ARN:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/String"
      description: <p>The service setting data structure.</p> <p>
        <code>ServiceSetting</code> is an account-level setting for an AWS
        service. This setting defines how a user interacts with or uses a
        service or a feature of a service. For example, if an AWS service
        charges money to the account based on feature or service usage, then the
        AWS service team might create a default setting of "false". This means
        the user can't use this feature unless they change the setting to "true"
        and intentionally opt in for a paid feature.</p> <p>Services map a
        <code>SettingId</code> object to a setting value. AWS services teams
        define the default value for a <code>SettingId</code>. You can't create
        a new <code>SettingId</code>, but you can overwrite the default value if
        you have the <code>ssm:UpdateServiceSetting</code> permission for the
        setting. Use the <a>UpdateServiceSetting</a> API action to change the
        default setting. Or, use the <a>ResetServiceSetting</a> to change the
        value back to the original value defined by the AWS service team.</p>
    IPAddress:
      type: string
      minLength: 1
      maxLength: 46
    IdempotencyToken:
      type: string
      pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9\
        ]{12}"
      minLength: 36
      maxLength: 36
    InstallOverrideList:
      type: string
      pattern: ^https://.+$|^s3://([^/]+)/(.*?([^/]+))$
      minLength: 1
      maxLength: 256
    InstanceAssociationStatusAggregatedCount:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/InstanceCount"
    InstanceAggregatedAssociationOverview:
      type: object
      properties:
        DetailedStatus:
          $ref: "#/components/schemas/StatusName"
        InstanceAssociationStatusAggregatedCount:
          $ref: "#/components/schemas/InstanceAssociationStatusAggregatedCount"
      description: Status information about the aggregated associations.
    InstanceAssociation:
      type: object
      properties:
        AssociationId:
          $ref: "#/components/schemas/AssociationId"
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        Content:
          $ref: "#/components/schemas/DocumentContent"
        AssociationVersion:
          $ref: "#/components/schemas/AssociationVersion"
      description: "One or more association documents on the instance. "
    InstanceAssociationExecutionSummary:
      type: string
      minLength: 1
      maxLength: 512
    S3OutputLocation:
      type: object
      properties:
        OutputS3Region:
          $ref: "#/components/schemas/S3Region"
        OutputS3BucketName:
          $ref: "#/components/schemas/S3BucketName"
        OutputS3KeyPrefix:
          $ref: "#/components/schemas/S3KeyPrefix"
      description: An Amazon S3 bucket where you want to store the results of this request.
    S3OutputUrl:
      type: object
      properties:
        OutputUrl:
          $ref: "#/components/schemas/Url"
      description: A URL for the Amazon S3 bucket where you want to store the results of
        this request.
    InstanceAssociationOutputUrl:
      type: object
      properties:
        S3OutputUrl:
          $ref: "#/components/schemas/S3OutputUrl"
      description: The URL of Amazon S3 bucket where you want to store the results of this
        request.
    InstanceAssociationStatusInfo:
      type: object
      properties:
        AssociationId:
          $ref: "#/components/schemas/AssociationId"
        Name:
          $ref: "#/components/schemas/DocumentARN"
        DocumentVersion:
          $ref: "#/components/schemas/DocumentVersion"
        AssociationVersion:
          $ref: "#/components/schemas/AssociationVersion"
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        ExecutionDate:
          $ref: "#/components/schemas/DateTime"
        Status:
          $ref: "#/components/schemas/StatusName"
        DetailedStatus:
          $ref: "#/components/schemas/StatusName"
        ExecutionSummary:
          $ref: "#/components/schemas/InstanceAssociationExecutionSummary"
        ErrorCode:
          $ref: "#/components/schemas/AgentErrorCode"
        OutputUrl:
          $ref: "#/components/schemas/InstanceAssociationOutputUrl"
        AssociationName:
          $ref: "#/components/schemas/AssociationName"
      description: Status information about the instance association.
    PingStatus:
      type: string
      enum:
        - Online
        - ConnectionLost
        - Inactive
    Version:
      type: string
      pattern: ^[0-9]{1,6}(\.[0-9]{1,6}){2,3}$
    PlatformType:
      type: string
      enum:
        - Windows
        - Linux
    ResourceType:
      type: string
      enum:
        - ManagedInstance
        - Document
        - EC2Instance
    InstanceInformation:
      type: object
      properties:
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        PingStatus:
          $ref: "#/components/schemas/PingStatus"
        LastPingDateTime:
          $ref: "#/components/schemas/DateTime"
        AgentVersion:
          $ref: "#/components/schemas/Version"
        IsLatestVersion:
          $ref: "#/components/schemas/Boolean"
        PlatformType:
          $ref: "#/components/schemas/PlatformType"
        PlatformName:
          $ref: "#/components/schemas/String"
        PlatformVersion:
          $ref: "#/components/schemas/String"
        ActivationId:
          $ref: "#/components/schemas/ActivationId"
        IamRole:
          $ref: "#/components/schemas/IamRole"
        RegistrationDate:
          $ref: "#/components/schemas/DateTime"
        ResourceType:
          $ref: "#/components/schemas/ResourceType"
        Name:
          $ref: "#/components/schemas/String"
        IPAddress:
          $ref: "#/components/schemas/IPAddress"
        ComputerName:
          $ref: "#/components/schemas/ComputerName"
        AssociationStatus:
          $ref: "#/components/schemas/StatusName"
        LastAssociationExecutionDate:
          $ref: "#/components/schemas/DateTime"
        LastSuccessfulAssociationExecutionDate:
          $ref: "#/components/schemas/DateTime"
        AssociationOverview:
          $ref: "#/components/schemas/InstanceAggregatedAssociationOverview"
      description: "Describes a filter for a specific list of instances. "
    InstanceInformationFilterKey:
      type: string
      enum:
        - InstanceIds
        - AgentVersion
        - PingStatus
        - PlatformTypes
        - ActivationIds
        - IamRole
        - ResourceType
        - AssociationStatus
    InstanceInformationFilterValueSet:
      type: array
      items:
        $ref: "#/components/schemas/InstanceInformationFilterValue"
      minItems: 1
      maxItems: 100
    InstanceInformationFilter:
      type: object
      required:
        - key
        - valueSet
      properties:
        key:
          $ref: "#/components/schemas/InstanceInformationFilterKey"
        valueSet:
          $ref: "#/components/schemas/InstanceInformationFilterValueSet"
      description: <p>Describes a filter for a specific list of instances. You can filter
        instances information by using tags. You specify tags by using a
        key-value mapping.</p> <p>Use this action instead of the
        <a>DescribeInstanceInformationRequest$InstanceInformationFilterList</a>
        method. The <code>InstanceInformationFilterList</code> method is a
        legacy method and does not support tags. </p>
    InstanceInformationFilterValue:
      type: string
      minLength: 1
    InstanceInformationStringFilterKey:
      type: string
      minLength: 1
    InstanceInformationStringFilter:
      type: object
      required:
        - Key
        - Values
      properties:
        Key:
          $ref: "#/components/schemas/InstanceInformationStringFilterKey"
        Values:
          $ref: "#/components/schemas/InstanceInformationFilterValueSet"
      description: The filters to describe or get information about your managed instances.
    PatchInstalledCount:
      type: integer
    PatchInstalledOtherCount:
      type: integer
    PatchInstalledRejectedCount:
      type: integer
    PatchMissingCount:
      type: integer
    PatchFailedCount:
      type: integer
    PatchUnreportedNotApplicableCount:
      type: integer
    PatchNotApplicableCount:
      type: integer
    PatchOperationType:
      type: string
      enum:
        - Scan
        - Install
    InstancePatchState:
      type: object
      required:
        - InstanceId
        - PatchGroup
        - BaselineId
        - OperationStartTime
        - OperationEndTime
        - Operation
      properties:
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        PatchGroup:
          $ref: "#/components/schemas/PatchGroup"
        BaselineId:
          $ref: "#/components/schemas/BaselineId"
        SnapshotId:
          $ref: "#/components/schemas/SnapshotId"
        InstallOverrideList:
          $ref: "#/components/schemas/InstallOverrideList"
        OwnerInformation:
          $ref: "#/components/schemas/OwnerInformation"
        InstalledCount:
          $ref: "#/components/schemas/PatchInstalledCount"
        InstalledOtherCount:
          $ref: "#/components/schemas/PatchInstalledOtherCount"
        InstalledRejectedCount:
          $ref: "#/components/schemas/PatchInstalledRejectedCount"
        MissingCount:
          $ref: "#/components/schemas/PatchMissingCount"
        FailedCount:
          $ref: "#/components/schemas/PatchFailedCount"
        UnreportedNotApplicableCount:
          $ref: "#/components/schemas/PatchUnreportedNotApplicableCount"
        NotApplicableCount:
          $ref: "#/components/schemas/PatchNotApplicableCount"
        OperationStartTime:
          $ref: "#/components/schemas/DateTime"
        OperationEndTime:
          $ref: "#/components/schemas/DateTime"
        Operation:
          $ref: "#/components/schemas/PatchOperationType"
      description: Defines the high-level patch compliance state for a managed instance,
        providing information about the number of installed, missing, not
        applicable, and failed patches along with metadata about the operation
        when this information was gathered for the instance.
    InstancePatchStateFilterKey:
      type: string
      minLength: 1
      maxLength: 200
    InstancePatchStateFilterValues:
      type: array
      items:
        $ref: "#/components/schemas/InstancePatchStateFilterValue"
      minItems: 1
      maxItems: 1
    InstancePatchStateOperatorType:
      type: string
      enum:
        - Equal
        - NotEqual
        - LessThan
        - GreaterThan
    InstancePatchStateFilter:
      type: object
      required:
        - Key
        - Values
        - Type
      properties:
        Key:
          $ref: "#/components/schemas/InstancePatchStateFilterKey"
        Values:
          $ref: "#/components/schemas/InstancePatchStateFilterValues"
        Type:
          $ref: "#/components/schemas/InstancePatchStateOperatorType"
      description: Defines a filter used in DescribeInstancePatchStatesForPatchGroup used
        to scope down the information returned by the API.
    InstancePatchStateFilterValue:
      type: string
    InventoryAggregatorExpression:
      type: string
      minLength: 1
      maxLength: 1000
    InventoryGroupList:
      type: array
      items:
        $ref: "#/components/schemas/InventoryGroup"
      minItems: 1
      maxItems: 15
    InventoryAggregator:
      type: object
      properties:
        Expression:
          $ref: "#/components/schemas/InventoryAggregatorExpression"
        Aggregators:
          $ref: "#/components/schemas/InventoryAggregatorList"
        Groups:
          $ref: "#/components/schemas/InventoryGroupList"
      description: Specifies the inventory type and attribute for the aggregation execution.
    InventoryAttributeDataType:
      type: string
      enum:
        - string
        - number
    InventoryDeletionLastStatusMessage:
      type: string
    InventoryDeletionLastStatusUpdateTime:
      type: string
      format: date-time
    InventoryDeletionStartTime:
      type: string
      format: date-time
    InventoryDeletionStatus:
      type: string
      enum:
        - InProgress
        - Complete
    InventoryDeletionStatusItem:
      type: object
      properties:
        DeletionId:
          $ref: "#/components/schemas/InventoryDeletionId"
        TypeName:
          $ref: "#/components/schemas/InventoryItemTypeName"
        DeletionStartTime:
          $ref: "#/components/schemas/InventoryDeletionStartTime"
        LastStatus:
          $ref: "#/components/schemas/InventoryDeletionStatus"
        LastStatusMessage:
          $ref: "#/components/schemas/InventoryDeletionLastStatusMessage"
        DeletionSummary:
          $ref: "#/components/schemas/InventoryDeletionSummary"
        LastStatusUpdateTime:
          $ref: "#/components/schemas/InventoryDeletionLastStatusUpdateTime"
      description: Status information returned by the <code>DeleteInventory</code> action.
    TotalCount:
      type: integer
    RemainingCount:
      type: integer
    InventoryDeletionSummaryItems:
      type: array
      items:
        $ref: "#/components/schemas/InventoryDeletionSummaryItem"
    InventoryItemSchemaVersion:
      type: string
      pattern: ^([0-9]{1,6})(\.[0-9]{1,6})$
    ResourceCount:
      type: integer
    InventoryDeletionSummaryItem:
      type: object
      properties:
        Version:
          $ref: "#/components/schemas/InventoryItemSchemaVersion"
        Count:
          $ref: "#/components/schemas/ResourceCount"
        RemainingCount:
          $ref: "#/components/schemas/RemainingCount"
      description: Either a count, remaining count, or a version number in a delete
        inventory summary.
    InventoryFilterKey:
      type: string
      minLength: 1
      maxLength: 200
    InventoryFilterValueList:
      type: array
      items:
        $ref: "#/components/schemas/InventoryFilterValue"
      minItems: 1
      maxItems: 40
    InventoryQueryOperatorType:
      type: string
      enum:
        - Equal
        - NotEqual
        - BeginWith
        - LessThan
        - GreaterThan
        - Exists
    InventoryFilter:
      type: object
      required:
        - Key
        - Values
      properties:
        Key:
          $ref: "#/components/schemas/InventoryFilterKey"
        Values:
          $ref: "#/components/schemas/InventoryFilterValueList"
        Type:
          $ref: "#/components/schemas/InventoryQueryOperatorType"
      description: One or more filters. Use a filter to return a more specific list of
        results.
    InventoryFilterValue:
      type: string
    InventoryGroupName:
      type: string
      minLength: 1
      maxLength: 200
    InventoryGroup:
      type: object
      required:
        - Name
        - Filters
      properties:
        Name:
          $ref: "#/components/schemas/InventoryGroupName"
        Filters:
          $ref: "#/components/schemas/InventoryFilterList"
      description: A user-defined set of one or more filters on which to aggregate
        inventory data. Groups return a count of resources that match and don't
        match the specified criteria.
    InventoryItemCaptureTime:
      type: string
      pattern: ^(20)[0-9][0-9]-(0[1-9]|1[012])-([12][0-9]|3[01]|0[1-9])(T)(2[0-3]|[0-1][0-9])(:[0-5][0-9])(:[0-5][0-9])(Z)$
    InventoryItemContentHash:
      type: string
      maxLength: 256
    InventoryItemEntryList:
      type: array
      items:
        $ref: "#/components/schemas/InventoryItemEntry"
      minItems: 0
      maxItems: 10000
    InventoryItemContentContext:
      type: object
      minProperties: 0
      maxProperties: 50
      additionalProperties:
        $ref: "#/components/schemas/AttributeValue"
    InventoryItem:
      type: object
      required:
        - TypeName
        - SchemaVersion
        - CaptureTime
      properties:
        TypeName:
          $ref: "#/components/schemas/InventoryItemTypeName"
        SchemaVersion:
          $ref: "#/components/schemas/InventoryItemSchemaVersion"
        CaptureTime:
          $ref: "#/components/schemas/InventoryItemCaptureTime"
        ContentHash:
          $ref: "#/components/schemas/InventoryItemContentHash"
        Content:
          $ref: "#/components/schemas/InventoryItemEntryList"
        Context:
          $ref: "#/components/schemas/InventoryItemContentContext"
      description: Information collected from managed instances based on your inventory
        policy document
    InventoryItemAttributeName:
      type: string
    InventoryItemAttribute:
      type: object
      required:
        - Name
        - DataType
      properties:
        Name:
          $ref: "#/components/schemas/InventoryItemAttributeName"
        DataType:
          $ref: "#/components/schemas/InventoryAttributeDataType"
      description: Attributes are the entries within the inventory item content. It
        contains name and value.
    InventoryItemAttributeList:
      type: array
      items:
        $ref: "#/components/schemas/InventoryItemAttribute"
      minItems: 1
      maxItems: 50
    InventoryItemEntry:
      type: object
      minProperties: 0
      maxProperties: 50
      additionalProperties:
        $ref: "#/components/schemas/AttributeValue"
    InventoryItemList:
      type: array
      items:
        $ref: "#/components/schemas/InventoryItem"
      minItems: 1
      maxItems: 30
    InventoryTypeDisplayName:
      type: string
    InventoryItemSchema:
      type: object
      required:
        - TypeName
        - Attributes
      properties:
        TypeName:
          $ref: "#/components/schemas/InventoryItemTypeName"
        Version:
          $ref: "#/components/schemas/InventoryItemSchemaVersion"
        Attributes:
          $ref: "#/components/schemas/InventoryItemAttributeList"
        DisplayName:
          $ref: "#/components/schemas/InventoryTypeDisplayName"
      description: The inventory item schema definition. Users can use this to compose
        inventory query filters.
    InventoryResultEntityId:
      type: string
    InventoryResultItemMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/InventoryResultItem"
    InventoryResultEntity:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/InventoryResultEntityId"
        Data:
          $ref: "#/components/schemas/InventoryResultItemMap"
      description: Inventory query results.
    InventoryResultItem:
      type: object
      required:
        - TypeName
        - SchemaVersion
        - Content
      properties:
        TypeName:
          $ref: "#/components/schemas/InventoryItemTypeName"
        SchemaVersion:
          $ref: "#/components/schemas/InventoryItemSchemaVersion"
        CaptureTime:
          $ref: "#/components/schemas/InventoryItemCaptureTime"
        ContentHash:
          $ref: "#/components/schemas/InventoryItemContentHash"
        Content:
          $ref: "#/components/schemas/InventoryItemEntryList"
      description: The inventory result item.
    InventoryResultItemKey:
      type: string
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    KeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
    PSParameterVersion:
      type: integer
    ParameterLabelList:
      type: array
      items:
        $ref: "#/components/schemas/ParameterLabel"
      minItems: 1
      maxItems: 10
    LastResourceDataSyncMessage:
      type: string
    LastResourceDataSyncStatus:
      type: string
      enum:
        - Successful
        - Failed
        - InProgress
    LastResourceDataSyncTime:
      type: string
      format: date-time
    LastSuccessfulResourceDataSyncTime:
      type: string
      format: date-time
    ResourceComplianceSummaryItemList:
      type: array
      items:
        $ref: "#/components/schemas/ResourceComplianceSummaryItem"
    ResourceDataSyncItemList:
      type: array
      items:
        $ref: "#/components/schemas/ResourceDataSyncItem"
    Long:
      type: integer
    MaintenanceWindowAutomationParameters:
      type: object
      properties:
        DocumentVersion:
          $ref: "#/components/schemas/DocumentVersion"
        Parameters:
          $ref: "#/components/schemas/AutomationParameterMap"
      description: The parameters for an AUTOMATION task type.
    MaintenanceWindowExecution:
      type: object
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        WindowExecutionId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionId"
        Status:
          $ref: "#/components/schemas/MaintenanceWindowExecutionStatus"
        StatusDetails:
          $ref: "#/components/schemas/MaintenanceWindowExecutionStatusDetails"
        StartTime:
          $ref: "#/components/schemas/DateTime"
        EndTime:
          $ref: "#/components/schemas/DateTime"
      description: "Describes the information about an execution of a maintenance window. "
    MaintenanceWindowExecutionTaskIdentity:
      type: object
      properties:
        WindowExecutionId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionId"
        TaskExecutionId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionTaskId"
        Status:
          $ref: "#/components/schemas/MaintenanceWindowExecutionStatus"
        StatusDetails:
          $ref: "#/components/schemas/MaintenanceWindowExecutionStatusDetails"
        StartTime:
          $ref: "#/components/schemas/DateTime"
        EndTime:
          $ref: "#/components/schemas/DateTime"
        TaskArn:
          $ref: "#/components/schemas/MaintenanceWindowTaskArn"
        TaskType:
          $ref: "#/components/schemas/MaintenanceWindowTaskType"
      description: Information about a task execution performed as part of a maintenance
        window execution.
    MaintenanceWindowExecutionTaskInvocationIdentity:
      type: object
      properties:
        WindowExecutionId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionId"
        TaskExecutionId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionTaskId"
        InvocationId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionTaskInvocationId"
        ExecutionId:
          $ref: "#/components/schemas/MaintenanceWindowExecutionTaskExecutionId"
        TaskType:
          $ref: "#/components/schemas/MaintenanceWindowTaskType"
        Parameters:
          $ref: "#/components/schemas/MaintenanceWindowExecutionTaskInvocationParam\
            eters"
        Status:
          $ref: "#/components/schemas/MaintenanceWindowExecutionStatus"
        StatusDetails:
          $ref: "#/components/schemas/MaintenanceWindowExecutionStatusDetails"
        StartTime:
          $ref: "#/components/schemas/DateTime"
        EndTime:
          $ref: "#/components/schemas/DateTime"
        OwnerInformation:
          $ref: "#/components/schemas/OwnerInformation"
        WindowTargetId:
          $ref: "#/components/schemas/MaintenanceWindowTaskTargetId"
      description: Describes the information about a task invocation for a particular
        target as part of a task execution performed as part of a maintenance
        window execution.
    MaintenanceWindowFilterKey:
      type: string
      minLength: 1
      maxLength: 128
    MaintenanceWindowFilterValues:
      type: array
      items:
        $ref: "#/components/schemas/MaintenanceWindowFilterValue"
    MaintenanceWindowFilter:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/MaintenanceWindowFilterKey"
        Values:
          $ref: "#/components/schemas/MaintenanceWindowFilterValues"
      description: Filter used in the request. Supported filter keys are Name and Enabled.
    MaintenanceWindowFilterValue:
      type: string
      minLength: 1
      maxLength: 256
    MaintenanceWindowIdentity:
      type: object
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        Name:
          $ref: "#/components/schemas/MaintenanceWindowName"
        Description:
          $ref: "#/components/schemas/MaintenanceWindowDescription"
        Enabled:
          $ref: "#/components/schemas/MaintenanceWindowEnabled"
        Duration:
          $ref: "#/components/schemas/MaintenanceWindowDurationHours"
        Cutoff:
          $ref: "#/components/schemas/MaintenanceWindowCutoff"
        Schedule:
          $ref: "#/components/schemas/MaintenanceWindowSchedule"
        ScheduleTimezone:
          $ref: "#/components/schemas/MaintenanceWindowTimezone"
        EndDate:
          $ref: "#/components/schemas/MaintenanceWindowStringDateTime"
        StartDate:
          $ref: "#/components/schemas/MaintenanceWindowStringDateTime"
        NextExecutionTime:
          $ref: "#/components/schemas/MaintenanceWindowStringDateTime"
      description: Information about the maintenance window.
    MaintenanceWindowIdentityForTarget:
      type: object
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        Name:
          $ref: "#/components/schemas/MaintenanceWindowName"
      description: The maintenance window to which the specified target belongs.
    MaintenanceWindowLambdaClientContext:
      type: string
      minLength: 1
      maxLength: 8000
    MaintenanceWindowLambdaQualifier:
      type: string
      minLength: 1
      maxLength: 128
    MaintenanceWindowLambdaPayload:
      type: string
      maxLength: 4096
      format: password
    MaintenanceWindowLambdaParameters:
      type: object
      properties:
        ClientContext:
          $ref: "#/components/schemas/MaintenanceWindowLambdaClientContext"
        Qualifier:
          $ref: "#/components/schemas/MaintenanceWindowLambdaQualifier"
        Payload:
          $ref: "#/components/schemas/MaintenanceWindowLambdaPayload"
      description: <p>The parameters for a LAMBDA task type.</p> <p>For information about
        specifying and updating task parameters, see
        <a>RegisterTaskWithMaintenanceWindow</a> and
        <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p>
        <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to
        contain logs, instead use the <code>OutputS3BucketName</code> and
        <code>OutputS3KeyPrefix</code> options in the
        <code>TaskInvocationParameters</code> structure. For information about
        how Systems Manager handles these options for the supported maintenance
        window task types, see
        <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>
        <code>TaskParameters</code> has been deprecated. To specify parameters
        to pass to a task when it runs, instead use the <code>Parameters</code>
        option in the <code>TaskInvocationParameters</code> structure. For
        information about how Systems Manager handles these options for the
        supported maintenance window task types, see
        <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For Lambda
        tasks, Systems Manager ignores any values specified for TaskParameters
        and LoggingInfo.</p> </note>
    TimeoutSeconds:
      type: integer
      minimum: 30
      maximum: 2592000
    MaintenanceWindowRunCommandParameters:
      type: object
      properties:
        Comment:
          $ref: "#/components/schemas/Comment"
        DocumentHash:
          $ref: "#/components/schemas/DocumentHash"
        DocumentHashType:
          $ref: "#/components/schemas/DocumentHashType"
        NotificationConfig:
          $ref: "#/components/schemas/NotificationConfig"
        OutputS3BucketName:
          $ref: "#/components/schemas/S3BucketName"
        OutputS3KeyPrefix:
          $ref: "#/components/schemas/S3KeyPrefix"
        Parameters:
          $ref: "#/components/schemas/Parameters"
        ServiceRoleArn:
          $ref: "#/components/schemas/ServiceRole"
        TimeoutSeconds:
          $ref: "#/components/schemas/TimeoutSeconds"
      description: <p>The parameters for a RUN_COMMAND task type.</p> <p>For information
        about specifying and updating task parameters, see
        <a>RegisterTaskWithMaintenanceWindow</a> and
        <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p>
        <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to
        contain logs, instead use the <code>OutputS3BucketName</code> and
        <code>OutputS3KeyPrefix</code> options in the
        <code>TaskInvocationParameters</code> structure. For information about
        how Systems Manager handles these options for the supported maintenance
        window task types, see
        <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>
        <code>TaskParameters</code> has been deprecated. To specify parameters
        to pass to a task when it runs, instead use the <code>Parameters</code>
        option in the <code>TaskInvocationParameters</code> structure. For
        information about how Systems Manager handles these options for the
        supported maintenance window task types, see
        <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For Run Command
        tasks, Systems Manager uses specified values for
        <code>TaskParameters</code> and <code>LoggingInfo</code> only if no
        values are specified for <code>TaskInvocationParameters</code>. </p>
        </note>
    MaintenanceWindowStepFunctionsInput:
      type: string
      maxLength: 4096
      format: password
    MaintenanceWindowStepFunctionsName:
      type: string
      minLength: 1
      maxLength: 80
    MaintenanceWindowStepFunctionsParameters:
      type: object
      properties:
        Input:
          $ref: "#/components/schemas/MaintenanceWindowStepFunctionsInput"
        Name:
          $ref: "#/components/schemas/MaintenanceWindowStepFunctionsName"
      description: <p>The parameters for a STEP_FUNCTIONS task.</p> <p>For information
        about specifying and updating task parameters, see
        <a>RegisterTaskWithMaintenanceWindow</a> and
        <a>UpdateMaintenanceWindowTask</a>.</p> <note> <p>
        <code>LoggingInfo</code> has been deprecated. To specify an S3 bucket to
        contain logs, instead use the <code>OutputS3BucketName</code> and
        <code>OutputS3KeyPrefix</code> options in the
        <code>TaskInvocationParameters</code> structure. For information about
        how Systems Manager handles these options for the supported maintenance
        window task types, see
        <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>
        <code>TaskParameters</code> has been deprecated. To specify parameters
        to pass to a task when it runs, instead use the <code>Parameters</code>
        option in the <code>TaskInvocationParameters</code> structure. For
        information about how Systems Manager handles these options for the
        supported maintenance window task types, see
        <a>MaintenanceWindowTaskInvocationParameters</a>.</p> <p>For Step
        Functions tasks, Systems Manager ignores any values specified for
        <code>TaskParameters</code> and <code>LoggingInfo</code>.</p> </note>
    MaintenanceWindowTarget:
      type: object
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        WindowTargetId:
          $ref: "#/components/schemas/MaintenanceWindowTargetId"
        ResourceType:
          $ref: "#/components/schemas/MaintenanceWindowResourceType"
        Targets:
          $ref: "#/components/schemas/Targets"
        OwnerInformation:
          $ref: "#/components/schemas/OwnerInformation"
        Name:
          $ref: "#/components/schemas/MaintenanceWindowName"
        Description:
          $ref: "#/components/schemas/MaintenanceWindowDescription"
      description: The target registered with the maintenance window.
    MaintenanceWindowTask:
      type: object
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        WindowTaskId:
          $ref: "#/components/schemas/MaintenanceWindowTaskId"
        TaskArn:
          $ref: "#/components/schemas/MaintenanceWindowTaskArn"
        Type:
          $ref: "#/components/schemas/MaintenanceWindowTaskType"
        Targets:
          $ref: "#/components/schemas/Targets"
        TaskParameters:
          $ref: "#/components/schemas/MaintenanceWindowTaskParameters"
        Priority:
          $ref: "#/components/schemas/MaintenanceWindowTaskPriority"
        LoggingInfo:
          $ref: "#/components/schemas/LoggingInfo"
        ServiceRoleArn:
          $ref: "#/components/schemas/ServiceRole"
        MaxConcurrency:
          $ref: "#/components/schemas/MaxConcurrency"
        MaxErrors:
          $ref: "#/components/schemas/MaxErrors"
        Name:
          $ref: "#/components/schemas/MaintenanceWindowName"
        Description:
          $ref: "#/components/schemas/MaintenanceWindowDescription"
      description: Information about a task defined for a maintenance window.
    MaintenanceWindowTaskParameterName:
      type: string
      minLength: 1
      maxLength: 255
    MaintenanceWindowTaskParameterValue:
      type: string
      minLength: 1
      maxLength: 255
      format: password
    MaintenanceWindowTaskParameterValueList:
      type: array
      items:
        $ref: "#/components/schemas/MaintenanceWindowTaskParameterValue"
    MaintenanceWindowTaskParameterValueExpression:
      type: object
      properties:
        Values:
          $ref: "#/components/schemas/MaintenanceWindowTaskParameterValueList"
      description: Defines the values for a task parameter.
    NormalStringMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/String"
    NotificationArn:
      type: string
    NotificationEventList:
      type: array
      items:
        $ref: "#/components/schemas/NotificationEvent"
    NotificationType:
      type: string
      enum:
        - Command
        - Invocation
    NotificationEvent:
      type: string
      enum:
        - All
        - InProgress
        - Success
        - TimedOut
        - Cancelled
        - Failed
    OpsAggregatorType:
      type: string
      pattern: ^(range|count)
      minLength: 1
      maxLength: 20
    OpsDataTypeName:
      type: string
      pattern: ^(AWS|Custom):.*$
      minLength: 1
      maxLength: 100
    OpsDataAttributeName:
      type: string
    OpsAggregatorValueMap:
      type: object
      minProperties: 0
      maxProperties: 5
      additionalProperties:
        $ref: "#/components/schemas/OpsAggregatorValue"
    OpsAggregator:
      type: object
      properties:
        AggregatorType:
          $ref: "#/components/schemas/OpsAggregatorType"
        TypeName:
          $ref: "#/components/schemas/OpsDataTypeName"
        AttributeName:
          $ref: "#/components/schemas/OpsDataAttributeName"
        Values:
          $ref: "#/components/schemas/OpsAggregatorValueMap"
        Filters:
          $ref: "#/components/schemas/OpsFilterList"
        Aggregators:
          $ref: "#/components/schemas/OpsAggregatorList"
      description: One or more aggregators for viewing counts of OpsItems using different
        dimensions such as <code>Source</code>, <code>CreatedTime</code>, or
        <code>Source and CreatedTime</code>, to name a few.
    OpsAggregatorValue:
      type: string
      minLength: 0
      maxLength: 512
    OpsAggregatorValueKey:
      type: string
      minLength: 1
      maxLength: 32
    OpsEntityId:
      type: string
    OpsEntityItemMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/OpsEntityItem"
    OpsEntity:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/OpsEntityId"
        Data:
          $ref: "#/components/schemas/OpsEntityItemMap"
      description: The result of the query.
    OpsEntityItemEntryList:
      type: array
      items:
        $ref: "#/components/schemas/OpsEntityItemEntry"
      minItems: 0
      maxItems: 10000
    OpsEntityItem:
      type: object
      properties:
        Content:
          $ref: "#/components/schemas/OpsEntityItemEntryList"
      description: The OpsItem summaries result item.
    OpsEntityItemEntry:
      type: object
      minProperties: 0
      maxProperties: 50
      additionalProperties:
        $ref: "#/components/schemas/AttributeValue"
    OpsEntityItemKey:
      type: string
    OpsFilterKey:
      type: string
      minLength: 1
      maxLength: 200
    OpsFilterValueList:
      type: array
      items:
        $ref: "#/components/schemas/OpsFilterValue"
      minItems: 1
      maxItems: 40
    OpsFilterOperatorType:
      type: string
      enum:
        - Equal
        - NotEqual
        - BeginWith
        - LessThan
        - GreaterThan
        - Exists
    OpsFilter:
      type: object
      required:
        - Key
        - Values
      properties:
        Key:
          $ref: "#/components/schemas/OpsFilterKey"
        Values:
          $ref: "#/components/schemas/OpsFilterValueList"
        Type:
          $ref: "#/components/schemas/OpsFilterOperatorType"
      description: A filter for viewing OpsItem summaries.
    OpsFilterValue:
      type: string
    OpsItemStatus:
      type: string
      enum:
        - Open
        - InProgress
        - Resolved
    OpsItemDataKey:
      type: string
      minLength: 1
      maxLength: 128
    OpsItemDataType:
      type: string
      enum:
        - SearchableString
        - String
    OpsItemDataValueString:
      type: string
    OpsItemDataValue:
      type: object
      properties:
        Value:
          $ref: "#/components/schemas/OpsItemDataValueString"
        Type:
          $ref: "#/components/schemas/OpsItemDataType"
      description: An object that defines the value of the key and its type in the
        OperationalData map.
    OpsItemFilterKey:
      type: string
      enum:
        - Status
        - CreatedBy
        - Source
        - Priority
        - Title
        - OpsItemId
        - CreatedTime
        - LastModifiedTime
        - OperationalData
        - OperationalDataKey
        - OperationalDataValue
        - ResourceId
        - AutomationId
    OpsItemFilterValues:
      type: array
      items:
        $ref: "#/components/schemas/OpsItemFilterValue"
    OpsItemFilterOperator:
      type: string
      enum:
        - Equal
        - Contains
        - GreaterThan
        - LessThan
    OpsItemFilter:
      type: object
      required:
        - Key
        - Values
        - Operator
      properties:
        Key:
          $ref: "#/components/schemas/OpsItemFilterKey"
        Values:
          $ref: "#/components/schemas/OpsItemFilterValues"
        Operator:
          $ref: "#/components/schemas/OpsItemFilterOperator"
      description: Describes an OpsItem filter.
    OpsItemFilterValue:
      type: string
    OpsItemNotification:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/String"
      description: A notification about the OpsItem.
    OpsItemOpsDataKeysList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    OpsItemSummary:
      type: object
      properties:
        CreatedBy:
          $ref: "#/components/schemas/String"
        CreatedTime:
          $ref: "#/components/schemas/DateTime"
        LastModifiedBy:
          $ref: "#/components/schemas/String"
        LastModifiedTime:
          $ref: "#/components/schemas/DateTime"
        Priority:
          $ref: "#/components/schemas/OpsItemPriority"
        Source:
          $ref: "#/components/schemas/OpsItemSource"
        Status:
          $ref: "#/components/schemas/OpsItemStatus"
        OpsItemId:
          $ref: "#/components/schemas/OpsItemId"
        Title:
          $ref: "#/components/schemas/OpsItemTitle"
        OperationalData:
          $ref: "#/components/schemas/OpsItemOperationalData"
      description: A count of OpsItems.
    OutputSourceId:
      type: string
      minLength: 36
      maxLength: 36
    OutputSourceType:
      type: string
    PSParameterSelector:
      type: string
      minLength: 0
      maxLength: 128
    PSParameterValue:
      type: string
    ParameterType:
      type: string
      enum:
        - String
        - StringList
        - SecureString
    ParameterDescription:
      type: string
      minLength: 0
      maxLength: 1024
    ParameterKeyId:
      type: string
      pattern: ^([a-zA-Z0-9:/_-]+)$
      minLength: 1
      maxLength: 256
    ParameterTier:
      type: string
      enum:
        - Standard
        - Advanced
        - Intelligent-Tiering
    ParameterPolicyList:
      type: array
      items:
        $ref: "#/components/schemas/ParameterInlinePolicy"
    ParameterHistory:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/PSParameterName"
        Type:
          $ref: "#/components/schemas/ParameterType"
        KeyId:
          $ref: "#/components/schemas/ParameterKeyId"
        LastModifiedDate:
          $ref: "#/components/schemas/DateTime"
        LastModifiedUser:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/ParameterDescription"
        Value:
          $ref: "#/components/schemas/PSParameterValue"
        AllowedPattern:
          $ref: "#/components/schemas/AllowedPattern"
        Version:
          $ref: "#/components/schemas/PSParameterVersion"
        Labels:
          $ref: "#/components/schemas/ParameterLabelList"
        Tier:
          $ref: "#/components/schemas/ParameterTier"
        Policies:
          $ref: "#/components/schemas/ParameterPolicyList"
      description: Information about parameter usage.
    ParameterInlinePolicy:
      type: object
      properties:
        PolicyText:
          $ref: "#/components/schemas/String"
        PolicyType:
          $ref: "#/components/schemas/String"
        PolicyStatus:
          $ref: "#/components/schemas/String"
      description: One or more policies assigned to a parameter.
    ParameterLabel:
      type: string
      minLength: 1
      maxLength: 100
    ParameterMetadata:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/PSParameterName"
        Type:
          $ref: "#/components/schemas/ParameterType"
        KeyId:
          $ref: "#/components/schemas/ParameterKeyId"
        LastModifiedDate:
          $ref: "#/components/schemas/DateTime"
        LastModifiedUser:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/ParameterDescription"
        AllowedPattern:
          $ref: "#/components/schemas/AllowedPattern"
        Version:
          $ref: "#/components/schemas/PSParameterVersion"
        Tier:
          $ref: "#/components/schemas/ParameterTier"
        Policies:
          $ref: "#/components/schemas/ParameterPolicyList"
      description: Metadata includes information like the ARN of the last user and the
        date/time the parameter was last used.
    ParameterName:
      type: string
    ParameterPolicies:
      type: string
      minLength: 1
      maxLength: 4096
    ParameterStringFilterKey:
      type: string
      pattern: tag:.+|Name|Type|KeyId|Path|Label|Tier
      minLength: 1
      maxLength: 132
    ParameterStringQueryOption:
      type: string
      minLength: 1
      maxLength: 10
    ParameterStringFilterValueList:
      type: array
      items:
        $ref: "#/components/schemas/ParameterStringFilterValue"
      minItems: 1
      maxItems: 50
    ParameterStringFilter:
      type: object
      required:
        - Key
      properties:
        Key:
          $ref: "#/components/schemas/ParameterStringFilterKey"
        Option:
          $ref: "#/components/schemas/ParameterStringQueryOption"
        Values:
          $ref: "#/components/schemas/ParameterStringFilterValueList"
      description: <p>One or more filters. Use a filter to return a more specific list of
        results.</p> <note> <p>The <code>Name</code> and <code>Tier</code>
        filter keys can't be used with the <a>GetParametersByPath</a> API
        action. Also, the <code>Label</code> filter key can't be used with the
        <a>DescribeParameters</a> API action.</p> </note>
    ParameterStringFilterValue:
      type: string
      minLength: 1
      maxLength: 1024
    ParameterValue:
      type: string
    ParameterValueList:
      type: array
      items:
        $ref: "#/components/schemas/ParameterValue"
    ParametersFilterKey:
      type: string
      enum:
        - Name
        - Type
        - KeyId
    ParametersFilterValueList:
      type: array
      items:
        $ref: "#/components/schemas/ParametersFilterValue"
      minItems: 1
      maxItems: 50
    ParametersFilter:
      type: object
      required:
        - Key
        - Values
      properties:
        Key:
          $ref: "#/components/schemas/ParametersFilterKey"
        Values:
          $ref: "#/components/schemas/ParametersFilterValueList"
      description: This data type is deprecated. Instead, use <a>ParameterStringFilter</a>.
    ParametersFilterValue:
      type: string
      minLength: 1
      maxLength: 1024
    PatchId:
      type: string
      minLength: 1
      maxLength: 100
    PatchTitle:
      type: string
    PatchDescription:
      type: string
    PatchContentUrl:
      type: string
    PatchVendor:
      type: string
    PatchProductFamily:
      type: string
    PatchProduct:
      type: string
    PatchClassification:
      type: string
    PatchMsrcSeverity:
      type: string
    PatchKbNumber:
      type: string
    PatchMsrcNumber:
      type: string
    PatchLanguage:
      type: string
    PatchBaselineIdentity:
      type: object
      properties:
        BaselineId:
          $ref: "#/components/schemas/BaselineId"
        BaselineName:
          $ref: "#/components/schemas/BaselineName"
        OperatingSystem:
          $ref: "#/components/schemas/OperatingSystem"
        BaselineDescription:
          $ref: "#/components/schemas/BaselineDescription"
        DefaultBaseline:
          $ref: "#/components/schemas/DefaultBaseline"
      description: Defines the basic information about a patch baseline.
    PatchSeverity:
      type: string
    PatchComplianceDataState:
      type: string
      enum:
        - INSTALLED
        - INSTALLED_OTHER
        - INSTALLED_REJECTED
        - MISSING
        - NOT_APPLICABLE
        - FAILED
    PatchComplianceData:
      type: object
      required:
        - Title
        - KBId
        - Classification
        - Severity
        - State
        - InstalledTime
      properties:
        Title:
          $ref: "#/components/schemas/PatchTitle"
        KBId:
          $ref: "#/components/schemas/PatchKbNumber"
        Classification:
          $ref: "#/components/schemas/PatchClassification"
        Severity:
          $ref: "#/components/schemas/PatchSeverity"
        State:
          $ref: "#/components/schemas/PatchComplianceDataState"
        InstalledTime:
          $ref: "#/components/schemas/DateTime"
      description: Information about the state of a patch on a particular instance as it
        relates to the patch baseline used to patch the instance.
    PatchDeploymentStatus:
      type: string
      enum:
        - APPROVED
        - PENDING_APPROVAL
        - EXPLICIT_APPROVED
        - EXPLICIT_REJECTED
    PatchFilterKey:
      type: string
      enum:
        - PATCH_SET
        - PRODUCT
        - PRODUCT_FAMILY
        - CLASSIFICATION
        - MSRC_SEVERITY
        - PATCH_ID
        - SECTION
        - PRIORITY
        - SEVERITY
    PatchFilterValueList:
      type: array
      items:
        $ref: "#/components/schemas/PatchFilterValue"
      minItems: 1
      maxItems: 20
    PatchFilter:
      type: object
      required:
        - Key
        - Values
      properties:
        Key:
          $ref: "#/components/schemas/PatchFilterKey"
        Values:
          $ref: "#/components/schemas/PatchFilterValueList"
      description: <p> Defines which patches should be included in a patch baseline.</p>
        <p>A patch filter consists of a key and a set of values. The filter key
        is a patch property. For example, the available filter keys for WINDOWS
        are PATCH_SET, PRODUCT, PRODUCT_FAMILY, CLASSIFICATION, and
        MSRC_SEVERITY. The filter values define a matching criterion for the
        patch property indicated by the key. For example, if the filter key is
        PRODUCT and the filter values are ["Office 2013", "Office 2016"], then
        the filter accepts all patches where product name is either "Office
        2013" or "Office 2016". The filter values can be exact values for the
        patch property given as a key, or a wildcard (*), which matches all
        values.</p> <p>You can view lists of valid values for the patch
        properties by running the <code>DescribePatchProperties</code> command.
        For information about which patch properties can be used with each major
        operating system, see <a>DescribePatchProperties</a>.</p>
    PatchFilterList:
      type: array
      items:
        $ref: "#/components/schemas/PatchFilter"
      minItems: 0
      maxItems: 4
    PatchFilterValue:
      type: string
      minLength: 1
      maxLength: 64
    PatchGroupPatchBaselineMapping:
      type: object
      properties:
        PatchGroup:
          $ref: "#/components/schemas/PatchGroup"
        BaselineIdentity:
          $ref: "#/components/schemas/PatchBaselineIdentity"
      description: The mapping between a patch group and the patch baseline the patch group
        is registered with.
    PatchOrchestratorFilterKey:
      type: string
      minLength: 1
      maxLength: 128
    PatchOrchestratorFilterValues:
      type: array
      items:
        $ref: "#/components/schemas/PatchOrchestratorFilterValue"
    PatchOrchestratorFilter:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/PatchOrchestratorFilterKey"
        Values:
          $ref: "#/components/schemas/PatchOrchestratorFilterValues"
      description: Defines a filter used in Patch Manager APIs.
    PatchOrchestratorFilterValue:
      type: string
      minLength: 1
      maxLength: 256
    PatchPropertyEntry:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/AttributeValue"
    PatchRule:
      type: object
      required:
        - PatchFilterGroup
        - ApproveAfterDays
      properties:
        PatchFilterGroup:
          $ref: "#/components/schemas/PatchFilterGroup"
        ComplianceLevel:
          $ref: "#/components/schemas/PatchComplianceLevel"
        ApproveAfterDays:
          $ref: "#/components/schemas/ApproveAfterDays"
        EnableNonSecurity:
          $ref: "#/components/schemas/Boolean"
      description: Defines an approval rule for a patch baseline.
    PatchRuleList:
      type: array
      items:
        $ref: "#/components/schemas/PatchRule"
      minItems: 0
      maxItems: 10
    PatchSourceName:
      type: string
      pattern: ^[a-zA-Z0-9_\-.]{3,50}$
    PatchSourceProductList:
      type: array
      items:
        $ref: "#/components/schemas/PatchSourceProduct"
      minItems: 1
      maxItems: 20
    PatchSourceConfiguration:
      type: string
      minLength: 1
      maxLength: 1024
      format: password
    PatchSource:
      type: object
      required:
        - Name
        - Products
        - Configuration
      properties:
        Name:
          $ref: "#/components/schemas/PatchSourceName"
        Products:
          $ref: "#/components/schemas/PatchSourceProductList"
        Configuration:
          $ref: "#/components/schemas/PatchSourceConfiguration"
      description: Information about the patches to use to update the instances, including
        target operating systems and source repository. Applies to Linux
        instances only.
    PatchSourceProduct:
      type: string
      minLength: 1
      maxLength: 128
    PutInventoryMessage:
      type: string
    Region:
      type: string
    Regions:
      type: array
      items:
        $ref: "#/components/schemas/Region"
      minItems: 1
      maxItems: 50
    RelatedOpsItem:
      type: object
      required:
        - OpsItemId
      properties:
        OpsItemId:
          $ref: "#/components/schemas/String"
      description: An OpsItems that shares something in common with the current OpsItem.
        For example, related OpsItems can include OpsItems with similar error
        messages, impacted resources, or statuses for the impacted resource.
    TargetParameterList:
      type: array
      items:
        $ref: "#/components/schemas/ParameterValue"
    ResourceComplianceSummaryItem:
      type: object
      properties:
        ComplianceType:
          $ref: "#/components/schemas/ComplianceTypeName"
        ResourceType:
          $ref: "#/components/schemas/ComplianceResourceType"
        ResourceId:
          $ref: "#/components/schemas/ComplianceResourceId"
        Status:
          $ref: "#/components/schemas/ComplianceStatus"
        OverallSeverity:
          $ref: "#/components/schemas/ComplianceSeverity"
        ExecutionSummary:
          $ref: "#/components/schemas/ComplianceExecutionSummary"
        CompliantSummary:
          $ref: "#/components/schemas/CompliantSummary"
        NonCompliantSummary:
          $ref: "#/components/schemas/NonCompliantSummary"
      description: "Compliance summary information for a specific resource. "
    ResourceDataSyncAWSKMSKeyARN:
      type: string
      pattern: arn:.*
      minLength: 1
      maxLength: 512
    ResourceDataSyncCreatedTime:
      type: string
      format: date-time
    ResourceDataSyncItem:
      type: object
      properties:
        SyncName:
          $ref: "#/components/schemas/ResourceDataSyncName"
        S3Destination:
          $ref: "#/components/schemas/ResourceDataSyncS3Destination"
        LastSyncTime:
          $ref: "#/components/schemas/LastResourceDataSyncTime"
        LastSuccessfulSyncTime:
          $ref: "#/components/schemas/LastSuccessfulResourceDataSyncTime"
        LastStatus:
          $ref: "#/components/schemas/LastResourceDataSyncStatus"
        SyncCreatedTime:
          $ref: "#/components/schemas/ResourceDataSyncCreatedTime"
        LastSyncStatusMessage:
          $ref: "#/components/schemas/LastResourceDataSyncMessage"
      description: Information about a Resource Data Sync configuration, including its
        current status and last successful sync.
    ResourceDataSyncS3BucketName:
      type: string
      minLength: 1
      maxLength: 2048
    ResourceDataSyncS3Prefix:
      type: string
      minLength: 1
      maxLength: 256
    ResourceDataSyncS3Format:
      type: string
      enum:
        - JsonSerDe
    ResourceDataSyncS3Region:
      type: string
      minLength: 1
      maxLength: 64
    ResultAttribute:
      type: object
      required:
        - TypeName
      properties:
        TypeName:
          $ref: "#/components/schemas/InventoryItemTypeName"
      description: The inventory item result attribute.
    SessionId:
      type: string
      minLength: 1
      maxLength: 96
    TokenValue:
      type: string
      minLength: 0
      maxLength: 300
    StreamUrl:
      type: string
    ScheduledWindowExecution:
      type: object
      properties:
        WindowId:
          $ref: "#/components/schemas/MaintenanceWindowId"
        Name:
          $ref: "#/components/schemas/MaintenanceWindowName"
        ExecutionTime:
          $ref: "#/components/schemas/MaintenanceWindowStringDateTime"
      description: Information about a scheduled execution for a maintenance window.
    SignalType:
      type: string
      enum:
        - Approve
        - Reject
        - StartStep
        - StopStep
        - Resume
    ServiceSettingValue:
      type: string
      minLength: 1
      maxLength: 4096
    SessionStatus:
      type: string
      enum:
        - Connected
        - Connecting
        - Disconnected
        - Terminated
        - Terminating
        - Failed
    SessionOwner:
      type: string
      minLength: 1
      maxLength: 256
    SessionDetails:
      type: string
      minLength: 1
      maxLength: 1024
    SessionManagerOutputUrl:
      type: object
      properties:
        S3OutputUrl:
          $ref: "#/components/schemas/SessionManagerS3OutputUrl"
        CloudWatchOutputUrl:
          $ref: "#/components/schemas/SessionManagerCloudWatchOutputUrl"
      description: Reserved for future use.
    Session:
      type: object
      properties:
        SessionId:
          $ref: "#/components/schemas/SessionId"
        Target:
          $ref: "#/components/schemas/SessionTarget"
        Status:
          $ref: "#/components/schemas/SessionStatus"
        StartDate:
          $ref: "#/components/schemas/DateTime"
        EndDate:
          $ref: "#/components/schemas/DateTime"
        DocumentName:
          $ref: "#/components/schemas/DocumentName"
        Owner:
          $ref: "#/components/schemas/SessionOwner"
        Details:
          $ref: "#/components/schemas/SessionDetails"
        OutputUrl:
          $ref: "#/components/schemas/SessionManagerOutputUrl"
      description: Information about a Session Manager connection to an instance.
    SessionFilterKey:
      type: string
      enum:
        - InvokedAfter
        - InvokedBefore
        - Target
        - Owner
        - Status
    SessionFilterValue:
      type: string
      minLength: 1
      maxLength: 200
    SessionFilter:
      type: object
      required:
        - key
        - value
      properties:
        key:
          $ref: "#/components/schemas/SessionFilterKey"
        value:
          $ref: "#/components/schemas/SessionFilterValue"
      description: Describes a filter for Session Manager information.
    SessionManagerCloudWatchOutputUrl:
      type: string
      minLength: 1
      maxLength: 2083
    SessionManagerS3OutputUrl:
      type: string
      minLength: 1
      maxLength: 2083
    SessionManagerParameterName:
      type: string
      minLength: 1
      maxLength: 255
    SessionManagerParameterValue:
      type: string
      minLength: 1
      maxLength: 65535
    SessionManagerParameterValueList:
      type: array
      items:
        $ref: "#/components/schemas/SessionManagerParameterValue"
    SessionManagerParameters:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/SessionManagerParameterValueList"
    ValidNextStepList:
      type: array
      items:
        $ref: "#/components/schemas/ValidNextStep"
    TargetLocation:
      type: object
      properties:
        Accounts:
          $ref: "#/components/schemas/Accounts"
        Regions:
          $ref: "#/components/schemas/Regions"
        TargetLocationMaxConcurrency:
          $ref: "#/components/schemas/MaxConcurrency"
        TargetLocationMaxErrors:
          $ref: "#/components/schemas/MaxErrors"
        ExecutionRoleName:
          $ref: "#/components/schemas/ExecutionRoleName"
      description: The combination of AWS Regions and accounts targeted by the current
        Automation execution.
    StepExecution:
      type: object
      properties:
        StepName:
          $ref: "#/components/schemas/String"
        Action:
          $ref: "#/components/schemas/AutomationActionName"
        TimeoutSeconds:
          $ref: "#/components/schemas/Long"
        OnFailure:
          $ref: "#/components/schemas/String"
        MaxAttempts:
          $ref: "#/components/schemas/Integer"
        ExecutionStartTime:
          $ref: "#/components/schemas/DateTime"
        ExecutionEndTime:
          $ref: "#/components/schemas/DateTime"
        StepStatus:
          $ref: "#/components/schemas/AutomationExecutionStatus"
        ResponseCode:
          $ref: "#/components/schemas/String"
        Inputs:
          $ref: "#/components/schemas/NormalStringMap"
        Outputs:
          $ref: "#/components/schemas/AutomationParameterMap"
        Response:
          $ref: "#/components/schemas/String"
        FailureMessage:
          $ref: "#/components/schemas/String"
        FailureDetails:
          $ref: "#/components/schemas/FailureDetails"
        StepExecutionId:
          $ref: "#/components/schemas/String"
        OverriddenParameters:
          $ref: "#/components/schemas/AutomationParameterMap"
        IsEnd:
          $ref: "#/components/schemas/Boolean"
        NextStep:
          $ref: "#/components/schemas/String"
        IsCritical:
          $ref: "#/components/schemas/Boolean"
        ValidNextSteps:
          $ref: "#/components/schemas/ValidNextStepList"
        Targets:
          $ref: "#/components/schemas/Targets"
        TargetLocation:
          $ref: "#/components/schemas/TargetLocation"
      description: Detailed information about an the execution state of an Automation step.
    StepExecutionFilterKey:
      type: string
      enum:
        - StartTimeBefore
        - StartTimeAfter
        - StepExecutionStatus
        - StepExecutionId
        - StepName
        - Action
    StepExecutionFilterValueList:
      type: array
      items:
        $ref: "#/components/schemas/StepExecutionFilterValue"
      minItems: 1
      maxItems: 10
    StepExecutionFilter:
      type: object
      required:
        - Key
        - Values
      properties:
        Key:
          $ref: "#/components/schemas/StepExecutionFilterKey"
        Values:
          $ref: "#/components/schemas/StepExecutionFilterValueList"
      description: A filter to limit the amount of step execution information returned by
        the call.
    StepExecutionFilterValue:
      type: string
      minLength: 1
      maxLength: 150
    StopType:
      type: string
      enum:
        - Complete
        - Cancel
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 256
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
        Value:
          $ref: "#/components/schemas/TagValue"
      description: Metadata that you assign to your AWS resources. Tags enable you to
        categorize your resources in different ways, for example, by purpose,
        owner, or environment. In Systems Manager, you can apply tags to
        documents, managed instances, maintenance windows, Parameter Store
        parameters, and patch baselines.
    TargetKey:
      type: string
      pattern: ^[\p{L}\p{Z}\p{N}_.:/=\-@]*$|resource-groups:ResourceTypeFilters|resource-groups:Name
      minLength: 1
      maxLength: 163
    TargetValues:
      type: array
      items:
        $ref: "#/components/schemas/TargetValue"
      minItems: 0
      maxItems: 50
    Target:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/TargetKey"
        Values:
          $ref: "#/components/schemas/TargetValues"
      description: <p>An array of search criteria that targets instances using a Key,Value
        combination that you specify. </p> <p>Supported formats include the
        following.</p> <ul> <li> <p>
        <code>Key=InstanceIds,Values=<i>instance-id-1</i>,<i>instance-id-2</i>,<i>instance-id-3</i>
        </code> </p> </li> <li> <p>
        <code>Key=tag:<i>my-tag-key</i>,Values=<i>my-tag-value-1</i>,<i>my-tag-value-2</i>
        </code> </p> </li> <li> <p>
        <code>Key=tag-key,Values=<i>my-tag-key-1</i>,<i>my-tag-key-2</i> </code>
        </p> </li> <li> <p>(Maintenance window targets only)
        <code>Key=resource-groups:Name,Values=<i>resource-group-name</i> </code>
        </p> </li> <li> <p>(Maintenance window targets only)
        <code>Key=resource-groups:ResourceTypeFilters,Values=<i>resource-type-1</i>,<i>resource-type-2</i>
        </code> </p> </li> </ul> <p>For example:</p> <ul> <li> <p>
        <code>Key=InstanceIds,Values=i-02573cafcfEXAMPLE,i-0471e04240EXAMPLE,i-07782c72faEXAMPLE</code>
        </p> </li> <li> <p>
        <code>Key=tag:CostCenter,Values=CostCenter1,CostCenter2,CostCenter3</code>
        </p> </li> <li> <p>
        <code>Key=tag-key,Values=Name,Instance-Type,CostCenter</code> </p> </li>
        <li> <p>(Maintenance window targets only)
        <code>Key=resource-groups:Name,Values=ProductionResourceGroup</code>
        </p> </li> <li> <p>(Maintenance window targets only)
        <code>Key=resource-groups:ResourceTypeFilters,Values=<i>AWS::EC2::INSTANCE</i>,<i>AWS::EC2::VPC</i>
        </code> </p> </li> </ul> <p>For information about how to send commands
        that target instances using <code>Key,Value</code> parameters, see <a
        href="https://docs.aws.amazon.com/systems-manager/latest/userguide/send-commands-multiple.html#send-commands-targeting">Using
        Targets and Rate Controls to Send Commands to a Fleet</a> in the <i>AWS
        Systems Manager User Guide</i>.</p>
    TargetMapValueList:
      type: array
      items:
        $ref: "#/components/schemas/TargetMapValue"
      minItems: 0
      maxItems: 25
    TargetMap:
      type: object
      minProperties: 1
      maxProperties: 20
      additionalProperties:
        $ref: "#/components/schemas/TargetMapValueList"
    TargetMapKey:
      type: string
      minLength: 1
      maxLength: 50
    TargetMapValue:
      type: string
      minLength: 1
      maxLength: 50
    TargetValue:
      type: string
    ValidNextStep:
      type: string
      minLength: 1
      maxLength: 65535
