openapi: 3.0.0
info:
  version: 2017-01-26
  x-release: v4
  title: AWS Resource Groups Tagging API
  description: <fullname>Resource Groups Tagging API</fullname> <p>This guide describes the
    API operations for the resource groups tagging.</p> <p>A tag is a label that
    you assign to an AWS resource. A tag consists of a key and a value, both of
    which you define. For example, if you have two Amazon EC2 instances, you
    might assign both a tag key of "Stack." But the value of "Stack" might be
    "Testing" for one and "Production" for the other.</p> <p>Tagging can help
    you organize your resources and enables you to simplify resource management,
    access management and cost allocation. </p> <p>You can use the resource
    groups tagging API operations to complete the following tasks:</p> <ul> <li>
    <p>Tag and untag supported resources located in the specified region for the
    AWS account</p> </li> <li> <p>Use tag-based filters to search for resources
    located in the specified region for the AWS account</p> </li> <li> <p>List
    all existing tag keys in the specified region for the AWS account</p> </li>
    <li> <p>List all existing values for the specified key in the specified
    region for the AWS account</p> </li> </ul> <p/> <p>To use resource groups
    tagging API operations, you must add the following permissions to your IAM
    policy:</p> <ul> <li> <p> <code>tag:GetResources</code> </p> </li> <li> <p>
    <code>tag:TagResources</code> </p> </li> <li> <p>
    <code>tag:UntagResources</code> </p> </li> <li> <p>
    <code>tag:GetTagKeys</code> </p> </li> <li> <p>
    <code>tag:GetTagValues</code> </p> </li> </ul> <p>You'll also need
    permissions to access the resources of individual services so that you can
    tag and untag those resources.</p> <p>For more information on IAM policies,
    see <a
    href="http://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_manage.html">Managing
    IAM Policies</a> in the <i>IAM User Guide</i>.</p> <p>You can use the
    Resource Groups Tagging API to tag resources for the following AWS
    services.</p> <ul> <li> <p>Alexa for Business (a4b)</p> </li> <li> <p>API
    Gateway</p> </li> <li> <p>AWS AppStream</p> </li> <li> <p>AWS AppSync</p>
    </li> <li> <p>AWS App Mesh</p> </li> <li> <p>Amazon Athena</p> </li> <li>
    <p>Amazon Aurora</p> </li> <li> <p>AWS Backup</p> </li> <li> <p>AWS
    Certificate Manager</p> </li> <li> <p>AWS Certificate Manager Private CA</p>
    </li> <li> <p>Amazon Cloud Directory</p> </li> <li> <p>AWS
    CloudFormation</p> </li> <li> <p>Amazon CloudFront</p> </li> <li> <p>AWS
    CloudHSM</p> </li> <li> <p>AWS CloudTrail</p> </li> <li> <p>Amazon
    CloudWatch (alarms only)</p> </li> <li> <p>Amazon CloudWatch Events</p>
    </li> <li> <p>Amazon CloudWatch Logs</p> </li> <li> <p>AWS CodeBuild</p>
    </li> <li> <p>AWS CodeCommit</p> </li> <li> <p>AWS CodePipeline</p> </li>
    <li> <p>AWS CodeStar</p> </li> <li> <p>Amazon Cognito Identity</p> </li>
    <li> <p>Amazon Cognito User Pools</p> </li> <li> <p>Amazon Comprehend</p>
    </li> <li> <p>AWS Config</p> </li> <li> <p>AWS Data Pipeline</p> </li> <li>
    <p>AWS Database Migration Service</p> </li> <li> <p>AWS Datasync</p> </li>
    <li> <p>AWS Direct Connect</p> </li> <li> <p>AWS Directory Service</p> </li>
    <li> <p>Amazon DynamoDB</p> </li> <li> <p>Amazon EBS</p> </li> <li>
    <p>Amazon EC2</p> </li> <li> <p>Amazon ECR</p> </li> <li> <p>Amazon ECS</p>
    </li> <li> <p>AWS Elastic Beanstalk</p> </li> <li> <p>Amazon Elastic File
    System</p> </li> <li> <p>Elastic Load Balancing</p> </li> <li> <p>Amazon
    ElastiCache</p> </li> <li> <p>Amazon Elasticsearch Service</p> </li> <li>
    <p>AWS Elemental MediaLive</p> </li> <li> <p>AWS Elemental MediaPackage</p>
    </li> <li> <p>AWS Elemental MediaTailor</p> </li> <li> <p>Amazon EMR</p>
    </li> <li> <p>Amazon FSx</p> </li> <li> <p>Amazon Glacier</p> </li> <li>
    <p>AWS Glue</p> </li> <li> <p>Amazon Inspector</p> </li> <li> <p>AWS IoT
    Analytics</p> </li> <li> <p>AWS IoT Core</p> </li> <li> <p>AWS IoT Device
    Defender</p> </li> <li> <p>AWS IoT Device Management</p> </li> <li> <p>AWS
    IoT Greengrass</p> </li> <li> <p>AWS Key Management Service</p> </li> <li>
    <p>Amazon Kinesis</p> </li> <li> <p>Amazon Kinesis Data Analytics</p> </li>
    <li> <p>Amazon Kinesis Data Firehose</p> </li> <li> <p>AWS Lambda</p> </li>
    <li> <p>AWS License Manager</p> </li> <li> <p>Amazon Machine Learning</p>
    </li> <li> <p>Amazon MQ</p> </li> <li> <p>Amazon MSK</p> </li> <li>
    <p>Amazon Neptune</p> </li> <li> <p>AWS OpsWorks</p> </li> <li> <p>Amazon
    RDS</p> </li> <li> <p>Amazon Redshift</p> </li> <li> <p>AWS Resource Access
    Manager</p> </li> <li> <p>AWS Resource Groups</p> </li> <li> <p>AWS
    RoboMaker</p> </li> <li> <p>Amazon Route 53</p> </li> <li> <p>Amazon Route
    53 Resolver</p> </li> <li> <p>Amazon S3 (buckets only)</p> </li> <li>
    <p>Amazon SageMaker</p> </li> <li> <p>AWS Secrets Manager</p> </li> <li>
    <p>AWS Service Catalog</p> </li> <li> <p>Amazon Simple Notification Service
    (SNS)</p> </li> <li> <p>Amazon Simple Queue Service (SQS)</p> </li> <li>
    <p>AWS Simple System Manager (SSM)</p> </li> <li> <p>AWS Step Functions</p>
    </li> <li> <p>AWS Storage Gateway</p> </li> <li> <p>AWS Transfer for
    SFTP</p> </li> <li> <p>Amazon VPC</p> </li> <li> <p>Amazon WorkSpaces</p>
    </li> </ul>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: resourcegroupstaggingapi
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/resourcegroupstaggingapi-2017-01-26.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/tagging/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.GetResources:
    post:
      operationId: GetResources
      description: <p>Returns all the tagged or previously tagged resources that are
        located in the specified region for the AWS account. You can optionally
        specify <i>filters</i> (tags and resource types) in your request,
        depending on what information you want returned. The response includes
        all tags that are associated with the requested resources.</p> <note>
        <p>You can check the <code>PaginationToken</code> response parameter to
        determine if a query completed. Queries can occasionally return fewer
        results on a page than allowed. The <code>PaginationToken</code>
        response parameter value is <code>null</code> <i>only</i> when there are
        no more results to display. </p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetResourcesOutput"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottledException"
        "482":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "483":
          description: PaginationTokenExpiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginationTokenExpiredException"
      parameters:
        - name: ResourcesPerPage
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: PaginationToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ResourceGroupsTaggingAPI_20170126.GetResources
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetResourcesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.GetTagKeys:
    post:
      operationId: GetTagKeys
      description: Returns all tag keys in the specified region for the AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTagKeysOutput"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottledException"
        "482":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "483":
          description: PaginationTokenExpiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginationTokenExpiredException"
      parameters:
        - name: PaginationToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ResourceGroupsTaggingAPI_20170126.GetTagKeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetTagKeysInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.GetTagValues:
    post:
      operationId: GetTagValues
      description: Returns all tag values for the specified key in the specified region for
        the AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTagValuesOutput"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottledException"
        "482":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "483":
          description: PaginationTokenExpiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginationTokenExpiredException"
      parameters:
        - name: PaginationToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ResourceGroupsTaggingAPI_20170126.GetTagValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetTagValuesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.TagResources:
    post:
      operationId: TagResources
      description: <p>Applies one or more tags to the specified resources. Note the
        following:</p> <ul> <li> <p>Not all resources can have tags. For a list
        of resources that support tagging, see <a
        href="http://docs.aws.amazon.com/ARG/latest/userguide/supported-resources.html">Supported
        Resources</a> in the <i>AWS Resource Groups User Guide</i>.</p> </li>
        <li> <p>Each resource can have up to 50 tags. For other limits, see <a
        href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#tag-restrictions">Tag
        Restrictions</a> in the <i>Amazon EC2 User Guide for Linux
        Instances</i>.</p> </li> <li> <p>You can only tag resources that are
        located in the specified region for the AWS account.</p> </li> <li>
        <p>To add tags to a resource, you need the necessary permissions for the
        service that the resource belongs to as well as permissions for adding
        tags. For more information, see <a
        href="http://docs.aws.amazon.com/ARG/latest/userguide/obtaining-permissions-for-tagging.html">Obtaining
        Permissions for Tagging</a> in the <i>AWS Resource Groups User
        Guide</i>.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourcesOutput"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottledException"
        "482":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ResourceGroupsTaggingAPI_20170126.TagResources
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagResourcesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=ResourceGroupsTaggingAPI_20170126.UntagResources:
    post:
      operationId: UntagResources
      description: <p>Removes the specified tags from the specified resources. When you
        specify a tag key, the action removes both that key and its associated
        value. The operation succeeds even if you attempt to remove tags from a
        resource that were already removed. Note the following:</p> <ul> <li>
        <p>To remove tags from a resource, you need the necessary permissions
        for the service that the resource belongs to as well as permissions for
        removing tags. For more information, see <a
        href="http://docs.aws.amazon.com/ARG/latest/userguide/obtaining-permissions-for-tagging.html">Obtaining
        Permissions for Tagging</a> in the <i>AWS Resource Groups User
        Guide</i>.</p> </li> <li> <p>You can only tag resources that are located
        in the specified region for the AWS account.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourcesOutput"
        "480":
          description: InvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterException"
        "481":
          description: ThrottledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottledException"
        "482":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - ResourceGroupsTaggingAPI_20170126.UntagResources
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UntagResourcesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://tagging.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS Resource Groups Tagging API multi-region endpoint
  - url: https://tagging.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS Resource Groups Tagging API multi-region endpoint
  - url: http://tagging.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Resource Groups Tagging API endpoint for China (Beijing) and China
      (Ningxia)
  - url: https://tagging.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Resource Groups Tagging API endpoint for China (Beijing) and China
      (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    GetResourcesOutput:
      type: object
      properties:
        PaginationToken:
          $ref: "#/components/schemas/PaginationToken"
        ResourceTagMappingList:
          $ref: "#/components/schemas/ResourceTagMappingList"
    GetResourcesInput:
      type: object
      properties:
        PaginationToken:
          $ref: "#/components/schemas/PaginationToken"
        TagFilters:
          $ref: "#/components/schemas/TagFilterList"
        ResourcesPerPage:
          $ref: "#/components/schemas/ResourcesPerPage"
        TagsPerPage:
          $ref: "#/components/schemas/TagsPerPage"
        ResourceTypeFilters:
          $ref: "#/components/schemas/ResourceTypeFilterList"
    InvalidParameterException: {}
    ThrottledException: {}
    InternalServiceException: {}
    PaginationTokenExpiredException: {}
    GetTagKeysOutput:
      type: object
      properties:
        PaginationToken:
          $ref: "#/components/schemas/PaginationToken"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
    GetTagKeysInput:
      type: object
      properties:
        PaginationToken:
          $ref: "#/components/schemas/PaginationToken"
    GetTagValuesOutput:
      type: object
      properties:
        PaginationToken:
          $ref: "#/components/schemas/PaginationToken"
        TagValues:
          $ref: "#/components/schemas/TagValuesOutputList"
    GetTagValuesInput:
      type: object
      required:
        - Key
      properties:
        PaginationToken:
          $ref: "#/components/schemas/PaginationToken"
        Key:
          $ref: "#/components/schemas/TagKey"
    TagResourcesOutput:
      type: object
      properties:
        FailedResourcesMap:
          $ref: "#/components/schemas/FailedResourcesMap"
    TagResourcesInput:
      type: object
      required:
        - ResourceARNList
        - Tags
      properties:
        ResourceARNList:
          $ref: "#/components/schemas/ResourceARNList"
        Tags:
          $ref: "#/components/schemas/TagMap"
    UntagResourcesOutput:
      type: object
      properties:
        FailedResourcesMap:
          $ref: "#/components/schemas/FailedResourcesMap"
    UntagResourcesInput:
      type: object
      required:
        - ResourceARNList
        - TagKeys
      properties:
        ResourceARNList:
          $ref: "#/components/schemas/ResourceARNList"
        TagKeys:
          $ref: "#/components/schemas/TagKeyListForUntag"
    AmazonResourceType:
      type: string
      minLength: 0
      maxLength: 256
    ErrorCode:
      type: string
      enum:
        - InternalServiceException
        - InvalidParameterException
    ErrorMessage:
      type: string
    FailureInfo:
      type: object
      properties:
        StatusCode:
          $ref: "#/components/schemas/StatusCode"
        ErrorCode:
          $ref: "#/components/schemas/ErrorCode"
        ErrorMessage:
          $ref: "#/components/schemas/ErrorMessage"
      description: Details of the common errors that all actions return.
    FailedResourcesMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/FailureInfo"
    StatusCode:
      type: integer
    PaginationToken:
      type: string
      minLength: 0
      maxLength: 2048
    TagFilterList:
      type: array
      items:
        $ref: "#/components/schemas/TagFilter"
      minItems: 0
      maxItems: 50
    ResourcesPerPage:
      type: integer
    TagsPerPage:
      type: integer
    ResourceTypeFilterList:
      type: array
      items:
        $ref: "#/components/schemas/AmazonResourceType"
    ResourceTagMappingList:
      type: array
      items:
        $ref: "#/components/schemas/ResourceTagMapping"
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagValuesOutputList:
      type: array
      items:
        $ref: "#/components/schemas/TagValue"
    ResourceARN:
      type: string
      minLength: 1
      maxLength: 1600
    ResourceARNList:
      type: array
      items:
        $ref: "#/components/schemas/ResourceARN"
      minItems: 1
      maxItems: 20
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    ResourceTagMapping:
      type: object
      properties:
        ResourceARN:
          $ref: "#/components/schemas/ResourceARN"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: A list of resource ARNs and the tags (keys and values) that are
        associated with each.
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
        Value:
          $ref: "#/components/schemas/TagValue"
      description: The metadata that you apply to AWS resources to help you categorize and
        organize them. Each tag consists of a key and an optional value, both of
        which you define. For more information, see <a
        href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#tag-basics">Tag
        Basics</a> in the <i>Amazon EC2 User Guide for Linux Instances</i>.
    TagValueList:
      type: array
      items:
        $ref: "#/components/schemas/TagValue"
      minItems: 0
      maxItems: 20
    TagFilter:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
        Values:
          $ref: "#/components/schemas/TagValueList"
      description: A list of tags (keys and values) that are used to specify the associated
        resources.
    TagKeyListForUntag:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
      minItems: 1
      maxItems: 50
    TagMap:
      type: object
      minProperties: 1
      maxProperties: 50
      additionalProperties:
        $ref: "#/components/schemas/TagValue"
