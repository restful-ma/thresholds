openapi: 3.0.0
info:
  version: 2010-12-01
  x-release: v4
  title: AWS Elastic Beanstalk
  description: <fullname>AWS Elastic Beanstalk</fullname> <p>AWS Elastic Beanstalk makes it
    easy for you to create, deploy, and manage scalable, fault-tolerant
    applications running on the Amazon Web Services cloud.</p> <p>For more
    information about this product, go to the <a
    href="http://aws.amazon.com/elasticbeanstalk/">AWS Elastic Beanstalk</a>
    details page. The location of the latest AWS Elastic Beanstalk WSDL is <a
    href="http://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl">http://elasticbeanstalk.s3.amazonaws.com/doc/2010-12-01/AWSElasticBeanstalk.wsdl</a>.
    To install the Software Development Kits (SDKs), Integrated Development
    Environment (IDE) Toolkits, and command line tools that enable you to access
    the API, go to <a href="http://aws.amazon.com/tools/">Tools for Amazon Web
    Services</a>.</p> <p> <b>Endpoints</b> </p> <p>For a list of region-specific
    endpoints that AWS Elastic Beanstalk supports, go to <a
    href="https://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbeanstalk_region">Regions
    and Endpoints</a> in the <i>Amazon Web Services Glossary</i>.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: elasticbeanstalk
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/elasticbeanstalk-2010-12-01.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/elasticbeanstalk/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#Action=AbortEnvironmentUpdate:
    get:
      x-aws-operation-name: AbortEnvironmentUpdate
      operationId: GET AbortEnvironmentUpdate
      description: Cancels in-progress environment configuration update or application
        version deployment.
      responses:
        "200":
          description: Success
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
      parameters:
        - name: EnvironmentId
          in: query
          required: false
          description: This specifies the ID of the environment with the in-progress update
            that you want to cancel.
          schema:
            type: string
        - name: EnvironmentName
          in: query
          required: false
          description: This specifies the name of the environment with the in-progress
            update that you want to cancel.
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AbortEnvironmentUpdate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: AbortEnvironmentUpdate
      operationId: POST AbortEnvironmentUpdate
      description: Cancels in-progress environment configuration update or application
        version deployment.
      responses:
        "200":
          description: Success
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AbortEnvironmentUpdate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                EnvironmentId:
                  description: This specifies the ID of the environment with the
                    in-progress update that you want to cancel.
                  type: string
                EnvironmentName:
                  description: This specifies the name of the environment with the
                    in-progress update that you want to cancel.
                  type: string
                  minLength: 4
                  maxLength: 40
  /#Action=ApplyEnvironmentManagedAction:
    get:
      x-aws-operation-name: ApplyEnvironmentManagedAction
      operationId: GET ApplyEnvironmentManagedAction
      description: Applies a scheduled managed action immediately. A managed action can be
        applied only if its status is <code>Scheduled</code>. Get the status and
        action ID of a managed action with
        <a>DescribeEnvironmentManagedActions</a>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ApplyEnvironmentManagedActionResult"
        "480":
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ElasticBeanstalkServiceException"
        "481":
          description: ManagedActionInvalidStateException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ManagedActionInvalidStateException"
      parameters:
        - name: EnvironmentName
          in: query
          required: false
          description: The name of the target environment.
          schema:
            type: string
        - name: EnvironmentId
          in: query
          required: false
          description: The environment ID of the target environment.
          schema:
            type: string
        - name: ActionId
          in: query
          required: true
          description: The action ID of the scheduled managed action to execute.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ApplyEnvironmentManagedAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ApplyEnvironmentManagedAction
      operationId: POST ApplyEnvironmentManagedAction
      description: Applies a scheduled managed action immediately. A managed action can be
        applied only if its status is <code>Scheduled</code>. Get the status and
        action ID of a managed action with
        <a>DescribeEnvironmentManagedActions</a>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ApplyEnvironmentManagedActionResult"
        "480":
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ElasticBeanstalkServiceException"
        "481":
          description: ManagedActionInvalidStateException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ManagedActionInvalidStateException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ApplyEnvironmentManagedAction
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                EnvironmentName:
                  description: The name of the target environment.
                  type: string
                EnvironmentId:
                  description: The environment ID of the target environment.
                  type: string
                ActionId:
                  description: The action ID of the scheduled managed action to execute.
                  type: string
              required:
                - ActionId
  /#Action=CheckDNSAvailability:
    get:
      x-aws-operation-name: CheckDNSAvailability
      operationId: GET CheckDNSAvailability
      description: Checks if the specified CNAME is available.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CheckDNSAvailabilityResultMessage"
      parameters:
        - name: CNAMEPrefix
          in: query
          required: true
          description: The prefix used when this CNAME is reserved.
          schema:
            type: string
            minLength: 4
            maxLength: 63
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CheckDNSAvailability
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CheckDNSAvailability
      operationId: POST CheckDNSAvailability
      description: Checks if the specified CNAME is available.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CheckDNSAvailabilityResultMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CheckDNSAvailability
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                CNAMEPrefix:
                  description: The prefix used when this CNAME is reserved.
                  type: string
                  minLength: 4
                  maxLength: 63
              required:
                - CNAMEPrefix
  /#Action=ComposeEnvironments:
    get:
      x-aws-operation-name: ComposeEnvironments
      operationId: GET ComposeEnvironments
      description: Create or update a group of environments that each run a separate
        component of a single application. Takes a list of version labels that
        specify application source bundles for each of the environments to
        create or update. The name of each environment and other required
        information must be included in the source bundles in an environment
        manifest named <code>env.yaml</code>. See <a
        href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-mgmt-compose.html">Compose
        Environments</a> for details.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EnvironmentDescriptionsMessage"
        "480":
          description: TooManyEnvironmentsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyEnvironmentsException"
        "481":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
      parameters:
        - name: ApplicationName
          in: query
          required: false
          description: The name of the application to which the specified source bundles
            belong.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: GroupName
          in: query
          required: false
          description: The name of the group to which the target environments belong.
            Specify a group name only if the environment name defined in each
            target environment's manifest ends with a + (plus) character. See <a
            href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html">Environment
            Manifest (env.yaml)</a> for details.
          schema:
            type: string
            minLength: 1
            maxLength: 19
        - name: VersionLabels
          in: query
          required: false
          description: A list of version labels, specifying one or more application source
            bundles that belong to the target application. Each source bundle
            must include an environment manifest that specifies the name of the
            environment and the name of the solution stack to use, and
            optionally can specify environment links to create.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ComposeEnvironments
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ComposeEnvironments
      operationId: POST ComposeEnvironments
      description: Create or update a group of environments that each run a separate
        component of a single application. Takes a list of version labels that
        specify application source bundles for each of the environments to
        create or update. The name of each environment and other required
        information must be included in the source bundles in an environment
        manifest named <code>env.yaml</code>. See <a
        href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-mgmt-compose.html">Compose
        Environments</a> for details.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EnvironmentDescriptionsMessage"
        "480":
          description: TooManyEnvironmentsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyEnvironmentsException"
        "481":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ComposeEnvironments
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ApplicationName:
                  description: The name of the application to which the specified source
                    bundles belong.
                  type: string
                  minLength: 1
                  maxLength: 100
                GroupName:
                  description: The name of the group to which the target environments
                    belong. Specify a group name only if the environment name
                    defined in each target environment's manifest ends with a +
                    (plus) character. See <a
                    href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html">Environment
                    Manifest (env.yaml)</a> for details.
                  type: string
                  minLength: 1
                  maxLength: 19
                VersionLabels:
                  description: A list of version labels, specifying one or more application
                    source bundles that belong to the target application. Each
                    source bundle must include an environment manifest that
                    specifies the name of the environment and the name of the
                    solution stack to use, and optionally can specify
                    environment links to create.
                  type: array
                  items:
                    type: string
  /#Action=CreateApplication:
    get:
      x-aws-operation-name: CreateApplication
      operationId: GET CreateApplication
      description: " Creates an application that has one configuration template named
        <code>default</code> and no application versions. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ApplicationDescriptionMessage"
        "480":
          description: TooManyApplicationsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyApplicationsException"
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: "<p>The name of the application.</p> <p>Constraint: This name must
            be unique within your account. If the specified name already exists,
            the action returns an <code>InvalidParameterValue</code> error.</p>"
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: Description
          in: query
          required: false
          description: Describes the application.
          schema:
            type: string
            maxLength: 200
        - name: ResourceLifecycleConfig.ServiceRole
          in: query
          description: >-
            The resource lifecycle configuration for an application. Defines
            lifecycle settings for resources that belong to the application, and
            the service role that Elastic Beanstalk assumes in order to apply
            lifecycle settings. The version lifecycle configuration defines
            lifecycle settings for application versions.

            <p>The ARN of an IAM service role that Elastic Beanstalk has permission to assume.</p> <p>The <code>ServiceRole</code> property is required the first time that you provide a <code>VersionLifecycleConfig</code> for the application in one of the supporting calls (<code>CreateApplication</code> or <code>UpdateApplicationResourceLifecycle</code>). After you provide it once, in either one of the calls, Elastic Beanstalk persists the Service Role with the application, and you don't need to specify it again in subsequent <code>UpdateApplicationResourceLifecycle</code> calls. You can, however, specify it in subsequent calls to change the Service Role to another value.</p>
          schema:
            type: string
        - name: ResourceLifecycleConfig.VersionLifecycleConfig
          in: query
          description: >-
            The resource lifecycle configuration for an application. Defines
            lifecycle settings for resources that belong to the application, and
            the service role that Elastic Beanstalk assumes in order to apply
            lifecycle settings. The version lifecycle configuration defines
            lifecycle settings for application versions.

            The application version lifecycle configuration.
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: <p>Specifies the tags applied to the application.</p> <p>Elastic
            Beanstalk applies these tags only to the application. Environments
            that you create in the application don't inherit the tags.</p>
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateApplication
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateApplication
      operationId: POST CreateApplication
      description: " Creates an application that has one configuration template named
        <code>default</code> and no application versions. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ApplicationDescriptionMessage"
        "480":
          description: TooManyApplicationsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyApplicationsException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateApplication
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ApplicationName:
                  description: "<p>The name of the application.</p> <p>Constraint: This
                    name must be unique within your account. If the specified
                    name already exists, the action returns an
                    <code>InvalidParameterValue</code> error.</p>"
                  type: string
                  minLength: 1
                  maxLength: 100
                Description:
                  description: Describes the application.
                  type: string
                  maxLength: 200
                ResourceLifecycleConfig.ServiceRole:
                  description: >-
                    The resource lifecycle configuration for an application.
                    Defines lifecycle settings for resources that belong to the
                    application, and the service role that Elastic Beanstalk
                    assumes in order to apply lifecycle settings. The version
                    lifecycle configuration defines lifecycle settings for
                    application versions.

                    <p>The ARN of an IAM service role that Elastic Beanstalk has permission to assume.</p> <p>The <code>ServiceRole</code> property is required the first time that you provide a <code>VersionLifecycleConfig</code> for the application in one of the supporting calls (<code>CreateApplication</code> or <code>UpdateApplicationResourceLifecycle</code>). After you provide it once, in either one of the calls, Elastic Beanstalk persists the Service Role with the application, and you don't need to specify it again in subsequent <code>UpdateApplicationResourceLifecycle</code> calls. You can, however, specify it in subsequent calls to change the Service Role to another value.</p>
                  type: string
                ResourceLifecycleConfig.VersionLifecycleConfig:
                  description: >-
                    The resource lifecycle configuration for an application.
                    Defines lifecycle settings for resources that belong to the
                    application, and the service role that Elastic Beanstalk
                    assumes in order to apply lifecycle settings. The version
                    lifecycle configuration defines lifecycle settings for
                    application versions.

                    The application version lifecycle configuration.
                  type: string
                Tags:
                  description: <p>Specifies the tags applied to the application.</p>
                    <p>Elastic Beanstalk applies these tags only to the
                    application. Environments that you create in the application
                    don't inherit the tags.</p>
                  type: array
                  items:
                    type: string
              required:
                - ApplicationName
  /#Action=CreateApplicationVersion:
    get:
      x-aws-operation-name: CreateApplicationVersion
      operationId: GET CreateApplicationVersion
      description: <p>Creates an application version for the specified application. You can
        create an application version from a source bundle in Amazon S3, a
        commit in AWS CodeCommit, or the output of an AWS CodeBuild build as
        follows:</p> <p>Specify a commit in an AWS CodeCommit repository with
        <code>SourceBuildInformation</code>.</p> <p>Specify a build in an AWS
        CodeBuild with <code>SourceBuildInformation</code> and
        <code>BuildConfiguration</code>.</p> <p>Specify a source bundle in S3
        with <code>SourceBundle</code> </p> <p>Omit both
        <code>SourceBuildInformation</code> and <code>SourceBundle</code> to use
        the default sample application.</p> <note> <p>Once you create an
        application version with a specified Amazon S3 bucket and key location,
        you cannot change that Amazon S3 location. If you change the Amazon S3
        location, you receive an exception when you attempt to launch an
        environment from the application version.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ApplicationVersionDescriptionMessage"
        "480":
          description: TooManyApplicationsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyApplicationsException"
        "481":
          description: TooManyApplicationVersionsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyApplicationVersionsException"
        "482":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
        "483":
          description: S3LocationNotInServiceRegionException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/S3LocationNotInServiceRegionException"
        "484":
          description: CodeBuildNotInServiceRegionException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CodeBuildNotInServiceRegionException"
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: " The name of the application. If no application is found with this
            name, and <code>AutoCreateApplication</code> is <code>false</code>,
            returns an <code>InvalidParameterValue</code> error. "
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: VersionLabel
          in: query
          required: true
          description: "<p>A label identifying this version.</p> <p>Constraint: Must be
            unique per application. If an application version already exists
            with this label for the specified application, AWS Elastic Beanstalk
            returns an <code>InvalidParameterValue</code> error. </p>"
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: Description
          in: query
          required: false
          description: Describes this version.
          schema:
            type: string
            maxLength: 200
        - name: SourceBuildInformation.SourceType
          in: query
          description: >-
            Location of the source code for an application version.

            <p>The type of repository.</p> <ul> <li> <p> <code>Git</code> </p> </li> <li> <p> <code>Zip</code> </p> </li> </ul>
          schema:
            type: string
        - name: SourceBuildInformation.SourceRepository
          in: query
          description: >-
            Location of the source code for an application version.

            <p>Location where the repository is stored.</p> <ul> <li> <p> <code>CodeCommit</code> </p> </li> <li> <p> <code>S3</code> </p> </li> </ul>
          schema:
            type: string
        - name: SourceBuildInformation.SourceLocation
          in: query
          description: >-
            Location of the source code for an application version.

            <p>The location of the source code, as a formatted string, depending on the value of <code>SourceRepository</code> </p> <ul> <li> <p>For <code>CodeCommit</code>, the format is the repository name and commit ID, separated by a forward slash. For example, <code>my-git-repo/265cfa0cf6af46153527f55d6503ec030551f57a</code>.</p> </li> <li> <p>For <code>S3</code>, the format is the S3 bucket name and object key, separated by a forward slash. For example, <code>my-s3-bucket/Folders/my-source-file</code>.</p> </li> </ul>
          schema:
            type: string
        - name: SourceBundle.S3Bucket
          in: query
          description: |-
            The bucket and key of an item stored in Amazon S3.
            The Amazon S3 bucket where the data is located.
          schema:
            type: string
        - name: SourceBundle.S3Key
          in: query
          description: |-
            The bucket and key of an item stored in Amazon S3.
            The Amazon S3 key where the data is located.
          schema:
            type: string
        - name: BuildConfiguration.ArtifactName
          in: query
          description: >-
            Settings for an AWS CodeBuild build.

            The name of the artifact of the CodeBuild build. If provided, Elastic Beanstalk stores the build artifact in the S3 location <i>S3-bucket</i>/resources/<i>application-name</i>/codebuild/codebuild-<i>version-label</i>-<i>artifact-name</i>.zip. If not provided, Elastic Beanstalk stores the build artifact in the S3 location <i>S3-bucket</i>/resources/<i>application-name</i>/codebuild/codebuild-<i>version-label</i>.zip. 
          schema:
            type: string
        - name: BuildConfiguration.CodeBuildServiceRole
          in: query
          description: >-
            Settings for an AWS CodeBuild build.

            The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS services on behalf of the AWS account.
          schema:
            type: string
        - name: BuildConfiguration.ComputeType
          in: query
          description: >-
            Settings for an AWS CodeBuild build.

            <p>Information about the compute resources the build project will use.</p> <ul> <li> <p> <code>BUILD_GENERAL1_SMALL: Use up to 3 GB memory and 2 vCPUs for builds</code> </p> </li> <li> <p> <code>BUILD_GENERAL1_MEDIUM: Use up to 7 GB memory and 4 vCPUs for builds</code> </p> </li> <li> <p> <code>BUILD_GENERAL1_LARGE: Use up to 15 GB memory and 8 vCPUs for builds</code> </p> </li> </ul>
          schema:
            type: string
        - name: BuildConfiguration.Image
          in: query
          description: |-
            Settings for an AWS CodeBuild build.
            The ID of the Docker image to use for this build project.
          schema:
            type: string
        - name: BuildConfiguration.TimeoutInMinutes
          in: query
          description: >-
            Settings for an AWS CodeBuild build.

            How long in minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait until timing out any related build that does not get marked as completed. The default is 60 minutes.
          schema:
            type: string
        - name: AutoCreateApplication
          in: query
          required: false
          description: Set to <code>true</code> to create an application with the specified
            name if it doesn't already exist.
          schema:
            type: boolean
        - name: Process
          in: query
          required: false
          description: <p>Pre-processes and validates the environment manifest
            (<code>env.yaml</code>) and configuration files
            (<code>*.config</code> files in the <code>.ebextensions</code>
            folder) in the source bundle. Validating configuration files can
            identify issues prior to deploying the application version to an
            environment.</p> <p>You must turn processing on for application
            versions that you create using AWS CodeBuild or AWS CodeCommit. For
            application versions built from a source bundle in Amazon S3,
            processing is optional.</p> <note> <p>The <code>Process</code>
            option validates Elastic Beanstalk configuration files. It doesn't
            validate your application's configuration files, like proxy server
            or Docker configuration.</p> </note>
          schema:
            type: boolean
        - name: Tags
          in: query
          required: false
          description: <p>Specifies the tags applied to the application version.</p>
            <p>Elastic Beanstalk applies these tags only to the application
            version. Environments that use the application version don't inherit
            the tags.</p>
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateApplicationVersion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateApplicationVersion
      operationId: POST CreateApplicationVersion
      description: <p>Creates an application version for the specified application. You can
        create an application version from a source bundle in Amazon S3, a
        commit in AWS CodeCommit, or the output of an AWS CodeBuild build as
        follows:</p> <p>Specify a commit in an AWS CodeCommit repository with
        <code>SourceBuildInformation</code>.</p> <p>Specify a build in an AWS
        CodeBuild with <code>SourceBuildInformation</code> and
        <code>BuildConfiguration</code>.</p> <p>Specify a source bundle in S3
        with <code>SourceBundle</code> </p> <p>Omit both
        <code>SourceBuildInformation</code> and <code>SourceBundle</code> to use
        the default sample application.</p> <note> <p>Once you create an
        application version with a specified Amazon S3 bucket and key location,
        you cannot change that Amazon S3 location. If you change the Amazon S3
        location, you receive an exception when you attempt to launch an
        environment from the application version.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ApplicationVersionDescriptionMessage"
        "480":
          description: TooManyApplicationsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyApplicationsException"
        "481":
          description: TooManyApplicationVersionsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyApplicationVersionsException"
        "482":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
        "483":
          description: S3LocationNotInServiceRegionException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/S3LocationNotInServiceRegionException"
        "484":
          description: CodeBuildNotInServiceRegionException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CodeBuildNotInServiceRegionException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateApplicationVersion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ApplicationName:
                  description: " The name of the application. If no application is found
                    with this name, and <code>AutoCreateApplication</code> is
                    <code>false</code>, returns an
                    <code>InvalidParameterValue</code> error. "
                  type: string
                  minLength: 1
                  maxLength: 100
                VersionLabel:
                  description: "<p>A label identifying this version.</p> <p>Constraint:
                    Must be unique per application. If an application version
                    already exists with this label for the specified
                    application, AWS Elastic Beanstalk returns an
                    <code>InvalidParameterValue</code> error. </p>"
                  type: string
                  minLength: 1
                  maxLength: 100
                Description:
                  description: Describes this version.
                  type: string
                  maxLength: 200
                SourceBuildInformation.SourceType:
                  description: >-
                    Location of the source code for an application version.

                    <p>The type of repository.</p> <ul> <li> <p> <code>Git</code> </p> </li> <li> <p> <code>Zip</code> </p> </li> </ul>
                  type: string
                SourceBuildInformation.SourceRepository:
                  description: >-
                    Location of the source code for an application version.

                    <p>Location where the repository is stored.</p> <ul> <li> <p> <code>CodeCommit</code> </p> </li> <li> <p> <code>S3</code> </p> </li> </ul>
                  type: string
                SourceBuildInformation.SourceLocation:
                  description: >-
                    Location of the source code for an application version.

                    <p>The location of the source code, as a formatted string, depending on the value of <code>SourceRepository</code> </p> <ul> <li> <p>For <code>CodeCommit</code>, the format is the repository name and commit ID, separated by a forward slash. For example, <code>my-git-repo/265cfa0cf6af46153527f55d6503ec030551f57a</code>.</p> </li> <li> <p>For <code>S3</code>, the format is the S3 bucket name and object key, separated by a forward slash. For example, <code>my-s3-bucket/Folders/my-source-file</code>.</p> </li> </ul>
                  type: string
                SourceBundle.S3Bucket:
                  description: |-
                    The bucket and key of an item stored in Amazon S3.
                    The Amazon S3 bucket where the data is located.
                  type: string
                SourceBundle.S3Key:
                  description: |-
                    The bucket and key of an item stored in Amazon S3.
                    The Amazon S3 key where the data is located.
                  type: string
                BuildConfiguration.ArtifactName:
                  description: >-
                    Settings for an AWS CodeBuild build.

                    The name of the artifact of the CodeBuild build. If provided, Elastic Beanstalk stores the build artifact in the S3 location <i>S3-bucket</i>/resources/<i>application-name</i>/codebuild/codebuild-<i>version-label</i>-<i>artifact-name</i>.zip. If not provided, Elastic Beanstalk stores the build artifact in the S3 location <i>S3-bucket</i>/resources/<i>application-name</i>/codebuild/codebuild-<i>version-label</i>.zip. 
                  type: string
                BuildConfiguration.CodeBuildServiceRole:
                  description: >-
                    Settings for an AWS CodeBuild build.

                    The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that enables AWS CodeBuild to interact with dependent AWS services on behalf of the AWS account.
                  type: string
                BuildConfiguration.ComputeType:
                  description: >-
                    Settings for an AWS CodeBuild build.

                    <p>Information about the compute resources the build project will use.</p> <ul> <li> <p> <code>BUILD_GENERAL1_SMALL: Use up to 3 GB memory and 2 vCPUs for builds</code> </p> </li> <li> <p> <code>BUILD_GENERAL1_MEDIUM: Use up to 7 GB memory and 4 vCPUs for builds</code> </p> </li> <li> <p> <code>BUILD_GENERAL1_LARGE: Use up to 15 GB memory and 8 vCPUs for builds</code> </p> </li> </ul>
                  type: string
                BuildConfiguration.Image:
                  description: |-
                    Settings for an AWS CodeBuild build.
                    The ID of the Docker image to use for this build project.
                  type: string
                BuildConfiguration.TimeoutInMinutes:
                  description: >-
                    Settings for an AWS CodeBuild build.

                    How long in minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait until timing out any related build that does not get marked as completed. The default is 60 minutes.
                  type: string
                AutoCreateApplication:
                  description: Set to <code>true</code> to create an application with the
                    specified name if it doesn't already exist.
                  type: boolean
                Process:
                  description: <p>Pre-processes and validates the environment manifest
                    (<code>env.yaml</code>) and configuration files
                    (<code>*.config</code> files in the
                    <code>.ebextensions</code> folder) in the source bundle.
                    Validating configuration files can identify issues prior to
                    deploying the application version to an environment.</p>
                    <p>You must turn processing on for application versions that
                    you create using AWS CodeBuild or AWS CodeCommit. For
                    application versions built from a source bundle in Amazon
                    S3, processing is optional.</p> <note> <p>The
                    <code>Process</code> option validates Elastic Beanstalk
                    configuration files. It doesn't validate your application's
                    configuration files, like proxy server or Docker
                    configuration.</p> </note>
                  type: boolean
                Tags:
                  description: <p>Specifies the tags applied to the application
                    version.</p> <p>Elastic Beanstalk applies these tags only to
                    the application version. Environments that use the
                    application version don't inherit the tags.</p>
                  type: array
                  items:
                    type: string
              required:
                - ApplicationName
                - VersionLabel
  /#Action=CreateConfigurationTemplate:
    get:
      x-aws-operation-name: CreateConfigurationTemplate
      operationId: GET CreateConfigurationTemplate
      description: <p>Creates a configuration template. Templates are associated with a
        specific application and are used to deploy different versions of the
        application with the same configuration settings.</p> <p>Templates
        aren't associated with any environment. The <code>EnvironmentName</code>
        response element is always <code>null</code>.</p> <p>Related Topics</p>
        <ul> <li> <p> <a>DescribeConfigurationOptions</a> </p> </li> <li> <p>
        <a>DescribeConfigurationSettings</a> </p> </li> <li> <p>
        <a>ListAvailableSolutionStacks</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConfigurationSettingsDescription"
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
        "481":
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyBucketsException"
        "482":
          description: TooManyConfigurationTemplatesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyConfigurationTemplatesException"
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: "The name of the application to associate with this configuration
            template. If no application is found with this name, AWS Elastic
            Beanstalk returns an <code>InvalidParameterValue</code> error. "
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: TemplateName
          in: query
          required: true
          description: "<p>The name of the configuration template.</p> <p>Constraint: This
            name must be unique per application.</p> <p>Default: If a
            configuration template already exists with this name, AWS Elastic
            Beanstalk returns an <code>InvalidParameterValue</code> error. </p>"
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: SolutionStackName
          in: query
          required: false
          description: <p>The name of the solution stack used by this configuration. The
            solution stack specifies the operating system, architecture, and
            application server for a configuration template. It determines the
            set of configuration options as well as the possible and default
            values.</p> <p> Use <a>ListAvailableSolutionStacks</a> to obtain a
            list of available solution stacks. </p> <p> A solution stack name or
            a source configuration parameter must be specified, otherwise AWS
            Elastic Beanstalk returns an <code>InvalidParameterValue</code>
            error. </p> <p>If a solution stack name is not specified and the
            source configuration parameter is specified, AWS Elastic Beanstalk
            uses the same solution stack as the source configuration
            template.</p>
          schema:
            type: string
        - name: PlatformArn
          in: query
          required: false
          description: The ARN of the custom platform.
          schema:
            type: string
        - name: SourceConfiguration.ApplicationName
          in: query
          description: |-
            A specification for an environment configuration
            The name of the application associated with the configuration.
          schema:
            type: string
        - name: SourceConfiguration.TemplateName
          in: query
          description: |-
            A specification for an environment configuration
            The name of the configuration template.
          schema:
            type: string
        - name: EnvironmentId
          in: query
          required: false
          description: The ID of the environment used with this configuration template.
          schema:
            type: string
        - name: Description
          in: query
          required: false
          description: Describes this configuration.
          schema:
            type: string
            maxLength: 200
        - name: OptionSettings
          in: query
          required: false
          description: If specified, AWS Elastic Beanstalk sets the specified configuration
            option to the requested value. The new value overrides the value
            obtained from the solution stack or the source configuration
            template.
          schema:
            type: array
            items:
              type: string
        - name: Tags
          in: query
          required: false
          description: Specifies the tags applied to the configuration template.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateConfigurationTemplate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateConfigurationTemplate
      operationId: POST CreateConfigurationTemplate
      description: <p>Creates a configuration template. Templates are associated with a
        specific application and are used to deploy different versions of the
        application with the same configuration settings.</p> <p>Templates
        aren't associated with any environment. The <code>EnvironmentName</code>
        response element is always <code>null</code>.</p> <p>Related Topics</p>
        <ul> <li> <p> <a>DescribeConfigurationOptions</a> </p> </li> <li> <p>
        <a>DescribeConfigurationSettings</a> </p> </li> <li> <p>
        <a>ListAvailableSolutionStacks</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConfigurationSettingsDescription"
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
        "481":
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyBucketsException"
        "482":
          description: TooManyConfigurationTemplatesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyConfigurationTemplatesException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateConfigurationTemplate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ApplicationName:
                  description: "The name of the application to associate with this
                    configuration template. If no application is found with this
                    name, AWS Elastic Beanstalk returns an
                    <code>InvalidParameterValue</code> error. "
                  type: string
                  minLength: 1
                  maxLength: 100
                TemplateName:
                  description: "<p>The name of the configuration template.</p>
                    <p>Constraint: This name must be unique per application.</p>
                    <p>Default: If a configuration template already exists with
                    this name, AWS Elastic Beanstalk returns an
                    <code>InvalidParameterValue</code> error. </p>"
                  type: string
                  minLength: 1
                  maxLength: 100
                SolutionStackName:
                  description: <p>The name of the solution stack used by this
                    configuration. The solution stack specifies the operating
                    system, architecture, and application server for a
                    configuration template. It determines the set of
                    configuration options as well as the possible and default
                    values.</p> <p> Use <a>ListAvailableSolutionStacks</a> to
                    obtain a list of available solution stacks. </p> <p> A
                    solution stack name or a source configuration parameter must
                    be specified, otherwise AWS Elastic Beanstalk returns an
                    <code>InvalidParameterValue</code> error. </p> <p>If a
                    solution stack name is not specified and the source
                    configuration parameter is specified, AWS Elastic Beanstalk
                    uses the same solution stack as the source configuration
                    template.</p>
                  type: string
                PlatformArn:
                  description: The ARN of the custom platform.
                  type: string
                SourceConfiguration.ApplicationName:
                  description: >-
                    A specification for an environment configuration

                    The name of the application associated with the configuration.
                  type: string
                SourceConfiguration.TemplateName:
                  description: |-
                    A specification for an environment configuration
                    The name of the configuration template.
                  type: string
                EnvironmentId:
                  description: The ID of the environment used with this configuration
                    template.
                  type: string
                Description:
                  description: Describes this configuration.
                  type: string
                  maxLength: 200
                OptionSettings:
                  description: If specified, AWS Elastic Beanstalk sets the specified
                    configuration option to the requested value. The new value
                    overrides the value obtained from the solution stack or the
                    source configuration template.
                  type: array
                  items:
                    type: string
                Tags:
                  description: Specifies the tags applied to the configuration template.
                  type: array
                  items:
                    type: string
              required:
                - ApplicationName
                - TemplateName
  /#Action=CreateEnvironment:
    get:
      x-aws-operation-name: CreateEnvironment
      operationId: GET CreateEnvironment
      description: Launches an environment for the specified application using the
        specified configuration.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EnvironmentDescription"
        "480":
          description: TooManyEnvironmentsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyEnvironmentsException"
        "481":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: <p>The name of the application that contains the version to be
            deployed.</p> <p> If no application is found with this name,
            <code>CreateEnvironment</code> returns an
            <code>InvalidParameterValue</code> error. </p>
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: EnvironmentName
          in: query
          required: false
          description: "<p>A unique name for the deployment environment. Used in the
            application URL.</p> <p>Constraint: Must be from 4 to 40 characters
            in length. The name can contain only letters, numbers, and hyphens.
            It cannot start or end with a hyphen. This name must be unique
            within a region in your account. If the specified name already
            exists in the region, AWS Elastic Beanstalk returns an
            <code>InvalidParameterValue</code> error. </p> <p>Default: If the
            CNAME parameter is not specified, the environment name becomes part
            of the CNAME, and therefore part of the visible URL for your
            application.</p>"
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: GroupName
          in: query
          required: false
          description: The name of the group to which the target environment belongs.
            Specify a group name only if the environment's name is specified in
            an environment manifest and not with the environment name parameter.
            See <a
            href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html">Environment
            Manifest (env.yaml)</a> for details.
          schema:
            type: string
            minLength: 1
            maxLength: 19
        - name: Description
          in: query
          required: false
          description: Describes this environment.
          schema:
            type: string
            maxLength: 200
        - name: CNAMEPrefix
          in: query
          required: false
          description: If specified, the environment attempts to use this value as the
            prefix for the CNAME. If not specified, the CNAME is generated
            automatically by appending a random alphanumeric string to the
            environment name.
          schema:
            type: string
            minLength: 4
            maxLength: 63
        - name: Tier.Name
          in: query
          description: >-
            Describes the properties of an environment tier

            <p>The name of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>WebServer</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>Worker</code> </p> </li> </ul>
          schema:
            type: string
        - name: Tier.Type
          in: query
          description: >-
            Describes the properties of an environment tier

            <p>The type of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>Standard</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>SQS/HTTP</code> </p> </li> </ul>
          schema:
            type: string
        - name: Tier.Version
          in: query
          description: >-
            Describes the properties of an environment tier

            <p>The version of this environment tier. When you don't set a value to it, Elastic Beanstalk uses the latest compatible worker tier version.</p> <note> <p>This member is deprecated. Any specific version that you set may become out of date. We recommend leaving it unspecified.</p> </note>
          schema:
            type: string
        - name: Tags
          in: query
          required: false
          description: Specifies the tags applied to resources in the environment.
          schema:
            type: array
            items:
              type: string
        - name: VersionLabel
          in: query
          required: false
          description: "<p>The name of the application version to deploy.</p> <p> If the
            specified application has no associated application versions, AWS
            Elastic Beanstalk <code>UpdateEnvironment</code> returns an
            <code>InvalidParameterValue</code> error. </p> <p>Default: If not
            specified, AWS Elastic Beanstalk attempts to launch the sample
            application in the container.</p>"
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: TemplateName
          in: query
          required: false
          description: " The name of the configuration template to use in deployment. If no
            configuration template is found with this name, AWS Elastic
            Beanstalk returns an <code>InvalidParameterValue</code> error. "
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: SolutionStackName
          in: query
          required: false
          description: <p>This is an alternative to specifying a template name. If
            specified, AWS Elastic Beanstalk sets the configuration values to
            the default values associated with the specified solution stack.</p>
            <p>For a list of current solution stacks, see <a
            href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html">Elastic
            Beanstalk Supported Platforms</a>.</p>
          schema:
            type: string
        - name: PlatformArn
          in: query
          required: false
          description: The ARN of the platform.
          schema:
            type: string
        - name: OptionSettings
          in: query
          required: false
          description: If specified, AWS Elastic Beanstalk sets the specified configuration
            options to the requested value in the configuration set for the new
            environment. These override the values obtained from the solution
            stack or the configuration template.
          schema:
            type: array
            items:
              type: string
        - name: OptionsToRemove
          in: query
          required: false
          description: A list of custom user-defined configuration options to remove from
            the configuration set for this new environment.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateEnvironment
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateEnvironment
      operationId: POST CreateEnvironment
      description: Launches an environment for the specified application using the
        specified configuration.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EnvironmentDescription"
        "480":
          description: TooManyEnvironmentsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyEnvironmentsException"
        "481":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateEnvironment
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ApplicationName:
                  description: <p>The name of the application that contains the version to
                    be deployed.</p> <p> If no application is found with this
                    name, <code>CreateEnvironment</code> returns an
                    <code>InvalidParameterValue</code> error. </p>
                  type: string
                  minLength: 1
                  maxLength: 100
                EnvironmentName:
                  description: "<p>A unique name for the deployment environment. Used in
                    the application URL.</p> <p>Constraint: Must be from 4 to 40
                    characters in length. The name can contain only letters,
                    numbers, and hyphens. It cannot start or end with a hyphen.
                    This name must be unique within a region in your account. If
                    the specified name already exists in the region, AWS Elastic
                    Beanstalk returns an <code>InvalidParameterValue</code>
                    error. </p> <p>Default: If the CNAME parameter is not
                    specified, the environment name becomes part of the CNAME,
                    and therefore part of the visible URL for your
                    application.</p>"
                  type: string
                  minLength: 4
                  maxLength: 40
                GroupName:
                  description: The name of the group to which the target environment
                    belongs. Specify a group name only if the environment's name
                    is specified in an environment manifest and not with the
                    environment name parameter. See <a
                    href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html">Environment
                    Manifest (env.yaml)</a> for details.
                  type: string
                  minLength: 1
                  maxLength: 19
                Description:
                  description: Describes this environment.
                  type: string
                  maxLength: 200
                CNAMEPrefix:
                  description: If specified, the environment attempts to use this value as
                    the prefix for the CNAME. If not specified, the CNAME is
                    generated automatically by appending a random alphanumeric
                    string to the environment name.
                  type: string
                  minLength: 4
                  maxLength: 63
                Tier.Name:
                  description: >-
                    Describes the properties of an environment tier

                    <p>The name of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>WebServer</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>Worker</code> </p> </li> </ul>
                  type: string
                Tier.Type:
                  description: >-
                    Describes the properties of an environment tier

                    <p>The type of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>Standard</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>SQS/HTTP</code> </p> </li> </ul>
                  type: string
                Tier.Version:
                  description: >-
                    Describes the properties of an environment tier

                    <p>The version of this environment tier. When you don't set a value to it, Elastic Beanstalk uses the latest compatible worker tier version.</p> <note> <p>This member is deprecated. Any specific version that you set may become out of date. We recommend leaving it unspecified.</p> </note>
                  type: string
                Tags:
                  description: Specifies the tags applied to resources in the environment.
                  type: array
                  items:
                    type: string
                VersionLabel:
                  description: "<p>The name of the application version to deploy.</p> <p>
                    If the specified application has no associated application
                    versions, AWS Elastic Beanstalk
                    <code>UpdateEnvironment</code> returns an
                    <code>InvalidParameterValue</code> error. </p> <p>Default:
                    If not specified, AWS Elastic Beanstalk attempts to launch
                    the sample application in the container.</p>"
                  type: string
                  minLength: 1
                  maxLength: 100
                TemplateName:
                  description: " The name of the configuration template to use in
                    deployment. If no configuration template is found with this
                    name, AWS Elastic Beanstalk returns an
                    <code>InvalidParameterValue</code> error. "
                  type: string
                  minLength: 1
                  maxLength: 100
                SolutionStackName:
                  description: <p>This is an alternative to specifying a template name. If
                    specified, AWS Elastic Beanstalk sets the configuration
                    values to the default values associated with the specified
                    solution stack.</p> <p>For a list of current solution
                    stacks, see <a
                    href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html">Elastic
                    Beanstalk Supported Platforms</a>.</p>
                  type: string
                PlatformArn:
                  description: The ARN of the platform.
                  type: string
                OptionSettings:
                  description: If specified, AWS Elastic Beanstalk sets the specified
                    configuration options to the requested value in the
                    configuration set for the new environment. These override
                    the values obtained from the solution stack or the
                    configuration template.
                  type: array
                  items:
                    type: string
                OptionsToRemove:
                  description: A list of custom user-defined configuration options to
                    remove from the configuration set for this new environment.
                  type: array
                  items:
                    type: string
              required:
                - ApplicationName
  /#Action=CreatePlatformVersion:
    get:
      x-aws-operation-name: CreatePlatformVersion
      operationId: GET CreatePlatformVersion
      description: Create a new version of your custom platform.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreatePlatformVersionResult"
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
        "481":
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ElasticBeanstalkServiceException"
        "482":
          description: TooManyPlatformsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyPlatformsException"
      parameters:
        - name: PlatformName
          in: query
          required: true
          description: The name of your custom platform.
          schema:
            type: string
        - name: PlatformVersion
          in: query
          required: true
          description: The number, such as 1.0.2, for the new platform version.
          schema:
            type: string
        - name: PlatformDefinitionBundle.S3Bucket
          in: query
          description: |-
            The bucket and key of an item stored in Amazon S3.
            The Amazon S3 bucket where the data is located.
          schema:
            type: string
        - name: PlatformDefinitionBundle.S3Key
          in: query
          description: |-
            The bucket and key of an item stored in Amazon S3.
            The Amazon S3 key where the data is located.
          schema:
            type: string
        - name: EnvironmentName
          in: query
          required: false
          description: The name of the builder environment.
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: OptionSettings
          in: query
          required: false
          description: The configuration option settings to apply to the builder
            environment.
          schema:
            type: array
            items:
              type: string
        - name: Tags
          in: query
          required: false
          description: <p>Specifies the tags applied to the new platform version.</p>
            <p>Elastic Beanstalk applies these tags only to the platform
            version. Environments that you create using the platform version
            don't inherit the tags.</p>
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreatePlatformVersion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreatePlatformVersion
      operationId: POST CreatePlatformVersion
      description: Create a new version of your custom platform.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreatePlatformVersionResult"
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
        "481":
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ElasticBeanstalkServiceException"
        "482":
          description: TooManyPlatformsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyPlatformsException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreatePlatformVersion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                PlatformName:
                  description: The name of your custom platform.
                  type: string
                PlatformVersion:
                  description: The number, such as 1.0.2, for the new platform version.
                  type: string
                PlatformDefinitionBundle.S3Bucket:
                  description: |-
                    The bucket and key of an item stored in Amazon S3.
                    The Amazon S3 bucket where the data is located.
                  type: string
                PlatformDefinitionBundle.S3Key:
                  description: |-
                    The bucket and key of an item stored in Amazon S3.
                    The Amazon S3 key where the data is located.
                  type: string
                EnvironmentName:
                  description: The name of the builder environment.
                  type: string
                  minLength: 4
                  maxLength: 40
                OptionSettings:
                  description: The configuration option settings to apply to the builder
                    environment.
                  type: array
                  items:
                    type: string
                Tags:
                  description: <p>Specifies the tags applied to the new platform
                    version.</p> <p>Elastic Beanstalk applies these tags only to
                    the platform version. Environments that you create using the
                    platform version don't inherit the tags.</p>
                  type: array
                  items:
                    type: string
              required:
                - PlatformName
                - PlatformVersion
  /#Action=CreateStorageLocation:
    get:
      x-aws-operation-name: CreateStorageLocation
      operationId: GET CreateStorageLocation
      description: Creates a bucket in Amazon S3 to store application versions, logs, and
        other files used by Elastic Beanstalk environments. The Elastic
        Beanstalk console and EB CLI call this API the first time you create an
        environment in a region. If the storage location already exists,
        <code>CreateStorageLocation</code> still returns the bucket name but
        does not create a new bucket.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateStorageLocationResultMessage"
        "480":
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyBucketsException"
        "481":
          description: S3SubscriptionRequiredException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/S3SubscriptionRequiredException"
        "482":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateStorageLocation
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateStorageLocation
      operationId: POST CreateStorageLocation
      description: Creates a bucket in Amazon S3 to store application versions, logs, and
        other files used by Elastic Beanstalk environments. The Elastic
        Beanstalk console and EB CLI call this API the first time you create an
        environment in a region. If the storage location already exists,
        <code>CreateStorageLocation</code> still returns the bucket name but
        does not create a new bucket.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateStorageLocationResultMessage"
        "480":
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyBucketsException"
        "481":
          description: S3SubscriptionRequiredException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/S3SubscriptionRequiredException"
        "482":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateStorageLocation
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
  /#Action=DeleteApplication:
    get:
      x-aws-operation-name: DeleteApplication
      operationId: GET DeleteApplication
      description: <p>Deletes the specified application along with all associated versions
        and configurations. The application versions will not be deleted from
        your Amazon S3 bucket.</p> <note> <p>You cannot delete an application
        that has a running environment.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: OperationInProgressException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OperationInProgressException"
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: The name of the application to delete.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: TerminateEnvByForce
          in: query
          required: false
          description: When set to true, running environments will be terminated before
            deleting the application.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteApplication
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteApplication
      operationId: POST DeleteApplication
      description: <p>Deletes the specified application along with all associated versions
        and configurations. The application versions will not be deleted from
        your Amazon S3 bucket.</p> <note> <p>You cannot delete an application
        that has a running environment.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: OperationInProgressException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OperationInProgressException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteApplication
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ApplicationName:
                  description: The name of the application to delete.
                  type: string
                  minLength: 1
                  maxLength: 100
                TerminateEnvByForce:
                  description: When set to true, running environments will be terminated
                    before deleting the application.
                  type: boolean
              required:
                - ApplicationName
  /#Action=DeleteApplicationVersion:
    get:
      x-aws-operation-name: DeleteApplicationVersion
      operationId: GET DeleteApplicationVersion
      description: <p>Deletes the specified version from the specified application.</p>
        <note> <p>You cannot delete an application version that is associated
        with a running environment.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: SourceBundleDeletionException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SourceBundleDeletionException"
        "481":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
        "482":
          description: OperationInProgressException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OperationInProgressException"
        "483":
          description: S3LocationNotInServiceRegionException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/S3LocationNotInServiceRegionException"
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: The name of the application to which the version belongs.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: VersionLabel
          in: query
          required: true
          description: The label of the version to delete.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: DeleteSourceBundle
          in: query
          required: false
          description: Set to <code>true</code> to delete the source bundle from your
            storage bucket. Otherwise, the application version is deleted only
            from Elastic Beanstalk and the source bundle remains in Amazon S3.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteApplicationVersion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteApplicationVersion
      operationId: POST DeleteApplicationVersion
      description: <p>Deletes the specified version from the specified application.</p>
        <note> <p>You cannot delete an application version that is associated
        with a running environment.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: SourceBundleDeletionException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SourceBundleDeletionException"
        "481":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
        "482":
          description: OperationInProgressException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OperationInProgressException"
        "483":
          description: S3LocationNotInServiceRegionException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/S3LocationNotInServiceRegionException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteApplicationVersion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ApplicationName:
                  description: The name of the application to which the version belongs.
                  type: string
                  minLength: 1
                  maxLength: 100
                VersionLabel:
                  description: The label of the version to delete.
                  type: string
                  minLength: 1
                  maxLength: 100
                DeleteSourceBundle:
                  description: Set to <code>true</code> to delete the source bundle from
                    your storage bucket. Otherwise, the application version is
                    deleted only from Elastic Beanstalk and the source bundle
                    remains in Amazon S3.
                  type: boolean
              required:
                - ApplicationName
                - VersionLabel
  /#Action=DeleteConfigurationTemplate:
    get:
      x-aws-operation-name: DeleteConfigurationTemplate
      operationId: GET DeleteConfigurationTemplate
      description: <p>Deletes the specified configuration template.</p> <note> <p>When you
        launch an environment using a configuration template, the environment
        gets a copy of the template. You can delete or modify the environment's
        copy of the template without affecting the running environment.</p>
        </note>
      responses:
        "200":
          description: Success
        "480":
          description: OperationInProgressException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OperationInProgressException"
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: The name of the application to delete the configuration template
            from.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: TemplateName
          in: query
          required: true
          description: The name of the configuration template to delete.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteConfigurationTemplate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteConfigurationTemplate
      operationId: POST DeleteConfigurationTemplate
      description: <p>Deletes the specified configuration template.</p> <note> <p>When you
        launch an environment using a configuration template, the environment
        gets a copy of the template. You can delete or modify the environment's
        copy of the template without affecting the running environment.</p>
        </note>
      responses:
        "200":
          description: Success
        "480":
          description: OperationInProgressException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OperationInProgressException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteConfigurationTemplate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ApplicationName:
                  description: The name of the application to delete the configuration
                    template from.
                  type: string
                  minLength: 1
                  maxLength: 100
                TemplateName:
                  description: The name of the configuration template to delete.
                  type: string
                  minLength: 1
                  maxLength: 100
              required:
                - ApplicationName
                - TemplateName
  /#Action=DeleteEnvironmentConfiguration:
    get:
      x-aws-operation-name: DeleteEnvironmentConfiguration
      operationId: GET DeleteEnvironmentConfiguration
      description: <p>Deletes the draft configuration associated with the running
        environment.</p> <p>Updating a running environment with any
        configuration changes creates a draft configuration set. You can get the
        draft configuration using <a>DescribeConfigurationSettings</a> while the
        update is in progress or if the update fails. The
        <code>DeploymentStatus</code> for the draft configuration indicates
        whether the deployment is in process or has failed. The draft
        configuration remains in existence until it is deleted with this
        action.</p>
      responses:
        "200":
          description: Success
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: The name of the application the environment is associated with.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: EnvironmentName
          in: query
          required: true
          description: The name of the environment to delete the draft configuration from.
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteEnvironmentConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteEnvironmentConfiguration
      operationId: POST DeleteEnvironmentConfiguration
      description: <p>Deletes the draft configuration associated with the running
        environment.</p> <p>Updating a running environment with any
        configuration changes creates a draft configuration set. You can get the
        draft configuration using <a>DescribeConfigurationSettings</a> while the
        update is in progress or if the update fails. The
        <code>DeploymentStatus</code> for the draft configuration indicates
        whether the deployment is in process or has failed. The draft
        configuration remains in existence until it is deleted with this
        action.</p>
      responses:
        "200":
          description: Success
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteEnvironmentConfiguration
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ApplicationName:
                  description: The name of the application the environment is associated
                    with.
                  type: string
                  minLength: 1
                  maxLength: 100
                EnvironmentName:
                  description: The name of the environment to delete the draft
                    configuration from.
                  type: string
                  minLength: 4
                  maxLength: 40
              required:
                - ApplicationName
                - EnvironmentName
  /#Action=DeletePlatformVersion:
    get:
      x-aws-operation-name: DeletePlatformVersion
      operationId: GET DeletePlatformVersion
      description: Deletes the specified version of a custom platform.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeletePlatformVersionResult"
        "480":
          description: OperationInProgressException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OperationInProgressException"
        "481":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
        "482":
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ElasticBeanstalkServiceException"
        "483":
          description: PlatformVersionStillReferencedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PlatformVersionStillReferencedException"
      parameters:
        - name: PlatformArn
          in: query
          required: false
          description: The ARN of the version of the custom platform.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeletePlatformVersion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeletePlatformVersion
      operationId: POST DeletePlatformVersion
      description: Deletes the specified version of a custom platform.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeletePlatformVersionResult"
        "480":
          description: OperationInProgressException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OperationInProgressException"
        "481":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
        "482":
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ElasticBeanstalkServiceException"
        "483":
          description: PlatformVersionStillReferencedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PlatformVersionStillReferencedException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeletePlatformVersion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                PlatformArn:
                  description: The ARN of the version of the custom platform.
                  type: string
  /#Action=DescribeAccountAttributes:
    get:
      x-aws-operation-name: DescribeAccountAttributes
      operationId: GET DescribeAccountAttributes
      description: <p>Returns attributes related to AWS Elastic Beanstalk that are
        associated with the calling AWS account.</p> <p>The result currently has
        one set of attributes—resource quotas.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeAccountAttributesResult"
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAccountAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeAccountAttributes
      operationId: POST DescribeAccountAttributes
      description: <p>Returns attributes related to AWS Elastic Beanstalk that are
        associated with the calling AWS account.</p> <p>The result currently has
        one set of attributes—resource quotas.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeAccountAttributesResult"
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAccountAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
  /#Action=DescribeApplicationVersions:
    get:
      x-aws-operation-name: DescribeApplicationVersions
      operationId: GET DescribeApplicationVersions
      description: Retrieve a list of application versions.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ApplicationVersionDescriptionsMessage"
      parameters:
        - name: ApplicationName
          in: query
          required: false
          description: Specify an application name to show only application versions for
            that application.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: VersionLabels
          in: query
          required: false
          description: Specify a version label to show a specific application version.
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: <p>For a paginated request. Specify a maximum number of application
            versions to include in each response.</p> <p>If no
            <code>MaxRecords</code> is specified, all available application
            versions are retrieved in a single response.</p>
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: <p>For a paginated request. Specify a token from a previous response
            page to retrieve the next response page. All other parameter values
            must be identical to the ones specified in the initial request.</p>
            <p>If no <code>NextToken</code> is specified, the first page is
            retrieved.</p>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeApplicationVersions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeApplicationVersions
      operationId: POST DescribeApplicationVersions
      description: Retrieve a list of application versions.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ApplicationVersionDescriptionsMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeApplicationVersions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ApplicationName:
                  description: Specify an application name to show only application
                    versions for that application.
                  type: string
                  minLength: 1
                  maxLength: 100
                VersionLabels:
                  description: Specify a version label to show a specific application
                    version.
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: <p>For a paginated request. Specify a maximum number of
                    application versions to include in each response.</p> <p>If
                    no <code>MaxRecords</code> is specified, all available
                    application versions are retrieved in a single response.</p>
                  type: integer
                  minimum: 1
                  maximum: 1000
                NextToken:
                  description: <p>For a paginated request. Specify a token from a previous
                    response page to retrieve the next response page. All other
                    parameter values must be identical to the ones specified in
                    the initial request.</p> <p>If no <code>NextToken</code> is
                    specified, the first page is retrieved.</p>
                  type: string
  /#Action=DescribeApplications:
    get:
      x-aws-operation-name: DescribeApplications
      operationId: GET DescribeApplications
      description: Returns the descriptions of existing applications.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ApplicationDescriptionsMessage"
      parameters:
        - name: ApplicationNames
          in: query
          required: false
          description: If specified, AWS Elastic Beanstalk restricts the returned
            descriptions to only include those with the specified names.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeApplications
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeApplications
      operationId: POST DescribeApplications
      description: Returns the descriptions of existing applications.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ApplicationDescriptionsMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeApplications
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ApplicationNames:
                  description: If specified, AWS Elastic Beanstalk restricts the returned
                    descriptions to only include those with the specified names.
                  type: array
                  items:
                    type: string
  /#Action=DescribeConfigurationOptions:
    get:
      x-aws-operation-name: DescribeConfigurationOptions
      operationId: GET DescribeConfigurationOptions
      description: Describes the configuration options that are used in a particular
        configuration template or environment, or that a specified solution
        stack defines. The description includes the values the options, their
        default values, and an indication of the required action on a running
        environment if an option value is changed.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConfigurationOptionsDescription"
        "480":
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyBucketsException"
      parameters:
        - name: ApplicationName
          in: query
          required: false
          description: The name of the application associated with the configuration
            template or environment. Only needed if you want to describe the
            configuration options associated with either the configuration
            template or environment.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: TemplateName
          in: query
          required: false
          description: The name of the configuration template whose configuration options
            you want to describe.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: EnvironmentName
          in: query
          required: false
          description: The name of the environment whose configuration options you want to
            describe.
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: SolutionStackName
          in: query
          required: false
          description: The name of the solution stack whose configuration options you want
            to describe.
          schema:
            type: string
        - name: PlatformArn
          in: query
          required: false
          description: The ARN of the custom platform.
          schema:
            type: string
        - name: Options
          in: query
          required: false
          description: If specified, restricts the descriptions to only the specified
            options.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeConfigurationOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeConfigurationOptions
      operationId: POST DescribeConfigurationOptions
      description: Describes the configuration options that are used in a particular
        configuration template or environment, or that a specified solution
        stack defines. The description includes the values the options, their
        default values, and an indication of the required action on a running
        environment if an option value is changed.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConfigurationOptionsDescription"
        "480":
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyBucketsException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeConfigurationOptions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ApplicationName:
                  description: The name of the application associated with the
                    configuration template or environment. Only needed if you
                    want to describe the configuration options associated with
                    either the configuration template or environment.
                  type: string
                  minLength: 1
                  maxLength: 100
                TemplateName:
                  description: The name of the configuration template whose configuration
                    options you want to describe.
                  type: string
                  minLength: 1
                  maxLength: 100
                EnvironmentName:
                  description: The name of the environment whose configuration options you
                    want to describe.
                  type: string
                  minLength: 4
                  maxLength: 40
                SolutionStackName:
                  description: The name of the solution stack whose configuration options
                    you want to describe.
                  type: string
                PlatformArn:
                  description: The ARN of the custom platform.
                  type: string
                Options:
                  description: If specified, restricts the descriptions to only the
                    specified options.
                  type: array
                  items:
                    type: string
  /#Action=DescribeConfigurationSettings:
    get:
      x-aws-operation-name: DescribeConfigurationSettings
      operationId: GET DescribeConfigurationSettings
      description: <p>Returns a description of the settings for the specified configuration
        set, that is, either a configuration template or the configuration set
        associated with a running environment.</p> <p>When describing the
        settings for the configuration set associated with a running
        environment, it is possible to receive two sets of setting descriptions.
        One is the deployed configuration set, and the other is a draft
        configuration of an environment that is either in the process of
        deployment or that failed to deploy.</p> <p>Related Topics</p> <ul> <li>
        <p> <a>DeleteEnvironmentConfiguration</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConfigurationSettingsDescriptions"
        "480":
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyBucketsException"
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: The application for the environment or configuration template.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: TemplateName
          in: query
          required: false
          description: "<p>The name of the configuration template to describe.</p> <p>
            Conditional: You must specify either this parameter or an
            EnvironmentName, but not both. If you specify both, AWS Elastic
            Beanstalk returns an <code>InvalidParameterCombination</code> error.
            If you do not specify either, AWS Elastic Beanstalk returns a
            <code>MissingRequiredParameter</code> error. </p>"
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: EnvironmentName
          in: query
          required: false
          description: "<p>The name of the environment to describe.</p> <p> Condition: You
            must specify either this or a TemplateName, but not both. If you
            specify both, AWS Elastic Beanstalk returns an
            <code>InvalidParameterCombination</code> error. If you do not
            specify either, AWS Elastic Beanstalk returns
            <code>MissingRequiredParameter</code> error. </p>"
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeConfigurationSettings
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeConfigurationSettings
      operationId: POST DescribeConfigurationSettings
      description: <p>Returns a description of the settings for the specified configuration
        set, that is, either a configuration template or the configuration set
        associated with a running environment.</p> <p>When describing the
        settings for the configuration set associated with a running
        environment, it is possible to receive two sets of setting descriptions.
        One is the deployed configuration set, and the other is a draft
        configuration of an environment that is either in the process of
        deployment or that failed to deploy.</p> <p>Related Topics</p> <ul> <li>
        <p> <a>DeleteEnvironmentConfiguration</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConfigurationSettingsDescriptions"
        "480":
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyBucketsException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeConfigurationSettings
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ApplicationName:
                  description: The application for the environment or configuration
                    template.
                  type: string
                  minLength: 1
                  maxLength: 100
                TemplateName:
                  description: "<p>The name of the configuration template to describe.</p>
                    <p> Conditional: You must specify either this parameter or
                    an EnvironmentName, but not both. If you specify both, AWS
                    Elastic Beanstalk returns an
                    <code>InvalidParameterCombination</code> error. If you do
                    not specify either, AWS Elastic Beanstalk returns a
                    <code>MissingRequiredParameter</code> error. </p>"
                  type: string
                  minLength: 1
                  maxLength: 100
                EnvironmentName:
                  description: "<p>The name of the environment to describe.</p> <p>
                    Condition: You must specify either this or a TemplateName,
                    but not both. If you specify both, AWS Elastic Beanstalk
                    returns an <code>InvalidParameterCombination</code> error.
                    If you do not specify either, AWS Elastic Beanstalk returns
                    <code>MissingRequiredParameter</code> error. </p>"
                  type: string
                  minLength: 4
                  maxLength: 40
              required:
                - ApplicationName
  /#Action=DescribeEnvironmentHealth:
    get:
      x-aws-operation-name: DescribeEnvironmentHealth
      operationId: GET DescribeEnvironmentHealth
      description: Returns information about the overall health of the specified
        environment. The <b>DescribeEnvironmentHealth</b> operation is only
        available with AWS Elastic Beanstalk Enhanced Health.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeEnvironmentHealthResult"
        "480":
          description: InvalidRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ElasticBeanstalkServiceException"
      parameters:
        - name: EnvironmentName
          in: query
          required: false
          description: <p>Specify the environment by name.</p> <p>You must specify either
            this or an EnvironmentName, or both.</p>
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: EnvironmentId
          in: query
          required: false
          description: <p>Specify the environment by ID.</p> <p>You must specify either
            this or an EnvironmentName, or both.</p>
          schema:
            type: string
        - name: AttributeNames
          in: query
          required: false
          description: Specify the response elements to return. To retrieve all attributes,
            set to <code>All</code>. If no attribute names are specified,
            returns the name of the environment.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEnvironmentHealth
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeEnvironmentHealth
      operationId: POST DescribeEnvironmentHealth
      description: Returns information about the overall health of the specified
        environment. The <b>DescribeEnvironmentHealth</b> operation is only
        available with AWS Elastic Beanstalk Enhanced Health.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeEnvironmentHealthResult"
        "480":
          description: InvalidRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ElasticBeanstalkServiceException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEnvironmentHealth
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                EnvironmentName:
                  description: <p>Specify the environment by name.</p> <p>You must specify
                    either this or an EnvironmentName, or both.</p>
                  type: string
                  minLength: 4
                  maxLength: 40
                EnvironmentId:
                  description: <p>Specify the environment by ID.</p> <p>You must specify
                    either this or an EnvironmentName, or both.</p>
                  type: string
                AttributeNames:
                  description: Specify the response elements to return. To retrieve all
                    attributes, set to <code>All</code>. If no attribute names
                    are specified, returns the name of the environment.
                  type: array
                  items:
                    type: string
  /#Action=DescribeEnvironmentManagedActionHistory:
    get:
      x-aws-operation-name: DescribeEnvironmentManagedActionHistory
      operationId: GET DescribeEnvironmentManagedActionHistory
      description: Lists an environment's completed and failed managed actions.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeEnvironmentManagedActionHistory\
                  Result"
        "480":
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ElasticBeanstalkServiceException"
      parameters:
        - name: EnvironmentId
          in: query
          required: false
          description: The environment ID of the target environment.
          schema:
            type: string
        - name: EnvironmentName
          in: query
          required: false
          description: The name of the target environment.
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: NextToken
          in: query
          required: false
          description: The pagination token returned by a previous request.
          schema:
            type: string
        - name: MaxItems
          in: query
          required: false
          description: The maximum number of items to return for a single request.
          schema:
            type: integer
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEnvironmentManagedActionHistory
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeEnvironmentManagedActionHistory
      operationId: POST DescribeEnvironmentManagedActionHistory
      description: Lists an environment's completed and failed managed actions.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeEnvironmentManagedActionHistory\
                  Result"
        "480":
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ElasticBeanstalkServiceException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEnvironmentManagedActionHistory
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                EnvironmentId:
                  description: The environment ID of the target environment.
                  type: string
                EnvironmentName:
                  description: The name of the target environment.
                  type: string
                  minLength: 4
                  maxLength: 40
                NextToken:
                  description: The pagination token returned by a previous request.
                  type: string
                MaxItems:
                  description: The maximum number of items to return for a single request.
                  type: integer
  /#Action=DescribeEnvironmentManagedActions:
    get:
      x-aws-operation-name: DescribeEnvironmentManagedActions
      operationId: GET DescribeEnvironmentManagedActions
      description: Lists an environment's upcoming and in-progress managed actions.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeEnvironmentManagedActionsResult"
        "480":
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ElasticBeanstalkServiceException"
      parameters:
        - name: EnvironmentName
          in: query
          required: false
          description: The name of the target environment.
          schema:
            type: string
        - name: EnvironmentId
          in: query
          required: false
          description: The environment ID of the target environment.
          schema:
            type: string
        - name: Status
          in: query
          required: false
          description: To show only actions with a particular status, specify a status.
          schema:
            type: string
            enum:
              - Scheduled
              - Pending
              - Running
              - Unknown
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEnvironmentManagedActions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeEnvironmentManagedActions
      operationId: POST DescribeEnvironmentManagedActions
      description: Lists an environment's upcoming and in-progress managed actions.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeEnvironmentManagedActionsResult"
        "480":
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ElasticBeanstalkServiceException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEnvironmentManagedActions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                EnvironmentName:
                  description: The name of the target environment.
                  type: string
                EnvironmentId:
                  description: The environment ID of the target environment.
                  type: string
                Status:
                  description: To show only actions with a particular status, specify a
                    status.
                  type: string
                  enum:
                    - Scheduled
                    - Pending
                    - Running
                    - Unknown
  /#Action=DescribeEnvironmentResources:
    get:
      x-aws-operation-name: DescribeEnvironmentResources
      operationId: GET DescribeEnvironmentResources
      description: Returns AWS resources for this environment.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EnvironmentResourceDescriptionsMessage"
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
      parameters:
        - name: EnvironmentId
          in: query
          required: false
          description: "<p>The ID of the environment to retrieve AWS resource usage
            data.</p> <p> Condition: You must specify either this or an
            EnvironmentName, or both. If you do not specify either, AWS Elastic
            Beanstalk returns <code>MissingRequiredParameter</code> error. </p>"
          schema:
            type: string
        - name: EnvironmentName
          in: query
          required: false
          description: "<p>The name of the environment to retrieve AWS resource usage
            data.</p> <p> Condition: You must specify either this or an
            EnvironmentId, or both. If you do not specify either, AWS Elastic
            Beanstalk returns <code>MissingRequiredParameter</code> error. </p>"
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEnvironmentResources
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeEnvironmentResources
      operationId: POST DescribeEnvironmentResources
      description: Returns AWS resources for this environment.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EnvironmentResourceDescriptionsMessage"
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEnvironmentResources
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                EnvironmentId:
                  description: "<p>The ID of the environment to retrieve AWS resource usage
                    data.</p> <p> Condition: You must specify either this or an
                    EnvironmentName, or both. If you do not specify either, AWS
                    Elastic Beanstalk returns
                    <code>MissingRequiredParameter</code> error. </p>"
                  type: string
                EnvironmentName:
                  description: "<p>The name of the environment to retrieve AWS resource
                    usage data.</p> <p> Condition: You must specify either this
                    or an EnvironmentId, or both. If you do not specify either,
                    AWS Elastic Beanstalk returns
                    <code>MissingRequiredParameter</code> error. </p>"
                  type: string
                  minLength: 4
                  maxLength: 40
  /#Action=DescribeEnvironments:
    get:
      x-aws-operation-name: DescribeEnvironments
      operationId: GET DescribeEnvironments
      description: Returns descriptions for existing environments.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EnvironmentDescriptionsMessage"
      parameters:
        - name: ApplicationName
          in: query
          required: false
          description: If specified, AWS Elastic Beanstalk restricts the returned
            descriptions to include only those that are associated with this
            application.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: VersionLabel
          in: query
          required: false
          description: If specified, AWS Elastic Beanstalk restricts the returned
            descriptions to include only those that are associated with this
            application version.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: EnvironmentIds
          in: query
          required: false
          description: If specified, AWS Elastic Beanstalk restricts the returned
            descriptions to include only those that have the specified IDs.
          schema:
            type: array
            items:
              type: string
        - name: EnvironmentNames
          in: query
          required: false
          description: If specified, AWS Elastic Beanstalk restricts the returned
            descriptions to include only those that have the specified names.
          schema:
            type: array
            items:
              type: string
        - name: IncludeDeleted
          in: query
          required: false
          description: "<p>Indicates whether to include deleted environments:</p> <p>
            <code>true</code>: Environments that have been deleted after
            <code>IncludedDeletedBackTo</code> are displayed.</p> <p>
            <code>false</code>: Do not include deleted environments.</p>"
          schema:
            type: boolean
        - name: IncludedDeletedBackTo
          in: query
          required: false
          description: " If specified when <code>IncludeDeleted</code> is set to
            <code>true</code>, then environments deleted after this date are
            displayed. "
          schema:
            type: string
            format: date-time
        - name: MaxRecords
          in: query
          required: false
          description: <p>For a paginated request. Specify a maximum number of environments
            to include in each response.</p> <p>If no <code>MaxRecords</code> is
            specified, all available environments are retrieved in a single
            response.</p>
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: <p>For a paginated request. Specify a token from a previous response
            page to retrieve the next response page. All other parameter values
            must be identical to the ones specified in the initial request.</p>
            <p>If no <code>NextToken</code> is specified, the first page is
            retrieved.</p>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEnvironments
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeEnvironments
      operationId: POST DescribeEnvironments
      description: Returns descriptions for existing environments.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EnvironmentDescriptionsMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEnvironments
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ApplicationName:
                  description: If specified, AWS Elastic Beanstalk restricts the returned
                    descriptions to include only those that are associated with
                    this application.
                  type: string
                  minLength: 1
                  maxLength: 100
                VersionLabel:
                  description: If specified, AWS Elastic Beanstalk restricts the returned
                    descriptions to include only those that are associated with
                    this application version.
                  type: string
                  minLength: 1
                  maxLength: 100
                EnvironmentIds:
                  description: If specified, AWS Elastic Beanstalk restricts the returned
                    descriptions to include only those that have the specified
                    IDs.
                  type: array
                  items:
                    type: string
                EnvironmentNames:
                  description: If specified, AWS Elastic Beanstalk restricts the returned
                    descriptions to include only those that have the specified
                    names.
                  type: array
                  items:
                    type: string
                IncludeDeleted:
                  description: "<p>Indicates whether to include deleted environments:</p>
                    <p> <code>true</code>: Environments that have been deleted
                    after <code>IncludedDeletedBackTo</code> are displayed.</p>
                    <p> <code>false</code>: Do not include deleted
                    environments.</p>"
                  type: boolean
                IncludedDeletedBackTo:
                  description: " If specified when <code>IncludeDeleted</code> is set to
                    <code>true</code>, then environments deleted after this date
                    are displayed. "
                  type: string
                  format: date-time
                MaxRecords:
                  description: <p>For a paginated request. Specify a maximum number of
                    environments to include in each response.</p> <p>If no
                    <code>MaxRecords</code> is specified, all available
                    environments are retrieved in a single response.</p>
                  type: integer
                  minimum: 1
                  maximum: 1000
                NextToken:
                  description: <p>For a paginated request. Specify a token from a previous
                    response page to retrieve the next response page. All other
                    parameter values must be identical to the ones specified in
                    the initial request.</p> <p>If no <code>NextToken</code> is
                    specified, the first page is retrieved.</p>
                  type: string
  /#Action=DescribeEvents:
    get:
      x-aws-operation-name: DescribeEvents
      operationId: GET DescribeEvents
      description: <p>Returns list of event descriptions matching criteria up to the last 6
        weeks.</p> <note> <p>This action returns the most recent 1,000 events
        from the specified <code>NextToken</code>.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventDescriptionsMessage"
      parameters:
        - name: ApplicationName
          in: query
          required: false
          description: If specified, AWS Elastic Beanstalk restricts the returned
            descriptions to include only those associated with this application.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: VersionLabel
          in: query
          required: false
          description: If specified, AWS Elastic Beanstalk restricts the returned
            descriptions to those associated with this application version.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: TemplateName
          in: query
          required: false
          description: If specified, AWS Elastic Beanstalk restricts the returned
            descriptions to those that are associated with this environment
            configuration.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: EnvironmentId
          in: query
          required: false
          description: If specified, AWS Elastic Beanstalk restricts the returned
            descriptions to those associated with this environment.
          schema:
            type: string
        - name: EnvironmentName
          in: query
          required: false
          description: If specified, AWS Elastic Beanstalk restricts the returned
            descriptions to those associated with this environment.
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: PlatformArn
          in: query
          required: false
          description: The ARN of the version of the custom platform.
          schema:
            type: string
        - name: RequestId
          in: query
          required: false
          description: If specified, AWS Elastic Beanstalk restricts the described events
            to include only those associated with this request ID.
          schema:
            type: string
        - name: Severity
          in: query
          required: false
          description: If specified, limits the events returned from this call to include
            only those with the specified severity or higher.
          schema:
            type: string
            enum:
              - TRACE
              - DEBUG
              - INFO
              - WARN
              - ERROR
              - FATAL
        - name: StartTime
          in: query
          required: false
          description: If specified, AWS Elastic Beanstalk restricts the returned
            descriptions to those that occur on or after this time.
          schema:
            type: string
            format: date-time
        - name: EndTime
          in: query
          required: false
          description: " If specified, AWS Elastic Beanstalk restricts the returned
            descriptions to those that occur up to, but not including, the
            <code>EndTime</code>. "
          schema:
            type: string
            format: date-time
        - name: MaxRecords
          in: query
          required: false
          description: Specifies the maximum number of events that can be returned,
            beginning with the most recent event.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: NextToken
          in: query
          required: false
          description: Pagination token. If specified, the events return the next batch of
            results.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEvents
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeEvents
      operationId: POST DescribeEvents
      description: <p>Returns list of event descriptions matching criteria up to the last 6
        weeks.</p> <note> <p>This action returns the most recent 1,000 events
        from the specified <code>NextToken</code>.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EventDescriptionsMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeEvents
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ApplicationName:
                  description: If specified, AWS Elastic Beanstalk restricts the returned
                    descriptions to include only those associated with this
                    application.
                  type: string
                  minLength: 1
                  maxLength: 100
                VersionLabel:
                  description: If specified, AWS Elastic Beanstalk restricts the returned
                    descriptions to those associated with this application
                    version.
                  type: string
                  minLength: 1
                  maxLength: 100
                TemplateName:
                  description: If specified, AWS Elastic Beanstalk restricts the returned
                    descriptions to those that are associated with this
                    environment configuration.
                  type: string
                  minLength: 1
                  maxLength: 100
                EnvironmentId:
                  description: If specified, AWS Elastic Beanstalk restricts the returned
                    descriptions to those associated with this environment.
                  type: string
                EnvironmentName:
                  description: If specified, AWS Elastic Beanstalk restricts the returned
                    descriptions to those associated with this environment.
                  type: string
                  minLength: 4
                  maxLength: 40
                PlatformArn:
                  description: The ARN of the version of the custom platform.
                  type: string
                RequestId:
                  description: If specified, AWS Elastic Beanstalk restricts the described
                    events to include only those associated with this request
                    ID.
                  type: string
                Severity:
                  description: If specified, limits the events returned from this call to
                    include only those with the specified severity or higher.
                  type: string
                  enum:
                    - TRACE
                    - DEBUG
                    - INFO
                    - WARN
                    - ERROR
                    - FATAL
                StartTime:
                  description: If specified, AWS Elastic Beanstalk restricts the returned
                    descriptions to those that occur on or after this time.
                  type: string
                  format: date-time
                EndTime:
                  description: " If specified, AWS Elastic Beanstalk restricts the returned
                    descriptions to those that occur up to, but not including,
                    the <code>EndTime</code>. "
                  type: string
                  format: date-time
                MaxRecords:
                  description: Specifies the maximum number of events that can be returned,
                    beginning with the most recent event.
                  type: integer
                  minimum: 1
                  maximum: 1000
                NextToken:
                  description: Pagination token. If specified, the events return the next
                    batch of results.
                  type: string
  /#Action=DescribeInstancesHealth:
    get:
      x-aws-operation-name: DescribeInstancesHealth
      operationId: GET DescribeInstancesHealth
      description: Retrieves detailed information about the health of instances in your AWS
        Elastic Beanstalk. This operation requires <a
        href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced.html">enhanced
        health reporting</a>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeInstancesHealthResult"
        "480":
          description: InvalidRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ElasticBeanstalkServiceException"
      parameters:
        - name: EnvironmentName
          in: query
          required: false
          description: Specify the AWS Elastic Beanstalk environment by name.
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: EnvironmentId
          in: query
          required: false
          description: Specify the AWS Elastic Beanstalk environment by ID.
          schema:
            type: string
        - name: AttributeNames
          in: query
          required: false
          description: Specifies the response elements you wish to receive. To retrieve all
            attributes, set to <code>All</code>. If no attribute names are
            specified, returns a list of instances.
          schema:
            type: array
            items:
              type: string
        - name: NextToken
          in: query
          required: false
          description: Specify the pagination token returned by a previous call.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeInstancesHealth
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeInstancesHealth
      operationId: POST DescribeInstancesHealth
      description: Retrieves detailed information about the health of instances in your AWS
        Elastic Beanstalk. This operation requires <a
        href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced.html">enhanced
        health reporting</a>.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeInstancesHealthResult"
        "480":
          description: InvalidRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ElasticBeanstalkServiceException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeInstancesHealth
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                EnvironmentName:
                  description: Specify the AWS Elastic Beanstalk environment by name.
                  type: string
                  minLength: 4
                  maxLength: 40
                EnvironmentId:
                  description: Specify the AWS Elastic Beanstalk environment by ID.
                  type: string
                AttributeNames:
                  description: Specifies the response elements you wish to receive. To
                    retrieve all attributes, set to <code>All</code>. If no
                    attribute names are specified, returns a list of instances.
                  type: array
                  items:
                    type: string
                NextToken:
                  description: Specify the pagination token returned by a previous call.
                  type: string
                  minLength: 1
                  maxLength: 100
  /#Action=DescribePlatformVersion:
    get:
      x-aws-operation-name: DescribePlatformVersion
      operationId: GET DescribePlatformVersion
      description: Describes the version of the platform.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribePlatformVersionResult"
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
        "481":
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ElasticBeanstalkServiceException"
      parameters:
        - name: PlatformArn
          in: query
          required: false
          description: The ARN of the version of the platform.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribePlatformVersion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribePlatformVersion
      operationId: POST DescribePlatformVersion
      description: Describes the version of the platform.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribePlatformVersionResult"
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
        "481":
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ElasticBeanstalkServiceException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribePlatformVersion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                PlatformArn:
                  description: The ARN of the version of the platform.
                  type: string
  /#Action=ListAvailableSolutionStacks:
    get:
      x-aws-operation-name: ListAvailableSolutionStacks
      operationId: GET ListAvailableSolutionStacks
      description: Returns a list of the available solution stack names, with the public
        version first and then in reverse chronological order.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListAvailableSolutionStacksResultMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListAvailableSolutionStacks
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ListAvailableSolutionStacks
      operationId: POST ListAvailableSolutionStacks
      description: Returns a list of the available solution stack names, with the public
        version first and then in reverse chronological order.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListAvailableSolutionStacksResultMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListAvailableSolutionStacks
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
  /#Action=ListPlatformVersions:
    get:
      x-aws-operation-name: ListPlatformVersions
      operationId: GET ListPlatformVersions
      description: Lists the available platforms.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListPlatformVersionsResult"
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
        "481":
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ElasticBeanstalkServiceException"
      parameters:
        - name: Filters
          in: query
          required: false
          description: List only the platforms where the platform member value relates to
            one of the supplied values.
          schema:
            type: array
            items:
              type: string
        - name: MaxRecords
          in: query
          required: false
          description: The maximum number of platform values returned in one call.
          schema:
            type: integer
            minimum: 1
        - name: NextToken
          in: query
          required: false
          description: The starting index into the remaining list of platforms. Use the
            <code>NextToken</code> value from a previous
            <code>ListPlatformVersion</code> call.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListPlatformVersions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ListPlatformVersions
      operationId: POST ListPlatformVersions
      description: Lists the available platforms.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListPlatformVersionsResult"
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
        "481":
          description: ElasticBeanstalkServiceException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ElasticBeanstalkServiceException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListPlatformVersions
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Filters:
                  description: List only the platforms where the platform member value
                    relates to one of the supplied values.
                  type: array
                  items:
                    type: string
                MaxRecords:
                  description: The maximum number of platform values returned in one call.
                  type: integer
                  minimum: 1
                NextToken:
                  description: The starting index into the remaining list of platforms. Use
                    the <code>NextToken</code> value from a previous
                    <code>ListPlatformVersion</code> call.
                  type: string
  /#Action=ListTagsForResource:
    get:
      x-aws-operation-name: ListTagsForResource
      operationId: GET ListTagsForResource
      description: <p>Returns the tags applied to an AWS Elastic Beanstalk resource. The
        response contains a list of tag key-value pairs.</p> <p>Currently,
        Elastic Beanstalk only supports tagging of Elastic Beanstalk
        environments. For details about environment tagging, see <a
        href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.tagging.html">Tagging
        Resources in Your Elastic Beanstalk Environment</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceTagsDescriptionMessage"
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
        "481":
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ResourceTypeNotSupportedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceTypeNotSupportedException"
      parameters:
        - name: ResourceArn
          in: query
          required: true
          description: <p>The Amazon Resource Name (ARN) of the resouce for which a tag
            list is requested.</p> <p>Must be the ARN of an Elastic Beanstalk
            environment.</p>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListTagsForResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ListTagsForResource
      operationId: POST ListTagsForResource
      description: <p>Returns the tags applied to an AWS Elastic Beanstalk resource. The
        response contains a list of tag key-value pairs.</p> <p>Currently,
        Elastic Beanstalk only supports tagging of Elastic Beanstalk
        environments. For details about environment tagging, see <a
        href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.tagging.html">Tagging
        Resources in Your Elastic Beanstalk Environment</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceTagsDescriptionMessage"
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
        "481":
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ResourceTypeNotSupportedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceTypeNotSupportedException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ListTagsForResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ResourceArn:
                  description: <p>The Amazon Resource Name (ARN) of the resouce for which a
                    tag list is requested.</p> <p>Must be the ARN of an Elastic
                    Beanstalk environment.</p>
                  type: string
              required:
                - ResourceArn
  /#Action=RebuildEnvironment:
    get:
      x-aws-operation-name: RebuildEnvironment
      operationId: GET RebuildEnvironment
      description: "Deletes and recreates all of the AWS resources (for example: the Auto
        Scaling group, load balancer, etc.) for a specified environment and
        forces a restart."
      responses:
        "200":
          description: Success
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
      parameters:
        - name: EnvironmentId
          in: query
          required: false
          description: "<p>The ID of the environment to rebuild.</p> <p> Condition: You
            must specify either this or an EnvironmentName, or both. If you do
            not specify either, AWS Elastic Beanstalk returns
            <code>MissingRequiredParameter</code> error. </p>"
          schema:
            type: string
        - name: EnvironmentName
          in: query
          required: false
          description: "<p>The name of the environment to rebuild.</p> <p> Condition: You
            must specify either this or an EnvironmentId, or both. If you do not
            specify either, AWS Elastic Beanstalk returns
            <code>MissingRequiredParameter</code> error. </p>"
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RebuildEnvironment
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RebuildEnvironment
      operationId: POST RebuildEnvironment
      description: "Deletes and recreates all of the AWS resources (for example: the Auto
        Scaling group, load balancer, etc.) for a specified environment and
        forces a restart."
      responses:
        "200":
          description: Success
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RebuildEnvironment
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                EnvironmentId:
                  description: "<p>The ID of the environment to rebuild.</p> <p> Condition:
                    You must specify either this or an EnvironmentName, or both.
                    If you do not specify either, AWS Elastic Beanstalk returns
                    <code>MissingRequiredParameter</code> error. </p>"
                  type: string
                EnvironmentName:
                  description: "<p>The name of the environment to rebuild.</p> <p>
                    Condition: You must specify either this or an EnvironmentId,
                    or both. If you do not specify either, AWS Elastic Beanstalk
                    returns <code>MissingRequiredParameter</code> error. </p>"
                  type: string
                  minLength: 4
                  maxLength: 40
  /#Action=RequestEnvironmentInfo:
    get:
      x-aws-operation-name: RequestEnvironmentInfo
      operationId: GET RequestEnvironmentInfo
      description: <p>Initiates a request to compile the specified type of information of
        the deployed environment.</p> <p> Setting the <code>InfoType</code> to
        <code>tail</code> compiles the last lines from the application server
        log files of every Amazon EC2 instance in your environment. </p> <p>
        Setting the <code>InfoType</code> to <code>bundle</code> compresses the
        application server log files for every Amazon EC2 instance into a
        <code>.zip</code> file. Legacy and .NET containers do not support bundle
        logs. </p> <p> Use <a>RetrieveEnvironmentInfo</a> to obtain the set of
        logs. </p> <p>Related Topics</p> <ul> <li> <p>
        <a>RetrieveEnvironmentInfo</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
      parameters:
        - name: EnvironmentId
          in: query
          required: false
          description: "<p>The ID of the environment of the requested data.</p> <p>If no
            such environment is found, <code>RequestEnvironmentInfo</code>
            returns an <code>InvalidParameterValue</code> error. </p>
            <p>Condition: You must specify either this or an EnvironmentName, or
            both. If you do not specify either, AWS Elastic Beanstalk returns
            <code>MissingRequiredParameter</code> error. </p>"
          schema:
            type: string
        - name: EnvironmentName
          in: query
          required: false
          description: "<p>The name of the environment of the requested data.</p> <p>If no
            such environment is found, <code>RequestEnvironmentInfo</code>
            returns an <code>InvalidParameterValue</code> error. </p>
            <p>Condition: You must specify either this or an EnvironmentId, or
            both. If you do not specify either, AWS Elastic Beanstalk returns
            <code>MissingRequiredParameter</code> error. </p>"
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: InfoType
          in: query
          required: true
          description: The type of information to request.
          schema:
            type: string
            enum:
              - tail
              - bundle
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RequestEnvironmentInfo
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RequestEnvironmentInfo
      operationId: POST RequestEnvironmentInfo
      description: <p>Initiates a request to compile the specified type of information of
        the deployed environment.</p> <p> Setting the <code>InfoType</code> to
        <code>tail</code> compiles the last lines from the application server
        log files of every Amazon EC2 instance in your environment. </p> <p>
        Setting the <code>InfoType</code> to <code>bundle</code> compresses the
        application server log files for every Amazon EC2 instance into a
        <code>.zip</code> file. Legacy and .NET containers do not support bundle
        logs. </p> <p> Use <a>RetrieveEnvironmentInfo</a> to obtain the set of
        logs. </p> <p>Related Topics</p> <ul> <li> <p>
        <a>RetrieveEnvironmentInfo</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RequestEnvironmentInfo
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                EnvironmentId:
                  description: "<p>The ID of the environment of the requested data.</p>
                    <p>If no such environment is found,
                    <code>RequestEnvironmentInfo</code> returns an
                    <code>InvalidParameterValue</code> error. </p> <p>Condition:
                    You must specify either this or an EnvironmentName, or both.
                    If you do not specify either, AWS Elastic Beanstalk returns
                    <code>MissingRequiredParameter</code> error. </p>"
                  type: string
                EnvironmentName:
                  description: "<p>The name of the environment of the requested data.</p>
                    <p>If no such environment is found,
                    <code>RequestEnvironmentInfo</code> returns an
                    <code>InvalidParameterValue</code> error. </p> <p>Condition:
                    You must specify either this or an EnvironmentId, or both.
                    If you do not specify either, AWS Elastic Beanstalk returns
                    <code>MissingRequiredParameter</code> error. </p>"
                  type: string
                  minLength: 4
                  maxLength: 40
                InfoType:
                  description: The type of information to request.
                  type: string
                  enum:
                    - tail
                    - bundle
              required:
                - InfoType
  /#Action=RestartAppServer:
    get:
      x-aws-operation-name: RestartAppServer
      operationId: GET RestartAppServer
      description: Causes the environment to restart the application container server
        running on each Amazon EC2 instance.
      responses:
        "200":
          description: Success
      parameters:
        - name: EnvironmentId
          in: query
          required: false
          description: "<p>The ID of the environment to restart the server for.</p> <p>
            Condition: You must specify either this or an EnvironmentName, or
            both. If you do not specify either, AWS Elastic Beanstalk returns
            <code>MissingRequiredParameter</code> error. </p>"
          schema:
            type: string
        - name: EnvironmentName
          in: query
          required: false
          description: "<p>The name of the environment to restart the server for.</p> <p>
            Condition: You must specify either this or an EnvironmentId, or
            both. If you do not specify either, AWS Elastic Beanstalk returns
            <code>MissingRequiredParameter</code> error. </p>"
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RestartAppServer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RestartAppServer
      operationId: POST RestartAppServer
      description: Causes the environment to restart the application container server
        running on each Amazon EC2 instance.
      responses:
        "200":
          description: Success
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RestartAppServer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                EnvironmentId:
                  description: "<p>The ID of the environment to restart the server for.</p>
                    <p> Condition: You must specify either this or an
                    EnvironmentName, or both. If you do not specify either, AWS
                    Elastic Beanstalk returns
                    <code>MissingRequiredParameter</code> error. </p>"
                  type: string
                EnvironmentName:
                  description: "<p>The name of the environment to restart the server
                    for.</p> <p> Condition: You must specify either this or an
                    EnvironmentId, or both. If you do not specify either, AWS
                    Elastic Beanstalk returns
                    <code>MissingRequiredParameter</code> error. </p>"
                  type: string
                  minLength: 4
                  maxLength: 40
  /#Action=RetrieveEnvironmentInfo:
    get:
      x-aws-operation-name: RetrieveEnvironmentInfo
      operationId: GET RetrieveEnvironmentInfo
      description: <p>Retrieves the compiled information from a
        <a>RequestEnvironmentInfo</a> request.</p> <p>Related Topics</p> <ul>
        <li> <p> <a>RequestEnvironmentInfo</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RetrieveEnvironmentInfoResultMessage"
      parameters:
        - name: EnvironmentId
          in: query
          required: false
          description: "<p>The ID of the data's environment.</p> <p>If no such environment
            is found, returns an <code>InvalidParameterValue</code> error.</p>
            <p>Condition: You must specify either this or an EnvironmentName, or
            both. If you do not specify either, AWS Elastic Beanstalk returns
            <code>MissingRequiredParameter</code> error.</p>"
          schema:
            type: string
        - name: EnvironmentName
          in: query
          required: false
          description: "<p>The name of the data's environment.</p> <p> If no such
            environment is found, returns an <code>InvalidParameterValue</code>
            error. </p> <p> Condition: You must specify either this or an
            EnvironmentId, or both. If you do not specify either, AWS Elastic
            Beanstalk returns <code>MissingRequiredParameter</code> error. </p>"
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: InfoType
          in: query
          required: true
          description: The type of information to retrieve.
          schema:
            type: string
            enum:
              - tail
              - bundle
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RetrieveEnvironmentInfo
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RetrieveEnvironmentInfo
      operationId: POST RetrieveEnvironmentInfo
      description: <p>Retrieves the compiled information from a
        <a>RequestEnvironmentInfo</a> request.</p> <p>Related Topics</p> <ul>
        <li> <p> <a>RequestEnvironmentInfo</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RetrieveEnvironmentInfoResultMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RetrieveEnvironmentInfo
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                EnvironmentId:
                  description: "<p>The ID of the data's environment.</p> <p>If no such
                    environment is found, returns an
                    <code>InvalidParameterValue</code> error.</p> <p>Condition:
                    You must specify either this or an EnvironmentName, or both.
                    If you do not specify either, AWS Elastic Beanstalk returns
                    <code>MissingRequiredParameter</code> error.</p>"
                  type: string
                EnvironmentName:
                  description: "<p>The name of the data's environment.</p> <p> If no such
                    environment is found, returns an
                    <code>InvalidParameterValue</code> error. </p> <p>
                    Condition: You must specify either this or an EnvironmentId,
                    or both. If you do not specify either, AWS Elastic Beanstalk
                    returns <code>MissingRequiredParameter</code> error. </p>"
                  type: string
                  minLength: 4
                  maxLength: 40
                InfoType:
                  description: The type of information to retrieve.
                  type: string
                  enum:
                    - tail
                    - bundle
              required:
                - InfoType
  /#Action=SwapEnvironmentCNAMEs:
    get:
      x-aws-operation-name: SwapEnvironmentCNAMEs
      operationId: GET SwapEnvironmentCNAMEs
      description: Swaps the CNAMEs of two environments.
      responses:
        "200":
          description: Success
      parameters:
        - name: SourceEnvironmentId
          in: query
          required: false
          description: "<p>The ID of the source environment.</p> <p> Condition: You must
            specify at least the <code>SourceEnvironmentID</code> or the
            <code>SourceEnvironmentName</code>. You may also specify both. If
            you specify the <code>SourceEnvironmentId</code>, you must specify
            the <code>DestinationEnvironmentId</code>. </p>"
          schema:
            type: string
        - name: SourceEnvironmentName
          in: query
          required: false
          description: "<p>The name of the source environment.</p> <p> Condition: You must
            specify at least the <code>SourceEnvironmentID</code> or the
            <code>SourceEnvironmentName</code>. You may also specify both. If
            you specify the <code>SourceEnvironmentName</code>, you must specify
            the <code>DestinationEnvironmentName</code>. </p>"
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: DestinationEnvironmentId
          in: query
          required: false
          description: "<p>The ID of the destination environment.</p> <p> Condition: You
            must specify at least the <code>DestinationEnvironmentID</code> or
            the <code>DestinationEnvironmentName</code>. You may also specify
            both. You must specify the <code>SourceEnvironmentId</code> with the
            <code>DestinationEnvironmentId</code>. </p>"
          schema:
            type: string
        - name: DestinationEnvironmentName
          in: query
          required: false
          description: "<p>The name of the destination environment.</p> <p> Condition: You
            must specify at least the <code>DestinationEnvironmentID</code> or
            the <code>DestinationEnvironmentName</code>. You may also specify
            both. You must specify the <code>SourceEnvironmentName</code> with
            the <code>DestinationEnvironmentName</code>. </p>"
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SwapEnvironmentCNAMEs
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: SwapEnvironmentCNAMEs
      operationId: POST SwapEnvironmentCNAMEs
      description: Swaps the CNAMEs of two environments.
      responses:
        "200":
          description: Success
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SwapEnvironmentCNAMEs
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                SourceEnvironmentId:
                  description: "<p>The ID of the source environment.</p> <p> Condition: You
                    must specify at least the <code>SourceEnvironmentID</code>
                    or the <code>SourceEnvironmentName</code>. You may also
                    specify both. If you specify the
                    <code>SourceEnvironmentId</code>, you must specify the
                    <code>DestinationEnvironmentId</code>. </p>"
                  type: string
                SourceEnvironmentName:
                  description: "<p>The name of the source environment.</p> <p> Condition:
                    You must specify at least the
                    <code>SourceEnvironmentID</code> or the
                    <code>SourceEnvironmentName</code>. You may also specify
                    both. If you specify the <code>SourceEnvironmentName</code>,
                    you must specify the
                    <code>DestinationEnvironmentName</code>. </p>"
                  type: string
                  minLength: 4
                  maxLength: 40
                DestinationEnvironmentId:
                  description: "<p>The ID of the destination environment.</p> <p>
                    Condition: You must specify at least the
                    <code>DestinationEnvironmentID</code> or the
                    <code>DestinationEnvironmentName</code>. You may also
                    specify both. You must specify the
                    <code>SourceEnvironmentId</code> with the
                    <code>DestinationEnvironmentId</code>. </p>"
                  type: string
                DestinationEnvironmentName:
                  description: "<p>The name of the destination environment.</p> <p>
                    Condition: You must specify at least the
                    <code>DestinationEnvironmentID</code> or the
                    <code>DestinationEnvironmentName</code>. You may also
                    specify both. You must specify the
                    <code>SourceEnvironmentName</code> with the
                    <code>DestinationEnvironmentName</code>. </p>"
                  type: string
                  minLength: 4
                  maxLength: 40
  /#Action=TerminateEnvironment:
    get:
      x-aws-operation-name: TerminateEnvironment
      operationId: GET TerminateEnvironment
      description: Terminates the specified environment.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EnvironmentDescription"
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
      parameters:
        - name: EnvironmentId
          in: query
          required: false
          description: "<p>The ID of the environment to terminate.</p> <p> Condition: You
            must specify either this or an EnvironmentName, or both. If you do
            not specify either, AWS Elastic Beanstalk returns
            <code>MissingRequiredParameter</code> error. </p>"
          schema:
            type: string
        - name: EnvironmentName
          in: query
          required: false
          description: "<p>The name of the environment to terminate.</p> <p> Condition: You
            must specify either this or an EnvironmentId, or both. If you do not
            specify either, AWS Elastic Beanstalk returns
            <code>MissingRequiredParameter</code> error. </p>"
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: TerminateResources
          in: query
          required: false
          description: '<p>Indicates whether the associated AWS resources should shut down
            when the environment is terminated:</p> <ul> <li> <p>
            <code>true</code>: The specified environment as well as the
            associated AWS resources, such as Auto Scaling group and
            LoadBalancer, are terminated.</p> </li> <li> <p> <code>false</code>:
            AWS Elastic Beanstalk resource management is removed from the
            environment, but the AWS resources continue to operate.</p> </li>
            </ul> <p> For more information, see the <a
            href="https://docs.aws.amazon.com/elasticbeanstalk/latest/ug/"> AWS
            Elastic Beanstalk User Guide. </a> </p> <p> Default:
            <code>true</code> </p> <p> Valid Values: <code>true</code> |
            <code>false</code> </p>'
          schema:
            type: boolean
        - name: ForceTerminate
          in: query
          required: false
          description: Terminates the target environment even if another environment in the
            same group is dependent on it.
          schema:
            type: boolean
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - TerminateEnvironment
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: TerminateEnvironment
      operationId: POST TerminateEnvironment
      description: Terminates the specified environment.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EnvironmentDescription"
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - TerminateEnvironment
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                EnvironmentId:
                  description: "<p>The ID of the environment to terminate.</p> <p>
                    Condition: You must specify either this or an
                    EnvironmentName, or both. If you do not specify either, AWS
                    Elastic Beanstalk returns
                    <code>MissingRequiredParameter</code> error. </p>"
                  type: string
                EnvironmentName:
                  description: "<p>The name of the environment to terminate.</p> <p>
                    Condition: You must specify either this or an EnvironmentId,
                    or both. If you do not specify either, AWS Elastic Beanstalk
                    returns <code>MissingRequiredParameter</code> error. </p>"
                  type: string
                  minLength: 4
                  maxLength: 40
                TerminateResources:
                  description: '<p>Indicates whether the associated AWS resources should
                    shut down when the environment is terminated:</p> <ul> <li>
                    <p> <code>true</code>: The specified environment as well as
                    the associated AWS resources, such as Auto Scaling group and
                    LoadBalancer, are terminated.</p> </li> <li> <p>
                    <code>false</code>: AWS Elastic Beanstalk resource
                    management is removed from the environment, but the AWS
                    resources continue to operate.</p> </li> </ul> <p> For more
                    information, see the <a
                    href="https://docs.aws.amazon.com/elasticbeanstalk/latest/ug/">
                    AWS Elastic Beanstalk User Guide. </a> </p> <p> Default:
                    <code>true</code> </p> <p> Valid Values: <code>true</code> |
                    <code>false</code> </p>'
                  type: boolean
                ForceTerminate:
                  description: Terminates the target environment even if another
                    environment in the same group is dependent on it.
                  type: boolean
  /#Action=UpdateApplication:
    get:
      x-aws-operation-name: UpdateApplication
      operationId: GET UpdateApplication
      description: <p>Updates the specified application to have the specified
        properties.</p> <note> <p>If a property (for example,
        <code>description</code>) is not provided, the value remains unchanged.
        To clear these properties, specify an empty string.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ApplicationDescriptionMessage"
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: "The name of the application to update. If no such application is
            found, <code>UpdateApplication</code> returns an
            <code>InvalidParameterValue</code> error. "
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: Description
          in: query
          required: false
          description: "<p>A new description for the application.</p> <p>Default: If not
            specified, AWS Elastic Beanstalk does not update the
            description.</p>"
          schema:
            type: string
            maxLength: 200
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateApplication
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: UpdateApplication
      operationId: POST UpdateApplication
      description: <p>Updates the specified application to have the specified
        properties.</p> <note> <p>If a property (for example,
        <code>description</code>) is not provided, the value remains unchanged.
        To clear these properties, specify an empty string.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ApplicationDescriptionMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateApplication
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ApplicationName:
                  description: "The name of the application to update. If no such
                    application is found, <code>UpdateApplication</code> returns
                    an <code>InvalidParameterValue</code> error. "
                  type: string
                  minLength: 1
                  maxLength: 100
                Description:
                  description: "<p>A new description for the application.</p> <p>Default:
                    If not specified, AWS Elastic Beanstalk does not update the
                    description.</p>"
                  type: string
                  maxLength: 200
              required:
                - ApplicationName
  /#Action=UpdateApplicationResourceLifecycle:
    get:
      x-aws-operation-name: UpdateApplicationResourceLifecycle
      operationId: GET UpdateApplicationResourceLifecycle
      description: Modifies lifecycle settings for an application.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ApplicationResourceLifecycleDescription\
                  Message"
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: The name of the application.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: ResourceLifecycleConfig.ServiceRole
          in: query
          description: >-
            The resource lifecycle configuration for an application. Defines
            lifecycle settings for resources that belong to the application, and
            the service role that Elastic Beanstalk assumes in order to apply
            lifecycle settings. The version lifecycle configuration defines
            lifecycle settings for application versions.

            <p>The ARN of an IAM service role that Elastic Beanstalk has permission to assume.</p> <p>The <code>ServiceRole</code> property is required the first time that you provide a <code>VersionLifecycleConfig</code> for the application in one of the supporting calls (<code>CreateApplication</code> or <code>UpdateApplicationResourceLifecycle</code>). After you provide it once, in either one of the calls, Elastic Beanstalk persists the Service Role with the application, and you don't need to specify it again in subsequent <code>UpdateApplicationResourceLifecycle</code> calls. You can, however, specify it in subsequent calls to change the Service Role to another value.</p>
          schema:
            type: string
        - name: ResourceLifecycleConfig.VersionLifecycleConfig
          in: query
          description: >-
            The resource lifecycle configuration for an application. Defines
            lifecycle settings for resources that belong to the application, and
            the service role that Elastic Beanstalk assumes in order to apply
            lifecycle settings. The version lifecycle configuration defines
            lifecycle settings for application versions.

            The application version lifecycle configuration.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateApplicationResourceLifecycle
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: UpdateApplicationResourceLifecycle
      operationId: POST UpdateApplicationResourceLifecycle
      description: Modifies lifecycle settings for an application.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ApplicationResourceLifecycleDescription\
                  Message"
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateApplicationResourceLifecycle
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ApplicationName:
                  description: The name of the application.
                  type: string
                  minLength: 1
                  maxLength: 100
                ResourceLifecycleConfig.ServiceRole:
                  description: >-
                    The resource lifecycle configuration for an application.
                    Defines lifecycle settings for resources that belong to the
                    application, and the service role that Elastic Beanstalk
                    assumes in order to apply lifecycle settings. The version
                    lifecycle configuration defines lifecycle settings for
                    application versions.

                    <p>The ARN of an IAM service role that Elastic Beanstalk has permission to assume.</p> <p>The <code>ServiceRole</code> property is required the first time that you provide a <code>VersionLifecycleConfig</code> for the application in one of the supporting calls (<code>CreateApplication</code> or <code>UpdateApplicationResourceLifecycle</code>). After you provide it once, in either one of the calls, Elastic Beanstalk persists the Service Role with the application, and you don't need to specify it again in subsequent <code>UpdateApplicationResourceLifecycle</code> calls. You can, however, specify it in subsequent calls to change the Service Role to another value.</p>
                  type: string
                ResourceLifecycleConfig.VersionLifecycleConfig:
                  description: >-
                    The resource lifecycle configuration for an application.
                    Defines lifecycle settings for resources that belong to the
                    application, and the service role that Elastic Beanstalk
                    assumes in order to apply lifecycle settings. The version
                    lifecycle configuration defines lifecycle settings for
                    application versions.

                    The application version lifecycle configuration.
                  type: string
              required:
                - ApplicationName
  /#Action=UpdateApplicationVersion:
    get:
      x-aws-operation-name: UpdateApplicationVersion
      operationId: GET UpdateApplicationVersion
      description: <p>Updates the specified application version to have the specified
        properties.</p> <note> <p>If a property (for example,
        <code>description</code>) is not provided, the value remains unchanged.
        To clear properties, specify an empty string.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ApplicationVersionDescriptionMessage"
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: <p>The name of the application associated with this version.</p> <p>
            If no application is found with this name,
            <code>UpdateApplication</code> returns an
            <code>InvalidParameterValue</code> error.</p>
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: VersionLabel
          in: query
          required: true
          description: <p>The name of the version to update.</p> <p>If no application
            version is found with this label, <code>UpdateApplication</code>
            returns an <code>InvalidParameterValue</code> error. </p>
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: Description
          in: query
          required: false
          description: A new description for this version.
          schema:
            type: string
            maxLength: 200
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateApplicationVersion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: UpdateApplicationVersion
      operationId: POST UpdateApplicationVersion
      description: <p>Updates the specified application version to have the specified
        properties.</p> <note> <p>If a property (for example,
        <code>description</code>) is not provided, the value remains unchanged.
        To clear properties, specify an empty string.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ApplicationVersionDescriptionMessage"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateApplicationVersion
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ApplicationName:
                  description: <p>The name of the application associated with this
                    version.</p> <p> If no application is found with this name,
                    <code>UpdateApplication</code> returns an
                    <code>InvalidParameterValue</code> error.</p>
                  type: string
                  minLength: 1
                  maxLength: 100
                VersionLabel:
                  description: <p>The name of the version to update.</p> <p>If no
                    application version is found with this label,
                    <code>UpdateApplication</code> returns an
                    <code>InvalidParameterValue</code> error. </p>
                  type: string
                  minLength: 1
                  maxLength: 100
                Description:
                  description: A new description for this version.
                  type: string
                  maxLength: 200
              required:
                - ApplicationName
                - VersionLabel
  /#Action=UpdateConfigurationTemplate:
    get:
      x-aws-operation-name: UpdateConfigurationTemplate
      operationId: GET UpdateConfigurationTemplate
      description: <p>Updates the specified configuration template to have the specified
        properties or configuration option values.</p> <note> <p>If a property
        (for example, <code>ApplicationName</code>) is not provided, its value
        remains unchanged. To clear such properties, specify an empty
        string.</p> </note> <p>Related Topics</p> <ul> <li> <p>
        <a>DescribeConfigurationOptions</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConfigurationSettingsDescription"
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
        "481":
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyBucketsException"
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: <p>The name of the application associated with the configuration
            template to update.</p> <p> If no application is found with this
            name, <code>UpdateConfigurationTemplate</code> returns an
            <code>InvalidParameterValue</code> error. </p>
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: TemplateName
          in: query
          required: true
          description: <p>The name of the configuration template to update.</p> <p> If no
            configuration template is found with this name,
            <code>UpdateConfigurationTemplate</code> returns an
            <code>InvalidParameterValue</code> error. </p>
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: Description
          in: query
          required: false
          description: A new description for the configuration.
          schema:
            type: string
            maxLength: 200
        - name: OptionSettings
          in: query
          required: false
          description: A list of configuration option settings to update with the new
            specified option value.
          schema:
            type: array
            items:
              type: string
        - name: OptionsToRemove
          in: query
          required: false
          description: "<p>A list of configuration options to remove from the configuration
            set.</p> <p> Constraint: You can remove only
            <code>UserDefined</code> configuration options. </p>"
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateConfigurationTemplate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: UpdateConfigurationTemplate
      operationId: POST UpdateConfigurationTemplate
      description: <p>Updates the specified configuration template to have the specified
        properties or configuration option values.</p> <note> <p>If a property
        (for example, <code>ApplicationName</code>) is not provided, its value
        remains unchanged. To clear such properties, specify an empty
        string.</p> </note> <p>Related Topics</p> <ul> <li> <p>
        <a>DescribeConfigurationOptions</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConfigurationSettingsDescription"
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
        "481":
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyBucketsException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateConfigurationTemplate
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ApplicationName:
                  description: <p>The name of the application associated with the
                    configuration template to update.</p> <p> If no application
                    is found with this name,
                    <code>UpdateConfigurationTemplate</code> returns an
                    <code>InvalidParameterValue</code> error. </p>
                  type: string
                  minLength: 1
                  maxLength: 100
                TemplateName:
                  description: <p>The name of the configuration template to update.</p> <p>
                    If no configuration template is found with this name,
                    <code>UpdateConfigurationTemplate</code> returns an
                    <code>InvalidParameterValue</code> error. </p>
                  type: string
                  minLength: 1
                  maxLength: 100
                Description:
                  description: A new description for the configuration.
                  type: string
                  maxLength: 200
                OptionSettings:
                  description: A list of configuration option settings to update with the
                    new specified option value.
                  type: array
                  items:
                    type: string
                OptionsToRemove:
                  description: "<p>A list of configuration options to remove from the
                    configuration set.</p> <p> Constraint: You can remove only
                    <code>UserDefined</code> configuration options. </p>"
                  type: array
                  items:
                    type: string
              required:
                - ApplicationName
                - TemplateName
  /#Action=UpdateEnvironment:
    get:
      x-aws-operation-name: UpdateEnvironment
      operationId: GET UpdateEnvironment
      description: <p>Updates the environment description, deploys a new application
        version, updates the configuration settings to an entirely new
        configuration template, or updates select configuration option values in
        the running environment.</p> <p> Attempting to update both the release
        and configuration is not allowed and AWS Elastic Beanstalk returns an
        <code>InvalidParameterCombination</code> error. </p> <p> When updating
        the configuration settings to a new template or individual settings, a
        draft configuration is created and <a>DescribeConfigurationSettings</a>
        for this environment returns two setting descriptions with different
        <code>DeploymentStatus</code> values. </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EnvironmentDescription"
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
        "481":
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyBucketsException"
      parameters:
        - name: ApplicationName
          in: query
          required: false
          description: The name of the application with which the environment is associated.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: EnvironmentId
          in: query
          required: false
          description: "<p>The ID of the environment to update.</p> <p>If no environment
            with this ID exists, AWS Elastic Beanstalk returns an
            <code>InvalidParameterValue</code> error.</p> <p>Condition: You must
            specify either this or an EnvironmentName, or both. If you do not
            specify either, AWS Elastic Beanstalk returns
            <code>MissingRequiredParameter</code> error. </p>"
          schema:
            type: string
        - name: EnvironmentName
          in: query
          required: false
          description: "<p>The name of the environment to update. If no environment with
            this name exists, AWS Elastic Beanstalk returns an
            <code>InvalidParameterValue</code> error. </p> <p>Condition: You
            must specify either this or an EnvironmentId, or both. If you do not
            specify either, AWS Elastic Beanstalk returns
            <code>MissingRequiredParameter</code> error. </p>"
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: GroupName
          in: query
          required: false
          description: The name of the group to which the target environment belongs.
            Specify a group name only if the environment's name is specified in
            an environment manifest and not with the environment name or
            environment ID parameters. See <a
            href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html">Environment
            Manifest (env.yaml)</a> for details.
          schema:
            type: string
            minLength: 1
            maxLength: 19
        - name: Description
          in: query
          required: false
          description: If this parameter is specified, AWS Elastic Beanstalk updates the
            description of this environment.
          schema:
            type: string
            maxLength: 200
        - name: Tier.Name
          in: query
          description: >-
            Describes the properties of an environment tier

            <p>The name of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>WebServer</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>Worker</code> </p> </li> </ul>
          schema:
            type: string
        - name: Tier.Type
          in: query
          description: >-
            Describes the properties of an environment tier

            <p>The type of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>Standard</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>SQS/HTTP</code> </p> </li> </ul>
          schema:
            type: string
        - name: Tier.Version
          in: query
          description: >-
            Describes the properties of an environment tier

            <p>The version of this environment tier. When you don't set a value to it, Elastic Beanstalk uses the latest compatible worker tier version.</p> <note> <p>This member is deprecated. Any specific version that you set may become out of date. We recommend leaving it unspecified.</p> </note>
          schema:
            type: string
        - name: VersionLabel
          in: query
          required: false
          description: "If this parameter is specified, AWS Elastic Beanstalk deploys the
            named application version to the environment. If no such application
            version is found, returns an <code>InvalidParameterValue</code>
            error. "
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: TemplateName
          in: query
          required: false
          description: "If this parameter is specified, AWS Elastic Beanstalk deploys this
            configuration template to the environment. If no such configuration
            template is found, AWS Elastic Beanstalk returns an
            <code>InvalidParameterValue</code> error. "
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: SolutionStackName
          in: query
          required: false
          description: This specifies the platform version that the environment will run
            after the environment is updated.
          schema:
            type: string
        - name: PlatformArn
          in: query
          required: false
          description: The ARN of the platform, if used.
          schema:
            type: string
        - name: OptionSettings
          in: query
          required: false
          description: If specified, AWS Elastic Beanstalk updates the configuration set
            associated with the running environment and sets the specified
            configuration options to the requested value.
          schema:
            type: array
            items:
              type: string
        - name: OptionsToRemove
          in: query
          required: false
          description: A list of custom user-defined configuration options to remove from
            the configuration set for this environment.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateEnvironment
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: UpdateEnvironment
      operationId: POST UpdateEnvironment
      description: <p>Updates the environment description, deploys a new application
        version, updates the configuration settings to an entirely new
        configuration template, or updates select configuration option values in
        the running environment.</p> <p> Attempting to update both the release
        and configuration is not allowed and AWS Elastic Beanstalk returns an
        <code>InvalidParameterCombination</code> error. </p> <p> When updating
        the configuration settings to a new template or individual settings, a
        draft configuration is created and <a>DescribeConfigurationSettings</a>
        for this environment returns two setting descriptions with different
        <code>DeploymentStatus</code> values. </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/EnvironmentDescription"
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
        "481":
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyBucketsException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateEnvironment
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ApplicationName:
                  description: The name of the application with which the environment is
                    associated.
                  type: string
                  minLength: 1
                  maxLength: 100
                EnvironmentId:
                  description: "<p>The ID of the environment to update.</p> <p>If no
                    environment with this ID exists, AWS Elastic Beanstalk
                    returns an <code>InvalidParameterValue</code> error.</p>
                    <p>Condition: You must specify either this or an
                    EnvironmentName, or both. If you do not specify either, AWS
                    Elastic Beanstalk returns
                    <code>MissingRequiredParameter</code> error. </p>"
                  type: string
                EnvironmentName:
                  description: "<p>The name of the environment to update. If no environment
                    with this name exists, AWS Elastic Beanstalk returns an
                    <code>InvalidParameterValue</code> error. </p> <p>Condition:
                    You must specify either this or an EnvironmentId, or both.
                    If you do not specify either, AWS Elastic Beanstalk returns
                    <code>MissingRequiredParameter</code> error. </p>"
                  type: string
                  minLength: 4
                  maxLength: 40
                GroupName:
                  description: The name of the group to which the target environment
                    belongs. Specify a group name only if the environment's name
                    is specified in an environment manifest and not with the
                    environment name or environment ID parameters. See <a
                    href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html">Environment
                    Manifest (env.yaml)</a> for details.
                  type: string
                  minLength: 1
                  maxLength: 19
                Description:
                  description: If this parameter is specified, AWS Elastic Beanstalk
                    updates the description of this environment.
                  type: string
                  maxLength: 200
                Tier.Name:
                  description: >-
                    Describes the properties of an environment tier

                    <p>The name of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>WebServer</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>Worker</code> </p> </li> </ul>
                  type: string
                Tier.Type:
                  description: >-
                    Describes the properties of an environment tier

                    <p>The type of this environment tier.</p> <p>Valid values:</p> <ul> <li> <p>For <i>Web server tier</i> – <code>Standard</code> </p> </li> <li> <p>For <i>Worker tier</i> – <code>SQS/HTTP</code> </p> </li> </ul>
                  type: string
                Tier.Version:
                  description: >-
                    Describes the properties of an environment tier

                    <p>The version of this environment tier. When you don't set a value to it, Elastic Beanstalk uses the latest compatible worker tier version.</p> <note> <p>This member is deprecated. Any specific version that you set may become out of date. We recommend leaving it unspecified.</p> </note>
                  type: string
                VersionLabel:
                  description: "If this parameter is specified, AWS Elastic Beanstalk
                    deploys the named application version to the environment. If
                    no such application version is found, returns an
                    <code>InvalidParameterValue</code> error. "
                  type: string
                  minLength: 1
                  maxLength: 100
                TemplateName:
                  description: "If this parameter is specified, AWS Elastic Beanstalk
                    deploys this configuration template to the environment. If
                    no such configuration template is found, AWS Elastic
                    Beanstalk returns an <code>InvalidParameterValue</code>
                    error. "
                  type: string
                  minLength: 1
                  maxLength: 100
                SolutionStackName:
                  description: This specifies the platform version that the environment
                    will run after the environment is updated.
                  type: string
                PlatformArn:
                  description: The ARN of the platform, if used.
                  type: string
                OptionSettings:
                  description: If specified, AWS Elastic Beanstalk updates the
                    configuration set associated with the running environment
                    and sets the specified configuration options to the
                    requested value.
                  type: array
                  items:
                    type: string
                OptionsToRemove:
                  description: A list of custom user-defined configuration options to
                    remove from the configuration set for this environment.
                  type: array
                  items:
                    type: string
  /#Action=UpdateTagsForResource:
    get:
      x-aws-operation-name: UpdateTagsForResource
      operationId: GET UpdateTagsForResource
      description: '<p>Update the list of tags applied to an AWS Elastic Beanstalk
        resource. Two lists can be passed: <code>TagsToAdd</code> for tags to
        add or update, and <code>TagsToRemove</code>.</p> <p>Currently, Elastic
        Beanstalk only supports tagging of Elastic Beanstalk environments. For
        details about environment tagging, see <a
        href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.tagging.html">Tagging
        Resources in Your Elastic Beanstalk Environment</a>.</p> <p>If you
        create a custom IAM user policy to control permission to this operation,
        specify one of the following two virtual actions (or both) instead of
        the API operation name:</p> <dl> <dt>elasticbeanstalk:AddTags</dt> <dd>
        <p>Controls permission to call <code>UpdateTagsForResource</code> and
        pass a list of tags to add in the <code>TagsToAdd</code> parameter.</p>
        </dd> <dt>elasticbeanstalk:RemoveTags</dt> <dd> <p>Controls permission
        to call <code>UpdateTagsForResource</code> and pass a list of tag keys
        to remove in the <code>TagsToRemove</code> parameter.</p> </dd> </dl>
        <p>For details about creating a custom user policy, see <a
        href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.iam.managed-policies.html#AWSHowTo.iam.policies">Creating
        a Custom User Policy</a>.</p>'
      responses:
        "200":
          description: Success
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
        "481":
          description: OperationInProgressException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OperationInProgressException"
        "482":
          description: TooManyTagsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "483":
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ResourceTypeNotSupportedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceTypeNotSupportedException"
      parameters:
        - name: ResourceArn
          in: query
          required: true
          description: <p>The Amazon Resource Name (ARN) of the resouce to be updated.</p>
            <p>Must be the ARN of an Elastic Beanstalk environment.</p>
          schema:
            type: string
        - name: TagsToAdd
          in: query
          required: false
          description: <p>A list of tags to add or update.</p> <p>If a key of an existing
            tag is added, the tag's value is updated.</p>
          schema:
            type: array
            items:
              type: string
        - name: TagsToRemove
          in: query
          required: false
          description: <p>A list of tag keys to remove.</p> <p>If a tag key doesn't exist,
            it is silently ignored.</p>
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateTagsForResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: UpdateTagsForResource
      operationId: POST UpdateTagsForResource
      description: '<p>Update the list of tags applied to an AWS Elastic Beanstalk
        resource. Two lists can be passed: <code>TagsToAdd</code> for tags to
        add or update, and <code>TagsToRemove</code>.</p> <p>Currently, Elastic
        Beanstalk only supports tagging of Elastic Beanstalk environments. For
        details about environment tagging, see <a
        href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/using-features.tagging.html">Tagging
        Resources in Your Elastic Beanstalk Environment</a>.</p> <p>If you
        create a custom IAM user policy to control permission to this operation,
        specify one of the following two virtual actions (or both) instead of
        the API operation name:</p> <dl> <dt>elasticbeanstalk:AddTags</dt> <dd>
        <p>Controls permission to call <code>UpdateTagsForResource</code> and
        pass a list of tags to add in the <code>TagsToAdd</code> parameter.</p>
        </dd> <dt>elasticbeanstalk:RemoveTags</dt> <dd> <p>Controls permission
        to call <code>UpdateTagsForResource</code> and pass a list of tag keys
        to remove in the <code>TagsToRemove</code> parameter.</p> </dd> </dl>
        <p>For details about creating a custom user policy, see <a
        href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.iam.managed-policies.html#AWSHowTo.iam.policies">Creating
        a Custom User Policy</a>.</p>'
      responses:
        "200":
          description: Success
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
        "481":
          description: OperationInProgressException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OperationInProgressException"
        "482":
          description: TooManyTagsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "483":
          description: ResourceNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ResourceTypeNotSupportedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceTypeNotSupportedException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - UpdateTagsForResource
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ResourceArn:
                  description: <p>The Amazon Resource Name (ARN) of the resouce to be
                    updated.</p> <p>Must be the ARN of an Elastic Beanstalk
                    environment.</p>
                  type: string
                TagsToAdd:
                  description: <p>A list of tags to add or update.</p> <p>If a key of an
                    existing tag is added, the tag's value is updated.</p>
                  type: array
                  items:
                    type: string
                TagsToRemove:
                  description: <p>A list of tag keys to remove.</p> <p>If a tag key doesn't
                    exist, it is silently ignored.</p>
                  type: array
                  items:
                    type: string
              required:
                - ResourceArn
  /#Action=ValidateConfigurationSettings:
    get:
      x-aws-operation-name: ValidateConfigurationSettings
      operationId: GET ValidateConfigurationSettings
      description: <p>Takes a set of configuration settings and either a configuration
        template or environment, and determines whether those values are
        valid.</p> <p>This action returns a list of messages indicating any
        errors or warnings associated with the selection of option values.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConfigurationSettingsValidationMessages"
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
        "481":
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyBucketsException"
      parameters:
        - name: ApplicationName
          in: query
          required: true
          description: The name of the application that the configuration template or
            environment belongs to.
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: TemplateName
          in: query
          required: false
          description: "<p>The name of the configuration template to validate the settings
            against.</p> <p>Condition: You cannot specify both this and an
            environment name.</p>"
          schema:
            type: string
            minLength: 1
            maxLength: 100
        - name: EnvironmentName
          in: query
          required: false
          description: "<p>The name of the environment to validate the settings
            against.</p> <p>Condition: You cannot specify both this and a
            configuration template name.</p>"
          schema:
            type: string
            minLength: 4
            maxLength: 40
        - name: OptionSettings
          in: query
          required: true
          description: A list of the options and desired values to evaluate.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ValidateConfigurationSettings
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ValidateConfigurationSettings
      operationId: POST ValidateConfigurationSettings
      description: <p>Takes a set of configuration settings and either a configuration
        template or environment, and determines whether those values are
        valid.</p> <p>This action returns a list of messages indicating any
        errors or warnings associated with the selection of option values.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConfigurationSettingsValidationMessages"
        "480":
          description: InsufficientPrivilegesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientPrivilegesException"
        "481":
          description: TooManyBucketsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyBucketsException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ValidateConfigurationSettings
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2010-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ApplicationName:
                  description: The name of the application that the configuration template
                    or environment belongs to.
                  type: string
                  minLength: 1
                  maxLength: 100
                TemplateName:
                  description: "<p>The name of the configuration template to validate the
                    settings against.</p> <p>Condition: You cannot specify both
                    this and an environment name.</p>"
                  type: string
                  minLength: 1
                  maxLength: 100
                EnvironmentName:
                  description: "<p>The name of the environment to validate the settings
                    against.</p> <p>Condition: You cannot specify both this and
                    a configuration template name.</p>"
                  type: string
                  minLength: 4
                  maxLength: 40
                OptionSettings:
                  description: A list of the options and desired values to evaluate.
                  type: array
                  items:
                    type: string
              required:
                - ApplicationName
                - OptionSettings
servers:
  - url: http://elasticbeanstalk.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Elastic Beanstalk multi-region endpoint
  - url: https://elasticbeanstalk.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Elastic Beanstalk multi-region endpoint
  - url: http://elasticbeanstalk.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Elastic Beanstalk endpoint for China (Beijing) and China (Ningxia)
  - url: https://elasticbeanstalk.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Elastic Beanstalk endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    InsufficientPrivilegesException: {}
    ApplyEnvironmentManagedActionResult:
      type: object
      properties:
        ActionId:
          $ref: "#/components/schemas/String"
        ActionDescription:
          $ref: "#/components/schemas/String"
        ActionType:
          $ref: "#/components/schemas/ActionType"
        Status:
          $ref: "#/components/schemas/String"
      description: The result message containing information about the managed action.
    ElasticBeanstalkServiceException: {}
    ManagedActionInvalidStateException: {}
    CheckDNSAvailabilityResultMessage:
      type: object
      example:
        Available: true
        FullyQualifiedCNAME: my-cname.us-west-2.elasticbeanstalk.com
      properties:
        Available:
          $ref: "#/components/schemas/CnameAvailability"
        FullyQualifiedCNAME:
          $ref: "#/components/schemas/DNSCname"
      description: Indicates if the specified CNAME is available.
    EnvironmentDescriptionsMessage:
      type: object
      example:
        Environments:
          - AbortableOperationInProgress: false
            ApplicationName: my-app
            CNAME: my-env.elasticbeanstalk.com
            DateCreated: 2015-08-07T20:48:49.599Z
            DateUpdated: 2015-08-12T18:16:55.019Z
            EndpointURL: awseb-e-w-AWSEBLoa-1483140XB0Q4L-109QXY8121.us-west-2.elb.amazonaws.com
            EnvironmentId: e-rpqsewtp2j
            EnvironmentName: my-env
            Health: Green
            SolutionStackName: 64bit Amazon Linux 2015.03 v2.0.0 running Tomcat 8 Java 8
            Status: Ready
            Tier:
              Name: WebServer
              Type: Standard
              Version: " "
            VersionLabel: 7f58-stage-150812_025409
      properties:
        Environments:
          $ref: "#/components/schemas/EnvironmentDescriptionsList"
        NextToken:
          $ref: "#/components/schemas/Token"
      description: Result message containing a list of environment descriptions.
    VersionLabel:
      type: string
      minLength: 1
      maxLength: 100
    TooManyEnvironmentsException: {}
    ApplicationDescriptionMessage:
      type: object
      example:
        Application:
          ApplicationName: my-app
          ConfigurationTemplates: []
          DateCreated: 2015-08-13T19:15:50.449Z
          DateUpdated: 2015-08-20T22:34:56.195Z
          Description: my Elastic Beanstalk application
          Versions:
            - 2fba-stage-150819_234450
            - bf07-stage-150820_214945
            - 93f8
            - fd7c-stage-150820_000431
            - 22a0-stage-150819_185942
      properties:
        Application:
          $ref: "#/components/schemas/ApplicationDescription"
      description: Result message containing a single description of an application.
    String:
      type: string
    ApplicationVersionLifecycleConfig:
      type: object
      properties:
        MaxCountRule:
          $ref: "#/components/schemas/MaxCountRule"
        MaxAgeRule:
          $ref: "#/components/schemas/MaxAgeRule"
      description: <p>The application version lifecycle settings for an application.
        Defines the rules that Elastic Beanstalk applies to an application's
        versions in order to avoid hitting the per-region limit for application
        versions.</p> <p>When Elastic Beanstalk deletes an application version
        from its database, you can no longer deploy that version to an
        environment. The source bundle remains in S3 unless you configure the
        rule to delete it.</p>
    Tag:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
        Value:
          $ref: "#/components/schemas/TagValue"
      description: Describes a tag applied to a resource in an environment.
    MaxCountRule:
      type: object
      required:
        - Enabled
      properties:
        Enabled:
          $ref: "#/components/schemas/BoxedBoolean"
        MaxCount:
          $ref: "#/components/schemas/BoxedInt"
        DeleteSourceFromS3:
          $ref: "#/components/schemas/BoxedBoolean"
      description: A lifecycle rule that deletes the oldest application version when the
        maximum count is exceeded.
    MaxAgeRule:
      type: object
      required:
        - Enabled
      properties:
        Enabled:
          $ref: "#/components/schemas/BoxedBoolean"
        MaxAgeInDays:
          $ref: "#/components/schemas/BoxedInt"
        DeleteSourceFromS3:
          $ref: "#/components/schemas/BoxedBoolean"
      description: A lifecycle rule that deletes application versions after the specified
        number of days.
    TooManyApplicationsException: {}
    ApplicationVersionDescriptionMessage:
      type: object
      example:
        ApplicationVersion:
          ApplicationName: my-app
          DateCreated: 2015-08-19T18:59:17.646Z
          DateUpdated: 2015-08-20T22:53:28.871Z
          Description: new description
          SourceBundle:
            S3Bucket: elasticbeanstalk-us-west-2-0123456789012
            S3Key: my-app/22a0-stage-150819_185942.war
          VersionLabel: 22a0-stage-150819_185942
      properties:
        ApplicationVersion:
          $ref: "#/components/schemas/ApplicationVersionDescription"
      description: Result message wrapping a single description of an application version.
    SourceType:
      type: string
      enum:
        - Git
        - Zip
    SourceRepository:
      type: string
      enum:
        - CodeCommit
        - S3
    SourceLocation:
      type: string
      pattern: .+/.+
      minLength: 3
      maxLength: 255
    S3Bucket:
      type: string
      maxLength: 255
    S3Key:
      type: string
      maxLength: 1024
    NonEmptyString:
      type: string
      pattern: .*\S.*
    ComputeType:
      type: string
      enum:
        - BUILD_GENERAL1_SMALL
        - BUILD_GENERAL1_MEDIUM
        - BUILD_GENERAL1_LARGE
    BoxedInt:
      type: integer
    TooManyApplicationVersionsException: {}
    S3LocationNotInServiceRegionException: {}
    CodeBuildNotInServiceRegionException: {}
    ConfigurationSettingsDescription:
      type: object
      example:
        ApplicationName: my-app
        DateCreated: 2015-08-20T22:39:31Z
        DateUpdated: 2015-08-20T22:43:11Z
        SolutionStackName: 64bit Amazon Linux 2015.03 v2.0.0 running Tomcat 8 Java 8
        TemplateName: my-template
      properties:
        SolutionStackName:
          $ref: "#/components/schemas/SolutionStackName"
        PlatformArn:
          $ref: "#/components/schemas/PlatformArn"
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        TemplateName:
          $ref: "#/components/schemas/ConfigurationTemplateName"
        Description:
          $ref: "#/components/schemas/Description"
        EnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
        DeploymentStatus:
          $ref: "#/components/schemas/ConfigurationDeploymentStatus"
        DateCreated:
          $ref: "#/components/schemas/CreationDate"
        DateUpdated:
          $ref: "#/components/schemas/UpdateDate"
        OptionSettings:
          $ref: "#/components/schemas/ConfigurationOptionSettingsList"
      description: Describes the settings for a configuration set.
    ApplicationName:
      type: string
      minLength: 1
      maxLength: 100
    ConfigurationTemplateName:
      type: string
      minLength: 1
      maxLength: 100
    ConfigurationOptionSetting:
      type: object
      properties:
        ResourceName:
          $ref: "#/components/schemas/ResourceName"
        Namespace:
          $ref: "#/components/schemas/OptionNamespace"
        OptionName:
          $ref: "#/components/schemas/ConfigurationOptionName"
        Value:
          $ref: "#/components/schemas/ConfigurationOptionValue"
      description: ' A specification identifying an individual configuration option along
        with its current value. For a list of possible option values, go to <a
        href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options.html">Option
        Values</a> in the <i>AWS Elastic Beanstalk Developer Guide</i>. '
    TooManyBucketsException: {}
    TooManyConfigurationTemplatesException: {}
    EnvironmentDescription:
      type: object
      example:
        AbortableOperationInProgress: true
        ApplicationName: my-app
        CNAME: my-env.elasticbeanstalk.com
        DateCreated: 2015-08-07T20:48:49.599Z
        DateUpdated: 2015-08-12T18:15:23.804Z
        EndpointURL: awseb-e-w-AWSEBLoa-14XB83101Q4L-104QXY80921.sa-east-1.elb.amazonaws.com
        EnvironmentId: e-wtp2rpqsej
        EnvironmentName: my-env
        Health: Grey
        SolutionStackName: 64bit Amazon Linux 2015.03 v2.0.0 running Tomcat 8 Java 8
        Status: Updating
        Tier:
          Name: WebServer
          Type: Standard
          Version: " "
        VersionLabel: 7f58-stage-150812_025409
      properties:
        EnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
        EnvironmentId:
          $ref: "#/components/schemas/EnvironmentId"
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        VersionLabel:
          $ref: "#/components/schemas/VersionLabel"
        SolutionStackName:
          $ref: "#/components/schemas/SolutionStackName"
        PlatformArn:
          $ref: "#/components/schemas/PlatformArn"
        TemplateName:
          $ref: "#/components/schemas/ConfigurationTemplateName"
        Description:
          $ref: "#/components/schemas/Description"
        EndpointURL:
          $ref: "#/components/schemas/EndpointURL"
        CNAME:
          $ref: "#/components/schemas/DNSCname"
        DateCreated:
          $ref: "#/components/schemas/CreationDate"
        DateUpdated:
          $ref: "#/components/schemas/UpdateDate"
        Status:
          $ref: "#/components/schemas/EnvironmentStatus"
        AbortableOperationInProgress:
          $ref: "#/components/schemas/AbortableOperationInProgress"
        Health:
          $ref: "#/components/schemas/EnvironmentHealth"
        HealthStatus:
          $ref: "#/components/schemas/EnvironmentHealthStatus"
        Resources:
          $ref: "#/components/schemas/EnvironmentResourcesDescription"
        Tier:
          $ref: "#/components/schemas/EnvironmentTier"
        EnvironmentLinks:
          $ref: "#/components/schemas/EnvironmentLinks"
        EnvironmentArn:
          $ref: "#/components/schemas/EnvironmentArn"
      description: Describes the properties of an environment.
    OptionSpecification:
      type: object
      properties:
        ResourceName:
          $ref: "#/components/schemas/ResourceName"
        Namespace:
          $ref: "#/components/schemas/OptionNamespace"
        OptionName:
          $ref: "#/components/schemas/ConfigurationOptionName"
      description: A specification identifying an individual configuration option.
    CreatePlatformVersionResult:
      type: object
      properties:
        PlatformSummary:
          $ref: "#/components/schemas/PlatformSummary"
        Builder:
          $ref: "#/components/schemas/Builder"
    TooManyPlatformsException: {}
    CreateStorageLocationResultMessage:
      type: object
      example:
        S3Bucket: elasticbeanstalk-us-west-2-0123456789012
      properties:
        S3Bucket:
          $ref: "#/components/schemas/S3Bucket"
      description: Results of a <a>CreateStorageLocationResult</a> call.
    S3SubscriptionRequiredException: {}
    OperationInProgressException: {}
    SourceBundleDeletionException: {}
    DeletePlatformVersionResult:
      type: object
      properties:
        PlatformSummary:
          $ref: "#/components/schemas/PlatformSummary"
    PlatformVersionStillReferencedException: {}
    DescribeAccountAttributesResult:
      type: object
      properties:
        ResourceQuotas:
          $ref: "#/components/schemas/ResourceQuotas"
    ApplicationVersionDescriptionsMessage:
      type: object
      example:
        ApplicationVersions:
          - ApplicationName: my-app
            DateCreated: 2015-07-23T01:32:26.079Z
            DateUpdated: 2015-07-23T01:32:26.079Z
            Description: update cover page
            SourceBundle:
              S3Bucket: elasticbeanstalk-us-west-2-015321684451
              S3Key: my-app/5026-stage-150723_224258.war
            VersionLabel: v2
          - ApplicationName: my-app
            DateCreated: 2015-07-23T22:26:10.816Z
            DateUpdated: 2015-07-23T22:26:10.816Z
            Description: initial version
            SourceBundle:
              S3Bucket: elasticbeanstalk-us-west-2-015321684451
              S3Key: my-app/5026-stage-150723_222618.war
            VersionLabel: v1
      properties:
        ApplicationVersions:
          $ref: "#/components/schemas/ApplicationVersionDescriptionList"
        NextToken:
          $ref: "#/components/schemas/Token"
      description: Result message wrapping a list of application version descriptions.
    ApplicationDescriptionsMessage:
      type: object
      example:
        Applications:
          - ApplicationName: ruby
            ConfigurationTemplates: []
            DateCreated: 2015-08-13T21:05:44.376Z
            DateUpdated: 2015-08-13T21:05:44.376Z
            Versions:
              - Sample Application
          - ApplicationName: pythonsample
            ConfigurationTemplates: []
            DateCreated: 2015-08-13T19:05:43.637Z
            DateUpdated: 2015-08-13T19:05:43.637Z
            Description: Application created from the EB CLI using "eb init"
            Versions:
              - Sample Application
          - ApplicationName: nodejs-example
            ConfigurationTemplates: []
            DateCreated: 2015-08-06T17:50:02.486Z
            DateUpdated: 2015-08-06T17:50:02.486Z
            Versions:
              - add elasticache
              - First Release
      properties:
        Applications:
          $ref: "#/components/schemas/ApplicationDescriptionList"
      description: Result message containing a list of application descriptions.
    ConfigurationOptionsDescription:
      type: object
      example:
        Options:
          - ChangeSeverity: NoInterruption
            DefaultValue: "30"
            MaxValue: 300
            MinValue: 5
            Name: Interval
            Namespace: aws:elb:healthcheck
            UserDefined: false
            ValueType: Scalar
          - ChangeSeverity: NoInterruption
            DefaultValue: "2000000"
            MinValue: 0
            Name: LowerThreshold
            Namespace: aws:autoscaling:trigger
            UserDefined: false
            ValueType: Scalar
      properties:
        SolutionStackName:
          $ref: "#/components/schemas/SolutionStackName"
        PlatformArn:
          $ref: "#/components/schemas/PlatformArn"
        Options:
          $ref: "#/components/schemas/ConfigurationOptionDescriptionsList"
      description: Describes the settings for a specified configuration set.
    ConfigurationSettingsDescriptions:
      type: object
      example:
        ConfigurationSettings:
          - ApplicationName: my-app
            DateCreated: 2015-08-13T19:16:25Z
            DateUpdated: 2015-08-13T23:30:07Z
            DeploymentStatus: deployed
            Description: Environment created from the EB CLI using "eb create"
            EnvironmentName: my-env
            OptionSettings:
              - Namespace: aws:autoscaling:asg
                OptionName: Availability Zones
                ResourceName: AWSEBAutoScalingGroup
                Value: Any
              - Namespace: aws:autoscaling:asg
                OptionName: Cooldown
                ResourceName: AWSEBAutoScalingGroup
                Value: "360"
              - Namespace: aws:elb:policies
                OptionName: ConnectionDrainingTimeout
                ResourceName: AWSEBLoadBalancer
                Value: "20"
              - Namespace: aws:elb:policies
                OptionName: ConnectionSettingIdleTimeout
                ResourceName: AWSEBLoadBalancer
                Value: "60"
            SolutionStackName: 64bit Amazon Linux 2015.03 v2.0.0 running Tomcat 8 Java 8
      properties:
        ConfigurationSettings:
          $ref: "#/components/schemas/ConfigurationSettingsDescriptionList"
      description: The results from a request to change the configuration settings of an
        environment.
    DescribeEnvironmentHealthResult:
      type: object
      example:
        ApplicationMetrics:
          Duration: 10
          Latency:
            P10: 0.001
            P50: 0.001
            P75: 0.002
            P85: 0.003
            P90: 0.003
            P95: 0.004
            P99: 0.004
            P999: 0.004
          RequestCount: 45
          StatusCodes:
            Status2xx: 45
            Status3xx: 0
            Status4xx: 0
            Status5xx: 0
        Causes: []
        Color: Green
        EnvironmentName: my-env
        HealthStatus: Ok
        InstancesHealth:
          Degraded: 0
          Info: 0
          NoData: 0
          Ok: 1
          Pending: 0
          Severe: 0
          Unknown: 0
          Warning: 0
        RefreshedAt: 2015-08-20T21:09:18Z
      properties:
        EnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
        HealthStatus:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/EnvironmentHealth"
        Color:
          $ref: "#/components/schemas/String"
        Causes:
          $ref: "#/components/schemas/Causes"
        ApplicationMetrics:
          $ref: "#/components/schemas/ApplicationMetrics"
        InstancesHealth:
          $ref: "#/components/schemas/InstanceHealthSummary"
        RefreshedAt:
          $ref: "#/components/schemas/RefreshedAt"
      description: Health details for an AWS Elastic Beanstalk environment.
    EnvironmentHealthAttribute:
      type: string
      enum:
        - Status
        - Color
        - Causes
        - ApplicationMetrics
        - InstancesHealth
        - All
        - HealthStatus
        - RefreshedAt
    InvalidRequestException: {}
    DescribeEnvironmentManagedActionHistoryResult:
      type: object
      properties:
        ManagedActionHistoryItems:
          $ref: "#/components/schemas/ManagedActionHistoryItems"
        NextToken:
          $ref: "#/components/schemas/String"
      description: A result message containing a list of completed and failed managed
        actions.
    DescribeEnvironmentManagedActionsResult:
      type: object
      properties:
        ManagedActions:
          $ref: "#/components/schemas/ManagedActions"
      description: The result message containing a list of managed actions.
    EnvironmentResourceDescriptionsMessage:
      type: object
      example:
        EnvironmentResources:
          AutoScalingGroups:
            - Name: awseb-e-qu3fyyjyjs-stack-AWSEBAutoScalingGroup-QSB2ZO88SXZT
          EnvironmentName: my-env
          Instances:
            - Id: i-0c91c786
          LaunchConfigurations:
            - Name: awseb-e-qu3fyyjyjs-stack-AWSEBAutoScalingLaunchConfiguration-1UUVQIBC96TQ2
          LoadBalancers:
            - Name: awseb-e-q-AWSEBLoa-1EEPZ0K98BIF0
          Queues: []
          Triggers: []
      properties:
        EnvironmentResources:
          $ref: "#/components/schemas/EnvironmentResourceDescription"
      description: Result message containing a list of environment resource descriptions.
    EnvironmentId:
      type: string
    EnvironmentName:
      type: string
      minLength: 4
      maxLength: 40
    EventDescriptionsMessage:
      type: object
      example:
        Events:
          - ApplicationName: my-app
            EnvironmentName: my-env
            EventDate: 2015-08-20T07:06:53.535Z
            Message: Environment health has transitioned from Info to Ok.
            Severity: INFO
          - ApplicationName: my-app
            EnvironmentName: my-env
            EventDate: 2015-08-20T07:06:02.049Z
            Message: Environment update completed successfully.
            RequestId: b7f3960b-4709-11e5-ba1e-07e16200da41
            Severity: INFO
          - ApplicationName: my-app
            EnvironmentName: my-env
            EventDate: 2015-08-13T19:16:27.561Z
            Message: Using elasticbeanstalk-us-west-2-012445113685 as Amazon S3 storage
              bucket for environment data.
            RequestId: ca8dfbf6-41ef-11e5-988b-651aa638f46b
            Severity: INFO
          - ApplicationName: my-app
            EnvironmentName: my-env
            EventDate: 2015-08-13T19:16:26.581Z
            Message: createEnvironment is starting.
            RequestId: cdfba8f6-41ef-11e5-988b-65638f41aa6b
            Severity: INFO
      properties:
        Events:
          $ref: "#/components/schemas/EventDescriptionList"
        NextToken:
          $ref: "#/components/schemas/Token"
      description: Result message wrapping a list of event descriptions.
    DescribeInstancesHealthResult:
      type: object
      example:
        InstanceHealthList:
          - ApplicationMetrics:
              Duration: 10
              Latency:
                P10: 0
                P50: 0.001
                P75: 0.002
                P85: 0.003
                P90: 0.004
                P95: 0.005
                P99: 0.006
                P999: 0.006
              RequestCount: 48
              StatusCodes:
                Status2xx: 47
                Status3xx: 0
                Status4xx: 1
                Status5xx: 0
            Causes: []
            Color: Green
            HealthStatus: Ok
            InstanceId: i-08691cc7
            LaunchedAt: 2015-08-13T19:17:09Z
            System:
              CPUUtilization:
                IOWait: 0.2
                IRQ: 0
                Idle: 97.8
                Nice: 0.1
                SoftIRQ: 0.1
                System: 0.3
                User: 1.5
              LoadAverage:
                - 0
                - 0.02
                - 0.05
        RefreshedAt: 2015-08-20T21:09:08Z
      properties:
        InstanceHealthList:
          $ref: "#/components/schemas/InstanceHealthList"
        RefreshedAt:
          $ref: "#/components/schemas/RefreshedAt"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Detailed health information about the Amazon EC2 instances in an AWS
        Elastic Beanstalk environment.
    InstancesHealthAttribute:
      type: string
      enum:
        - HealthStatus
        - Color
        - Causes
        - ApplicationMetrics
        - RefreshedAt
        - LaunchedAt
        - System
        - Deployment
        - AvailabilityZone
        - InstanceType
        - All
    DescribePlatformVersionResult:
      type: object
      properties:
        PlatformDescription:
          $ref: "#/components/schemas/PlatformDescription"
    ListAvailableSolutionStacksResultMessage:
      type: object
      example:
        SolutionStackDetails:
          - PermittedFileTypes:
              - zip
            SolutionStackName: 64bit Amazon Linux 2015.03 v2.0.0 running Node.js
        SolutionStacks:
          - 64bit Amazon Linux 2015.03 v2.0.0 running Node.js
          - 64bit Amazon Linux 2015.03 v2.0.0 running PHP 5.6
          - 64bit Amazon Linux 2015.03 v2.0.0 running PHP 5.5
          - 64bit Amazon Linux 2015.03 v2.0.0 running PHP 5.4
          - 64bit Amazon Linux 2015.03 v2.0.0 running Python 3.4
          - 64bit Amazon Linux 2015.03 v2.0.0 running Python 2.7
          - 64bit Amazon Linux 2015.03 v2.0.0 running Python
          - 64bit Amazon Linux 2015.03 v2.0.0 running Ruby 2.2 (Puma)
          - 64bit Amazon Linux 2015.03 v2.0.0 running Ruby 2.2 (Passenger
            Standalone)
          - 64bit Amazon Linux 2015.03 v2.0.0 running Ruby 2.1 (Puma)
          - 64bit Amazon Linux 2015.03 v2.0.0 running Ruby 2.1 (Passenger
            Standalone)
          - 64bit Amazon Linux 2015.03 v2.0.0 running Ruby 2.0 (Puma)
          - 64bit Amazon Linux 2015.03 v2.0.0 running Ruby 2.0 (Passenger
            Standalone)
          - 64bit Amazon Linux 2015.03 v2.0.0 running Ruby 1.9.3
          - 64bit Amazon Linux 2015.03 v2.0.0 running Tomcat 8 Java 8
          - 64bit Amazon Linux 2015.03 v2.0.0 running Tomcat 7 Java 7
          - 64bit Amazon Linux 2015.03 v2.0.0 running Tomcat 7 Java 6
          - 64bit Windows Server Core 2012 R2 running IIS 8.5
          - 64bit Windows Server 2012 R2 running IIS 8.5
          - 64bit Windows Server 2012 running IIS 8
          - 64bit Windows Server 2008 R2 running IIS 7.5
          - 64bit Amazon Linux 2015.03 v2.0.0 running Docker 1.6.2
          - 64bit Amazon Linux 2015.03 v2.0.0 running Multi-container Docker
            1.6.2 (Generic)
          - 64bit Debian jessie v2.0.0 running GlassFish 4.1 Java 8
            (Preconfigured - Docker)
          - 64bit Debian jessie v2.0.0 running GlassFish 4.0 Java 7
            (Preconfigured - Docker)
          - 64bit Debian jessie v2.0.0 running Go 1.4 (Preconfigured - Docker)
          - 64bit Debian jessie v2.0.0 running Go 1.3 (Preconfigured - Docker)
          - 64bit Debian jessie v2.0.0 running Python 3.4 (Preconfigured -
            Docker)
      properties:
        SolutionStacks:
          $ref: "#/components/schemas/AvailableSolutionStackNamesList"
        SolutionStackDetails:
          $ref: "#/components/schemas/AvailableSolutionStackDetailsList"
      description: A list of available AWS Elastic Beanstalk solution stacks.
    ListPlatformVersionsResult:
      type: object
      properties:
        PlatformSummaryList:
          $ref: "#/components/schemas/PlatformSummaryList"
        NextToken:
          $ref: "#/components/schemas/Token"
    PlatformFilter:
      type: object
      properties:
        Type:
          $ref: "#/components/schemas/PlatformFilterType"
        Operator:
          $ref: "#/components/schemas/PlatformFilterOperator"
        Values:
          $ref: "#/components/schemas/PlatformFilterValueList"
      description: <p>Specify criteria to restrict the results when listing custom
        platforms.</p> <p>The filter is evaluated as the expression:</p> <p>
        <code>Type</code> <code>Operator</code> <code>Values[i]</code> </p>
    ResourceTagsDescriptionMessage:
      type: object
      properties:
        ResourceArn:
          $ref: "#/components/schemas/ResourceArn"
        ResourceTags:
          $ref: "#/components/schemas/TagList"
    ResourceNotFoundException: {}
    ResourceTypeNotSupportedException: {}
    RetrieveEnvironmentInfoResultMessage:
      type: object
      example:
        EnvironmentInfo:
          - Ec2InstanceId: i-09c1c867
            InfoType: tail
            Message: https://elasticbeanstalk-us-west-2-0123456789012.s3.amazonaws.com/resources/environments/logs/tail/e-fyqyju3yjs/i-09c1c867/TailLogs-1440109397703.out?AWSAccessKeyId=AKGPT4J56IAJ2EUBL5CQ&Expires=1440195891&Signature=n%2BEalOV6A2HIOx4Rcfb7LT16bBM%3D
            SampleTimestamp: 2015-08-20T22:23:17.703Z
      properties:
        EnvironmentInfo:
          $ref: "#/components/schemas/EnvironmentInfoDescriptionList"
      description: Result message containing a description of the requested environment
        info.
    ApplicationResourceLifecycleDescriptionMessage:
      type: object
      properties:
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        ResourceLifecycleConfig:
          $ref: "#/components/schemas/ApplicationResourceLifecycleConfig"
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TooManyTagsException: {}
    ConfigurationSettingsValidationMessages:
      type: object
      example:
        Messages: []
      properties:
        Messages:
          $ref: "#/components/schemas/ValidationMessagesList"
      description: Provides a list of validation messages.
    ARN:
      type: string
    AbortEnvironmentUpdateMessage:
      type: object
      properties:
        EnvironmentId:
          $ref: "#/components/schemas/EnvironmentId"
        EnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
      description: <p/>
    AbortableOperationInProgress:
      type: boolean
    ActionHistoryStatus:
      type: string
      enum:
        - Completed
        - Failed
        - Unknown
    ActionStatus:
      type: string
      enum:
        - Scheduled
        - Pending
        - Running
        - Unknown
    ActionType:
      type: string
      enum:
        - InstanceRefresh
        - PlatformUpdate
        - Unknown
    ApplicationArn:
      type: string
    Description:
      type: string
      maxLength: 200
    CreationDate:
      type: string
      format: date-time
    UpdateDate:
      type: string
      format: date-time
    VersionLabelsList:
      type: array
      items:
        $ref: "#/components/schemas/VersionLabel"
    ConfigurationTemplateNamesList:
      type: array
      items:
        $ref: "#/components/schemas/ConfigurationTemplateName"
    ApplicationResourceLifecycleConfig:
      type: object
      properties:
        ServiceRole:
          $ref: "#/components/schemas/String"
        VersionLifecycleConfig:
          $ref: "#/components/schemas/ApplicationVersionLifecycleConfig"
      description: The resource lifecycle configuration for an application. Defines
        lifecycle settings for resources that belong to the application, and the
        service role that Elastic Beanstalk assumes in order to apply lifecycle
        settings. The version lifecycle configuration defines lifecycle settings
        for application versions.
    ApplicationDescription:
      type: object
      properties:
        ApplicationArn:
          $ref: "#/components/schemas/ApplicationArn"
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        Description:
          $ref: "#/components/schemas/Description"
        DateCreated:
          $ref: "#/components/schemas/CreationDate"
        DateUpdated:
          $ref: "#/components/schemas/UpdateDate"
        Versions:
          $ref: "#/components/schemas/VersionLabelsList"
        ConfigurationTemplates:
          $ref: "#/components/schemas/ConfigurationTemplateNamesList"
        ResourceLifecycleConfig:
          $ref: "#/components/schemas/ApplicationResourceLifecycleConfig"
      description: Describes the properties of an application.
    ApplicationDescriptionList:
      type: array
      items:
        $ref: "#/components/schemas/ApplicationDescription"
    NullableInteger:
      type: integer
    RequestCount:
      type: integer
    StatusCodes:
      type: object
      properties:
        Status2xx:
          $ref: "#/components/schemas/NullableInteger"
        Status3xx:
          $ref: "#/components/schemas/NullableInteger"
        Status4xx:
          $ref: "#/components/schemas/NullableInteger"
        Status5xx:
          $ref: "#/components/schemas/NullableInteger"
      description: Represents the percentage of requests over the last 10 seconds that
        resulted in each type of status code response. For more information, see
        <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html">Status
        Code Definitions</a>.
    Latency:
      type: object
      properties:
        P999:
          $ref: "#/components/schemas/NullableDouble"
        P99:
          $ref: "#/components/schemas/NullableDouble"
        P95:
          $ref: "#/components/schemas/NullableDouble"
        P90:
          $ref: "#/components/schemas/NullableDouble"
        P85:
          $ref: "#/components/schemas/NullableDouble"
        P75:
          $ref: "#/components/schemas/NullableDouble"
        P50:
          $ref: "#/components/schemas/NullableDouble"
        P10:
          $ref: "#/components/schemas/NullableDouble"
      description: Represents the average latency for the slowest X percent of requests
        over the last 10 seconds.
    ApplicationMetrics:
      type: object
      properties:
        Duration:
          $ref: "#/components/schemas/NullableInteger"
        RequestCount:
          $ref: "#/components/schemas/RequestCount"
        StatusCodes:
          $ref: "#/components/schemas/StatusCodes"
        Latency:
          $ref: "#/components/schemas/Latency"
      description: Application request metrics for an AWS Elastic Beanstalk environment.
    ApplicationNamesList:
      type: array
      items:
        $ref: "#/components/schemas/ApplicationName"
    ApplicationVersionArn:
      type: string
    SourceBuildInformation:
      type: object
      required:
        - SourceType
        - SourceRepository
        - SourceLocation
      properties:
        SourceType:
          $ref: "#/components/schemas/SourceType"
        SourceRepository:
          $ref: "#/components/schemas/SourceRepository"
        SourceLocation:
          $ref: "#/components/schemas/SourceLocation"
      description: Location of the source code for an application version.
    S3Location:
      type: object
      properties:
        S3Bucket:
          $ref: "#/components/schemas/S3Bucket"
        S3Key:
          $ref: "#/components/schemas/S3Key"
      description: The bucket and key of an item stored in Amazon S3.
    ApplicationVersionStatus:
      type: string
      enum:
        - Processed
        - Unprocessed
        - Failed
        - Processing
        - Building
    ApplicationVersionDescription:
      type: object
      properties:
        ApplicationVersionArn:
          $ref: "#/components/schemas/ApplicationVersionArn"
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        Description:
          $ref: "#/components/schemas/Description"
        VersionLabel:
          $ref: "#/components/schemas/VersionLabel"
        SourceBuildInformation:
          $ref: "#/components/schemas/SourceBuildInformation"
        BuildArn:
          $ref: "#/components/schemas/String"
        SourceBundle:
          $ref: "#/components/schemas/S3Location"
        DateCreated:
          $ref: "#/components/schemas/CreationDate"
        DateUpdated:
          $ref: "#/components/schemas/UpdateDate"
        Status:
          $ref: "#/components/schemas/ApplicationVersionStatus"
      description: Describes the properties of an application version.
    ApplicationVersionDescriptionList:
      type: array
      items:
        $ref: "#/components/schemas/ApplicationVersionDescription"
    Token:
      type: string
    ApplicationVersionProccess:
      type: boolean
    ApplyEnvironmentManagedActionRequest:
      type: object
      required:
        - ActionId
      properties:
        EnvironmentName:
          $ref: "#/components/schemas/String"
        EnvironmentId:
          $ref: "#/components/schemas/String"
        ActionId:
          $ref: "#/components/schemas/String"
      description: Request to execute a scheduled managed action immediately.
    AutoCreateApplication:
      type: boolean
    ResourceId:
      type: string
    AutoScalingGroup:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/ResourceId"
      description: Describes an Auto Scaling launch configuration.
    AutoScalingGroupList:
      type: array
      items:
        $ref: "#/components/schemas/AutoScalingGroup"
    SolutionStackDescription:
      type: object
      properties:
        SolutionStackName:
          $ref: "#/components/schemas/SolutionStackName"
        PermittedFileTypes:
          $ref: "#/components/schemas/SolutionStackFileTypeList"
      description: Describes the solution stack.
    AvailableSolutionStackDetailsList:
      type: array
      items:
        $ref: "#/components/schemas/SolutionStackDescription"
    SolutionStackName:
      type: string
    AvailableSolutionStackNamesList:
      type: array
      items:
        $ref: "#/components/schemas/SolutionStackName"
    BoxedBoolean:
      type: boolean
    BuildConfiguration:
      type: object
      required:
        - CodeBuildServiceRole
        - Image
      properties:
        ArtifactName:
          $ref: "#/components/schemas/String"
        CodeBuildServiceRole:
          $ref: "#/components/schemas/NonEmptyString"
        ComputeType:
          $ref: "#/components/schemas/ComputeType"
        Image:
          $ref: "#/components/schemas/NonEmptyString"
        TimeoutInMinutes:
          $ref: "#/components/schemas/BoxedInt"
      description: Settings for an AWS CodeBuild build.
    Builder:
      type: object
      properties:
        ARN:
          $ref: "#/components/schemas/ARN"
      description: The builder used to build the custom platform.
    NullableDouble:
      type: number
      format: double
    CPUUtilization:
      type: object
      properties:
        User:
          $ref: "#/components/schemas/NullableDouble"
        Nice:
          $ref: "#/components/schemas/NullableDouble"
        System:
          $ref: "#/components/schemas/NullableDouble"
        Idle:
          $ref: "#/components/schemas/NullableDouble"
        IOWait:
          $ref: "#/components/schemas/NullableDouble"
        IRQ:
          $ref: "#/components/schemas/NullableDouble"
        SoftIRQ:
          $ref: "#/components/schemas/NullableDouble"
        Privileged:
          $ref: "#/components/schemas/NullableDouble"
      description: CPU utilization metrics for an instance.
    Cause:
      type: string
      minLength: 1
      maxLength: 255
    Causes:
      type: array
      items:
        $ref: "#/components/schemas/Cause"
    DNSCnamePrefix:
      type: string
      minLength: 4
      maxLength: 63
    CheckDNSAvailabilityMessage:
      type: object
      required:
        - CNAMEPrefix
      properties:
        CNAMEPrefix:
          $ref: "#/components/schemas/DNSCnamePrefix"
      description: Results message indicating whether a CNAME is available.
    CnameAvailability:
      type: boolean
    DNSCname:
      type: string
      minLength: 1
      maxLength: 255
    GroupName:
      type: string
      minLength: 1
      maxLength: 19
    VersionLabels:
      type: array
      items:
        $ref: "#/components/schemas/VersionLabel"
    ComposeEnvironmentsMessage:
      type: object
      properties:
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        GroupName:
          $ref: "#/components/schemas/GroupName"
        VersionLabels:
          $ref: "#/components/schemas/VersionLabels"
      description: Request to create or update a group of environments.
    ConfigurationDeploymentStatus:
      type: string
      enum:
        - deployed
        - pending
        - failed
    ConfigurationOptionDefaultValue:
      type: string
    OptionNamespace:
      type: string
    ConfigurationOptionName:
      type: string
    ConfigurationOptionSeverity:
      type: string
    UserDefinedOption:
      type: boolean
    ConfigurationOptionValueType:
      type: string
      enum:
        - Scalar
        - List
    ConfigurationOptionPossibleValues:
      type: array
      items:
        $ref: "#/components/schemas/ConfigurationOptionPossibleValue"
    OptionRestrictionMinValue:
      type: integer
    OptionRestrictionMaxValue:
      type: integer
    OptionRestrictionMaxLength:
      type: integer
    OptionRestrictionRegex:
      type: object
      properties:
        Pattern:
          $ref: "#/components/schemas/RegexPattern"
        Label:
          $ref: "#/components/schemas/RegexLabel"
      description: A regular expression representing a restriction on a string
        configuration option value.
    ConfigurationOptionDescription:
      type: object
      properties:
        Namespace:
          $ref: "#/components/schemas/OptionNamespace"
        Name:
          $ref: "#/components/schemas/ConfigurationOptionName"
        DefaultValue:
          $ref: "#/components/schemas/ConfigurationOptionDefaultValue"
        ChangeSeverity:
          $ref: "#/components/schemas/ConfigurationOptionSeverity"
        UserDefined:
          $ref: "#/components/schemas/UserDefinedOption"
        ValueType:
          $ref: "#/components/schemas/ConfigurationOptionValueType"
        ValueOptions:
          $ref: "#/components/schemas/ConfigurationOptionPossibleValues"
        MinValue:
          $ref: "#/components/schemas/OptionRestrictionMinValue"
        MaxValue:
          $ref: "#/components/schemas/OptionRestrictionMaxValue"
        MaxLength:
          $ref: "#/components/schemas/OptionRestrictionMaxLength"
        Regex:
          $ref: "#/components/schemas/OptionRestrictionRegex"
      description: Describes the possible values for a configuration option.
    ConfigurationOptionDescriptionsList:
      type: array
      items:
        $ref: "#/components/schemas/ConfigurationOptionDescription"
    ConfigurationOptionPossibleValue:
      type: string
    ResourceName:
      type: string
      minLength: 1
      maxLength: 256
    ConfigurationOptionValue:
      type: string
    ConfigurationOptionSettingsList:
      type: array
      items:
        $ref: "#/components/schemas/ConfigurationOptionSetting"
    PlatformArn:
      type: string
    ConfigurationSettingsDescriptionList:
      type: array
      items:
        $ref: "#/components/schemas/ConfigurationSettingsDescription"
    ValidationMessagesList:
      type: array
      items:
        $ref: "#/components/schemas/ValidationMessage"
    Tags:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    CreateApplicationMessage:
      type: object
      required:
        - ApplicationName
      properties:
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        Description:
          $ref: "#/components/schemas/Description"
        ResourceLifecycleConfig:
          $ref: "#/components/schemas/ApplicationResourceLifecycleConfig"
        Tags:
          $ref: "#/components/schemas/Tags"
      description: Request to create an application.
    CreateApplicationVersionMessage:
      type: object
      required:
        - ApplicationName
        - VersionLabel
      properties:
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        VersionLabel:
          $ref: "#/components/schemas/VersionLabel"
        Description:
          $ref: "#/components/schemas/Description"
        SourceBuildInformation:
          $ref: "#/components/schemas/SourceBuildInformation"
        SourceBundle:
          $ref: "#/components/schemas/S3Location"
        BuildConfiguration:
          $ref: "#/components/schemas/BuildConfiguration"
        AutoCreateApplication:
          $ref: "#/components/schemas/AutoCreateApplication"
        Process:
          $ref: "#/components/schemas/ApplicationVersionProccess"
        Tags:
          $ref: "#/components/schemas/Tags"
      description: <p/>
    SourceConfiguration:
      type: object
      properties:
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        TemplateName:
          $ref: "#/components/schemas/ConfigurationTemplateName"
      description: A specification for an environment configuration
    CreateConfigurationTemplateMessage:
      type: object
      required:
        - ApplicationName
        - TemplateName
      properties:
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        TemplateName:
          $ref: "#/components/schemas/ConfigurationTemplateName"
        SolutionStackName:
          $ref: "#/components/schemas/SolutionStackName"
        PlatformArn:
          $ref: "#/components/schemas/PlatformArn"
        SourceConfiguration:
          $ref: "#/components/schemas/SourceConfiguration"
        EnvironmentId:
          $ref: "#/components/schemas/EnvironmentId"
        Description:
          $ref: "#/components/schemas/Description"
        OptionSettings:
          $ref: "#/components/schemas/ConfigurationOptionSettingsList"
        Tags:
          $ref: "#/components/schemas/Tags"
      description: Request to create a configuration template.
    EnvironmentTier:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/String"
        Type:
          $ref: "#/components/schemas/String"
        Version:
          $ref: "#/components/schemas/String"
      description: Describes the properties of an environment tier
    OptionsSpecifierList:
      type: array
      items:
        $ref: "#/components/schemas/OptionSpecification"
    CreateEnvironmentMessage:
      type: object
      required:
        - ApplicationName
      properties:
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        EnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
        GroupName:
          $ref: "#/components/schemas/GroupName"
        Description:
          $ref: "#/components/schemas/Description"
        CNAMEPrefix:
          $ref: "#/components/schemas/DNSCnamePrefix"
        Tier:
          $ref: "#/components/schemas/EnvironmentTier"
        Tags:
          $ref: "#/components/schemas/Tags"
        VersionLabel:
          $ref: "#/components/schemas/VersionLabel"
        TemplateName:
          $ref: "#/components/schemas/ConfigurationTemplateName"
        SolutionStackName:
          $ref: "#/components/schemas/SolutionStackName"
        PlatformArn:
          $ref: "#/components/schemas/PlatformArn"
        OptionSettings:
          $ref: "#/components/schemas/ConfigurationOptionSettingsList"
        OptionsToRemove:
          $ref: "#/components/schemas/OptionsSpecifierList"
      description: <p/>
    PlatformName:
      type: string
    PlatformVersion:
      type: string
    CreatePlatformVersionRequest:
      type: object
      required:
        - PlatformName
        - PlatformVersion
        - PlatformDefinitionBundle
      properties:
        PlatformName:
          $ref: "#/components/schemas/PlatformName"
        PlatformVersion:
          $ref: "#/components/schemas/PlatformVersion"
        PlatformDefinitionBundle:
          $ref: "#/components/schemas/S3Location"
        EnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
        OptionSettings:
          $ref: "#/components/schemas/ConfigurationOptionSettingsList"
        Tags:
          $ref: "#/components/schemas/Tags"
      description: Request to create a new platform version.
    PlatformSummary:
      type: object
      properties:
        PlatformArn:
          $ref: "#/components/schemas/PlatformArn"
        PlatformOwner:
          $ref: "#/components/schemas/PlatformOwner"
        PlatformStatus:
          $ref: "#/components/schemas/PlatformStatus"
        PlatformCategory:
          $ref: "#/components/schemas/PlatformCategory"
        OperatingSystemName:
          $ref: "#/components/schemas/OperatingSystemName"
        OperatingSystemVersion:
          $ref: "#/components/schemas/OperatingSystemVersion"
        SupportedTierList:
          $ref: "#/components/schemas/SupportedTierList"
        SupportedAddonList:
          $ref: "#/components/schemas/SupportedAddonList"
      description: Detailed information about a platform.
    VirtualizationType:
      type: string
    ImageId:
      type: string
    CustomAmi:
      type: object
      properties:
        VirtualizationType:
          $ref: "#/components/schemas/VirtualizationType"
        ImageId:
          $ref: "#/components/schemas/ImageId"
      description: A custom AMI available to platforms.
    CustomAmiList:
      type: array
      items:
        $ref: "#/components/schemas/CustomAmi"
    TerminateEnvForce:
      type: boolean
    DeleteApplicationMessage:
      type: object
      required:
        - ApplicationName
      properties:
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        TerminateEnvByForce:
          $ref: "#/components/schemas/TerminateEnvForce"
      description: Request to delete an application.
    DeleteSourceBundle:
      type: boolean
    DeleteApplicationVersionMessage:
      type: object
      required:
        - ApplicationName
        - VersionLabel
      properties:
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        VersionLabel:
          $ref: "#/components/schemas/VersionLabel"
        DeleteSourceBundle:
          $ref: "#/components/schemas/DeleteSourceBundle"
      description: Request to delete an application version.
    DeleteConfigurationTemplateMessage:
      type: object
      required:
        - ApplicationName
        - TemplateName
      properties:
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        TemplateName:
          $ref: "#/components/schemas/ConfigurationTemplateName"
      description: Request to delete a configuration template.
    DeleteEnvironmentConfigurationMessage:
      type: object
      required:
        - ApplicationName
        - EnvironmentName
      properties:
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        EnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
      description: Request to delete a draft environment configuration.
    DeletePlatformVersionRequest:
      type: object
      properties:
        PlatformArn:
          $ref: "#/components/schemas/PlatformArn"
    NullableLong:
      type: integer
    DeploymentTimestamp:
      type: string
      format: date-time
    Deployment:
      type: object
      properties:
        VersionLabel:
          $ref: "#/components/schemas/String"
        DeploymentId:
          $ref: "#/components/schemas/NullableLong"
        Status:
          $ref: "#/components/schemas/String"
        DeploymentTime:
          $ref: "#/components/schemas/DeploymentTimestamp"
      description: Information about an application version deployment.
    ResourceQuotas:
      type: object
      properties:
        ApplicationQuota:
          $ref: "#/components/schemas/ResourceQuota"
        ApplicationVersionQuota:
          $ref: "#/components/schemas/ResourceQuota"
        EnvironmentQuota:
          $ref: "#/components/schemas/ResourceQuota"
        ConfigurationTemplateQuota:
          $ref: "#/components/schemas/ResourceQuota"
        CustomPlatformQuota:
          $ref: "#/components/schemas/ResourceQuota"
      description: A set of per-resource AWS Elastic Beanstalk quotas associated with an
        AWS account. They reflect Elastic Beanstalk resource limits for this
        account.
    MaxRecords:
      type: integer
      minimum: 1
      maximum: 1000
    DescribeApplicationVersionsMessage:
      type: object
      properties:
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        VersionLabels:
          $ref: "#/components/schemas/VersionLabelsList"
        MaxRecords:
          $ref: "#/components/schemas/MaxRecords"
        NextToken:
          $ref: "#/components/schemas/Token"
      description: Request to describe application versions.
    DescribeApplicationsMessage:
      type: object
      properties:
        ApplicationNames:
          $ref: "#/components/schemas/ApplicationNamesList"
      description: Request to describe one or more applications.
    DescribeConfigurationOptionsMessage:
      type: object
      properties:
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        TemplateName:
          $ref: "#/components/schemas/ConfigurationTemplateName"
        EnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
        SolutionStackName:
          $ref: "#/components/schemas/SolutionStackName"
        PlatformArn:
          $ref: "#/components/schemas/PlatformArn"
        Options:
          $ref: "#/components/schemas/OptionsSpecifierList"
      description: Result message containing a list of application version descriptions.
    DescribeConfigurationSettingsMessage:
      type: object
      required:
        - ApplicationName
      properties:
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        TemplateName:
          $ref: "#/components/schemas/ConfigurationTemplateName"
        EnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
      description: Result message containing all of the configuration settings for a
        specified solution stack or configuration template.
    EnvironmentHealthAttributes:
      type: array
      items:
        $ref: "#/components/schemas/EnvironmentHealthAttribute"
    DescribeEnvironmentHealthRequest:
      type: object
      properties:
        EnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
        EnvironmentId:
          $ref: "#/components/schemas/EnvironmentId"
        AttributeNames:
          $ref: "#/components/schemas/EnvironmentHealthAttributes"
      description: See the example below to learn how to create a request body.
    EnvironmentHealth:
      type: string
      enum:
        - Green
        - Yellow
        - Red
        - Grey
    InstanceHealthSummary:
      type: object
      properties:
        NoData:
          $ref: "#/components/schemas/NullableInteger"
        Unknown:
          $ref: "#/components/schemas/NullableInteger"
        Pending:
          $ref: "#/components/schemas/NullableInteger"
        Ok:
          $ref: "#/components/schemas/NullableInteger"
        Info:
          $ref: "#/components/schemas/NullableInteger"
        Warning:
          $ref: "#/components/schemas/NullableInteger"
        Degraded:
          $ref: "#/components/schemas/NullableInteger"
        Severe:
          $ref: "#/components/schemas/NullableInteger"
      description: Represents summary information about the health of an instance. For more
        information, see <a
        href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced-status.html">Health
        Colors and Statuses</a>.
    RefreshedAt:
      type: string
      format: date-time
    Integer:
      type: integer
    DescribeEnvironmentManagedActionHistoryRequest:
      type: object
      properties:
        EnvironmentId:
          $ref: "#/components/schemas/EnvironmentId"
        EnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
        NextToken:
          $ref: "#/components/schemas/String"
        MaxItems:
          $ref: "#/components/schemas/Integer"
      description: Request to list completed and failed managed actions.
    ManagedActionHistoryItems:
      type: array
      items:
        $ref: "#/components/schemas/ManagedActionHistoryItem"
      minItems: 1
      maxItems: 100
    DescribeEnvironmentManagedActionsRequest:
      type: object
      properties:
        EnvironmentName:
          $ref: "#/components/schemas/String"
        EnvironmentId:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/ActionStatus"
      description: Request to list an environment's upcoming and in-progress managed
        actions.
    ManagedActions:
      type: array
      items:
        $ref: "#/components/schemas/ManagedAction"
      minItems: 1
      maxItems: 100
    DescribeEnvironmentResourcesMessage:
      type: object
      properties:
        EnvironmentId:
          $ref: "#/components/schemas/EnvironmentId"
        EnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
      description: Request to describe the resources in an environment.
    EnvironmentIdList:
      type: array
      items:
        $ref: "#/components/schemas/EnvironmentId"
    EnvironmentNamesList:
      type: array
      items:
        $ref: "#/components/schemas/EnvironmentName"
    IncludeDeleted:
      type: boolean
    IncludeDeletedBackTo:
      type: string
      format: date-time
    DescribeEnvironmentsMessage:
      type: object
      properties:
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        VersionLabel:
          $ref: "#/components/schemas/VersionLabel"
        EnvironmentIds:
          $ref: "#/components/schemas/EnvironmentIdList"
        EnvironmentNames:
          $ref: "#/components/schemas/EnvironmentNamesList"
        IncludeDeleted:
          $ref: "#/components/schemas/IncludeDeleted"
        IncludedDeletedBackTo:
          $ref: "#/components/schemas/IncludeDeletedBackTo"
        MaxRecords:
          $ref: "#/components/schemas/MaxRecords"
        NextToken:
          $ref: "#/components/schemas/Token"
      description: Request to describe one or more environments.
    RequestId:
      type: string
    EventSeverity:
      type: string
      enum:
        - TRACE
        - DEBUG
        - INFO
        - WARN
        - ERROR
        - FATAL
    TimeFilterStart:
      type: string
      format: date-time
    TimeFilterEnd:
      type: string
      format: date-time
    DescribeEventsMessage:
      type: object
      properties:
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        VersionLabel:
          $ref: "#/components/schemas/VersionLabel"
        TemplateName:
          $ref: "#/components/schemas/ConfigurationTemplateName"
        EnvironmentId:
          $ref: "#/components/schemas/EnvironmentId"
        EnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
        PlatformArn:
          $ref: "#/components/schemas/PlatformArn"
        RequestId:
          $ref: "#/components/schemas/RequestId"
        Severity:
          $ref: "#/components/schemas/EventSeverity"
        StartTime:
          $ref: "#/components/schemas/TimeFilterStart"
        EndTime:
          $ref: "#/components/schemas/TimeFilterEnd"
        MaxRecords:
          $ref: "#/components/schemas/MaxRecords"
        NextToken:
          $ref: "#/components/schemas/Token"
      description: Request to retrieve a list of events for an environment.
    InstancesHealthAttributes:
      type: array
      items:
        $ref: "#/components/schemas/InstancesHealthAttribute"
    NextToken:
      type: string
      minLength: 1
      maxLength: 100
    DescribeInstancesHealthRequest:
      type: object
      properties:
        EnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
        EnvironmentId:
          $ref: "#/components/schemas/EnvironmentId"
        AttributeNames:
          $ref: "#/components/schemas/InstancesHealthAttributes"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Parameters for a call to <code>DescribeInstancesHealth</code>.
    InstanceHealthList:
      type: array
      items:
        $ref: "#/components/schemas/SingleInstanceHealth"
    DescribePlatformVersionRequest:
      type: object
      properties:
        PlatformArn:
          $ref: "#/components/schemas/PlatformArn"
    PlatformDescription:
      type: object
      properties:
        PlatformArn:
          $ref: "#/components/schemas/PlatformArn"
        PlatformOwner:
          $ref: "#/components/schemas/PlatformOwner"
        PlatformName:
          $ref: "#/components/schemas/PlatformName"
        PlatformVersion:
          $ref: "#/components/schemas/PlatformVersion"
        SolutionStackName:
          $ref: "#/components/schemas/SolutionStackName"
        PlatformStatus:
          $ref: "#/components/schemas/PlatformStatus"
        DateCreated:
          $ref: "#/components/schemas/CreationDate"
        DateUpdated:
          $ref: "#/components/schemas/UpdateDate"
        PlatformCategory:
          $ref: "#/components/schemas/PlatformCategory"
        Description:
          $ref: "#/components/schemas/Description"
        Maintainer:
          $ref: "#/components/schemas/Maintainer"
        OperatingSystemName:
          $ref: "#/components/schemas/OperatingSystemName"
        OperatingSystemVersion:
          $ref: "#/components/schemas/OperatingSystemVersion"
        ProgrammingLanguages:
          $ref: "#/components/schemas/PlatformProgrammingLanguages"
        Frameworks:
          $ref: "#/components/schemas/PlatformFrameworks"
        CustomAmiList:
          $ref: "#/components/schemas/CustomAmiList"
        SupportedTierList:
          $ref: "#/components/schemas/SupportedTierList"
        SupportedAddonList:
          $ref: "#/components/schemas/SupportedAddonList"
      description: Detailed information about a platform.
    Ec2InstanceId:
      type: string
    EndpointURL:
      type: string
    EnvironmentArn:
      type: string
    EnvironmentStatus:
      type: string
      enum:
        - Launching
        - Updating
        - Ready
        - Terminating
        - Terminated
    EnvironmentHealthStatus:
      type: string
      enum:
        - NoData
        - Unknown
        - Pending
        - Ok
        - Info
        - Warning
        - Degraded
        - Severe
        - Suspended
    EnvironmentResourcesDescription:
      type: object
      properties:
        LoadBalancer:
          $ref: "#/components/schemas/LoadBalancerDescription"
      description: Describes the AWS resources in use by this environment. This data is not
        live data.
    EnvironmentLinks:
      type: array
      items:
        $ref: "#/components/schemas/EnvironmentLink"
    EnvironmentDescriptionsList:
      type: array
      items:
        $ref: "#/components/schemas/EnvironmentDescription"
    EnvironmentInfoType:
      type: string
      enum:
        - tail
        - bundle
    SampleTimestamp:
      type: string
      format: date-time
    Message:
      type: string
    EnvironmentInfoDescription:
      type: object
      properties:
        InfoType:
          $ref: "#/components/schemas/EnvironmentInfoType"
        Ec2InstanceId:
          $ref: "#/components/schemas/Ec2InstanceId"
        SampleTimestamp:
          $ref: "#/components/schemas/SampleTimestamp"
        Message:
          $ref: "#/components/schemas/Message"
      description: The information retrieved from the Amazon EC2 instances.
    EnvironmentInfoDescriptionList:
      type: array
      items:
        $ref: "#/components/schemas/EnvironmentInfoDescription"
    EnvironmentLink:
      type: object
      properties:
        LinkName:
          $ref: "#/components/schemas/String"
        EnvironmentName:
          $ref: "#/components/schemas/String"
      description: A link to another environment, defined in the environment's manifest.
        Links provide connection information in system properties that can be
        used to connect to another environment in the same group. See <a
        href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/environment-cfg-manifest.html">Environment
        Manifest (env.yaml)</a> for details.
    InstanceList:
      type: array
      items:
        $ref: "#/components/schemas/Instance"
    LaunchConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/LaunchConfiguration"
    LaunchTemplateList:
      type: array
      items:
        $ref: "#/components/schemas/LaunchTemplate"
    LoadBalancerList:
      type: array
      items:
        $ref: "#/components/schemas/LoadBalancer"
    TriggerList:
      type: array
      items:
        $ref: "#/components/schemas/Trigger"
    QueueList:
      type: array
      items:
        $ref: "#/components/schemas/Queue"
    EnvironmentResourceDescription:
      type: object
      properties:
        EnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
        AutoScalingGroups:
          $ref: "#/components/schemas/AutoScalingGroupList"
        Instances:
          $ref: "#/components/schemas/InstanceList"
        LaunchConfigurations:
          $ref: "#/components/schemas/LaunchConfigurationList"
        LaunchTemplates:
          $ref: "#/components/schemas/LaunchTemplateList"
        LoadBalancers:
          $ref: "#/components/schemas/LoadBalancerList"
        Triggers:
          $ref: "#/components/schemas/TriggerList"
        Queues:
          $ref: "#/components/schemas/QueueList"
      description: Describes the AWS resources in use by this environment. This data is
        live.
    LoadBalancerDescription:
      type: object
      properties:
        LoadBalancerName:
          $ref: "#/components/schemas/String"
        Domain:
          $ref: "#/components/schemas/String"
        Listeners:
          $ref: "#/components/schemas/LoadBalancerListenersDescription"
      description: Describes the details of a LoadBalancer.
    EventDate:
      type: string
      format: date-time
    EventMessage:
      type: string
    EventDescription:
      type: object
      properties:
        EventDate:
          $ref: "#/components/schemas/EventDate"
        Message:
          $ref: "#/components/schemas/EventMessage"
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        VersionLabel:
          $ref: "#/components/schemas/VersionLabel"
        TemplateName:
          $ref: "#/components/schemas/ConfigurationTemplateName"
        EnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
        PlatformArn:
          $ref: "#/components/schemas/PlatformArn"
        RequestId:
          $ref: "#/components/schemas/RequestId"
        Severity:
          $ref: "#/components/schemas/EventSeverity"
      description: Describes an event.
    EventDescriptionList:
      type: array
      items:
        $ref: "#/components/schemas/EventDescription"
    FailureType:
      type: string
      enum:
        - UpdateCancelled
        - CancellationFailed
        - RollbackFailed
        - RollbackSuccessful
        - InternalFailure
        - InvalidEnvironmentState
        - PermissionsError
    FileTypeExtension:
      type: string
      minLength: 1
      maxLength: 100
    ForceTerminate:
      type: boolean
    Instance:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/ResourceId"
      description: The description of an Amazon EC2 instance.
    SingleInstanceHealth:
      type: object
      properties:
        InstanceId:
          $ref: "#/components/schemas/InstanceId"
        HealthStatus:
          $ref: "#/components/schemas/String"
        Color:
          $ref: "#/components/schemas/String"
        Causes:
          $ref: "#/components/schemas/Causes"
        LaunchedAt:
          $ref: "#/components/schemas/LaunchedAt"
        ApplicationMetrics:
          $ref: "#/components/schemas/ApplicationMetrics"
        System:
          $ref: "#/components/schemas/SystemStatus"
        Deployment:
          $ref: "#/components/schemas/Deployment"
        AvailabilityZone:
          $ref: "#/components/schemas/String"
        InstanceType:
          $ref: "#/components/schemas/String"
      description: Detailed health information about an Amazon EC2 instance in your Elastic
        Beanstalk environment.
    InstanceId:
      type: string
      minLength: 1
      maxLength: 255
    LaunchConfiguration:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/ResourceId"
      description: Describes an Auto Scaling launch configuration.
    LaunchTemplate:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/ResourceId"
      description: Describes an Amazon EC2 launch template.
    LaunchedAt:
      type: string
      format: date-time
    PlatformFilters:
      type: array
      items:
        $ref: "#/components/schemas/PlatformFilter"
    PlatformMaxRecords:
      type: integer
      minimum: 1
    ListPlatformVersionsRequest:
      type: object
      properties:
        Filters:
          $ref: "#/components/schemas/PlatformFilters"
        MaxRecords:
          $ref: "#/components/schemas/PlatformMaxRecords"
        NextToken:
          $ref: "#/components/schemas/Token"
    PlatformSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/PlatformSummary"
    ResourceArn:
      type: string
    ListTagsForResourceMessage:
      type: object
      required:
        - ResourceArn
      properties:
        ResourceArn:
          $ref: "#/components/schemas/ResourceArn"
    Listener:
      type: object
      properties:
        Protocol:
          $ref: "#/components/schemas/String"
        Port:
          $ref: "#/components/schemas/Integer"
      description: Describes the properties of a Listener for the LoadBalancer.
    LoadAverageValue:
      type: number
      format: double
    LoadAverage:
      type: array
      items:
        $ref: "#/components/schemas/LoadAverageValue"
    LoadBalancer:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/ResourceId"
      description: Describes a LoadBalancer.
    LoadBalancerListenersDescription:
      type: array
      items:
        $ref: "#/components/schemas/Listener"
    Maintainer:
      type: string
    Timestamp:
      type: string
      format: date-time
    ManagedAction:
      type: object
      properties:
        ActionId:
          $ref: "#/components/schemas/String"
        ActionDescription:
          $ref: "#/components/schemas/String"
        ActionType:
          $ref: "#/components/schemas/ActionType"
        Status:
          $ref: "#/components/schemas/ActionStatus"
        WindowStartTime:
          $ref: "#/components/schemas/Timestamp"
      description: The record of an upcoming or in-progress managed action.
    ManagedActionHistoryItem:
      type: object
      properties:
        ActionId:
          $ref: "#/components/schemas/String"
        ActionType:
          $ref: "#/components/schemas/ActionType"
        ActionDescription:
          $ref: "#/components/schemas/String"
        FailureType:
          $ref: "#/components/schemas/FailureType"
        Status:
          $ref: "#/components/schemas/ActionHistoryStatus"
        FailureDescription:
          $ref: "#/components/schemas/String"
        ExecutedTime:
          $ref: "#/components/schemas/Timestamp"
        FinishedTime:
          $ref: "#/components/schemas/Timestamp"
      description: The record of a completed or failed managed action.
    OperatingSystemName:
      type: string
    OperatingSystemVersion:
      type: string
    RegexPattern:
      type: string
    RegexLabel:
      type: string
    PlatformCategory:
      type: string
    PlatformOwner:
      type: string
    PlatformStatus:
      type: string
      enum:
        - Creating
        - Failed
        - Ready
        - Deleting
        - Deleted
    PlatformProgrammingLanguages:
      type: array
      items:
        $ref: "#/components/schemas/PlatformProgrammingLanguage"
    PlatformFrameworks:
      type: array
      items:
        $ref: "#/components/schemas/PlatformFramework"
    SupportedTierList:
      type: array
      items:
        $ref: "#/components/schemas/SupportedTier"
    SupportedAddonList:
      type: array
      items:
        $ref: "#/components/schemas/SupportedAddon"
    PlatformFilterType:
      type: string
    PlatformFilterOperator:
      type: string
    PlatformFilterValueList:
      type: array
      items:
        $ref: "#/components/schemas/PlatformFilterValue"
    PlatformFilterValue:
      type: string
    PlatformFramework:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/String"
        Version:
          $ref: "#/components/schemas/String"
      description: A framework supported by the custom platform.
    PlatformProgrammingLanguage:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/String"
        Version:
          $ref: "#/components/schemas/String"
      description: A programming language supported by the platform.
    Queue:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/String"
        URL:
          $ref: "#/components/schemas/String"
      description: Describes a queue.
    RebuildEnvironmentMessage:
      type: object
      properties:
        EnvironmentId:
          $ref: "#/components/schemas/EnvironmentId"
        EnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
      description: <p/>
    RequestEnvironmentInfoMessage:
      type: object
      required:
        - InfoType
      properties:
        EnvironmentId:
          $ref: "#/components/schemas/EnvironmentId"
        EnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
        InfoType:
          $ref: "#/components/schemas/EnvironmentInfoType"
      description: Request to retrieve logs from an environment and store them in your
        Elastic Beanstalk storage bucket.
    ResourceQuota:
      type: object
      properties:
        Maximum:
          $ref: "#/components/schemas/BoxedInt"
      description: The AWS Elastic Beanstalk quota information for a single resource type
        in an AWS account. It reflects the resource's limits for this account.
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    RestartAppServerMessage:
      type: object
      properties:
        EnvironmentId:
          $ref: "#/components/schemas/EnvironmentId"
        EnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
      description: <p/>
    RetrieveEnvironmentInfoMessage:
      type: object
      required:
        - InfoType
      properties:
        EnvironmentId:
          $ref: "#/components/schemas/EnvironmentId"
        EnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
        InfoType:
          $ref: "#/components/schemas/EnvironmentInfoType"
      description: Request to download logs retrieved with <a>RequestEnvironmentInfo</a>.
    SystemStatus:
      type: object
      properties:
        CPUUtilization:
          $ref: "#/components/schemas/CPUUtilization"
        LoadAverage:
          $ref: "#/components/schemas/LoadAverage"
      description: CPU utilization and load average metrics for an Amazon EC2 instance.
    SolutionStackFileTypeList:
      type: array
      items:
        $ref: "#/components/schemas/FileTypeExtension"
    SupportedAddon:
      type: string
    SupportedTier:
      type: string
    SwapEnvironmentCNAMEsMessage:
      type: object
      properties:
        SourceEnvironmentId:
          $ref: "#/components/schemas/EnvironmentId"
        SourceEnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
        DestinationEnvironmentId:
          $ref: "#/components/schemas/EnvironmentId"
        DestinationEnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
      description: Swaps the CNAMEs of two environments.
    TagValue:
      type: string
      minLength: 1
      maxLength: 256
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
    TerminateEnvironmentResources:
      type: boolean
    TerminateEnvironmentMessage:
      type: object
      properties:
        EnvironmentId:
          $ref: "#/components/schemas/EnvironmentId"
        EnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
        TerminateResources:
          $ref: "#/components/schemas/TerminateEnvironmentResources"
        ForceTerminate:
          $ref: "#/components/schemas/ForceTerminate"
      description: Request to terminate an environment.
    Trigger:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/ResourceId"
      description: Describes a trigger.
    UpdateApplicationMessage:
      type: object
      required:
        - ApplicationName
      properties:
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        Description:
          $ref: "#/components/schemas/Description"
      description: Request to update an application.
    UpdateApplicationResourceLifecycleMessage:
      type: object
      required:
        - ApplicationName
        - ResourceLifecycleConfig
      properties:
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        ResourceLifecycleConfig:
          $ref: "#/components/schemas/ApplicationResourceLifecycleConfig"
    UpdateApplicationVersionMessage:
      type: object
      required:
        - ApplicationName
        - VersionLabel
      properties:
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        VersionLabel:
          $ref: "#/components/schemas/VersionLabel"
        Description:
          $ref: "#/components/schemas/Description"
      description: <p/>
    UpdateConfigurationTemplateMessage:
      type: object
      required:
        - ApplicationName
        - TemplateName
      properties:
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        TemplateName:
          $ref: "#/components/schemas/ConfigurationTemplateName"
        Description:
          $ref: "#/components/schemas/Description"
        OptionSettings:
          $ref: "#/components/schemas/ConfigurationOptionSettingsList"
        OptionsToRemove:
          $ref: "#/components/schemas/OptionsSpecifierList"
      description: The result message containing the options for the specified solution
        stack.
    UpdateEnvironmentMessage:
      type: object
      properties:
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        EnvironmentId:
          $ref: "#/components/schemas/EnvironmentId"
        EnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
        GroupName:
          $ref: "#/components/schemas/GroupName"
        Description:
          $ref: "#/components/schemas/Description"
        Tier:
          $ref: "#/components/schemas/EnvironmentTier"
        VersionLabel:
          $ref: "#/components/schemas/VersionLabel"
        TemplateName:
          $ref: "#/components/schemas/ConfigurationTemplateName"
        SolutionStackName:
          $ref: "#/components/schemas/SolutionStackName"
        PlatformArn:
          $ref: "#/components/schemas/PlatformArn"
        OptionSettings:
          $ref: "#/components/schemas/ConfigurationOptionSettingsList"
        OptionsToRemove:
          $ref: "#/components/schemas/OptionsSpecifierList"
      description: Request to update an environment.
    UpdateTagsForResourceMessage:
      type: object
      required:
        - ResourceArn
      properties:
        ResourceArn:
          $ref: "#/components/schemas/ResourceArn"
        TagsToAdd:
          $ref: "#/components/schemas/TagList"
        TagsToRemove:
          $ref: "#/components/schemas/TagKeyList"
    ValidateConfigurationSettingsMessage:
      type: object
      required:
        - ApplicationName
        - OptionSettings
      properties:
        ApplicationName:
          $ref: "#/components/schemas/ApplicationName"
        TemplateName:
          $ref: "#/components/schemas/ConfigurationTemplateName"
        EnvironmentName:
          $ref: "#/components/schemas/EnvironmentName"
        OptionSettings:
          $ref: "#/components/schemas/ConfigurationOptionSettingsList"
      description: A list of validation messages for a specified configuration template.
    ValidationMessageString:
      type: string
    ValidationSeverity:
      type: string
      enum:
        - error
        - warning
    ValidationMessage:
      type: object
      properties:
        Message:
          $ref: "#/components/schemas/ValidationMessageString"
        Severity:
          $ref: "#/components/schemas/ValidationSeverity"
        Namespace:
          $ref: "#/components/schemas/OptionNamespace"
        OptionName:
          $ref: "#/components/schemas/ConfigurationOptionName"
      description: An error or warning for a desired configuration option value.
