openapi: 3.0.0
info:
  title: DataFactoryManagementClient
  version: 2017-09-01-preview
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/datafactory/resource-manager/Microsoft.DataFactory/preview/2017-09-01-preview/entityTypes/LinkedService.json
      version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: datafactory-LinkedService
  x-tags:
    - Azure
    - Microsoft
paths: {}
servers:
  - url: https://azure.local
components:
  schemas:
    AmazonMWSLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Amazon Marketplace Web Service linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/AmazonMWSLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: AmazonMWS
    AmazonMWSLinkedServiceTypeProperties:
      description: Amazon Marketplace Web Service linked service properties.
      properties:
        accessKeyId:
          description: The access key id used to access data.
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        endpoint:
          description: The endpoint of the Amazon MWS server, (i.e. mws.amazonservices.com)
          type: object
        marketplaceID:
          description: The Amazon Marketplace ID you want to retrieve data from. To
            retrieve data from multiple Marketplace IDs, separate them with a
            comma (,). (i.e. A2EUQ1WTGCTBG2)
          type: object
        mwsAuthToken:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        secretKey:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        sellerID:
          description: The Amazon seller ID.
          type: object
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using
            HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's
            certificate to match the host name of the server when connecting
            over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when
            connecting over SSL. The default value is true.
          type: object
      required:
        - endpoint
        - marketplaceID
        - sellerID
        - accessKeyId
    AmazonRedshiftLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Linked service for Amazon Redshift.
      properties:
        typeProperties:
          $ref: "#/components/schemas/AmazonRedshiftLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: AmazonRedshift
    AmazonRedshiftLinkedServiceTypeProperties:
      description: Amazon Redshift linked service properties.
      properties:
        database:
          description: "The database name of the Amazon Redshift source. Type: string (or
            Expression with resultType string)."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        port:
          description: "The TCP port number that the Amazon Redshift server uses to listen
            for client connections. The default value is 5439. Type: integer (or
            Expression with resultType integer)."
          type: object
        server:
          description: "The name of the Amazon Redshift server. Type: string (or Expression
            with resultType string)."
          type: object
        username:
          description: "The username of the Amazon Redshift source. Type: string (or
            Expression with resultType string)."
          type: object
      required:
        - server
        - database
    AmazonS3LinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Linked service for Amazon S3.
      properties:
        typeProperties:
          $ref: "#/components/schemas/AmazonS3LinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: AmazonS3
    AmazonS3LinkedServiceTypeProperties:
      description: Amazon S3 linked service properties.
      properties:
        accessKeyId:
          description: "The access key identifier of the Amazon S3 Identity and Access
            Management (IAM) user. Type: string (or Expression with resultType
            string)."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        secretAccessKey:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
    AzureBatchLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Azure Batch linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/AzureBatchLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: AzureBatch
    AzureBatchLinkedServiceTypeProperties:
      description: Azure Batch linked service properties.
      properties:
        accessKey:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        accountName:
          description: "The Azure Batch account name. Type: string (or Expression with
            resultType string)."
          type: object
        batchUri:
          description: "The Azure Batch URI. Type: string (or Expression with resultType
            string)."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        linkedServiceName:
          description: Linked service reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference LinkedService name.
              type: string
            type:
              description: Linked service reference type.
              enum:
                - LinkedServiceReference
              type: string
          required:
            - type
            - referenceName
        poolName:
          description: "The Azure Batch pool name. Type: string (or Expression with
            resultType string)."
          type: object
      required:
        - accountName
        - batchUri
        - poolName
        - linkedServiceName
    AzureDataLakeAnalyticsLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Azure Data Lake Analytics linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/AzureDataLakeAnalyticsLinkedServiceTypeProper\
            ties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: AzureDataLakeAnalytics
    AzureDataLakeAnalyticsLinkedServiceTypeProperties:
      description: Azure Data Lake Analytics linked service properties.
      properties:
        accountName:
          description: "The Azure Data Lake Analytics account name. Type: string (or
            Expression with resultType string)."
          type: object
        dataLakeAnalyticsUri:
          description: "Azure Data Lake Analytics URI Type: string (or Expression with
            resultType string)."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        resourceGroupName:
          description: "Data Lake Analytics account resource group name (if different from
            Data Factory account). Type: string (or Expression with resultType
            string)."
          type: object
        servicePrincipalId:
          description: "The ID of the application used to authenticate against the Azure
            Data Lake Analytics account. Type: string (or Expression with
            resultType string)."
          type: object
        servicePrincipalKey:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        subscriptionId:
          description: "Data Lake Analytics account subscription ID (if different from Data
            Factory account). Type: string (or Expression with resultType
            string)."
          type: object
        tenant:
          description: "The name or ID of the tenant to which the service principal
            belongs. Type: string (or Expression with resultType string)."
          type: object
      required:
        - accountName
        - tenant
    AzureDataLakeStoreLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Azure Data Lake Store linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/AzureDataLakeStoreLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: AzureDataLakeStore
    AzureDataLakeStoreLinkedServiceTypeProperties:
      description: Azure Data Lake Store linked service properties.
      properties:
        accountName:
          description: "Data Lake Store account name. Type: string (or Expression with
            resultType string)."
          type: object
        dataLakeStoreUri:
          description: "Data Lake Store service URI. Type: string (or Expression with
            resultType string)."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        resourceGroupName:
          description: "Data Lake Store account resource group name (if different from Data
            Factory account). Type: string (or Expression with resultType
            string)."
          type: object
        servicePrincipalId:
          description: "The ID of the application used to authenticate against the Azure
            Data Lake Store account. Type: string (or Expression with resultType
            string)."
          type: object
        servicePrincipalKey:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        subscriptionId:
          description: "Data Lake Store account subscription ID (if different from Data
            Factory account). Type: string (or Expression with resultType
            string)."
          type: object
        tenant:
          description: "The name or ID of the tenant to which the service principal
            belongs. Type: string (or Expression with resultType string)."
          type: object
      required:
        - dataLakeStoreUri
    AzureDatabricksLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Azure Databricks linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/AzureDatabricksLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: AzureDatabricks
    AzureDatabricksLinkedServiceTypeProperties:
      description: Azure Databricks linked service properties.
      properties:
        accessToken:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        domain:
          description: "<REGION>.azuredatabricks.net, domain name of your Databricks
            deployment. Type: string (or Expression with resultType string)."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        existingClusterId:
          description: "The id of an existing cluster that will be used for all runs of
            this job. Type: string (or Expression with resultType string)."
          type: object
        newClusterNodeType:
          description: "The node types of new cluster. Type: string (or Expression with
            resultType string)."
          type: object
        newClusterNumOfWorker:
          description: "Number of worker nodes that new cluster should have. A string
            formatted Int32, like '1' means numOfWorker is 1 or '1:10' means
            auto-scale from 1 as min and 10 as max. Type: string (or Expression
            with resultType string)."
          type: object
        newClusterSparkConf:
          additionalProperties:
            description: "Type: string (or Expression with resultType string)."
            type: object
          description: a set of optional, user-specified Spark configuration key-value
            pairs.
          type: object
        newClusterVersion:
          description: "The Spark version of new cluster. Type: string (or Expression with
            resultType string)."
          type: object
      required:
        - domain
        - accessToken
    AzureKeyVaultLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Azure Key Vault linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/AzureKeyVaultLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: AzureKeyVault
    AzureKeyVaultLinkedServiceTypeProperties:
      description: Azure Key Vault linked service properties.
      properties:
        baseUrl:
          description: "The base URL of the Azure Key Vault. e.g.
            https://myakv.vault.azure.net Type: string (or Expression with
            resultType string)."
          type: object
      required:
        - baseUrl
    AzureMLLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Azure ML Web Service linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/AzureMLLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: AzureML
    AzureMLLinkedServiceTypeProperties:
      description: Azure ML Web Service linked service properties.
      properties:
        apiKey:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        mlEndpoint:
          description: "The Batch Execution REST URL for an Azure ML Web Service endpoint.
            Type: string (or Expression with resultType string)."
          type: object
        servicePrincipalId:
          description: "The ID of the service principal used to authenticate against the
            ARM-based updateResourceEndpoint of an Azure ML web service. Type:
            string (or Expression with resultType string)."
          type: object
        servicePrincipalKey:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        tenant:
          description: "The name or ID of the tenant to which the service principal
            belongs. Type: string (or Expression with resultType string)."
          type: object
        updateResourceEndpoint:
          description: "The Update Resource REST URL for an Azure ML Web Service endpoint.
            Type: string (or Expression with resultType string)."
          type: object
      required:
        - mlEndpoint
        - apiKey
    AzureMySqlLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Azure MySQL database linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/AzureMySqlLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: AzureMySql
    AzureMySqlLinkedServiceTypeProperties:
      description: Azure MySQL database linked service properties.
      properties:
        connectionString:
          description: "The connection string. Type: string, SecureString or
            AzureKeyVaultSecretReference."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
      required:
        - connectionString
    AzurePostgreSqlLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Azure PostgreSQL linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/AzurePostgreSqlLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: AzurePostgreSql
    AzurePostgreSqlLinkedServiceTypeProperties:
      description: Azure PostgreSQL linked service properties.
      properties:
        connectionString:
          description: "An ODBC connection string. Type: string, SecureString or
            AzureKeyVaultSecretReference."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
    AzureSearchLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Linked service for Windows Azure Search Service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/AzureSearchLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: AzureSearch
    AzureSearchLinkedServiceTypeProperties:
      description: Windows Azure Search Service linked service properties.
      properties:
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        key:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        url:
          description: "URL for Azure Search service. Type: string (or Expression with
            resultType string)."
          type: object
      required:
        - url
    AzureSqlDWLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Azure SQL Data Warehouse linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/AzureSqlDWLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: AzureSqlDW
    AzureSqlDWLinkedServiceTypeProperties:
      description: Azure SQL Data Warehouse linked service properties.
      properties:
        connectionString:
          description: "The connection string. Type: string, SecureString or
            AzureKeyVaultSecretReference. Type: string, SecureString or
            AzureKeyVaultSecretReference."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        servicePrincipalId:
          description: "The ID of the service principal used to authenticate against Azure
            SQL Data Warehouse. Type: string (or Expression with resultType
            string)."
          type: object
        servicePrincipalKey:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        tenant:
          description: "The name or ID of the tenant to which the service principal
            belongs. Type: string (or Expression with resultType string)."
          type: object
      required:
        - connectionString
    AzureSqlDatabaseLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Microsoft Azure SQL Database linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/AzureSqlDatabaseLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: AzureSqlDatabase
    AzureSqlDatabaseLinkedServiceTypeProperties:
      description: Azure SQL Database linked service properties.
      properties:
        connectionString:
          description: "The connection string. Type: string, SecureString or
            AzureKeyVaultSecretReference."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        servicePrincipalId:
          description: "The ID of the service principal used to authenticate against Azure
            SQL Database. Type: string (or Expression with resultType string)."
          type: object
        servicePrincipalKey:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        tenant:
          description: "The name or ID of the tenant to which the service principal
            belongs. Type: string (or Expression with resultType string)."
          type: object
      required:
        - connectionString
    AzureStorageLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: The storage account linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/AzureStorageLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: AzureStorage
    AzureStorageLinkedServiceTypeProperties:
      description: Azure Storage linked service properties.
      properties:
        connectionString:
          description: "The connection string. It is mutually exclusive with sasUri
            property. Type: string, SecureString or
            AzureKeyVaultSecretReference."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        sasUri:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
    CassandraLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Linked service for Cassandra data source.
      properties:
        typeProperties:
          $ref: "#/components/schemas/CassandraLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Cassandra
    CassandraLinkedServiceTypeProperties:
      description: Cassandra linked service properties.
      properties:
        authenticationType:
          description: "AuthenticationType to be used for connection. Type: string (or
            Expression with resultType string)."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        host:
          description: "Host name for connection. Type: string (or Expression with
            resultType string)."
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        port:
          description: "The port for the connection. Type: integer (or Expression with
            resultType integer)."
          type: object
        username:
          description: "Username for authentication. Type: string (or Expression with
            resultType string)."
          type: object
      required:
        - host
    ConcurLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Concur Service linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/ConcurLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Concur
    ConcurLinkedServiceTypeProperties:
      description: Concur Service linked service properties.
      properties:
        clientId:
          description: Application client_id supplied by Concur App Management.
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using
            HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's
            certificate to match the host name of the server when connecting
            over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when
            connecting over SSL. The default value is true.
          type: object
        username:
          description: The user name that you use to access Concur Service.
          type: object
      required:
        - clientId
        - username
    CosmosDbLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Microsoft Azure Cosmos Database (CosmosDB) linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/CosmosDbLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: CosmosDb
    CosmosDbLinkedServiceTypeProperties:
      description: CosmosDB linked service properties.
      properties:
        connectionString:
          description: "The connection string. Type: string, SecureString or
            AzureKeyVaultSecretReference."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
      required:
        - connectionString
    CouchbaseLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Couchbase server linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/CouchbaseLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Couchbase
    CouchbaseLinkedServiceTypeProperties:
      description: Couchbase server linked service properties.
      properties:
        connectionString:
          description: "An ODBC connection string. Type: string, SecureString or
            AzureKeyVaultSecretReference."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
    CustomDataSourceLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Custom linked service.
      properties:
        typeProperties:
          description: Custom linked service properties.
          type: object
          x-ms-client-flatten: true
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: CustomDataSource
    Db2LinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Linked service for DB2 data source.
      properties:
        typeProperties:
          $ref: "#/components/schemas/Db2LinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Db2
    Db2LinkedServiceTypeProperties:
      description: DB2 linked service properties.
      properties:
        authenticationType:
          description: AuthenticationType to be used for connection.
          enum:
            - Basic
          type: string
          x-ms-enum:
            modelAsString: true
            name: Db2AuthenticationType
        database:
          description: "Database name for connection. Type: string (or Expression with
            resultType string)."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        server:
          description: "Server name for connection. Type: string (or Expression with
            resultType string)."
          type: object
        username:
          description: "Username for authentication. Type: string (or Expression with
            resultType string)."
          type: object
      required:
        - server
        - database
    DrillLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Drill server linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/DrillLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Drill
    DrillLinkedServiceTypeProperties:
      description: Drill server linked service properties.
      properties:
        connectionString:
          description: "An ODBC connection string. Type: string, SecureString or
            AzureKeyVaultSecretReference."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
    DynamicsLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Dynamics linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/DynamicsLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Dynamics
    DynamicsLinkedServiceTypeProperties:
      description: Dynamics linked service properties.
      properties:
        authenticationType:
          description: "The authentication type to connect to Dynamics server. 'Office365'
            for online scenario, 'Ifd' for on-premises with Ifd scenario. Type:
            string (or Expression with resultType string)."
          enum:
            - Office365
            - Ifd
          type: object
          x-ms-enum:
            modelAsString: true
            name: DynamicsAuthenticationType
        deploymentType:
          description: "The deployment type of the Dynamics instance. 'Online' for Dynamics
            Online and 'OnPremisesWithIfd' for Dynamics on-premises with Ifd.
            Type: string (or Expression with resultType string)."
          enum:
            - Online
            - OnPremisesWithIfd
          type: object
          x-ms-enum:
            modelAsString: true
            name: DynamicsDeploymentType
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        hostName:
          description: "The host name of the on-premises Dynamics server. The property is
            required for on-prem and not allowed for online. Type: string (or
            Expression with resultType string)."
          type: object
        organizationName:
          description: "The organization name of the Dynamics instance. The property is
            required for on-prem and required for online when there are more
            than one Dynamics instances associated with the user. Type: string
            (or Expression with resultType string)."
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        port:
          description: "The port of on-premises Dynamics server. The property is required
            for on-prem and not allowed for online. Default is 443. Type:
            integer (or Expression with resultType integer), minimum: 0."
          type: object
        serviceUri:
          description: "The URL to the Microsoft Dynamics server. The property is required
            for on-line and not allowed for on-prem. Type: string (or Expression
            with resultType string)."
          type: object
        username:
          description: "User name to access the Dynamics instance. Type: string (or
            Expression with resultType string)."
          type: object
      required:
        - deploymentType
        - authenticationType
        - username
    EloquaLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Eloqua server linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/EloquaLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Eloqua
    EloquaLinkedServiceTypeProperties:
      description: Eloqua server linked service properties.
      properties:
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        endpoint:
          description: The endpoint of the Eloqua server. (i.e. eloqua.example.com)
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using
            HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's
            certificate to match the host name of the server when connecting
            over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when
            connecting over SSL. The default value is true.
          type: object
        username:
          description: "The site name and user name of your Eloqua account in the form:
            sitename/username. (i.e. Eloqua/Alice)"
          type: object
      required:
        - endpoint
        - username
    FileServerLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: File system linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/FileServerLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: FileServer
    FileServerLinkedServiceTypeProperties:
      description: File system linked service properties.
      properties:
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        host:
          description: "Host name of the server. Type: string (or Expression with
            resultType string)."
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        userId:
          description: "User ID to logon the server. Type: string (or Expression with
            resultType string)."
          type: object
      required:
        - host
    FtpServerLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: A FTP server Linked Service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/FtpServerLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: FtpServer
    FtpServerLinkedServiceTypeProperties:
      description: Properties specific to this linked service type.
      properties:
        authenticationType:
          description: The authentication type to be used to connect to the FTP server.
          enum:
            - Basic
            - Anonymous
          type: string
          x-ms-enum:
            modelAsString: true
            name: FtpAuthenticationType
        enableServerCertificateValidation:
          description: "If true, validate the FTP server SSL certificate when connect over
            SSL/TLS channel. Default value is true. Type: boolean (or Expression
            with resultType boolean)."
          type: object
        enableSsl:
          description: "If true, connect to the FTP server over SSL/TLS channel. Default
            value is true. Type: boolean (or Expression with resultType
            boolean)."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        host:
          description: "Host name of the FTP server. Type: string (or Expression with
            resultType string)."
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        port:
          description: "The TCP port number that the FTP server uses to listen for client
            connections. Default value is 21. Type: integer (or Expression with
            resultType integer), minimum: 0."
          type: object
        userName:
          description: "Username to logon the FTP server. Type: string (or Expression with
            resultType string)."
          type: object
      required:
        - host
    GoogleBigQueryLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Google BigQuery service linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/GoogleBigQueryLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: GoogleBigQuery
    GoogleBigQueryLinkedServiceTypeProperties:
      description: Google BigQuery service linked service properties.
      properties:
        additionalProjects:
          description: A comma-separated list of public BigQuery projects to access.
          type: object
        authenticationType:
          description: The OAuth 2.0 authentication mechanism used for authentication.
            ServiceAuthentication can only be used on self-hosted IR.
          enum:
            - ServiceAuthentication
            - UserAuthentication
          type: string
          x-ms-enum:
            modelAsString: true
            name: GoogleBigQueryAuthenticationType
        clientId:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        clientSecret:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        email:
          description: The service account email ID that is used for ServiceAuthentication
            and can only be used on self-hosted IR.
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        keyFilePath:
          description: The full path to the .p12 key file that is used to authenticate the
            service account email address and can only be used on self-hosted
            IR.
          type: object
        project:
          description: The default BigQuery project to query against.
          type: object
        refreshToken:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        requestGoogleDriveScope:
          description: Whether to request access to Google Drive. Allowing Google Drive
            access enables support for federated tables that combine BigQuery
            data with data from Google Drive. The default value is false.
          type: object
        trustedCertPath:
          description: The full path of the .pem file containing trusted CA certificates
            for verifying the server when connecting over SSL. This property can
            only be set when using SSL on self-hosted IR. The default value is
            the cacerts.pem file installed with the IR.
          type: object
        useSystemTrustStore:
          description: Specifies whether to use a CA certificate from the system trust
            store or from a specified PEM file. The default value is false.
          type: object
      required:
        - project
        - authenticationType
    GreenplumLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Greenplum Database linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/GreenplumLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Greenplum
    GreenplumLinkedServiceTypeProperties:
      description: Greenplum Database linked service properties.
      properties:
        connectionString:
          description: "An ODBC connection string. Type: string, SecureString or
            AzureKeyVaultSecretReference."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
    HBaseLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: HBase server linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/HBaseLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: HBase
    HBaseLinkedServiceTypeProperties:
      description: HBase server linked service properties.
      properties:
        allowHostNameCNMismatch:
          description: Specifies whether to require a CA-issued SSL certificate name to
            match the host name of the server when connecting over SSL. The
            default value is false.
          type: object
        allowSelfSignedServerCert:
          description: Specifies whether to allow self-signed certificates from the server.
            The default value is false.
          type: object
        authenticationType:
          description: The authentication mechanism to use to connect to the HBase server.
          enum:
            - Anonymous
            - Basic
          type: string
          x-ms-enum:
            modelAsString: true
            name: HBaseAuthenticationType
        enableSsl:
          description: Specifies whether the connections to the server are encrypted using
            SSL. The default value is false.
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        host:
          description: The IP address or host name of the HBase server. (i.e.
            192.168.222.160)
          type: object
        httpPath:
          description: The partial URL corresponding to the HBase server. (i.e.
            /gateway/sandbox/hbase/version)
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        port:
          description: The TCP port that the HBase instance uses to listen for client
            connections. The default value is 9090.
          type: object
        trustedCertPath:
          description: The full path of the .pem file containing trusted CA certificates
            for verifying the server when connecting over SSL. This property can
            only be set when using SSL on self-hosted IR. The default value is
            the cacerts.pem file installed with the IR.
          type: object
        username:
          description: The user name used to connect to the HBase instance.
          type: object
      required:
        - host
        - authenticationType
    HDInsightLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: HDInsight linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/HDInsightLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: HDInsight
    HDInsightLinkedServiceTypeProperties:
      description: HDInsight linked service properties.
      properties:
        clusterUri:
          description: "HDInsight cluster URI. Type: string (or Expression with resultType
            string)."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        hcatalogLinkedServiceName:
          description: Linked service reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference LinkedService name.
              type: string
            type:
              description: Linked service reference type.
              enum:
                - LinkedServiceReference
              type: string
          required:
            - type
            - referenceName
        linkedServiceName:
          description: Linked service reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference LinkedService name.
              type: string
            type:
              description: Linked service reference type.
              enum:
                - LinkedServiceReference
              type: string
          required:
            - type
            - referenceName
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        userName:
          description: "HDInsight cluster user name. Type: string (or Expression with
            resultType string)."
          type: object
      required:
        - clusterUri
    HDInsightOnDemandLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: HDInsight ondemand linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/HDInsightOnDemandLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: HDInsightOnDemand
    HDInsightOnDemandLinkedServiceTypeProperties:
      description: HDInsight ondemand linked service properties.
      properties:
        additionalLinkedServiceNames:
          description: Specifies additional storage accounts for the HDInsight linked
            service so that the Data Factory service can register them on your
            behalf.
          items:
            description: Linked service reference type.
            properties:
              parameters:
                additionalProperties:
                  type: object
                description: An object mapping parameter names to argument values.
                type: object
              referenceName:
                description: Reference LinkedService name.
                type: string
              type:
                description: Linked service reference type.
                enum:
                  - LinkedServiceReference
                type: string
            required:
              - type
              - referenceName
          type: array
        clusterNamePrefix:
          description: "The prefix of cluster name, postfix will be distinct with
            timestamp. Type: string (or Expression with resultType string)."
          type: object
        clusterPassword:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        clusterResourceGroup:
          description: "The resource group where the cluster belongs. Type: string (or
            Expression with resultType string)."
          type: object
        clusterSize:
          description: "Number of worker/data nodes in the cluster. Suggestion value: 4.
            Type: string (or Expression with resultType string)."
          type: object
        clusterSshPassword:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        clusterSshUserName:
          description: "The username to SSH remotely connect to cluster’s node (for Linux).
            Type: string (or Expression with resultType string)."
          type: object
        clusterType:
          description: "The cluster type. Type: string (or Expression with resultType
            string)."
          type: object
        clusterUserName:
          description: "The username to access the cluster. Type: string (or Expression
            with resultType string)."
          type: object
        coreConfiguration:
          description: Specifies the core configuration parameters (as in core-site.xml)
            for the HDInsight cluster to be created.
          type: object
        dataNodeSize:
          description: Specifies the size of the data node for the HDInsight cluster.
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        hBaseConfiguration:
          description: Specifies the HBase configuration parameters (hbase-site.xml) for
            the HDInsight cluster.
          type: object
        hcatalogLinkedServiceName:
          description: Linked service reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference LinkedService name.
              type: string
            type:
              description: Linked service reference type.
              enum:
                - LinkedServiceReference
              type: string
          required:
            - type
            - referenceName
        hdfsConfiguration:
          description: Specifies the HDFS configuration parameters (hdfs-site.xml) for the
            HDInsight cluster.
          type: object
        headNodeSize:
          description: Specifies the size of the head node for the HDInsight cluster.
          type: object
        hiveConfiguration:
          description: Specifies the hive configuration parameters (hive-site.xml) for the
            HDInsight cluster.
          type: object
        hostSubscriptionId:
          description: "The customer’s subscription to host the cluster. Type: string (or
            Expression with resultType string)."
          type: object
        linkedServiceName:
          description: Linked service reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference LinkedService name.
              type: string
            type:
              description: Linked service reference type.
              enum:
                - LinkedServiceReference
              type: string
          required:
            - type
            - referenceName
        mapReduceConfiguration:
          description: Specifies the MapReduce configuration parameters (mapred-site.xml)
            for the HDInsight cluster.
          type: object
        oozieConfiguration:
          description: Specifies the Oozie configuration parameters (oozie-site.xml) for
            the HDInsight cluster.
          type: object
        servicePrincipalId:
          description: "The service principal id for the hostSubscriptionId. Type: string
            (or Expression with resultType string)."
          type: object
        servicePrincipalKey:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        sparkVersion:
          description: "The version of spark if the cluster type is 'spark'. Type: string
            (or Expression with resultType string)."
          type: object
        stormConfiguration:
          description: Specifies the Storm configuration parameters (storm-site.xml) for
            the HDInsight cluster.
          type: object
        tenant:
          description: "The Tenant id/name to which the service principal belongs. Type:
            string (or Expression with resultType string)."
          type: object
        timeToLive:
          description: "The allowed idle time for the on-demand HDInsight cluster.
            Specifies how long the on-demand HDInsight cluster stays alive after
            completion of an activity run if there are no other active jobs in
            the cluster. The minimum value is 5 mins. Type: string (or
            Expression with resultType string)."
          type: object
        version:
          description: "Version of the HDInsight cluster.  Type: string (or Expression with
            resultType string)."
          type: object
        yarnConfiguration:
          description: Specifies the Yarn configuration parameters (yarn-site.xml) for the
            HDInsight cluster.
          type: object
        zookeeperNodeSize:
          description: Specifies the size of the Zoo Keeper node for the HDInsight cluster.
          type: object
      required:
        - clusterSize
        - timeToLive
        - version
        - linkedServiceName
        - hostSubscriptionId
        - tenant
        - clusterResourceGroup
    HdfsLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Hadoop Distributed File System (HDFS) linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/HdfsLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Hdfs
    HdfsLinkedServiceTypeProperties:
      description: HDFS linked service properties.
      properties:
        authenticationType:
          description: "Type of authentication used to connect to the HDFS. Possible values
            are: Anonymous and Windows. Type: string (or Expression with
            resultType string)."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        url:
          description: "The URL of the HDFS service endpoint, e.g.
            http://myhostname:50070/webhdfs/v1 . Type: string (or Expression
            with resultType string)."
          type: object
        userName:
          description: "User name for Windows authentication. Type: string (or Expression
            with resultType string)."
          type: object
      required:
        - url
    HiveLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Hive Server linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/HiveLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Hive
    HiveLinkedServiceTypeProperties:
      description: Hive Server linked service properties.
      properties:
        allowHostNameCNMismatch:
          description: Specifies whether to require a CA-issued SSL certificate name to
            match the host name of the server when connecting over SSL. The
            default value is false.
          type: object
        allowSelfSignedServerCert:
          description: Specifies whether to allow self-signed certificates from the server.
            The default value is false.
          type: object
        authenticationType:
          description: The authentication method used to access the Hive server.
          enum:
            - Anonymous
            - Username
            - UsernameAndPassword
            - WindowsAzureHDInsightService
          type: string
          x-ms-enum:
            modelAsString: true
            name: HiveAuthenticationType
        enableSsl:
          description: Specifies whether the connections to the server are encrypted using
            SSL. The default value is false.
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        host:
          description: IP address or host name of the Hive server, separated by ';' for
            multiple hosts (only when serviceDiscoveryMode is enable).
          type: object
        httpPath:
          description: The partial URL corresponding to the Hive server.
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        port:
          description: The TCP port that the Hive server uses to listen for client
            connections.
          type: object
        serverType:
          description: The type of Hive server.
          enum:
            - HiveServer1
            - HiveServer2
            - HiveThriftServer
          type: string
          x-ms-enum:
            modelAsString: true
            name: HiveServerType
        serviceDiscoveryMode:
          description: true to indicate using the ZooKeeper service, false not.
          type: object
        thriftTransportProtocol:
          description: The transport protocol to use in the Thrift layer.
          enum:
            - Binary
            - SASL
            - "HTTP "
          type: string
          x-ms-enum:
            modelAsString: true
            name: HiveThriftTransportProtocol
        trustedCertPath:
          description: The full path of the .pem file containing trusted CA certificates
            for verifying the server when connecting over SSL. This property can
            only be set when using SSL on self-hosted IR. The default value is
            the cacerts.pem file installed with the IR.
          type: object
        useNativeQuery:
          description: Specifies whether the driver uses native HiveQL queries,or converts
            them into an equivalent form in HiveQL.
          type: object
        useSystemTrustStore:
          description: Specifies whether to use a CA certificate from the system trust
            store or from a specified PEM file. The default value is false.
          type: object
        username:
          description: The user name that you use to access Hive Server.
          type: object
        zooKeeperNameSpace:
          description: The namespace on ZooKeeper under which Hive Server 2 nodes are added.
          type: object
      required:
        - host
        - authenticationType
    HttpLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Linked service for an HTTP source.
      properties:
        typeProperties:
          $ref: "#/components/schemas/HttpLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: HttpServer
    HttpLinkedServiceTypeProperties:
      description: Properties specific to this linked service type.
      properties:
        authenticationType:
          description: The authentication type to be used to connect to the HTTP server.
          enum:
            - Basic
            - Anonymous
            - Digest
            - Windows
            - ClientCertificate
          type: string
          x-ms-enum:
            modelAsString: true
            name: HttpAuthenticationType
        certThumbprint:
          description: "Thumbprint of certificate for ClientCertificate authentication.
            Only valid for on-premises copy. For on-premises copy with
            ClientCertificate authentication, either CertThumbprint or
            EmbeddedCertData/Password should be specified. Type: string (or
            Expression with resultType string)."
          type: object
        embeddedCertData:
          description: "Base64 encoded certificate data for ClientCertificate
            authentication. For on-premises copy with ClientCertificate
            authentication, either CertThumbprint or EmbeddedCertData/Password
            should be specified. Type: string (or Expression with resultType
            string)."
          type: object
        enableServerCertificateValidation:
          description: "If true, validate the HTTPS server SSL certificate. Default value
            is true. Type: boolean (or Expression with resultType boolean)."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        url:
          description: "The base URL of the HTTP endpoint, e.g. http://www.microsoft.com.
            Type: string (or Expression with resultType string)."
          type: object
        userName:
          description: "User name for Basic, Digest, or Windows authentication. Type:
            string (or Expression with resultType string)."
          type: object
      required:
        - url
    HubspotLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Hubspot Service linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/HubspotLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Hubspot
    HubspotLinkedServiceTypeProperties:
      description: Hubspot Service linked service properties.
      properties:
        accessToken:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        clientId:
          description: The client ID associated with your Hubspot application.
          type: object
        clientSecret:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        refreshToken:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using
            HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's
            certificate to match the host name of the server when connecting
            over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when
            connecting over SSL. The default value is true.
          type: object
      required:
        - clientId
    ImpalaLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Impala server linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/ImpalaLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Impala
    ImpalaLinkedServiceTypeProperties:
      description: Impala server linked service properties.
      properties:
        allowHostNameCNMismatch:
          description: Specifies whether to require a CA-issued SSL certificate name to
            match the host name of the server when connecting over SSL. The
            default value is false.
          type: object
        allowSelfSignedServerCert:
          description: Specifies whether to allow self-signed certificates from the server.
            The default value is false.
          type: object
        authenticationType:
          description: The authentication type to use.
          enum:
            - Anonymous
            - SASLUsername
            - UsernameAndPassword
          type: string
          x-ms-enum:
            modelAsString: true
            name: ImpalaAuthenticationType
        enableSsl:
          description: Specifies whether the connections to the server are encrypted using
            SSL. The default value is false.
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        host:
          description: The IP address or host name of the Impala server. (i.e.
            192.168.222.160)
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        port:
          description: The TCP port that the Impala server uses to listen for client
            connections. The default value is 21050.
          type: object
        trustedCertPath:
          description: The full path of the .pem file containing trusted CA certificates
            for verifying the server when connecting over SSL. This property can
            only be set when using SSL on self-hosted IR. The default value is
            the cacerts.pem file installed with the IR.
          type: object
        useSystemTrustStore:
          description: Specifies whether to use a CA certificate from the system trust
            store or from a specified PEM file. The default value is false.
          type: object
        username:
          description: The user name used to access the Impala server. The default value is
            anonymous when using SASLUsername.
          type: object
      required:
        - host
        - authenticationType
    JiraLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Jira Service linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/JiraLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Jira
    JiraLinkedServiceTypeProperties:
      description: Jira Service linked service properties.
      properties:
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        host:
          description: The IP address or host name of the Jira service. (e.g.
            jira.example.com)
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        port:
          description: The TCP port that the Jira server uses to listen for client
            connections. The default value is 443 if connecting through HTTPS,
            or 8080 if connecting through HTTP.
          type: object
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using
            HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's
            certificate to match the host name of the server when connecting
            over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when
            connecting over SSL. The default value is true.
          type: object
        username:
          description: The user name that you use to access Jira Service.
          type: object
      required:
        - host
        - username
    LinkedService:
      additionalProperties:
        type: object
      description: The Azure Data Factory nested object which contains the information and
        credential which can be used to connect with related store or compute
        resource.
      discriminator:
        propertyName: type
      properties:
        annotations:
          description: List of tags that can be used for describing the Dataset.
          items:
            type: object
          type: array
        connectVia:
          description: Integration runtime reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference integration runtime name.
              type: string
            type:
              description: Type of integration runtime.
              enum:
                - IntegrationRuntimeReference
              type: string
          required:
            - type
            - referenceName
        description:
          description: Linked service description.
          type: string
        parameters:
          additionalProperties:
            description: Definition of a single parameter for an entity.
            properties:
              defaultValue:
                description: Default value of parameter.
                type: object
              type:
                description: Parameter type.
                enum:
                  - Object
                  - String
                  - Int
                  - Float
                  - Bool
                  - Array
                  - SecureString
                type: string
                x-ms-enum:
                  modelAsString: true
                  name: ParameterType
            required:
              - type
            type: object
          description: Definition of all parameters for an entity.
          type: object
        type:
          description: Type of linked service.
          type: string
      required:
        - type
      type: object
    MagentoLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Magento server linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/MagentoLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Magento
    MagentoLinkedServiceTypeProperties:
      description: Magento server linked service properties.
      properties:
        accessToken:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        host:
          description: The URL of the Magento instance. (i.e. 192.168.222.110/magento3)
          type: object
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using
            HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's
            certificate to match the host name of the server when connecting
            over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when
            connecting over SSL. The default value is true.
          type: object
      required:
        - host
    MariaDBLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: MariaDB server linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/MariaDBLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: MariaDB
    MariaDBLinkedServiceTypeProperties:
      description: MariaDB server linked service properties.
      properties:
        connectionString:
          description: "An ODBC connection string. Type: string, SecureString or
            AzureKeyVaultSecretReference."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
    MarketoLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Marketo server linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/MarketoLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Marketo
    MarketoLinkedServiceTypeProperties:
      description: Marketo server linked service properties.
      properties:
        clientId:
          description: The client Id of your Marketo service.
          type: object
        clientSecret:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        endpoint:
          description: The endpoint of the Marketo server. (i.e. 123-ABC-321.mktorest.com)
          type: object
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using
            HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's
            certificate to match the host name of the server when connecting
            over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when
            connecting over SSL. The default value is true.
          type: object
      required:
        - endpoint
        - clientId
    MongoDbLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Linked service for MongoDb data source.
      properties:
        typeProperties:
          $ref: "#/components/schemas/MongoDbLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: MongoDb
    MongoDbLinkedServiceTypeProperties:
      description: MongoDB linked service properties.
      properties:
        allowSelfSignedServerCert:
          description: "Specifies whether to allow self-signed certificates from the
            server. The default value is false. Type: boolean (or Expression
            with resultType boolean)."
          type: object
        authSource:
          description: "Database to verify the username and password. Type: string (or
            Expression with resultType string)."
          type: object
        authenticationType:
          description: The authentication type to be used to connect to the MongoDB
            database.
          enum:
            - Basic
            - Anonymous
          type: string
          x-ms-enum:
            modelAsString: true
            name: MongoDbAuthenticationType
        databaseName:
          description: "The name of the MongoDB database that you want to access. Type:
            string (or Expression with resultType string)."
          type: object
        enableSsl:
          description: "Specifies whether the connections to the server are encrypted using
            SSL. The default value is false. Type: boolean (or Expression with
            resultType boolean)."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        port:
          description: "The TCP port number that the MongoDB server uses to listen for
            client connections. The default value is 27017. Type: integer (or
            Expression with resultType integer), minimum: 0."
          type: object
        server:
          description: "The IP address or server name of the MongoDB server. Type: string
            (or Expression with resultType string)."
          type: object
        username:
          description: "Username for authentication. Type: string (or Expression with
            resultType string)."
          type: object
      required:
        - server
        - databaseName
    MySqlLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Linked service for MySQL data source.
      properties:
        typeProperties:
          $ref: "#/components/schemas/MySqlLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: MySql
    MySqlLinkedServiceTypeProperties:
      description: MySQL linked service properties.
      properties:
        connectionString:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
      required:
        - connectionString
    NetezzaLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Netezza linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/NetezzaLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Netezza
    NetezzaLinkedServiceTypeProperties:
      description: Netezza linked service properties.
      properties:
        connectionString:
          description: "An ODBC connection string. Type: string, SecureString or
            AzureKeyVaultSecretReference."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
    ODataLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Open Data Protocol (OData) linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/ODataLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: OData
    ODataLinkedServiceTypeProperties:
      description: OData linked service properties.
      properties:
        authenticationType:
          description: Type of authentication used to connect to the OData service.
          enum:
            - Basic
            - Anonymous
          type: string
          x-ms-enum:
            modelAsString: true
            name: ODataAuthenticationType
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        url:
          description: "The URL of the OData service endpoint. Type: string (or Expression
            with resultType string)."
          type: object
        userName:
          description: "User name of the OData service. Type: string (or Expression with
            resultType string)."
          type: object
      required:
        - url
    OdbcLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Open Database Connectivity (ODBC) linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/OdbcLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Odbc
    OdbcLinkedServiceTypeProperties:
      description: ODBC linked service properties.
      properties:
        authenticationType:
          description: "Type of authentication used to connect to the ODBC data store.
            Possible values are: Anonymous and Basic. Type: string (or
            Expression with resultType string)."
          type: object
        connectionString:
          description: "The non-access credential portion of the connection string as well
            as an optional encrypted credential. Type: string, SecureString or
            AzureKeyVaultSecretReference."
          type: object
        credential:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        userName:
          description: "User name for Basic authentication. Type: string (or Expression
            with resultType string)."
          type: object
      required:
        - connectionString
    OracleLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Oracle database.
      properties:
        typeProperties:
          $ref: "#/components/schemas/OracleLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Oracle
    OracleLinkedServiceTypeProperties:
      description: Oracle database linked service properties.
      properties:
        connectionString:
          description: "The connection string. Type: string, SecureString or
            AzureKeyVaultSecretReference."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
      required:
        - connectionString
    PaypalLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Paypal Service linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/PaypalLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Paypal
    PaypalLinkedServiceTypeProperties:
      description: Paypal Service linked service properties.
      properties:
        clientId:
          description: The client ID associated with your PayPal application.
          type: object
        clientSecret:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        host:
          description: The URL of the PayPal instance. (i.e. api.sandbox.paypal.com)
          type: object
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using
            HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's
            certificate to match the host name of the server when connecting
            over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when
            connecting over SSL. The default value is true.
          type: object
      required:
        - host
        - clientId
    PhoenixLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Phoenix server linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/PhoenixLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Phoenix
    PhoenixLinkedServiceTypeProperties:
      description: Phoenix server linked service properties.
      properties:
        allowHostNameCNMismatch:
          description: Specifies whether to require a CA-issued SSL certificate name to
            match the host name of the server when connecting over SSL. The
            default value is false.
          type: object
        allowSelfSignedServerCert:
          description: Specifies whether to allow self-signed certificates from the server.
            The default value is false.
          type: object
        authenticationType:
          description: The authentication mechanism used to connect to the Phoenix server.
          enum:
            - Anonymous
            - UsernameAndPassword
            - WindowsAzureHDInsightService
          type: string
          x-ms-enum:
            modelAsString: true
            name: PhoenixAuthenticationType
        enableSsl:
          description: Specifies whether the connections to the server are encrypted using
            SSL. The default value is false.
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        host:
          description: The IP address or host name of the Phoenix server. (i.e.
            192.168.222.160)
          type: object
        httpPath:
          description: The partial URL corresponding to the Phoenix server. (i.e.
            /gateway/sandbox/phoenix/version). The default value is hbasephoenix
            if using WindowsAzureHDInsightService.
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        port:
          description: The TCP port that the Phoenix server uses to listen for client
            connections. The default value is 8765.
          type: object
        trustedCertPath:
          description: The full path of the .pem file containing trusted CA certificates
            for verifying the server when connecting over SSL. This property can
            only be set when using SSL on self-hosted IR. The default value is
            the cacerts.pem file installed with the IR.
          type: object
        useSystemTrustStore:
          description: Specifies whether to use a CA certificate from the system trust
            store or from a specified PEM file. The default value is false.
          type: object
        username:
          description: The user name used to connect to the Phoenix server.
          type: object
      required:
        - host
        - authenticationType
    PostgreSqlLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Linked service for PostgreSQL data source.
      properties:
        typeProperties:
          $ref: "#/components/schemas/PostgreSqlLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: PostgreSql
    PostgreSqlLinkedServiceTypeProperties:
      description: PostgreSQL linked service properties.
      properties:
        connectionString:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
      required:
        - connectionString
    PrestoLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Presto server linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/PrestoLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Presto
    PrestoLinkedServiceTypeProperties:
      description: Presto server linked service properties.
      properties:
        allowHostNameCNMismatch:
          description: Specifies whether to require a CA-issued SSL certificate name to
            match the host name of the server when connecting over SSL. The
            default value is false.
          type: object
        allowSelfSignedServerCert:
          description: Specifies whether to allow self-signed certificates from the server.
            The default value is false.
          type: object
        authenticationType:
          description: The authentication mechanism used to connect to the Presto server.
          enum:
            - Anonymous
            - LDAP
          type: string
          x-ms-enum:
            modelAsString: true
            name: PrestoAuthenticationType
        catalog:
          description: The catalog context for all request against the server.
          type: object
        enableSsl:
          description: Specifies whether the connections to the server are encrypted using
            SSL. The default value is false.
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        host:
          description: The IP address or host name of the Presto server. (i.e.
            192.168.222.160)
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        port:
          description: The TCP port that the Presto server uses to listen for client
            connections. The default value is 8080.
          type: object
        serverVersion:
          description: The version of the Presto server. (i.e. 0.148-t)
          type: object
        timeZoneID:
          description: The local time zone used by the connection. Valid values for this
            option are specified in the IANA Time Zone Database. The default
            value is the system time zone.
          type: object
        trustedCertPath:
          description: The full path of the .pem file containing trusted CA certificates
            for verifying the server when connecting over SSL. This property can
            only be set when using SSL on self-hosted IR. The default value is
            the cacerts.pem file installed with the IR.
          type: object
        useSystemTrustStore:
          description: Specifies whether to use a CA certificate from the system trust
            store or from a specified PEM file. The default value is false.
          type: object
        username:
          description: The user name used to connect to the Presto server.
          type: object
      required:
        - host
        - serverVersion
        - catalog
        - authenticationType
    QuickBooksLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: QuickBooks server linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/QuickBooksLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: QuickBooks
    QuickBooksLinkedServiceTypeProperties:
      description: QuickBooks server linked service properties.
      properties:
        accessToken:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        accessTokenSecret:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        companyId:
          description: The company ID of the QuickBooks company to authorize.
          type: object
        consumerKey:
          description: The consumer key for OAuth 1.0 authentication.
          type: object
        consumerSecret:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        endpoint:
          description: The endpoint of the QuickBooks server. (i.e.
            quickbooks.api.intuit.com)
          type: object
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using
            HTTPS. The default value is true.
          type: object
      required:
        - endpoint
        - companyId
        - consumerKey
        - consumerSecret
        - accessToken
        - accessTokenSecret
    ResponsysLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Responsys linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/ResponsysLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Responsys
    ResponsysLinkedServiceTypeProperties:
      description: Responsys linked service properties.
      properties:
        clientId:
          description: "The client ID associated with the Responsys application. Type:
            string (or Expression with resultType string)."
          type: object
        clientSecret:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        endpoint:
          description: The endpoint of the Responsys server.
          type: object
        useEncryptedEndpoints:
          description: "Specifies whether the data source endpoints are encrypted using
            HTTPS. The default value is true. Type: boolean (or Expression with
            resultType boolean)."
          type: object
        useHostVerification:
          description: "Specifies whether to require the host name in the server's
            certificate to match the host name of the server when connecting
            over SSL. The default value is true. Type: boolean (or Expression
            with resultType boolean)."
          type: object
        usePeerVerification:
          description: "Specifies whether to verify the identity of the server when
            connecting over SSL. The default value is true. Type: boolean (or
            Expression with resultType boolean)."
          type: object
      required:
        - endpoint
        - clientId
    SalesforceLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Linked service for Salesforce.
      properties:
        typeProperties:
          $ref: "#/components/schemas/SalesforceLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Salesforce
    SalesforceLinkedServiceTypeProperties:
      description: Salesforce linked service properties.
      properties:
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        environmentUrl:
          description: "The URL of Salesforce instance. Default is
            'https://login.salesforce.com'. To copy data from sandbox, specify
            'https://test.salesforce.com'. To copy data from custom domain,
            specify, for example, 'https://[domain].my.salesforce.com'. Type:
            string (or Expression with resultType string)."
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        securityToken:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        username:
          description: "The username for Basic authentication of the Salesforce instance.
            Type: string (or Expression with resultType string)."
          type: object
    SalesforceMarketingCloudLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Salesforce Marketing Cloud linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/SalesforceMarketingCloudLinkedServiceTypeProp\
            erties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: SalesforceMarketingCloud
    SalesforceMarketingCloudLinkedServiceTypeProperties:
      description: Salesforce Marketing Cloud linked service properties.
      properties:
        clientId:
          description: "The client ID associated with the Salesforce Marketing Cloud
            application. Type: string (or Expression with resultType string)."
          type: object
        clientSecret:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        useEncryptedEndpoints:
          description: "Specifies whether the data source endpoints are encrypted using
            HTTPS. The default value is true. Type: boolean (or Expression with
            resultType boolean)."
          type: object
        useHostVerification:
          description: "Specifies whether to require the host name in the server's
            certificate to match the host name of the server when connecting
            over SSL. The default value is true. Type: boolean (or Expression
            with resultType boolean)."
          type: object
        usePeerVerification:
          description: "Specifies whether to verify the identity of the server when
            connecting over SSL. The default value is true. Type: boolean (or
            Expression with resultType boolean)."
          type: object
      required:
        - clientId
    SapBWLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: SAP Business Warehouse Linked Service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/SapBWLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: SapBW
    SapBWLinkedServiceTypeProperties:
      description: Properties specific to this linked service type.
      properties:
        clientId:
          description: "Client ID of the client on the BW system. (Usually a three-digit
            decimal number represented as a string) Type: string (or Expression
            with resultType string)."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        server:
          description: "Host name of the SAP BW instance. Type: string (or Expression with
            resultType string)."
          type: object
        systemNumber:
          description: "System number of the BW system. (Usually a two-digit decimal number
            represented as a string.) Type: string (or Expression with
            resultType string)."
          type: object
        userName:
          description: "Username to access the SAP BW server. Type: string (or Expression
            with resultType string)."
          type: object
      required:
        - server
        - systemNumber
        - clientId
    SapCloudForCustomerLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Linked service for SAP Cloud for Customer.
      properties:
        typeProperties:
          $ref: "#/components/schemas/SapCloudForCustomerLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: SapCloudForCustomer
    SapCloudForCustomerLinkedServiceTypeProperties:
      description: SAP Cloud for Customer linked service properties.
      properties:
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Either
            encryptedCredential or username/password must be provided. Type:
            string (or Expression with resultType string)."
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        url:
          description: "The URL of SAP Cloud for Customer OData API. For example,
            '[https://[tenantname].crm.ondemand.com/sap/c4c/odata/v1]'. Type:
            string (or Expression with resultType string)."
          type: object
        username:
          description: "The username for Basic authentication. Type: string (or Expression
            with resultType string)."
          type: object
      required:
        - url
    SapEccLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Linked service for SAP ERP Central Component(SAP ECC).
      properties:
        typeProperties:
          $ref: "#/components/schemas/SapEccLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: SapEcc
    SapEccLinkedServiceTypeProperties:
      description: SAP ECC linked service properties.
      properties:
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Either
            encryptedCredential or username/password must be provided. Type:
            string (or Expression with resultType string)."
          type: string
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        url:
          description: "The URL of SAP ECC OData API. For example,
            '[https://hostname:port/sap/opu/odata/sap/servicename/]'. Type:
            string (or Expression with resultType string)."
          type: string
        username:
          description: "The username for Basic authentication. Type: string (or Expression
            with resultType string)."
          type: string
      required:
        - url
    SapHanaLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: SAP HANA Linked Service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/SapHanaLinkedServiceProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: SapHana
    SapHanaLinkedServiceProperties:
      description: Properties specific to this linked service type.
      properties:
        authenticationType:
          description: The authentication type to be used to connect to the SAP HANA server.
          enum:
            - Basic
            - Windows
          type: string
          x-ms-enum:
            modelAsString: true
            name: SapHanaAuthenticationType
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        server:
          description: "Host name of the SAP HANA server. Type: string (or Expression with
            resultType string)."
          type: object
        userName:
          description: "Username to access the SAP HANA server. Type: string (or Expression
            with resultType string)."
          type: object
      required:
        - server
    ServiceNowLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: ServiceNow server linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/ServiceNowLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: ServiceNow
    ServiceNowLinkedServiceTypeProperties:
      description: ServiceNow server linked service properties.
      properties:
        authenticationType:
          description: The authentication type to use.
          enum:
            - Basic
            - OAuth2
          type: string
          x-ms-enum:
            modelAsString: true
            name: ServiceNowAuthenticationType
        clientId:
          description: The client id for OAuth2 authentication.
          type: object
        clientSecret:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        endpoint:
          description: The endpoint of the ServiceNow server. (i.e.
            <instance>.service-now.com)
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using
            HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's
            certificate to match the host name of the server when connecting
            over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when
            connecting over SSL. The default value is true.
          type: object
        username:
          description: The user name used to connect to the ServiceNow server for Basic and
            OAuth2 authentication.
          type: object
      required:
        - endpoint
        - authenticationType
    SftpServerLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: "A linked service for an SSH File Transfer Protocol (SFTP) server. "
      properties:
        typeProperties:
          $ref: "#/components/schemas/SftpServerLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Sftp
    SftpServerLinkedServiceTypeProperties:
      description: Properties specific to this linked service type.
      properties:
        authenticationType:
          description: The authentication type to be used to connect to the FTP server.
          enum:
            - Basic
            - SshPublicKey
          type: string
          x-ms-enum:
            modelAsString: true
            name: SftpAuthenticationType
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        host:
          description: "The SFTP server host name. Type: string (or Expression with
            resultType string)."
          type: object
        hostKeyFingerprint:
          description: "The host key finger-print of the SFTP server. When
            SkipHostKeyValidation is false, HostKeyFingerprint should be
            specified. Type: string (or Expression with resultType string)."
          type: object
        passPhrase:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        port:
          description: "The TCP port number that the SFTP server uses to listen for client
            connections. Default value is 22. Type: integer (or Expression with
            resultType integer), minimum: 0."
          type: object
        privateKeyContent:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        privateKeyPath:
          description: "The SSH private key file path for SshPublicKey authentication. Only
            valid for on-premises copy. For on-premises copy with SshPublicKey
            authentication, either PrivateKeyPath or PrivateKeyContent should be
            specified. SSH private key should be OpenSSH format. Type: string
            (or Expression with resultType string)."
          type: object
        skipHostKeyValidation:
          description: "If true, skip the SSH host key validation. Default value is false.
            Type: boolean (or Expression with resultType boolean)."
          type: object
        userName:
          description: "The username used to log on to the SFTP server. Type: string (or
            Expression with resultType string)."
          type: object
      required:
        - host
    ShopifyLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Shopify Service linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/ShopifyLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Shopify
    ShopifyLinkedServiceTypeProperties:
      description: Shopify Service linked service properties.
      properties:
        accessToken:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        host:
          description: The endpoint of the Shopify server. (i.e. mystore.myshopify.com)
          type: object
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using
            HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's
            certificate to match the host name of the server when connecting
            over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when
            connecting over SSL. The default value is true.
          type: object
      required:
        - host
    SparkLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Spark Server linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/SparkLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Spark
    SparkLinkedServiceTypeProperties:
      description: Spark Server linked service properties.
      properties:
        allowHostNameCNMismatch:
          description: Specifies whether to require a CA-issued SSL certificate name to
            match the host name of the server when connecting over SSL. The
            default value is false.
          type: object
        allowSelfSignedServerCert:
          description: Specifies whether to allow self-signed certificates from the server.
            The default value is false.
          type: object
        authenticationType:
          description: The authentication method used to access the Spark server.
          enum:
            - Anonymous
            - Username
            - UsernameAndPassword
            - WindowsAzureHDInsightService
          type: string
          x-ms-enum:
            modelAsString: true
            name: SparkAuthenticationType
        enableSsl:
          description: Specifies whether the connections to the server are encrypted using
            SSL. The default value is false.
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        host:
          description: IP address or host name of the Spark server
          type: object
        httpPath:
          description: The partial URL corresponding to the Spark server.
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        port:
          description: The TCP port that the Spark server uses to listen for client
            connections.
          type: object
        serverType:
          description: The type of Spark server.
          enum:
            - SharkServer
            - SharkServer2
            - SparkThriftServer
          type: string
          x-ms-enum:
            modelAsString: true
            name: SparkServerType
        thriftTransportProtocol:
          description: The transport protocol to use in the Thrift layer.
          enum:
            - Binary
            - SASL
            - "HTTP "
          type: string
          x-ms-enum:
            modelAsString: true
            name: SparkThriftTransportProtocol
        trustedCertPath:
          description: The full path of the .pem file containing trusted CA certificates
            for verifying the server when connecting over SSL. This property can
            only be set when using SSL on self-hosted IR. The default value is
            the cacerts.pem file installed with the IR.
          type: object
        useSystemTrustStore:
          description: Specifies whether to use a CA certificate from the system trust
            store or from a specified PEM file. The default value is false.
          type: object
        username:
          description: The user name that you use to access Spark Server.
          type: object
      required:
        - host
        - port
        - authenticationType
    SqlServerLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: SQL Server linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/SqlServerLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: SqlServer
    SqlServerLinkedServiceTypeProperties:
      description: SQL Server linked service properties.
      properties:
        connectionString:
          description: "The connection string. Type: string, SecureString or
            AzureKeyVaultSecretReference."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        userName:
          description: "The on-premises Windows authentication user name. Type: string (or
            Expression with resultType string)."
          type: object
      required:
        - connectionString
    SquareLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Square Service linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/SquareLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Square
    SquareLinkedServiceTypeProperties:
      description: Square Service linked service properties.
      properties:
        clientId:
          description: The client ID associated with your Square application.
          type: object
        clientSecret:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        host:
          description: The URL of the Square instance. (i.e. mystore.mysquare.com)
          type: object
        redirectUri:
          description: The redirect URL assigned in the Square application dashboard. (i.e.
            http://localhost:2500)
          type: object
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using
            HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's
            certificate to match the host name of the server when connecting
            over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when
            connecting over SSL. The default value is true.
          type: object
      required:
        - host
        - clientId
        - redirectUri
    SybaseLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Linked service for Sybase data source.
      properties:
        typeProperties:
          $ref: "#/components/schemas/SybaseLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Sybase
    SybaseLinkedServiceTypeProperties:
      description: Sybase linked service properties.
      properties:
        authenticationType:
          description: AuthenticationType to be used for connection.
          enum:
            - Basic
            - Windows
          type: string
          x-ms-enum:
            modelAsString: true
            name: SybaseAuthenticationType
        database:
          description: "Database name for connection. Type: string (or Expression with
            resultType string)."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        schema:
          description: "Schema name for connection. Type: string (or Expression with
            resultType string)."
          type: object
        server:
          description: "Server name for connection. Type: string (or Expression with
            resultType string)."
          type: object
        username:
          description: "Username for authentication. Type: string (or Expression with
            resultType string)."
          type: object
      required:
        - server
        - database
    TeradataLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Linked service for Teradata data source.
      properties:
        typeProperties:
          $ref: "#/components/schemas/TeradataLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Teradata
    TeradataLinkedServiceTypeProperties:
      description: Teradata linked service properties.
      properties:
        authenticationType:
          description: AuthenticationType to be used for connection.
          enum:
            - Basic
            - Windows
          type: string
          x-ms-enum:
            modelAsString: true
            name: TeradataAuthenticationType
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        server:
          description: "Server name for connection. Type: string (or Expression with
            resultType string)."
          type: object
        username:
          description: "Username for authentication. Type: string (or Expression with
            resultType string)."
          type: object
      required:
        - server
    VerticaLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Vertica linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/VerticaLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Vertica
    VerticaLinkedServiceTypeProperties:
      description: Vertica linked service properties.
      properties:
        connectionString:
          description: "An ODBC connection string. Type: string, SecureString or
            AzureKeyVaultSecretReference."
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
    WebAnonymousAuthentication:
      allOf:
        - $ref: "#/components/schemas/WebLinkedServiceTypeProperties"
      description: A WebLinkedService that uses anonymous authentication to communicate
        with an HTTP endpoint.
      x-ms-discriminator-value: Anonymous
    WebBasicAuthentication:
      allOf:
        - $ref: "#/components/schemas/WebLinkedServiceTypeProperties"
      description: A WebLinkedService that uses basic authentication to communicate with an
        HTTP endpoint.
      properties:
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        username:
          description: "User name for Basic authentication. Type: string (or Expression
            with resultType string)."
          type: object
      required:
        - username
        - password
      x-ms-discriminator-value: Basic
    WebClientCertificateAuthentication:
      allOf:
        - $ref: "#/components/schemas/WebLinkedServiceTypeProperties"
      description: A WebLinkedService that uses client certificate based authentication to
        communicate with an HTTP endpoint. This scheme follows mutual
        authentication; the server must also provide valid credentials to the
        client.
      properties:
        password:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        pfx:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
      required:
        - pfx
        - password
      x-ms-discriminator-value: ClientCertificate
    WebLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Web linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/WebLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Web
    WebLinkedServiceTypeProperties:
      description: Base definition of WebLinkedServiceTypeProperties, this typeProperties
        is polymorphic based on authenticationType, so not flattened in SDK
        models.
      discriminator:
        propertyName: authenticationType
      properties:
        authenticationType:
          description: Type of authentication used to connect to the web table source.
          enum:
            - Basic
            - Anonymous
            - ClientCertificate
          type: string
          x-ms-enum:
            modelAsString: true
            name: WebAuthenticationType
        url:
          description: "The URL of the web service endpoint, e.g. http://www.microsoft.com
            . Type: string (or Expression with resultType string)."
          type: object
      required:
        - authenticationType
        - url
      type: object
    XeroLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Xero Service linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/XeroLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Xero
    XeroLinkedServiceTypeProperties:
      description: Xero Service linked service properties.
      properties:
        consumerKey:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        host:
          description: The endpoint of the Xero server. (i.e. api.xero.com)
          type: object
        privateKey:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using
            HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's
            certificate to match the host name of the server when connecting
            over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when
            connecting over SSL. The default value is true.
          type: object
      required:
        - host
    ZohoLinkedService:
      allOf:
        - $ref: "#/components/schemas/LinkedService"
      description: Zoho server linked service.
      properties:
        typeProperties:
          $ref: "#/components/schemas/ZohoLinkedServiceTypeProperties"
      required:
        - typeProperties
      type: object
      x-ms-discriminator-value: Zoho
    ZohoLinkedServiceTypeProperties:
      description: Zoho server linked service properties.
      properties:
        accessToken:
          description: The base definition of a secret type.
          discriminator:
            propertyName: type
          properties:
            type:
              description: Type of the secret.
              type: string
          required:
            - type
          type: object
        encryptedCredential:
          description: "The encrypted credential used for authentication. Credentials are
            encrypted using the integration runtime credential manager. Type:
            string (or Expression with resultType string)."
          type: object
        endpoint:
          description: The endpoint of the Zoho server. (i.e. crm.zoho.com/crm/private)
          type: object
        useEncryptedEndpoints:
          description: Specifies whether the data source endpoints are encrypted using
            HTTPS. The default value is true.
          type: object
        useHostVerification:
          description: Specifies whether to require the host name in the server's
            certificate to match the host name of the server when connecting
            over SSL. The default value is true.
          type: object
        usePeerVerification:
          description: Specifies whether to verify the identity of the server when
            connecting over SSL. The default value is true.
          type: object
      required:
        - endpoint
