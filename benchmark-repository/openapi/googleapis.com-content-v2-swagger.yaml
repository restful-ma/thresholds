openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: Manages product items, inventory, and Merchant Center accounts for Google
    Shopping.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Content API for Shopping
  version: v2
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - ecommerce
  x-logo:
    url: https://cloud.google.com/_static/images/new-gcp-logo.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://www.googleapis.com/discovery/v1/apis/content/v2/rest
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: content
externalDocs:
  url: https://developers.google.com/shopping-content
tags:
  - name: accounts
  - name: accountstatuses
  - name: accounttax
  - name: datafeeds
  - name: datafeedstatuses
  - name: inventory
  - name: liasettings
  - name: orderinvoices
  - name: orderpayments
  - name: orderreports
  - name: orderreturns
  - name: orders
  - name: pos
  - name: products
  - name: productstatuses
  - name: shippingsettings
paths:
  /accounts/authinfo:
    get:
      description: Returns information about the authenticated user.
      operationId: content.accounts.authinfo
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AccountsAuthInfoResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  /accounts/batch:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Retrieves, inserts, updates, and deletes multiple Merchant Center
        (sub-)accounts in a single request.
      operationId: content.accounts.custombatch
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountsCustomBatchRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AccountsCustomBatchResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
  /accountstatuses/batch:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Retrieves multiple Merchant Center account statuses in a single request.
      operationId: content.accountstatuses.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountstatusesCustomBatchRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AccountstatusesCustomBatchResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accountstatuses
  /accounttax/batch:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Retrieves and updates tax settings of multiple accounts in a single
        request.
      operationId: content.accounttax.custombatch
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccounttaxCustomBatchRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AccounttaxCustomBatchResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounttax
  /datafeeds/batch:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Deletes, fetches, gets, inserts and updates multiple datafeeds in a
        single request.
      operationId: content.datafeeds.custombatch
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatafeedsCustomBatchRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DatafeedsCustomBatchResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeeds
  /datafeedstatuses/batch:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Gets multiple Merchant Center datafeed statuses in a single request.
      operationId: content.datafeedstatuses.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatafeedstatusesCustomBatchRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DatafeedstatusesCustomBatchResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeedstatuses
  /inventory/batch:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Updates price and availability for multiple products or stores in a
        single request. This operation does not update the expiration date of
        the products.
      operationId: content.inventory.custombatch
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InventoryCustomBatchRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InventoryCustomBatchResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - inventory
  /liasettings/batch:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Retrieves and/or updates the LIA settings of multiple accounts in a
        single request.
      operationId: content.liasettings.custombatch
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LiasettingsCustomBatchRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LiasettingsCustomBatchResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
  /liasettings/posdataproviders:
    get:
      description: Retrieves the list of POS data providers that have active settings for
        the all eiligible countries.
      operationId: content.liasettings.listposdataproviders
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LiasettingsListPosDataProvidersResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  /orders/batch:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Retrieves or modifies multiple orders in a single request.
      operationId: content.orders.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersCustomBatchRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersCustomBatchResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  /pos/batch:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Batches multiple POS-related calls in a single request.
      operationId: content.pos.custombatch
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PosCustomBatchRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PosCustomBatchResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - pos
  /products/batch:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Retrieves, inserts, and deletes multiple products in a single request.
      operationId: content.products.custombatch
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductsCustomBatchRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ProductsCustomBatchResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - products
  /productstatuses/batch:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Gets the statuses of multiple products in a single request.
      operationId: content.productstatuses.custombatch
      parameters:
        - description: Flag to include full product data in the results of this request.
            The default value is false.
          in: query
          name: includeAttributes
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductstatusesCustomBatchRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ProductstatusesCustomBatchResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - productstatuses
  /shippingsettings/batch:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Retrieves and updates the shipping settings of multiple accounts in a
        single request.
      operationId: content.shippingsettings.custombatch
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShippingsettingsCustomBatchRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ShippingsettingsCustomBatchResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - shippingsettings
  "/{merchantId}/accounts":
    get:
      description: Lists the sub-accounts in your Merchant Center account.
      operationId: content.accounts.list
      parameters:
        - description: The maximum number of accounts to return in the response, used for
            paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The ID of the managing account. This must be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AccountsListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a Merchant Center sub-account.
      operationId: content.accounts.insert
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
        - description: The ID of the managing account. This must be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Account"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Account"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
  "/{merchantId}/accounts/{accountId}":
    delete:
      description: Deletes a Merchant Center sub-account.
      operationId: content.accounts.delete
      parameters:
        - description: The ID of the account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
        - description: Flag to delete sub-accounts with products. The default value is
            false.
          in: query
          name: force
          schema:
            type: boolean
            default: false
        - description: The ID of the managing account. This must be a multi-client account,
            and accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
    get:
      description: Retrieves a Merchant Center account.
      operationId: content.accounts.get
      parameters:
        - description: The ID of the account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The ID of the managing account. If this parameter is not the same as
            accountId, then this account must be a multi-client account and
            accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Account"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates a Merchant Center account. This method supports patch semantics.
      operationId: content.accounts.patch
      parameters:
        - description: The ID of the account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
        - description: The ID of the managing account. If this parameter is not the same as
            accountId, then this account must be a multi-client account and
            accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Account"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Account"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
    put:
      description: Updates a Merchant Center account.
      operationId: content.accounts.update
      parameters:
        - description: The ID of the account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
        - description: The ID of the managing account. If this parameter is not the same as
            accountId, then this account must be a multi-client account and
            accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Account"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Account"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
  "/{merchantId}/accounts/{accountId}/claimwebsite":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Claims the website of a Merchant Center sub-account.
      operationId: content.accounts.claimwebsite
      parameters:
        - description: The ID of the account whose website is claimed.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The ID of the managing account. If this parameter is not the same as
            accountId, then this account must be a multi-client account and
            accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Only available to selected merchants. When set to True, this flag
            removes any existing claim on the requested website by another
            account and replaces it with a claim from this account.
          in: query
          name: overwrite
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AccountsClaimWebsiteResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
  "/{merchantId}/accounts/{accountId}/link":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Performs an action on a link between two Merchant Center accounts,
        namely accountId and linkedAccountId.
      operationId: content.accounts.link
      parameters:
        - description: The ID of the account that should be linked.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The ID of the managing account. If this parameter is not the same as
            accountId, then this account must be a multi-client account and
            accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountsLinkRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AccountsLinkResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
  "/{merchantId}/accountstatuses":
    get:
      description: Lists the statuses of the sub-accounts in your Merchant Center account.
      operationId: content.accountstatuses.list
      parameters:
        - description: If set, only issues for the specified destinations are returned,
            otherwise only issues for the Shopping destination.
          in: query
          name: destinations
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: The maximum number of account statuses to return in the response,
            used for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The ID of the managing account. This must be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AccountstatusesListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accountstatuses
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{merchantId}/accountstatuses/{accountId}":
    get:
      description: Retrieves the status of a Merchant Center account. No itemLevelIssues
        are returned for multi-client accounts.
      operationId: content.accountstatuses.get
      parameters:
        - description: The ID of the account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: If set, only issues for the specified destinations are returned,
            otherwise only issues for the Shopping destination.
          in: query
          name: destinations
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: The ID of the managing account. If this parameter is not the same as
            accountId, then this account must be a multi-client account and
            accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AccountStatus"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accountstatuses
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{merchantId}/accounttax":
    get:
      description: Lists the tax settings of the sub-accounts in your Merchant Center
        account.
      operationId: content.accounttax.list
      parameters:
        - description: The maximum number of tax settings to return in the response, used
            for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The ID of the managing account. This must be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AccounttaxListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounttax
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{merchantId}/accounttax/{accountId}":
    get:
      description: Retrieves the tax settings of the account.
      operationId: content.accounttax.get
      parameters:
        - description: The ID of the account for which to get/update account tax settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The ID of the managing account. If this parameter is not the same as
            accountId, then this account must be a multi-client account and
            accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AccountTax"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounttax
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates the tax settings of the account. This method supports patch
        semantics.
      operationId: content.accounttax.patch
      parameters:
        - description: The ID of the account for which to get/update account tax settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
        - description: The ID of the managing account. If this parameter is not the same as
            accountId, then this account must be a multi-client account and
            accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/AccountTax"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AccountTax"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounttax
    put:
      description: Updates the tax settings of the account.
      operationId: content.accounttax.update
      parameters:
        - description: The ID of the account for which to get/update account tax settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
        - description: The ID of the managing account. If this parameter is not the same as
            accountId, then this account must be a multi-client account and
            accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/AccountTax"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/AccountTax"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounttax
  "/{merchantId}/datafeeds":
    get:
      description: Lists the configurations for datafeeds in your Merchant Center account.
      operationId: content.datafeeds.list
      parameters:
        - description: The maximum number of products to return in the response, used for
            paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The ID of the account that manages the datafeeds. This account
            cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DatafeedsListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeeds
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Registers a datafeed configuration with your Merchant Center account.
      operationId: content.datafeeds.insert
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
        - description: The ID of the account that manages the datafeed. This account cannot
            be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Datafeed"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Datafeed"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeeds
  "/{merchantId}/datafeeds/{datafeedId}":
    delete:
      description: Deletes a datafeed configuration from your Merchant Center account.
      operationId: content.datafeeds.delete
      parameters:
        - description: The ID of the datafeed.
          in: path
          name: datafeedId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
        - description: The ID of the account that manages the datafeed. This account cannot
            be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeeds
    get:
      description: Retrieves a datafeed configuration from your Merchant Center account.
      operationId: content.datafeeds.get
      parameters:
        - description: The ID of the datafeed.
          in: path
          name: datafeedId
          required: true
          schema:
            type: string
        - description: The ID of the account that manages the datafeed. This account cannot
            be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Datafeed"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeeds
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates a datafeed configuration of your Merchant Center account. This
        method supports patch semantics.
      operationId: content.datafeeds.patch
      parameters:
        - description: The ID of the datafeed.
          in: path
          name: datafeedId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
        - description: The ID of the account that manages the datafeed. This account cannot
            be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Datafeed"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Datafeed"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeeds
    put:
      description: Updates a datafeed configuration of your Merchant Center account.
      operationId: content.datafeeds.update
      parameters:
        - description: The ID of the datafeed.
          in: path
          name: datafeedId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
        - description: The ID of the account that manages the datafeed. This account cannot
            be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Datafeed"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Datafeed"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeeds
  "/{merchantId}/datafeeds/{datafeedId}/fetchNow":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Invokes a fetch for the datafeed in your Merchant Center account.
      operationId: content.datafeeds.fetchnow
      parameters:
        - description: The ID of the datafeed to be fetched.
          in: path
          name: datafeedId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
        - description: The ID of the account that manages the datafeed. This account cannot
            be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DatafeedsFetchNowResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeeds
  "/{merchantId}/datafeedstatuses":
    get:
      description: Lists the statuses of the datafeeds in your Merchant Center account.
      operationId: content.datafeedstatuses.list
      parameters:
        - description: The maximum number of products to return in the response, used for
            paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The ID of the account that manages the datafeeds. This account
            cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DatafeedstatusesListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeedstatuses
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{merchantId}/datafeedstatuses/{datafeedId}":
    get:
      description: Retrieves the status of a datafeed from your Merchant Center account.
      operationId: content.datafeedstatuses.get
      parameters:
        - description: The country for which to get the datafeed status. If this parameter
            is provided then language must also be provided. Note that this
            parameter is required for feeds targeting multiple countries and
            languages, since a feed may have a different status for each target.
          in: query
          name: country
          schema:
            type: string
        - description: The ID of the datafeed.
          in: path
          name: datafeedId
          required: true
          schema:
            type: string
        - description: The language for which to get the datafeed status. If this parameter
            is provided then country must also be provided. Note that this
            parameter is required for feeds targeting multiple countries and
            languages, since a feed may have a different status for each target.
          in: query
          name: language
          schema:
            type: string
        - description: The ID of the account that manages the datafeed. This account cannot
            be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DatafeedStatus"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeedstatuses
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{merchantId}/inventory/{storeCode}/products/{productId}":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Updates price and availability of a product in your Merchant Center
        account.
      operationId: content.inventory.set
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
        - description: The ID of the account that contains the product. This account cannot
            be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The REST ID of the product for which to update price and
            availability.
          in: path
          name: productId
          required: true
          schema:
            type: string
        - description: The code of the store for which to update price and availability.
            Use online to update price and availability of an online product.
          in: path
          name: storeCode
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InventorySetRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/InventorySetResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - inventory
  "/{merchantId}/liasettings":
    get:
      description: Lists the LIA settings of the sub-accounts in your Merchant Center
        account.
      operationId: content.liasettings.list
      parameters:
        - description: The maximum number of LIA settings to return in the response, used
            for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The ID of the managing account. This must be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LiasettingsListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{merchantId}/liasettings/{accountId}":
    get:
      description: Retrieves the LIA settings of the account.
      operationId: content.liasettings.get
      parameters:
        - description: The ID of the account for which to get or update LIA settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The ID of the managing account. If this parameter is not the same as
            accountId, then this account must be a multi-client account and
            accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LiaSettings"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates the LIA settings of the account. This method supports patch
        semantics.
      operationId: content.liasettings.patch
      parameters:
        - description: The ID of the account for which to get or update LIA settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
        - description: The ID of the managing account. If this parameter is not the same as
            accountId, then this account must be a multi-client account and
            accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/LiaSettings"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LiaSettings"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
    put:
      description: Updates the LIA settings of the account.
      operationId: content.liasettings.update
      parameters:
        - description: The ID of the account for which to get or update LIA settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
        - description: The ID of the managing account. If this parameter is not the same as
            accountId, then this account must be a multi-client account and
            accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/LiaSettings"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LiaSettings"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
  "/{merchantId}/liasettings/{accountId}/accessiblegmbaccounts":
    get:
      description: Retrieves the list of accessible Google My Business accounts.
      operationId: content.liasettings.getaccessiblegmbaccounts
      parameters:
        - description: The ID of the account for which to retrieve accessible Google My
            Business accounts.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The ID of the managing account. If this parameter is not the same as
            accountId, then this account must be a multi-client account and
            accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LiasettingsGetAccessibleGmbAccountsResp\
                  onse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{merchantId}/liasettings/{accountId}/requestgmbaccess":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Requests access to a specified Google My Business account.
      operationId: content.liasettings.requestgmbaccess
      parameters:
        - description: The ID of the account for which GMB access is requested.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The email of the Google My Business account.
          in: query
          name: gmbEmail
          required: true
          schema:
            type: string
        - description: The ID of the managing account. If this parameter is not the same as
            accountId, then this account must be a multi-client account and
            accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LiasettingsRequestGmbAccessResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
  "/{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Requests inventory validation for the specified country.
      operationId: content.liasettings.requestinventoryverification
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The country for which inventory validation is requested.
          in: path
          name: country
          required: true
          schema:
            type: string
        - description: The ID of the managing account. If this parameter is not the same as
            accountId, then this account must be a multi-client account and
            accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LiasettingsRequestInventoryVerification\
                  Response"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
  "/{merchantId}/liasettings/{accountId}/setinventoryverificationcontact":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the inventory verification contract for the specified country.
      operationId: content.liasettings.setinventoryverificationcontact
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The email of the inventory verification contact.
          in: query
          name: contactEmail
          required: true
          schema:
            type: string
        - description: The name of the inventory verification contact.
          in: query
          name: contactName
          required: true
          schema:
            type: string
        - description: The country for which inventory verification is requested.
          in: query
          name: country
          required: true
          schema:
            type: string
        - description: The language for which inventory verification is requested.
          in: query
          name: language
          required: true
          schema:
            type: string
        - description: The ID of the managing account. If this parameter is not the same as
            accountId, then this account must be a multi-client account and
            accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LiasettingsSetInventoryVerificationCont\
                  actResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
  "/{merchantId}/liasettings/{accountId}/setposdataprovider":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets the POS data provider for the specified country.
      operationId: content.liasettings.setposdataprovider
      parameters:
        - description: The ID of the account for which to retrieve accessible Google My
            Business accounts.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The country for which the POS data provider is selected.
          in: query
          name: country
          required: true
          schema:
            type: string
        - description: The ID of the managing account. If this parameter is not the same as
            accountId, then this account must be a multi-client account and
            accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of POS data provider.
          in: query
          name: posDataProviderId
          schema:
            type: string
        - description: The account ID by which this merchant is known to the POS data
            provider.
          in: query
          name: posExternalAccountId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LiasettingsSetPosDataProviderResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
  "/{merchantId}/orderinvoices/{orderId}/createChargeInvoice":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a charge invoice for a shipment group, and triggers a charge
        capture for orderinvoice enabled orders.
      operationId: content.orderinvoices.createchargeinvoice
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderinvoicesCreateChargeInvoiceRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrderinvoicesCreateChargeInvoiceResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderinvoices
  "/{merchantId}/orderinvoices/{orderId}/createRefundInvoice":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a refund invoice for one or more shipment groups, and triggers a
        refund for orderinvoice enabled orders. This can only be used for line
        items that have previously been charged using createChargeInvoice. All
        amounts (except for the summary) are incremental with respect to the
        previous invoice.
      operationId: content.orderinvoices.createrefundinvoice
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderinvoicesCreateRefundInvoiceRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrderinvoicesCreateRefundInvoiceResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderinvoices
  "/{merchantId}/orderpayments/{orderId}/notifyAuthApproved":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Notify about successfully authorizing user's payment method for a given
        amount.
      operationId: content.orderpayments.notifyauthapproved
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order for for which payment authorization is happening.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderpaymentsNotifyAuthApprovedRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrderpaymentsNotifyAuthApprovedResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderpayments
  "/{merchantId}/orderpayments/{orderId}/notifyAuthDeclined":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Notify about failure to authorize user's payment method.
      operationId: content.orderpayments.notifyauthdeclined
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order for which payment authorization was declined.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderpaymentsNotifyAuthDeclinedRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrderpaymentsNotifyAuthDeclinedResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderpayments
  "/{merchantId}/orderpayments/{orderId}/notifyCharge":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Notify about charge on user's selected payments method.
      operationId: content.orderpayments.notifycharge
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order for which charge is happening.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderpaymentsNotifyChargeRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrderpaymentsNotifyChargeResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderpayments
  "/{merchantId}/orderpayments/{orderId}/notifyRefund":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Notify about refund on user's selected payments method.
      operationId: content.orderpayments.notifyrefund
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order for which charge is happening.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderpaymentsNotifyRefundRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrderpaymentsNotifyRefundResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderpayments
  "/{merchantId}/orderreports/disbursements":
    get:
      description: Retrieves a report for disbursements from your Merchant Center account.
      operationId: content.orderreports.listdisbursements
      parameters:
        - description: "The last date which disbursements occurred. In ISO 8601 format.
            Default: current date."
          in: query
          name: disbursementEndDate
          schema:
            type: string
        - description: The first date which disbursements occurred. In ISO 8601 format.
          in: query
          name: disbursementStartDate
          required: true
          schema:
            type: string
        - description: The maximum number of disbursements to return in the response, used
            for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrderreportsListDisbursementsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderreports
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{merchantId}/orderreports/disbursements/{disbursementId}/transactions":
    get:
      description: Retrieves a list of transactions for a disbursement from your Merchant
        Center account.
      operationId: content.orderreports.listtransactions
      parameters:
        - description: The Google-provided ID of the disbursement (found in Wallet).
          in: path
          name: disbursementId
          required: true
          schema:
            type: string
        - description: The maximum number of disbursements to return in the response, used
            for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The last date in which transaction occurred. In ISO 8601 format.
            Default: current date."
          in: query
          name: transactionEndDate
          schema:
            type: string
        - description: The first date in which transaction occurred. In ISO 8601 format.
          in: query
          name: transactionStartDate
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrderreportsListTransactionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderreports
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{merchantId}/orderreturns":
    get:
      description: Lists order returns in your Merchant Center account.
      operationId: content.orderreturns.list
      parameters:
        - description: Obtains order returns created before this date (inclusively), in ISO
            8601 format.
          in: query
          name: createdEndDate
          schema:
            type: string
        - description: Obtains order returns created after this date (inclusively), in ISO
            8601 format.
          in: query
          name: createdStartDate
          schema:
            type: string
        - description: The maximum number of order returns to return in the response, used
            for paging. The default value is 25 returns per page, and the
            maximum allowed value is 250 returns per page.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Return the results in the specified order.
          in: query
          name: orderBy
          schema:
            type: string
            enum:
              - returnCreationTimeAsc
              - returnCreationTimeDesc
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrderreturnsListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderreturns
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{merchantId}/orderreturns/{returnId}":
    get:
      description: Retrieves an order return from your Merchant Center account.
      operationId: content.orderreturns.get
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Merchant order return ID generated by Google.
          in: path
          name: returnId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/MerchantOrderReturn"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderreturns
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{merchantId}/orders":
    get:
      description: Lists the orders in your Merchant Center account.
      operationId: content.orders.list
      parameters:
        - description: >-
            Obtains orders that match the acknowledgement status. When set to
            true, obtains orders that have been acknowledged. When false,
            obtains orders that have not been acknowledged.

            We recommend using this filter set to false, in conjunction with the acknowledge call, such that only un-acknowledged orders are returned.
          in: query
          name: acknowledged
          schema:
            type: boolean
        - description: The maximum number of orders to return in the response, used for
            paging. The default value is 25 orders per page, and the maximum
            allowed value is 250 orders per page.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: |-
            Order results by placement date in descending or ascending order.

            Acceptable values are:
            - placedDateAsc
            - placedDateDesc
          in: query
          name: orderBy
          schema:
            type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Obtains orders placed before this date (exclusively), in ISO 8601
            format.
          in: query
          name: placedDateEnd
          schema:
            type: string
        - description: Obtains orders placed after this date (inclusively), in ISO 8601
            format.
          in: query
          name: placedDateStart
          schema:
            type: string
        - description: Obtains orders that match any of the specified statuses. Please note
            that active is a shortcut for pendingShipment and partiallyShipped,
            and completed is a shortcut for shipped, partiallyDelivered,
            delivered, partiallyReturned, returned, and canceled.
          in: query
          name: statuses
          explode: true
          schema:
            type: array
            items:
              enum:
                - active
                - canceled
                - completed
                - delivered
                - inProgress
                - partiallyDelivered
                - partiallyReturned
                - partiallyShipped
                - pendingShipment
                - returned
                - shipped
              type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{merchantId}/orders/{orderId}":
    get:
      description: Retrieves an order from your Merchant Center account.
      operationId: content.orders.get
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Order"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{merchantId}/orders/{orderId}/acknowledge":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Marks an order as acknowledged.
      operationId: content.orders.acknowledge
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersAcknowledgeRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersAcknowledgeResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/cancel":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Cancels all line items in an order, making a full refund.
      operationId: content.orders.cancel
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order to cancel.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersCancelRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersCancelResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/cancelLineItem":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Cancels a line item, making a full refund.
      operationId: content.orders.cancellineitem
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersCancelLineItemRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersCancelLineItemResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/inStoreRefundLineItem":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: >-
        Deprecated. Notifies that item return and refund was handled directly by
        merchant outside of Google payments processing (e.g. cash refund done in
        store).

        Note: We recommend calling the returnrefundlineitem method to refund in-store returns. We will issue the refund directly to the customer. This helps to prevent possible differences arising between merchant and Google transaction records. We also recommend having the point of sale system communicate with Google to ensure that customers do not receive a double refund by first refunding via Google then via an in-store return.
      operationId: content.orders.instorerefundlineitem
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersInStoreRefundLineItemRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersInStoreRefundLineItemResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/refund":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Deprecated, please use returnRefundLineItem instead.
      operationId: content.orders.refund
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order to refund.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersRefundRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersRefundResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/rejectReturnLineItem":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Rejects return on an line item.
      operationId: content.orders.rejectreturnlineitem
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersRejectReturnLineItemRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersRejectReturnLineItemResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/returnLineItem":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Returns a line item.
      operationId: content.orders.returnlineitem
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersReturnLineItemRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersReturnLineItemResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/returnRefundLineItem":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Returns and refunds a line item. Note that this method can only be
        called on fully shipped orders.
      operationId: content.orders.returnrefundlineitem
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersReturnRefundLineItemRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersReturnRefundLineItemResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/setLineItemMetadata":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets (or overrides if it already exists) merchant provided annotations
        in the form of key-value pairs. A common use case would be to supply us
        with additional structured information about a line item that cannot be
        provided via other methods. Submitted key-value pairs can be retrieved
        as part of the orders resource.
      operationId: content.orders.setlineitemmetadata
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersSetLineItemMetadataRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersSetLineItemMetadataResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/shipLineItems":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Marks line item(s) as shipped.
      operationId: content.orders.shiplineitems
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersShipLineItemsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersShipLineItemsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/testreturn":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sandbox only. Creates a test return.
      operationId: content.orders.createtestreturn
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersCreateTestReturnRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersCreateTestReturnResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/updateLineItemShippingDetails":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Updates ship by and delivery by dates for a line item.
      operationId: content.orders.updatelineitemshippingdetails
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersUpdateLineItemShippingDetailsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersUpdateLineItemShippingDetailsResp\
                  onse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/updateMerchantOrderId":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Updates the merchant order ID for a given order.
      operationId: content.orders.updatemerchantorderid
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersUpdateMerchantOrderIdRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersUpdateMerchantOrderIdResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/updateShipment":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Updates a shipment's status, carrier, and/or tracking ID.
      operationId: content.orders.updateshipment
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersUpdateShipmentRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersUpdateShipmentResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/ordersbymerchantid/{merchantOrderId}":
    get:
      description: Retrieves an order using merchant order ID.
      operationId: content.orders.getbymerchantorderid
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The merchant order ID to be looked for.
          in: path
          name: merchantOrderId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersGetByMerchantOrderIdResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{merchantId}/pos/{targetMerchantId}/inventory":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Submit inventory for the given merchant.
      operationId: content.pos.inventory
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
        - description: The ID of the POS or inventory data provider.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the target merchant.
          in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PosInventoryRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PosInventoryResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - pos
  "/{merchantId}/pos/{targetMerchantId}/sale":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Submit a sale event for the given merchant.
      operationId: content.pos.sale
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
        - description: The ID of the POS or inventory data provider.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the target merchant.
          in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PosSaleRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PosSaleResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - pos
  "/{merchantId}/pos/{targetMerchantId}/store":
    get:
      description: Lists the stores of the target merchant.
      operationId: content.pos.list
      parameters:
        - description: The ID of the POS or inventory data provider.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the target merchant.
          in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PosListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - pos
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a store for the given merchant.
      operationId: content.pos.insert
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
        - description: The ID of the POS or inventory data provider.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the target merchant.
          in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PosStore"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PosStore"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - pos
  "/{merchantId}/pos/{targetMerchantId}/store/{storeCode}":
    delete:
      description: Deletes a store for the given merchant.
      operationId: content.pos.delete
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
        - description: The ID of the POS or inventory data provider.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: A store code that is unique per merchant.
          in: path
          name: storeCode
          required: true
          schema:
            type: string
        - description: The ID of the target merchant.
          in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - pos
    get:
      description: Retrieves information about the given store.
      operationId: content.pos.get
      parameters:
        - description: The ID of the POS or inventory data provider.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: A store code that is unique per merchant.
          in: path
          name: storeCode
          required: true
          schema:
            type: string
        - description: The ID of the target merchant.
          in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/PosStore"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - pos
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{merchantId}/products":
    get:
      description: Lists the products in your Merchant Center account.
      operationId: content.products.list
      parameters:
        - description: Flag to include the invalid inserted items in the result of the list
            request. By default the invalid items are not shown (the default
            value is false).
          in: query
          name: includeInvalidInsertedItems
          schema:
            type: boolean
        - description: The maximum number of products to return in the response, used for
            paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The ID of the account that contains the products. This account
            cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ProductsListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - products
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Uploads a product to your Merchant Center account. If an item with the
        same channel, contentLanguage, offerId, and targetCountry already
        exists, this method updates that entry.
      operationId: content.products.insert
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
        - description: The ID of the account that contains the product. This account cannot
            be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Product"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - products
  "/{merchantId}/products/{productId}":
    delete:
      description: Deletes a product from your Merchant Center account.
      operationId: content.products.delete
      parameters:
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
        - description: The ID of the account that contains the product. This account cannot
            be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The REST ID of the product.
          in: path
          name: productId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - products
    get:
      description: Retrieves a product from your Merchant Center account.
      operationId: content.products.get
      parameters:
        - description: The ID of the account that contains the product. This account cannot
            be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The REST ID of the product.
          in: path
          name: productId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Product"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - products
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{merchantId}/productstatuses":
    get:
      description: Lists the statuses of the products in your Merchant Center account.
      operationId: content.productstatuses.list
      parameters:
        - description: If set, only issues for the specified destinations are returned,
            otherwise only issues for the Shopping destination.
          in: query
          name: destinations
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Flag to include full product data in the results of the list
            request. The default value is false.
          in: query
          name: includeAttributes
          schema:
            type: boolean
        - description: Flag to include the invalid inserted items in the result of the list
            request. By default the invalid items are not shown (the default
            value is false).
          in: query
          name: includeInvalidInsertedItems
          schema:
            type: boolean
        - description: The maximum number of product statuses to return in the response,
            used for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The ID of the account that contains the products. This account
            cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ProductstatusesListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - productstatuses
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{merchantId}/productstatuses/{productId}":
    get:
      description: Gets the status of a product from your Merchant Center account.
      operationId: content.productstatuses.get
      parameters:
        - description: If set, only issues for the specified destinations are returned,
            otherwise only issues for the Shopping destination.
          in: query
          name: destinations
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Flag to include full product data in the result of this get request.
            The default value is false.
          in: query
          name: includeAttributes
          schema:
            type: boolean
        - description: The ID of the account that contains the product. This account cannot
            be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The REST ID of the product.
          in: path
          name: productId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ProductStatus"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - productstatuses
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{merchantId}/shippingsettings":
    get:
      description: Lists the shipping settings of the sub-accounts in your Merchant Center
        account.
      operationId: content.shippingsettings.list
      parameters:
        - description: The maximum number of shipping settings to return in the response,
            used for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The ID of the managing account. This must be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ShippingsettingsListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - shippingsettings
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{merchantId}/shippingsettings/{accountId}":
    get:
      description: Retrieves the shipping settings of the account.
      operationId: content.shippingsettings.get
      parameters:
        - description: The ID of the account for which to get/update shipping settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The ID of the managing account. If this parameter is not the same as
            accountId, then this account must be a multi-client account and
            accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ShippingSettings"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - shippingsettings
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates the shipping settings of the account. This method supports patch
        semantics.
      operationId: content.shippingsettings.patch
      parameters:
        - description: The ID of the account for which to get/update shipping settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
        - description: The ID of the managing account. If this parameter is not the same as
            accountId, then this account must be a multi-client account and
            accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ShippingSettings"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ShippingSettings"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - shippingsettings
    put:
      description: Updates the shipping settings of the account.
      operationId: content.shippingsettings.update
      parameters:
        - description: The ID of the account for which to get/update shipping settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Flag to simulate a request like in a live environment. If set to
            true, dry-run mode checks the validity of the request and returns
            errors (if any).
          in: query
          name: dryRun
          schema:
            type: boolean
        - description: The ID of the managing account. If this parameter is not the same as
            accountId, then this account must be a multi-client account and
            accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ShippingSettings"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ShippingSettings"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - shippingsettings
  "/{merchantId}/supportedCarriers":
    get:
      description: Retrieves supported carriers and carrier services for an account.
      operationId: content.shippingsettings.getsupportedcarriers
      parameters:
        - description: The ID of the account for which to retrieve the supported carriers.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ShippingsettingsGetSupportedCarriersRes\
                  ponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - shippingsettings
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{merchantId}/supportedHolidays":
    get:
      description: Retrieves supported holidays for an account.
      operationId: content.shippingsettings.getsupportedholidays
      parameters:
        - description: The ID of the account for which to retrieve the supported holidays.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ShippingsettingsGetSupportedHolidaysRes\
                  ponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - shippingsettings
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{merchantId}/testorders":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sandbox only. Creates a test order.
      operationId: content.orders.createtestorder
      parameters:
        - description: The ID of the account that should manage the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersCreateTestOrderRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersCreateTestOrderResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/testorders/{orderId}/advance":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sandbox only. Moves a test order from state "inProgress" to state
        "pendingShipment".
      operationId: content.orders.advancetestorder
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the test order to modify.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersAdvanceTestOrderResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/testorders/{orderId}/cancelByCustomer":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sandbox only. Cancels a test order for customer-initiated cancellation.
      operationId: content.orders.canceltestorderbycustomer
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the test order to cancel.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersCancelTestOrderByCustomerRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersCancelTestOrderByCustomerResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/testordertemplates/{templateName}":
    get:
      description: Sandbox only. Retrieves an order template that can be used to quickly
        create a new order in sandbox.
      operationId: content.orders.gettestordertemplate
      parameters:
        - description: The country of the template to retrieve. Defaults to US.
          in: query
          name: country
          schema:
            type: string
        - description: The ID of the account that should manage the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The name of the template to retrieve.
          in: path
          name: templateName
          required: true
          schema:
            type: string
            enum:
              - template1
              - template1a
              - template1b
              - template2
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersGetTestOrderTemplateResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
servers:
  - url: https://www.googleapis.com/content/v2
components:
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
        default: json
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not
        exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
  requestBodies:
    Datafeed:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Datafeed"
    LiaSettings:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LiaSettings"
    AccountTax:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AccountTax"
    ShippingSettings:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ShippingSettings"
    Account:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Account"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/content: Manage your product listings and accounts for Google Shopping
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/content: Manage your product listings and accounts for Google Shopping
  schemas:
    Account:
      description: Account data. After the creation of a new account it may take a few
        minutes before it is fully operational. The methods delete, insert,
        patch, and update require the admin role.
      properties:
        adultContent:
          description: Indicates whether the merchant sells adult content.
          type: boolean
        adwordsLinks:
          description: List of linked AdWords accounts that are active or pending approval.
            To create a new link request, add a new link with status active to
            the list. It will remain in a pending state until approved or
            rejected either in the AdWords interface or through the  AdWords
            API. To delete an active link, or to cancel a link request, remove
            it from the list.
          items:
            $ref: "#/components/schemas/AccountAdwordsLink"
          type: array
        businessInformation:
          $ref: "#/components/schemas/AccountBusinessInformation"
        googleMyBusinessLink:
          $ref: "#/components/schemas/AccountGoogleMyBusinessLink"
        id:
          description: Merchant Center account ID.
          format: uint64
          type: string
        kind:
          default: content#account
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#account".'
          type: string
        name:
          description: Display name for the account.
          type: string
        reviewsUrl:
          description: "[DEPRECATED] This field is never returned and will be ignored if
            provided."
          type: string
        sellerId:
          description: Client-specific, locally-unique, internal ID for the child account.
          type: string
        users:
          description: Users with access to the account. Every account (except for
            subaccounts) must have at least one admin user.
          items:
            $ref: "#/components/schemas/AccountUser"
          type: array
        websiteUrl:
          description: The merchant's website.
          type: string
        youtubeChannelLinks:
          description: List of linked YouTube channels that are active or pending approval.
            To create a new link request, add a new link with status active to
            the list. It will remain in a pending state until approved or
            rejected in the YT Creator Studio interface. To delete an active
            link, or to cancel a link request, remove it from the list.
          items:
            $ref: "#/components/schemas/AccountYouTubeChannelLink"
          type: array
      type: object
    AccountAddress:
      properties:
        country:
          description: CLDR country code (e.g. "US").
          type: string
        locality:
          description: City, town or commune. May also include dependent localities or
            sublocalities (e.g. neighborhoods or suburbs).
          type: string
        postalCode:
          description: Postal code or ZIP (e.g. "94043").
          type: string
        region:
          description: Top-level administrative subdivision of the country. For example, a
            state like California ("CA") or a province like Quebec ("QC").
          type: string
        streetAddress:
          description: Street-level part of the address.
          type: string
      type: object
    AccountAdwordsLink:
      properties:
        adwordsId:
          description: Customer ID of the AdWords account.
          format: uint64
          type: string
        status:
          description: "Status of the link between this Merchant Center account and the
            AdWords account. Upon retrieval, it represents the actual status of
            the link and can be either active if it was approved in Google
            AdWords or pending if it's pending approval. Upon insertion, it
            represents the intended status of the link. Re-uploading a link with
            status active when it's still pending or with status pending when
            it's already active will have no effect: the status will remain
            unchanged. Re-uploading a link with deprecated status inactive is
            equivalent to not submitting the link at all and will delete the
            link if it was active or cancel the link request if it was pending."
          type: string
      type: object
    AccountBusinessInformation:
      properties:
        address:
          $ref: "#/components/schemas/AccountAddress"
        customerService:
          $ref: "#/components/schemas/AccountCustomerService"
        phoneNumber:
          description: The phone number of the business.
          type: string
      type: object
    AccountCustomerService:
      properties:
        email:
          description: Customer service email.
          type: string
        phoneNumber:
          description: Customer service phone number.
          type: string
        url:
          description: Customer service URL.
          type: string
      type: object
    AccountGoogleMyBusinessLink:
      properties:
        gmbEmail:
          description: The GMB email address of which a specific account within a GMB
            account. A sample account within a GMB account could be a business
            account with set of locations, managed under the GMB account.
          type: string
        status:
          description: Status of the link between this Merchant Center account and the GMB
            account.
          type: string
      type: object
    AccountIdentifier:
      properties:
        aggregatorId:
          description: The aggregator ID, set for aggregators and subaccounts (in that
            case, it represents the aggregator of the subaccount).
          format: uint64
          type: string
        merchantId:
          description: The merchant account ID, set for individual accounts and subaccounts.
          format: uint64
          type: string
      type: object
    AccountStatus:
      description: The status of an account, i.e., information about its products, which is
        computed offline and not returned immediately at insertion time.
      properties:
        accountId:
          description: The ID of the account for which the status is reported.
          type: string
        accountLevelIssues:
          description: A list of account level issues.
          items:
            $ref: "#/components/schemas/AccountStatusAccountLevelIssue"
          type: array
        dataQualityIssues:
          description: DEPRECATED - never populated.
          items:
            $ref: "#/components/schemas/AccountStatusDataQualityIssue"
          type: array
        kind:
          default: content#accountStatus
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#accountStatus".'
          type: string
        products:
          description: List of product-related data by channel, destination, and country.
            Data in this field may be delayed by up to 30 minutes.
          items:
            $ref: "#/components/schemas/AccountStatusProducts"
          type: array
        websiteClaimed:
          description: Whether the account's website is claimed or not.
          type: boolean
      type: object
    AccountStatusAccountLevelIssue:
      properties:
        country:
          description: Country for which this issue is reported.
          type: string
        destination:
          description: The destination the issue applies to.
          type: string
        detail:
          description: Additional details about the issue.
          type: string
        documentation:
          description: The URL of a web page to help resolving this issue.
          type: string
        id:
          description: Issue identifier.
          type: string
        severity:
          description: Severity of the issue.
          type: string
        title:
          description: Short description of the issue.
          type: string
      type: object
    AccountStatusDataQualityIssue:
      properties:
        country:
          type: string
        destination:
          type: string
        detail:
          type: string
        displayedValue:
          type: string
        exampleItems:
          items:
            $ref: "#/components/schemas/AccountStatusExampleItem"
          type: array
        id:
          type: string
        lastChecked:
          type: string
        location:
          type: string
        numItems:
          format: uint32
          type: integer
        severity:
          type: string
        submittedValue:
          type: string
      type: object
    AccountStatusExampleItem:
      properties:
        itemId:
          type: string
        link:
          type: string
        submittedValue:
          type: string
        title:
          type: string
        valueOnLandingPage:
          type: string
      type: object
    AccountStatusItemLevelIssue:
      properties:
        attributeName:
          description: The attribute's name, if the issue is caused by a single attribute.
          type: string
        code:
          description: The error code of the issue.
          type: string
        description:
          description: A short issue description in English.
          type: string
        detail:
          description: A detailed issue description in English.
          type: string
        documentation:
          description: The URL of a web page to help with resolving this issue.
          type: string
        numItems:
          description: Number of items with this issue.
          format: int64
          type: string
        resolution:
          description: Whether the issue can be resolved by the merchant.
          type: string
        servability:
          description: How this issue affects serving of the offer.
          type: string
      type: object
    AccountStatusProducts:
      properties:
        channel:
          description: The channel the data applies to.
          type: string
        country:
          description: The country the data applies to.
          type: string
        destination:
          description: The destination the data applies to.
          type: string
        itemLevelIssues:
          description: List of item-level issues.
          items:
            $ref: "#/components/schemas/AccountStatusItemLevelIssue"
          type: array
        statistics:
          $ref: "#/components/schemas/AccountStatusStatistics"
      type: object
    AccountStatusStatistics:
      properties:
        active:
          description: Number of active offers.
          format: int64
          type: string
        disapproved:
          description: Number of disapproved offers.
          format: int64
          type: string
        expiring:
          description: Number of expiring offers.
          format: int64
          type: string
        pending:
          description: Number of pending offers.
          format: int64
          type: string
      type: object
    AccountTax:
      description: The tax settings of a merchant account. All methods require the admin
        role.
      properties:
        accountId:
          description: The ID of the account to which these account tax settings belong.
          format: uint64
          type: string
        kind:
          default: content#accountTax
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#accountTax".'
          type: string
        rules:
          description: Tax rules. Updating the tax rules will enable US taxes (not
            reversible). Defining no rules is equivalent to not charging tax at
            all.
          items:
            $ref: "#/components/schemas/AccountTaxTaxRule"
          type: array
      type: object
    AccountTaxTaxRule:
      description: Tax calculation rule to apply in a state or province (USA only).
      properties:
        country:
          description: Country code in which tax is applicable.
          type: string
        locationId:
          description: State (or province) is which the tax is applicable, described by its
            location ID (also called criteria ID).
          format: uint64
          type: string
        ratePercent:
          description: Explicit tax rate in percent, represented as a floating point number
            without the percentage character. Must not be negative.
          type: string
        shippingTaxed:
          description: If true, shipping charges are also taxed.
          type: boolean
        useGlobalRate:
          description: Whether the tax rate is taken from a global tax table or specified
            explicitly.
          type: boolean
      type: object
    AccountUser:
      properties:
        admin:
          description: Whether user is an admin.
          type: boolean
        emailAddress:
          description: User's email address.
          type: string
        orderManager:
          description: Whether user is an order manager.
          type: boolean
        paymentsAnalyst:
          description: Whether user can access payment statements.
          type: boolean
        paymentsManager:
          description: Whether user can manage payment settings.
          type: boolean
      type: object
    AccountYouTubeChannelLink:
      properties:
        channelId:
          description: Channel ID.
          type: string
        status:
          description: "Status of the link between this Merchant Center account and the
            YouTube channel. Upon retrieval, it represents the actual status of
            the link and can be either active if it was approved in YT Creator
            Studio or pending if it's pending approval. Upon insertion, it
            represents the intended status of the link. Re-uploading a link with
            status active when it's still pending or with status pending when
            it's already active will have no effect: the status will remain
            unchanged. Re-uploading a link with deprecated status inactive is
            equivalent to not submitting the link at all and will delete the
            link if it was active or cancel the link request if it was pending."
          type: string
      type: object
    AccountsAuthInfoResponse:
      properties:
        accountIdentifiers:
          description: >-
            The account identifiers corresponding to the authenticated user.

            - For an individual account: only the merchant ID is defined

            - For an aggregator: only the aggregator ID is defined

            - For a subaccount of an MCA: both the merchant ID and the aggregator ID are defined.
          items:
            $ref: "#/components/schemas/AccountIdentifier"
          type: array
        kind:
          default: content#accountsAuthInfoResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#accountsAuthInfoResponse".'
          type: string
      type: object
    AccountsClaimWebsiteResponse:
      properties:
        kind:
          default: content#accountsClaimWebsiteResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#accountsClaimWebsiteResponse".'
          type: string
      type: object
    AccountsCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/AccountsCustomBatchRequestEntry"
          type: array
      type: object
    AccountsCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch accounts request.
      properties:
        account:
          $ref: "#/components/schemas/Account"
        accountId:
          description: The ID of the targeted account. Only defined if the method is not
            insert.
          format: uint64
          type: string
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        force:
          description: Whether the account should be deleted if the account has offers.
            Only applicable if the method is delete.
          type: boolean
        linkRequest:
          $ref: "#/components/schemas/AccountsCustomBatchRequestEntryLinkRequest"
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          description: The method of the batch entry.
          type: string
        overwrite:
          description: Only applicable if the method is claimwebsite. Indicates whether or
            not to take the claim from another account in case there is a
            conflict.
          type: boolean
      type: object
    AccountsCustomBatchRequestEntryLinkRequest:
      properties:
        action:
          description: Action to perform for this link. The "request" action is only
            available to select merchants.
          type: string
        linkType:
          description: Type of the link between the two accounts.
          type: string
        linkedAccountId:
          description: The ID of the linked account.
          type: string
      type: object
    AccountsCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/AccountsCustomBatchResponseEntry"
          type: array
        kind:
          default: content#accountsCustomBatchResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#accountsCustomBatchResponse".'
          type: string
      type: object
    AccountsCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch accounts response.
      properties:
        account:
          $ref: "#/components/schemas/Account"
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/Errors"
        kind:
          default: content#accountsCustomBatchResponseEntry
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#accountsCustomBatchResponseEntry".'
          type: string
        linkStatus:
          description: Deprecated. This field is never set.
          type: string
      type: object
    AccountsLinkRequest:
      properties:
        action:
          description: Action to perform for this link. The "request" action is only
            available to select merchants.
          type: string
        linkType:
          description: Type of the link between the two accounts.
          type: string
        linkedAccountId:
          description: The ID of the linked account.
          type: string
      type: object
    AccountsLinkResponse:
      properties:
        kind:
          default: content#accountsLinkResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#accountsLinkResponse".'
          type: string
      type: object
    AccountsListResponse:
      properties:
        kind:
          default: content#accountsListResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#accountsListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of accounts.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/Account"
          type: array
      type: object
    AccountstatusesCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/AccountstatusesCustomBatchRequestEntry"
          type: array
      type: object
    AccountstatusesCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch accountstatuses request.
      properties:
        accountId:
          description: The ID of the (sub-)account whose status to get.
          format: uint64
          type: string
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        destinations:
          description: If set, only issues for the specified destinations are returned,
            otherwise only issues for the Shopping destination.
          items:
            type: string
          type: array
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          description: The method (get).
          type: string
      type: object
    AccountstatusesCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/AccountstatusesCustomBatchResponseEntry"
          type: array
        kind:
          default: content#accountstatusesCustomBatchResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#accountstatusesCustomBatchResponse".'
          type: string
      type: object
    AccountstatusesCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch accountstatuses response.
      properties:
        accountStatus:
          $ref: "#/components/schemas/AccountStatus"
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/Errors"
      type: object
    AccountstatusesListResponse:
      properties:
        kind:
          default: content#accountstatusesListResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#accountstatusesListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of account statuses.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/AccountStatus"
          type: array
      type: object
    AccounttaxCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/AccounttaxCustomBatchRequestEntry"
          type: array
      type: object
    AccounttaxCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch accounttax request.
      properties:
        accountId:
          description: The ID of the account for which to get/update account tax settings.
          format: uint64
          type: string
        accountTax:
          $ref: "#/components/schemas/AccountTax"
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          type: string
      type: object
    AccounttaxCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/AccounttaxCustomBatchResponseEntry"
          type: array
        kind:
          default: content#accounttaxCustomBatchResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#accounttaxCustomBatchResponse".'
          type: string
      type: object
    AccounttaxCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch accounttax response.
      properties:
        accountTax:
          $ref: "#/components/schemas/AccountTax"
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/Errors"
        kind:
          default: content#accounttaxCustomBatchResponseEntry
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#accounttaxCustomBatchResponseEntry".'
          type: string
      type: object
    AccounttaxListResponse:
      properties:
        kind:
          default: content#accounttaxListResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#accounttaxListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of account tax settings.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/AccountTax"
          type: array
      type: object
    Amount:
      properties:
        pretax:
          $ref: "#/components/schemas/Price"
        tax:
          $ref: "#/components/schemas/Price"
      type: object
    BusinessDayConfig:
      properties:
        businessDays:
          description: Regular business days. May not be empty.
          items:
            type: string
          type: array
      type: object
    CarrierRate:
      properties:
        carrierName:
          description: Carrier service, such as "UPS" or "Fedex". The list of supported
            carriers can be retrieved via the getSupportedCarriers method.
            Required.
          type: string
        carrierService:
          description: Carrier service, such as "ground" or "2 days". The list of supported
            services for a carrier can be retrieved via the getSupportedCarriers
            method. Required.
          type: string
        flatAdjustment:
          $ref: "#/components/schemas/Price"
        name:
          description: Name of the carrier rate. Must be unique per rate group. Required.
          type: string
        originPostalCode:
          description: Shipping origin for this carrier rate. Required.
          type: string
        percentageAdjustment:
          description: Multiplicative shipping rate modifier as a number in decimal
            notation. Can be negative. For example "5.4" increases the rate by
            5.4%, "-3" decreases the rate by 3%. Optional.
          type: string
      type: object
    CarriersCarrier:
      properties:
        country:
          description: The CLDR country code of the carrier (e.g., "US"). Always present.
          type: string
        name:
          description: The name of the carrier (e.g., "UPS"). Always present.
          type: string
        services:
          description: A list of supported services (e.g., "ground") for that carrier.
            Contains at least one service.
          items:
            type: string
          type: array
      type: object
    CustomAttribute:
      properties:
        name:
          description: The name of the attribute. Underscores will be replaced by spaces
            upon insertion.
          type: string
        type:
          description: The type of the attribute.
          type: string
        unit:
          description: Free-form unit of the attribute. Unit can only be used for values of
            type int, float, or price.
          type: string
        value:
          description: The value of the attribute.
          type: string
      type: object
    CustomGroup:
      properties:
        attributes:
          description: The sub-attributes.
          items:
            $ref: "#/components/schemas/CustomAttribute"
          type: array
        name:
          description: The name of the group. Underscores will be replaced by spaces upon
            insertion.
          type: string
      type: object
    CustomerReturnReason:
      properties:
        description:
          type: string
        reasonCode:
          type: string
      type: object
    CutoffTime:
      properties:
        hour:
          description: Hour of the cutoff time until which an order has to be placed to be
            processed in the same day. Required.
          format: uint32
          type: integer
        minute:
          description: Minute of the cutoff time until which an order has to be placed to
            be processed in the same day. Required.
          format: uint32
          type: integer
        timezone:
          description: Timezone identifier for the cutoff time. A list of identifiers can
            be found in  the AdWords API documentation. E.g. "Europe/Zurich".
            Required.
          type: string
      type: object
    Datafeed:
      description: Datafeed configuration data.
      properties:
        attributeLanguage:
          description: The two-letter ISO 639-1 language in which the attributes are
            defined in the data feed.
          type: string
        contentLanguage:
          description: "[DEPRECATED] Please use targets[].language instead. The two-letter
            ISO 639-1 language of the items in the feed. Must be a valid
            language for targetCountry."
          type: string
        contentType:
          description: The type of data feed. For product inventory feeds, only feeds for
            local stores, not online stores, are supported.
          type: string
        fetchSchedule:
          $ref: "#/components/schemas/DatafeedFetchSchedule"
        fileName:
          description: The filename of the feed. All feeds must have a unique file name.
          type: string
        format:
          $ref: "#/components/schemas/DatafeedFormat"
        id:
          description: The ID of the data feed.
          format: int64
          type: string
        intendedDestinations:
          description: "[DEPRECATED] Please use targets[].includedDestinations instead. The
            list of intended destinations (corresponds to checked check boxes in
            Merchant Center)."
          items:
            type: string
          type: array
        kind:
          default: content#datafeed
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#datafeed".'
          type: string
        name:
          description: A descriptive name of the data feed.
          type: string
        targetCountry:
          description: "[DEPRECATED] Please use targets[].country instead. The country
            where the items in the feed will be included in the search index,
            represented as a CLDR territory code."
          type: string
        targets:
          description: The targets this feed should apply to (country, language,
            destinations).
          items:
            $ref: "#/components/schemas/DatafeedTarget"
          type: array
      type: object
    DatafeedFetchSchedule:
      description: The required fields vary based on the frequency of fetching. For a
        monthly fetch schedule, day_of_month and hour are required. For a weekly
        fetch schedule, weekday and hour are required. For a daily fetch
        schedule, only hour is required.
      properties:
        dayOfMonth:
          description: The day of the month the feed file should be fetched (1-31).
          format: uint32
          type: integer
        fetchUrl:
          description: The URL where the feed file can be fetched. Google Merchant Center
            will support automatic scheduled uploads using the HTTP, HTTPS, FTP,
            or SFTP protocols, so the value will need to be a valid link using
            one of those four protocols.
          type: string
        hour:
          description: The hour of the day the feed file should be fetched (0-23).
          format: uint32
          type: integer
        minuteOfHour:
          description: The minute of the hour the feed file should be fetched (0-59).
            Read-only.
          format: uint32
          type: integer
        password:
          description: An optional password for fetch_url.
          type: string
        paused:
          description: Whether the scheduled fetch is paused or not.
          type: boolean
        timeZone:
          description: Time zone used for schedule. UTC by default. E.g.,
            "America/Los_Angeles".
          type: string
        username:
          description: An optional user name for fetch_url.
          type: string
        weekday:
          description: The day of the week the feed file should be fetched.
          type: string
      type: object
    DatafeedFormat:
      properties:
        columnDelimiter:
          description: Delimiter for the separation of values in a delimiter-separated
            values feed. If not specified, the delimiter will be auto-detected.
            Ignored for non-DSV data feeds.
          type: string
        fileEncoding:
          description: Character encoding scheme of the data feed. If not specified, the
            encoding will be auto-detected.
          type: string
        quotingMode:
          description: Specifies how double quotes are interpreted. If not specified, the
            mode will be auto-detected. Ignored for non-DSV data feeds.
          type: string
      type: object
    DatafeedStatus:
      description: The status of a datafeed, i.e., the result of the last retrieval of the
        datafeed computed asynchronously when the feed processing is finished.
      properties:
        country:
          description: The country for which the status is reported, represented as a  CLDR
            territory code.
          type: string
        datafeedId:
          description: The ID of the feed for which the status is reported.
          format: uint64
          type: string
        errors:
          description: The list of errors occurring in the feed.
          items:
            $ref: "#/components/schemas/DatafeedStatusError"
          type: array
        itemsTotal:
          description: The number of items in the feed that were processed.
          format: uint64
          type: string
        itemsValid:
          description: The number of items in the feed that were valid.
          format: uint64
          type: string
        kind:
          default: content#datafeedStatus
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#datafeedStatus".'
          type: string
        language:
          description: The two-letter ISO 639-1 language for which the status is reported.
          type: string
        lastUploadDate:
          description: The last date at which the feed was uploaded.
          type: string
        processingStatus:
          description: The processing status of the feed.
          type: string
        warnings:
          description: The list of errors occurring in the feed.
          items:
            $ref: "#/components/schemas/DatafeedStatusError"
          type: array
      type: object
    DatafeedStatusError:
      description: An error occurring in the feed, like "invalid price".
      properties:
        code:
          description: The code of the error, e.g., "validation/invalid_value".
          type: string
        count:
          description: The number of occurrences of the error in the feed.
          format: uint64
          type: string
        examples:
          description: A list of example occurrences of the error, grouped by product.
          items:
            $ref: "#/components/schemas/DatafeedStatusExample"
          type: array
        message:
          description: The error message, e.g., "Invalid price".
          type: string
      type: object
    DatafeedStatusExample:
      description: An example occurrence for a particular error.
      properties:
        itemId:
          description: The ID of the example item.
          type: string
        lineNumber:
          description: Line number in the data feed where the example is found.
          format: uint64
          type: string
        value:
          description: The problematic value.
          type: string
      type: object
    DatafeedTarget:
      properties:
        country:
          description: The country where the items in the feed will be included in the
            search index, represented as a  CLDR territory code.
          type: string
        excludedDestinations:
          description: The list of destinations to exclude for this target (corresponds to
            unchecked check boxes in Merchant Center).
          items:
            type: string
          type: array
        includedDestinations:
          description: The list of destinations to include for this target (corresponds to
            checked check boxes in Merchant Center). Default destinations are
            always included unless provided in excludedDestinations.
          items:
            type: string
          type: array
        language:
          description: The two-letter ISO 639-1 language of the items in the feed. Must be
            a valid language for targets[].country.
          type: string
      type: object
    DatafeedsCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/DatafeedsCustomBatchRequestEntry"
          type: array
      type: object
    DatafeedsCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch datafeeds request.
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        datafeed:
          $ref: "#/components/schemas/Datafeed"
        datafeedId:
          description: The ID of the data feed to get, delete or fetch.
          format: uint64
          type: string
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          type: string
      type: object
    DatafeedsCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/DatafeedsCustomBatchResponseEntry"
          type: array
        kind:
          default: content#datafeedsCustomBatchResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#datafeedsCustomBatchResponse".'
          type: string
      type: object
    DatafeedsCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch datafeeds response.
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        datafeed:
          $ref: "#/components/schemas/Datafeed"
        errors:
          $ref: "#/components/schemas/Errors"
      type: object
    DatafeedsFetchNowResponse:
      properties:
        kind:
          default: content#datafeedsFetchNowResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#datafeedsFetchNowResponse".'
          type: string
      type: object
    DatafeedsListResponse:
      properties:
        kind:
          default: content#datafeedsListResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#datafeedsListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of datafeeds.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/Datafeed"
          type: array
      type: object
    DatafeedstatusesCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/DatafeedstatusesCustomBatchRequestEntry"
          type: array
      type: object
    DatafeedstatusesCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch datafeedstatuses request.
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        country:
          description: The country for which to get the datafeed status. If this parameter
            is provided then language must also be provided. Note that for
            multi-target datafeeds this parameter is required.
          type: string
        datafeedId:
          description: The ID of the data feed to get.
          format: uint64
          type: string
        language:
          description: The language for which to get the datafeed status. If this parameter
            is provided then country must also be provided. Note that for
            multi-target datafeeds this parameter is required.
          type: string
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          type: string
      type: object
    DatafeedstatusesCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/DatafeedstatusesCustomBatchResponseEntry"
          type: array
        kind:
          default: content#datafeedstatusesCustomBatchResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#datafeedstatusesCustomBatchResponse".'
          type: string
      type: object
    DatafeedstatusesCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch datafeedstatuses response.
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        datafeedStatus:
          $ref: "#/components/schemas/DatafeedStatus"
        errors:
          $ref: "#/components/schemas/Errors"
      type: object
    DatafeedstatusesListResponse:
      properties:
        kind:
          default: content#datafeedstatusesListResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#datafeedstatusesListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of datafeed statuses.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/DatafeedStatus"
          type: array
      type: object
    DeliveryTime:
      properties:
        cutoffTime:
          $ref: "#/components/schemas/CutoffTime"
        handlingBusinessDayConfig:
          $ref: "#/components/schemas/BusinessDayConfig"
        holidayCutoffs:
          description: Holiday cutoff definitions. If configured, they specify order cutoff
            times for holiday-specific shipping.
          items:
            $ref: "#/components/schemas/HolidayCutoff"
          type: array
        maxHandlingTimeInDays:
          description: Maximum number of business days spent before an order is shipped. 0
            means same day shipped, 1 means next day shipped. Must be greater
            than or equal to minHandlingTimeInDays.
          format: uint32
          type: integer
        maxTransitTimeInDays:
          description: Maximum number of business days that is spent in transit. 0 means
            same day delivery, 1 means next day delivery. Must be greater than
            or equal to minTransitTimeInDays.
          format: uint32
          type: integer
        minHandlingTimeInDays:
          description: Minimum number of business days spent before an order is shipped. 0
            means same day shipped, 1 means next day shipped.
          format: uint32
          type: integer
        minTransitTimeInDays:
          description: Minimum number of business days that is spent in transit. 0 means
            same day delivery, 1 means next day delivery. Either
            {min,max}TransitTimeInDays or transitTimeTable must be set, but not
            both.
          format: uint32
          type: integer
        transitBusinessDayConfig:
          $ref: "#/components/schemas/BusinessDayConfig"
        transitTimeTable:
          $ref: "#/components/schemas/TransitTable"
      type: object
    Error:
      description: An error returned by the API.
      properties:
        domain:
          description: The domain of the error.
          type: string
        message:
          description: A description of the error.
          type: string
        reason:
          description: The error code.
          type: string
      type: object
    Errors:
      description: A list of errors returned by a failed batch entry.
      properties:
        code:
          description: The HTTP status of the first error in errors.
          format: uint32
          type: integer
        errors:
          description: A list of errors.
          items:
            $ref: "#/components/schemas/Error"
          type: array
        message:
          description: The message of the first error in errors.
          type: string
      type: object
    GmbAccounts:
      properties:
        accountId:
          description: The ID of the account.
          format: uint64
          type: string
        gmbAccounts:
          description: A list of GMB accounts which are available to the merchant.
          items:
            $ref: "#/components/schemas/GmbAccountsGmbAccount"
          type: array
      type: object
    GmbAccountsGmbAccount:
      properties:
        email:
          description: The email which identifies the GMB account.
          type: string
        listingCount:
          description: Number of listings under this account.
          format: uint64
          type: string
        name:
          description: The name of the GMB account.
          type: string
        type:
          description: The type of the GMB account (User or Business).
          type: string
      type: object
    Headers:
      description: A non-empty list of row or column headers for a table. Exactly one of
        prices, weights, numItems, postalCodeGroupNames, or location must be
        set.
      properties:
        locations:
          description: A list of location ID sets. Must be non-empty. Can only be set if
            all other fields are not set.
          items:
            $ref: "#/components/schemas/LocationIdSet"
          type: array
        numberOfItems:
          description: A list of inclusive number of items upper bounds. The last value can
            be "infinity". For example ["10", "50", "infinity"] represents the
            headers "<= 10 items", " 50 items". Must be non-empty. Can only be
            set if all other fields are not set.
          items:
            type: string
          type: array
        postalCodeGroupNames:
          description: 'A list of postal group names. The last value can be "all other
            locations". Example: ["zone 1", "zone 2", "all other locations"].
            The referred postal code groups must match the delivery country of
            the service. Must be non-empty. Can only be set if all other fields
            are not set.'
          items:
            type: string
          type: array
        prices:
          description: "A list of inclusive order price upper bounds. The last price's
            value can be \"infinity\". For example [{\"value\": \"10\",
            \"currency\": \"USD\"}, {\"value\": \"500\", \"currency\": \"USD\"},
            {\"value\": \"infinity\", \"currency\": \"USD\"}] represents the
            headers \"<= $10\", \" $500\". All prices within a service must have
            the same currency. Must be non-empty. Can only be set if all other
            fields are not set."
          items:
            $ref: "#/components/schemas/Price"
          type: array
        weights:
          description: "A list of inclusive order weight upper bounds. The last weight's
            value can be \"infinity\". For example [{\"value\": \"10\",
            \"unit\": \"kg\"}, {\"value\": \"50\", \"unit\": \"kg\"},
            {\"value\": \"infinity\", \"unit\": \"kg\"}] represents the headers
            \"<= 10kg\", \" 50kg\". All weights within a service must have the
            same unit. Must be non-empty. Can only be set if all other fields
            are not set."
          items:
            $ref: "#/components/schemas/Weight"
          type: array
      type: object
    HolidayCutoff:
      properties:
        deadlineDate:
          description: Date of the order deadline, in ISO 8601 format. E.g. "2016-11-29"
            for 29th November 2016. Required.
          type: string
        deadlineHour:
          description: "Hour of the day on the deadline date until which the order has to
            be placed to qualify for the delivery guarantee. Possible values
            are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Required."
          format: uint32
          type: integer
        deadlineTimezone:
          description: Timezone identifier for the deadline hour. A list of identifiers can
            be found in  the AdWords API documentation. E.g. "Europe/Zurich".
            Required.
          type: string
        holidayId:
          description: Unique identifier for the holiday. Required.
          type: string
        visibleFromDate:
          description: Date on which the deadline will become visible to consumers in ISO
            8601 format. E.g. "2016-10-31" for 31st October 2016. Required.
          type: string
      type: object
    HolidaysHoliday:
      properties:
        countryCode:
          description: The CLDR territory code of the country in which the holiday is
            available. E.g. "US", "DE", "GB". A holiday cutoff can only be
            configured in a shipping settings service with matching delivery
            country. Always present.
          type: string
        date:
          description: Date of the holiday, in ISO 8601 format. E.g. "2016-12-25" for
            Christmas 2016. Always present.
          type: string
        deliveryGuaranteeDate:
          description: Date on which the order has to arrive at the customer's, in ISO 8601
            format. E.g. "2016-12-24" for 24th December 2016. Always present.
          type: string
        deliveryGuaranteeHour:
          description: "Hour of the day in the delivery location's timezone on the
            guaranteed delivery date by which the order has to arrive at the
            customer's. Possible values are: 0 (midnight), 1, ..., 12 (noon),
            13, ..., 23. Always present."
          format: uint64
          type: string
        id:
          description: Unique identifier for the holiday to be used when configuring
            holiday cutoffs. Always present.
          type: string
        type:
          description: The holiday type. Always present.
          type: string
      type: object
    Installment:
      properties:
        amount:
          $ref: "#/components/schemas/Price"
        months:
          description: The number of installments the buyer has to pay.
          format: int64
          type: string
      type: object
    Inventory:
      properties:
        availability:
          description: The availability of the product.
          type: string
        customLabel0:
          description: Custom label 0 for custom grouping of items in a Shopping campaign.
            Only supported for online products.
          type: string
        customLabel1:
          description: Custom label 1 for custom grouping of items in a Shopping campaign.
            Only supported for online products.
          type: string
        customLabel2:
          description: Custom label 2 for custom grouping of items in a Shopping campaign.
            Only supported for online products.
          type: string
        customLabel3:
          description: Custom label 3 for custom grouping of items in a Shopping campaign.
            Only supported for online products.
          type: string
        customLabel4:
          description: Custom label 3 for custom grouping of items in a Shopping campaign.
            Only supported for online products.
          type: string
        installment:
          $ref: "#/components/schemas/Installment"
        instoreProductLocation:
          description: The instore product location. Supported only for local products.
          type: string
        kind:
          default: content#inventory
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#inventory".'
          type: string
        loyaltyPoints:
          $ref: "#/components/schemas/LoyaltyPoints"
        pickup:
          $ref: "#/components/schemas/InventoryPickup"
        price:
          $ref: "#/components/schemas/Price"
        quantity:
          description: The quantity of the product. Must be equal to or greater than zero.
            Supported only for local products.
          format: uint32
          type: integer
        salePrice:
          $ref: "#/components/schemas/Price"
        salePriceEffectiveDate:
          description: A date range represented by a pair of ISO 8601 dates separated by a
            space, comma, or slash. Both dates might be specified as 'null' if
            undecided.
          type: string
        sellOnGoogleQuantity:
          description: The quantity of the product that is available for selling on Google.
            Supported only for online products.
          format: uint32
          type: integer
      type: object
    InventoryCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/InventoryCustomBatchRequestEntry"
          type: array
      type: object
    InventoryCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch inventory request.
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        inventory:
          $ref: "#/components/schemas/Inventory"
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        productId:
          description: The ID of the product for which to update price and availability.
          type: string
        storeCode:
          description: The code of the store for which to update price and availability.
            Use online to update price and availability of an online product.
          type: string
      type: object
    InventoryCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/InventoryCustomBatchResponseEntry"
          type: array
        kind:
          default: content#inventoryCustomBatchResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#inventoryCustomBatchResponse".'
          type: string
      type: object
    InventoryCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch inventory response.
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/Errors"
        kind:
          default: content#inventoryCustomBatchResponseEntry
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#inventoryCustomBatchResponseEntry".'
          type: string
      type: object
    InventoryPickup:
      properties:
        pickupMethod:
          description: Whether store pickup is available for this offer and whether the
            pickup option should be shown as buy, reserve, or not supported.
            Only supported for local inventory. Unless the value is "not
            supported", must be submitted together with pickupSla.
          type: string
        pickupSla:
          description: The expected date that an order will be ready for pickup, relative
            to when the order is placed. Only supported for local inventory.
            Must be submitted together with pickupMethod.
          type: string
      type: object
    InventorySetRequest:
      properties:
        availability:
          description: The availability of the product.
          type: string
        customLabel0:
          description: Custom label 0 for custom grouping of items in a Shopping campaign.
            Only supported for online products.
          type: string
        customLabel1:
          description: Custom label 1 for custom grouping of items in a Shopping campaign.
            Only supported for online products.
          type: string
        customLabel2:
          description: Custom label 2 for custom grouping of items in a Shopping campaign.
            Only supported for online products.
          type: string
        customLabel3:
          description: Custom label 3 for custom grouping of items in a Shopping campaign.
            Only supported for online products.
          type: string
        customLabel4:
          description: Custom label 3 for custom grouping of items in a Shopping campaign.
            Only supported for online products.
          type: string
        installment:
          $ref: "#/components/schemas/Installment"
        instoreProductLocation:
          description: The instore product location. Supported only for local products.
          type: string
        loyaltyPoints:
          $ref: "#/components/schemas/LoyaltyPoints"
        pickup:
          $ref: "#/components/schemas/InventoryPickup"
        price:
          $ref: "#/components/schemas/Price"
        quantity:
          description: The quantity of the product. Must be equal to or greater than zero.
            Supported only for local products.
          format: uint32
          type: integer
        salePrice:
          $ref: "#/components/schemas/Price"
        salePriceEffectiveDate:
          description: A date range represented by a pair of ISO 8601 dates separated by a
            space, comma, or slash. Both dates might be specified as 'null' if
            undecided.
          type: string
        sellOnGoogleQuantity:
          description: The quantity of the product that is available for selling on Google.
            Supported only for online products.
          format: uint32
          type: integer
      type: object
    InventorySetResponse:
      properties:
        kind:
          default: content#inventorySetResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#inventorySetResponse".'
          type: string
      type: object
    InvoiceSummary:
      properties:
        additionalChargeSummaries:
          description: Summary of the total amounts of the additional charges.
          items:
            $ref: "#/components/schemas/InvoiceSummaryAdditionalChargeSummary"
          type: array
        customerBalance:
          $ref: "#/components/schemas/Amount"
        googleBalance:
          $ref: "#/components/schemas/Amount"
        merchantBalance:
          $ref: "#/components/schemas/Amount"
        productTotal:
          $ref: "#/components/schemas/Amount"
        promotionSummaries:
          description: Deprecated.
          items:
            $ref: "#/components/schemas/Promotion"
          type: array
      type: object
    InvoiceSummaryAdditionalChargeSummary:
      properties:
        totalAmount:
          $ref: "#/components/schemas/Amount"
        type:
          description: "[required] Type of the additional charge."
          type: string
      type: object
    LiaAboutPageSettings:
      properties:
        status:
          description: The status of the verification process for the About page.
          type: string
        url:
          description: The URL for the About page.
          type: string
      type: object
    LiaCountrySettings:
      properties:
        about:
          $ref: "#/components/schemas/LiaAboutPageSettings"
        country:
          description: CLDR country code (e.g. "US").
          type: string
        hostedLocalStorefrontActive:
          description: The status of the "Merchant hosted local storefront" feature.
          type: boolean
        inventory:
          $ref: "#/components/schemas/LiaInventorySettings"
        onDisplayToOrder:
          $ref: "#/components/schemas/LiaOnDisplayToOrderSettings"
        posDataProvider:
          $ref: "#/components/schemas/LiaPosDataProvider"
        storePickupActive:
          description: The status of the "Store pickup" feature.
          type: boolean
      type: object
    LiaInventorySettings:
      properties:
        inventoryVerificationContactEmail:
          description: The email of the contact for the inventory verification process.
          type: string
        inventoryVerificationContactName:
          description: The name of the contact for the inventory verification process.
          type: string
        inventoryVerificationContactStatus:
          description: The status of the verification contact.
          type: string
        status:
          description: The status of the inventory verification process.
          type: string
      type: object
    LiaOnDisplayToOrderSettings:
      properties:
        shippingCostPolicyUrl:
          description: Shipping cost and policy URL.
          type: string
        status:
          description: The status of the ?On display to order? feature.
          type: string
      type: object
    LiaPosDataProvider:
      properties:
        posDataProviderId:
          description: The ID of the POS data provider.
          format: uint64
          type: string
        posExternalAccountId:
          description: The account ID by which this merchant is known to the POS data
            provider.
          type: string
      type: object
    LiaSettings:
      description: Local Inventory ads (LIA) settings. All methods except
        listposdataproviders require the admin role.
      properties:
        accountId:
          description: The ID of the account to which these LIA settings belong. Ignored
            upon update, always present in get request responses.
          format: uint64
          type: string
        countrySettings:
          description: The LIA settings for each country.
          items:
            $ref: "#/components/schemas/LiaCountrySettings"
          type: array
        kind:
          default: content#liaSettings
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#liaSettings".'
          type: string
      type: object
    LiasettingsCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/LiasettingsCustomBatchRequestEntry"
          type: array
      type: object
    LiasettingsCustomBatchRequestEntry:
      properties:
        accountId:
          description: The ID of the account for which to get/update account shipping
            settings.
          format: uint64
          type: string
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        contactEmail:
          description: Inventory validation contact email. Required only for
            SetInventoryValidationContact.
          type: string
        contactName:
          description: Inventory validation contact name. Required only for
            SetInventoryValidationContact.
          type: string
        country:
          description: The country code. Required only for RequestInventoryVerification.
          type: string
        gmbEmail:
          description: The GMB account. Required only for RequestGmbAccess.
          type: string
        liaSettings:
          $ref: "#/components/schemas/LiaSettings"
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          type: string
        posDataProviderId:
          description: The ID of POS data provider. Required only for SetPosProvider.
          format: uint64
          type: string
        posExternalAccountId:
          description: The account ID by which this merchant is known to the POS provider.
          type: string
      type: object
    LiasettingsCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/LiasettingsCustomBatchResponseEntry"
          type: array
        kind:
          default: content#liasettingsCustomBatchResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#liasettingsCustomBatchResponse".'
          type: string
      type: object
    LiasettingsCustomBatchResponseEntry:
      properties:
        batchId:
          description: The ID of the request entry to which this entry responds.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/Errors"
        gmbAccounts:
          $ref: "#/components/schemas/GmbAccounts"
        kind:
          default: content#liasettingsCustomBatchResponseEntry
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#liasettingsCustomBatchResponseEntry".'
          type: string
        liaSettings:
          $ref: "#/components/schemas/LiaSettings"
        posDataProviders:
          description: The list of POS data providers.
          items:
            $ref: "#/components/schemas/PosDataProviders"
          type: array
      type: object
    LiasettingsGetAccessibleGmbAccountsResponse:
      properties:
        accountId:
          description: The ID of the account.
          format: uint64
          type: string
        gmbAccounts:
          description: A list of GMB accounts which are available to the merchant.
          items:
            $ref: "#/components/schemas/GmbAccountsGmbAccount"
          type: array
        kind:
          default: content#liasettingsGetAccessibleGmbAccountsResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#liasettingsGetAccessibleGmbAccountsResponse".'
          type: string
      type: object
    LiasettingsListPosDataProvidersResponse:
      properties:
        kind:
          default: content#liasettingsListPosDataProvidersResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#liasettingsListPosDataProvidersResponse".'
          type: string
        posDataProviders:
          description: The list of POS data providers for each eligible country
          items:
            $ref: "#/components/schemas/PosDataProviders"
          type: array
      type: object
    LiasettingsListResponse:
      properties:
        kind:
          default: content#liasettingsListResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#liasettingsListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of LIA settings.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/LiaSettings"
          type: array
      type: object
    LiasettingsRequestGmbAccessResponse:
      properties:
        kind:
          default: content#liasettingsRequestGmbAccessResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#liasettingsRequestGmbAccessResponse".'
          type: string
      type: object
    LiasettingsRequestInventoryVerificationResponse:
      properties:
        kind:
          default: content#liasettingsRequestInventoryVerificationResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#liasettingsRequestInventoryVerificationResponse".'
          type: string
      type: object
    LiasettingsSetInventoryVerificationContactResponse:
      properties:
        kind:
          default: content#liasettingsSetInventoryVerificationContactResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#liasettingsSetInventoryVerificationContactResponse".'
          type: string
      type: object
    LiasettingsSetPosDataProviderResponse:
      properties:
        kind:
          default: content#liasettingsSetPosDataProviderResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#liasettingsSetPosDataProviderResponse".'
          type: string
      type: object
    LocationIdSet:
      properties:
        locationIds:
          description: A non-empty list of location IDs. They must all be of the same
            location type (e.g., state).
          items:
            type: string
          type: array
      type: object
    LoyaltyPoints:
      properties:
        name:
          description: Name of loyalty points program. It is recommended to limit the name
            to 12 full-width characters or 24 Roman characters.
          type: string
        pointsValue:
          description: The retailer's loyalty points in absolute value.
          format: int64
          type: string
        ratio:
          description: The ratio of a point when converted to currency. Google assumes
            currency based on Merchant Center settings. If ratio is left out, it
            defaults to 1.0.
          format: double
          type: number
      type: object
    MerchantOrderReturn:
      properties:
        creationDate:
          type: string
        merchantOrderId:
          type: string
        orderId:
          type: string
        orderReturnId:
          type: string
        returnItems:
          items:
            $ref: "#/components/schemas/MerchantOrderReturnItem"
          type: array
        returnShipments:
          items:
            $ref: "#/components/schemas/ReturnShipment"
          type: array
      type: object
    MerchantOrderReturnItem:
      properties:
        customerReturnReason:
          $ref: "#/components/schemas/CustomerReturnReason"
        itemId:
          type: string
        merchantReturnReason:
          $ref: "#/components/schemas/RefundReason"
        product:
          $ref: "#/components/schemas/OrderLineItemProduct"
        returnShipmentIds:
          items:
            type: string
          type: array
        state:
          type: string
      type: object
    Order:
      description: Order. All methods require the order manager role.
      properties:
        acknowledged:
          description: Whether the order was acknowledged.
          type: boolean
        channelType:
          description: Deprecated.
          type: string
        customer:
          $ref: "#/components/schemas/OrderCustomer"
        deliveryDetails:
          $ref: "#/components/schemas/OrderDeliveryDetails"
        id:
          description: The REST ID of the order. Globally unique.
          type: string
        kind:
          default: content#order
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#order".'
          type: string
        lineItems:
          description: Line items that are ordered.
          items:
            $ref: "#/components/schemas/OrderLineItem"
          type: array
        merchantId:
          format: uint64
          type: string
        merchantOrderId:
          description: Merchant-provided ID of the order.
          type: string
        netAmount:
          $ref: "#/components/schemas/Price"
        paymentMethod:
          $ref: "#/components/schemas/OrderPaymentMethod"
        paymentStatus:
          description: The status of the payment.
          type: string
        pickupDetails:
          $ref: "#/components/schemas/OrderPickupDetails"
        placedDate:
          description: The date when the order was placed, in ISO 8601 format.
          type: string
        promotions:
          description: The details of the merchant provided promotions applied to the
            order. More details about the program are here.
          items:
            $ref: "#/components/schemas/OrderLegacyPromotion"
          type: array
        refunds:
          description: Refunds for the order.
          items:
            $ref: "#/components/schemas/OrderRefund"
          type: array
        shipments:
          description: Shipments of the order.
          items:
            $ref: "#/components/schemas/OrderShipment"
          type: array
        shippingCost:
          $ref: "#/components/schemas/Price"
        shippingCostTax:
          $ref: "#/components/schemas/Price"
        shippingOption:
          description: Deprecated. Shipping details are provided with line items instead.
          type: string
        status:
          description: The status of the order.
          type: string
        taxCollector:
          description: The party responsible for collecting and remitting taxes.
          type: string
      type: object
    OrderAddress:
      properties:
        country:
          description: CLDR country code (e.g. "US").
          type: string
        fullAddress:
          description: >-
            Strings representing the lines of the printed label for mailing the
            order, for example:

            John Smith

            1600 Amphitheatre Parkway

            Mountain View, CA, 94043

            United States
          items:
            type: string
          type: array
        isPostOfficeBox:
          description: Whether the address is a post office box.
          type: boolean
        locality:
          description: City, town or commune. May also include dependent localities or
            sublocalities (e.g. neighborhoods or suburbs).
          type: string
        postalCode:
          description: Postal Code or ZIP (e.g. "94043").
          type: string
        recipientName:
          description: Name of the recipient.
          type: string
        region:
          description: Top-level administrative subdivision of the country. For example, a
            state like California ("CA") or a province like Quebec ("QC").
          type: string
        streetAddress:
          description: Street-level part of the address.
          items:
            type: string
          type: array
      type: object
    OrderCancellation:
      properties:
        actor:
          description: The actor that created the cancellation.
          type: string
        creationDate:
          description: Date on which the cancellation has been created, in ISO 8601 format.
          type: string
        quantity:
          description: The quantity that was canceled.
          format: uint32
          type: integer
        reason:
          description: The reason for the cancellation. Orders that are cancelled with a
            noInventory reason will lead to the removal of the product from
            Shopping Actions until you make an update to that product. This will
            not affect your Shopping ads.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrderCustomer:
      properties:
        email:
          description: Deprecated.
          type: string
        explicitMarketingPreference:
          description: Deprecated. Please use marketingRightsInfo instead.
          type: boolean
        fullName:
          description: Full name of the customer.
          type: string
        invoiceReceivingEmail:
          description: Email address for receiving merchant issued value-added tax or
            invoice documentation of this order.
          type: string
        marketingRightsInfo:
          $ref: "#/components/schemas/OrderCustomerMarketingRightsInfo"
      type: object
    OrderCustomerMarketingRightsInfo:
      properties:
        explicitMarketingPreference:
          description: Last known customer selection regarding marketing preferences. In
            certain cases this selection might not be known, so this field would
            be empty. If a customer selected granted in their most recent order,
            they can be subscribed to marketing emails. Customers who have
            chosen denied must not be subscribed, or must be unsubscribed if
            already opted-in.
          type: string
        lastUpdatedTimestamp:
          description: Timestamp when last time marketing preference was updated. Could be
            empty, if user wasn't offered a selection yet.
          type: string
        marketingEmailAddress:
          description: Email address that can be used for marketing purposes. The field may
            be empty even if explicitMarketingPreference is 'granted'. This
            happens when retrieving an old order from the customer who deleted
            their account.
          type: string
      type: object
    OrderDeliveryDetails:
      properties:
        address:
          $ref: "#/components/schemas/OrderAddress"
        phoneNumber:
          description: The phone number of the person receiving the delivery.
          type: string
      type: object
    OrderLegacyPromotion:
      properties:
        benefits:
          items:
            $ref: "#/components/schemas/OrderLegacyPromotionBenefit"
          type: array
        effectiveDates:
          description: >-
            The date and time frame when the promotion is active and ready for
            validation review. Note that the promotion live time may be delayed
            for a few hours due to the validation review.

            Start date and end date are separated by a forward slash (/). The start date is specified by the format (YYYY-MM-DD), followed by the letter ?T?, the time of the day when the sale starts (in Greenwich Mean Time, GMT), followed by an expression of the time zone for the sale. The end date is in the same format.
          type: string
        genericRedemptionCode:
          description: Optional. The text code that corresponds to the promotion when
            applied on the retailer?s website.
          type: string
        id:
          description: The unique ID of the promotion.
          type: string
        longTitle:
          description: The full title of the promotion.
          type: string
        productApplicability:
          description: Whether the promotion is applicable to all products or only specific
            products.
          type: string
        redemptionChannel:
          description: Indicates that the promotion is valid online.
          type: string
      type: object
    OrderLegacyPromotionBenefit:
      properties:
        discount:
          $ref: "#/components/schemas/Price"
        offerIds:
          description: The OfferId(s) that were purchased in this order and map to this
            specific benefit of the promotion.
          items:
            type: string
          type: array
        subType:
          description: Further describes the benefit of the promotion. Note that we will
            expand on this enumeration as we support new promotion sub-types.
          type: string
        taxImpact:
          $ref: "#/components/schemas/Price"
        type:
          description: Describes whether the promotion applies to products (e.g. 20% off)
            or to shipping (e.g. Free Shipping).
          type: string
      type: object
    OrderLineItem:
      properties:
        annotations:
          description: Annotations that are attached to the line item.
          items:
            $ref: "#/components/schemas/OrderMerchantProvidedAnnotation"
          type: array
        cancellations:
          description: Cancellations of the line item.
          items:
            $ref: "#/components/schemas/OrderCancellation"
          type: array
        id:
          description: The ID of the line item.
          type: string
        price:
          $ref: "#/components/schemas/Price"
        product:
          $ref: "#/components/schemas/OrderLineItemProduct"
        quantityCanceled:
          description: Number of items canceled.
          format: uint32
          type: integer
        quantityDelivered:
          description: Number of items delivered.
          format: uint32
          type: integer
        quantityOrdered:
          description: Number of items ordered.
          format: uint32
          type: integer
        quantityPending:
          description: Number of items pending.
          format: uint32
          type: integer
        quantityReadyForPickup:
          description: Number of items ready for pickup.
          format: uint32
          type: integer
        quantityReturned:
          description: Number of items returned.
          format: uint32
          type: integer
        quantityShipped:
          description: Number of items shipped.
          format: uint32
          type: integer
        returnInfo:
          $ref: "#/components/schemas/OrderLineItemReturnInfo"
        returns:
          description: Returns of the line item.
          items:
            $ref: "#/components/schemas/OrderReturn"
          type: array
        shippingDetails:
          $ref: "#/components/schemas/OrderLineItemShippingDetails"
        tax:
          $ref: "#/components/schemas/Price"
      type: object
    OrderLineItemProduct:
      properties:
        brand:
          description: Brand of the item.
          type: string
        channel:
          description: The item's channel (online or local).
          type: string
        condition:
          description: Condition or state of the item.
          type: string
        contentLanguage:
          description: The two-letter ISO 639-1 language code for the item.
          type: string
        fees:
          description: Associated fees at order creation time.
          items:
            $ref: "#/components/schemas/OrderLineItemProductFee"
          type: array
        gtin:
          description: Global Trade Item Number (GTIN) of the item.
          type: string
        id:
          description: The REST ID of the product.
          type: string
        imageLink:
          description: URL of an image of the item.
          type: string
        itemGroupId:
          description: Shared identifier for all variants of the same product.
          type: string
        mpn:
          description: Manufacturer Part Number (MPN) of the item.
          type: string
        offerId:
          description: An identifier of the item.
          type: string
        price:
          $ref: "#/components/schemas/Price"
        shownImage:
          description: URL to the cached image shown to the user when order was placed.
          type: string
        targetCountry:
          description: The CLDR territory code of the target country of the product.
          type: string
        title:
          description: The title of the product.
          type: string
        variantAttributes:
          description: Variant attributes for the item. These are dimensions of the
            product, such as color, gender, material, pattern, and size. You can
            find a comprehensive list of variant attributes here.
          items:
            $ref: "#/components/schemas/OrderLineItemProductVariantAttribute"
          type: array
      type: object
    OrderLineItemProductFee:
      properties:
        amount:
          $ref: "#/components/schemas/Price"
        name:
          description: Name of the fee.
          type: string
      type: object
    OrderLineItemProductVariantAttribute:
      properties:
        dimension:
          description: The dimension of the variant.
          type: string
        value:
          description: The value for the dimension.
          type: string
      type: object
    OrderLineItemReturnInfo:
      properties:
        daysToReturn:
          description: How many days later the item can be returned.
          format: int32
          type: integer
        isReturnable:
          description: Whether the item is returnable.
          type: boolean
        policyUrl:
          description: URL of the item return policy.
          type: string
      type: object
    OrderLineItemShippingDetails:
      properties:
        deliverByDate:
          description: The delivery by date, in ISO 8601 format.
          type: string
        method:
          $ref: "#/components/schemas/OrderLineItemShippingDetailsMethod"
        shipByDate:
          description: The ship by date, in ISO 8601 format.
          type: string
        type:
          description: Type of shipment. Indicates whether deliveryDetails or pickupDetails
            is applicable for this shipment.
          type: string
      type: object
    OrderLineItemShippingDetailsMethod:
      properties:
        carrier:
          description: The carrier for the shipping. Optional. See shipments[].carrier for
            a list of acceptable values.
          type: string
        maxDaysInTransit:
          description: Maximum transit time.
          format: uint32
          type: integer
        methodName:
          description: The name of the shipping method.
          type: string
        minDaysInTransit:
          description: Minimum transit time.
          format: uint32
          type: integer
      type: object
    OrderMerchantProvidedAnnotation:
      properties:
        key:
          description: Key for additional merchant provided (as key-value pairs) annotation
            about the line item.
          type: string
        value:
          description: Value for additional merchant provided (as key-value pairs)
            annotation about the line item.
          type: string
      type: object
    OrderPaymentMethod:
      properties:
        billingAddress:
          $ref: "#/components/schemas/OrderAddress"
        expirationMonth:
          description: The card expiration month (January = 1, February = 2 etc.).
          format: int32
          type: integer
        expirationYear:
          description: The card expiration year (4-digit, e.g. 2015).
          format: int32
          type: integer
        lastFourDigits:
          description: The last four digits of the card number.
          type: string
        phoneNumber:
          description: The billing phone number.
          type: string
        type:
          description: |-
            The type of instrument.

            Acceptable values are:  
            - "AMEX" 
            - "DISCOVER" 
            - "JCB" 
            - "MASTERCARD" 
            - "UNIONPAY" 
            - "VISA" 
            - ""
          type: string
      type: object
    OrderPickupDetails:
      properties:
        address:
          $ref: "#/components/schemas/OrderAddress"
        collectors:
          description: Collectors authorized to pick up shipment from the pickup location.
          items:
            $ref: "#/components/schemas/OrderPickupDetailsCollector"
          type: array
        locationId:
          description: ID of the pickup location.
          type: string
      type: object
    OrderPickupDetailsCollector:
      properties:
        name:
          description: Name of the person picking up the shipment.
          type: string
        phoneNumber:
          description: Phone number of the person picking up the shipment.
          type: string
      type: object
    OrderRefund:
      properties:
        actor:
          description: The actor that created the refund.
          type: string
        amount:
          $ref: "#/components/schemas/Price"
        creationDate:
          description: Date on which the item has been created, in ISO 8601 format.
          type: string
        reason:
          description: The reason for the refund.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrderReportDisbursement:
      description: Order disbursement. All methods require the payment analyst role.
      properties:
        disbursementAmount:
          $ref: "#/components/schemas/Price"
        disbursementCreationDate:
          description: The disbursement date, in ISO 8601 format.
          type: string
        disbursementDate:
          description: The date the disbursement was initiated, in ISO 8601 format.
          type: string
        disbursementId:
          description: The ID of the disbursement.
          type: string
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
      type: object
    OrderReportTransaction:
      properties:
        disbursementAmount:
          $ref: "#/components/schemas/Price"
        disbursementCreationDate:
          description: The date the disbursement was created, in ISO 8601 format.
          type: string
        disbursementDate:
          description: The date the disbursement was initiated, in ISO 8601 format.
          type: string
        disbursementId:
          description: The ID of the disbursement.
          type: string
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        merchantOrderId:
          description: Merchant-provided ID of the order.
          type: string
        orderId:
          description: The ID of the order.
          type: string
        productAmount:
          $ref: "#/components/schemas/Amount"
        productAmountWithRemittedTax:
          $ref: "#/components/schemas/ProductAmount"
        transactionDate:
          description: The date of the transaction, in ISO 8601 format.
          type: string
      type: object
    OrderReturn:
      properties:
        actor:
          description: The actor that created the refund.
          type: string
        creationDate:
          description: Date on which the item has been created, in ISO 8601 format.
          type: string
        quantity:
          description: Quantity that is returned.
          format: uint32
          type: integer
        reason:
          description: The reason for the return.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrderShipment:
      properties:
        carrier:
          description: |-
            The carrier handling the shipment.

            Acceptable values for US are:  
            - "gsx" 
            - "ups" 
            - "usps" 
            - "fedex" 
            - "dhl" 
            - "ecourier" 
            - "cxt" 
            - "google" 
            - "ontrac" 
            - "emsy" 
            - "ont" 
            - "deliv" 
            - "dynamex" 
            - "lasership" 
            - "mpx" 
            - "uds" 
            - "efw"  

            Acceptable values for FR are:  
            - "colissimo" 
            - "chronopost" 
            - "gls" 
            - "dpd" 
            - "bpost" 
            - "colis prive" 
            - "boxtal" 
            - "geodis"
          type: string
        creationDate:
          description: Date on which the shipment has been created, in ISO 8601 format.
          type: string
        deliveryDate:
          description: Date on which the shipment has been delivered, in ISO 8601 format.
            Present only if status is delivered
          type: string
        id:
          description: The ID of the shipment.
          type: string
        lineItems:
          description: The line items that are shipped.
          items:
            $ref: "#/components/schemas/OrderShipmentLineItemShipment"
          type: array
        status:
          description: The status of the shipment.
          type: string
        trackingId:
          description: The tracking ID for the shipment.
          type: string
      type: object
    OrderShipmentLineItemShipment:
      properties:
        lineItemId:
          description: The ID of the line item that is shipped. Either lineItemId or
            productId is required.
          type: string
        productId:
          description: The ID of the product to ship. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity that is shipped.
          format: uint32
          type: integer
      type: object
    OrderinvoicesCreateChargeInvoiceRequest:
      properties:
        invoiceId:
          description: "[required] The ID of the invoice."
          type: string
        invoiceSummary:
          $ref: "#/components/schemas/InvoiceSummary"
        lineItemInvoices:
          description: "[required] Invoice details per line item."
          items:
            $ref: "#/components/schemas/ShipmentInvoiceLineItemInvoice"
          type: array
        operationId:
          description: "[required] The ID of the operation, unique across all operations
            for a given order."
          type: string
        shipmentGroupId:
          description: "[required] ID of the shipment group. It is assigned by the merchant
            in the shipLineItems method and is used to group multiple line items
            that have the same kind of shipping charges."
          type: string
      type: object
    OrderinvoicesCreateChargeInvoiceResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#orderinvoicesCreateChargeInvoiceResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#orderinvoicesCreateChargeInvoiceResponse".'
          type: string
      type: object
    OrderinvoicesCreateRefundInvoiceRequest:
      properties:
        invoiceId:
          description: "[required] The ID of the invoice."
          type: string
        operationId:
          description: "[required] The ID of the operation, unique across all operations
            for a given order."
          type: string
        refundOnlyOption:
          $ref: "#/components/schemas/OrderinvoicesCustomBatchRequestEntryCreateRef\
            undInvoiceRefundOption"
        returnOption:
          $ref: "#/components/schemas/OrderinvoicesCustomBatchRequestEntryCreateRef\
            undInvoiceReturnOption"
        shipmentInvoices:
          description: Invoice details for different shipment groups.
          items:
            $ref: "#/components/schemas/ShipmentInvoice"
          type: array
      type: object
    OrderinvoicesCreateRefundInvoiceResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#orderinvoicesCreateRefundInvoiceResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#orderinvoicesCreateRefundInvoiceResponse".'
          type: string
      type: object
    OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption:
      properties:
        description:
          description: Optional description of the refund reason.
          type: string
        reason:
          description: "[required] Reason for the refund."
          type: string
      type: object
    OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption:
      properties:
        description:
          description: Optional description of the return reason.
          type: string
        reason:
          description: "[required] Reason for the return."
          type: string
      type: object
    OrderpaymentsNotifyAuthApprovedRequest:
      properties:
        authAmountPretax:
          $ref: "#/components/schemas/Price"
        authAmountTax:
          $ref: "#/components/schemas/Price"
      type: object
    OrderpaymentsNotifyAuthApprovedResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#orderpaymentsNotifyAuthApprovedResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#orderpaymentsNotifyAuthApprovedResponse".'
          type: string
      type: object
    OrderpaymentsNotifyAuthDeclinedRequest:
      properties:
        declineReason:
          description: Reason why payment authorization was declined.
          type: string
      type: object
    OrderpaymentsNotifyAuthDeclinedResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#orderpaymentsNotifyAuthDeclinedResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#orderpaymentsNotifyAuthDeclinedResponse".'
          type: string
      type: object
    OrderpaymentsNotifyChargeRequest:
      properties:
        chargeState:
          description: Whether charge was successful.
          type: string
        invoiceId:
          description: Deprecated. Please use invoiceIds instead.
          type: string
        invoiceIds:
          description: Invoice IDs from the orderinvoices service that correspond to the
            charge.
          items:
            type: string
          type: array
      type: object
    OrderpaymentsNotifyChargeResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#orderpaymentsNotifyChargeResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#orderpaymentsNotifyChargeResponse".'
          type: string
      type: object
    OrderpaymentsNotifyRefundRequest:
      properties:
        invoiceId:
          description: Deprecated. Please use invoiceIds instead.
          type: string
        invoiceIds:
          description: Invoice IDs from the orderinvoices service that correspond to the
            refund.
          items:
            type: string
          type: array
        refundState:
          description: Whether refund was successful.
          type: string
      type: object
    OrderpaymentsNotifyRefundResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#orderpaymentsNotifyRefundResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#orderpaymentsNotifyRefundResponse".'
          type: string
      type: object
    OrderreportsListDisbursementsResponse:
      properties:
        disbursements:
          description: The list of disbursements.
          items:
            $ref: "#/components/schemas/OrderReportDisbursement"
          type: array
        kind:
          default: content#orderreportsListDisbursementsResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#orderreportsListDisbursementsResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of disbursements.
          type: string
      type: object
    OrderreportsListTransactionsResponse:
      properties:
        kind:
          default: content#orderreportsListTransactionsResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#orderreportsListTransactionsResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of transactions.
          type: string
        transactions:
          description: The list of transactions.
          items:
            $ref: "#/components/schemas/OrderReportTransaction"
          type: array
      type: object
    OrderreturnsListResponse:
      properties:
        kind:
          default: content#orderreturnsListResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#orderreturnsListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of returns.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/MerchantOrderReturn"
          type: array
      type: object
    OrdersAcknowledgeRequest:
      properties:
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
      type: object
    OrdersAcknowledgeResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersAcknowledgeResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersAcknowledgeResponse".'
          type: string
      type: object
    OrdersAdvanceTestOrderResponse:
      properties:
        kind:
          default: content#ordersAdvanceTestOrderResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersAdvanceTestOrderResponse".'
          type: string
      type: object
    OrdersCancelLineItemRequest:
      properties:
        amount:
          $ref: "#/components/schemas/Price"
        amountPretax:
          $ref: "#/components/schemas/Price"
        amountTax:
          $ref: "#/components/schemas/Price"
        lineItemId:
          description: The ID of the line item to cancel. Either lineItemId or productId is
            required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
        productId:
          description: The ID of the product to cancel. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to cancel.
          format: uint32
          type: integer
        reason:
          description: The reason for the cancellation.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCancelLineItemResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersCancelLineItemResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersCancelLineItemResponse".'
          type: string
      type: object
    OrdersCancelRequest:
      properties:
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
        reason:
          description: The reason for the cancellation.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCancelResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersCancelResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersCancelResponse".'
          type: string
      type: object
    OrdersCancelTestOrderByCustomerRequest:
      properties:
        reason:
          description: The reason for the cancellation.
          type: string
      type: object
    OrdersCancelTestOrderByCustomerResponse:
      properties:
        kind:
          default: content#ordersCancelTestOrderByCustomerResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersCancelTestOrderByCustomerResponse".'
          type: string
      type: object
    OrdersCreateTestOrderRequest:
      properties:
        country:
          description: >-
            The  CLDR territory code of the country of the test order to create.
            Affects the currency and addresses of orders created via
            template_name, or the addresses of orders created via test_order.


            Acceptable values are:  

            - "US" 

            - "FR"  Defaults to US.
          type: string
        templateName:
          description: The test order template to use. Specify as an alternative to
            testOrder as a shortcut for retrieving a template and then creating
            an order using that template.
          type: string
        testOrder:
          $ref: "#/components/schemas/TestOrder"
      type: object
    OrdersCreateTestOrderResponse:
      properties:
        kind:
          default: content#ordersCreateTestOrderResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersCreateTestOrderResponse".'
          type: string
        orderId:
          description: The ID of the newly created test order.
          type: string
      type: object
    OrdersCreateTestReturnRequest:
      properties:
        items:
          description: Returned items.
          items:
            $ref: "#/components/schemas/OrdersCustomBatchRequestEntryCreateTestRetu\
              rnReturnItem"
          type: array
      type: object
    OrdersCreateTestReturnResponse:
      properties:
        kind:
          default: content#ordersCreateTestReturnResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersCreateTestReturnResponse".'
          type: string
        returnId:
          description: The ID of the newly created test order return.
          type: string
      type: object
    OrdersCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/OrdersCustomBatchRequestEntry"
          type: array
      type: object
    OrdersCustomBatchRequestEntry:
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        cancel:
          $ref: "#/components/schemas/OrdersCustomBatchRequestEntryCancel"
        cancelLineItem:
          $ref: "#/components/schemas/OrdersCustomBatchRequestEntryCancelLineItem"
        inStoreRefundLineItem:
          $ref: "#/components/schemas/OrdersCustomBatchRequestEntryInStoreRefundLin\
            eItem"
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        merchantOrderId:
          description: The merchant order ID. Required for updateMerchantOrderId and
            getByMerchantOrderId methods.
          type: string
        method:
          description: The method to apply.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order. Required for all methods beside get and getByMerchantOrderId.
          type: string
        orderId:
          description: The ID of the order. Required for all methods beside
            getByMerchantOrderId.
          type: string
        refund:
          $ref: "#/components/schemas/OrdersCustomBatchRequestEntryRefund"
        rejectReturnLineItem:
          $ref: "#/components/schemas/OrdersCustomBatchRequestEntryRejectReturnLine\
            Item"
        returnLineItem:
          $ref: "#/components/schemas/OrdersCustomBatchRequestEntryReturnLineItem"
        returnRefundLineItem:
          $ref: "#/components/schemas/OrdersCustomBatchRequestEntryReturnRefundLine\
            Item"
        setLineItemMetadata:
          $ref: "#/components/schemas/OrdersCustomBatchRequestEntrySetLineItemMetad\
            ata"
        shipLineItems:
          $ref: "#/components/schemas/OrdersCustomBatchRequestEntryShipLineItems"
        updateLineItemShippingDetails:
          $ref: "#/components/schemas/OrdersCustomBatchRequestEntryUpdateLineItemSh\
            ippingDetails"
        updateShipment:
          $ref: "#/components/schemas/OrdersCustomBatchRequestEntryUpdateShipment"
      type: object
    OrdersCustomBatchRequestEntryCancel:
      properties:
        reason:
          description: The reason for the cancellation.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCustomBatchRequestEntryCancelLineItem:
      properties:
        amount:
          $ref: "#/components/schemas/Price"
        amountPretax:
          $ref: "#/components/schemas/Price"
        amountTax:
          $ref: "#/components/schemas/Price"
        lineItemId:
          description: The ID of the line item to cancel. Either lineItemId or productId is
            required.
          type: string
        productId:
          description: The ID of the product to cancel. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to cancel.
          format: uint32
          type: integer
        reason:
          description: The reason for the cancellation.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCustomBatchRequestEntryCreateTestReturnReturnItem:
      properties:
        lineItemId:
          description: The ID of the line item to return.
          type: string
        quantity:
          description: Quantity that is returned.
          format: uint32
          type: integer
      type: object
    OrdersCustomBatchRequestEntryInStoreRefundLineItem:
      properties:
        amountPretax:
          $ref: "#/components/schemas/Price"
        amountTax:
          $ref: "#/components/schemas/Price"
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is
            required.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return and refund.
          format: uint32
          type: integer
        reason:
          description: The reason for the return.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCustomBatchRequestEntryRefund:
      properties:
        amount:
          $ref: "#/components/schemas/Price"
        amountPretax:
          $ref: "#/components/schemas/Price"
        amountTax:
          $ref: "#/components/schemas/Price"
        reason:
          description: The reason for the refund.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCustomBatchRequestEntryRejectReturnLineItem:
      properties:
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is
            required.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return and refund.
          format: uint32
          type: integer
        reason:
          description: The reason for the return.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCustomBatchRequestEntryReturnLineItem:
      properties:
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is
            required.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return.
          format: uint32
          type: integer
        reason:
          description: The reason for the return.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCustomBatchRequestEntryReturnRefundLineItem:
      properties:
        amountPretax:
          $ref: "#/components/schemas/Price"
        amountTax:
          $ref: "#/components/schemas/Price"
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is
            required.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return and refund.
          format: uint32
          type: integer
        reason:
          description: The reason for the return.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCustomBatchRequestEntrySetLineItemMetadata:
      properties:
        annotations:
          items:
            $ref: "#/components/schemas/OrderMerchantProvidedAnnotation"
          type: array
        lineItemId:
          description: The ID of the line item to set metadata. Either lineItemId or
            productId is required.
          type: string
        productId:
          description: The ID of the product to set metadata. This is the REST ID used in
            the products service. Either lineItemId or productId is required.
          type: string
      type: object
    OrdersCustomBatchRequestEntryShipLineItems:
      properties:
        carrier:
          description: Deprecated. Please use shipmentInfo instead. The carrier handling
            the shipment. See shipments[].carrier in the  Orders resource
            representation for a list of acceptable values.
          type: string
        lineItems:
          description: Line items to ship.
          items:
            $ref: "#/components/schemas/OrderShipmentLineItemShipment"
          type: array
        shipmentGroupId:
          description: ID of the shipment group. Required for orders that use the
            orderinvoices service.
          type: string
        shipmentId:
          description: Deprecated. Please use shipmentInfo instead. The ID of the shipment.
          type: string
        shipmentInfos:
          description: Shipment information. This field is repeated because a single line
            item can be shipped in several packages (and have several tracking
            IDs).
          items:
            $ref: "#/components/schemas/OrdersCustomBatchRequestEntryShipLineItemsS\
              hipmentInfo"
          type: array
        trackingId:
          description: Deprecated. Please use shipmentInfo instead. The tracking ID for the
            shipment.
          type: string
      type: object
    OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo:
      properties:
        carrier:
          description: The carrier handling the shipment. See shipments[].carrier in
            the  Orders resource representation for a list of acceptable values.
          type: string
        shipmentId:
          description: The ID of the shipment. This is assigned by the merchant and is
            unique to each shipment.
          type: string
        trackingId:
          description: The tracking ID for the shipment.
          type: string
      type: object
    OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails:
      properties:
        deliverByDate:
          description: >-
            Updated delivery by date, in ISO 8601 format. If not specified only
            ship by date is updated.


            Provided date should be within 1 year timeframe and can not be a date in the past.
          type: string
        lineItemId:
          description: The ID of the line item to set metadata. Either lineItemId or
            productId is required.
          type: string
        productId:
          description: The ID of the product to set metadata. This is the REST ID used in
            the products service. Either lineItemId or productId is required.
          type: string
        shipByDate:
          description: >-
            Updated ship by date, in ISO 8601 format. If not specified only
            deliver by date is updated.


            Provided date should be within 1 year timeframe and can not be a date in the past.
          type: string
      type: object
    OrdersCustomBatchRequestEntryUpdateShipment:
      properties:
        carrier:
          description: The carrier handling the shipment. Not updated if missing. See
            shipments[].carrier in the  Orders resource representation for a
            list of acceptable values.
          type: string
        deliveryDate:
          description: Date on which the shipment has been delivered, in ISO 8601 format.
            Optional and can be provided only if status is delivered.
          type: string
        shipmentId:
          description: The ID of the shipment.
          type: string
        status:
          description: New status for the shipment. Not updated if missing.
          type: string
        trackingId:
          description: The tracking ID for the shipment. Not updated if missing.
          type: string
      type: object
    OrdersCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/OrdersCustomBatchResponseEntry"
          type: array
        kind:
          default: content#ordersCustomBatchResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersCustomBatchResponse".'
          type: string
      type: object
    OrdersCustomBatchResponseEntry:
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/Errors"
        executionStatus:
          description: >-
            The status of the execution. Only defined if  

            - the request was successful; and 

            - the method is not get, getByMerchantOrderId, or one of the test methods.
          type: string
        kind:
          default: content#ordersCustomBatchResponseEntry
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersCustomBatchResponseEntry".'
          type: string
        order:
          $ref: "#/components/schemas/Order"
      type: object
    OrdersGetByMerchantOrderIdResponse:
      properties:
        kind:
          default: content#ordersGetByMerchantOrderIdResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersGetByMerchantOrderIdResponse".'
          type: string
        order:
          $ref: "#/components/schemas/Order"
      type: object
    OrdersGetTestOrderTemplateResponse:
      properties:
        kind:
          default: content#ordersGetTestOrderTemplateResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersGetTestOrderTemplateResponse".'
          type: string
        template:
          $ref: "#/components/schemas/TestOrder"
      type: object
    OrdersInStoreRefundLineItemRequest:
      properties:
        amountPretax:
          $ref: "#/components/schemas/Price"
        amountTax:
          $ref: "#/components/schemas/Price"
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is
            required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return and refund.
          format: uint32
          type: integer
        reason:
          description: The reason for the return.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersInStoreRefundLineItemResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersInStoreRefundLineItemResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersInStoreRefundLineItemResponse".'
          type: string
      type: object
    OrdersListResponse:
      properties:
        kind:
          default: content#ordersListResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of orders.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/Order"
          type: array
      type: object
    OrdersRefundRequest:
      properties:
        amount:
          $ref: "#/components/schemas/Price"
        amountPretax:
          $ref: "#/components/schemas/Price"
        amountTax:
          $ref: "#/components/schemas/Price"
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
        reason:
          description: The reason for the refund.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersRefundResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersRefundResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersRefundResponse".'
          type: string
      type: object
    OrdersRejectReturnLineItemRequest:
      properties:
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is
            required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return and refund.
          format: uint32
          type: integer
        reason:
          description: The reason for the return.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersRejectReturnLineItemResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersRejectReturnLineItemResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersRejectReturnLineItemResponse".'
          type: string
      type: object
    OrdersReturnLineItemRequest:
      properties:
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is
            required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return.
          format: uint32
          type: integer
        reason:
          description: The reason for the return.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersReturnLineItemResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersReturnLineItemResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersReturnLineItemResponse".'
          type: string
      type: object
    OrdersReturnRefundLineItemRequest:
      properties:
        amountPretax:
          $ref: "#/components/schemas/Price"
        amountTax:
          $ref: "#/components/schemas/Price"
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is
            required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return and refund.
          format: uint32
          type: integer
        reason:
          description: The reason for the return.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersReturnRefundLineItemResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersReturnRefundLineItemResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersReturnRefundLineItemResponse".'
          type: string
      type: object
    OrdersSetLineItemMetadataRequest:
      properties:
        annotations:
          items:
            $ref: "#/components/schemas/OrderMerchantProvidedAnnotation"
          type: array
        lineItemId:
          description: The ID of the line item to set metadata. Either lineItemId or
            productId is required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
        productId:
          description: The ID of the product to set metadata. This is the REST ID used in
            the products service. Either lineItemId or productId is required.
          type: string
      type: object
    OrdersSetLineItemMetadataResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersSetLineItemMetadataResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersSetLineItemMetadataResponse".'
          type: string
      type: object
    OrdersShipLineItemsRequest:
      properties:
        carrier:
          description: Deprecated. Please use shipmentInfo instead. The carrier handling
            the shipment. See shipments[].carrier in the  Orders resource
            representation for a list of acceptable values.
          type: string
        lineItems:
          description: Line items to ship.
          items:
            $ref: "#/components/schemas/OrderShipmentLineItemShipment"
          type: array
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
        shipmentGroupId:
          description: ID of the shipment group. Required for orders that use the
            orderinvoices service.
          type: string
        shipmentId:
          description: Deprecated. Please use shipmentInfo instead. The ID of the shipment.
          type: string
        shipmentInfos:
          description: Shipment information. This field is repeated because a single line
            item can be shipped in several packages (and have several tracking
            IDs).
          items:
            $ref: "#/components/schemas/OrdersCustomBatchRequestEntryShipLineItemsS\
              hipmentInfo"
          type: array
        trackingId:
          description: Deprecated. Please use shipmentInfo instead. The tracking ID for the
            shipment.
          type: string
      type: object
    OrdersShipLineItemsResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersShipLineItemsResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersShipLineItemsResponse".'
          type: string
      type: object
    OrdersUpdateLineItemShippingDetailsRequest:
      properties:
        deliverByDate:
          description: >-
            Updated delivery by date, in ISO 8601 format. If not specified only
            ship by date is updated.


            Provided date should be within 1 year timeframe and can not be a date in the past.
          type: string
        lineItemId:
          description: The ID of the line item to set metadata. Either lineItemId or
            productId is required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
        productId:
          description: The ID of the product to set metadata. This is the REST ID used in
            the products service. Either lineItemId or productId is required.
          type: string
        shipByDate:
          description: >-
            Updated ship by date, in ISO 8601 format. If not specified only
            deliver by date is updated.


            Provided date should be within 1 year timeframe and can not be a date in the past.
          type: string
      type: object
    OrdersUpdateLineItemShippingDetailsResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersUpdateLineItemShippingDetailsResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersUpdateLineItemShippingDetailsResponse".'
          type: string
      type: object
    OrdersUpdateMerchantOrderIdRequest:
      properties:
        merchantOrderId:
          description: The merchant order id to be assigned to the order. Must be unique
            per merchant.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
      type: object
    OrdersUpdateMerchantOrderIdResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersUpdateMerchantOrderIdResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersUpdateMerchantOrderIdResponse".'
          type: string
      type: object
    OrdersUpdateShipmentRequest:
      properties:
        carrier:
          description: The carrier handling the shipment. Not updated if missing. See
            shipments[].carrier in the  Orders resource representation for a
            list of acceptable values.
          type: string
        deliveryDate:
          description: Date on which the shipment has been delivered, in ISO 8601 format.
            Optional and can be provided only if status is delivered.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
        shipmentId:
          description: The ID of the shipment.
          type: string
        status:
          description: New status for the shipment. Not updated if missing.
          type: string
        trackingId:
          description: The tracking ID for the shipment. Not updated if missing.
          type: string
      type: object
    OrdersUpdateShipmentResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersUpdateShipmentResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersUpdateShipmentResponse".'
          type: string
      type: object
    PosCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/PosCustomBatchRequestEntry"
          type: array
      type: object
    PosCustomBatchRequestEntry:
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        inventory:
          $ref: "#/components/schemas/PosInventory"
        merchantId:
          description: The ID of the POS data provider.
          format: uint64
          type: string
        method:
          type: string
        sale:
          $ref: "#/components/schemas/PosSale"
        store:
          $ref: "#/components/schemas/PosStore"
        storeCode:
          description: The store code. Set this only if the method is delete or get.
          type: string
        targetMerchantId:
          description: The ID of the account for which to get/submit data.
          format: uint64
          type: string
      type: object
    PosCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/PosCustomBatchResponseEntry"
          type: array
        kind:
          default: content#posCustomBatchResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#posCustomBatchResponse".'
          type: string
      type: object
    PosCustomBatchResponseEntry:
      properties:
        batchId:
          description: The ID of the request entry to which this entry responds.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/Errors"
        inventory:
          $ref: "#/components/schemas/PosInventory"
        kind:
          default: content#posCustomBatchResponseEntry
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#posCustomBatchResponseEntry".'
          type: string
        sale:
          $ref: "#/components/schemas/PosSale"
        store:
          $ref: "#/components/schemas/PosStore"
      type: object
    PosDataProviders:
      properties:
        country:
          description: Country code.
          type: string
        posDataProviders:
          description: A list of POS data providers.
          items:
            $ref: "#/components/schemas/PosDataProvidersPosDataProvider"
          type: array
      type: object
    PosDataProvidersPosDataProvider:
      properties:
        displayName:
          description: The display name of Pos data Provider.
          type: string
        fullName:
          description: The full name of this POS data Provider.
          type: string
        providerId:
          description: The ID of the account.
          format: uint64
          type: string
      type: object
    PosInventory:
      description: The absolute quantity of an item available at the given store.
      properties:
        contentLanguage:
          description: The two-letter ISO 639-1 language code for the item.
          type: string
        gtin:
          description: Global Trade Item Number.
          type: string
        itemId:
          description: A unique identifier for the item.
          type: string
        kind:
          default: content#posInventory
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#posInventory".'
          type: string
        price:
          $ref: "#/components/schemas/Price"
        quantity:
          description: The available quantity of the item.
          format: int64
          type: string
        storeCode:
          description: The identifier of the merchant's store. Either a storeCode inserted
            via the API or the code of the store in Google My Business.
          type: string
        targetCountry:
          description: The CLDR territory code for the item.
          type: string
        timestamp:
          description: The inventory timestamp, in ISO 8601 format.
          type: string
      type: object
    PosInventoryRequest:
      properties:
        contentLanguage:
          description: The two-letter ISO 639-1 language code for the item.
          type: string
        gtin:
          description: Global Trade Item Number.
          type: string
        itemId:
          description: A unique identifier for the item.
          type: string
        price:
          $ref: "#/components/schemas/Price"
        quantity:
          description: The available quantity of the item.
          format: int64
          type: string
        storeCode:
          description: The identifier of the merchant's store. Either a storeCode inserted
            via the API or the code of the store in Google My Business.
          type: string
        targetCountry:
          description: The CLDR territory code for the item.
          type: string
        timestamp:
          description: The inventory timestamp, in ISO 8601 format.
          type: string
      type: object
    PosInventoryResponse:
      properties:
        contentLanguage:
          description: The two-letter ISO 639-1 language code for the item.
          type: string
        gtin:
          description: Global Trade Item Number.
          type: string
        itemId:
          description: A unique identifier for the item.
          type: string
        kind:
          default: content#posInventoryResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#posInventoryResponse".'
          type: string
        price:
          $ref: "#/components/schemas/Price"
        quantity:
          description: The available quantity of the item.
          format: int64
          type: string
        storeCode:
          description: The identifier of the merchant's store. Either a storeCode inserted
            via the API or the code of the store in Google My Business.
          type: string
        targetCountry:
          description: The CLDR territory code for the item.
          type: string
        timestamp:
          description: The inventory timestamp, in ISO 8601 format.
          type: string
      type: object
    PosListResponse:
      properties:
        kind:
          default: content#posListResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#posListResponse".'
          type: string
        resources:
          items:
            $ref: "#/components/schemas/PosStore"
          type: array
      type: object
    PosSale:
      description: The change of the available quantity of an item at the given store.
      properties:
        contentLanguage:
          description: The two-letter ISO 639-1 language code for the item.
          type: string
        gtin:
          description: Global Trade Item Number.
          type: string
        itemId:
          description: A unique identifier for the item.
          type: string
        kind:
          default: content#posSale
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#posSale".'
          type: string
        price:
          $ref: "#/components/schemas/Price"
        quantity:
          description: The relative change of the available quantity. Negative for items
            returned.
          format: int64
          type: string
        saleId:
          description: A unique ID to group items from the same sale event.
          type: string
        storeCode:
          description: The identifier of the merchant's store. Either a storeCode inserted
            via the API or the code of the store in Google My Business.
          type: string
        targetCountry:
          description: The CLDR territory code for the item.
          type: string
        timestamp:
          description: The inventory timestamp, in ISO 8601 format.
          type: string
      type: object
    PosSaleRequest:
      properties:
        contentLanguage:
          description: The two-letter ISO 639-1 language code for the item.
          type: string
        gtin:
          description: Global Trade Item Number.
          type: string
        itemId:
          description: A unique identifier for the item.
          type: string
        price:
          $ref: "#/components/schemas/Price"
        quantity:
          description: The relative change of the available quantity. Negative for items
            returned.
          format: int64
          type: string
        saleId:
          description: A unique ID to group items from the same sale event.
          type: string
        storeCode:
          description: The identifier of the merchant's store. Either a storeCode inserted
            via the API or the code of the store in Google My Business.
          type: string
        targetCountry:
          description: The CLDR territory code for the item.
          type: string
        timestamp:
          description: The inventory timestamp, in ISO 8601 format.
          type: string
      type: object
    PosSaleResponse:
      properties:
        contentLanguage:
          description: The two-letter ISO 639-1 language code for the item.
          type: string
        gtin:
          description: Global Trade Item Number.
          type: string
        itemId:
          description: A unique identifier for the item.
          type: string
        kind:
          default: content#posSaleResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#posSaleResponse".'
          type: string
        price:
          $ref: "#/components/schemas/Price"
        quantity:
          description: The relative change of the available quantity. Negative for items
            returned.
          format: int64
          type: string
        saleId:
          description: A unique ID to group items from the same sale event.
          type: string
        storeCode:
          description: The identifier of the merchant's store. Either a storeCode inserted
            via the API or the code of the store in Google My Business.
          type: string
        targetCountry:
          description: The CLDR territory code for the item.
          type: string
        timestamp:
          description: The inventory timestamp, in ISO 8601 format.
          type: string
      type: object
    PosStore:
      description: Store resource.
      properties:
        kind:
          default: content#posStore
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#posStore".'
          type: string
        storeAddress:
          description: The street address of the store.
          type: string
        storeCode:
          description: A store identifier that is unique for the given merchant.
          type: string
      type: object
    PostalCodeGroup:
      properties:
        country:
          description: The CLDR territory code of the country the postal code group applies
            to. Required.
          type: string
        name:
          description: The name of the postal code group, referred to in headers. Required.
          type: string
        postalCodeRanges:
          description: A range of postal codes. Required.
          items:
            $ref: "#/components/schemas/PostalCodeRange"
          type: array
      type: object
    PostalCodeRange:
      properties:
        postalCodeRangeBegin:
          description: 'A postal code or a pattern of the form prefix* denoting the
            inclusive lower bound of the range defining the area. Examples
            values: "94108", "9410*", "9*". Required.'
          type: string
        postalCodeRangeEnd:
          description: "A postal code or a pattern of the form prefix* denoting the
            inclusive upper bound of the range defining the area. It must have
            the same length as postalCodeRangeBegin: if postalCodeRangeBegin is
            a postal code then postalCodeRangeEnd must be a postal code too; if
            postalCodeRangeBegin is a pattern then postalCodeRangeEnd must be a
            pattern with the same prefix length. Optional: if not set, then the
            area is defined as being all the postal codes matching
            postalCodeRangeBegin."
          type: string
      type: object
    Price:
      properties:
        currency:
          description: The currency of the price.
          type: string
        value:
          description: The price represented as a number.
          type: string
      type: object
    Product:
      description: Product data. After inserting, updating, or deleting a product, it may
        take several minutes before changes take effect.
      properties:
        additionalImageLinks:
          description: Additional URLs of images of the item.
          items:
            type: string
          type: array
        additionalProductTypes:
          description: Additional categories of the item (formatted as in products data
            specification).
          items:
            type: string
          type: array
        adult:
          description: Set to true if the item is targeted towards adults.
          type: boolean
        adwordsGrouping:
          description: Used to group items in an arbitrary way. Only for CPA%, discouraged
            otherwise.
          type: string
        adwordsLabels:
          description: Similar to adwords_grouping, but only works on CPC.
          items:
            type: string
          type: array
        adwordsRedirect:
          description: Allows advertisers to override the item URL when the product is
            shown within the context of Product Ads.
          type: string
        ageGroup:
          description: Target age group of the item.
          type: string
        aspects:
          description: Deprecated. Do not use.
          items:
            $ref: "#/components/schemas/ProductAspect"
          type: array
        availability:
          description: Availability status of the item.
          type: string
        availabilityDate:
          description: The day a pre-ordered product becomes available for delivery, in ISO
            8601 format.
          type: string
        brand:
          description: Brand of the item.
          type: string
        channel:
          description: The item's channel (online or local).
          type: string
        color:
          description: Color of the item.
          type: string
        condition:
          description: Condition or state of the item.
          type: string
        contentLanguage:
          description: The two-letter ISO 639-1 language code for the item.
          type: string
        costOfGoodsSold:
          $ref: "#/components/schemas/Price"
        customAttributes:
          description: 'A list of custom (merchant-provided) attributes. It can also be
            used for submitting any attribute of the feed specification in its
            generic form (e.g., { "name": "size type", "value": "regular" }).
            This is useful for submitting attributes not explicitly exposed by
            the API.'
          items:
            $ref: "#/components/schemas/CustomAttribute"
          type: array
        customGroups:
          description: A list of custom (merchant-provided) custom attribute groups.
          items:
            $ref: "#/components/schemas/CustomGroup"
          type: array
        customLabel0:
          description: Custom label 0 for custom grouping of items in a Shopping campaign.
          type: string
        customLabel1:
          description: Custom label 1 for custom grouping of items in a Shopping campaign.
          type: string
        customLabel2:
          description: Custom label 2 for custom grouping of items in a Shopping campaign.
          type: string
        customLabel3:
          description: Custom label 3 for custom grouping of items in a Shopping campaign.
          type: string
        customLabel4:
          description: Custom label 4 for custom grouping of items in a Shopping campaign.
          type: string
        description:
          description: Description of the item.
          type: string
        destinations:
          description: Specifies the intended destinations for the product.
          items:
            $ref: "#/components/schemas/ProductDestination"
          type: array
        displayAdsId:
          description: An identifier for an item for dynamic remarketing campaigns.
          type: string
        displayAdsLink:
          description: URL directly to your item's landing page for dynamic remarketing
            campaigns.
          type: string
        displayAdsSimilarIds:
          description: Advertiser-specified recommendations.
          items:
            type: string
          type: array
        displayAdsTitle:
          description: Title of an item for dynamic remarketing campaigns.
          type: string
        displayAdsValue:
          description: Offer margin for dynamic remarketing campaigns.
          format: double
          type: number
        energyEfficiencyClass:
          description: The energy efficiency class as defined in EU directive 2010/30/EU.
          type: string
        expirationDate:
          description: Date on which the item should expire, as specified upon insertion,
            in ISO 8601 format. The actual expiration date in Google Shopping is
            exposed in productstatuses as googleExpirationDate and might be
            earlier if expirationDate is too far in the future.
          type: string
        gender:
          description: Target gender of the item.
          type: string
        googleProductCategory:
          description: Google's category of the item (see Google product taxonomy).
          type: string
        gtin:
          description: Global Trade Item Number (GTIN) of the item.
          type: string
        id:
          description: >-
            The REST ID of the product. Content API methods that operate on
            products take this as their productId parameter.

            The REST ID for a product is of the form channel:contentLanguage:targetCountry:offerId.
          type: string
        identifierExists:
          description: False when the item does not have unique product identifiers
            appropriate to its category, such as GTIN, MPN, and brand. Required
            according to the Unique Product Identifier Rules for all target
            countries except for Canada.
          type: boolean
        imageLink:
          description: URL of an image of the item.
          type: string
        installment:
          $ref: "#/components/schemas/Installment"
        isBundle:
          description: Whether the item is a merchant-defined bundle. A bundle is a custom
            grouping of different products sold by a merchant for a single
            price.
          type: boolean
        itemGroupId:
          description: Shared identifier for all variants of the same product.
          type: string
        kind:
          default: content#product
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#product".'
          type: string
        link:
          description: URL directly linking to your item's page on your website.
          type: string
        loyaltyPoints:
          $ref: "#/components/schemas/LoyaltyPoints"
        material:
          description: The material of which the item is made.
          type: string
        maxEnergyEfficiencyClass:
          description: The energy efficiency class as defined in EU directive 2010/30/EU.
          type: string
        maxHandlingTime:
          description: Maximal product handling time (in business days).
          format: int64
          type: string
        minEnergyEfficiencyClass:
          description: The energy efficiency class as defined in EU directive 2010/30/EU.
          type: string
        minHandlingTime:
          description: Minimal product handling time (in business days).
          format: int64
          type: string
        mobileLink:
          description: Link to a mobile-optimized version of the landing page.
          type: string
        mpn:
          description: Manufacturer Part Number (MPN) of the item.
          type: string
        multipack:
          description: The number of identical products in a merchant-defined multipack.
          format: int64
          type: string
        offerId:
          description: >-
            A unique identifier for the item. Leading and trailing whitespaces
            are stripped and multiple whitespaces are replaced by a single
            whitespace upon submission. Only valid unicode characters are
            accepted. See the products feed specification for details.

            Note: Content API methods that operate on products take the REST ID of the product, not this identifier.
          type: string
        onlineOnly:
          description: Deprecated. Whether an item is available for purchase only online.
          type: boolean
        pattern:
          description: The item's pattern (e.g. polka dots).
          type: string
        price:
          $ref: "#/components/schemas/Price"
        productType:
          description: Your category of the item (formatted as in products data
            specification).
          type: string
        promotionIds:
          description: The unique ID of a promotion.
          items:
            type: string
          type: array
        salePrice:
          $ref: "#/components/schemas/Price"
        salePriceEffectiveDate:
          description: Date range during which the item is on sale (see products data
            specification).
          type: string
        sellOnGoogleQuantity:
          description: The quantity of the product that is available for selling on Google.
            Supported only for online products.
          format: int64
          type: string
        shipping:
          description: Shipping rules.
          items:
            $ref: "#/components/schemas/ProductShipping"
          type: array
        shippingHeight:
          $ref: "#/components/schemas/ProductShippingDimension"
        shippingLabel:
          description: The shipping label of the product, used to group product in
            account-level shipping rules.
          type: string
        shippingLength:
          $ref: "#/components/schemas/ProductShippingDimension"
        shippingWeight:
          $ref: "#/components/schemas/ProductShippingWeight"
        shippingWidth:
          $ref: "#/components/schemas/ProductShippingDimension"
        sizeSystem:
          description: System in which the size is specified. Recommended for apparel items.
          type: string
        sizeType:
          description: The cut of the item. Recommended for apparel items.
          type: string
        sizes:
          description: Size of the item.
          items:
            type: string
          type: array
        source:
          description: The source of the offer, i.e., how the offer was created.
          type: string
        targetCountry:
          description: The CLDR territory code for the item.
          type: string
        taxes:
          description: Tax information.
          items:
            $ref: "#/components/schemas/ProductTax"
          type: array
        title:
          description: Title of the item.
          type: string
        unitPricingBaseMeasure:
          $ref: "#/components/schemas/ProductUnitPricingBaseMeasure"
        unitPricingMeasure:
          $ref: "#/components/schemas/ProductUnitPricingMeasure"
        validatedDestinations:
          description: Deprecated. The read-only list of intended destinations which passed
            validation.
          items:
            type: string
          type: array
        warnings:
          description: Read-only warnings.
          items:
            $ref: "#/components/schemas/Error"
          type: array
      type: object
    ProductAmount:
      properties:
        priceAmount:
          $ref: "#/components/schemas/Price"
        remittedTaxAmount:
          $ref: "#/components/schemas/Price"
        taxAmount:
          $ref: "#/components/schemas/Price"
      type: object
    ProductAspect:
      properties:
        aspectName:
          description: The name of the aspect.
          type: string
        destinationName:
          description: The name of the destination. Leave out to apply to all destinations.
          type: string
        intention:
          description: Whether the aspect is required, excluded or should be validated.
          type: string
      type: object
    ProductDestination:
      properties:
        destinationName:
          description: The name of the destination.
          type: string
        intention:
          description: Whether the destination is required, excluded or should be validated.
          type: string
      type: object
    ProductShipping:
      properties:
        country:
          description: The CLDR territory code of the country to which an item will ship.
          type: string
        locationGroupName:
          description: The location where the shipping is applicable, represented by a
            location group name.
          type: string
        locationId:
          description: The numeric ID of a location that the shipping rate applies to as
            defined in the AdWords API.
          format: int64
          type: string
        postalCode:
          description: The postal code range that the shipping rate applies to, represented
            by a postal code, a postal code prefix followed by a * wildcard, a
            range between two postal codes or two postal code prefixes of equal
            length.
          type: string
        price:
          $ref: "#/components/schemas/Price"
        region:
          description: The geographic region to which a shipping rate applies.
          type: string
        service:
          description: A free-form description of the service class or delivery speed.
          type: string
      type: object
    ProductShippingDimension:
      properties:
        unit:
          description: The unit of value.
          type: string
        value:
          description: The dimension of the product used to calculate the shipping cost of
            the item.
          format: double
          type: number
      type: object
    ProductShippingWeight:
      properties:
        unit:
          description: The unit of value.
          type: string
        value:
          description: The weight of the product used to calculate the shipping cost of the
            item.
          format: double
          type: number
      type: object
    ProductStatus:
      description: The status of a product, i.e., information about a product computed
        asynchronously.
      properties:
        creationDate:
          description: Date on which the item has been created, in ISO 8601 format.
          type: string
        dataQualityIssues:
          description: DEPRECATED - never populated
          items:
            $ref: "#/components/schemas/ProductStatusDataQualityIssue"
          type: array
        destinationStatuses:
          description: The intended destinations for the product.
          items:
            $ref: "#/components/schemas/ProductStatusDestinationStatus"
          type: array
        googleExpirationDate:
          description: Date on which the item expires in Google Shopping, in ISO 8601
            format.
          type: string
        itemLevelIssues:
          description: A list of all issues associated with the product.
          items:
            $ref: "#/components/schemas/ProductStatusItemLevelIssue"
          type: array
        kind:
          default: content#productStatus
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#productStatus".'
          type: string
        lastUpdateDate:
          description: Date on which the item has been last updated, in ISO 8601 format.
          type: string
        link:
          description: The link to the product.
          type: string
        product:
          $ref: "#/components/schemas/Product"
        productId:
          description: The ID of the product for which status is reported.
          type: string
        title:
          description: The title of the product.
          type: string
      type: object
    ProductStatusDataQualityIssue:
      properties:
        destination:
          type: string
        detail:
          type: string
        fetchStatus:
          type: string
        id:
          type: string
        location:
          type: string
        severity:
          type: string
        timestamp:
          type: string
        valueOnLandingPage:
          type: string
        valueProvided:
          type: string
      type: object
    ProductStatusDestinationStatus:
      properties:
        approvalPending:
          description: Whether the approval status might change due to further processing.
          type: boolean
        approvalStatus:
          description: The destination's approval status.
          type: string
        destination:
          description: The name of the destination
          type: string
        intention:
          description: Provided for backward compatibility only. Always set to "required".
          type: string
      type: object
    ProductStatusItemLevelIssue:
      properties:
        attributeName:
          description: The attribute's name, if the issue is caused by a single attribute.
          type: string
        code:
          description: The error code of the issue.
          type: string
        description:
          description: A short issue description in English.
          type: string
        destination:
          description: The destination the issue applies to.
          type: string
        detail:
          description: A detailed issue description in English.
          type: string
        documentation:
          description: The URL of a web page to help with resolving this issue.
          type: string
        resolution:
          description: Whether the issue can be resolved by the merchant.
          type: string
        servability:
          description: How this issue affects serving of the offer.
          type: string
      type: object
    ProductTax:
      properties:
        country:
          description: The country within which the item is taxed, specified as a CLDR
            territory code.
          type: string
        locationId:
          description: The numeric ID of a location that the tax rate applies to as defined
            in the AdWords API.
          format: int64
          type: string
        postalCode:
          description: "The postal code range that the tax rate applies to, represented by
            a ZIP code, a ZIP code prefix using * wildcard, a range between two
            ZIP codes or two ZIP code prefixes of equal length. Examples: 94114,
            94*, 94002-95460, 94*-95*."
          type: string
        rate:
          description: The percentage of tax rate that applies to the item price.
          format: double
          type: number
        region:
          description: The geographic region to which the tax rate applies.
          type: string
        taxShip:
          description: Set to true if tax is charged on shipping.
          type: boolean
      type: object
    ProductUnitPricingBaseMeasure:
      properties:
        unit:
          description: The unit of the denominator.
          type: string
        value:
          description: The denominator of the unit price.
          format: int64
          type: string
      type: object
    ProductUnitPricingMeasure:
      properties:
        unit:
          description: The unit of the measure.
          type: string
        value:
          description: The measure of an item.
          format: double
          type: number
      type: object
    ProductsCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/ProductsCustomBatchRequestEntry"
          type: array
      type: object
    ProductsCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch products request.
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          type: string
        product:
          $ref: "#/components/schemas/Product"
        productId:
          description: The ID of the product to get or delete. Only defined if the method
            is get or delete.
          type: string
      type: object
    ProductsCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/ProductsCustomBatchResponseEntry"
          type: array
        kind:
          default: content#productsCustomBatchResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#productsCustomBatchResponse".'
          type: string
      type: object
    ProductsCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch products response.
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/Errors"
        kind:
          default: content#productsCustomBatchResponseEntry
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#productsCustomBatchResponseEntry".'
          type: string
        product:
          $ref: "#/components/schemas/Product"
      type: object
    ProductsListResponse:
      properties:
        kind:
          default: content#productsListResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#productsListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of products.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/Product"
          type: array
      type: object
    ProductstatusesCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/ProductstatusesCustomBatchRequestEntry"
          type: array
      type: object
    ProductstatusesCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch productstatuses request.
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        destinations:
          description: If set, only issues for the specified destinations are returned,
            otherwise only issues for the Shopping destination.
          items:
            type: string
          type: array
        includeAttributes:
          type: boolean
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          type: string
        productId:
          description: The ID of the product whose status to get.
          type: string
      type: object
    ProductstatusesCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/ProductstatusesCustomBatchResponseEntry"
          type: array
        kind:
          default: content#productstatusesCustomBatchResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#productstatusesCustomBatchResponse".'
          type: string
      type: object
    ProductstatusesCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch productstatuses response.
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/Errors"
        kind:
          default: content#productstatusesCustomBatchResponseEntry
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#productstatusesCustomBatchResponseEntry".'
          type: string
        productStatus:
          $ref: "#/components/schemas/ProductStatus"
      type: object
    ProductstatusesListResponse:
      properties:
        kind:
          default: content#productstatusesListResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#productstatusesListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of products statuses.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/ProductStatus"
          type: array
      type: object
    Promotion:
      properties:
        promotionAmount:
          $ref: "#/components/schemas/Amount"
        promotionId:
          description: "[required] ID of the promotion."
          type: string
      type: object
    RateGroup:
      properties:
        applicableShippingLabels:
          description: "A list of shipping labels defining the products to which this rate
            group applies to. This is a disjunction: only one of the labels has
            to match for the rate group to apply. May only be empty for the last
            rate group of a service. Required."
          items:
            type: string
          type: array
        carrierRates:
          description: A list of carrier rates that can be referred to by mainTable or
            singleValue.
          items:
            $ref: "#/components/schemas/CarrierRate"
          type: array
        mainTable:
          $ref: "#/components/schemas/Table"
        name:
          description: Name of the rate group. Optional. If set has to be unique within
            shipping service.
          type: string
        singleValue:
          $ref: "#/components/schemas/Value"
        subtables:
          description: A list of subtables referred to by mainTable. Can only be set if
            mainTable is set.
          items:
            $ref: "#/components/schemas/Table"
          type: array
      type: object
    RefundReason:
      properties:
        description:
          type: string
        reasonCode:
          type: string
      type: object
    ReturnShipment:
      properties:
        creationDate:
          type: string
        deliveryDate:
          type: string
        returnMethodType:
          type: string
        shipmentId:
          type: string
        shipmentTrackingInfos:
          items:
            $ref: "#/components/schemas/ShipmentTrackingInfo"
          type: array
        shippingDate:
          type: string
        state:
          type: string
      type: object
    Row:
      properties:
        cells:
          description: The list of cells that constitute the row. Must have the same length
            as columnHeaders for two-dimensional tables, a length of 1 for
            one-dimensional tables. Required.
          items:
            $ref: "#/components/schemas/Value"
          type: array
      type: object
    Service:
      properties:
        active:
          description: A boolean exposing the active status of the shipping service.
            Required.
          type: boolean
        currency:
          description: The CLDR code of the currency to which this service applies. Must
            match that of the prices in rate groups.
          type: string
        deliveryCountry:
          description: The CLDR territory code of the country to which the service applies.
            Required.
          type: string
        deliveryTime:
          $ref: "#/components/schemas/DeliveryTime"
        eligibility:
          description: Eligibility for this service.
          type: string
        minimumOrderValue:
          $ref: "#/components/schemas/Price"
        name:
          description: Free-form name of the service. Must be unique within target account.
            Required.
          type: string
        rateGroups:
          description: Shipping rate group definitions. Only the last one is allowed to
            have an empty applicableShippingLabels, which means "everything
            else". The other applicableShippingLabels must not overlap.
          items:
            $ref: "#/components/schemas/RateGroup"
          type: array
      type: object
    ShipmentInvoice:
      properties:
        invoiceSummary:
          $ref: "#/components/schemas/InvoiceSummary"
        lineItemInvoices:
          description: "[required] Invoice details per line item."
          items:
            $ref: "#/components/schemas/ShipmentInvoiceLineItemInvoice"
          type: array
        shipmentGroupId:
          description: "[required] ID of the shipment group. It is assigned by the merchant
            in the shipLineItems method and is used to group multiple line items
            that have the same kind of shipping charges."
          type: string
      type: object
    ShipmentInvoiceLineItemInvoice:
      properties:
        lineItemId:
          description: ID of the line item. Either lineItemId or productId must be set.
          type: string
        productId:
          description: ID of the product. This is the REST ID used in the products service.
            Either lineItemId or productId must be set.
          type: string
        shipmentUnitIds:
          description: "[required] The shipment unit ID is assigned by the merchant and
            defines individual quantities within a line item. The same ID can be
            assigned to units that are the same while units that differ must be
            assigned a different ID (for example: free or promotional units)."
          items:
            type: string
          type: array
        unitInvoice:
          $ref: "#/components/schemas/UnitInvoice"
      type: object
    ShipmentTrackingInfo:
      properties:
        carrier:
          type: string
        trackingNumber:
          type: string
      type: object
    ShippingSettings:
      description: The merchant account's shipping settings. All methods except
        getsupportedcarriers and getsupportedholidays require the admin role.
      properties:
        accountId:
          description: The ID of the account to which these account shipping settings
            belong. Ignored upon update, always present in get request
            responses.
          format: uint64
          type: string
        postalCodeGroups:
          description: A list of postal code groups that can be referred to in services.
            Optional.
          items:
            $ref: "#/components/schemas/PostalCodeGroup"
          type: array
        services:
          description: The target account's list of services. Optional.
          items:
            $ref: "#/components/schemas/Service"
          type: array
      type: object
    ShippingsettingsCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/ShippingsettingsCustomBatchRequestEntry"
          type: array
      type: object
    ShippingsettingsCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch shippingsettings request.
      properties:
        accountId:
          description: The ID of the account for which to get/update account shipping
            settings.
          format: uint64
          type: string
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          type: string
        shippingSettings:
          $ref: "#/components/schemas/ShippingSettings"
      type: object
    ShippingsettingsCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/ShippingsettingsCustomBatchResponseEntry"
          type: array
        kind:
          default: content#shippingsettingsCustomBatchResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#shippingsettingsCustomBatchResponse".'
          type: string
      type: object
    ShippingsettingsCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch shipping settings response.
      properties:
        batchId:
          description: The ID of the request entry to which this entry responds.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/Errors"
        kind:
          default: content#shippingsettingsCustomBatchResponseEntry
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#shippingsettingsCustomBatchResponseEntry".'
          type: string
        shippingSettings:
          $ref: "#/components/schemas/ShippingSettings"
      type: object
    ShippingsettingsGetSupportedCarriersResponse:
      properties:
        carriers:
          description: A list of supported carriers. May be empty.
          items:
            $ref: "#/components/schemas/CarriersCarrier"
          type: array
        kind:
          default: content#shippingsettingsGetSupportedCarriersResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#shippingsettingsGetSupportedCarriersResponse".'
          type: string
      type: object
    ShippingsettingsGetSupportedHolidaysResponse:
      properties:
        holidays:
          description: A list of holidays applicable for delivery guarantees. May be empty.
          items:
            $ref: "#/components/schemas/HolidaysHoliday"
          type: array
        kind:
          default: content#shippingsettingsGetSupportedHolidaysResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#shippingsettingsGetSupportedHolidaysResponse".'
          type: string
      type: object
    ShippingsettingsListResponse:
      properties:
        kind:
          default: content#shippingsettingsListResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#shippingsettingsListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of shipping settings.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/ShippingSettings"
          type: array
      type: object
    Table:
      properties:
        columnHeaders:
          $ref: "#/components/schemas/Headers"
        name:
          description: Name of the table. Required for subtables, ignored for the main
            table.
          type: string
        rowHeaders:
          $ref: "#/components/schemas/Headers"
        rows:
          description: The list of rows that constitute the table. Must have the same
            length as rowHeaders. Required.
          items:
            $ref: "#/components/schemas/Row"
          type: array
      type: object
    TestOrder:
      properties:
        customer:
          $ref: "#/components/schemas/TestOrderCustomer"
        enableOrderinvoices:
          description: Whether the orderinvoices service should support this order.
          type: boolean
        kind:
          default: content#testOrder
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#testOrder".'
          type: string
        lineItems:
          description: Line items that are ordered. At least one line item must be provided.
          items:
            $ref: "#/components/schemas/TestOrderLineItem"
          type: array
        notificationMode:
          description: Determines if test order must be pulled by merchant or pushed to
            merchant via push integration.
          type: string
        paymentMethod:
          $ref: "#/components/schemas/TestOrderPaymentMethod"
        predefinedDeliveryAddress:
          description: Identifier of one of the predefined delivery addresses for the
            delivery.
          type: string
        predefinedPickupDetails:
          description: Identifier of one of the predefined pickup details. Required for
            orders containing line items with shipping type pickup.
          type: string
        promotions:
          description: Deprecated. Ignored if provided.
          items:
            $ref: "#/components/schemas/OrderLegacyPromotion"
          type: array
        shippingCost:
          $ref: "#/components/schemas/Price"
        shippingCostTax:
          $ref: "#/components/schemas/Price"
        shippingOption:
          description: The requested shipping option.
          type: string
      type: object
    TestOrderCustomer:
      properties:
        email:
          description: Email address of the customer.
          type: string
        explicitMarketingPreference:
          description: Deprecated. Please use marketingRightsInfo instead.
          type: boolean
        fullName:
          description: Full name of the customer.
          type: string
        marketingRightsInfo:
          $ref: "#/components/schemas/TestOrderCustomerMarketingRightsInfo"
      type: object
    TestOrderCustomerMarketingRightsInfo:
      properties:
        explicitMarketingPreference:
          description: Last know user use selection regards marketing preferences. In
            certain cases selection might not be known, so this field would be
            empty.
          type: string
        lastUpdatedTimestamp:
          description: Timestamp when last time marketing preference was updated. Could be
            empty, if user wasn't offered a selection yet.
          type: string
      type: object
    TestOrderLineItem:
      properties:
        product:
          $ref: "#/components/schemas/TestOrderLineItemProduct"
        quantityOrdered:
          description: Number of items ordered.
          format: uint32
          type: integer
        returnInfo:
          $ref: "#/components/schemas/OrderLineItemReturnInfo"
        shippingDetails:
          $ref: "#/components/schemas/OrderLineItemShippingDetails"
        unitTax:
          $ref: "#/components/schemas/Price"
      type: object
    TestOrderLineItemProduct:
      properties:
        brand:
          description: Brand of the item.
          type: string
        channel:
          description: Deprecated.
          type: string
        condition:
          description: Condition or state of the item.
          type: string
        contentLanguage:
          description: The two-letter ISO 639-1 language code for the item.
          type: string
        fees:
          description: Fees for the item. Optional.
          items:
            $ref: "#/components/schemas/OrderLineItemProductFee"
          type: array
        gtin:
          description: Global Trade Item Number (GTIN) of the item. Optional.
          type: string
        imageLink:
          description: URL of an image of the item.
          type: string
        itemGroupId:
          description: Shared identifier for all variants of the same product. Optional.
          type: string
        mpn:
          description: Manufacturer Part Number (MPN) of the item. Optional.
          type: string
        offerId:
          description: An identifier of the item.
          type: string
        price:
          $ref: "#/components/schemas/Price"
        targetCountry:
          description: The CLDR territory code of the target country of the product.
          type: string
        title:
          description: The title of the product.
          type: string
        variantAttributes:
          description: Variant attributes for the item. Optional.
          items:
            $ref: "#/components/schemas/OrderLineItemProductVariantAttribute"
          type: array
      type: object
    TestOrderPaymentMethod:
      properties:
        expirationMonth:
          description: The card expiration month (January = 1, February = 2 etc.).
          format: int32
          type: integer
        expirationYear:
          description: The card expiration year (4-digit, e.g. 2015).
          format: int32
          type: integer
        lastFourDigits:
          description: The last four digits of the card number.
          type: string
        predefinedBillingAddress:
          description: The billing address.
          type: string
        type:
          description: The type of instrument. Note that real orders might have different
            values than the four values accepted by createTestOrder.
          type: string
      type: object
    TransitTable:
      properties:
        postalCodeGroupNames:
          description: 'A list of postal group names. The last value can be "all other
            locations". Example: ["zone 1", "zone 2", "all other locations"].
            The referred postal code groups must match the delivery country of
            the service.'
          items:
            type: string
          type: array
        rows:
          items:
            $ref: "#/components/schemas/TransitTableTransitTimeRow"
          type: array
        transitTimeLabels:
          description: 'A list of transit time labels. The last value can be "all other
            labels". Example: ["food", "electronics", "all other labels"].'
          items:
            type: string
          type: array
      type: object
    TransitTableTransitTimeRow:
      properties:
        values:
          items:
            $ref: "#/components/schemas/TransitTableTransitTimeRowTransitTimeValue"
          type: array
      type: object
    TransitTableTransitTimeRowTransitTimeValue:
      properties:
        maxTransitTimeInDays:
          description: Must be greater than or equal to minTransitTimeInDays.
          format: uint32
          type: integer
        minTransitTimeInDays:
          description: Transit time range (min-max) in business days. 0 means same day
            delivery, 1 means next day delivery.
          format: uint32
          type: integer
      type: object
    UnitInvoice:
      properties:
        additionalCharges:
          description: Additional charges for a unit, e.g. shipping costs.
          items:
            $ref: "#/components/schemas/UnitInvoiceAdditionalCharge"
          type: array
        promotions:
          description: Deprecated.
          items:
            $ref: "#/components/schemas/Promotion"
          type: array
        unitPricePretax:
          $ref: "#/components/schemas/Price"
        unitPriceTaxes:
          description: Tax amounts to apply to the unit price.
          items:
            $ref: "#/components/schemas/UnitInvoiceTaxLine"
          type: array
      type: object
    UnitInvoiceAdditionalCharge:
      properties:
        additionalChargeAmount:
          $ref: "#/components/schemas/Amount"
        additionalChargePromotions:
          description: Deprecated.
          items:
            $ref: "#/components/schemas/Promotion"
          type: array
        type:
          description: "[required] Type of the additional charge."
          type: string
      type: object
    UnitInvoiceTaxLine:
      properties:
        taxAmount:
          $ref: "#/components/schemas/Price"
        taxName:
          description: Optional name of the tax type. This should only be provided if
            taxType is otherFeeTax.
          type: string
        taxType:
          description: "[required] Type of the tax."
          type: string
      type: object
    Value:
      description: The single value of a rate group or the value of a rate group table's
        cell. Exactly one of noShipping, flatRate, pricePercentage,
        carrierRateName, subtableName must be set.
      properties:
        carrierRateName:
          description: The name of a carrier rate referring to a carrier rate defined in
            the same rate group. Can only be set if all other fields are not
            set.
          type: string
        flatRate:
          $ref: "#/components/schemas/Price"
        noShipping:
          description: If true, then the product can't ship. Must be true when set, can
            only be set if all other fields are not set.
          type: boolean
        pricePercentage:
          description: A percentage of the price represented as a number in decimal
            notation (e.g., "5.4"). Can only be set if all other fields are not
            set.
          type: string
        subtableName:
          description: The name of a subtable. Can only be set in table cells (i.e., not
            for single values), and only if all other fields are not set.
          type: string
      type: object
    Weight:
      properties:
        unit:
          description: The weight unit.
          type: string
        value:
          description: The weight represented as a number.
          type: string
      type: object
