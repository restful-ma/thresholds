openapi: 3.0.0
info:
  description: The Azure SQL Database management API provides a RESTful set of web APIs
    that interact with Azure SQL Database services to manage your databases. The
    API enables users to create, retrieve, update, and delete databases,
    servers, and other entities.
  title: SqlManagementClient
  version: 2015-05-01-preview
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/sql/resource-manager/Microsoft.Sql/preview/2015-05-01-preview/blobAuditing.json
      version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: sql-blobAuditing
  x-tags:
    - Azure
    - Microsoft
paths:
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/auditingSettings":
    get:
      description: Lists auditing settings of a database.
      operationId: DatabaseBlobAuditingPolicies_ListByDatabase
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - $ref: "#/components/parameters/ServerNameParameter"
        - $ref: "#/components/parameters/DatabaseNameParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved database auditing settings.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseBlobAuditingPolicyListResult"
              examples:
                List audit settings of a database:
                  $ref: "#/components/examples/List_audit_settings_of_a_database"
        default:
          description: >-
            *** Error Responses: ***

             * 400 BlobAuditingIsNotSupportedOnResourceType - Blob Auditing is currently not supported for this resource type.

             * 404 SourceDatabaseNotFound - The source database does not exist.

             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.

             * 500 DatabaseIsUnavailable - Loading failed. Please try again later.
      tags:
        - BlobAuditing
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/auditingSettings/{blobAuditingPolicyName}":
    get:
      description: Gets a database's blob auditing policy.
      operationId: DatabaseBlobAuditingPolicies_Get
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - $ref: "#/components/parameters/ServerNameParameter"
        - $ref: "#/components/parameters/DatabaseNameParameter"
        - $ref: "#/components/parameters/BlobAuditingPolicyNameParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved the database blob auditing policy.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseBlobAuditingPolicy"
              examples:
                Get a database's blob auditing policy:
                  $ref: "#/components/examples/Get_a_database_s_blob_auditing_policy"
        default:
          description: >-
            *** Error Responses: ***

             * 400 BlobAuditingIsNotSupportedOnResourceType - Blob Auditing is currently not supported for this resource type.

             * 404 SourceDatabaseNotFound - The source database does not exist.

             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.

             * 500 DatabaseIsUnavailable - Loading failed. Please try again later.
      tags:
        - BlobAuditing
    put:
      description: Creates or updates a database's blob auditing policy.
      operationId: DatabaseBlobAuditingPolicies_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - $ref: "#/components/parameters/ServerNameParameter"
        - $ref: "#/components/parameters/DatabaseNameParameter"
        - $ref: "#/components/parameters/BlobAuditingPolicyNameParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatabaseBlobAuditingPolicy"
        description: The database blob auditing policy.
        required: true
      responses:
        "200":
          description: Successfully set the database blob auditing policy.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseBlobAuditingPolicy"
              examples:
                Create or update a database's azure monitor auditing policy with minimal parameters:
                  $ref: "#/components/examples/Create_or_update_a_database_s_azure_\
                    monitor_auditing_policy_with_minimal_parameters"
                Create or update a database's blob auditing policy with all parameters:
                  $ref: "#/components/examples/Create_or_update_a_database_s_blob_a\
                    uditing_policy_with_all_parameters"
                Create or update a database's blob auditing policy with minimal parameters:
                  $ref: "#/components/examples/Create_or_update_a_database_s_blob_a\
                    uditing_policy_with_minimal_parameters"
        "201":
          description: Successfully created the database blob auditing policy.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatabaseBlobAuditingPolicy"
              examples:
                Create or update a database's azure monitor auditing policy with minimal parameters:
                  $ref: "#/components/examples/Create_or_update_a_database_s_azure_\
                    monitor_auditing_policy_with_minimal_parameters"
                Create or update a database's blob auditing policy with all parameters:
                  $ref: "#/components/examples/Create_or_update_a_database_s_blob_a\
                    uditing_policy_with_all_parameters"
                Create or update a database's blob auditing policy with minimal parameters:
                  $ref: "#/components/examples/Create_or_update_a_database_s_blob_a\
                    uditing_policy_with_minimal_parameters"
        default:
          description: >-
            *** Error Responses: ***

             * 400 BlobAuditingIsNotSupportedOnResourceType - Blob Auditing is currently not supported for this resource type.

             * 400 InvalidDatabaseBlobAuditingPolicyCreateRequest - The create database blob auditing policy request does not exist or has no properties object.

             * 400 InvalidBlobAuditActionsAndGroups - Invalid audit actions or action groups.

             * 400 DataSecurityInvalidUserSuppliedParameter - An invalid parameter value was provided by the client.

             * 400 BlobAuditingInvalidStorageAccountName - The provided storage account is not valid or does not exist.

             * 400 UpdateNotAllowedOnPausedDatabase - User attempted to perform an update on a paused database.

             * 400 BlobAuditingInvalidStorageAccountCredentials - The provided storage account or access key is not valid.

             * 400 BlobAuditingIsNotSupportedOnGeoDr - Blob auditing can be configured on primary databases only.

             * 400 InvalidBlobAuditActionsAndGroupsForDW - Unsupported audit actions or action groups for DW.

             * 400 BlobAuditingInsufficientStorageAccountPermissions - Insufficient read or write permissions on the provided storage account.

             * 400 BlobAuditingStorageAccountIsDisabled - The provided storage account is disabled.

             * 400 InvalidBlobAuditActions - Invalid audit action

             * 404 SourceDatabaseNotFound - The source database does not exist.

             * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.

             * 500 DatabaseIsUnavailable - Loading failed. Please try again later.
      tags:
        - BlobAuditing
servers:
  - url: https://management.azure.com
components:
  examples:
    List_audit_settings_of_a_database:
      value:
        value:
          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/blobauditingtest-6852/providers/Microsoft.Sql/servers/blobauditingtest-2080/databases/testdb/auditingSettings/default
            kind: V12
            name: default
            properties:
              auditActionsAndGroups: []
              isAzureMonitorTargetEnabled: false
              isStorageSecondaryKeyInUse: false
              retentionDays: 0
              state: Disabled
              storageAccountSubscriptionId: 00000000-0000-0000-0000-000000000000
              storageEndpoint: ""
            type: Microsoft.Sql/servers/databases/auditingSettings
    Get_a_database_s_blob_auditing_policy:
      value:
        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/blobauditingtest-6852/providers/Microsoft.Sql/servers/blobauditingtest-2080/databases/testdb
        kind: V12
        name: default
        properties:
          auditActionsAndGroups: []
          isAzureMonitorTargetEnabled: false
          isStorageSecondaryKeyInUse: false
          retentionDays: 0
          state: Disabled
          storageAccountSubscriptionId: 00000000-0000-0000-0000-000000000000
          storageEndpoint: ""
        type: Microsoft.Sql/servers/databases/auditingSettings
    Create_or_update_a_database_s_azure_monitor_auditing_policy_with_minimal_parameters:
      value:
        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/blobauditingtest-4799/providers/Microsoft.Sql/servers/blobauditingtest-6440/databases/testdb
        kind: V12
        name: default
        properties:
          auditActionsAndGroups:
            - SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
            - FAILED_DATABASE_AUTHENTICATION_GROUP
            - BATCH_COMPLETED_GROUP
          isAzureMonitorTargetEnabled: true
          isStorageSecondaryKeyInUse: false
          retentionDays: 0
          state: Enabled
          storageAccountAccessKey: ""
          storageAccountSubscriptionId: 00000000-0000-0000-0000-000000000000
        type: Microsoft.Sql/servers/databases/auditingSettings
    Create_or_update_a_database_s_blob_auditing_policy_with_all_parameters:
      value:
        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/blobauditingtest-4799/providers/Microsoft.Sql/servers/blobauditingtest-6440/databases/testdb
        kind: V12
        name: default
        properties:
          auditActionsAndGroups:
            - DATABASE_LOGOUT_GROUP
            - DATABASE_ROLE_MEMBER_CHANGE_GROUP
            - UPDATE on database::TestDatabaseName by public
          isAzureMonitorTargetEnabled: true
          isStorageSecondaryKeyInUse: false
          retentionDays: 0
          state: Enabled
          storageAccountAccessKey: ""
          storageAccountSubscriptionId: 00000000-1234-0000-5678-000000000000
          storageEndpoint: https://mystorage.blob.core.windows.net
        type: Microsoft.Sql/servers/databases/auditingSettings
    Create_or_update_a_database_s_blob_auditing_policy_with_minimal_parameters:
      value:
        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/blobauditingtest-4799/providers/Microsoft.Sql/servers/blobauditingtest-6440/databases/testdb
        kind: V12
        name: default
        properties:
          auditActionsAndGroups:
            - SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
            - FAILED_DATABASE_AUTHENTICATION_GROUP
            - BATCH_COMPLETED_GROUP
          isAzureMonitorTargetEnabled: false
          isStorageSecondaryKeyInUse: false
          retentionDays: 0
          state: Enabled
          storageAccountAccessKey: ""
          storageAccountSubscriptionId: 00000000-0000-0000-0000-000000000000
          storageEndpoint: https://mystorage.blob.core.windows.net
        type: Microsoft.Sql/servers/databases/auditingSettings
  parameters:
    ApiVersionParameter:
      description: The API version to use for the request.
      in: query
      name: api-version
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
      examples:
        List audit settings of a database:
          value: 2015-05-01-preview
        Get a database's blob auditing policy:
          value: 2015-05-01-preview
        Create or update a database's azure monitor auditing policy with minimal parameters:
          value: 2015-05-01-preview
        Create or update a database's blob auditing policy with all parameters:
          value: 2015-05-01-preview
        Create or update a database's blob auditing policy with minimal parameters:
          value: 2015-05-01-preview
    BlobAuditingPolicyNameParameter:
      description: The name of the blob auditing policy.
      in: path
      name: blobAuditingPolicyName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
        enum:
          - default
      examples:
        Get a database's blob auditing policy:
          value: default
        Create or update a database's azure monitor auditing policy with minimal parameters:
          value: default
        Create or update a database's blob auditing policy with all parameters:
          value: default
        Create or update a database's blob auditing policy with minimal parameters:
          value: default
    DatabaseNameParameter:
      description: The name of the database.
      in: path
      name: databaseName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        List audit settings of a database:
          value: testdb
        Get a database's blob auditing policy:
          value: testdb
        Create or update a database's azure monitor auditing policy with minimal parameters:
          value: testdb
        Create or update a database's blob auditing policy with all parameters:
          value: testdb
        Create or update a database's blob auditing policy with minimal parameters:
          value: testdb
    ManagedInstanceNameParameter:
      description: The name of the managed instance.
      in: path
      name: managedInstanceName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    ResourceGroupParameter:
      description: The name of the resource group that contains the resource. You can
        obtain this value from the Azure Resource Manager API or the portal.
      in: path
      name: resourceGroupName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        List audit settings of a database:
          value: blobauditingtest-6852
        Get a database's blob auditing policy:
          value: blobauditingtest-6852
        Create or update a database's azure monitor auditing policy with minimal parameters:
          value: blobauditingtest-4799
        Create or update a database's blob auditing policy with all parameters:
          value: blobauditingtest-4799
        Create or update a database's blob auditing policy with minimal parameters:
          value: blobauditingtest-4799
    ServerNameParameter:
      description: The name of the server.
      in: path
      name: serverName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        List audit settings of a database:
          value: blobauditingtest-2080
        Get a database's blob auditing policy:
          value: blobauditingtest-2080
        Create or update a database's azure monitor auditing policy with minimal parameters:
          value: blobauditingtest-6440
        Create or update a database's blob auditing policy with all parameters:
          value: blobauditingtest-6440
        Create or update a database's blob auditing policy with minimal parameters:
          value: blobauditingtest-6440
    SqlVirtualMachineContainerNameParameter:
      description: The name of the SqlVirtualMachineContainer.
      in: path
      name: sqlVirtualMachineContainerName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SqlVirtualMachineInstanceNameParameter:
      description: The name of the SqlVirtualMachineInstance.
      in: path
      name: sqlVirtualMachineInstanceName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      description: The subscription ID that identifies an Azure subscription.
      in: path
      name: subscriptionId
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
      examples:
        List audit settings of a database:
          value: 00000000-1111-2222-3333-444444444444
        Get a database's blob auditing policy:
          value: 00000000-1111-2222-3333-444444444444
        Create or update a database's azure monitor auditing policy with minimal parameters:
          value: 00000000-1111-2222-3333-444444444444
        Create or update a database's blob auditing policy with all parameters:
          value: 00000000-1111-2222-3333-444444444444
        Create or update a database's blob auditing policy with minimal parameters:
          value: 00000000-1111-2222-3333-444444444444
    VirtualClusterNameParameter:
      description: The name of the virtual cluster.
      in: path
      name: virtualClusterName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    DatabaseBlobAuditingPolicy:
      allOf:
        - allOf:
            - description: ARM resource.
              properties:
                id:
                  description: Resource ID.
                  readOnly: true
                  type: string
                name:
                  description: Resource name.
                  readOnly: true
                  type: string
                type:
                  description: Resource type.
                  readOnly: true
                  type: string
              type: object
              x-ms-azure-resource: true
          description: ARM proxy resource.
          properties: {}
          type: object
      description: A database blob auditing policy.
      properties:
        kind:
          description: Resource kind.
          readOnly: true
          type: string
        properties:
          $ref: "#/components/schemas/DatabaseBlobAuditingPolicyProperties"
      type: object
    DatabaseBlobAuditingPolicyListResult:
      description: A list of database auditing settings.
      properties:
        nextLink:
          description: Link to retrieve next page of results.
          readOnly: true
          type: string
        value:
          description: Array of results.
          items:
            $ref: "#/components/schemas/DatabaseBlobAuditingPolicy"
          readOnly: true
          type: array
      type: object
    DatabaseBlobAuditingPolicyProperties:
      description: Properties of a database blob auditing policy.
      properties:
        auditActionsAndGroups:
          description: "Specifies the Actions-Groups and Actions to audit.\r

            \r

            The recommended set of action groups to use is the
            following combination - this will audit all the queries and stored
            procedures executed against the database, as well as successful and
            failed logins:\r

            \r

            BATCH_COMPLETED_GROUP,\r

            SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r

            FAILED_DATABASE_AUTHENTICATION_GROUP.\r

            \r

            This above combination is also the set that is
            configured by default when enabling auditing from the Azure
            portal.\r

            \r

            The supported action groups to audit are (note: choose
            only specific groups that cover your auditing needs. Using
            unnecessary groups could lead to very large quantities of audit
            records):\r

            \r

            APPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r

            BACKUP_RESTORE_GROUP\r

            DATABASE_LOGOUT_GROUP\r

            DATABASE_OBJECT_CHANGE_GROUP\r

            DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r

            DATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r

            DATABASE_OPERATION_GROUP\r

            DATABASE_PERMISSION_CHANGE_GROUP\r

            DATABASE_PRINCIPAL_CHANGE_GROUP\r

            DATABASE_PRINCIPAL_IMPERSONATION_GROUP\r

            DATABASE_ROLE_MEMBER_CHANGE_GROUP\r

            FAILED_DATABASE_AUTHENTICATION_GROUP\r

            SCHEMA_OBJECT_ACCESS_GROUP\r

            SCHEMA_OBJECT_CHANGE_GROUP\r

            SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r

            SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r

            SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r

            USER_CHANGE_PASSWORD_GROUP\r

            BATCH_STARTED_GROUP\r

            BATCH_COMPLETED_GROUP\r

            \r

            These are groups that cover all sql statements and
            stored procedures executed against the database, and should not be
            used in combination with other groups as this will result in
            duplicate audit logs.\r

            \r

            For more information, see [Database-Level Audit Action
            Groups](https://docs.microsoft.com/en-us/sql/relational-databases/s\
            ecurity/auditing/sql-server-audit-action-groups-and-actions#databas\
            e-level-audit-action-groups).\r

            \r

            For Database auditing policy, specific Actions can also
            be specified (note that Actions cannot be specified for Server
            auditing policy). The supported actions to audit are:\r

            SELECT\r

            UPDATE\r

            INSERT\r

            DELETE\r

            EXECUTE\r

            RECEIVE\r

            REFERENCES\r

            \r

            The general form for defining an action to be audited
            is:\r

            {action} ON {object} BY {principal}\r

            \r

            Note that <object> in the above format can refer to an
            object like a table, view, or stored procedure, or an entire
            database or schema. For the latter cases, the forms
            DATABASE::{db_name} and SCHEMA::{schema_name} are used,
            respectively.\r

            \r

            For example:\r

            SELECT on dbo.myTable by public\r

            SELECT on DATABASE::myDatabase by public\r

            SELECT on SCHEMA::mySchema by public\r

            \r

            For more information, see [Database-Level Audit
            Actions](https://docs.microsoft.com/en-us/sql/relational-databases/\
            security/auditing/sql-server-audit-action-groups-and-actions#databa\
            se-level-audit-actions)"
          items:
            type: string
          type: array
        isAzureMonitorTargetEnabled:
          description: "Specifies whether audit events are sent to Azure Monitor. \r

            In order to send the events to Azure Monitor, specify
            'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r

            \r

            When using REST API to configure auditing, Diagnostic
            Settings with 'SQLSecurityAuditEvents' diagnostic logs category on
            the database should be also created.\r

            Note that for server level audit you should use the
            'master' database as {databaseName}.\r

            \r

            Diagnostic Settings URI format:\r

            PUT
            https://management.azure.com/subscriptions/{subscriptionId}/resourc\
            eGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName\
            }/databases/{databaseName}/providers/microsoft.insights/diagnosticS\
            ettings/{settingsName}?api-version=2017-05-01-preview\r

            \r

            For more information, see [Diagnostic Settings REST
            API](https://go.microsoft.com/fwlink/?linkid=2033207)\r

            or [Diagnostic Settings
            PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n"
          type: boolean
        isStorageSecondaryKeyInUse:
          description: Specifies whether storageAccountAccessKey value is the storage's
            secondary key.
          type: boolean
        retentionDays:
          description: Specifies the number of days to keep in the audit logs in the
            storage account.
          format: int32
          type: integer
        state:
          description: Specifies the state of the policy. If state is Enabled,
            storageEndpoint or isAzureMonitorTargetEnabled are required.
          enum:
            - Enabled
            - Disabled
          type: string
          x-ms-enum:
            modelAsString: false
            name: BlobAuditingPolicyState
        storageAccountAccessKey:
          description: Specifies the identifier key of the auditing storage account. If
            state is Enabled and storageEndpoint is specified,
            storageAccountAccessKey is required.
          type: string
          x-ms-mutability:
            - create
            - update
        storageAccountSubscriptionId:
          description: Specifies the blob storage subscription Id.
          format: uuid
          type: string
        storageEndpoint:
          description: Specifies the blob storage endpoint (e.g.
            https://MyAccount.blob.core.windows.net). If state is Enabled,
            storageEndpoint is required.
          type: string
      required:
        - state
      type: object
