openapi: 3.0.0
info:
  version: 2014-10-06
  x-release: v4
  title: AWS CodeDeploy
  description: '<fullname>AWS CodeDeploy</fullname> <p>AWS CodeDeploy is a deployment
    service that automates application deployments to Amazon EC2 instances,
    on-premises instances running in your own facility, serverless AWS Lambda
    functions, or applications in an Amazon ECS service.</p> <p>You can deploy a
    nearly unlimited variety of application content, such as an updated Lambda
    function, updated applications in an Amazon ECS service, code, web and
    configuration files, executables, packages, scripts, multimedia files, and
    so on. AWS CodeDeploy can deploy application content stored in Amazon S3
    buckets, GitHub repositories, or Bitbucket repositories. You do not need to
    make changes to your existing code before you can use AWS CodeDeploy.</p>
    <p>AWS CodeDeploy makes it easier for you to rapidly release new features,
    helps you avoid downtime during application deployment, and handles the
    complexity of updating your applications, without many of the risks
    associated with error-prone manual deployments.</p> <p> <b>AWS CodeDeploy
    Components</b> </p> <p>Use the information in this guide to help you work
    with the following AWS CodeDeploy components:</p> <ul> <li> <p>
    <b>Application</b>: A name that uniquely identifies the application you want
    to deploy. AWS CodeDeploy uses this name, which functions as a container, to
    ensure the correct combination of revision, deployment configuration, and
    deployment group are referenced during a deployment.</p> </li> <li> <p>
    <b>Deployment group</b>: A set of individual instances, CodeDeploy Lambda
    deployment configuration settings, or an Amazon ECS service and network
    details. A Lambda deployment group specifies how to route traffic to a new
    version of a Lambda function. An Amazon ECS deployment group specifies the
    service created in Amazon ECS to deploy, a load balancer, and a listener to
    reroute production traffic to an updated containerized application. An
    EC2/On-premises deployment group contains individually tagged instances,
    Amazon EC2 instances in Amazon EC2 Auto Scaling groups, or both. All
    deployment groups can specify optional trigger, alarm, and rollback
    settings.</p> </li> <li> <p> <b>Deployment configuration</b>: A set of
    deployment rules and deployment success and failure conditions used by AWS
    CodeDeploy during a deployment.</p> </li> <li> <p> <b>Deployment</b>: The
    process and the components used when updating a Lambda function, a
    containerized application in an Amazon ECS service, or of installing content
    on one or more instances. </p> </li> <li> <p> <b>Application revisions</b>:
    For an AWS Lambda deployment, this is an AppSpec file that specifies the
    Lambda function to be updated and one or more functions to validate
    deployment lifecycle events. For an Amazon ECS deployment, this is an
    AppSpec file that specifies the Amazon ECS task definition, container, and
    port where production traffic is rerouted. For an EC2/On-premises
    deployment, this is an archive file that contains source content—source
    code, webpages, executable files, and deployment scripts—along with an
    AppSpec file. Revisions are stored in Amazon S3 buckets or GitHub
    repositories. For Amazon S3, a revision is uniquely identified by its Amazon
    S3 object key and its ETag, version, or both. For GitHub, a revision is
    uniquely identified by its commit ID.</p> </li> </ul> <p>This guide also
    contains information to help you get details about the instances in your
    deployments, to make on-premises instances available for AWS CodeDeploy
    deployments, to get details about a Lambda function deployment, and to get
    details about Amazon ECS service deployments.</p> <p> <b>AWS CodeDeploy
    Information Resources</b> </p> <ul> <li> <p> <a
    href="https://docs.aws.amazon.com/codedeploy/latest/userguide">AWS
    CodeDeploy User Guide</a> </p> </li> <li> <p> <a
    href="https://docs.aws.amazon.com/codedeploy/latest/APIReference/">AWS
    CodeDeploy API Reference Guide</a> </p> </li> <li> <p> <a
    href="https://docs.aws.amazon.com/cli/latest/reference/deploy/index.html">AWS
    CLI Reference for AWS CodeDeploy</a> </p> </li> <li> <p> <a
    href="https://forums.aws.amazon.com/forum.jspa?forumID=179">AWS CodeDeploy
    Developer Forum</a> </p> </li> </ul>'
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: codedeploy
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/codedeploy-2014-10-06.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/codedeploy/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=CodeDeploy_20141006.AddTagsToOnPremisesInstances:
    post:
      operationId: AddTagsToOnPremisesInstances
      description: Adds tags to on-premises instances.
      responses:
        "200":
          description: Success
        "480":
          description: InstanceNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceNameRequiredException"
        "481":
          description: InvalidInstanceNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceNameException"
        "482":
          description: TagRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagRequiredException"
        "483":
          description: InvalidTagException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTagException"
        "484":
          description: TagLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagLimitExceededException"
        "485":
          description: InstanceLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceLimitExceededException"
        "486":
          description: InstanceNotRegisteredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceNotRegisteredException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.AddTagsToOnPremisesInstances
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddTagsToOnPremisesInstancesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.BatchGetApplicationRevisions:
    post:
      operationId: BatchGetApplicationRevisions
      description: Gets information about one or more application revisions. The maximum
        number of application revisions that can be returned is 25.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchGetApplicationRevisionsOutput"
        "480":
          description: ApplicationDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationDoesNotExistException"
        "481":
          description: ApplicationNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationNameRequiredException"
        "482":
          description: InvalidApplicationNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidApplicationNameException"
        "483":
          description: RevisionRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RevisionRequiredException"
        "484":
          description: InvalidRevisionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRevisionException"
        "485":
          description: BatchLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.BatchGetApplicationRevisions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchGetApplicationRevisionsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.BatchGetApplications:
    post:
      operationId: BatchGetApplications
      description: Gets information about one or more applications. The maximum number of
        applications that can be returned is 25.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchGetApplicationsOutput"
        "480":
          description: ApplicationNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationNameRequiredException"
        "481":
          description: InvalidApplicationNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidApplicationNameException"
        "482":
          description: ApplicationDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationDoesNotExistException"
        "483":
          description: BatchLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.BatchGetApplications
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchGetApplicationsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.BatchGetDeploymentGroups:
    post:
      operationId: BatchGetDeploymentGroups
      description: Gets information about one or more deployment groups.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchGetDeploymentGroupsOutput"
        "480":
          description: ApplicationNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationNameRequiredException"
        "481":
          description: InvalidApplicationNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidApplicationNameException"
        "482":
          description: ApplicationDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationDoesNotExistException"
        "483":
          description: DeploymentGroupNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentGroupNameRequiredException"
        "484":
          description: InvalidDeploymentGroupNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentGroupNameException"
        "485":
          description: BatchLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchLimitExceededException"
        "486":
          description: DeploymentConfigDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentConfigDoesNotExistException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.BatchGetDeploymentGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchGetDeploymentGroupsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.BatchGetDeploymentInstances:
    post:
      deprecated: true
      operationId: BatchGetDeploymentInstances
      description: <note> <p> This method works, but is deprecated. Use
        <code>BatchGetDeploymentTargets</code> instead. </p> </note> <p> Returns
        an array of one or more instances associated with a deployment. This
        method works with EC2/On-premises and AWS Lambda compute platforms. The
        newer <code>BatchGetDeploymentTargets</code> works with all compute
        platforms. The maximum number of instances that can be returned is
        25.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchGetDeploymentInstancesOutput"
        "480":
          description: DeploymentIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentIdRequiredException"
        "481":
          description: DeploymentDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentDoesNotExistException"
        "482":
          description: InstanceIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceIdRequiredException"
        "483":
          description: InvalidDeploymentIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentIdException"
        "484":
          description: InvalidInstanceNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceNameException"
        "485":
          description: BatchLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchLimitExceededException"
        "486":
          description: InvalidComputePlatformException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidComputePlatformException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.BatchGetDeploymentInstances
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchGetDeploymentInstancesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.BatchGetDeploymentTargets:
    post:
      operationId: BatchGetDeploymentTargets
      description: "<p> Returns an array of one or more targets associated with a
        deployment. This method works with all compute types and should be used
        instead of the deprecated <code>BatchGetDeploymentInstances</code>. The
        maximum number of targets that can be returned is 25.</p> <p> The type
        of targets returned depends on the deployment's compute platform: </p>
        <ul> <li> <p> <b>EC2/On-premises</b>: Information about EC2 instance
        targets. </p> </li> <li> <p> <b>AWS Lambda</b>: Information about Lambda
        functions targets. </p> </li> <li> <p> <b>Amazon ECS</b>: Information
        about Amazon ECS service targets. </p> </li> </ul>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchGetDeploymentTargetsOutput"
        "480":
          description: InvalidDeploymentIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentIdException"
        "481":
          description: DeploymentIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentIdRequiredException"
        "482":
          description: DeploymentDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentDoesNotExistException"
        "483":
          description: DeploymentNotStartedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentNotStartedException"
        "484":
          description: DeploymentTargetIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentTargetIdRequiredException"
        "485":
          description: InvalidDeploymentTargetIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentTargetIdException"
        "486":
          description: DeploymentTargetDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentTargetDoesNotExistException"
        "487":
          description: DeploymentTargetListSizeExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentTargetListSizeExceededExcepti\
                  on"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.BatchGetDeploymentTargets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchGetDeploymentTargetsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.BatchGetDeployments:
    post:
      operationId: BatchGetDeployments
      description: Gets information about one or more deployments. The maximum number of
        deployments that can be returned is 25.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchGetDeploymentsOutput"
        "480":
          description: DeploymentIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentIdRequiredException"
        "481":
          description: InvalidDeploymentIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentIdException"
        "482":
          description: BatchLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.BatchGetDeployments
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchGetDeploymentsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.BatchGetOnPremisesInstances:
    post:
      operationId: BatchGetOnPremisesInstances
      description: Gets information about one or more on-premises instances. The maximum
        number of on-premises instances that can be returned is 25.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchGetOnPremisesInstancesOutput"
        "480":
          description: InstanceNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceNameRequiredException"
        "481":
          description: InvalidInstanceNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceNameException"
        "482":
          description: BatchLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.BatchGetOnPremisesInstances
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchGetOnPremisesInstancesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.ContinueDeployment:
    post:
      operationId: ContinueDeployment
      description: "For a blue/green deployment, starts the process of rerouting traffic
        from instances in the original environment to instances in the
        replacement environment without waiting for a specified wait time to
        elapse. (Traffic rerouting, which is achieved by registering instances
        in the replacement environment with the load balancer, can start as soon
        as all instances have a status of Ready.) "
      responses:
        "200":
          description: Success
        "480":
          description: DeploymentIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentIdRequiredException"
        "481":
          description: DeploymentDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentDoesNotExistException"
        "482":
          description: DeploymentAlreadyCompletedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentAlreadyCompletedException"
        "483":
          description: InvalidDeploymentIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentIdException"
        "484":
          description: DeploymentIsNotInReadyStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentIsNotInReadyStateException"
        "485":
          description: UnsupportedActionForDeploymentTypeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedActionForDeploymentTypeExcep\
                  tion"
        "486":
          description: InvalidDeploymentWaitTypeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentWaitTypeException"
        "487":
          description: InvalidDeploymentStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentStatusException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.ContinueDeployment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContinueDeploymentInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.CreateApplication:
    post:
      operationId: CreateApplication
      description: Creates an application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateApplicationOutput"
        "480":
          description: ApplicationNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationNameRequiredException"
        "481":
          description: InvalidApplicationNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidApplicationNameException"
        "482":
          description: ApplicationAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationAlreadyExistsException"
        "483":
          description: ApplicationLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationLimitExceededException"
        "484":
          description: InvalidComputePlatformException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidComputePlatformException"
        "485":
          description: InvalidTagsToAddException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTagsToAddException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.CreateApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateApplicationInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.CreateDeployment:
    post:
      operationId: CreateDeployment
      description: Deploys an application revision through the specified deployment group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDeploymentOutput"
        "480":
          description: ApplicationNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationNameRequiredException"
        "481":
          description: InvalidApplicationNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidApplicationNameException"
        "482":
          description: ApplicationDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationDoesNotExistException"
        "483":
          description: DeploymentGroupNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentGroupNameRequiredException"
        "484":
          description: InvalidDeploymentGroupNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentGroupNameException"
        "485":
          description: DeploymentGroupDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentGroupDoesNotExistException"
        "486":
          description: RevisionRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RevisionRequiredException"
        "487":
          description: RevisionDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RevisionDoesNotExistException"
        "488":
          description: InvalidRevisionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRevisionException"
        "489":
          description: InvalidDeploymentConfigNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentConfigNameException"
        "490":
          description: DeploymentConfigDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentConfigDoesNotExistException"
        "491":
          description: DescriptionTooLongException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescriptionTooLongException"
        "492":
          description: DeploymentLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentLimitExceededException"
        "493":
          description: InvalidTargetInstancesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTargetInstancesException"
        "494":
          description: InvalidAutoRollbackConfigException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAutoRollbackConfigException"
        "495":
          description: InvalidLoadBalancerInfoException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidLoadBalancerInfoException"
        "496":
          description: InvalidFileExistsBehaviorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFileExistsBehaviorException"
        "497":
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRoleException"
        "498":
          description: InvalidAutoScalingGroupException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAutoScalingGroupException"
        "499":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "500":
          description: InvalidUpdateOutdatedInstancesOnlyValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidUpdateOutdatedInstancesOnlyValue\
                  Exception"
        "501":
          description: InvalidIgnoreApplicationStopFailuresValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidIgnoreApplicationStopFailuresVal\
                  ueException"
        "502":
          description: InvalidGitHubAccountTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidGitHubAccountTokenException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.CreateDeployment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDeploymentInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.CreateDeploymentConfig:
    post:
      operationId: CreateDeploymentConfig
      description: " Creates a deployment configuration. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDeploymentConfigOutput"
        "480":
          description: InvalidDeploymentConfigNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentConfigNameException"
        "481":
          description: DeploymentConfigNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentConfigNameRequiredException"
        "482":
          description: DeploymentConfigAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentConfigAlreadyExistsException"
        "483":
          description: InvalidMinimumHealthyHostValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidMinimumHealthyHostValueException"
        "484":
          description: DeploymentConfigLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentConfigLimitExceededException"
        "485":
          description: InvalidComputePlatformException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidComputePlatformException"
        "486":
          description: InvalidTrafficRoutingConfigurationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTrafficRoutingConfigurationExcep\
                  tion"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.CreateDeploymentConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDeploymentConfigInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.CreateDeploymentGroup:
    post:
      operationId: CreateDeploymentGroup
      description: Creates a deployment group to which application revisions are deployed.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDeploymentGroupOutput"
        "480":
          description: ApplicationNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationNameRequiredException"
        "481":
          description: InvalidApplicationNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidApplicationNameException"
        "482":
          description: ApplicationDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationDoesNotExistException"
        "483":
          description: DeploymentGroupNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentGroupNameRequiredException"
        "484":
          description: InvalidDeploymentGroupNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentGroupNameException"
        "485":
          description: DeploymentGroupAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentGroupAlreadyExistsException"
        "486":
          description: InvalidEC2TagException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidEC2TagException"
        "487":
          description: InvalidTagException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTagException"
        "488":
          description: InvalidAutoScalingGroupException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAutoScalingGroupException"
        "489":
          description: InvalidDeploymentConfigNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentConfigNameException"
        "490":
          description: DeploymentConfigDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentConfigDoesNotExistException"
        "491":
          description: RoleRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleRequiredException"
        "492":
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRoleException"
        "493":
          description: DeploymentGroupLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentGroupLimitExceededException"
        "494":
          description: LifecycleHookLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LifecycleHookLimitExceededException"
        "495":
          description: InvalidTriggerConfigException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTriggerConfigException"
        "496":
          description: TriggerTargetsLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TriggerTargetsLimitExceededException"
        "497":
          description: InvalidAlarmConfigException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAlarmConfigException"
        "498":
          description: AlarmsLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlarmsLimitExceededException"
        "499":
          description: InvalidAutoRollbackConfigException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAutoRollbackConfigException"
        "500":
          description: InvalidLoadBalancerInfoException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidLoadBalancerInfoException"
        "501":
          description: InvalidDeploymentStyleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentStyleException"
        "502":
          description: InvalidBlueGreenDeploymentConfigurationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidBlueGreenDeploymentConfiguration\
                  Exception"
        "503":
          description: InvalidEC2TagCombinationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidEC2TagCombinationException"
        "504":
          description: InvalidOnPremisesTagCombinationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOnPremisesTagCombinationException"
        "505":
          description: TagSetListLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagSetListLimitExceededException"
        "506":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "507":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "508":
          description: InvalidECSServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidECSServiceException"
        "509":
          description: InvalidTargetGroupPairException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTargetGroupPairException"
        "510":
          description: ECSServiceMappingLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ECSServiceMappingLimitExceededException"
        "511":
          description: InvalidTagsToAddException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTagsToAddException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.CreateDeploymentGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDeploymentGroupInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.DeleteApplication:
    post:
      operationId: DeleteApplication
      description: Deletes an application.
      responses:
        "200":
          description: Success
        "480":
          description: ApplicationNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationNameRequiredException"
        "481":
          description: InvalidApplicationNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidApplicationNameException"
        "482":
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRoleException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.DeleteApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteApplicationInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.DeleteDeploymentConfig:
    post:
      operationId: DeleteDeploymentConfig
      description: <p>Deletes a deployment configuration.</p> <note> <p>A deployment
        configuration cannot be deleted if it is currently in use. Predefined
        configurations cannot be deleted.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: InvalidDeploymentConfigNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentConfigNameException"
        "481":
          description: DeploymentConfigNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentConfigNameRequiredException"
        "482":
          description: DeploymentConfigInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentConfigInUseException"
        "483":
          description: InvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOperationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.DeleteDeploymentConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDeploymentConfigInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.DeleteDeploymentGroup:
    post:
      operationId: DeleteDeploymentGroup
      description: Deletes a deployment group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDeploymentGroupOutput"
        "480":
          description: ApplicationNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationNameRequiredException"
        "481":
          description: InvalidApplicationNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidApplicationNameException"
        "482":
          description: DeploymentGroupNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentGroupNameRequiredException"
        "483":
          description: InvalidDeploymentGroupNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentGroupNameException"
        "484":
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRoleException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.DeleteDeploymentGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDeploymentGroupInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.DeleteGitHubAccountToken:
    post:
      operationId: DeleteGitHubAccountToken
      description: Deletes a GitHub account connection.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteGitHubAccountTokenOutput"
        "480":
          description: GitHubAccountTokenNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GitHubAccountTokenNameRequiredException"
        "481":
          description: GitHubAccountTokenDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GitHubAccountTokenDoesNotExistException"
        "482":
          description: InvalidGitHubAccountTokenNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidGitHubAccountTokenNameException"
        "483":
          description: ResourceValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceValidationException"
        "484":
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotSupportedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.DeleteGitHubAccountToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteGitHubAccountTokenInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.DeregisterOnPremisesInstance:
    post:
      operationId: DeregisterOnPremisesInstance
      description: Deregisters an on-premises instance.
      responses:
        "200":
          description: Success
        "480":
          description: InstanceNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceNameRequiredException"
        "481":
          description: InvalidInstanceNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceNameException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.DeregisterOnPremisesInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeregisterOnPremisesInstanceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.GetApplication:
    post:
      operationId: GetApplication
      description: Gets information about an application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetApplicationOutput"
        "480":
          description: ApplicationNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationNameRequiredException"
        "481":
          description: InvalidApplicationNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidApplicationNameException"
        "482":
          description: ApplicationDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationDoesNotExistException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.GetApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetApplicationInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.GetApplicationRevision:
    post:
      operationId: GetApplicationRevision
      description: Gets information about an application revision.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetApplicationRevisionOutput"
        "480":
          description: ApplicationDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationDoesNotExistException"
        "481":
          description: ApplicationNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationNameRequiredException"
        "482":
          description: InvalidApplicationNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidApplicationNameException"
        "483":
          description: RevisionDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RevisionDoesNotExistException"
        "484":
          description: RevisionRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RevisionRequiredException"
        "485":
          description: InvalidRevisionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRevisionException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.GetApplicationRevision
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetApplicationRevisionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.GetDeployment:
    post:
      operationId: GetDeployment
      description: <p>Gets information about a deployment.</p> <note> <p> The
        <code>content</code> property of the <code>appSpecContent</code> object
        in the returned revision is always null. Use
        <code>GetApplicationRevision</code> and the <code>sha256</code> property
        of the returned <code>appSpecContent</code> object to get the content of
        the deployment’s AppSpec file. </p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDeploymentOutput"
        "480":
          description: DeploymentIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentIdRequiredException"
        "481":
          description: InvalidDeploymentIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentIdException"
        "482":
          description: DeploymentDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentDoesNotExistException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.GetDeployment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDeploymentInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.GetDeploymentConfig:
    post:
      operationId: GetDeploymentConfig
      description: Gets information about a deployment configuration.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDeploymentConfigOutput"
        "480":
          description: InvalidDeploymentConfigNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentConfigNameException"
        "481":
          description: DeploymentConfigNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentConfigNameRequiredException"
        "482":
          description: DeploymentConfigDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentConfigDoesNotExistException"
        "483":
          description: InvalidComputePlatformException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidComputePlatformException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.GetDeploymentConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDeploymentConfigInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.GetDeploymentGroup:
    post:
      operationId: GetDeploymentGroup
      description: Gets information about a deployment group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDeploymentGroupOutput"
        "480":
          description: ApplicationNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationNameRequiredException"
        "481":
          description: InvalidApplicationNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidApplicationNameException"
        "482":
          description: ApplicationDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationDoesNotExistException"
        "483":
          description: DeploymentGroupNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentGroupNameRequiredException"
        "484":
          description: InvalidDeploymentGroupNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentGroupNameException"
        "485":
          description: DeploymentGroupDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentGroupDoesNotExistException"
        "486":
          description: DeploymentConfigDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentConfigDoesNotExistException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.GetDeploymentGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDeploymentGroupInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.GetDeploymentInstance:
    post:
      deprecated: true
      operationId: GetDeploymentInstance
      description: Gets information about an instance as part of a deployment.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDeploymentInstanceOutput"
        "480":
          description: DeploymentIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentIdRequiredException"
        "481":
          description: DeploymentDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentDoesNotExistException"
        "482":
          description: InstanceIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceIdRequiredException"
        "483":
          description: InvalidDeploymentIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentIdException"
        "484":
          description: InstanceDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceDoesNotExistException"
        "485":
          description: InvalidInstanceNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceNameException"
        "486":
          description: InvalidComputePlatformException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidComputePlatformException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.GetDeploymentInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDeploymentInstanceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.GetDeploymentTarget:
    post:
      operationId: GetDeploymentTarget
      description: " Returns information about a deployment target. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDeploymentTargetOutput"
        "480":
          description: InvalidDeploymentIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentIdException"
        "481":
          description: DeploymentIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentIdRequiredException"
        "482":
          description: DeploymentDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentDoesNotExistException"
        "483":
          description: DeploymentNotStartedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentNotStartedException"
        "484":
          description: DeploymentTargetIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentTargetIdRequiredException"
        "485":
          description: InvalidDeploymentTargetIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentTargetIdException"
        "486":
          description: DeploymentTargetDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentTargetDoesNotExistException"
        "487":
          description: InvalidInstanceNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceNameException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.GetDeploymentTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDeploymentTargetInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.GetOnPremisesInstance:
    post:
      operationId: GetOnPremisesInstance
      description: " Gets information about an on-premises instance. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOnPremisesInstanceOutput"
        "480":
          description: InstanceNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceNameRequiredException"
        "481":
          description: InstanceNotRegisteredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceNotRegisteredException"
        "482":
          description: InvalidInstanceNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceNameException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.GetOnPremisesInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetOnPremisesInstanceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.ListApplicationRevisions:
    post:
      operationId: ListApplicationRevisions
      description: Lists information about revisions for an application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListApplicationRevisionsOutput"
        "480":
          description: ApplicationDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationDoesNotExistException"
        "481":
          description: ApplicationNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationNameRequiredException"
        "482":
          description: InvalidApplicationNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidApplicationNameException"
        "483":
          description: InvalidSortByException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidSortByException"
        "484":
          description: InvalidSortOrderException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidSortOrderException"
        "485":
          description: InvalidBucketNameFilterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidBucketNameFilterException"
        "486":
          description: InvalidKeyPrefixFilterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidKeyPrefixFilterException"
        "487":
          description: BucketNameFilterRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BucketNameFilterRequiredException"
        "488":
          description: InvalidDeployedStateFilterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeployedStateFilterException"
        "489":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.ListApplicationRevisions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListApplicationRevisionsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.ListApplications:
    post:
      operationId: ListApplications
      description: Lists the applications registered with the IAM user or AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListApplicationsOutput"
        "480":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.ListApplications
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListApplicationsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.ListDeploymentConfigs:
    post:
      operationId: ListDeploymentConfigs
      description: Lists the deployment configurations with the IAM user or AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDeploymentConfigsOutput"
        "480":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.ListDeploymentConfigs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListDeploymentConfigsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.ListDeploymentGroups:
    post:
      operationId: ListDeploymentGroups
      description: Lists the deployment groups for an application registered with the IAM
        user or AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDeploymentGroupsOutput"
        "480":
          description: ApplicationNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationNameRequiredException"
        "481":
          description: InvalidApplicationNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidApplicationNameException"
        "482":
          description: ApplicationDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationDoesNotExistException"
        "483":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.ListDeploymentGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListDeploymentGroupsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.ListDeploymentInstances:
    post:
      deprecated: true
      operationId: ListDeploymentInstances
      description: <note> <p> The newer BatchGetDeploymentTargets should be used instead
        because it works with all compute types.
        <code>ListDeploymentInstances</code> throws an exception if it is used
        with a compute platform other than EC2/On-premises or AWS Lambda. </p>
        </note> <p> Lists the instance for a deployment associated with the IAM
        user or AWS account. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDeploymentInstancesOutput"
        "480":
          description: DeploymentIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentIdRequiredException"
        "481":
          description: DeploymentDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentDoesNotExistException"
        "482":
          description: DeploymentNotStartedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentNotStartedException"
        "483":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "484":
          description: InvalidDeploymentIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentIdException"
        "485":
          description: InvalidInstanceStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceStatusException"
        "486":
          description: InvalidInstanceTypeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceTypeException"
        "487":
          description: InvalidDeploymentInstanceTypeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentInstanceTypeException"
        "488":
          description: InvalidTargetFilterNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTargetFilterNameException"
        "489":
          description: InvalidComputePlatformException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidComputePlatformException"
      parameters:
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.ListDeploymentInstances
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListDeploymentInstancesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.ListDeploymentTargets:
    post:
      operationId: ListDeploymentTargets
      description: " Returns an array of target IDs that are associated a deployment. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDeploymentTargetsOutput"
        "480":
          description: DeploymentIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentIdRequiredException"
        "481":
          description: DeploymentDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentDoesNotExistException"
        "482":
          description: DeploymentNotStartedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentNotStartedException"
        "483":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "484":
          description: InvalidDeploymentIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentIdException"
        "485":
          description: InvalidInstanceStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceStatusException"
        "486":
          description: InvalidInstanceTypeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceTypeException"
        "487":
          description: InvalidDeploymentInstanceTypeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentInstanceTypeException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.ListDeploymentTargets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListDeploymentTargetsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.ListDeployments:
    post:
      operationId: ListDeployments
      description: Lists the deployments in a deployment group for an application
        registered with the IAM user or AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDeploymentsOutput"
        "480":
          description: ApplicationNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationNameRequiredException"
        "481":
          description: InvalidApplicationNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidApplicationNameException"
        "482":
          description: ApplicationDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationDoesNotExistException"
        "483":
          description: InvalidDeploymentGroupNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentGroupNameException"
        "484":
          description: DeploymentGroupDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentGroupDoesNotExistException"
        "485":
          description: DeploymentGroupNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentGroupNameRequiredException"
        "486":
          description: InvalidTimeRangeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTimeRangeException"
        "487":
          description: InvalidDeploymentStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentStatusException"
        "488":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.ListDeployments
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListDeploymentsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.ListGitHubAccountTokenNames:
    post:
      operationId: ListGitHubAccountTokenNames
      description: Lists the names of stored connections to GitHub accounts.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGitHubAccountTokenNamesOutput"
        "480":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "481":
          description: ResourceValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceValidationException"
        "482":
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotSupportedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.ListGitHubAccountTokenNames
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListGitHubAccountTokenNamesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.ListOnPremisesInstances:
    post:
      operationId: ListOnPremisesInstances
      description: <p>Gets a list of names for one or more on-premises instances.</p>
        <p>Unless otherwise specified, both registered and deregistered
        on-premises instance names are listed. To list only registered or
        deregistered on-premises instance names, use the registration status
        parameter.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOnPremisesInstancesOutput"
        "480":
          description: InvalidRegistrationStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRegistrationStatusException"
        "481":
          description: InvalidTagFilterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTagFilterException"
        "482":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.ListOnPremisesInstances
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListOnPremisesInstancesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: " Returns a list of tags for the resource identified by a specified ARN.
        Tags are used to organize and categorize your CodeDeploy resources. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceOutput"
        "480":
          description: ArnNotSupportedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArnNotSupportedException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: ResourceArnRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceArnRequiredException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.ListTagsForResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagsForResourceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.PutLifecycleEventHookExecutionStatus:
    post:
      operationId: PutLifecycleEventHookExecutionStatus
      description: " Sets the result of a Lambda validation function. The function
        validates one or both lifecycle events (<code>BeforeAllowTraffic</code>
        and <code>AfterAllowTraffic</code>) and returns <code>Succeeded</code>
        or <code>Failed</code>. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutLifecycleEventHookExecutionStatusOut\
                  put"
        "480":
          description: InvalidLifecycleEventHookExecutionStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidLifecycleEventHookExecutionStatu\
                  sException"
        "481":
          description: InvalidLifecycleEventHookExecutionIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidLifecycleEventHookExecutionIdExc\
                  eption"
        "482":
          description: LifecycleEventAlreadyCompletedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LifecycleEventAlreadyCompletedException"
        "483":
          description: DeploymentIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentIdRequiredException"
        "484":
          description: DeploymentDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentDoesNotExistException"
        "485":
          description: InvalidDeploymentIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentIdException"
        "486":
          description: UnsupportedActionForDeploymentTypeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedActionForDeploymentTypeExcep\
                  tion"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.PutLifecycleEventHookExecutionStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutLifecycleEventHookExecutionStatusInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.RegisterApplicationRevision:
    post:
      operationId: RegisterApplicationRevision
      description: Registers with AWS CodeDeploy a revision for the specified application.
      responses:
        "200":
          description: Success
        "480":
          description: ApplicationDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationDoesNotExistException"
        "481":
          description: ApplicationNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationNameRequiredException"
        "482":
          description: InvalidApplicationNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidApplicationNameException"
        "483":
          description: DescriptionTooLongException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescriptionTooLongException"
        "484":
          description: RevisionRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RevisionRequiredException"
        "485":
          description: InvalidRevisionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRevisionException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.RegisterApplicationRevision
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterApplicationRevisionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.RegisterOnPremisesInstance:
    post:
      operationId: RegisterOnPremisesInstance
      description: <p>Registers an on-premises instance.</p> <note> <p>Only one IAM ARN (an
        IAM session ARN or IAM user ARN) is supported in the request. You cannot
        use both.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: InstanceNameAlreadyRegisteredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceNameAlreadyRegisteredException"
        "481":
          description: IamArnRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IamArnRequiredException"
        "482":
          description: IamSessionArnAlreadyRegisteredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IamSessionArnAlreadyRegisteredException"
        "483":
          description: IamUserArnAlreadyRegisteredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IamUserArnAlreadyRegisteredException"
        "484":
          description: InstanceNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceNameRequiredException"
        "485":
          description: IamUserArnRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IamUserArnRequiredException"
        "486":
          description: InvalidInstanceNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceNameException"
        "487":
          description: InvalidIamSessionArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidIamSessionArnException"
        "488":
          description: InvalidIamUserArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidIamUserArnException"
        "489":
          description: MultipleIamArnsProvidedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MultipleIamArnsProvidedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.RegisterOnPremisesInstance
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterOnPremisesInstanceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.RemoveTagsFromOnPremisesInstances:
    post:
      operationId: RemoveTagsFromOnPremisesInstances
      description: Removes one or more tags from one or more on-premises instances.
      responses:
        "200":
          description: Success
        "480":
          description: InstanceNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceNameRequiredException"
        "481":
          description: InvalidInstanceNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInstanceNameException"
        "482":
          description: TagRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagRequiredException"
        "483":
          description: InvalidTagException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTagException"
        "484":
          description: TagLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagLimitExceededException"
        "485":
          description: InstanceLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceLimitExceededException"
        "486":
          description: InstanceNotRegisteredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InstanceNotRegisteredException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.RemoveTagsFromOnPremisesInstances
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoveTagsFromOnPremisesInstancesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.SkipWaitTimeForInstanceTermination:
    post:
      deprecated: true
      operationId: SkipWaitTimeForInstanceTermination
      description: In a blue/green deployment, overrides any specified wait time and starts
        terminating instances immediately after the traffic routing is complete.
      responses:
        "200":
          description: Success
        "480":
          description: DeploymentIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentIdRequiredException"
        "481":
          description: DeploymentDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentDoesNotExistException"
        "482":
          description: DeploymentAlreadyCompletedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentAlreadyCompletedException"
        "483":
          description: InvalidDeploymentIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentIdException"
        "484":
          description: DeploymentNotStartedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentNotStartedException"
        "485":
          description: UnsupportedActionForDeploymentTypeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedActionForDeploymentTypeExcep\
                  tion"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.SkipWaitTimeForInstanceTermination
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SkipWaitTimeForInstanceTerminationInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.StopDeployment:
    post:
      operationId: StopDeployment
      description: Attempts to stop an ongoing deployment.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopDeploymentOutput"
        "480":
          description: DeploymentIdRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentIdRequiredException"
        "481":
          description: DeploymentDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentDoesNotExistException"
        "482":
          description: DeploymentGroupDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentGroupDoesNotExistException"
        "483":
          description: DeploymentAlreadyCompletedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentAlreadyCompletedException"
        "484":
          description: InvalidDeploymentIdException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentIdException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.StopDeployment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopDeploymentInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.TagResource:
    post:
      operationId: TagResource
      description: " Associates the list of tags in the input <code>Tags</code> parameter
        with the resource identified by the <code>ResourceArn</code> input
        parameter. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceOutput"
        "480":
          description: ResourceArnRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceArnRequiredException"
        "481":
          description: ApplicationDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationDoesNotExistException"
        "482":
          description: DeploymentGroupDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentGroupDoesNotExistException"
        "483":
          description: DeploymentConfigDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentConfigDoesNotExistException"
        "484":
          description: TagRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagRequiredException"
        "485":
          description: InvalidTagsToAddException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTagsToAddException"
        "486":
          description: ArnNotSupportedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArnNotSupportedException"
        "487":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.TagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagResourceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.UntagResource:
    post:
      operationId: UntagResource
      description: " Disassociates a resource from a list of tags. The resource is
        identified by the <code>ResourceArn</code> input parameter. The tags are
        identfied by the list of keys in the <code>TagKeys</code> input
        parameter. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceOutput"
        "480":
          description: ResourceArnRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceArnRequiredException"
        "481":
          description: ApplicationDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationDoesNotExistException"
        "482":
          description: DeploymentGroupDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentGroupDoesNotExistException"
        "483":
          description: DeploymentConfigDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentConfigDoesNotExistException"
        "484":
          description: TagRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagRequiredException"
        "485":
          description: InvalidTagsToAddException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTagsToAddException"
        "486":
          description: ArnNotSupportedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArnNotSupportedException"
        "487":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.UntagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UntagResourceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.UpdateApplication:
    post:
      operationId: UpdateApplication
      description: Changes the name of an application.
      responses:
        "200":
          description: Success
        "480":
          description: ApplicationNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationNameRequiredException"
        "481":
          description: InvalidApplicationNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidApplicationNameException"
        "482":
          description: ApplicationAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationAlreadyExistsException"
        "483":
          description: ApplicationDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationDoesNotExistException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.UpdateApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateApplicationInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeDeploy_20141006.UpdateDeploymentGroup:
    post:
      operationId: UpdateDeploymentGroup
      description: Changes information about a deployment group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDeploymentGroupOutput"
        "480":
          description: ApplicationNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationNameRequiredException"
        "481":
          description: InvalidApplicationNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidApplicationNameException"
        "482":
          description: ApplicationDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationDoesNotExistException"
        "483":
          description: InvalidDeploymentGroupNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentGroupNameException"
        "484":
          description: DeploymentGroupAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentGroupAlreadyExistsException"
        "485":
          description: DeploymentGroupNameRequiredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentGroupNameRequiredException"
        "486":
          description: DeploymentGroupDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentGroupDoesNotExistException"
        "487":
          description: InvalidEC2TagException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidEC2TagException"
        "488":
          description: InvalidTagException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTagException"
        "489":
          description: InvalidAutoScalingGroupException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAutoScalingGroupException"
        "490":
          description: InvalidDeploymentConfigNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentConfigNameException"
        "491":
          description: DeploymentConfigDoesNotExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentConfigDoesNotExistException"
        "492":
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRoleException"
        "493":
          description: LifecycleHookLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LifecycleHookLimitExceededException"
        "494":
          description: InvalidTriggerConfigException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTriggerConfigException"
        "495":
          description: TriggerTargetsLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TriggerTargetsLimitExceededException"
        "496":
          description: InvalidAlarmConfigException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAlarmConfigException"
        "497":
          description: AlarmsLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlarmsLimitExceededException"
        "498":
          description: InvalidAutoRollbackConfigException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAutoRollbackConfigException"
        "499":
          description: InvalidLoadBalancerInfoException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidLoadBalancerInfoException"
        "500":
          description: InvalidDeploymentStyleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeploymentStyleException"
        "501":
          description: InvalidBlueGreenDeploymentConfigurationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidBlueGreenDeploymentConfiguration\
                  Exception"
        "502":
          description: InvalidEC2TagCombinationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidEC2TagCombinationException"
        "503":
          description: InvalidOnPremisesTagCombinationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidOnPremisesTagCombinationException"
        "504":
          description: TagSetListLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagSetListLimitExceededException"
        "505":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "506":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "507":
          description: InvalidECSServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidECSServiceException"
        "508":
          description: InvalidTargetGroupPairException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTargetGroupPairException"
        "509":
          description: ECSServiceMappingLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ECSServiceMappingLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeDeploy_20141006.UpdateDeploymentGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDeploymentGroupInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://codedeploy.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The CodeDeploy multi-region endpoint
  - url: https://codedeploy.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The CodeDeploy multi-region endpoint
  - url: http://codedeploy.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CodeDeploy endpoint for China (Beijing) and China (Ningxia)
  - url: https://codedeploy.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The CodeDeploy endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AddTagsToOnPremisesInstancesInput:
      type: object
      required:
        - tags
        - instanceNames
      properties:
        tags:
          $ref: "#/components/schemas/TagList"
        instanceNames:
          $ref: "#/components/schemas/InstanceNameList"
      description: Represents the input of, and adds tags to, an on-premises instance
        operation.
    InstanceNameRequiredException: {}
    InvalidInstanceNameException: {}
    TagRequiredException: {}
    InvalidTagException: {}
    TagLimitExceededException: {}
    InstanceLimitExceededException: {}
    InstanceNotRegisteredException: {}
    BatchGetApplicationRevisionsOutput:
      type: object
      properties:
        applicationName:
          $ref: "#/components/schemas/ApplicationName"
        errorMessage:
          $ref: "#/components/schemas/ErrorMessage"
        revisions:
          $ref: "#/components/schemas/RevisionInfoList"
      description: Represents the output of a BatchGetApplicationRevisions operation.
    BatchGetApplicationRevisionsInput:
      type: object
      required:
        - applicationName
        - revisions
      properties:
        applicationName:
          $ref: "#/components/schemas/ApplicationName"
        revisions:
          $ref: "#/components/schemas/RevisionLocationList"
      description: Represents the input of a BatchGetApplicationRevisions operation.
    ApplicationDoesNotExistException: {}
    ApplicationNameRequiredException: {}
    InvalidApplicationNameException: {}
    RevisionRequiredException: {}
    InvalidRevisionException: {}
    BatchLimitExceededException: {}
    BatchGetApplicationsOutput:
      type: object
      properties:
        applicationsInfo:
          $ref: "#/components/schemas/ApplicationsInfoList"
      description: Represents the output of a BatchGetApplications operation.
    BatchGetApplicationsInput:
      type: object
      required:
        - applicationNames
      properties:
        applicationNames:
          $ref: "#/components/schemas/ApplicationsList"
      description: Represents the input of a BatchGetApplications operation.
    BatchGetDeploymentGroupsOutput:
      type: object
      properties:
        deploymentGroupsInfo:
          $ref: "#/components/schemas/DeploymentGroupInfoList"
        errorMessage:
          $ref: "#/components/schemas/ErrorMessage"
      description: Represents the output of a BatchGetDeploymentGroups operation.
    BatchGetDeploymentGroupsInput:
      type: object
      required:
        - applicationName
        - deploymentGroupNames
      properties:
        applicationName:
          $ref: "#/components/schemas/ApplicationName"
        deploymentGroupNames:
          $ref: "#/components/schemas/DeploymentGroupsList"
      description: Represents the input of a BatchGetDeploymentGroups operation.
    DeploymentGroupNameRequiredException: {}
    InvalidDeploymentGroupNameException: {}
    DeploymentConfigDoesNotExistException: {}
    BatchGetDeploymentInstancesOutput:
      type: object
      properties:
        instancesSummary:
          $ref: "#/components/schemas/InstanceSummaryList"
        errorMessage:
          $ref: "#/components/schemas/ErrorMessage"
      description: Represents the output of a BatchGetDeploymentInstances operation.
    BatchGetDeploymentInstancesInput:
      type: object
      required:
        - deploymentId
        - instanceIds
      properties:
        deploymentId:
          $ref: "#/components/schemas/DeploymentId"
        instanceIds:
          $ref: "#/components/schemas/InstancesList"
      description: " Represents the input of a BatchGetDeploymentInstances operation. "
    DeploymentIdRequiredException: {}
    DeploymentDoesNotExistException: {}
    InstanceIdRequiredException: {}
    InvalidDeploymentIdException: {}
    InvalidComputePlatformException: {}
    BatchGetDeploymentTargetsOutput:
      type: object
      properties:
        deploymentTargets:
          $ref: "#/components/schemas/DeploymentTargetList"
    BatchGetDeploymentTargetsInput:
      type: object
      properties:
        deploymentId:
          $ref: "#/components/schemas/DeploymentId"
        targetIds:
          $ref: "#/components/schemas/TargetIdList"
    DeploymentNotStartedException: {}
    DeploymentTargetIdRequiredException: {}
    InvalidDeploymentTargetIdException: {}
    DeploymentTargetDoesNotExistException: {}
    DeploymentTargetListSizeExceededException: {}
    BatchGetDeploymentsOutput:
      type: object
      properties:
        deploymentsInfo:
          $ref: "#/components/schemas/DeploymentsInfoList"
      description: " Represents the output of a BatchGetDeployments operation. "
    BatchGetDeploymentsInput:
      type: object
      required:
        - deploymentIds
      properties:
        deploymentIds:
          $ref: "#/components/schemas/DeploymentsList"
      description: " Represents the input of a BatchGetDeployments operation. "
    BatchGetOnPremisesInstancesOutput:
      type: object
      properties:
        instanceInfos:
          $ref: "#/components/schemas/InstanceInfoList"
      description: Represents the output of a BatchGetOnPremisesInstances operation.
    BatchGetOnPremisesInstancesInput:
      type: object
      required:
        - instanceNames
      properties:
        instanceNames:
          $ref: "#/components/schemas/InstanceNameList"
      description: Represents the input of a BatchGetOnPremisesInstances operation.
    ContinueDeploymentInput:
      type: object
      properties:
        deploymentId:
          $ref: "#/components/schemas/DeploymentId"
        deploymentWaitType:
          $ref: "#/components/schemas/DeploymentWaitType"
    DeploymentAlreadyCompletedException: {}
    DeploymentIsNotInReadyStateException: {}
    UnsupportedActionForDeploymentTypeException: {}
    InvalidDeploymentWaitTypeException: {}
    InvalidDeploymentStatusException: {}
    CreateApplicationOutput:
      type: object
      properties:
        applicationId:
          $ref: "#/components/schemas/ApplicationId"
      description: Represents the output of a CreateApplication operation.
    CreateApplicationInput:
      type: object
      required:
        - applicationName
      properties:
        applicationName:
          $ref: "#/components/schemas/ApplicationName"
        computePlatform:
          $ref: "#/components/schemas/ComputePlatform"
        tags:
          $ref: "#/components/schemas/TagList"
      description: Represents the input of a CreateApplication operation.
    ApplicationAlreadyExistsException: {}
    ApplicationLimitExceededException: {}
    InvalidTagsToAddException: {}
    CreateDeploymentOutput:
      type: object
      properties:
        deploymentId:
          $ref: "#/components/schemas/DeploymentId"
      description: " Represents the output of a CreateDeployment operation. "
    CreateDeploymentInput:
      type: object
      required:
        - applicationName
      properties:
        applicationName:
          $ref: "#/components/schemas/ApplicationName"
        deploymentGroupName:
          $ref: "#/components/schemas/DeploymentGroupName"
        revision:
          $ref: "#/components/schemas/RevisionLocation"
        deploymentConfigName:
          $ref: "#/components/schemas/DeploymentConfigName"
        description:
          $ref: "#/components/schemas/Description"
        ignoreApplicationStopFailures:
          $ref: "#/components/schemas/Boolean"
        targetInstances:
          $ref: "#/components/schemas/TargetInstances"
        autoRollbackConfiguration:
          $ref: "#/components/schemas/AutoRollbackConfiguration"
        updateOutdatedInstancesOnly:
          $ref: "#/components/schemas/Boolean"
        fileExistsBehavior:
          $ref: "#/components/schemas/FileExistsBehavior"
      description: Represents the input of a CreateDeployment operation.
    DeploymentGroupDoesNotExistException: {}
    RevisionDoesNotExistException: {}
    InvalidDeploymentConfigNameException: {}
    DescriptionTooLongException: {}
    DeploymentLimitExceededException: {}
    InvalidTargetInstancesException: {}
    InvalidAutoRollbackConfigException: {}
    InvalidLoadBalancerInfoException: {}
    InvalidFileExistsBehaviorException: {}
    InvalidRoleException: {}
    InvalidAutoScalingGroupException: {}
    ThrottlingException: {}
    InvalidUpdateOutdatedInstancesOnlyValueException: {}
    InvalidIgnoreApplicationStopFailuresValueException: {}
    InvalidGitHubAccountTokenException: {}
    CreateDeploymentConfigOutput:
      type: object
      properties:
        deploymentConfigId:
          $ref: "#/components/schemas/DeploymentConfigId"
      description: Represents the output of a CreateDeploymentConfig operation.
    CreateDeploymentConfigInput:
      type: object
      required:
        - deploymentConfigName
      properties:
        deploymentConfigName:
          $ref: "#/components/schemas/DeploymentConfigName"
        minimumHealthyHosts:
          $ref: "#/components/schemas/MinimumHealthyHosts"
        trafficRoutingConfig:
          $ref: "#/components/schemas/TrafficRoutingConfig"
        computePlatform:
          $ref: "#/components/schemas/ComputePlatform"
      description: Represents the input of a CreateDeploymentConfig operation.
    DeploymentConfigNameRequiredException: {}
    DeploymentConfigAlreadyExistsException: {}
    InvalidMinimumHealthyHostValueException: {}
    DeploymentConfigLimitExceededException: {}
    InvalidTrafficRoutingConfigurationException: {}
    CreateDeploymentGroupOutput:
      type: object
      properties:
        deploymentGroupId:
          $ref: "#/components/schemas/DeploymentGroupId"
      description: Represents the output of a CreateDeploymentGroup operation.
    CreateDeploymentGroupInput:
      type: object
      required:
        - applicationName
        - deploymentGroupName
        - serviceRoleArn
      properties:
        applicationName:
          $ref: "#/components/schemas/ApplicationName"
        deploymentGroupName:
          $ref: "#/components/schemas/DeploymentGroupName"
        deploymentConfigName:
          $ref: "#/components/schemas/DeploymentConfigName"
        ec2TagFilters:
          $ref: "#/components/schemas/EC2TagFilterList"
        onPremisesInstanceTagFilters:
          $ref: "#/components/schemas/TagFilterList"
        autoScalingGroups:
          $ref: "#/components/schemas/AutoScalingGroupNameList"
        serviceRoleArn:
          $ref: "#/components/schemas/Role"
        triggerConfigurations:
          $ref: "#/components/schemas/TriggerConfigList"
        alarmConfiguration:
          $ref: "#/components/schemas/AlarmConfiguration"
        autoRollbackConfiguration:
          $ref: "#/components/schemas/AutoRollbackConfiguration"
        deploymentStyle:
          $ref: "#/components/schemas/DeploymentStyle"
        blueGreenDeploymentConfiguration:
          $ref: "#/components/schemas/BlueGreenDeploymentConfiguration"
        loadBalancerInfo:
          $ref: "#/components/schemas/LoadBalancerInfo"
        ec2TagSet:
          $ref: "#/components/schemas/EC2TagSet"
        ecsServices:
          $ref: "#/components/schemas/ECSServiceList"
        onPremisesTagSet:
          $ref: "#/components/schemas/OnPremisesTagSet"
        tags:
          $ref: "#/components/schemas/TagList"
      description: Represents the input of a CreateDeploymentGroup operation.
    DeploymentGroupAlreadyExistsException: {}
    InvalidEC2TagException: {}
    RoleRequiredException: {}
    DeploymentGroupLimitExceededException: {}
    LifecycleHookLimitExceededException: {}
    InvalidTriggerConfigException: {}
    TriggerTargetsLimitExceededException: {}
    InvalidAlarmConfigException: {}
    AlarmsLimitExceededException: {}
    InvalidDeploymentStyleException: {}
    InvalidBlueGreenDeploymentConfigurationException: {}
    InvalidEC2TagCombinationException: {}
    InvalidOnPremisesTagCombinationException: {}
    TagSetListLimitExceededException: {}
    InvalidInputException: {}
    InvalidECSServiceException: {}
    InvalidTargetGroupPairException: {}
    ECSServiceMappingLimitExceededException: {}
    DeleteApplicationInput:
      type: object
      required:
        - applicationName
      properties:
        applicationName:
          $ref: "#/components/schemas/ApplicationName"
      description: Represents the input of a DeleteApplication operation.
    DeleteDeploymentConfigInput:
      type: object
      required:
        - deploymentConfigName
      properties:
        deploymentConfigName:
          $ref: "#/components/schemas/DeploymentConfigName"
      description: Represents the input of a DeleteDeploymentConfig operation.
    DeploymentConfigInUseException: {}
    InvalidOperationException: {}
    DeleteDeploymentGroupOutput:
      type: object
      properties:
        hooksNotCleanedUp:
          $ref: "#/components/schemas/AutoScalingGroupList"
      description: Represents the output of a DeleteDeploymentGroup operation.
    DeleteDeploymentGroupInput:
      type: object
      required:
        - applicationName
        - deploymentGroupName
      properties:
        applicationName:
          $ref: "#/components/schemas/ApplicationName"
        deploymentGroupName:
          $ref: "#/components/schemas/DeploymentGroupName"
      description: Represents the input of a DeleteDeploymentGroup operation.
    DeleteGitHubAccountTokenOutput:
      type: object
      properties:
        tokenName:
          $ref: "#/components/schemas/GitHubAccountTokenName"
      description: Represents the output of a DeleteGitHubAccountToken operation.
    DeleteGitHubAccountTokenInput:
      type: object
      properties:
        tokenName:
          $ref: "#/components/schemas/GitHubAccountTokenName"
      description: Represents the input of a DeleteGitHubAccount operation.
    GitHubAccountTokenNameRequiredException: {}
    GitHubAccountTokenDoesNotExistException: {}
    InvalidGitHubAccountTokenNameException: {}
    ResourceValidationException: {}
    OperationNotSupportedException: {}
    DeregisterOnPremisesInstanceInput:
      type: object
      required:
        - instanceName
      properties:
        instanceName:
          $ref: "#/components/schemas/InstanceName"
      description: Represents the input of a DeregisterOnPremisesInstance operation.
    GetApplicationOutput:
      type: object
      properties:
        application:
          $ref: "#/components/schemas/ApplicationInfo"
      description: Represents the output of a GetApplication operation.
    GetApplicationInput:
      type: object
      required:
        - applicationName
      properties:
        applicationName:
          $ref: "#/components/schemas/ApplicationName"
      description: Represents the input of a GetApplication operation.
    GetApplicationRevisionOutput:
      type: object
      properties:
        applicationName:
          $ref: "#/components/schemas/ApplicationName"
        revision:
          $ref: "#/components/schemas/RevisionLocation"
        revisionInfo:
          $ref: "#/components/schemas/GenericRevisionInfo"
      description: Represents the output of a GetApplicationRevision operation.
    GetApplicationRevisionInput:
      type: object
      required:
        - applicationName
        - revision
      properties:
        applicationName:
          $ref: "#/components/schemas/ApplicationName"
        revision:
          $ref: "#/components/schemas/RevisionLocation"
      description: Represents the input of a GetApplicationRevision operation.
    GetDeploymentOutput:
      type: object
      properties:
        deploymentInfo:
          $ref: "#/components/schemas/DeploymentInfo"
      description: Represents the output of a GetDeployment operation.
    GetDeploymentInput:
      type: object
      required:
        - deploymentId
      properties:
        deploymentId:
          $ref: "#/components/schemas/DeploymentId"
      description: Represents the input of a GetDeployment operation.
    GetDeploymentConfigOutput:
      type: object
      properties:
        deploymentConfigInfo:
          $ref: "#/components/schemas/DeploymentConfigInfo"
      description: Represents the output of a GetDeploymentConfig operation.
    GetDeploymentConfigInput:
      type: object
      required:
        - deploymentConfigName
      properties:
        deploymentConfigName:
          $ref: "#/components/schemas/DeploymentConfigName"
      description: Represents the input of a GetDeploymentConfig operation.
    GetDeploymentGroupOutput:
      type: object
      properties:
        deploymentGroupInfo:
          $ref: "#/components/schemas/DeploymentGroupInfo"
      description: Represents the output of a GetDeploymentGroup operation.
    GetDeploymentGroupInput:
      type: object
      required:
        - applicationName
        - deploymentGroupName
      properties:
        applicationName:
          $ref: "#/components/schemas/ApplicationName"
        deploymentGroupName:
          $ref: "#/components/schemas/DeploymentGroupName"
      description: Represents the input of a GetDeploymentGroup operation.
    GetDeploymentInstanceOutput:
      type: object
      properties:
        instanceSummary:
          $ref: "#/components/schemas/InstanceSummary"
      description: " Represents the output of a GetDeploymentInstance operation. "
    GetDeploymentInstanceInput:
      type: object
      required:
        - deploymentId
        - instanceId
      properties:
        deploymentId:
          $ref: "#/components/schemas/DeploymentId"
        instanceId:
          $ref: "#/components/schemas/InstanceId"
      description: " Represents the input of a GetDeploymentInstance operation. "
    InstanceDoesNotExistException: {}
    GetDeploymentTargetOutput:
      type: object
      properties:
        deploymentTarget:
          $ref: "#/components/schemas/DeploymentTarget"
    GetDeploymentTargetInput:
      type: object
      properties:
        deploymentId:
          $ref: "#/components/schemas/DeploymentId"
        targetId:
          $ref: "#/components/schemas/TargetId"
    GetOnPremisesInstanceOutput:
      type: object
      properties:
        instanceInfo:
          $ref: "#/components/schemas/InstanceInfo"
      description: " Represents the output of a GetOnPremisesInstance operation. "
    GetOnPremisesInstanceInput:
      type: object
      required:
        - instanceName
      properties:
        instanceName:
          $ref: "#/components/schemas/InstanceName"
      description: " Represents the input of a GetOnPremisesInstance operation. "
    ListApplicationRevisionsOutput:
      type: object
      properties:
        revisions:
          $ref: "#/components/schemas/RevisionLocationList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the output of a ListApplicationRevisions operation.
    ListApplicationRevisionsInput:
      type: object
      required:
        - applicationName
      properties:
        applicationName:
          $ref: "#/components/schemas/ApplicationName"
        sortBy:
          $ref: "#/components/schemas/ApplicationRevisionSortBy"
        sortOrder:
          $ref: "#/components/schemas/SortOrder"
        s3Bucket:
          $ref: "#/components/schemas/S3Bucket"
        s3KeyPrefix:
          $ref: "#/components/schemas/S3Key"
        deployed:
          $ref: "#/components/schemas/ListStateFilterAction"
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: " Represents the input of a ListApplicationRevisions operation. "
    InvalidSortByException: {}
    InvalidSortOrderException: {}
    InvalidBucketNameFilterException: {}
    InvalidKeyPrefixFilterException: {}
    BucketNameFilterRequiredException: {}
    InvalidDeployedStateFilterException: {}
    InvalidNextTokenException: {}
    ListApplicationsOutput:
      type: object
      properties:
        applications:
          $ref: "#/components/schemas/ApplicationsList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the output of a ListApplications operation.
    ListApplicationsInput:
      type: object
      properties:
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the input of a ListApplications operation.
    ListDeploymentConfigsOutput:
      type: object
      properties:
        deploymentConfigsList:
          $ref: "#/components/schemas/DeploymentConfigsList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the output of a ListDeploymentConfigs operation.
    ListDeploymentConfigsInput:
      type: object
      properties:
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the input of a ListDeploymentConfigs operation.
    ListDeploymentGroupsOutput:
      type: object
      properties:
        applicationName:
          $ref: "#/components/schemas/ApplicationName"
        deploymentGroups:
          $ref: "#/components/schemas/DeploymentGroupsList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the output of a ListDeploymentGroups operation.
    ListDeploymentGroupsInput:
      type: object
      required:
        - applicationName
      properties:
        applicationName:
          $ref: "#/components/schemas/ApplicationName"
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the input of a ListDeploymentGroups operation.
    ListDeploymentInstancesOutput:
      type: object
      properties:
        instancesList:
          $ref: "#/components/schemas/InstancesList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the output of a ListDeploymentInstances operation.
    ListDeploymentInstancesInput:
      type: object
      required:
        - deploymentId
      properties:
        deploymentId:
          $ref: "#/components/schemas/DeploymentId"
        nextToken:
          $ref: "#/components/schemas/NextToken"
        instanceStatusFilter:
          $ref: "#/components/schemas/InstanceStatusList"
        instanceTypeFilter:
          $ref: "#/components/schemas/InstanceTypeList"
      description: " Represents the input of a ListDeploymentInstances operation. "
    InvalidInstanceStatusException: {}
    InvalidInstanceTypeException: {}
    InvalidDeploymentInstanceTypeException: {}
    InvalidTargetFilterNameException: {}
    ListDeploymentTargetsOutput:
      type: object
      properties:
        targetIds:
          $ref: "#/components/schemas/TargetIdList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    ListDeploymentTargetsInput:
      type: object
      properties:
        deploymentId:
          $ref: "#/components/schemas/DeploymentId"
        nextToken:
          $ref: "#/components/schemas/NextToken"
        targetFilters:
          $ref: "#/components/schemas/TargetFilters"
    ListDeploymentsOutput:
      type: object
      properties:
        deployments:
          $ref: "#/components/schemas/DeploymentsList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the output of a ListDeployments operation.
    ListDeploymentsInput:
      type: object
      properties:
        applicationName:
          $ref: "#/components/schemas/ApplicationName"
        deploymentGroupName:
          $ref: "#/components/schemas/DeploymentGroupName"
        includeOnlyStatuses:
          $ref: "#/components/schemas/DeploymentStatusList"
        createTimeRange:
          $ref: "#/components/schemas/TimeRange"
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the input of a ListDeployments operation.
    InvalidTimeRangeException: {}
    ListGitHubAccountTokenNamesOutput:
      type: object
      properties:
        tokenNameList:
          $ref: "#/components/schemas/GitHubAccountTokenNameList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the output of a ListGitHubAccountTokenNames operation.
    ListGitHubAccountTokenNamesInput:
      type: object
      properties:
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the input of a ListGitHubAccountTokenNames operation.
    ListOnPremisesInstancesOutput:
      type: object
      properties:
        instanceNames:
          $ref: "#/components/schemas/InstanceNameList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the output of the list on-premises instances operation.
    ListOnPremisesInstancesInput:
      type: object
      properties:
        registrationStatus:
          $ref: "#/components/schemas/RegistrationStatus"
        tagFilters:
          $ref: "#/components/schemas/TagFilterList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the input of a ListOnPremisesInstances operation.
    InvalidRegistrationStatusException: {}
    InvalidTagFilterException: {}
    ListTagsForResourceOutput:
      type: object
      properties:
        Tags:
          $ref: "#/components/schemas/TagList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListTagsForResourceInput:
      type: object
      required:
        - ResourceArn
      properties:
        ResourceArn:
          $ref: "#/components/schemas/Arn"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ArnNotSupportedException: {}
    InvalidArnException: {}
    ResourceArnRequiredException: {}
    PutLifecycleEventHookExecutionStatusOutput:
      type: object
      properties:
        lifecycleEventHookExecutionId:
          $ref: "#/components/schemas/LifecycleEventHookExecutionId"
    PutLifecycleEventHookExecutionStatusInput:
      type: object
      properties:
        deploymentId:
          $ref: "#/components/schemas/DeploymentId"
        lifecycleEventHookExecutionId:
          $ref: "#/components/schemas/LifecycleEventHookExecutionId"
        status:
          $ref: "#/components/schemas/LifecycleEventStatus"
    InvalidLifecycleEventHookExecutionStatusException: {}
    InvalidLifecycleEventHookExecutionIdException: {}
    LifecycleEventAlreadyCompletedException: {}
    RegisterApplicationRevisionInput:
      type: object
      required:
        - applicationName
        - revision
      properties:
        applicationName:
          $ref: "#/components/schemas/ApplicationName"
        description:
          $ref: "#/components/schemas/Description"
        revision:
          $ref: "#/components/schemas/RevisionLocation"
      description: Represents the input of a RegisterApplicationRevision operation.
    RegisterOnPremisesInstanceInput:
      type: object
      required:
        - instanceName
      properties:
        instanceName:
          $ref: "#/components/schemas/InstanceName"
        iamSessionArn:
          $ref: "#/components/schemas/IamSessionArn"
        iamUserArn:
          $ref: "#/components/schemas/IamUserArn"
      description: Represents the input of the register on-premises instance operation.
    InstanceNameAlreadyRegisteredException: {}
    IamArnRequiredException: {}
    IamSessionArnAlreadyRegisteredException: {}
    IamUserArnAlreadyRegisteredException: {}
    IamUserArnRequiredException: {}
    InvalidIamSessionArnException: {}
    InvalidIamUserArnException: {}
    MultipleIamArnsProvidedException: {}
    RemoveTagsFromOnPremisesInstancesInput:
      type: object
      required:
        - tags
        - instanceNames
      properties:
        tags:
          $ref: "#/components/schemas/TagList"
        instanceNames:
          $ref: "#/components/schemas/InstanceNameList"
      description: Represents the input of a RemoveTagsFromOnPremisesInstances operation.
    SkipWaitTimeForInstanceTerminationInput:
      type: object
      properties:
        deploymentId:
          $ref: "#/components/schemas/DeploymentId"
    StopDeploymentOutput:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/StopStatus"
        statusMessage:
          $ref: "#/components/schemas/Message"
      description: " Represents the output of a StopDeployment operation. "
    StopDeploymentInput:
      type: object
      required:
        - deploymentId
      properties:
        deploymentId:
          $ref: "#/components/schemas/DeploymentId"
        autoRollbackEnabled:
          $ref: "#/components/schemas/NullableBoolean"
      description: " Represents the input of a StopDeployment operation. "
    TagResourceOutput:
      type: object
      properties: {}
    TagResourceInput:
      type: object
      required:
        - ResourceArn
        - Tags
      properties:
        ResourceArn:
          $ref: "#/components/schemas/Arn"
        Tags:
          $ref: "#/components/schemas/TagList"
    UntagResourceOutput:
      type: object
      properties: {}
    UntagResourceInput:
      type: object
      required:
        - ResourceArn
        - TagKeys
      properties:
        ResourceArn:
          $ref: "#/components/schemas/Arn"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
    UpdateApplicationInput:
      type: object
      properties:
        applicationName:
          $ref: "#/components/schemas/ApplicationName"
        newApplicationName:
          $ref: "#/components/schemas/ApplicationName"
      description: Represents the input of an UpdateApplication operation.
    UpdateDeploymentGroupOutput:
      type: object
      properties:
        hooksNotCleanedUp:
          $ref: "#/components/schemas/AutoScalingGroupList"
      description: Represents the output of an UpdateDeploymentGroup operation.
    UpdateDeploymentGroupInput:
      type: object
      required:
        - applicationName
        - currentDeploymentGroupName
      properties:
        applicationName:
          $ref: "#/components/schemas/ApplicationName"
        currentDeploymentGroupName:
          $ref: "#/components/schemas/DeploymentGroupName"
        newDeploymentGroupName:
          $ref: "#/components/schemas/DeploymentGroupName"
        deploymentConfigName:
          $ref: "#/components/schemas/DeploymentConfigName"
        ec2TagFilters:
          $ref: "#/components/schemas/EC2TagFilterList"
        onPremisesInstanceTagFilters:
          $ref: "#/components/schemas/TagFilterList"
        autoScalingGroups:
          $ref: "#/components/schemas/AutoScalingGroupNameList"
        serviceRoleArn:
          $ref: "#/components/schemas/Role"
        triggerConfigurations:
          $ref: "#/components/schemas/TriggerConfigList"
        alarmConfiguration:
          $ref: "#/components/schemas/AlarmConfiguration"
        autoRollbackConfiguration:
          $ref: "#/components/schemas/AutoRollbackConfiguration"
        deploymentStyle:
          $ref: "#/components/schemas/DeploymentStyle"
        blueGreenDeploymentConfiguration:
          $ref: "#/components/schemas/BlueGreenDeploymentConfiguration"
        loadBalancerInfo:
          $ref: "#/components/schemas/LoadBalancerInfo"
        ec2TagSet:
          $ref: "#/components/schemas/EC2TagSet"
        ecsServices:
          $ref: "#/components/schemas/ECSServiceList"
        onPremisesTagSet:
          $ref: "#/components/schemas/OnPremisesTagSet"
      description: Represents the input of an UpdateDeploymentGroup operation.
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    InstanceNameList:
      type: array
      items:
        $ref: "#/components/schemas/InstanceName"
    AdditionalDeploymentStatusInfo:
      type: string
      description: AdditionalDeploymentStatusInfo is deprecated, use
        DeploymentStatusMessageList instead.
    AlarmName:
      type: string
    Alarm:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/AlarmName"
      description: Information about an alarm.
    Boolean:
      type: boolean
    AlarmList:
      type: array
      items:
        $ref: "#/components/schemas/Alarm"
    AlarmConfiguration:
      type: object
      properties:
        enabled:
          $ref: "#/components/schemas/Boolean"
        ignorePollAlarmFailure:
          $ref: "#/components/schemas/Boolean"
        alarms:
          $ref: "#/components/schemas/AlarmList"
      description: Information about alarms associated with the deployment group.
    RawStringContent:
      type: string
    RawStringSha256:
      type: string
    AppSpecContent:
      type: object
      properties:
        content:
          $ref: "#/components/schemas/RawStringContent"
        sha256:
          $ref: "#/components/schemas/RawStringSha256"
      description: " A revision for an AWS Lambda or Amazon ECS deployment that is a
        YAML-formatted or JSON-formatted string. For AWS Lambda and Amazon ECS
        deployments, the revision is the same as the AppSpec file. This method
        replaces the deprecated <code>RawString</code> data type. "
    ApplicationId:
      type: string
    ApplicationName:
      type: string
      minLength: 1
      maxLength: 100
    Timestamp:
      type: string
      format: date-time
    GitHubAccountTokenName:
      type: string
    ComputePlatform:
      type: string
      enum:
        - Server
        - Lambda
        - ECS
    ApplicationInfo:
      type: object
      properties:
        applicationId:
          $ref: "#/components/schemas/ApplicationId"
        applicationName:
          $ref: "#/components/schemas/ApplicationName"
        createTime:
          $ref: "#/components/schemas/Timestamp"
        linkedToGitHub:
          $ref: "#/components/schemas/Boolean"
        gitHubAccountName:
          $ref: "#/components/schemas/GitHubAccountTokenName"
        computePlatform:
          $ref: "#/components/schemas/ComputePlatform"
      description: Information about an application.
    ApplicationRevisionSortBy:
      type: string
      enum:
        - registerTime
        - firstUsedTime
        - lastUsedTime
    ApplicationsInfoList:
      type: array
      items:
        $ref: "#/components/schemas/ApplicationInfo"
    ApplicationsList:
      type: array
      items:
        $ref: "#/components/schemas/ApplicationName"
    Arn:
      type: string
      minLength: 1
      maxLength: 1011
    AutoRollbackEventsList:
      type: array
      items:
        $ref: "#/components/schemas/AutoRollbackEvent"
    AutoRollbackConfiguration:
      type: object
      properties:
        enabled:
          $ref: "#/components/schemas/Boolean"
        events:
          $ref: "#/components/schemas/AutoRollbackEventsList"
      description: Information about a configuration for automatically rolling back to a
        previous version of an application revision when a deployment is not
        completed successfully.
    AutoRollbackEvent:
      type: string
      enum:
        - DEPLOYMENT_FAILURE
        - DEPLOYMENT_STOP_ON_ALARM
        - DEPLOYMENT_STOP_ON_REQUEST
    AutoScalingGroupName:
      type: string
    AutoScalingGroupHook:
      type: string
    AutoScalingGroup:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/AutoScalingGroupName"
        hook:
          $ref: "#/components/schemas/AutoScalingGroupHook"
      description: Information about an Auto Scaling group.
    AutoScalingGroupList:
      type: array
      items:
        $ref: "#/components/schemas/AutoScalingGroup"
    AutoScalingGroupNameList:
      type: array
      items:
        $ref: "#/components/schemas/AutoScalingGroupName"
    RevisionLocationList:
      type: array
      items:
        $ref: "#/components/schemas/RevisionLocation"
    ErrorMessage:
      type: string
    RevisionInfoList:
      type: array
      items:
        $ref: "#/components/schemas/RevisionInfo"
    DeploymentGroupsList:
      type: array
      items:
        $ref: "#/components/schemas/DeploymentGroupName"
    DeploymentGroupInfoList:
      type: array
      items:
        $ref: "#/components/schemas/DeploymentGroupInfo"
    DeploymentId:
      type: string
    InstancesList:
      type: array
      items:
        $ref: "#/components/schemas/InstanceId"
    InstanceSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/InstanceSummary"
    TargetIdList:
      type: array
      items:
        $ref: "#/components/schemas/TargetId"
    DeploymentTargetList:
      type: array
      items:
        $ref: "#/components/schemas/DeploymentTarget"
    DeploymentsList:
      type: array
      items:
        $ref: "#/components/schemas/DeploymentId"
    DeploymentsInfoList:
      type: array
      items:
        $ref: "#/components/schemas/DeploymentInfo"
    InstanceInfoList:
      type: array
      items:
        $ref: "#/components/schemas/InstanceInfo"
    BlueInstanceTerminationOption:
      type: object
      properties:
        action:
          $ref: "#/components/schemas/InstanceAction"
        terminationWaitTimeInMinutes:
          $ref: "#/components/schemas/Duration"
      description: "Information about whether instances in the original environment are
        terminated when a blue/green deployment is successful.
        <code>BlueInstanceTerminationOption</code> does not apply to Lambda
        deployments. "
    DeploymentReadyOption:
      type: object
      properties:
        actionOnTimeout:
          $ref: "#/components/schemas/DeploymentReadyAction"
        waitTimeInMinutes:
          $ref: "#/components/schemas/Duration"
      description: Information about how traffic is rerouted to instances in a replacement
        environment in a blue/green deployment.
    GreenFleetProvisioningOption:
      type: object
      properties:
        action:
          $ref: "#/components/schemas/GreenFleetProvisioningAction"
      description: Information about the instances that belong to the replacement
        environment in a blue/green deployment.
    BlueGreenDeploymentConfiguration:
      type: object
      properties:
        terminateBlueInstancesOnDeploymentSuccess:
          $ref: "#/components/schemas/BlueInstanceTerminationOption"
        deploymentReadyOption:
          $ref: "#/components/schemas/DeploymentReadyOption"
        greenFleetProvisioningOption:
          $ref: "#/components/schemas/GreenFleetProvisioningOption"
      description: Information about blue/green deployment options for a deployment group.
    InstanceAction:
      type: string
      enum:
        - TERMINATE
        - KEEP_ALIVE
    Duration:
      type: integer
    BundleType:
      type: string
      enum:
        - tar
        - tgz
        - zip
        - YAML
        - JSON
    CommitId:
      type: string
    DeploymentWaitType:
      type: string
      enum:
        - READY_WAIT
        - TERMINATION_WAIT
    DeploymentConfigName:
      type: string
      minLength: 1
      maxLength: 100
    MinimumHealthyHosts:
      type: object
      properties:
        value:
          $ref: "#/components/schemas/MinimumHealthyHostsValue"
        type:
          $ref: "#/components/schemas/MinimumHealthyHostsType"
      description: Information about minimum healthy instance.
    TrafficRoutingConfig:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/TrafficRoutingType"
        timeBasedCanary:
          $ref: "#/components/schemas/TimeBasedCanary"
        timeBasedLinear:
          $ref: "#/components/schemas/TimeBasedLinear"
      description: The configuration that specifies how traffic is shifted from one version
        of a Lambda function to another version during an AWS Lambda deployment.
    DeploymentConfigId:
      type: string
    DeploymentGroupName:
      type: string
      minLength: 1
      maxLength: 100
    EC2TagFilterList:
      type: array
      items:
        $ref: "#/components/schemas/EC2TagFilter"
    TagFilterList:
      type: array
      items:
        $ref: "#/components/schemas/TagFilter"
    Role:
      type: string
    TriggerConfigList:
      type: array
      items:
        $ref: "#/components/schemas/TriggerConfig"
    DeploymentStyle:
      type: object
      properties:
        deploymentType:
          $ref: "#/components/schemas/DeploymentType"
        deploymentOption:
          $ref: "#/components/schemas/DeploymentOption"
      description: Information about the type of deployment, either in-place or blue/green,
        you want to run and whether to route deployment traffic behind a load
        balancer.
    LoadBalancerInfo:
      type: object
      properties:
        elbInfoList:
          $ref: "#/components/schemas/ELBInfoList"
        targetGroupInfoList:
          $ref: "#/components/schemas/TargetGroupInfoList"
        targetGroupPairInfoList:
          $ref: "#/components/schemas/TargetGroupPairInfoList"
      description: Information about the Elastic Load Balancing load balancer or target
        group used in a deployment.
    EC2TagSet:
      type: object
      properties:
        ec2TagSetList:
          $ref: "#/components/schemas/EC2TagSetList"
      description: Information about groups of EC2 instance tags.
    ECSServiceList:
      type: array
      items:
        $ref: "#/components/schemas/ECSService"
    OnPremisesTagSet:
      type: object
      properties:
        onPremisesTagSetList:
          $ref: "#/components/schemas/OnPremisesTagSetList"
      description: Information about groups of on-premises instance tags.
    DeploymentGroupId:
      type: string
    RevisionLocation:
      type: object
      properties:
        revisionType:
          $ref: "#/components/schemas/RevisionLocationType"
        s3Location:
          $ref: "#/components/schemas/S3Location"
        gitHubLocation:
          $ref: "#/components/schemas/GitHubLocation"
        string:
          $ref: "#/components/schemas/RawString"
        appSpecContent:
          $ref: "#/components/schemas/AppSpecContent"
      description: Information about the location of an application revision.
    Description:
      type: string
    TargetInstances:
      type: object
      properties:
        tagFilters:
          $ref: "#/components/schemas/EC2TagFilterList"
        autoScalingGroups:
          $ref: "#/components/schemas/AutoScalingGroupNameList"
        ec2TagSet:
          $ref: "#/components/schemas/EC2TagSet"
      description: Information about the instances to be used in the replacement
        environment in a blue/green deployment.
    FileExistsBehavior:
      type: string
      enum:
        - DISALLOW
        - OVERWRITE
        - RETAIN
    DeploymentConfigInfo:
      type: object
      properties:
        deploymentConfigId:
          $ref: "#/components/schemas/DeploymentConfigId"
        deploymentConfigName:
          $ref: "#/components/schemas/DeploymentConfigName"
        minimumHealthyHosts:
          $ref: "#/components/schemas/MinimumHealthyHosts"
        createTime:
          $ref: "#/components/schemas/Timestamp"
        computePlatform:
          $ref: "#/components/schemas/ComputePlatform"
        trafficRoutingConfig:
          $ref: "#/components/schemas/TrafficRoutingConfig"
      description: Information about a deployment configuration.
    DeploymentConfigsList:
      type: array
      items:
        $ref: "#/components/schemas/DeploymentConfigName"
    DeploymentCreator:
      type: string
      enum:
        - user
        - autoscaling
        - codeDeployRollback
    LastDeploymentInfo:
      type: object
      properties:
        deploymentId:
          $ref: "#/components/schemas/DeploymentId"
        status:
          $ref: "#/components/schemas/DeploymentStatus"
        endTime:
          $ref: "#/components/schemas/Timestamp"
        createTime:
          $ref: "#/components/schemas/Timestamp"
      description: Information about the most recent attempted or successful deployment to
        a deployment group.
    DeploymentGroupInfo:
      type: object
      properties:
        applicationName:
          $ref: "#/components/schemas/ApplicationName"
        deploymentGroupId:
          $ref: "#/components/schemas/DeploymentGroupId"
        deploymentGroupName:
          $ref: "#/components/schemas/DeploymentGroupName"
        deploymentConfigName:
          $ref: "#/components/schemas/DeploymentConfigName"
        ec2TagFilters:
          $ref: "#/components/schemas/EC2TagFilterList"
        onPremisesInstanceTagFilters:
          $ref: "#/components/schemas/TagFilterList"
        autoScalingGroups:
          $ref: "#/components/schemas/AutoScalingGroupList"
        serviceRoleArn:
          $ref: "#/components/schemas/Role"
        targetRevision:
          $ref: "#/components/schemas/RevisionLocation"
        triggerConfigurations:
          $ref: "#/components/schemas/TriggerConfigList"
        alarmConfiguration:
          $ref: "#/components/schemas/AlarmConfiguration"
        autoRollbackConfiguration:
          $ref: "#/components/schemas/AutoRollbackConfiguration"
        deploymentStyle:
          $ref: "#/components/schemas/DeploymentStyle"
        blueGreenDeploymentConfiguration:
          $ref: "#/components/schemas/BlueGreenDeploymentConfiguration"
        loadBalancerInfo:
          $ref: "#/components/schemas/LoadBalancerInfo"
        lastSuccessfulDeployment:
          $ref: "#/components/schemas/LastDeploymentInfo"
        lastAttemptedDeployment:
          $ref: "#/components/schemas/LastDeploymentInfo"
        ec2TagSet:
          $ref: "#/components/schemas/EC2TagSet"
        onPremisesTagSet:
          $ref: "#/components/schemas/OnPremisesTagSet"
        computePlatform:
          $ref: "#/components/schemas/ComputePlatform"
        ecsServices:
          $ref: "#/components/schemas/ECSServiceList"
      description: Information about a deployment group.
    DeploymentStatus:
      type: string
      enum:
        - Created
        - Queued
        - InProgress
        - Succeeded
        - Failed
        - Stopped
        - Ready
    ErrorInformation:
      type: object
      properties:
        code:
          $ref: "#/components/schemas/ErrorCode"
        message:
          $ref: "#/components/schemas/ErrorMessage"
      description: Information about a deployment error.
    DeploymentOverview:
      type: object
      properties:
        Pending:
          $ref: "#/components/schemas/InstanceCount"
        InProgress:
          $ref: "#/components/schemas/InstanceCount"
        Succeeded:
          $ref: "#/components/schemas/InstanceCount"
        Failed:
          $ref: "#/components/schemas/InstanceCount"
        Skipped:
          $ref: "#/components/schemas/InstanceCount"
        Ready:
          $ref: "#/components/schemas/InstanceCount"
      description: Information about the deployment status of the instances in the
        deployment.
    RollbackInfo:
      type: object
      properties:
        rollbackDeploymentId:
          $ref: "#/components/schemas/DeploymentId"
        rollbackTriggeringDeploymentId:
          $ref: "#/components/schemas/DeploymentId"
        rollbackMessage:
          $ref: "#/components/schemas/Description"
      description: Information about a deployment rollback.
    DeploymentStatusMessageList:
      type: array
      items:
        $ref: "#/components/schemas/ErrorMessage"
    DeploymentInfo:
      type: object
      properties:
        applicationName:
          $ref: "#/components/schemas/ApplicationName"
        deploymentGroupName:
          $ref: "#/components/schemas/DeploymentGroupName"
        deploymentConfigName:
          $ref: "#/components/schemas/DeploymentConfigName"
        deploymentId:
          $ref: "#/components/schemas/DeploymentId"
        previousRevision:
          $ref: "#/components/schemas/RevisionLocation"
        revision:
          $ref: "#/components/schemas/RevisionLocation"
        status:
          $ref: "#/components/schemas/DeploymentStatus"
        errorInformation:
          $ref: "#/components/schemas/ErrorInformation"
        createTime:
          $ref: "#/components/schemas/Timestamp"
        startTime:
          $ref: "#/components/schemas/Timestamp"
        completeTime:
          $ref: "#/components/schemas/Timestamp"
        deploymentOverview:
          $ref: "#/components/schemas/DeploymentOverview"
        description:
          $ref: "#/components/schemas/Description"
        creator:
          $ref: "#/components/schemas/DeploymentCreator"
        ignoreApplicationStopFailures:
          $ref: "#/components/schemas/Boolean"
        autoRollbackConfiguration:
          $ref: "#/components/schemas/AutoRollbackConfiguration"
        updateOutdatedInstancesOnly:
          $ref: "#/components/schemas/Boolean"
        rollbackInfo:
          $ref: "#/components/schemas/RollbackInfo"
        deploymentStyle:
          $ref: "#/components/schemas/DeploymentStyle"
        targetInstances:
          $ref: "#/components/schemas/TargetInstances"
        instanceTerminationWaitTimeStarted:
          $ref: "#/components/schemas/Boolean"
        blueGreenDeploymentConfiguration:
          $ref: "#/components/schemas/BlueGreenDeploymentConfiguration"
        loadBalancerInfo:
          $ref: "#/components/schemas/LoadBalancerInfo"
        additionalDeploymentStatusInfo:
          $ref: "#/components/schemas/AdditionalDeploymentStatusInfo"
        fileExistsBehavior:
          $ref: "#/components/schemas/FileExistsBehavior"
        deploymentStatusMessages:
          $ref: "#/components/schemas/DeploymentStatusMessageList"
        computePlatform:
          $ref: "#/components/schemas/ComputePlatform"
      description: Information about a deployment.
    DeploymentOption:
      type: string
      enum:
        - WITH_TRAFFIC_CONTROL
        - WITHOUT_TRAFFIC_CONTROL
    InstanceCount:
      type: integer
    DeploymentReadyAction:
      type: string
      enum:
        - CONTINUE_DEPLOYMENT
        - STOP_DEPLOYMENT
    DeploymentStatusList:
      type: array
      items:
        $ref: "#/components/schemas/DeploymentStatus"
    DeploymentType:
      type: string
      enum:
        - IN_PLACE
        - BLUE_GREEN
    DeploymentTargetType:
      type: string
      enum:
        - InstanceTarget
        - LambdaTarget
        - ECSTarget
    InstanceTarget:
      type: object
      properties:
        deploymentId:
          $ref: "#/components/schemas/DeploymentId"
        targetId:
          $ref: "#/components/schemas/TargetId"
        targetArn:
          $ref: "#/components/schemas/TargetArn"
        status:
          $ref: "#/components/schemas/TargetStatus"
        lastUpdatedAt:
          $ref: "#/components/schemas/Time"
        lifecycleEvents:
          $ref: "#/components/schemas/LifecycleEventList"
        instanceLabel:
          $ref: "#/components/schemas/TargetLabel"
      description: " A target Amazon EC2 or on-premises instance during a deployment that
        uses the EC2/On-premises compute platform. "
    LambdaTarget:
      type: object
      properties:
        deploymentId:
          $ref: "#/components/schemas/DeploymentId"
        targetId:
          $ref: "#/components/schemas/TargetId"
        targetArn:
          $ref: "#/components/schemas/TargetArn"
        status:
          $ref: "#/components/schemas/TargetStatus"
        lastUpdatedAt:
          $ref: "#/components/schemas/Time"
        lifecycleEvents:
          $ref: "#/components/schemas/LifecycleEventList"
        lambdaFunctionInfo:
          $ref: "#/components/schemas/LambdaFunctionInfo"
      description: " Information about the target AWS Lambda function during an AWS Lambda
        deployment. "
    ECSTarget:
      type: object
      properties:
        deploymentId:
          $ref: "#/components/schemas/DeploymentId"
        targetId:
          $ref: "#/components/schemas/TargetId"
        targetArn:
          $ref: "#/components/schemas/TargetArn"
        lastUpdatedAt:
          $ref: "#/components/schemas/Time"
        lifecycleEvents:
          $ref: "#/components/schemas/LifecycleEventList"
        status:
          $ref: "#/components/schemas/TargetStatus"
        taskSetsInfo:
          $ref: "#/components/schemas/ECSTaskSetList"
      description: " Information about the target of an Amazon ECS deployment. "
    DeploymentTarget:
      type: object
      properties:
        deploymentTargetType:
          $ref: "#/components/schemas/DeploymentTargetType"
        instanceTarget:
          $ref: "#/components/schemas/InstanceTarget"
        lambdaTarget:
          $ref: "#/components/schemas/LambdaTarget"
        ecsTarget:
          $ref: "#/components/schemas/ECSTarget"
      description: " Information about the deployment target. "
    InstanceName:
      type: string
    LifecycleErrorCode:
      type: string
      enum:
        - Success
        - ScriptMissing
        - ScriptNotExecutable
        - ScriptTimedOut
        - ScriptFailed
        - UnknownError
    ScriptName:
      type: string
    LifecycleMessage:
      type: string
    LogTail:
      type: string
    Diagnostics:
      type: object
      properties:
        errorCode:
          $ref: "#/components/schemas/LifecycleErrorCode"
        scriptName:
          $ref: "#/components/schemas/ScriptName"
        message:
          $ref: "#/components/schemas/LifecycleMessage"
        logTail:
          $ref: "#/components/schemas/LogTail"
      description: Diagnostic information about executable scripts that are part of a
        deployment.
    Key:
      type: string
    Value:
      type: string
    EC2TagFilterType:
      type: string
      enum:
        - KEY_ONLY
        - VALUE_ONLY
        - KEY_AND_VALUE
    EC2TagFilter:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/Key"
        Value:
          $ref: "#/components/schemas/Value"
        Type:
          $ref: "#/components/schemas/EC2TagFilterType"
      description: Information about an EC2 tag filter.
    EC2TagSetList:
      type: array
      items:
        $ref: "#/components/schemas/EC2TagFilterList"
    ECSClusterName:
      type: string
    ECSServiceName:
      type: string
    ECSService:
      type: object
      properties:
        serviceName:
          $ref: "#/components/schemas/ECSServiceName"
        clusterName:
          $ref: "#/components/schemas/ECSClusterName"
      description: " Contains the service and cluster names used to identify an Amazon ECS
        deployment's target. "
    TargetId:
      type: string
    TargetArn:
      type: string
    Time:
      type: string
      format: date-time
    LifecycleEventList:
      type: array
      items:
        $ref: "#/components/schemas/LifecycleEvent"
    TargetStatus:
      type: string
      enum:
        - Pending
        - InProgress
        - Succeeded
        - Failed
        - Skipped
        - Unknown
        - Ready
    ECSTaskSetList:
      type: array
      items:
        $ref: "#/components/schemas/ECSTaskSet"
    ECSTaskSetIdentifier:
      type: string
    ECSTaskSetCount:
      type: integer
    ECSTaskSetStatus:
      type: string
    TrafficWeight:
      type: number
      format: double
    TargetGroupInfo:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/TargetGroupName"
      description: Information about a target group in Elastic Load Balancing to use in a
        deployment. Instances are registered as targets in a target group, and
        traffic is routed to the target group.
    TargetLabel:
      type: string
      enum:
        - Blue
        - Green
    ECSTaskSet:
      type: object
      properties:
        identifer:
          $ref: "#/components/schemas/ECSTaskSetIdentifier"
        desiredCount:
          $ref: "#/components/schemas/ECSTaskSetCount"
        pendingCount:
          $ref: "#/components/schemas/ECSTaskSetCount"
        runningCount:
          $ref: "#/components/schemas/ECSTaskSetCount"
        status:
          $ref: "#/components/schemas/ECSTaskSetStatus"
        trafficWeight:
          $ref: "#/components/schemas/TrafficWeight"
        targetGroup:
          $ref: "#/components/schemas/TargetGroupInfo"
        taskSetLabel:
          $ref: "#/components/schemas/TargetLabel"
      description: " Information about a set of Amazon ECS tasks in an AWS CodeDeploy
        deployment. An Amazon ECS task set includes details such as the desired
        number of tasks, how many tasks are running, and whether the task set
        serves production traffic. An AWS CodeDeploy application that uses the
        Amazon ECS compute platform deploys a containerized application in an
        Amazon ECS service as a task set. "
    ELBName:
      type: string
    ELBInfo:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ELBName"
      description: Information about a load balancer in Elastic Load Balancing to use in a
        deployment. Instances are registered directly with a load balancer, and
        traffic is routed to the load balancer.
    ELBInfoList:
      type: array
      items:
        $ref: "#/components/schemas/ELBInfo"
    ETag:
      type: string
    ErrorCode:
      type: string
      enum:
        - AGENT_ISSUE
        - ALARM_ACTIVE
        - APPLICATION_MISSING
        - AUTOSCALING_VALIDATION_ERROR
        - AUTO_SCALING_CONFIGURATION
        - AUTO_SCALING_IAM_ROLE_PERMISSIONS
        - CODEDEPLOY_RESOURCE_CANNOT_BE_FOUND
        - CUSTOMER_APPLICATION_UNHEALTHY
        - DEPLOYMENT_GROUP_MISSING
        - ECS_UPDATE_ERROR
        - ELASTIC_LOAD_BALANCING_INVALID
        - ELB_INVALID_INSTANCE
        - HEALTH_CONSTRAINTS
        - HEALTH_CONSTRAINTS_INVALID
        - HOOK_EXECUTION_FAILURE
        - IAM_ROLE_MISSING
        - IAM_ROLE_PERMISSIONS
        - INTERNAL_ERROR
        - INVALID_ECS_SERVICE
        - INVALID_LAMBDA_CONFIGURATION
        - INVALID_LAMBDA_FUNCTION
        - INVALID_REVISION
        - MANUAL_STOP
        - MISSING_BLUE_GREEN_DEPLOYMENT_CONFIGURATION
        - MISSING_ELB_INFORMATION
        - MISSING_GITHUB_TOKEN
        - NO_EC2_SUBSCRIPTION
        - NO_INSTANCES
        - OVER_MAX_INSTANCES
        - RESOURCE_LIMIT_EXCEEDED
        - REVISION_MISSING
        - THROTTLED
        - TIMEOUT
    FilterValue:
      type: string
    FilterValueList:
      type: array
      items:
        $ref: "#/components/schemas/FilterValue"
    GenericRevisionInfo:
      type: object
      properties:
        description:
          $ref: "#/components/schemas/Description"
        deploymentGroups:
          $ref: "#/components/schemas/DeploymentGroupsList"
        firstUsedTime:
          $ref: "#/components/schemas/Timestamp"
        lastUsedTime:
          $ref: "#/components/schemas/Timestamp"
        registerTime:
          $ref: "#/components/schemas/Timestamp"
      description: Information about an application revision.
    InstanceId:
      type: string
    InstanceSummary:
      type: object
      properties:
        deploymentId:
          $ref: "#/components/schemas/DeploymentId"
        instanceId:
          $ref: "#/components/schemas/InstanceId"
        status:
          $ref: "#/components/schemas/InstanceStatus"
        lastUpdatedAt:
          $ref: "#/components/schemas/Timestamp"
        lifecycleEvents:
          $ref: "#/components/schemas/LifecycleEventList"
        instanceType:
          $ref: "#/components/schemas/InstanceType"
      description: Information about an instance in a deployment.InstanceSummary is
        deprecated, use DeploymentTarget instead.
    InstanceInfo:
      type: object
      properties:
        instanceName:
          $ref: "#/components/schemas/InstanceName"
        iamSessionArn:
          $ref: "#/components/schemas/IamSessionArn"
        iamUserArn:
          $ref: "#/components/schemas/IamUserArn"
        instanceArn:
          $ref: "#/components/schemas/InstanceArn"
        registerTime:
          $ref: "#/components/schemas/Timestamp"
        deregisterTime:
          $ref: "#/components/schemas/Timestamp"
        tags:
          $ref: "#/components/schemas/TagList"
      description: Information about an on-premises instance.
    GitHubAccountTokenNameList:
      type: array
      items:
        $ref: "#/components/schemas/GitHubAccountTokenName"
    Repository:
      type: string
    GitHubLocation:
      type: object
      properties:
        repository:
          $ref: "#/components/schemas/Repository"
        commitId:
          $ref: "#/components/schemas/CommitId"
      description: Information about the location of application artifacts stored in GitHub.
    GreenFleetProvisioningAction:
      type: string
      enum:
        - DISCOVER_EXISTING
        - COPY_AUTO_SCALING_GROUP
    IamSessionArn:
      type: string
    IamUserArn:
      type: string
    InstanceArn:
      type: string
    InstanceStatus:
      type: string
      enum:
        - Pending
        - InProgress
        - Succeeded
        - Failed
        - Skipped
        - Unknown
        - Ready
      description: InstanceStatus is deprecated, use TargetStatus instead.
    InstanceStatusList:
      type: array
      items:
        $ref: "#/components/schemas/InstanceStatus"
    InstanceType:
      type: string
      enum:
        - Blue
        - Green
    InstanceTypeList:
      type: array
      items:
        $ref: "#/components/schemas/InstanceType"
    LambdaFunctionAlias:
      type: string
    LambdaFunctionName:
      type: string
    Version:
      type: string
    LambdaFunctionInfo:
      type: object
      properties:
        functionName:
          $ref: "#/components/schemas/LambdaFunctionName"
        functionAlias:
          $ref: "#/components/schemas/LambdaFunctionAlias"
        currentVersion:
          $ref: "#/components/schemas/Version"
        targetVersion:
          $ref: "#/components/schemas/Version"
        targetVersionWeight:
          $ref: "#/components/schemas/TrafficWeight"
      description: " Information about a Lambda function specified in a deployment. "
    LifecycleEventName:
      type: string
    LifecycleEventStatus:
      type: string
      enum:
        - Pending
        - InProgress
        - Succeeded
        - Failed
        - Skipped
        - Unknown
    LifecycleEvent:
      type: object
      properties:
        lifecycleEventName:
          $ref: "#/components/schemas/LifecycleEventName"
        diagnostics:
          $ref: "#/components/schemas/Diagnostics"
        startTime:
          $ref: "#/components/schemas/Timestamp"
        endTime:
          $ref: "#/components/schemas/Timestamp"
        status:
          $ref: "#/components/schemas/LifecycleEventStatus"
      description: Information about a deployment lifecycle event.
    LifecycleEventHookExecutionId:
      type: string
    SortOrder:
      type: string
      enum:
        - ascending
        - descending
    S3Bucket:
      type: string
    S3Key:
      type: string
    ListStateFilterAction:
      type: string
      enum:
        - include
        - exclude
        - ignore
    NextToken:
      type: string
    TargetFilters:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/FilterValueList"
    TimeRange:
      type: object
      properties:
        start:
          $ref: "#/components/schemas/Timestamp"
        end:
          $ref: "#/components/schemas/Timestamp"
      description: Information about a time range.
    RegistrationStatus:
      type: string
      enum:
        - Registered
        - Deregistered
    ListenerArn:
      type: string
    ListenerArnList:
      type: array
      items:
        $ref: "#/components/schemas/ListenerArn"
    TargetGroupInfoList:
      type: array
      items:
        $ref: "#/components/schemas/TargetGroupInfo"
    TargetGroupPairInfoList:
      type: array
      items:
        $ref: "#/components/schemas/TargetGroupPairInfo"
    Message:
      type: string
    MinimumHealthyHostsValue:
      type: integer
    MinimumHealthyHostsType:
      type: string
      enum:
        - HOST_COUNT
        - FLEET_PERCENT
    NullableBoolean:
      type: boolean
    OnPremisesTagSetList:
      type: array
      items:
        $ref: "#/components/schemas/TagFilterList"
    Percentage:
      type: integer
    RawString:
      type: object
      properties:
        content:
          $ref: "#/components/schemas/RawStringContent"
        sha256:
          $ref: "#/components/schemas/RawStringSha256"
      description: A revision for an AWS Lambda deployment that is a YAML-formatted or
        JSON-formatted string. For AWS Lambda deployments, the revision is the
        same as the AppSpec file.RawString and String revision type are
        deprecated, use AppSpecContent type instead.
    RevisionInfo:
      type: object
      properties:
        revisionLocation:
          $ref: "#/components/schemas/RevisionLocation"
        genericRevisionInfo:
          $ref: "#/components/schemas/GenericRevisionInfo"
      description: Information about an application revision.
    RevisionLocationType:
      type: string
      enum:
        - S3
        - GitHub
        - String
        - AppSpecContent
    S3Location:
      type: object
      properties:
        bucket:
          $ref: "#/components/schemas/S3Bucket"
        key:
          $ref: "#/components/schemas/S3Key"
        bundleType:
          $ref: "#/components/schemas/BundleType"
        version:
          $ref: "#/components/schemas/VersionId"
        eTag:
          $ref: "#/components/schemas/ETag"
      description: Information about the location of application artifacts stored in Amazon
        S3.
    VersionId:
      type: string
    StopStatus:
      type: string
      enum:
        - Pending
        - Succeeded
    Tag:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/Key"
        Value:
          $ref: "#/components/schemas/Value"
      description: Information about a tag.
    TagFilterType:
      type: string
      enum:
        - KEY_ONLY
        - VALUE_ONLY
        - KEY_AND_VALUE
    TagFilter:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/Key"
        Value:
          $ref: "#/components/schemas/Value"
        Type:
          $ref: "#/components/schemas/TagFilterType"
      description: Information about an on-premises instance tag filter.
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/Key"
    TargetFilterName:
      type: string
      enum:
        - TargetStatus
        - ServerInstanceLabel
    TargetGroupName:
      type: string
    TrafficRoute:
      type: object
      properties:
        listenerArns:
          $ref: "#/components/schemas/ListenerArnList"
      description: " Information about a listener. The listener contains the path used to
        route traffic that is received from the load balancer to a target group.
        "
    TargetGroupPairInfo:
      type: object
      properties:
        targetGroups:
          $ref: "#/components/schemas/TargetGroupInfoList"
        prodTrafficRoute:
          $ref: "#/components/schemas/TrafficRoute"
        testTrafficRoute:
          $ref: "#/components/schemas/TrafficRoute"
      description: " Information about two target groups and how traffic is routed during
        an Amazon ECS deployment. An optional test traffic route can be
        specified. "
    WaitTimeInMins:
      type: integer
    TimeBasedCanary:
      type: object
      properties:
        canaryPercentage:
          $ref: "#/components/schemas/Percentage"
        canaryInterval:
          $ref: "#/components/schemas/WaitTimeInMins"
      description: A configuration that shifts traffic from one version of a Lambda
        function to another in two increments. The original and target Lambda
        function versions are specified in the deployment's AppSpec file.
    TimeBasedLinear:
      type: object
      properties:
        linearPercentage:
          $ref: "#/components/schemas/Percentage"
        linearInterval:
          $ref: "#/components/schemas/WaitTimeInMins"
      description: A configuration that shifts traffic from one version of a Lambda
        function to another in equal increments, with an equal number of minutes
        between each increment. The original and target Lambda function versions
        are specified in the deployment's AppSpec file.
    TrafficRoutingType:
      type: string
      enum:
        - TimeBasedCanary
        - TimeBasedLinear
        - AllAtOnce
    TriggerName:
      type: string
    TriggerTargetArn:
      type: string
    TriggerEventTypeList:
      type: array
      items:
        $ref: "#/components/schemas/TriggerEventType"
    TriggerConfig:
      type: object
      properties:
        triggerName:
          $ref: "#/components/schemas/TriggerName"
        triggerTargetArn:
          $ref: "#/components/schemas/TriggerTargetArn"
        triggerEvents:
          $ref: "#/components/schemas/TriggerEventTypeList"
      description: Information about notification triggers for the deployment group.
    TriggerEventType:
      type: string
      enum:
        - DeploymentStart
        - DeploymentSuccess
        - DeploymentFailure
        - DeploymentStop
        - DeploymentRollback
        - DeploymentReady
        - InstanceStart
        - InstanceSuccess
        - InstanceFailure
        - InstanceReady
