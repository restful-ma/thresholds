openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: API for working with Fusion Tables data.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Fusion Tables
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://www.googleapis.com/discovery/v1/apis/fusiontables/v1/rest
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: fusiontables
externalDocs:
  url: https://developers.google.com/fusiontables
tags:
  - name: column
  - name: query
  - name: style
  - name: table
  - name: task
  - name: template
paths:
  /query:
    get:
      description: Executes an SQL SELECT/SHOW/DESCRIBE statement.
      operationId: fusiontables.query.sqlGet
      parameters:
        - description: Should column names be included (in the first row)?. Default is true.
          in: query
          name: hdrs
          schema:
            type: boolean
        - description: An SQL SELECT/SHOW/DESCRIBE statement.
          in: query
          name: sql
          required: true
          schema:
            type: string
        - description: Should typed values be returned in the (JSON) response -- numbers
            for numeric values and parsed geometries for KML values? Default is
            true.
          in: query
          name: typed
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Sqlresponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables.readonly
      tags:
        - query
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Executes an SQL SELECT/INSERT/UPDATE/DELETE/SHOW/DESCRIBE/CREATE
        statement.
      operationId: fusiontables.query.sql
      parameters:
        - description: Should column names be included (in the first row)?. Default is true.
          in: query
          name: hdrs
          schema:
            type: boolean
        - description: An SQL SELECT/SHOW/DESCRIBE/INSERT/UPDATE/DELETE/CREATE statement.
          in: query
          name: sql
          required: true
          schema:
            type: string
        - description: Should typed values be returned in the (JSON) response -- numbers
            for numeric values and parsed geometries for KML values? Default is
            true.
          in: query
          name: typed
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Sqlresponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables.readonly
      tags:
        - query
  /tables:
    get:
      description: Retrieves a list of tables a user owns.
      operationId: fusiontables.table.list
      parameters:
        - description: Maximum number of styles to return. Optional. Default is 5.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
        - description: Continuation token specifying which result page to return. Optional.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TableList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables.readonly
      tags:
        - table
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a new table.
      operationId: fusiontables.table.insert
      requestBody:
        $ref: "#/components/requestBodies/Table"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Table"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
      tags:
        - table
  /tables/import:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Import a new table.
      operationId: fusiontables.table.importTable
      parameters:
        - description: The delimiter used to separate cell values. This can only consist of
            a single character. Default is ','.
          in: query
          name: delimiter
          schema:
            type: string
        - description: The encoding of the content. Default is UTF-8. Use 'auto-detect' if
            you are unsure of the encoding.
          in: query
          name: encoding
          schema:
            type: string
        - description: The name to be assigned to the new table.
          in: query
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Table"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
      tags:
        - table
  "/tables/{tableId}":
    delete:
      description: Deletes a table.
      operationId: fusiontables.table.delete
      parameters:
        - description: ID of the table that is being deleted.
          in: path
          name: tableId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
      tags:
        - table
    get:
      description: Retrieves a specific table by its id.
      operationId: fusiontables.table.get
      parameters:
        - description: Identifier(ID) for the table being requested.
          in: path
          name: tableId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Table"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables.readonly
      tags:
        - table
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates an existing table. Unless explicitly requested, only the name,
        description, and attribution will be updated. This method supports patch
        semantics.
      operationId: fusiontables.table.patch
      parameters:
        - description: Should the view definition also be updated? The specified view
            definition replaces the existing one. Only a view can be updated
            with a new definition.
          in: query
          name: replaceViewDefinition
          schema:
            type: boolean
        - description: ID of the table that is being updated.
          in: path
          name: tableId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Table"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Table"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
      tags:
        - table
    put:
      description: Updates an existing table. Unless explicitly requested, only the name,
        description, and attribution will be updated.
      operationId: fusiontables.table.update
      parameters:
        - description: Should the view definition also be updated? The specified view
            definition replaces the existing one. Only a view can be updated
            with a new definition.
          in: query
          name: replaceViewDefinition
          schema:
            type: boolean
        - description: ID of the table that is being updated.
          in: path
          name: tableId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Table"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Table"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
      tags:
        - table
  "/tables/{tableId}/columns":
    get:
      description: Retrieves a list of columns.
      operationId: fusiontables.column.list
      parameters:
        - description: Maximum number of columns to return. Optional. Default is 5.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
        - description: Continuation token specifying which result page to return. Optional.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Table whose columns are being listed.
          in: path
          name: tableId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ColumnList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables.readonly
      tags:
        - column
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Adds a new column to the table.
      operationId: fusiontables.column.insert
      parameters:
        - description: Table for which a new column is being added.
          in: path
          name: tableId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Column"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Column"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
      tags:
        - column
  "/tables/{tableId}/columns/{columnId}":
    delete:
      description: Deletes the column.
      operationId: fusiontables.column.delete
      parameters:
        - description: Name or identifier for the column being deleted.
          in: path
          name: columnId
          required: true
          schema:
            type: string
        - description: Table from which the column is being deleted.
          in: path
          name: tableId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
      tags:
        - column
    get:
      description: Retrieves a specific column by its id.
      operationId: fusiontables.column.get
      parameters:
        - description: Name or identifier for the column that is being requested.
          in: path
          name: columnId
          required: true
          schema:
            type: string
        - description: Table to which the column belongs.
          in: path
          name: tableId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Column"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables.readonly
      tags:
        - column
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates the name or type of an existing column. This method supports
        patch semantics.
      operationId: fusiontables.column.patch
      parameters:
        - description: Name or identifier for the column that is being updated.
          in: path
          name: columnId
          required: true
          schema:
            type: string
        - description: Table for which the column is being updated.
          in: path
          name: tableId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Column"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Column"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
      tags:
        - column
    put:
      description: Updates the name or type of an existing column.
      operationId: fusiontables.column.update
      parameters:
        - description: Name or identifier for the column that is being updated.
          in: path
          name: columnId
          required: true
          schema:
            type: string
        - description: Table for which the column is being updated.
          in: path
          name: tableId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Column"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Column"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
      tags:
        - column
  "/tables/{tableId}/copy":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Copies a table.
      operationId: fusiontables.table.copy
      parameters:
        - description: Whether to also copy tabs, styles, and templates. Default is false.
          in: query
          name: copyPresentation
          schema:
            type: boolean
        - description: ID of the table that is being copied.
          in: path
          name: tableId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Table"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables.readonly
      tags:
        - table
  "/tables/{tableId}/import":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Import more rows into a table.
      operationId: fusiontables.table.importRows
      parameters:
        - description: The delimiter used to separate cell values. This can only consist of
            a single character. Default is ','.
          in: query
          name: delimiter
          schema:
            type: string
        - description: The encoding of the content. Default is UTF-8. Use 'auto-detect' if
            you are unsure of the encoding.
          in: query
          name: encoding
          schema:
            type: string
        - description: The index of the last line from which to start importing, exclusive.
            Thus, the number of imported lines is endLine - startLine. If this
            parameter is not provided, the file will be imported until the last
            line of the file. If endLine is negative, then the imported content
            will exclude the last endLine lines. That is, if endline is
            negative, no line will be imported whose index is greater than N +
            endLine where N is the number of lines in the file, and the number
            of imported lines will be N + endLine - startLine.
          in: query
          name: endLine
          schema:
            type: integer
        - description: Whether the CSV must have the same number of values for each row. If
            false, rows with fewer values will be padded with empty values.
            Default is true.
          in: query
          name: isStrict
          schema:
            type: boolean
        - description: The index of the first line from which to start importing,
            inclusive. Default is 0.
          in: query
          name: startLine
          schema:
            type: integer
        - description: The table into which new rows are being imported.
          in: path
          name: tableId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Import"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
      tags:
        - table
  "/tables/{tableId}/styles":
    get:
      description: Retrieves a list of styles.
      operationId: fusiontables.style.list
      parameters:
        - description: Maximum number of styles to return. Optional. Default is 5.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
        - description: Continuation token specifying which result page to return. Optional.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Table whose styles are being listed
          in: path
          name: tableId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/StyleSettingList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables.readonly
      tags:
        - style
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Adds a new style for the table.
      operationId: fusiontables.style.insert
      parameters:
        - description: Table for which a new style is being added
          in: path
          name: tableId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/StyleSetting"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/StyleSetting"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
      tags:
        - style
  "/tables/{tableId}/styles/{styleId}":
    delete:
      description: Deletes a style.
      operationId: fusiontables.style.delete
      parameters:
        - description: Identifier (within a table) for the style being deleted
          in: path
          name: styleId
          required: true
          schema:
            type: integer
        - description: Table from which the style is being deleted
          in: path
          name: tableId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
      tags:
        - style
    get:
      description: Gets a specific style.
      operationId: fusiontables.style.get
      parameters:
        - description: Identifier (integer) for a specific style in a table
          in: path
          name: styleId
          required: true
          schema:
            type: integer
        - description: Table to which the requested style belongs
          in: path
          name: tableId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/StyleSetting"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables.readonly
      tags:
        - style
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates an existing style. This method supports patch semantics.
      operationId: fusiontables.style.patch
      parameters:
        - description: Identifier (within a table) for the style being updated.
          in: path
          name: styleId
          required: true
          schema:
            type: integer
        - description: Table whose style is being updated.
          in: path
          name: tableId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/StyleSetting"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/StyleSetting"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
      tags:
        - style
    put:
      description: Updates an existing style.
      operationId: fusiontables.style.update
      parameters:
        - description: Identifier (within a table) for the style being updated.
          in: path
          name: styleId
          required: true
          schema:
            type: integer
        - description: Table whose style is being updated.
          in: path
          name: tableId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/StyleSetting"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/StyleSetting"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
      tags:
        - style
  "/tables/{tableId}/tasks":
    get:
      description: Retrieves a list of tasks.
      operationId: fusiontables.task.list
      parameters:
        - description: Maximum number of columns to return. Optional. Default is 5.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
        - in: query
          name: pageToken
          schema:
            type: string
        - in: query
          name: startIndex
          schema:
            type: integer
        - description: Table whose tasks are being listed.
          in: path
          name: tableId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TaskList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables.readonly
      tags:
        - task
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/tables/{tableId}/tasks/{taskId}":
    delete:
      description: Deletes the task, unless already started.
      operationId: fusiontables.task.delete
      parameters:
        - description: Table from which the task is being deleted.
          in: path
          name: tableId
          required: true
          schema:
            type: string
        - in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
      tags:
        - task
    get:
      description: Retrieves a specific task by its id.
      operationId: fusiontables.task.get
      parameters:
        - description: Table to which the task belongs.
          in: path
          name: tableId
          required: true
          schema:
            type: string
        - in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Task"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables.readonly
      tags:
        - task
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/tables/{tableId}/templates":
    get:
      description: Retrieves a list of templates.
      operationId: fusiontables.template.list
      parameters:
        - description: Maximum number of templates to return. Optional. Default is 5.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
        - description: Continuation token specifying which results page to return. Optional.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Identifier for the table whose templates are being requested
          in: path
          name: tableId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TemplateList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables.readonly
      tags:
        - template
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a new template for the table.
      operationId: fusiontables.template.insert
      parameters:
        - description: Table for which a new template is being created
          in: path
          name: tableId
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Template"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Template"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
      tags:
        - template
  "/tables/{tableId}/templates/{templateId}":
    delete:
      description: Deletes a template
      operationId: fusiontables.template.delete
      parameters:
        - description: Table from which the template is being deleted
          in: path
          name: tableId
          required: true
          schema:
            type: string
        - description: Identifier for the template which is being deleted
          in: path
          name: templateId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
      tags:
        - template
    get:
      description: Retrieves a specific template by its id
      operationId: fusiontables.template.get
      parameters:
        - description: Table to which the template belongs
          in: path
          name: tableId
          required: true
          schema:
            type: string
        - description: Identifier for the template that is being requested
          in: path
          name: templateId
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Template"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables.readonly
      tags:
        - template
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    patch:
      description: Updates an existing template. This method supports patch semantics.
      operationId: fusiontables.template.patch
      parameters:
        - description: Table to which the updated template belongs
          in: path
          name: tableId
          required: true
          schema:
            type: string
        - description: Identifier for the template that is being updated
          in: path
          name: templateId
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Template"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Template"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
      tags:
        - template
    put:
      description: Updates an existing template
      operationId: fusiontables.template.update
      parameters:
        - description: Table to which the updated template belongs
          in: path
          name: tableId
          required: true
          schema:
            type: string
        - description: Identifier for the template that is being updated
          in: path
          name: templateId
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/Template"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Template"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/fusiontables
          Oauth2c:
            - https://www.googleapis.com/auth/fusiontables
      tags:
        - template
servers:
  - url: https://www.googleapis.com/fusiontables/v1
components:
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - csv
          - json
        default: json
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not
        exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
  requestBodies:
    Table:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Table"
    Column:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Column"
    Template:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Template"
    StyleSetting:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/StyleSetting"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/fusiontables: Manage your Fusion Tables
            https://www.googleapis.com/auth/fusiontables.readonly: View your Fusion Tables
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/fusiontables: Manage your Fusion Tables
            https://www.googleapis.com/auth/fusiontables.readonly: View your Fusion Tables
  schemas:
    Bucket:
      description: Specifies the minimum and maximum values, the color, opacity, icon and
        weight of a bucket within a StyleSetting.
      properties:
        color:
          description: "Color of line or the interior of a polygon in #RRGGBB format."
          type: string
        icon:
          description: Icon name used for a point.
          type: string
        max:
          description: Maximum value in the selected column for a row to be styled
            according to the bucket color, opacity, icon, or weight.
          format: double
          type: number
        min:
          description: Minimum value in the selected column for a row to be styled
            according to the bucket color, opacity, icon, or weight.
          format: double
          type: number
        opacity:
          description: "Opacity of the color: 0.0 (transparent) to 1.0 (opaque)."
          format: double
          type: number
        weight:
          description: Width of a line (in pixels).
          format: int32
          type: integer
      type: object
    Column:
      description: Specifies the id, name and type of a column in a table.
      properties:
        baseColumn:
          description: Optional identifier of the base column. If present, this column is
            derived from the specified base column.
          properties:
            columnId:
              description: The id of the column in the base table from which this column is
                derived.
              format: int32
              type: integer
            tableIndex:
              description: Offset to the entry in the list of base tables in the table
                definition.
              format: int32
              type: integer
          type: object
        columnId:
          description: Identifier for the column.
          format: int32
          type: integer
        description:
          description: Optional column description.
          type: string
        graph_predicate:
          description: Optional column predicate. Used to map table to graph data model
            (subject,predicate,object) See
            http://www.w3.org/TR/2014/REC-rdf11-concepts-20140225/#data-model
          type: string
        kind:
          default: fusiontables#column
          description: "Type name: a template for an individual column."
          type: string
        name:
          description: Required name of the column.
          type: string
        type:
          description: Required type of the column.
          type: string
      type: object
    ColumnList:
      description: Represents a list of columns in a table.
      properties:
        items:
          description: List of all requested columns.
          items:
            $ref: "#/components/schemas/Column"
          type: array
        kind:
          default: fusiontables#columnList
          description: "Type name: a list of all columns."
          type: string
        nextPageToken:
          description: Token used to access the next page of this result. No token is
            displayed if there are no more pages left.
          type: string
        totalItems:
          description: Total number of columns for the table.
          format: int32
          type: integer
      type: object
    Geometry:
      description: Represents a Geometry object.
      properties:
        geometries:
          description: The list of geometries in this geometry collection.
          items: {}
          type: array
        geometry: {}
        type:
          default: GeometryCollection
          description: "Type: A collection of geometries."
          type: string
      type: object
    Import:
      description: Represents an import request.
      properties:
        kind:
          default: fusiontables#import
          description: "Type name: a template for an import request."
          type: string
        numRowsReceived:
          description: The number of rows received from the import request.
          format: int64
          type: string
      type: object
    Line:
      description: Represents a line geometry.
      properties:
        coordinates:
          description: The coordinates that define the line.
          items:
            items:
              format: double
              type: number
            type: array
          type: array
        type:
          default: LineString
          description: "Type: A line geometry."
          type: string
      type: object
    LineStyle:
      description: Represents a LineStyle within a StyleSetting
      properties:
        strokeColor:
          description: "Color of the line in #RRGGBB format."
          type: string
        strokeColorStyler:
          $ref: "#/components/schemas/StyleFunction"
        strokeOpacity:
          description: "Opacity of the line : 0.0 (transparent) to 1.0 (opaque)."
          format: double
          type: number
        strokeWeight:
          description: Width of the line in pixels.
          format: int32
          type: integer
        strokeWeightStyler:
          $ref: "#/components/schemas/StyleFunction"
      type: object
    Point:
      description: Represents a point object.
      properties:
        coordinates:
          description: The coordinates that define the point.
          items:
            format: double
            type: number
          type: array
        type:
          default: Point
          description: "Point: A point geometry."
          type: string
      type: object
    PointStyle:
      description: Represents a PointStyle within a StyleSetting
      properties:
        iconName:
          description: Name of the icon. Use values defined in
            http://www.google.com/fusiontables/DataSource?dsrcid=308519
          type: string
        iconStyler:
          $ref: "#/components/schemas/StyleFunction"
      type: object
    Polygon:
      description: Represents a polygon object.
      properties:
        coordinates:
          description: The coordinates that define the polygon.
          items:
            items:
              items:
                format: double
                type: number
              type: array
            type: array
          type: array
        type:
          default: Polygon
          description: "Type: A polygon geometry."
          type: string
      type: object
    PolygonStyle:
      description: Represents a PolygonStyle within a StyleSetting
      properties:
        fillColor:
          description: "Color of the interior of the polygon in #RRGGBB format."
          type: string
        fillColorStyler:
          $ref: "#/components/schemas/StyleFunction"
        fillOpacity:
          description: "Opacity of the interior of the polygon: 0.0 (transparent) to 1.0
            (opaque)."
          format: double
          type: number
        strokeColor:
          description: "Color of the polygon border in #RRGGBB format."
          type: string
        strokeColorStyler:
          $ref: "#/components/schemas/StyleFunction"
        strokeOpacity:
          description: "Opacity of the polygon border: 0.0 (transparent) to 1.0 (opaque)."
          format: double
          type: number
        strokeWeight:
          description: Width of the polyon border in pixels.
          format: int32
          type: integer
        strokeWeightStyler:
          $ref: "#/components/schemas/StyleFunction"
      type: object
    Sqlresponse:
      description: Represents a response to an sql statement.
      properties:
        columns:
          description: Columns in the table.
          items:
            type: string
          type: array
        kind:
          default: fusiontables#sqlresponse
          description: "Type name: a template for an individual table."
          type: string
        rows:
          description: The rows in the table. For each cell we print out whatever cell
            value (e.g., numeric, string) exists. Thus it is important that each
            cell contains only one value.
          items:
            items: {}
            type: array
          type: array
      type: object
    StyleFunction:
      description: Represents a StyleFunction within a StyleSetting
      properties:
        buckets:
          description: Bucket function that assigns a style based on the range a column
            value falls into.
          items:
            $ref: "#/components/schemas/Bucket"
          type: array
        columnName:
          description: Name of the column whose value is used in the style.
          type: string
        gradient:
          description: Gradient function that interpolates a range of colors based on
            column value.
          properties:
            colors:
              description: Array with two or more colors.
              items:
                properties:
                  color:
                    description: "Color in #RRGGBB format."
                    type: string
                  opacity:
                    description: "Opacity of the color: 0.0 (transparent) to 1.0 (opaque)."
                    format: double
                    type: number
                type: object
              type: array
            max:
              description: "Higher-end of the interpolation range: rows with this value
                will be assigned to colors[n-1]."
              format: double
              type: number
            min:
              description: "Lower-end of the interpolation range: rows with this value will
                be assigned to colors[0]."
              format: double
              type: number
          type: object
        kind:
          description: 'Stylers can be one of three kinds: "fusiontables#fromColumn" if the
            column value is to be used as is, i.e., the column values can have
            colors in #RRGGBBAA format or integer line widths or icon names;
            "fusiontables#gradient" if the styling of the row is to be based on
            applying the gradient function on the column value; or
            "fusiontables#buckets" if the styling is to based on the bucket into
            which the the column value falls.'
          type: string
      type: object
    StyleSetting:
      description: Represents a complete StyleSettings object. The primary key is a
        combination of the tableId and a styleId.
      properties:
        kind:
          default: fusiontables#styleSetting
          description: "Type name: an individual style setting. A StyleSetting contains the
            style defintions for points, lines, and polygons in a table. Since a
            table can have any one or all of them, a style definition can have
            point, line and polygon style definitions."
          type: string
        markerOptions:
          $ref: "#/components/schemas/PointStyle"
        name:
          description: Optional name for the style setting.
          type: string
        polygonOptions:
          $ref: "#/components/schemas/PolygonStyle"
        polylineOptions:
          $ref: "#/components/schemas/LineStyle"
        styleId:
          description: Identifier for the style setting (unique only within tables).
          format: int32
          type: integer
        tableId:
          description: Identifier for the table.
          type: string
      type: object
    StyleSettingList:
      description: Represents a list of styles for a given table.
      properties:
        items:
          description: All requested style settings.
          items:
            $ref: "#/components/schemas/StyleSetting"
          type: array
        kind:
          default: fusiontables#styleSettingList
          description: "Type name: in this case, a list of style settings."
          type: string
        nextPageToken:
          description: Token used to access the next page of this result. No token is
            displayed if there are no more pages left.
          type: string
        totalItems:
          description: Total number of styles for the table.
          format: int32
          type: integer
      type: object
    Table:
      description: Represents a table. Specifies the name, whether it is exportable,
        description, attribution, and attribution link.
      properties:
        attribution:
          description: Optional attribution assigned to the table.
          type: string
        attributionLink:
          description: Optional link for attribution.
          type: string
        baseTableIds:
          description: Optional base table identifier if this table is a view or merged
            table.
          items:
            type: string
          type: array
        columns:
          description: Columns in the table.
          items:
            $ref: "#/components/schemas/Column"
          type: array
        description:
          description: Optional description assigned to the table.
          type: string
        isExportable:
          description: Variable for whether table is exportable.
          type: boolean
        kind:
          default: fusiontables#table
          description: "Type name: a template for an individual table."
          type: string
        name:
          description: Name assigned to a table.
          type: string
        sql:
          description: Optional sql that encodes the table definition for derived tables.
          type: string
        tableId:
          description: Encrypted unique alphanumeric identifier for the table.
          type: string
      type: object
    TableList:
      description: Represents a list of tables.
      properties:
        items:
          description: List of all requested tables.
          items:
            $ref: "#/components/schemas/Table"
          type: array
        kind:
          default: fusiontables#tableList
          description: "Type name: a list of all tables."
          type: string
        nextPageToken:
          description: Token used to access the next page of this result. No token is
            displayed if there are no more pages left.
          type: string
      type: object
    Task:
      description: Specifies the identifier, name, and type of a task in a table.
      properties:
        kind:
          default: fusiontables#task
          description: Type of the resource. This is always "fusiontables#task".
          type: string
        progress:
          description: An indication of task progress.
          type: string
        started:
          description: false while the table is busy with some other task. true if this
            background task is currently running.
          type: boolean
        taskId:
          description: Identifier for the task.
          format: int64
          type: string
        type:
          description: Type of background task. One of  DELETE_ROWS Deletes one or more
            rows from the table. ADD_ROWS "Adds one or more rows to a table.
            Includes importing data into a new table and importing more rows
            into an existing table. ADD_COLUMN Adds a new column to the table.
            CHANGE_TYPE Changes the type of a column.
          type: string
      type: object
    TaskList:
      description: Represents a list of tasks for a table.
      properties:
        items:
          description: List of all requested tasks.
          items:
            $ref: "#/components/schemas/Task"
          type: array
        kind:
          default: fusiontables#taskList
          description: Type of the resource. This is always "fusiontables#taskList".
          type: string
        nextPageToken:
          description: Token used to access the next page of this result. No token is
            displayed if there are no more pages left.
          type: string
        totalItems:
          description: Total number of tasks for the table.
          format: int32
          type: integer
      type: object
    Template:
      description: Represents the contents of InfoWindow templates.
      properties:
        automaticColumnNames:
          description: List of columns from which the template is to be automatically
            constructed. Only one of body or automaticColumns can be specified.
          items:
            type: string
          type: array
        body:
          description: Body of the template. It contains HTML with {column_name} to insert
            values from a particular column. The body is sanitized to remove
            certain tags, e.g., script. Only one of body or automaticColumns can
            be specified.
          type: string
        kind:
          default: fusiontables#template
          description: "Type name: a template for the info window contents. The template
            can either include an HTML body or a list of columns from which the
            template is computed automatically."
          type: string
        name:
          description: Optional name assigned to a template.
          type: string
        tableId:
          description: Identifier for the table for which the template is defined.
          type: string
        templateId:
          description: Identifier for the template, unique within the context of a
            particular table.
          format: int32
          type: integer
      type: object
    TemplateList:
      description: Represents a list of templates for a given table.
      properties:
        items:
          description: List of all requested templates.
          items:
            $ref: "#/components/schemas/Template"
          type: array
        kind:
          default: fusiontables#templateList
          description: "Type name: a list of all templates."
          type: string
        nextPageToken:
          description: Token used to access the next page of this result. No token is
            displayed if there are no more pages left.
          type: string
        totalItems:
          description: Total number of templates for the table.
          format: int32
          type: integer
      type: object
