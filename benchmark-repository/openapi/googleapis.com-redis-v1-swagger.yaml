openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: Creates and manages Redis instances on the Google Cloud Platform.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Google Cloud Memorystore for Redis
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://redis.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: redis
externalDocs:
  url: https://cloud.google.com/memorystore/docs/redis/
tags:
  - name: projects
paths:
  "/v1/{name}":
    delete:
      description: |-
        Deletes a specific Redis instance.  Instance stops serving and data is
        deleted.
      operationId: redis.projects.locations.instances.delete
      parameters:
        - description: >-
            Required. Redis instance resource name using the form:
                `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
            where `location_id` refers to a GCP region.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets the details of a specific Redis instance.
      operationId: redis.projects.locations.instances.get
      parameters:
        - description: >-
            Required. Redis instance resource name using the form:
                `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
            where `location_id` refers to a GCP region.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Instance"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    patch:
      description: |-
        Updates the metadata and configuration of a specific Redis instance.

        Completed longrunning.Operation will contain the new instance object
        in the response field. The returned operation is automatically deleted
        after a few hours, so there is no need to call DeleteOperation.
      operationId: redis.projects.locations.instances.patch
      parameters:
        - description: >-
            Required. Unique name of the resource in this scope including
            project and

            location using the form:
                `projects/{project_id}/locations/{location_id}/instances/{instance_id}`

            Note: Redis instances are managed and addressed at regional level so

            location_id here refers to a GCP region; however, users may choose which

            specific zone (or collection of zones for cross-zone instances) an instance

            should be provisioned in. Refer to [location_id] and

            [alternative_location_id] fields for more details.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            Required. Mask of fields to update. At least one path must be
            supplied in

            this field. The elements of the repeated paths field may only include these

            fields from Instance:

             *   `displayName`
             *   `labels`
             *   `memorySizeGb`
             *   `redisConfig`
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Instance"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{name}/locations":
    get:
      description: Lists information about the supported locations for this service.
      operationId: redis.projects.locations.list
      parameters:
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The resource that owns the locations collection, if applicable.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{name}/operations":
    get:
      description: |-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.

        NOTE: the `name` binding allows API services to override the binding
        to use different resource name schemes, such as `users/*/operations`. To
        override the binding, API services can add a binding such as
        `"/v1/{name=users/*}/operations"` to their service configuration.
        For backwards compatibility, the default name includes the operations
        collection id, however overriding users must ensure the name binding
        is the parent resource, without the operations collection id.
      operationId: redis.projects.locations.operations.list
      parameters:
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1/{name}:cancel":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Starts asynchronous cancellation on a long-running operation.  The
        server

        makes a best effort to cancel the operation, but success is not

        guaranteed.  If the server doesn't support this method, it returns

        `google.rpc.Code.UNIMPLEMENTED`.  Clients can use

        Operations.GetOperation or

        other methods to check whether the cancellation succeeded or whether the

        operation completed despite cancellation. On successful cancellation,

        the operation is not deleted; instead, it becomes an operation with

        an Operation.error value with a google.rpc.Status.code of 1,

        corresponding to `Code.CANCELLED`.
      operationId: redis.projects.locations.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{name}:export":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Export Redis instance data into a Redis RDB format file in Cloud
        Storage.


        Redis will continue serving during this operation.


        The returned operation is automatically deleted after a few hours, so

        there is no need to call DeleteOperation.
      operationId: redis.projects.locations.instances.export
      parameters:
        - description: >-
            Required. Redis instance resource name using the form:
                `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
            where `location_id` refers to a GCP region.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExportInstanceRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{name}:failover":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Initiates a failover of the master node to current replica node for a
        specific STANDARD tier Cloud Memorystore for Redis instance.
      operationId: redis.projects.locations.instances.failover
      parameters:
        - description: >-
            Required. Redis instance resource name using the form:
                `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
            where `location_id` refers to a GCP region.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FailoverInstanceRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{name}:import":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Import a Redis RDB snapshot file from Cloud Storage into a Redis
        instance.


        Redis may stop serving during this operation. Instance state will be

        IMPORTING for entire operation. When complete, the instance will contain

        only data from the imported file.


        The returned operation is automatically deleted after a few hours, so

        there is no need to call DeleteOperation.
      operationId: redis.projects.locations.instances.import
      parameters:
        - description: >-
            Required. Redis instance resource name using the form:
                `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
            where `location_id` refers to a GCP region.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportInstanceRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{parent}/instances":
    get:
      description: |-
        Lists all Redis instances owned by a project in either the specified
        location (region) or all locations.

        The location should have the following format:
        * `projects/{project_id}/locations/{location_id}`

        If `location_id` is specified as `-` (wildcard), then all regions
        available to the project are queried, and the results are aggregated.
      operationId: redis.projects.locations.instances.list
      parameters:
        - description: >-
            The maximum number of items to return.


            If not specified, a default value of 1000 will be used by the service.

            Regardless of the page_size value, the response may include a partial list

            and a caller should only rely on response's

            next_page_token

            to determine if there are more instances left to be queried.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            The next_page_token value returned from a previous List request,
            if any.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            Required. The resource name of the instance location using the form:
                `projects/{project_id}/locations/{location_id}`
            where `location_id` refers to a GCP region.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListInstancesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Creates a Redis instance based on the specified tier and memory size.


        By default, the instance is accessible from the project's

        [default network](/compute/docs/networks-and-firewalls#networks).


        The creation is executed asynchronously and callers may check the returned

        operation to track its progress. Once the operation is completed the Redis

        instance will be fully functional. Completed longrunning.Operation will

        contain the new instance object in the response field.


        The returned operation is automatically deleted after a few hours, so there

        is no need to call DeleteOperation.
      operationId: redis.projects.locations.instances.create
      parameters:
        - description: >-
            Required. The logical name of the Redis instance in the customer
            project

            with the following restrictions:


            * Must contain only lowercase letters, numbers, and hyphens.

            * Must start with a letter.

            * Must be between 1-40 characters.

            * Must end with a number or a letter.

            * Must be unique within the customer project / location
          in: query
          name: instanceId
          schema:
            type: string
        - description: |-
            Required. The resource name of the instance location using the form:
                `projects/{project_id}/locations/{location_id}`
            where `location_id` refers to a GCP region.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Instance"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
servers:
  - url: https://redis.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  requestBodies:
    Instance:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Instance"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
  schemas:
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated

        empty messages in your APIs. A typical example is to use it as the request

        or the response type of an API method. For instance:

            service Foo {
              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
            }

        The JSON representation for `Empty` is empty JSON object `{}`.
      properties: {}
      type: object
    ExportInstanceRequest:
      description: Request for Export.
      properties:
        outputConfig:
          $ref: "#/components/schemas/OutputConfig"
      type: object
    FailoverInstanceRequest:
      description: Request for Failover.
      properties:
        dataProtectionMode:
          description: >-
            Optional. Available data protection modes that the user can choose.
            If it's

            unspecified, data protection mode will be LIMITED_DATA_LOSS by default.
          enum:
            - DATA_PROTECTION_MODE_UNSPECIFIED
            - LIMITED_DATA_LOSS
            - FORCE_DATA_LOSS
          type: string
      type: object
    GcsDestination:
      description: The Cloud Storage location for the output content
      properties:
        uri:
          description: |-
            Required. Data destination URI (e.g.
            'gs://my_bucket/my_object'). Existing files will be overwritten.
          type: string
      type: object
    GcsSource:
      description: The Cloud Storage location for the input content
      properties:
        uri:
          description: Required. Source data URI. (e.g. 'gs://my_bucket/my_object').
          type: string
      type: object
    GoogleCloudRedisV1LocationMetadata:
      description: >-
        This location metadata represents additional configuration options for a

        given location where a Redis instance may be created. All fields are output

        only. It is returned as content of the

        `google.cloud.location.Location.metadata` field.
      properties:
        availableZones:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudRedisV1ZoneMetadata"
          description: >-
            Output only. The set of available zones in the location. The map is
            keyed

            by the lowercase ID of each zone, as defined by GCE. These keys can be

            specified in `location_id` or `alternative_location_id` fields when

            creating a Redis instance.
          type: object
      type: object
    GoogleCloudRedisV1OperationMetadata:
      description: Represents the v1 metadata of the long-running operation.
      properties:
        apiVersion:
          description: API version.
          type: string
        cancelRequested:
          description: Specifies if cancellation was requested for the operation.
          type: boolean
        createTime:
          description: Creation timestamp.
          format: google-datetime
          type: string
        endTime:
          description: End timestamp.
          format: google-datetime
          type: string
        statusDetail:
          description: Operation status details.
          type: string
        target:
          description: Operation target.
          type: string
        verb:
          description: Operation verb.
          type: string
      type: object
    GoogleCloudRedisV1ZoneMetadata:
      description: |-
        Defines specific information for a particular zone. Currently empty and
        reserved for future use only.
      properties: {}
      type: object
    ImportInstanceRequest:
      description: Request for Import.
      properties:
        inputConfig:
          $ref: "#/components/schemas/InputConfig"
      type: object
    InputConfig:
      description: The input content
      properties:
        gcsSource:
          $ref: "#/components/schemas/GcsSource"
      type: object
    Instance:
      description: A Google Cloud Redis instance.
      properties:
        alternativeLocationId:
          description: >-
            Optional. Only applicable to STANDARD_HA tier which protects the
            instance

            against zonal failures by provisioning it across two zones. If provided, it

            must be a different zone from the one provided in [location_id].
          type: string
        authorizedNetwork:
          description: >-
            Optional. The full name of the Google Compute Engine

            [network](/compute/docs/networks-and-firewalls#networks) to which the

            instance is connected. If left unspecified, the `default` network

            will be used.
          type: string
        createTime:
          description: Output only. The time the instance was created.
          format: google-datetime
          type: string
        currentLocationId:
          description: >-
            Output only. The current zone where the Redis endpoint is placed.
            For Basic

            Tier instances, this will always be the same as the [location_id]

            provided by the user at creation time. For Standard Tier instances,

            this can be either [location_id] or [alternative_location_id] and can

            change after a failover event.
          type: string
        displayName:
          description: An arbitrary and optional user-provided name for the instance.
          type: string
        host:
          description: >-
            Output only. Hostname or IP address of the exposed Redis endpoint
            used by

            clients to connect to the service.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Resource labels to represent user provided metadata
          type: object
        locationId:
          description: >-
            Optional. The zone where the instance will be provisioned. If not
            provided,

            the service will choose a zone for the instance. For STANDARD_HA tier,

            instances will be created across two zones for protection against zonal

            failures. If [alternative_location_id] is also provided, it must be

            different from [location_id].
          type: string
        memorySizeGb:
          description: Required. Redis memory size in GiB.
          format: int32
          type: integer
        name:
          description: >-
            Required. Unique name of the resource in this scope including
            project and

            location using the form:
                `projects/{project_id}/locations/{location_id}/instances/{instance_id}`

            Note: Redis instances are managed and addressed at regional level so

            location_id here refers to a GCP region; however, users may choose which

            specific zone (or collection of zones for cross-zone instances) an instance

            should be provisioned in. Refer to [location_id] and

            [alternative_location_id] fields for more details.
          type: string
        persistenceIamIdentity:
          description: >-
            Output only. Cloud IAM identity used by import / export operations
            to

            transfer data to/from Cloud Storage. Format is

            "serviceAccount:<service_account_email>". The value may change over time

            for a given instance so should be checked before each import/export

            operation.
          type: string
        port:
          description: Output only. The port number of the exposed Redis endpoint.
          format: int32
          type: integer
        redisConfigs:
          additionalProperties:
            type: string
          description: >-
            Optional. Redis configuration parameters, according to

            http://redis.io/topics/config. Currently, the only supported parameters

            are:

             Redis 3.2 and above:

             *   maxmemory-policy
             *   notify-keyspace-events

             Redis 4.0 and above:

             *   activedefrag
             *   lfu-log-factor
             *   lfu-decay-time
          type: object
        redisVersion:
          description: >-
            Optional. The version of Redis software.

            If not provided, latest supported version will be used. Updating the

            version will perform an upgrade/downgrade to the new version. Currently,

            the supported values are:

             *   `REDIS_4_0` for Redis 4.0 compatibility (default)
             *   `REDIS_3_2` for Redis 3.2 compatibility
          type: string
        reservedIpRange:
          description: >-
            Optional. The CIDR range of internal addresses that are reserved for
            this

            instance. If not provided, the service will choose an unused /29 block,

            for example, 10.0.0.0/29 or 192.168.0.0/29. Ranges must be unique

            and non-overlapping with existing subnets in an authorized network.
          type: string
        state:
          description: Output only. The current state of this instance.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - UPDATING
            - DELETING
            - REPAIRING
            - MAINTENANCE
            - IMPORTING
            - FAILING_OVER
          type: string
        statusMessage:
          description: |-
            Output only. Additional information about the current status of this
            instance, if available.
          type: string
        tier:
          description: Required. The service tier of the instance.
          enum:
            - TIER_UNSPECIFIED
            - BASIC
            - STANDARD_HA
          type: string
      type: object
    ListInstancesResponse:
      description: Response for ListInstances.
      properties:
        instances:
          description: >-
            A list of Redis instances in the project in the specified location,

            or across all locations.


            If the `location_id` in the parent field of the request is "-", all regions

            available to the project are queried, and the results aggregated.

            If in such an aggregated query a location is unavailable, a dummy Redis

            entry is included in the response with the "name" field set to a value of

            the form projects/{project_id}/locations/{location_id}/instances/- and the

            "status" field set to ERROR and "status_message" field set to "location not

            available for ListInstances".
          items:
            $ref: "#/components/schemas/Instance"
          type: array
        nextPageToken:
          description: >-
            Token to retrieve the next page of results, or empty if there are no
            more

            results in the list.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Location"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the
            request.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    Location:
      description: A resource that represents Google Cloud Platform location.
      properties:
        displayName:
          description: |-
            The friendly name for this location, typically a nearby city name.
            For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: |-
            Cross-service attributes for the location. For example

                {"cloud.googleapis.com/region": "us-east1"}
          type: object
        locationId:
          description: 'Resource ID for the region. For example: "us-east1".'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Output only. The set of available zones in the location. The map is
            keyed by the lowercase ID of each zone, as defined by Compute
            Engine. These keys can be specified in `location_id` or
            `alternative_location_id` fields when creating a Redis instance.
          type: object
        name:
          description: 'Full resource name for the region. For example:
            "projects/example-project/locations/us-east1".'
          type: string
      type: object
    Operation:
      description: >-
        This resource represents a long-running operation that is the result of
        a

        network API call.
      properties:
        done:
          description: >-
            If the value is `false`, it means the operation is still in
            progress.

            If `true`, the operation is completed, and either `error` or `response` is

            available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            {


            `createTime`: The time the operation was created.


            `endTime`: The time the operation finished running.


            `target`: Server-defined resource path for the target of the operation.


            `verb`: Name of the verb executed by the operation.


            `statusDetail`: Human-readable status of the operation, if any.


            `cancelRequested`: Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.


            `apiVersion`: API version used to start the operation.


            }
          type: object
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that

            originally returns it. If you use the default HTTP mapping, the

            `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: >-
            The normal response of the operation in case of success.  If the
            original

            method returns no data on success, such as `Delete`, the response is

            `google.protobuf.Empty`.  If the original method is standard

            `Get`/`Create`/`Update`, the response should be the resource.  For other

            methods, the response should have the type `XxxResponse`, where `Xxx`

            is the original method name.  For example, if the original method name

            is `TakeSnapshot()`, the inferred response type is

            `TakeSnapshotResponse`.
          type: object
      type: object
    OutputConfig:
      description: The output content
      properties:
        gcsDestination:
          $ref: "#/components/schemas/GcsDestination"
      type: object
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for

        different programming environments, including REST APIs and RPC APIs. It is

        used by [gRPC](https://github.com/grpc). Each `Status` message contains

        three pieces of data: error code, error message, and error details.


        You can find out more about this error model and how to work with it in the

        [API Design Guide](https://cloud.google.com/apis/design/errors).
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: >-
            A list of messages that carry the error details.  There is a common
            set of

            message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: |-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
