openapi: 3.0.0
info:
  contact:
    email: support@billbee.io
    name: Billbee GmbH
    url: https://www.billbee.io
    x-twitter: billbeeio
  description: >+
    Documentation of the Billbee REST API to connect a Billbee account to
    external aplications.


    ## Endpoint


    The Billbee API endpoint base url is https://app.billbee.io/api/v1 


    ## Activation


    You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.


    ## Authorization & security


    Because you can access private data with the Billbee API, every request has to be sent over https and must


    * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key

    * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header


    ## Throttling


    Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.


    When you exceed these 2 calls, the API will return a HTTP 429 status code

  title: Billbee
  version: v1
  x-apisguru-categories:
    - ecommerce
  x-logo:
    url: https://twitter.com/billbeeio/profile_image?size=original
  x-origin:
    - format: swagger
      url: https://app.billbee.io/swagger/docs/v1
      version: "2.0"
  x-providerName: billbee.io
paths:
  /api/v1/automaticprovision/createaccount:
    post:
      operationId: AutomaticProvisioning_CreateAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Aut\
                omaticProvisioningController.CreateAccountContainer"
          text/json:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Aut\
                omaticProvisioningController.CreateAccountContainer"
          application/xml:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Aut\
                omaticProvisioningController.CreateAccountContainer"
          text/xml:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Aut\
                omaticProvisioningController.CreateAccountContainer"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Aut\
                omaticProvisioningController.CreateAccountContainer"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Creates a new Billbee user account with the data passed
      tags:
        - Provisioning
  /api/v1/automaticprovision/termsinfo:
    get:
      operationId: AutomaticProvisioning_TermsInfo
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Returns infos about Billbee terms and conditions
      tags:
        - Provisioning
  /api/v1/cloudstorages:
    get:
      operationId: CloudStorageApi_GetList
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_System.Collections.Generic.List_Billbee.Interfaces.B\
                  illbeeAPI.Model.CloudStorageApiModel_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_System.Collections.Generic.List_Billbee.Interfaces.B\
                  illbeeAPI.Model.CloudStorageApiModel_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_System.Collections.Generic.List_Billbee.Interfaces.B\
                  illbeeAPI.Model.CloudStorageApiModel_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_System.Collections.Generic.List_Billbee.Interfaces.B\
                  illbeeAPI.Model.CloudStorageApiModel_"
      summary: Gets a list of all connected cloud storage devices
      tags:
        - CloudStorage
  /api/v1/customers:
    get:
      operationId: Customer_GetAll
      parameters:
        - description: The current page to request starting with 1
          in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - description: The pagesize for the result list. Values between 1 and 250 are
            allowed
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Billbee.Interfa\
                  ces.BillbeeAPI.Model.CustomerApiModel_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Billbee.Interfa\
                  ces.BillbeeAPI.Model.CustomerApiModel_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Billbee.Interfa\
                  ces.BillbeeAPI.Model.CustomerApiModel_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Billbee.Interfa\
                  ces.BillbeeAPI.Model.CustomerApiModel_"
      summary: Get a list of all customers
      tags:
        - Customers
    post:
      operationId: Customer_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Creat\
                eCustomerApiModel"
          text/json:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Creat\
                eCustomerApiModel"
          application/xml:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Creat\
                eCustomerApiModel"
          text/xml:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Creat\
                eCustomerApiModel"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Creat\
                eCustomerApiModel"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel\
                  _"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel\
                  _"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel\
                  _"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel\
                  _"
      summary: Creates a new customer
      tags:
        - Customers
  "/api/v1/customers/addresses/{id}":
    get:
      operationId: Customer_GetCustomerAddress
      parameters:
        - description: The id of the address
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressA\
                  piModel_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressA\
                  piModel_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressA\
                  piModel_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressA\
                  piModel_"
      summary: Queries a single address from a customer
      tags:
        - Customers
    patch:
      description: Id and CustomerId cannot be changed
      operationId: Customer_PatchAddress
      parameters:
        - description: The id of the address
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
          text/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
        description: The address fields to be changed. Please query an address via (todo)
          to see all fields. Note that Id and CustomerId cannot be changed.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressA\
                  piModel_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressA\
                  piModel_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressA\
                  piModel_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressA\
                  piModel_"
      summary: Updates one or more fields of an address
      tags:
        - Customers
    put:
      description: Id and CustomerId cannot be changed. Fields you do not send will become
        empty.
      operationId: Customer_UpdateAddress
      parameters:
        - description: The id of the address
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Custo\
                merAddressApiModel"
          text/json:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Custo\
                merAddressApiModel"
          application/xml:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Custo\
                merAddressApiModel"
          text/xml:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Custo\
                merAddressApiModel"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Custo\
                merAddressApiModel"
        description: The updated address. Please query an address via (todo) to see all
          fields. Note that Id and CustomerId cannot be changed.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressA\
                  piModel_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressA\
                  piModel_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressA\
                  piModel_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressA\
                  piModel_"
      summary: Updates all fields of an address
      tags:
        - Customers
  "/api/v1/customers/{id}":
    get:
      operationId: Customer_GetOne
      parameters:
        - description: The id of the customer to query
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel\
                  _"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel\
                  _"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel\
                  _"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel\
                  _"
      summary: Queries a single customer by id
      tags:
        - Customers
    put:
      operationId: Customer_Update
      parameters:
        - description: The id of the customer
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Custo\
                merApiModel"
          text/json:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Custo\
                merApiModel"
          application/xml:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Custo\
                merApiModel"
          text/xml:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Custo\
                merApiModel"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Custo\
                merApiModel"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel\
                  _"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel\
                  _"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel\
                  _"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel\
                  _"
      summary: Updates a customer by id
      tags:
        - Customers
  "/api/v1/customers/{id}/addresses":
    get:
      operationId: Customer_GetCustomerAddresses
      parameters:
        - description: The id of the customer
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: The current page to request starting with 1
          in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - description: The pagesize for the result list. Values between 1 and 250 are
            allowed
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Billbee.Interfa\
                  ces.BillbeeAPI.Model.CustomerAddressApiModel_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Billbee.Interfa\
                  ces.BillbeeAPI.Model.CustomerAddressApiModel_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Billbee.Interfa\
                  ces.BillbeeAPI.Model.CustomerAddressApiModel_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Billbee.Interfa\
                  ces.BillbeeAPI.Model.CustomerAddressApiModel_"
      summary: Queries a list of addresses from a customer
      tags:
        - Customers
    post:
      description: Id and  CustomerId will be ignored in model. If Id is set, the addition
        will be stopped.
      operationId: Customer_AddCustomerAddress
      parameters:
        - description: CustomerId to attach the new address to.
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Custo\
                merAddressApiModel"
          text/json:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Custo\
                merAddressApiModel"
          application/xml:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Custo\
                merAddressApiModel"
          text/xml:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Custo\
                merAddressApiModel"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Custo\
                merAddressApiModel"
        description: Model containing the address, that should be attached.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressA\
                  piModel_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressA\
                  piModel_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressA\
                  piModel_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressA\
                  piModel_"
      summary: Adds a new address to a customer
      tags:
        - Customers
  "/api/v1/customers/{id}/orders":
    get:
      operationId: Customer_GetCustomerOrders
      parameters:
        - description: The id of the customer
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: The current page to request starting with 1
          in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - description: The pagesize for the result list. Values between 1 and 250 are
            allowed
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Rechnungsdruck.\
                  WebApp.Controllers.Api.Order_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Rechnungsdruck.\
                  WebApp.Controllers.Api.Order_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Rechnungsdruck.\
                  WebApp.Controllers.Api.Order_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Rechnungsdruck.\
                  WebApp.Controllers.Api.Order_"
      summary: Queries a list of orders from a customer
      tags:
        - Customers
  /api/v1/enums/orderstates:
    get:
      operationId: EnumApi_GetOrderStates
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Returns a list with all defined orderstates
      tags:
        - EnumApi
  /api/v1/enums/paymenttypes:
    get:
      operationId: EnumApi_GetPaymentTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Returns a list with all defined paymenttypes
      tags:
        - EnumApi
  /api/v1/events:
    get:
      operationId: EventApi_GetList
      parameters:
        - description: Specifies the oldest date to include in the response
          in: query
          name: minDate
          required: false
          schema:
            type: string
            format: date-time
        - description: Specifies the newest date to include in the response
          in: query
          name: maxDate
          required: false
          schema:
            type: string
            format: date-time
        - description: Specifies the page to request
          in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - description: Specifies the pagesize. Defaults to 50, max value is 250
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
        - description: Filter for specific event types
          in: query
          name: typeId
          required: false
          explode: true
          schema:
            type: array
            items:
              format: int32
              type: integer
        - description: Filter for specific order id
          in: query
          name: orderId
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Get a list of all events optionally filtered by date
      tags:
        - Events
  /api/v1/layouts:
    get:
      operationId: LayoutApi_GetList
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_System.Collections.Generic.List_Billbee.Interfaces.B\
                  illbeeAPI.Models.LayoutTemplate_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_System.Collections.Generic.List_Billbee.Interfaces.B\
                  illbeeAPI.Models.LayoutTemplate_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_System.Collections.Generic.List_Billbee.Interfaces.B\
                  illbeeAPI.Models.LayoutTemplate_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_System.Collections.Generic.List_Billbee.Interfaces.B\
                  illbeeAPI.Models.LayoutTemplate_"
      tags:
        - Orders
  /api/v1/orders:
    get:
      operationId: OrderApi_GetList
      parameters:
        - description: Specifies the oldest order date to include in the response
          in: query
          name: minOrderDate
          required: false
          schema:
            type: string
            format: date-time
        - description: Specifies the newest order date to include in the response
          in: query
          name: maxOrderDate
          required: false
          schema:
            type: string
            format: date-time
        - description: Specifies the page to request
          in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - description: Specifies the pagesize. Defaults to 50, max value is 250
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
        - description: Specifies a list of shop ids for which invoices should be included
          in: query
          name: shopId
          required: false
          explode: true
          schema:
            type: array
            items:
              format: int32
              type: integer
        - description: Specifies a list of state ids to include in the response
          in: query
          name: orderStateId
          required: false
          explode: true
          schema:
            type: array
            items:
              format: int32
              type: integer
        - description: Specifies a list of tags the order must have attached to be included
            in the response
          in: query
          name: tag
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: If given, all delivered orders have an Id greater than or equal to
            the given minimumOrderId
          in: query
          name: minimumBillBeeOrderId
          required: false
          schema:
            type: integer
            format: int32
        - description: If given, the last modification has to be newer than the given date
          in: query
          name: modifiedAtMin
          required: false
          schema:
            type: string
            format: date-time
        - description: If given, the last modification has to be older or equal than the
            given date.
          in: query
          name: modifiedAtMax
          required: false
          schema:
            type: string
            format: date-time
        - description: The source field for the article title. 0 = Order Position
            (default), 1 = Article Title, 2 = Article Invoice Text
          in: query
          name: articleTitleSource
          required: false
          schema:
            type: integer
            format: int32
            enum:
              - 0
              - 1
              - 2
              - 3
        - description: If true the list of tags passed to the call are used to filter
            orders to not include these tags
          in: query
          name: excludeTags
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Billbee.Interfa\
                  ces.BillbeeAPI.Model.Order_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Billbee.Interfa\
                  ces.BillbeeAPI.Model.Order_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Billbee.Interfa\
                  ces.BillbeeAPI.Model.Order_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Billbee.Interfa\
                  ces.BillbeeAPI.Model.Order_"
      summary: Get a list of all orders optionally filtered by date
      tags:
        - Orders
    post:
      description: "To create an order POST an JSON object to the orders endpoint with the
        shown properties. \r

        Not all properties are required."
      operationId: OrderApi_PostNewOrder
      parameters:
        - description: ""
          in: query
          name: shopId
          required: false
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Order"
          text/json:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Order"
          application/xml:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Order"
          text/xml:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Order"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Order"
        required: true
      responses:
        "201":
          description: The order was created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.Order_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.Order_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.Order_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.Order_"
        "400":
          description: Invalid data was received in the request
        "500":
          description: An internal exception occured. Order was not created
      summary: Creates a new order in the Billbee account
      tags:
        - Orders
  "/api/v1/orders/CreateDeliveryNote/{id}":
    post:
      operationId: OrderApi_CreateDeliveryNote
      parameters:
        - description: The internal billbee id of the order
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: If true, the PDF is included in the response as base64 encoded string
          in: query
          name: includePdf
          required: false
          schema:
            type: boolean
        - description: Optionally specify the id of a billbee connected cloud device to
            send the pdf to
          in: query
          name: sendToCloudId
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Create an delivery note for an existing order
      tags:
        - Orders
        - DeliveryNote
  "/api/v1/orders/CreateInvoice/{id}":
    post:
      operationId: OrderApi_CreateInvoice
      parameters:
        - description: The internal billbee id of the order
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: If true, the PDF is included in the response as base64 encoded string
          in: query
          name: includeInvoicePdf
          required: false
          schema:
            type: boolean
        - description: You can pass the id of an invoice template to overwrite the assigned
            template for invoice creation
          in: query
          name: templateId
          required: false
          schema:
            type: integer
            format: int32
        - description: You can pass the id of a connected cloud printer/storage to send the
            invoice to it
          in: query
          name: sendToCloudId
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Create an invoice for an existing order
      tags:
        - Orders
        - Invoice
  /api/v1/orders/PatchableFields:
    get:
      operationId: OrderApi_GetPatchableFields
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Returns a list of fields which can be updated with the orders/{id} patch
        call
      tags:
        - Orders
  "/api/v1/orders/find/{id}/{partner}":
    get:
      deprecated: true
      operationId: OrderApi_Find
      parameters:
        - description: The order id from the external system
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Optional the name of the shop/marketplace the order was imported from
          in: path
          name: partner
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Find a single order by its external id (order number)
      tags:
        - Orders
  "/api/v1/orders/findbyextref/{extRef}":
    get:
      operationId: OrderApi_GetByExtRef
      parameters:
        - description: The extern order number of the order
          in: path
          name: extRef
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.Order_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.Order_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.Order_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.Order_"
      summary: Get a single order by its external order number
      tags:
        - Orders
  /api/v1/orders/invoices:
    get:
      operationId: OrderApi_GetInvoiceList
      parameters:
        - description: Specifies the oldest invoice date to include
          in: query
          name: minInvoiceDate
          required: false
          schema:
            type: string
            format: date-time
        - description: Specifies the newest invoice date to include
          in: query
          name: maxInvoiceDate
          required: false
          schema:
            type: string
            format: date-time
        - description: Specifies the page to request
          in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - description: Specifies the pagesize. Defaults to 50, max value is 250
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
        - description: Specifies a list of shop ids for which invoices should be included
          in: query
          name: shopId
          required: false
          explode: true
          schema:
            type: array
            items:
              format: int32
              type: integer
        - description: Specifies a list of state ids to include in the response
          in: query
          name: orderStateId
          required: false
          explode: true
          schema:
            type: array
            items:
              format: int32
              type: integer
        - in: query
          name: tag
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - in: query
          name: minPayDate
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: maxPayDate
          required: false
          schema:
            type: string
            format: date-time
        - in: query
          name: includePositions
          required: false
          schema:
            type: boolean
        - description: If true the list of tags passed to the call are used to filter
            orders to not include these tags
          in: query
          name: excludeTags
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Get a list of all invoices optionally filtered by date
      tags:
        - Orders
        - Invoice
  "/api/v1/orders/{id}":
    get:
      operationId: OrderApi_Get
      parameters:
        - description: The internal billbee id of the order
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
        - description: The source field for the article title. 0 = Order Position
            (default), 1 = Article Title, 2 = Article Invoice Text
          in: query
          name: articleTitleSource
          required: false
          schema:
            type: integer
            format: int32
            enum:
              - 0
              - 1
              - 2
              - 3
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.Order_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.Order_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.Order_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.Order_"
      summary: Get a single order by its internal billbee id
      tags:
        - Orders
    patch:
      operationId: OrderApi_PatchOrder
      parameters:
        - description: The Billbee internal order id of the Order
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
          text/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
        description: The fields which should be updated. To see order paramaters, use
          /orders get call
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.Order_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.Order_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.Order_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.Order_"
      summary: Updates one or more fields of an order
      tags:
        - Orders
  "/api/v1/orders/{id}/orderstate":
    put:
      description: "### REMARKS ###\r

        Use this call to change the state of an order to i.e. paid or
        sent.\r

        \r

        The state is transfered to the external shop/marketplace if
        configured.\r

        This is the list of known states:\r

        - 1: ordered\r

        - 2: confirmed\r

        - 3: paid\r

        - 4: shipped\r

        - 5: reclamation\r

        - 6: deleted\r

        - 7: closed\r

        - 8: canceled\r

        - 9: archived\r

        - 10: not used\r

        - 11: demand note 1\r

        - 12: demand note 2\r

        - 13: packed\r

        - 14: offered\r

        - 15: payment reminder\r

        - 16: fulfilling"
      operationId: OrderApi_UpdateState
      parameters:
        - description: The internal id of the order
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Ord\
                erStateUpdate"
          text/json:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Ord\
                erStateUpdate"
          application/xml:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Ord\
                erStateUpdate"
          text/xml:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Ord\
                erStateUpdate"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Ord\
                erStateUpdate"
        description: The data used to change the state
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Changes the main state of a single order
      tags:
        - Orders
  "/api/v1/orders/{id}/send-message":
    post:
      operationId: OrderApi_SendMessage
      parameters:
        - description: The id of the order
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Ord\
                erApiController.SendMessageModel"
          text/json:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Ord\
                erApiController.SendMessageModel"
          application/xml:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Ord\
                erApiController.SendMessageModel"
          text/xml:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Ord\
                erApiController.SendMessageModel"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Ord\
                erApiController.SendMessageModel"
        description: The message model
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Sends a message to the buyer
      tags:
        - Orders
  "/api/v1/orders/{id}/shipment":
    post:
      operationId: OrderApi_AddShipment
      parameters:
        - description: The internal billbee id of the order
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Api\
                AddShipmentToOrderModel"
          text/json:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Api\
                AddShipmentToOrderModel"
          application/xml:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Api\
                AddShipmentToOrderModel"
          text/xml:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Api\
                AddShipmentToOrderModel"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Api\
                AddShipmentToOrderModel"
        description: The shipment data to create the shipment
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Add a shipment to a given order
      tags:
        - Orders
  "/api/v1/orders/{id}/tags":
    post:
      description: When a tag is already attached, it is ignored. Tags are not case
        sensitive.
      operationId: OrderApi_TagsCreate
      parameters:
        - description: The internal id of the order
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: "#/components/requestBodies/Rechnungsdruck.WebApp.Controllers.Api.Ord\
          erTagCreate"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Attach one or more tags to an order
      tags:
        - Orders
    put:
      operationId: OrderApi_TagsUpdate
      parameters:
        - description: The internal id of the order
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        $ref: "#/components/requestBodies/Rechnungsdruck.WebApp.Controllers.Api.Ord\
          erTagCreate"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Updates/Sets the tags attached to an order
      tags:
        - Orders
  "/api/v1/orders/{id}/trigger-event":
    post:
      operationId: OrderApi_TriggerEvent
      parameters:
        - description: The id of the order
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Ord\
                erApiController.TriggerEventContainer"
          text/json:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Ord\
                erApiController.TriggerEventContainer"
          application/xml:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Ord\
                erApiController.TriggerEventContainer"
          text/xml:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Ord\
                erApiController.TriggerEventContainer"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Ord\
                erApiController.TriggerEventContainer"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Triggers a rule event
      tags:
        - Orders
  /api/v1/products:
    get:
      operationId: Article_GetList
      parameters:
        - description: The current page to request starting with 1
          in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - description: The pagesize for the result list. Values between 1 and 250 are
            allowed
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
        - description: Optional the oldest create date of the articles to be returned
          in: query
          name: minCreatedAt
          required: false
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Billbee.Interfa\
                  ces.BillbeeAPI.Model.ArticleApiModel_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Billbee.Interfa\
                  ces.BillbeeAPI.Model.ArticleApiModel_"
      summary: Get a list of all products
      tags:
        - Products
    post:
      operationId: Article_CreateArticle
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Artic\
                leApiModel"
          text/json:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Artic\
                leApiModel"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Artic\
                leApiModel"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Creates a new product
      tags:
        - Products
  /api/v1/products/PatchableFields:
    get:
      operationId: Article_GetPatchableFields
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Returns a list of fields which can be updated with the patch call
      tags:
        - Products
  /api/v1/products/category:
    get:
      operationId: Article_GetCategory
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: GEts a list of all defined categories
      tags:
        - Products
  /api/v1/products/custom-fields:
    get:
      operationId: Article_GetCustomFields
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Billbee.Interfa\
                  ces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Billbee.Interfa\
                  ces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Billbee.Interfa\
                  ces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Billbee.Interfa\
                  ces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel_"
      summary: Queries a list of all custom fields
      tags:
        - Products
  "/api/v1/products/custom-fields/{id}":
    get:
      operationId: Article_GetCustomField
      parameters:
        - description: The id of the custom field to query
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleApiCustom\
                  FieldDefinitionModel_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleApiCustom\
                  FieldDefinitionModel_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleApiCustom\
                  FieldDefinitionModel_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleApiCustom\
                  FieldDefinitionModel_"
      summary: Queries a single custom field
      tags:
        - Products
  /api/v1/products/images/delete:
    post:
      operationId: Article_DeleteImages
      requestBody:
        content:
          application/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/json:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          text/xml:
            schema:
              items:
                format: int32
                type: integer
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                format: int32
                type: integer
              type: array
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.DeletedImagesMod\
                  el_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.DeletedImagesMod\
                  el_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.DeletedImagesMod\
                  el_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.DeletedImagesMod\
                  el_"
      summary: Delete multiple images by id
      tags:
        - Products
  "/api/v1/products/images/{imageId}":
    delete:
      operationId: Article_DeleteImage
      parameters:
        - description: The image id
          in: path
          name: imageId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Deletes a single image by id
      tags:
        - Products
    get:
      operationId: Article_GetImage
      parameters:
        - description: The Id of the image
          in: path
          name: imageId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRela\
                  tionApiModel_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRela\
                  tionApiModel_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRela\
                  tionApiModel_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRela\
                  tionApiModel_"
      summary: Returns a single image by id
      tags:
        - Products
  /api/v1/products/reservedamount:
    get:
      operationId: Article_GetReservedAmount
      parameters:
        - description: The id or the sku of the article to query
          in: query
          name: id
          required: true
          schema:
            type: string
        - description: Either the value id or the value sku to specify the meaning of the
            id parameter
          in: query
          name: lookupBy
          required: false
          schema:
            type: string
        - description: Optional the stock id if the multi stock feature is enabled
          in: query
          name: stockId
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.GetReservedAmoun\
                  tResponseData_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.GetReservedAmoun\
                  tResponseData_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.GetReservedAmoun\
                  tResponseData_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.GetReservedAmoun\
                  tResponseData_"
      summary: Queries the reserved amount for a single article by id or by sku
      tags:
        - Products
  /api/v1/products/updatestock:
    post:
      description: The article is specified by sku. You have to send the absolute value for
        the current stock
      operationId: Article_UpdateStock
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Updat\
                eStockApiModel"
          text/json:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Updat\
                eStockApiModel"
          application/xml:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Updat\
                eStockApiModel"
          text/xml:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Updat\
                eStockApiModel"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Updat\
                eStockApiModel"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.UpdateStockRespo\
                  nseData_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.UpdateStockRespo\
                  nseData_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.UpdateStockRespo\
                  nseData_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.UpdateStockRespo\
                  nseData_"
      summary: Update the stock qty of an article
      tags:
        - Products
  /api/v1/products/updatestockcode:
    post:
      operationId: Article_UpdateStockCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Updat\
                eStockCodeApiModel"
          text/json:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Updat\
                eStockCodeApiModel"
          application/xml:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Updat\
                eStockCodeApiModel"
          text/xml:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Updat\
                eStockCodeApiModel"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Updat\
                eStockCodeApiModel"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.UpdateStockCodeR\
                  esponseData_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.UpdateStockCodeR\
                  esponseData_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.UpdateStockCodeR\
                  esponseData_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.UpdateStockCodeR\
                  esponseData_"
      summary: Update the stock code of an article
      tags:
        - Products
  /api/v1/products/updatestockmultiple:
    post:
      operationId: Article_UpdateStockMultiple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Upd\
                  ateStockApiModel"
              type: array
          text/json:
            schema:
              items:
                $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Upd\
                  ateStockApiModel"
              type: array
          application/xml:
            schema:
              items:
                $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Upd\
                  ateStockApiModel"
              type: array
          text/xml:
            schema:
              items:
                $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Upd\
                  ateStockApiModel"
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Upd\
                  ateStockApiModel"
              type: array
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api\
                    .ApiResult_Billbee.Interfaces.BillbeeAPI.Model.UpdateStockR\
                    esponseData_"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api\
                    .ApiResult_Billbee.Interfaces.BillbeeAPI.Model.UpdateStockR\
                    esponseData_"
                type: array
            application/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api\
                    .ApiResult_Billbee.Interfaces.BillbeeAPI.Model.UpdateStockR\
                    esponseData_"
                type: array
            text/xml:
              schema:
                items:
                  $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api\
                    .ApiResult_Billbee.Interfaces.BillbeeAPI.Model.UpdateStockR\
                    esponseData_"
                type: array
      summary: Update the stock qty for multiple articles at once
      tags:
        - Products
  "/api/v1/products/{id}":
    get:
      operationId: Article_GetArticle
      parameters:
        - description: The id or the sku of the article to query
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: Either the value id, ean or the value sku to specify the meaning of
            the id parameter
          in: query
          name: lookupBy
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleApiModel_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleApiModel_"
      summary: Queries a single article by id or by sku
      tags:
        - Products
    patch:
      operationId: Article_PatchArticle
      parameters:
        - description: The id of the Product
          in: path
          name: id
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
          text/json:
            schema:
              type: object
          application/x-www-form-urlencoded:
            schema:
              type: object
        description: The fields which should be updated.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Updates one or more fields of a product
      tags:
        - Products
  "/api/v1/products/{productId}/images":
    get:
      operationId: Article_GetImages
      parameters:
        - description: The Id of the product
          in: path
          name: productId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_System.Collections.Generic.List_Billbee.Interfaces.B\
                  illbeeAPI.Model.ArticleImageRelationApiModel_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_System.Collections.Generic.List_Billbee.Interfaces.B\
                  illbeeAPI.Model.ArticleImageRelationApiModel_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_System.Collections.Generic.List_Billbee.Interfaces.B\
                  illbeeAPI.Model.ArticleImageRelationApiModel_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_System.Collections.Generic.List_Billbee.Interfaces.B\
                  illbeeAPI.Model.ArticleImageRelationApiModel_"
      summary: Returns a list of all images of the product
      tags:
        - Products
    put:
      operationId: Article_PutImages
      parameters:
        - description: The id of the product
          in: path
          name: productId
          required: true
          schema:
            type: integer
            format: int32
        - description: If you pass true, the images will be replaced by the passed images.
            Otherwise the passed images will be appended to the product.
          in: query
          name: replace
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Art\
                  icleImageRelationApiModel"
              type: array
          text/json:
            schema:
              items:
                $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Art\
                  icleImageRelationApiModel"
              type: array
          application/xml:
            schema:
              items:
                $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Art\
                  icleImageRelationApiModel"
              type: array
          text/xml:
            schema:
              items:
                $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Art\
                  icleImageRelationApiModel"
              type: array
          application/x-www-form-urlencoded:
            schema:
              items:
                $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Art\
                  icleImageRelationApiModel"
              type: array
        description: An array of ArticleApiImageModel
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRela\
                  tionApiModel_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRela\
                  tionApiModel_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRela\
                  tionApiModel_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRela\
                  tionApiModel_"
      summary: Add multiple images to a product or replace the product images by the
        given images
      tags:
        - Products
  "/api/v1/products/{productId}/images/{imageId}":
    delete:
      operationId: Article_DeleteImageFromProduct
      parameters:
        - description: The product id
          in: path
          name: productId
          required: true
          schema:
            type: integer
            format: int32
        - description: The image id
          in: path
          name: imageId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Deletes a single image from a product
      tags:
        - Products
    get:
      operationId: Article_GetImageFromProduct
      parameters:
        - description: The Id of the product
          in: path
          name: productId
          required: true
          schema:
            type: integer
            format: int32
        - description: The Id of the image
          in: path
          name: imageId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRela\
                  tionApiModel_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRela\
                  tionApiModel_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRela\
                  tionApiModel_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRela\
                  tionApiModel_"
      summary: Returns a single image by id
      tags:
        - Products
    put:
      operationId: Article_PutImage
      parameters:
        - description: The product id
          in: path
          name: productId
          required: true
          schema:
            type: integer
            format: int32
        - description: The image id. If you pass 0, the image will be added
          in: path
          name: imageId
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Artic\
                leImageRelationApiModel"
          text/json:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Artic\
                leImageRelationApiModel"
          application/xml:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Artic\
                leImageRelationApiModel"
          text/xml:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Artic\
                leImageRelationApiModel"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Artic\
                leImageRelationApiModel"
        description: The ArticleApiImageModel
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRela\
                  tionApiModel_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRela\
                  tionApiModel_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRela\
                  tionApiModel_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRela\
                  tionApiModel_"
      summary: Add or update an existing image of a product
      tags:
        - Products
  /api/v1/search:
    post:
      operationId: Search_Search
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Sea\
                rchController.SearchModel"
          text/json:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Sea\
                rchController.SearchModel"
          application/xml:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Sea\
                rchController.SearchModel"
          text/xml:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Sea\
                rchController.SearchModel"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Sea\
                rchController.SearchModel"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Rechnungsdruck.WebApp.Controllers.Api.SearchControll\
                  er.SearchResultsModel_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Rechnungsdruck.WebApp.Controllers.Api.SearchControll\
                  er.SearchResultsModel_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Rechnungsdruck.WebApp.Controllers.Api.SearchControll\
                  er.SearchResultsModel_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Rechnungsdruck.WebApp.Controllers.Api.SearchControll\
                  er.SearchResultsModel_"
      summary: "Search for products, customers and orders.\r

        Type can be \"order\", \"product\" and / or \"customer\"\r

        Term can contains lucene query syntax"
      tags:
        - Products
        - Customers
        - Orders
  /api/v1/shipment/ping:
    get:
      operationId: Shipment_GetPing
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      tags:
        - Shipments
  /api/v1/shipment/shipment:
    post:
      operationId: Shipment_PostShipment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Creat\
                eShipmentApiModel"
          text/json:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Creat\
                eShipmentApiModel"
          application/xml:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Creat\
                eShipmentApiModel"
          text/xml:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Creat\
                eShipmentApiModel"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Creat\
                eShipmentApiModel"
        description: Data to specify shipment parameters
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Creates a new shipment with the selected Shippingprovider
      tags:
        - Shipments
  /api/v1/shipment/shipments:
    get:
      operationId: Shipment_GetList
      parameters:
        - description: Specifies the page to request.
          in: query
          name: page
          required: false
          schema:
            type: integer
            format: int32
        - description: Specifies the pagesize. Defaults to 50, max value is 250
          in: query
          name: pageSize
          required: false
          schema:
            type: integer
            format: int32
        - description: Specifies the oldest shipment date to include in the response
          in: query
          name: createdAtMin
          required: false
          schema:
            type: string
            format: date-time
        - description: Specifies the newest shipment date to include in the response
          in: query
          name: createdAtMax
          required: false
          schema:
            type: string
            format: date-time
        - description: Get shipments for this order only.
          in: query
          name: orderId
          required: false
          schema:
            type: integer
            format: int32
        - description: Get Shipments with a shipment greater or equal than this id. New
            shipments have a greater id than older shipments.
          in: query
          name: minimumShipmentId
          required: false
          schema:
            type: integer
            format: int32
        - description: Get Shippings for the specified shipping provider only. <seealso
            cref="M:Rechnungsdruck.WebApp.Controllers.Api.ShipmentController.GetShippingproviders"
            />
          in: query
          name: shippingProviderId
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Billbee.Interfa\
                  ces.BillbeeAPI.Model.Shipment_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Billbee.Interfa\
                  ces.BillbeeAPI.Model.Shipment_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Billbee.Interfa\
                  ces.BillbeeAPI.Model.Shipment_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piPagedResult_System.Collections.Generic.List_Billbee.Interfa\
                  ces.BillbeeAPI.Model.Shipment_"
      summary: Get a list of all shipments optionally filtered by date. All parameters
        are optional.
      tags:
        - Shipments
  /api/v1/shipment/shippingcarriers:
    get:
      operationId: Shipment_GetShippingCarrier
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Queries the currently available shipping carriers.
      tags:
        - Shipments
  /api/v1/shipment/shippingproviders:
    get:
      operationId: Shipment_GetShippingproviders
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Query all defined shipping providers
      tags:
        - Shipments
  /api/v1/shipment/shipwithlabel:
    post:
      operationId: Shipment_ShipWithLabel
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Shi\
                pmentWithLabel"
          text/json:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Shi\
                pmentWithLabel"
          application/xml:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Shi\
                pmentWithLabel"
          text/xml:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Shi\
                pmentWithLabel"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Shi\
                pmentWithLabel"
        description: Details on the order and the shipping methods, that should be used.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Rechnungsdruck.WebApp.Controllers.Api.ShipmentWithLa\
                  belResult_"
            text/json:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Rechnungsdruck.WebApp.Controllers.Api.ShipmentWithLa\
                  belResult_"
            application/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Rechnungsdruck.WebApp.Controllers.Api.ShipmentWithLa\
                  belResult_"
            text/xml:
              schema:
                $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.A\
                  piResult_Rechnungsdruck.WebApp.Controllers.Api.ShipmentWithLa\
                  belResult_"
      summary: Creates a shipment for an order in billbee
      tags:
        - Shipments
  /api/v1/webhooks:
    delete:
      operationId: WebHookManagement_DeleteAll
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Deletes all existing WebHook registrations.
      tags:
        - Webhooks
    get:
      operationId: WebHookManagement_Get
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Microsoft.AspNet.WebHooks.WebHook"
                type: array
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/Microsoft.AspNet.WebHooks.WebHook"
                type: array
      summary: Gets all registered WebHooks for a given user.
      tags:
        - Webhooks
    post:
      operationId: WebHookManagement_Post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Microsoft.AspNet.WebHooks.WebHook"
          text/json:
            schema:
              $ref: "#/components/schemas/Microsoft.AspNet.WebHooks.WebHook"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Microsoft.AspNet.WebHooks.WebHook"
        description: The webhook to create. Attach ?noecho to the uri to prevent echo test.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Microsoft.AspNet.WebHooks.WebHook"
            text/json:
              schema:
                $ref: "#/components/schemas/Microsoft.AspNet.WebHooks.WebHook"
      summary: Registers a new WebHook for a given user.
      tags:
        - Webhooks
  /api/v1/webhooks/filters:
    get:
      operationId: WebHookManagement_GetFilters
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Returns a list of all known filters you can use to register webhooks
      tags:
        - Webhooks
  "/api/v1/webhooks/{id}":
    delete:
      operationId: WebHookManagement_Delete
      parameters:
        - description: The WebHook ID.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Deletes an existing WebHook registration.
      tags:
        - Webhooks
    get:
      operationId: WebHookManagement_Lookup
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Microsoft.AspNet.WebHooks.WebHook"
            text/json:
              schema:
                $ref: "#/components/schemas/Microsoft.AspNet.WebHooks.WebHook"
      summary: Looks up a registered WebHook with the given {id} for a given user.
      tags:
        - Webhooks
    put:
      operationId: WebHookManagement_Put
      parameters:
        - description: The WebHook ID.
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Microsoft.AspNet.WebHooks.WebHook"
          text/json:
            schema:
              $ref: "#/components/schemas/Microsoft.AspNet.WebHooks.WebHook"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Microsoft.AspNet.WebHooks.WebHook"
        description: The new webhook to use.
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
      summary: Updates an existing WebHook registration.
      tags:
        - Webhooks
servers:
  - url: https://app.billbee.io
components:
  requestBodies:
    Rechnungsdruck.WebApp.Controllers.Api.OrderTagCreate:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Order\
              TagCreate"
        text/json:
          schema:
            $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Order\
              TagCreate"
        application/xml:
          schema:
            $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Order\
              TagCreate"
        text/xml:
          schema:
            $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Order\
              TagCreate"
        application/x-www-form-urlencoded:
          schema:
            $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Order\
              TagCreate"
      description: Tags to attach
      required: true
  securitySchemes:
    X-Billbee-Api-Key:
      description: To identify the app developer, each API request has do contain a valid
        API Key in the HTTP header X-Billbee-Api-Key.
      in: header
      name: X-Billbee-Api-Key
      type: apiKey
    basic:
      description: To authenticate an API request, the Billbee username/email and an API
        password have to be provided as a BasicAuth header.
      type: http
      scheme: basic
  schemas:
    Billbee.Interfaces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel:
      properties:
        Configuration:
          type: object
        Id:
          format: int32
          type: integer
        IsNullable:
          type: boolean
        Name:
          type: string
        Type:
          enum:
            - 0
            - 1
            - 2
            - 3
          format: int32
          type: integer
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.ArticleApiCustomFieldValueModel:
      properties:
        ArticleId:
          format: int32
          type: integer
        Definition:
          $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleAp\
            iCustomFieldDefinitionModel"
        DefinitionId:
          format: int32
          type: integer
        Id:
          format: int32
          type: integer
        Value:
          type: object
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.ArticleApiModel:
      properties:
        BasicAttributes:
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.Order.MultiLanguageString"
          type: array
        BillOfMaterial:
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.BomSubA\
              rticleApiModel"
          type: array
        Category1:
          $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleCa\
            tegoryApiModel"
        Category2:
          $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleCa\
            tegoryApiModel"
        Category3:
          $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleCa\
            tegoryApiModel"
        Condition:
          format: int32
          type: integer
        CostPrice:
          format: double
          type: number
        CountryOfOrigin:
          type: string
        CustomFields:
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Article\
              ApiCustomFieldValueModel"
          type: array
        DeliveryTime:
          format: int32
          type: integer
        Description:
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.Order.MultiLanguageString"
          type: array
        EAN:
          type: string
        ExportDescription:
          type: string
        HeightCm:
          format: double
          type: number
        Id:
          format: int32
          type: integer
        Images:
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Article\
              ImageRelationApiModel"
          type: array
        InvoiceText:
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.Order.MultiLanguageString"
          type: array
        IsCustomizable:
          type: boolean
        IsDigital:
          type: boolean
        LengthCm:
          format: double
          type: number
        LowStock:
          readOnly: true
          type: boolean
        Manufacturer:
          type: string
        Materials:
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.Order.MultiLanguageString"
          type: array
        Occasion:
          format: int32
          type: integer
        Price:
          format: double
          type: number
        Recipient:
          format: int32
          type: integer
        SKU:
          type: string
        ShippingProductId:
          format: int32
          type: integer
        ShortDescription:
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.Order.MultiLanguageString"
          type: array
        SoldAmount:
          format: double
          type: number
        SoldAmountLast30Days:
          format: double
          type: number
        SoldSumGross:
          format: double
          type: number
        SoldSumGrossLast30Days:
          format: double
          type: number
        SoldSumNet:
          format: double
          type: number
        SoldSumNetLast30Days:
          format: double
          type: number
        Sources:
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Article\
              SourceApiModel"
          type: array
        StockCode:
          type: string
        StockCurrent:
          format: double
          type: number
        StockDesired:
          format: double
          type: number
        StockReduceItemsPerSale:
          format: double
          type: number
        StockWarning:
          format: double
          type: number
        Stocks:
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.StockAr\
              ticleApiModel"
          type: array
        Tags:
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.Order.MultiLanguageString"
          type: array
        TaricNumber:
          type: string
        Title:
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.Order.MultiLanguageString"
          type: array
        Type:
          format: int32
          type: integer
        Unit:
          format: int32
          type: integer
        UnitsPerItem:
          format: double
          type: number
        Vat1Rate:
          format: double
          type: number
        Vat2Rate:
          format: double
          type: number
        VatIndex:
          format: int32
          type: integer
        Weight:
          format: int32
          type: integer
        WeightNet:
          format: int32
          type: integer
        WidthCm:
          format: double
          type: number
      required:
        - VatIndex
        - Price
        - Vat1Rate
        - Vat2Rate
        - Type
        - IsDigital
        - IsCustomizable
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.ArticleCategoryApiModel:
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel:
      properties:
        ArticleId:
          format: int32
          type: integer
        Id:
          format: int32
          type: integer
        IsDefault:
          type: boolean
        Position:
          format: int32
          type: integer
        ThumbPathExt:
          type: string
        ThumbUrl:
          type: string
        Url:
          type: string
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.ArticleSourceApiModel:
      properties:
        ApiAccountId:
          format: int32
          type: integer
        ApiAccountName:
          type: string
        Custom:
          type: object
        ExportFactor:
          format: double
          type: number
        Id:
          format: int32
          type: integer
        Source:
          type: string
        SourceId:
          type: string
        StockSyncInactive:
          type: boolean
        StockSyncMax:
          format: double
          type: number
        StockSyncMin:
          format: double
          type: number
        UnitsPerItem:
          format: double
          type: number
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.BomSubArticleApiModel:
      properties:
        Amount:
          format: double
          type: number
        ArticleId:
          format: int32
          type: integer
        SKU:
          type: string
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.CloudStorageApiModel:
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        Type:
          type: string
        UsedAsPrinter:
          type: boolean
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.CreateCustomerApiModel:
      properties:
        Address:
          $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerA\
            ddressApiModel"
        Email:
          type: string
        Id:
          format: int32
          type: integer
        LanguageId:
          format: int32
          type: integer
        Name:
          type: string
        Number:
          format: int32
          type: integer
        PriceGroupId:
          format: int32
          type: integer
        Tel1:
          type: string
        Tel2:
          type: string
        Type:
          description: Customer Type
          format: int32
          type: integer
        VatId:
          type: string
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.CreateShipmentApiModel:
      properties:
        ClientReference:
          description: Optional specify a text to be included on the label. Not possible
            with all carriers
          type: string
        Content:
          description: Optional specify a text describing the content of the shipment. Used
            for export shipments
          type: string
        CustomerNumber:
          description: Not used anymore
          type: string
        Dimension:
          $ref: "#/components/schemas/Billbee.Interfaces.Shipping.ShipmentData.Dime\
            nsions"
        OrderCurrencyCode:
          description: The Currency if the ordersum
          type: string
        OrderSum:
          description: The value of the shipments content
          format: double
          type: number
        PrinterIdForExportDocs:
          description: The id of a connected Cloudprinter to sent the export docs to
          format: int32
          type: integer
        PrinterName:
          description: The name of a connected Cloudprinter to sent the label to
          type: string
        ProductCode:
          description: The productcode to be used when creating the shipment. Values
            depends on the carrier used
          type: string
        ProviderName:
          description: The name of the provider as specified in the billbee account
          type: string
        ReceiverAddress:
          $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ShipmentA\
            ddressApiModel"
        Services:
          description: A list of services to be used when creating the shipment
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.Shipping.ProductService"
          type: array
        ShipDate:
          description: Optional overwrite the shipdate to be transferred to the carrier
          format: date-time
          type: string
        WeightInGram:
          description: Optional specify the weight in gram of the shipment
          format: double
          type: number
        shippingCarrier:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
          format: int32
          type: integer
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel:
      properties:
        AddressAddition:
          type: string
        AddressType:
          enum:
            - 1
            - 2
          format: int32
          type: integer
        City:
          type: string
        Company:
          type: string
        CountryCode:
          type: string
        CustomerId:
          format: int32
          type: integer
        Email:
          type: string
        Fax:
          type: string
        FirstName:
          type: string
        Housenumber:
          type: string
        Id:
          format: int32
          type: integer
        LastName:
          type: string
        Name2:
          type: string
        State:
          type: string
        Street:
          type: string
        Tel1:
          type: string
        Tel2:
          type: string
        Zip:
          type: string
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel:
      properties:
        Email:
          type: string
        Id:
          format: int32
          type: integer
        LanguageId:
          format: int32
          type: integer
        Name:
          type: string
        Number:
          format: int32
          type: integer
        PriceGroupId:
          format: int32
          type: integer
        Tel1:
          type: string
        Tel2:
          type: string
        Type:
          description: Customer Type
          format: int32
          type: integer
        VatId:
          type: string
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.DeletedImagesModel:
      properties:
        Deleted:
          items:
            format: int32
            type: integer
          type: array
        NotFound:
          items:
            format: int32
            type: integer
          type: array
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.GetReservedAmountResponseData:
      properties:
        ReservedAmount:
          description: The reserve (not fulfilled) qty of the article
          format: double
          type: number
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.Order:
      description: A class that represents the Billbee data model of a single order
      properties:
        AcceptLossOfReturnRight:
          description: Customer accepts loss due to withdrawal
          type: boolean
        AdjustmentCost:
          format: double
          type: number
        AdjustmentReason:
          type: string
        BillBeeOrderId:
          description: The Order.Id from the Billbee database
          format: int32
          type: integer
        BillBeeParentOrderId:
          description: The Id of the parent order in the Billbee database
          format: int32
          type: integer
        Buyer:
          $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.OrderUser"
        Comments:
          description: All messages / comments of the order
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.Order.Comment"
          type: array
        ConfirmedAt:
          description: The date on which the order was confirmed
          format: date-time
          type: string
        CreatedAt:
          description: The date on which the order was created
          format: date-time
          type: string
        Currency:
          description: The three letter currency code.
          type: string
        CustomInvoiceNote:
          description: An optional multiline text which is printed on the invoice
          type: string
        Customer:
          $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerA\
            piModel"
        CustomerNumber:
          description: The customer number (not to be confused with the id of the customer)
          type: string
        DeliverySourceCountryCode:
          description: An optional Country ISO2 Code of the country where order is shipped
            from (FBA)
          type: string
        DistributionCenter:
          description: An optional code for the distribution center delivering this order
          type: string
        Id:
          description: Id of the order in the external system (marketplace)
          type: string
        InvoiceAddress:
          $ref: "#/components/schemas/Billbee.Interfaces.Order.Address"
        InvoiceDate:
          description: The date on which the invoice was created
          format: date-time
          type: string
        InvoiceNumber:
          description: The invoice number
          format: int32
          type: integer
        InvoiceNumberPostfix:
          description: The postfix of the invoice number
          type: string
        InvoiceNumberPrefix:
          description: The prefix of the invoice number
          type: string
        IsCancelationFor:
          description: An optional Order Id (externalid) for an order if this is a cancel
            order (shopify only at the moment)
          type: string
        LanguageCode:
          description: The two-letter language code of the customer
          type: string
        OrderItems:
          description: The list of items purchased like shirt, pant, toys etc
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.OrderIt\
              em"
          type: array
        OrderNumber:
          description: Order number of the order in the external system (marketplace)
          type: string
        PaidAmount:
          format: double
          type: number
        PayedAt:
          description: The date on which the order was paid
          format: date-time
          type: string
        PaymentInstruction:
          description: A textfield optionaly filled with a payment instruction text for
            printout on the invoice (z.B. Ebay Kauf auf Rechnung)
          type: string
        PaymentMethod:
          description: The payment method
          enum:
            - 1
            - 2
            - 3
            - 4
            - 6
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
            - 26
            - 27
            - 28
            - 29
            - 30
            - 31
            - 32
            - 33
            - 34
            - 35
            - 36
            - 37
            - 38
            - 39
            - 40
            - 41
            - 42
            - 43
            - 44
            - 45
            - 46
            - 47
            - 48
            - 49
            - 50
            - 51
            - 52
            - 53
            - 54
            - 55
            - 56
            - 57
            - 58
            - 59
            - 60
            - 61
            - 62
            - 63
            - 64
            - 65
            - 66
            - 67
            - 68
            - 69
            - 70
            - 71
            - 72
            - 73
            - 74
            - 75
            - 76
            - 77
            - 78
            - 79
            - 80
            - 81
            - 82
            - 83
            - 84
            - 85
            - 86
            - 87
            - 88
            - 89
            - 90
            - 91
            - 92
            - 93
            - 94
            - 95
            - 96
            - 97
            - 98
            - 99
            - 100
            - 101
            - 102
            - 103
            - 104
            - 105
            - 106
            - 107
            - 108
            - 109
            - 110
            - 111
          format: int32
          type: integer
        PaymentReference:
          description: A payment reference
          type: string
        PaymentTransactionId:
          description: The id of the payment transaction. For example the transaction id of
            PayPal payment
          type: string
        RebateDifference:
          format: double
          readOnly: true
          type: number
        Seller:
          $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.OrderUser"
        SellerComment:
          description: An internal seller comment
          type: string
        ShipWeightKg:
          description: The total weight of the shipment(s)
          format: double
          type: number
        ShippedAt:
          description: The date on which the order was shipped
          format: date-time
          type: string
        ShippingAddress:
          $ref: "#/components/schemas/Billbee.Interfaces.Order.Address"
        ShippingCost:
          description: The shipping cost
          format: double
          type: number
        ShippingIds:
          description: The shipments of the order
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Shipment"
          type: array
        ShippingProfileId:
          description: Internal Id for the shipping profile for that order
          type: string
        ShippingProfileName:
          description: Display Name of Shipping profile, if available
          type: string
        ShippingProviderId:
          description: Internal Id for the used shipping provider
          format: int32
          type: integer
        ShippingProviderName:
          description: The Name for of used shipping provider
          type: string
        ShippingProviderProductId:
          description: Internal Id for the used shipping product
          format: int32
          type: integer
        ShippingProviderProductName:
          description: The Name of the used shipping product
          type: string
        ShippingServices:
          description: Additional services for the shipment
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.Shipping.ProductService"
          type: array
        State:
          description: The current state of the order
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
          format: int32
          type: integer
        Tags:
          description: The Tags of the order
          items:
            type: string
          type: array
        TaxRate1:
          description: The regular tax rate
          format: double
          type: number
        TaxRate2:
          description: The reduced tax rate
          format: double
          type: number
        TotalCost:
          description: The total cost excluding shipping cost
          format: double
          type: number
        UpdatedAt:
          description: The date on which the order was last updated
          format: date-time
          type: string
        VatId:
          description: The customers vat id
          type: string
        VatMode:
          description: The vat mode of the order
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
          format: int32
          type: integer
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.OrderItem:
      properties:
        Attributes:
          description: A list of product attributes for this position
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.OrderIt\
              emAttribute"
          type: array
        BillbeeId:
          description: The billbee id of this item
          format: int32
          type: integer
        Discount:
          description: Sets the discount in percent
          format: double
          type: number
        DontAdjustStock:
          description: If true, the import of this order won't adjust the stock level at
            billbee.
          type: boolean
        GetPriceFromArticleIfAny:
          description: If true, the price will be overwritten by the known article price in
            billbee if available
          type: boolean
        IsCoupon:
          description: Determines if it is a coupon, which is interpreted as tax-free
            payment
          type: boolean
        Product:
          $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.SoldProdu\
            ct"
        Quantity:
          description: The sold quantity
          format: double
          type: number
        SerialNumber:
          description: Contains the used serial number
          type: string
        ShippingProfileId:
          description: Determines if it is a coupon, which is interpreted as tax-free
            payment
          type: string
        TaxAmount:
          description: The tax amount in the total price
          format: double
          type: number
        TaxIndex:
          description: The tax index.
          format: int32
          type: integer
        TotalPrice:
          description: The total price (unit price * quantity)
          format: double
          type: number
        TransactionId:
          description: Id of the individual transaction. Only required by Ebay to detect
            aggregated orders
          type: string
        UnrebatedTotalPrice:
          description: Is just used for the billbee api
          format: double
          type: number
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.OrderItemAttribute:
      properties:
        Id:
          description: The internal id of this attribute
          type: string
        Name:
          description: The attribute name. E.g. color
          type: string
        Price:
          format: double
          type: number
        Value:
          description: The attribute value. E.g. red
          type: string
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.OrderUser:
      properties:
        BillbeeShopId:
          description: The Billbee internal id of the shop connection
          format: int32
          type: integer
        BillbeeShopName:
          description: The name of shop connection in Billbee
          type: string
        Email:
          description: The email address of this customer
          type: string
        FirstName:
          description: The first name of this customer
          type: string
        FullName:
          description: The full name ("firstname lastname") of this customer
          readOnly: true
          type: string
        Id:
          description: The Billbee internal id of this customer
          type: string
        LastName:
          description: The last name of this customer
          type: string
        Nick:
          description: The nick name (if available) from the original system
          type: string
        Platform:
          description: The name of the platform from which this customer originated
          type: string
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.ProductImage:
      properties:
        ExternalId:
          description: The id of this image from the original system
          type: string
        IsDefaultImage:
          description: True if the image is / should be the default image
          type: boolean
        Position:
          description: The order of this image
          format: int32
          type: integer
        Url:
          description: The url to the image
          type: string
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.Shipment:
      description: Represents a single shipment.
      properties:
        Created:
          description: The creation date
          format: date-time
          type: string
        Shipper:
          description: The name of the shipping provider
          type: string
        ShippingId:
          description: The id of this shipment
          type: string
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.ShipmentAddressApiModel:
      properties:
        AddressAddition:
          type: string
        City:
          type: string
        Company:
          type: string
        CountryCode:
          type: string
        CountryCodeISO3:
          type: string
        Email:
          type: string
        FirstName:
          type: string
        FullName:
          readOnly: true
          type: string
        FullStreet:
          readOnly: true
          type: string
        Housenumber:
          type: string
        IsExportCountry:
          type: boolean
        LastName:
          type: string
        Name2:
          type: string
        State:
          type: string
        Street:
          type: string
        Telephone:
          type: string
        Zip:
          type: string
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.SoldProduct:
      properties:
        BillbeeId:
          description: The Billbee internal id of the linked product
          format: int32
          type: integer
        CountryOfOrigin:
          description: The country where this article was made
          type: string
        EAN:
          description: The EAN / GTIN of this product
          type: string
        Id:
          description: The id of this product in the external system
          type: string
        Images:
          description: The images of this product
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Product\
              Image"
          type: array
        IsDigital:
          description: True if the product is a digital good (download etc.), false if not
          type: boolean
        OldId:
          description: "This is for migration scenarios when the internal id of a product
            changes\r

            I.E. Etsy when switching to the new inventory
            management, the ids for variants will change."
          type: string
        PlatformData:
          description: Optional platform specific Data as serialized JSON Object for the
            product
          type: string
        SKU:
          description: The SKU of this product
          type: string
        SkuOrId:
          description: The SKU of this product or the id if the SKU is empty
          readOnly: true
          type: string
        TARICCode:
          description: The TARIC code
          type: string
        Title:
          description: The name of this product
          type: string
        Weight:
          description: Weight of one item in gram
          format: int32
          type: integer
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.StockArticleApiModel:
      properties:
        Name:
          type: string
        StockCode:
          type: string
        StockCurrent:
          format: double
          type: number
        StockDesired:
          format: double
          type: number
        StockId:
          format: int32
          type: integer
        StockWarning:
          format: double
          type: number
        UnfulfilledAmount:
          format: double
          type: number
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.UpdateStockApiModel:
      properties:
        AutosubtractReservedAmount:
          description: Automatically reduce the NewQuantity by the currently not fulfilled
            amount
          type: boolean
        BillbeeId:
          description: Optional the ID of the Billbee product to update
          format: int32
          type: integer
        DeltaQuantity:
          description: This parameter is currently ignored
          format: double
          type: number
        ForceSendStockToShops:
          description: If true, every sent stockchange is stored and transmitted to the
            connected shop, even if the value has not changed
          type: boolean
        NewQuantity:
          description: The new absolute stock quantity for the product you want to set
          format: double
          type: number
        OldQuantity:
          description: This parameter is currently ignored
          format: double
          type: number
        Reason:
          description: Optional a reason text for the stock update
          type: string
        Sku:
          description: The SKU of the product to update
          type: string
        StockId:
          description: Optional the stock id if the feature multi stock is activated
          format: int32
          type: integer
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.UpdateStockCodeApiModel:
      properties:
        BillbeeId:
          format: int32
          type: integer
        Sku:
          type: string
        StockCode:
          type: string
        StockId:
          format: int32
          type: integer
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.UpdateStockCodeResponseData:
      properties: {}
      type: object
    Billbee.Interfaces.BillbeeAPI.Model.UpdateStockResponseData:
      properties:
        CurrentStock:
          description: The new value for current stock after the update
          format: double
          type: number
        Message:
          description: A human readable message that explains the result of the operation
          type: string
        SKU:
          description: The SKU of the article to update the current stock
          type: string
        UnfulfilledAmount:
          description: The value of the unfulfilled amount (reserved) of the article
          format: double
          type: number
      type: object
    Billbee.Interfaces.BillbeeAPI.Models.LayoutTemplate:
      properties:
        Id:
          format: int32
          type: integer
        Name:
          type: string
        Type:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
          format: int32
          type: integer
      type: object
    Billbee.Interfaces.Order.Address:
      properties:
        BillbeeId:
          description: The Billbee internal ID of the address record
          format: int32
          type: integer
        City:
          description: The city
          type: string
        Comment:
          description: A internal comment to this address
          type: string
        Company:
          description: The company name
          type: string
        Country:
          description: The name of the country
          type: string
        CountryISO2:
          description: The 2-letter country code
          type: string
        Email:
          description: The email address
          type: string
        FirstName:
          description: The first name
          type: string
        HouseNumber:
          description: The house number
          type: string
        Id:
          description: The id of the address in the external system
          type: string
        LastName:
          description: The last name
          type: string
        Line2:
          description: The second address line
          type: string
        Line3:
          description: The third address line
          type: string
        NameAddition:
          description: A addition to the address (e.g. Apartment 2, Back door)
          type: string
        Phone:
          description: The phone number
          type: string
        Salutation:
          description: The salutation
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
          format: int32
          type: integer
        State:
          description: The name of the state
          type: string
        Street:
          description: The street excl. the housenumber
          type: string
        Title:
          description: An internal identifier for this address
          type: string
        Zip:
          description: The postal code
          type: string
      type: object
    Billbee.Interfaces.Order.Comment:
      properties:
        Created:
          format: date-time
          type: string
        FromCustomer:
          type: boolean
        Id:
          format: int32
          type: integer
        Name:
          type: string
        Text:
          type: string
      type: object
    Billbee.Interfaces.Order.MultiLanguageString:
      properties:
        LanguageCode:
          type: string
        Text:
          type: string
      type: object
    Billbee.Interfaces.Shipping.ProductService:
      properties:
        CanBeConfigured:
          readOnly: true
          type: boolean
        DisplayName:
          readOnly: true
          type: string
        DisplayValue:
          readOnly: true
          type: string
        PossibleValueLists:
          items:
            $ref: "#/components/schemas/System.Collections.Generic.KeyValuePair_Sys\
              tem.String_System.Collections.Generic.List_System.Collections.Gen\
              eric.KeyValuePair_System.Int32_System.String_"
          readOnly: true
          type: array
        RequiresUserInput:
          readOnly: true
          type: boolean
        ServiceName:
          readOnly: true
          type: string
        typeName:
          readOnly: true
          type: string
      type: object
    Billbee.Interfaces.Shipping.ShipmentData.Dimensions:
      properties:
        height:
          format: double
          type: number
        length:
          format: double
          type: number
        width:
          format: double
          type: number
      type: object
    Microsoft.AspNet.WebHooks.WebHook:
      properties:
        Description:
          type: string
        Filters:
          items:
            type: string
          readOnly: true
          type: array
        Headers:
          additionalProperties:
            type: string
          readOnly: true
          type: object
        Id:
          type: string
        IsPaused:
          type: boolean
        Properties:
          additionalProperties:
            type: object
          readOnly: true
          type: object
        Secret:
          type: string
        WebHookUri:
          type: string
      required:
        - WebHookUri
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiAddShipmentToOrderModel:
      description: Data of the shipment to be created
      properties:
        CarrierId:
          description: "Optional the id of a shipping carrier that should be assigend to
            the shipment\r

            Will override the carrier from the shipment product.\r

            Please use the integer value from this Enumeration:\r

            {Billbee.Interfaces.Shipping.Enums.ShippingCarrier}"
          format: int32
          type: integer
        Comment:
          description: Optional a text stored with the shipment
          type: string
        OrderId:
          description: Optional a differing order number of the shipment if available
          type: string
        ShippingId:
          description: The id of the shipment (Sendungsnummer/trackingid)
          type: string
        ShippingProviderId:
          description: Optional the id of a shipping provider existing in the billbee
            account that should be assigned to the shipment
          format: int32
          type: integer
        ShippingProviderProductId:
          description: Optional the id of a shipping provider product that should be
            assigend to the shipment
          format: int32
          type: integer
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.AutomaticProvisioningController.CreateAccountContainer:
      description: Data used to create a new Billbee user account
      properties:
        AcceptTerms:
          description: Set to true, if the user has accepted the Billbee terms &amp;
            conditions
          type: boolean
        Address:
          $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Automat\
            icProvisioningController.CreateAccountContainer.UserAddress"
        AffiliateCouponCode:
          description: Specifies an billbee affiliate code to attach to the user
          type: string
        DefaultCurrrency:
          description: Optionally specify the default currency of the user
          type: string
        DefaultVatIndex:
          description: Optionally specify the default vat index of the user
          format: int32
          type: integer
        DefaultVatMode:
          description: Optionally specify the default vat mode of the user
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
          format: int32
          type: integer
        EMail:
          description: The Email address of the user to create
          type: string
        Newsletter:
          description: Gets or sets if the user is interested in the Billbee newsletter
          type: boolean
        Password:
          type: string
        Vat1Rate:
          description: Optionally specify the vat1 (normal) rate of the user
          format: double
          type: number
        Vat2Rate:
          description: Optionally specify the vat2 (reduced) rate of the user
          format: double
          type: number
      required:
        - EMail
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.AutomaticProvisioningController.CreateAccountContainer.UserAddress:
      description: Represents the invoice address of a Billbee user
      properties:
        Address1:
          type: string
        Address2:
          type: string
        City:
          type: string
        Company:
          type: string
        Country:
          description: The ISO2 country code of the users country
          type: string
        Name:
          type: string
        VatId:
          type: string
        Zip:
          type: string
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.Order:
      properties:
        CanCreateAutoInvoice:
          type: boolean
        CreatedAt:
          format: date-time
          type: string
        ExternalId:
          type: string
        HasInvoice:
          type: boolean
        Id:
          format: int32
          type: integer
        InvoiceCreatedAt:
          format: date-time
          type: string
        InvoiceDate:
          format: date-time
          type: string
        InvoiceNumber:
          type: string
        OrderStateId:
          format: int32
          type: integer
        OrderStateText:
          type: string
        PaidAt:
          format: date-time
          type: string
        ShippedAt:
          format: date-time
          type: string
        ShopName:
          type: string
        TotalGross:
          format: double
          type: number
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.OrderApiController.SendMessageModel:
      properties:
        AlternativeMail:
          type: string
        Body:
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.Order.MultiLanguageString"
          type: array
        SendMode:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
          format: int32
          type: integer
        Subject:
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.Order.MultiLanguageString"
          type: array
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.OrderApiController.TriggerEventContainer:
      properties:
        DelayInMinutes:
          description: The delay in minutes until the rule is executed
          format: int32
          type: integer
        Name:
          description: Name of the event
          type: string
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.OrderStateUpdate:
      description: Specifies the parameters used to set the new state of an order
      properties:
        NewStateId:
          description: The new state to set
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
          format: int32
          type: integer
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.OrderTagCreate:
      properties:
        Tags:
          items:
            type: string
          type: array
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.SearchController.CustomerResult:
      properties:
        Addresses:
          type: string
        Id:
          format: int32
          type: integer
        Name:
          type: string
        Number:
          type: string
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.SearchController.OrderResult:
      properties:
        ArticleTexts:
          type: string
        BuyerName:
          type: string
        CustomerName:
          type: string
        ExternalReference:
          type: string
        Id:
          format: int32
          type: integer
        InvoiceNumber:
          type: string
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.SearchController.ProductResult:
      properties:
        Id:
          format: int32
          type: integer
        SKU:
          type: string
        ShortText:
          type: string
        Tags:
          type: string
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.SearchController.SearchModel:
      properties:
        SearchMode:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
          format: int32
          type: integer
        Term:
          type: string
        Type:
          items:
            type: string
          type: array
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.SearchController.SearchResultsModel:
      properties:
        Customers:
          items:
            $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Searc\
              hController.CustomerResult"
          type: array
        Orders:
          items:
            $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Searc\
              hController.OrderResult"
          type: array
        Products:
          items:
            $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Searc\
              hController.ProductResult"
          type: array
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ShipmentWithLabel:
      properties:
        ChangeStateToSend:
          description: Optional parameter to automatically change the orderstate to sent
            after creating the shipment
          type: boolean
        ClientReference:
          description: Optional specify a reference text to be included on the label. Works
            not with all carriers
          type: string
        Dimension:
          $ref: "#/components/schemas/Billbee.Interfaces.Shipping.ShipmentData.Dime\
            nsions"
        OrderId:
          description: The Billbee internal id of the order to ship
          format: int32
          type: integer
        PrinterName:
          description: Optional the name of a connected cloudprinter to send the label to
          type: string
        ProductId:
          description: the id of the shipping provider product to be used
          format: int32
          type: integer
        ProviderId:
          description: The id of the provider. You can query all providers with the
            shippingproviders endpoint
          format: int32
          type: integer
        ShipDate:
          description: Optional specify the shipdate to be transmitted to the carrier
          format: date-time
          type: string
        WeightInGram:
          description: Optional the shipments weight in gram to override the calculated
            weight
          format: int32
          type: integer
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ShipmentWithLabelResult:
      properties:
        Carrier:
          type: string
        ExportDocsPdf:
          format: byte
          type: string
        LabelDataPdf:
          format: byte
          type: string
        OrderId:
          format: int32
          type: integer
        OrderReference:
          type: string
        ShippingDate:
          format: date-time
          type: string
        ShippingId:
          type: string
        TrackingUrl:
          type: string
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformation_System.Collections.Generic.List_Billbee.Interfaces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel_:
      properties:
        Page:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
        TotalPages:
          format: int32
          type: integer
        TotalRows:
          format: int32
          type: integer
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformation_System.Collections.Generic.List_Billbee.Interfaces.BillbeeAPI.Model.ArticleApiModel_:
      properties:
        Page:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
        TotalPages:
          format: int32
          type: integer
        TotalRows:
          format: int32
          type: integer
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformation_System.Collections.Generic.List_Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel_:
      properties:
        Page:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
        TotalPages:
          format: int32
          type: integer
        TotalRows:
          format: int32
          type: integer
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformation_System.Collections.Generic.List_Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel_:
      properties:
        Page:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
        TotalPages:
          format: int32
          type: integer
        TotalRows:
          format: int32
          type: integer
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformation_System.Collections.Generic.List_Billbee.Interfaces.BillbeeAPI.Model.Order_:
      properties:
        Page:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
        TotalPages:
          format: int32
          type: integer
        TotalRows:
          format: int32
          type: integer
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformation_System.Collections.Generic.List_Billbee.Interfaces.BillbeeAPI.Model.Shipment_:
      properties:
        Page:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
        TotalPages:
          format: int32
          type: integer
        TotalRows:
          format: int32
          type: integer
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult.PagingInformation_System.Collections.Generic.List_Rechnungsdruck.WebApp.Controllers.Api.Order_:
      properties:
        Page:
          format: int32
          type: integer
        PageSize:
          format: int32
          type: integer
        TotalPages:
          format: int32
          type: integer
        TotalRows:
          format: int32
          type: integer
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult_System.Collections.Generic.List_Billbee.Interfaces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel_:
      properties:
        Data:
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Article\
              ApiCustomFieldDefinitionModel"
          type: array
        ErrorCode:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
          format: int32
          type: integer
        ErrorMessage:
          type: string
        Paging:
          $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPage\
            dResult.PagingInformation_System.Collections.Generic.List_Billbee.I\
            nterfaces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel_"
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult_System.Collections.Generic.List_Billbee.Interfaces.BillbeeAPI.Model.ArticleApiModel_:
      properties:
        Data:
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Article\
              ApiModel"
          type: array
        ErrorCode:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
          format: int32
          type: integer
        ErrorMessage:
          type: string
        Paging:
          $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPage\
            dResult.PagingInformation_System.Collections.Generic.List_Billbee.I\
            nterfaces.BillbeeAPI.Model.ArticleApiModel_"
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult_System.Collections.Generic.List_Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel_:
      properties:
        Data:
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Custome\
              rAddressApiModel"
          type: array
        ErrorCode:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
          format: int32
          type: integer
        ErrorMessage:
          type: string
        Paging:
          $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPage\
            dResult.PagingInformation_System.Collections.Generic.List_Billbee.I\
            nterfaces.BillbeeAPI.Model.CustomerAddressApiModel_"
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult_System.Collections.Generic.List_Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel_:
      properties:
        Data:
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Custome\
              rApiModel"
          type: array
        ErrorCode:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
          format: int32
          type: integer
        ErrorMessage:
          type: string
        Paging:
          $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPage\
            dResult.PagingInformation_System.Collections.Generic.List_Billbee.I\
            nterfaces.BillbeeAPI.Model.CustomerApiModel_"
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult_System.Collections.Generic.List_Billbee.Interfaces.BillbeeAPI.Model.Order_:
      properties:
        Data:
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Order"
          type: array
        ErrorCode:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
          format: int32
          type: integer
        ErrorMessage:
          type: string
        Paging:
          $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPage\
            dResult.PagingInformation_System.Collections.Generic.List_Billbee.I\
            nterfaces.BillbeeAPI.Model.Order_"
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult_System.Collections.Generic.List_Billbee.Interfaces.BillbeeAPI.Model.Shipment_:
      properties:
        Data:
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Shipment"
          type: array
        ErrorCode:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
          format: int32
          type: integer
        ErrorMessage:
          type: string
        Paging:
          $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPage\
            dResult.PagingInformation_System.Collections.Generic.List_Billbee.I\
            nterfaces.BillbeeAPI.Model.Shipment_"
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiPagedResult_System.Collections.Generic.List_Rechnungsdruck.WebApp.Controllers.Api.Order_:
      properties:
        Data:
          items:
            $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Order"
          type: array
        ErrorCode:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
          format: int32
          type: integer
        ErrorMessage:
          type: string
        Paging:
          $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.ApiPage\
            dResult.PagingInformation_System.Collections.Generic.List_Rechnungs\
            druck.WebApp.Controllers.Api.Order_"
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleApiCustomFieldDefinitionModel_:
      properties:
        Data:
          $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleAp\
            iCustomFieldDefinitionModel"
        ErrorCode:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
          format: int32
          type: integer
        ErrorMessage:
          type: string
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleApiModel_:
      properties:
        Data:
          $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleAp\
            iModel"
        ErrorCode:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
          format: int32
          type: integer
        ErrorMessage:
          type: string
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiResult_Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel_:
      properties:
        Data:
          $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.ArticleIm\
            ageRelationApiModel"
        ErrorCode:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
          format: int32
          type: integer
        ErrorMessage:
          type: string
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerAddressApiModel_:
      properties:
        Data:
          $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerA\
            ddressApiModel"
        ErrorCode:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
          format: int32
          type: integer
        ErrorMessage:
          type: string
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiResult_Billbee.Interfaces.BillbeeAPI.Model.CustomerApiModel_:
      properties:
        Data:
          $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CustomerA\
            piModel"
        ErrorCode:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
          format: int32
          type: integer
        ErrorMessage:
          type: string
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiResult_Billbee.Interfaces.BillbeeAPI.Model.DeletedImagesModel_:
      properties:
        Data:
          $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.DeletedIm\
            agesModel"
        ErrorCode:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
          format: int32
          type: integer
        ErrorMessage:
          type: string
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiResult_Billbee.Interfaces.BillbeeAPI.Model.GetReservedAmountResponseData_:
      properties:
        Data:
          $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.GetReserv\
            edAmountResponseData"
        ErrorCode:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
          format: int32
          type: integer
        ErrorMessage:
          type: string
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiResult_Billbee.Interfaces.BillbeeAPI.Model.Order_:
      properties:
        Data:
          $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Order"
        ErrorCode:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
          format: int32
          type: integer
        ErrorMessage:
          type: string
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiResult_Billbee.Interfaces.BillbeeAPI.Model.UpdateStockCodeResponseData_:
      properties:
        Data:
          $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.UpdateSto\
            ckCodeResponseData"
        ErrorCode:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
          format: int32
          type: integer
        ErrorMessage:
          type: string
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiResult_Billbee.Interfaces.BillbeeAPI.Model.UpdateStockResponseData_:
      properties:
        Data:
          $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.UpdateSto\
            ckResponseData"
        ErrorCode:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
          format: int32
          type: integer
        ErrorMessage:
          type: string
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiResult_Rechnungsdruck.WebApp.Controllers.Api.SearchController.SearchResultsModel_:
      properties:
        Data:
          $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.SearchC\
            ontroller.SearchResultsModel"
        ErrorCode:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
          format: int32
          type: integer
        ErrorMessage:
          type: string
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiResult_Rechnungsdruck.WebApp.Controllers.Api.ShipmentWithLabelResult_:
      properties:
        Data:
          $ref: "#/components/schemas/Rechnungsdruck.WebApp.Controllers.Api.Shipmen\
            tWithLabelResult"
        ErrorCode:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
          format: int32
          type: integer
        ErrorMessage:
          type: string
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiResult_System.Collections.Generic.List_Billbee.Interfaces.BillbeeAPI.Model.ArticleImageRelationApiModel_:
      properties:
        Data:
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.Article\
              ImageRelationApiModel"
          type: array
        ErrorCode:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
          format: int32
          type: integer
        ErrorMessage:
          type: string
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiResult_System.Collections.Generic.List_Billbee.Interfaces.BillbeeAPI.Model.CloudStorageApiModel_:
      properties:
        Data:
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Model.CloudSt\
              orageApiModel"
          type: array
        ErrorCode:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
          format: int32
          type: integer
        ErrorMessage:
          type: string
      type: object
    Rechnungsdruck.WebApp.Controllers.Api.ApiResult_System.Collections.Generic.List_Billbee.Interfaces.BillbeeAPI.Models.LayoutTemplate_:
      properties:
        Data:
          items:
            $ref: "#/components/schemas/Billbee.Interfaces.BillbeeAPI.Models.Layout\
              Template"
          type: array
        ErrorCode:
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
            - 11
            - 12
            - 13
            - 14
            - 15
            - 16
            - 17
            - 18
            - 19
            - 20
            - 21
            - 22
            - 23
            - 24
            - 25
          format: int32
          type: integer
        ErrorMessage:
          type: string
      type: object
    System.Collections.Generic.KeyValuePair_System.Int32_System.String_:
      properties:
        key:
          format: int32
          type: integer
        value:
          type: string
      type: object
    System.Collections.Generic.KeyValuePair_System.String_System.Collections.Generic.List_System.Collections.Generic.KeyValuePair_System.Int32_System.String_:
      properties:
        key:
          type: string
        value:
          items:
            $ref: "#/components/schemas/System.Collections.Generic.KeyValuePair_Sys\
              tem.Int32_System.String_"
          type: array
      type: object
