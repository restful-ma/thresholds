openapi: 3.0.0
info:
  version: 2013-04-01
  x-release: v4
  title: Amazon Route 53
  description: Amazon Route 53 is a highly available and scalable Domain Name System (DNS)
    web service.
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: route53
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/route53-2013-04-01.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/route53/
security:
  - hmac: []
paths:
  "/2013-04-01/hostedzone/{Id}/associatevpc":
    post:
      operationId: AssociateVPCWithHostedZone
      description: <p>Associates an Amazon VPC with a private hosted zone. </p> <important>
        <p>To perform the association, the VPC and the private hosted zone must
        already exist. You can't convert a public hosted zone into a private
        hosted zone.</p> </important> <note> <p>If you want to associate a VPC
        that was created by using one AWS account with a private hosted zone
        that was created by using a different account, the AWS account that
        created the private hosted zone must first submit a
        <code>CreateVPCAssociationAuthorization</code> request. Then the account
        that created the VPC must submit an
        <code>AssociateVPCWithHostedZone</code> request.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AssociateVPCWithHostedZoneResponse"
        "480":
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHostedZone"
        "481":
          description: NotAuthorizedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NotAuthorizedException"
        "482":
          description: InvalidVPCId
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCId"
        "483":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "484":
          description: PublicZoneVPCAssociation
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PublicZoneVPCAssociation"
        "485":
          description: ConflictingDomainExists
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConflictingDomainExists"
        "486":
          description: LimitsExceeded
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitsExceeded"
      parameters:
        - name: Id
          in: path
          required: true
          description: <p>The ID of the private hosted zone that you want to associate an
            Amazon VPC with.</p> <p>Note that you can't associate a VPC with a
            hosted zone that doesn't have an existing VPC association.</p>
          schema:
            type: string
            maxLength: 32
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - VPC
              properties:
                VPC:
                  description: (Private hosted zones only) A complex type that contains
                    information about an Amazon VPC.
                  type: object
                  properties:
                    VPCRegion:
                      $ref: "#/components/schemas/VPCRegion"
                    VPCId:
                      $ref: "#/components/schemas/VPCId"
                Comment:
                  description: " <i>Optional:</i> A comment about the association request."
                  type: string
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2013-04-01/hostedzone/{Id}/rrset/":
    post:
      operationId: ChangeResourceRecordSets
      description: "<p>Creates, changes, or deletes a resource record set, which contains
        authoritative DNS information for a specified domain name or subdomain
        name. For example, you can use <code>ChangeResourceRecordSets</code> to
        create a resource record set that routes traffic for test.example.com to
        a web server that has an IP address of 192.0.2.44.</p> <p> <b>Change
        Batches and Transactional Changes</b> </p> <p>The request body must
        include a document with a <code>ChangeResourceRecordSetsRequest</code>
        element. The request body contains a list of change items, known as a
        change batch. Change batches are considered transactional changes. When
        using the Amazon Route 53 API to change resource record sets, Route 53
        either makes all or none of the changes in a change batch request. This
        ensures that Route 53 never partially implements the intended changes to
        the resource record sets in a hosted zone. </p> <p>For example, a change
        batch request that deletes the <code>CNAME</code> record for
        www.example.com and creates an alias resource record set for
        www.example.com. Route 53 deletes the first resource record set and
        creates the second resource record set in a single operation. If either
        the <code>DELETE</code> or the <code>CREATE</code> action fails, then
        both changes (plus any other changes in the batch) fail, and the
        original <code>CNAME</code> record continues to exist.</p> <important>
        <p>Due to the nature of transactional changes, you can't delete the same
        resource record set more than once in a single change batch. If you
        attempt to delete the same change batch more than once, Route 53 returns
        an <code>InvalidChangeBatch</code> error.</p> </important> <p>
        <b>Traffic Flow</b> </p> <p>To create resource record sets for complex
        routing configurations, use either the traffic flow visual editor in the
        Route 53 console or the API actions for traffic policies and traffic
        policy instances. Save the configuration as a traffic policy, then
        associate the traffic policy with one or more domain names (such as
        example.com) or subdomain names (such as www.example.com), in the same
        hosted zone or in multiple hosted zones. You can roll back the updates
        if the new configuration isn't performing as expected. For more
        information, see <a
        href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/traffic\
        -flow.html\">Using Traffic Flow to Route DNS Traffic</a> in the
        <i>Amazon Route 53 Developer Guide</i>.</p> <p> <b>Create, Delete, and
        Upsert</b> </p> <p>Use <code>ChangeResourceRecordsSetsRequest</code> to
        perform the following actions:</p> <ul> <li> <p> <code>CREATE</code>:
        Creates a resource record set that has the specified values.</p> </li>
        <li> <p> <code>DELETE</code>: Deletes an existing resource record set
        that has the specified values.</p> </li> <li> <p> <code>UPSERT</code>:
        If a resource record set does not already exist, AWS creates it. If a
        resource set does exist, Route 53 updates it with the values in the
        request. </p> </li> </ul> <p> <b>Syntaxes for Creating, Updating, and
        Deleting Resource Record Sets</b> </p> <p>The syntax for a request
        depends on the type of resource record set that you want to create,
        delete, or update, such as weighted, alias, or failover. The XML
        elements in your request must appear in the order listed in the syntax.
        </p> <p>For an example for each type of resource record set, see
        \"Examples.\"</p> <p>Don't refer to the syntax in the \"Parameter
        Syntax\" section, which includes all of the elements for every kind of
        resource record set that you can create, delete, or update by using
        <code>ChangeResourceRecordSets</code>. </p> <p> <b>Change Propagation to
        Route 53 DNS Servers</b> </p> <p>When you submit a
        <code>ChangeResourceRecordSets</code> request, Route 53 propagates your
        changes to all of the Route 53 authoritative DNS servers. While your
        changes are propagating, <code>GetChange</code> returns a status of
        <code>PENDING</code>. When propagation is complete,
        <code>GetChange</code> returns a status of <code>INSYNC</code>. Changes
        generally propagate to all Route 53 name servers within 60 seconds. For
        more information, see <a
        href=\"https://docs.aws.amazon.com/Route53/latest/APIReference/API_GetC\
        hange.html\">GetChange</a>.</p> <p> <b>Limits on
        ChangeResourceRecordSets Requests</b> </p> <p>For information about the
        limits on a <code>ChangeResourceRecordSets</code> request, see <a
        href=\"https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLim\
        itations.html\">Limits</a> in the <i>Amazon Route 53 Developer
        Guide</i>.</p>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ChangeResourceRecordSetsResponse"
        "480":
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHostedZone"
        "481":
          description: NoSuchHealthCheck
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHealthCheck"
        "482":
          description: InvalidChangeBatch
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidChangeBatch"
        "483":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "484":
          description: PriorRequestNotComplete
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PriorRequestNotComplete"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the hosted zone that contains the resource record sets
            that you want to change.
          schema:
            type: string
            maxLength: 32
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - ChangeBatch
              properties:
                ChangeBatch:
                  description: The information for a change request.
                  type: object
                  properties:
                    Comment:
                      $ref: "#/components/schemas/ResourceDescription"
                    Changes:
                      $ref: "#/components/schemas/Changes"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2013-04-01/tags/{ResourceType}/{ResourceId}":
    post:
      operationId: ChangeTagsForResource
      description: <p>Adds, edits, or deletes tags for a health check or a hosted zone.</p>
        <p>For information about using tags for cost allocation, see <a
        href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
        Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ChangeTagsForResourceResponse"
        "480":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: NoSuchHealthCheck
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHealthCheck"
        "482":
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHostedZone"
        "483":
          description: PriorRequestNotComplete
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PriorRequestNotComplete"
        "484":
          description: ThrottlingException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: ResourceType
          in: path
          required: true
          description: <p>The type of the resource.</p> <ul> <li> <p>The resource type for
            health checks is <code>healthcheck</code>.</p> </li> <li> <p>The
            resource type for hosted zones is <code>hostedzone</code>.</p> </li>
            </ul>
          schema:
            type: string
            enum:
              - healthcheck
              - hostedzone
        - name: ResourceId
          in: path
          required: true
          description: The ID of the resource for which you want to add, change, or delete
            tags.
          schema:
            type: string
            maxLength: 64
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              properties:
                AddTags:
                  description: <p>A complex type that contains a list of the tags that you
                    want to add to the specified health check or hosted zone
                    and/or the tags that you want to edit <code>Value</code>
                    for.</p> <p>You can add a maximum of 10 tags to a health
                    check or a hosted zone.</p>
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 1
                  maxItems: 10
                RemoveTagKeys:
                  description: A complex type that contains a list of the tags that you
                    want to delete from the specified health check or hosted
                    zone. You can specify up to 10 keys.
                  type: array
                  items:
                    $ref: "#/components/schemas/TagKey"
                  minItems: 1
                  maxItems: 10
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListTagsForResource
      description: <p>Lists tags for one health check or hosted zone. </p> <p>For
        information about using tags for cost allocation, see <a
        href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
        Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: NoSuchHealthCheck
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHealthCheck"
        "482":
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHostedZone"
        "483":
          description: PriorRequestNotComplete
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PriorRequestNotComplete"
        "484":
          description: ThrottlingException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: ResourceType
          in: path
          required: true
          description: <p>The type of the resource.</p> <ul> <li> <p>The resource type for
            health checks is <code>healthcheck</code>.</p> </li> <li> <p>The
            resource type for hosted zones is <code>hostedzone</code>.</p> </li>
            </ul>
          schema:
            type: string
            enum:
              - healthcheck
              - hostedzone
        - name: ResourceId
          in: path
          required: true
          description: The ID of the resource for which you want to retrieve tags.
          schema:
            type: string
            maxLength: 64
  /2013-04-01/healthcheck:
    post:
      operationId: CreateHealthCheck
      description: <p>Creates a new health check.</p> <p>For information about adding
        health checks to resource record sets, see <a
        href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_ResourceRecordSet.html#Route53-Type-ResourceRecordSet-HealthCheckId">HealthCheckId</a>
        in <a
        href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_ChangeResourceRecordSets.html">ChangeResourceRecordSets</a>.
        </p> <p> <b>ELB Load Balancers</b> </p> <p>If you're registering EC2
        instances with an Elastic Load Balancing (ELB) load balancer, do not
        create Amazon Route 53 health checks for the EC2 instances. When you
        register an EC2 instance with a load balancer, you configure settings
        for an ELB health check, which performs a similar function to a Route 53
        health check.</p> <p> <b>Private Hosted Zones</b> </p> <p>You can
        associate health checks with failover resource record sets in a private
        hosted zone. Note the following:</p> <ul> <li> <p>Route 53 health
        checkers are outside the VPC. To check the health of an endpoint within
        a VPC by IP address, you must assign a public IP address to the instance
        in the VPC.</p> </li> <li> <p>You can configure a health checker to
        check the health of an external resource that the instance relies on,
        such as a database server.</p> </li> <li> <p>You can create a CloudWatch
        metric, associate an alarm with the metric, and then create a health
        check that is based on the state of the alarm. For example, you might
        create a CloudWatch metric that checks the status of the Amazon EC2
        <code>StatusCheckFailed</code> metric, add an alarm to the metric, and
        then create a health check that is based on the state of the alarm. For
        information about creating CloudWatch metrics and alarms by using the
        CloudWatch console, see the <a
        href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/WhatIsCloudWatch.html">Amazon
        CloudWatch User Guide</a>.</p> </li> </ul>
      responses:
        "201":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateHealthCheckResponse"
        "480":
          description: TooManyHealthChecks
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyHealthChecks"
        "481":
          description: HealthCheckAlreadyExists
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HealthCheckAlreadyExists"
        "482":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - CallerReference
                - HealthCheckConfig
              properties:
                CallerReference:
                  description: <p>A unique string that identifies the request and that
                    allows you to retry a failed <code>CreateHealthCheck</code>
                    request without the risk of creating two identical health
                    checks:</p> <ul> <li> <p>If you send a
                    <code>CreateHealthCheck</code> request with the same
                    <code>CallerReference</code> and settings as a previous
                    request, and if the health check doesn't exist, Amazon Route
                    53 creates the health check. If the health check does exist,
                    Route 53 returns the settings for the existing health
                    check.</p> </li> <li> <p>If you send a
                    <code>CreateHealthCheck</code> request with the same
                    <code>CallerReference</code> as a deleted health check,
                    regardless of the settings, Route 53 returns a
                    <code>HealthCheckAlreadyExists</code> error.</p> </li> <li>
                    <p>If you send a <code>CreateHealthCheck</code> request with
                    the same <code>CallerReference</code> as an existing health
                    check but with different settings, Route 53 returns a
                    <code>HealthCheckAlreadyExists</code> error.</p> </li> <li>
                    <p>If you send a <code>CreateHealthCheck</code> request with
                    a unique <code>CallerReference</code> but settings identical
                    to an existing health check, Route 53 creates the health
                    check.</p> </li> </ul>
                  type: string
                  minLength: 1
                  maxLength: 64
                HealthCheckConfig:
                  description: A complex type that contains information about the health
                    check.
                  type: object
                  properties:
                    IPAddress:
                      $ref: "#/components/schemas/IPAddress"
                    Port:
                      $ref: "#/components/schemas/Port"
                    Type:
                      $ref: "#/components/schemas/HealthCheckType"
                    ResourcePath:
                      $ref: "#/components/schemas/ResourcePath"
                    FullyQualifiedDomainName:
                      $ref: "#/components/schemas/FullyQualifiedDomainName"
                    SearchString:
                      $ref: "#/components/schemas/SearchString"
                    RequestInterval:
                      $ref: "#/components/schemas/RequestInterval"
                    FailureThreshold:
                      $ref: "#/components/schemas/FailureThreshold"
                    MeasureLatency:
                      $ref: "#/components/schemas/MeasureLatency"
                    Inverted:
                      $ref: "#/components/schemas/Inverted"
                    Disabled:
                      $ref: "#/components/schemas/Disabled"
                    HealthThreshold:
                      $ref: "#/components/schemas/HealthThreshold"
                    ChildHealthChecks:
                      $ref: "#/components/schemas/ChildHealthCheckList"
                    EnableSNI:
                      $ref: "#/components/schemas/EnableSNI"
                    Regions:
                      $ref: "#/components/schemas/HealthCheckRegionList"
                    AlarmIdentifier:
                      $ref: "#/components/schemas/AlarmIdentifier"
                    InsufficientDataHealthStatus:
                      $ref: "#/components/schemas/InsufficientDataHealthStatus"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListHealthChecks
      description: "Retrieve a list of the health checks that are associated with the
        current AWS account. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListHealthChecksResponse"
        "480":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: IncompatibleVersion
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/IncompatibleVersion"
      parameters:
        - name: marker
          in: query
          required: false
          description: <p>If the value of <code>IsTruncated</code> in the previous response
            was <code>true</code>, you have more health checks. To get another
            group, submit another <code>ListHealthChecks</code> request. </p>
            <p>For the value of <code>marker</code>, specify the value of
            <code>NextMarker</code> from the previous response, which is the ID
            of the first health check that Amazon Route 53 will return if you
            submit another request.</p> <p>If the value of
            <code>IsTruncated</code> in the previous response was
            <code>false</code>, there are no more health checks to get.</p>
          schema:
            type: string
            maxLength: 64
        - name: maxitems
          in: query
          required: false
          description: "The maximum number of health checks that you want
            <code>ListHealthChecks</code> to return in response to the current
            request. Amazon Route 53 returns a maximum of 100 items. If you set
            <code>MaxItems</code> to a value greater than 100, Route 53 returns
            only the first 100 health checks. "
          schema:
            type: string
        - name: MaxItems
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
  /2013-04-01/hostedzone:
    post:
      operationId: CreateHostedZone
      description: <p>Creates a new public or private hosted zone. You create records in a
        public hosted zone to define how you want to route traffic on the
        internet for a domain, such as example.com, and its subdomains
        (apex.example.com, acme.example.com). You create records in a private
        hosted zone to define how you want to route traffic for a domain and its
        subdomains within one or more Amazon Virtual Private Clouds (Amazon
        VPCs). </p> <important> <p>You can't convert a public hosted zone to a
        private hosted zone or vice versa. Instead, you must create a new hosted
        zone with the same name and create new resource record sets.</p>
        </important> <p>For more information about charges for hosted zones, see
        <a href="http://aws.amazon.com/route53/pricing/">Amazon Route 53
        Pricing</a>.</p> <p>Note the following:</p> <ul> <li> <p>You can't
        create a hosted zone for a top-level domain (TLD) such as .com.</p>
        </li> <li> <p>For public hosted zones, Amazon Route 53 automatically
        creates a default SOA record and four NS records for the zone. For more
        information about SOA and NS records, see <a
        href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/SOA-NSrecords.html">NS
        and SOA Records that Route 53 Creates for a Hosted Zone</a> in the
        <i>Amazon Route 53 Developer Guide</i>.</p> <p>If you want to use the
        same name servers for multiple public hosted zones, you can optionally
        associate a reusable delegation set with the hosted zone. See the
        <code>DelegationSetId</code> element.</p> </li> <li> <p>If your domain
        is registered with a registrar other than Route 53, you must update the
        name servers with your registrar to make Route 53 the DNS service for
        the domain. For more information, see <a
        href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/MigratingDNS.html">Migrating
        DNS Service for an Existing Domain to Amazon Route 53</a> in the
        <i>Amazon Route 53 Developer Guide</i>. </p> </li> </ul> <p>When you
        submit a <code>CreateHostedZone</code> request, the initial status of
        the hosted zone is <code>PENDING</code>. For public hosted zones, this
        means that the NS and SOA records are not yet available on all Route 53
        DNS servers. When the NS and SOA records are available, the status of
        the zone changes to <code>INSYNC</code>.</p>
      responses:
        "201":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateHostedZoneResponse"
        "480":
          description: InvalidDomainName
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDomainName"
        "481":
          description: HostedZoneAlreadyExists
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HostedZoneAlreadyExists"
        "482":
          description: TooManyHostedZones
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyHostedZones"
        "483":
          description: InvalidVPCId
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCId"
        "484":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "485":
          description: DelegationSetNotAvailable
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DelegationSetNotAvailable"
        "486":
          description: ConflictingDomainExists
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConflictingDomainExists"
        "487":
          description: NoSuchDelegationSet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchDelegationSet"
        "488":
          description: DelegationSetNotReusable
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DelegationSetNotReusable"
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - Name
                - CallerReference
              properties:
                Name:
                  description: <p>The name of the domain. Specify a fully qualified domain
                    name, for example, <i>www.example.com</i>. The trailing dot
                    is optional; Amazon Route 53 assumes that the domain name is
                    fully qualified. This means that Route 53 treats
                    <i>www.example.com</i> (without a trailing dot) and
                    <i>www.example.com.</i> (with a trailing dot) as
                    identical.</p> <p>If you're creating a public hosted zone,
                    this is the name you have registered with your DNS
                    registrar. If your domain name is registered with a
                    registrar other than Route 53, change the name servers for
                    your domain to the set of <code>NameServers</code> that
                    <code>CreateHostedZone</code> returns in
                    <code>DelegationSet</code>.</p>
                  type: string
                  maxLength: 1024
                VPC:
                  description: (Private hosted zones only) A complex type that contains
                    information about an Amazon VPC.
                  type: object
                  properties:
                    VPCRegion:
                      $ref: "#/components/schemas/VPCRegion"
                    VPCId:
                      $ref: "#/components/schemas/VPCId"
                CallerReference:
                  description: A unique string that identifies the request and that allows
                    failed <code>CreateHostedZone</code> requests to be retried
                    without the risk of executing the operation twice. You must
                    use a unique <code>CallerReference</code> string every time
                    you submit a <code>CreateHostedZone</code> request.
                    <code>CallerReference</code> can be any unique string, for
                    example, a date/time stamp.
                  type: string
                  minLength: 1
                  maxLength: 128
                HostedZoneConfig:
                  description: A complex type that contains an optional comment about your
                    hosted zone. If you don't want to specify a comment, omit
                    both the <code>HostedZoneConfig</code> and
                    <code>Comment</code> elements.
                  type: object
                  properties:
                    Comment:
                      $ref: "#/components/schemas/ResourceDescription"
                    PrivateZone:
                      $ref: "#/components/schemas/IsPrivateZone"
                DelegationSetId:
                  description: If you want to associate a reusable delegation set with this
                    hosted zone, the ID that Amazon Route 53 assigned to the
                    reusable delegation set when you created it. For more
                    information about reusable delegation sets, see <a
                    href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_CreateReusableDelegationSet.html">CreateReusableDelegationSet</a>.
                  type: string
                  maxLength: 32
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListHostedZones
      description: <p>Retrieves a list of the public and private hosted zones that are
        associated with the current AWS account. The response includes a
        <code>HostedZones</code> child element for each hosted zone.</p>
        <p>Amazon Route 53 returns a maximum of 100 items in each response. If
        you have a lot of hosted zones, you can use the <code>maxitems</code>
        parameter to list them in groups of up to 100.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListHostedZonesResponse"
        "480":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: NoSuchDelegationSet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchDelegationSet"
        "482":
          description: DelegationSetNotReusable
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DelegationSetNotReusable"
      parameters:
        - name: marker
          in: query
          required: false
          description: <p>If the value of <code>IsTruncated</code> in the previous response
            was <code>true</code>, you have more hosted zones. To get more
            hosted zones, submit another <code>ListHostedZones</code> request.
            </p> <p>For the value of <code>marker</code>, specify the value of
            <code>NextMarker</code> from the previous response, which is the ID
            of the first hosted zone that Amazon Route 53 will return if you
            submit another request.</p> <p>If the value of
            <code>IsTruncated</code> in the previous response was
            <code>false</code>, there are no more hosted zones to get.</p>
          schema:
            type: string
            maxLength: 64
        - name: maxitems
          in: query
          required: false
          description: (Optional) The maximum number of hosted zones that you want Amazon
            Route 53 to return. If you have more than <code>maxitems</code>
            hosted zones, the value of <code>IsTruncated</code> in the response
            is <code>true</code>, and the value of <code>NextMarker</code> is
            the hosted zone ID of the first hosted zone that Route 53 will
            return if you submit another request.
          schema:
            type: string
        - name: delegationsetid
          in: query
          required: false
          description: "If you're using reusable delegation sets and you want to list all
            of the hosted zones that are associated with a reusable delegation
            set, specify the ID of that reusable delegation set. "
          schema:
            type: string
            maxLength: 32
        - name: MaxItems
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: Marker
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
  /2013-04-01/queryloggingconfig:
    post:
      operationId: CreateQueryLoggingConfig
      description: <p>Creates a configuration for DNS query logging. After you create a
        query logging configuration, Amazon Route 53 begins to publish log data
        to an Amazon CloudWatch Logs log group.</p> <p>DNS query logs contain
        information about the queries that Route 53 receives for a specified
        public hosted zone, such as the following:</p> <ul> <li> <p>Route 53
        edge location that responded to the DNS query</p> </li> <li> <p>Domain
        or subdomain that was requested</p> </li> <li> <p>DNS record type, such
        as A or AAAA</p> </li> <li> <p>DNS response code, such as
        <code>NoError</code> or <code>ServFail</code> </p> </li> </ul> <dl>
        <dt>Log Group and Resource Policy</dt> <dd> <p>Before you create a query
        logging configuration, perform the following operations.</p> <note>
        <p>If you create a query logging configuration using the Route 53
        console, Route 53 performs these operations automatically.</p> </note>
        <ol> <li> <p>Create a CloudWatch Logs log group, and make note of the
        ARN, which you specify when you create a query logging configuration.
        Note the following:</p> <ul> <li> <p>You must create the log group in
        the us-east-1 region.</p> </li> <li> <p>You must use the same AWS
        account to create the log group and the hosted zone that you want to
        configure query logging for.</p> </li> <li> <p>When you create log
        groups for query logging, we recommend that you use a consistent prefix,
        for example:</p> <p> <code>/aws/route53/<i>hosted zone name</i> </code>
        </p> <p>In the next step, you'll create a resource policy, which
        controls access to one or more log groups and the associated AWS
        resources, such as Route 53 hosted zones. There's a limit on the number
        of resource policies that you can create, so we recommend that you use a
        consistent prefix so you can use the same resource policy for all the
        log groups that you create for query logging.</p> </li> </ul> </li> <li>
        <p>Create a CloudWatch Logs resource policy, and give it the permissions
        that Route 53 needs to create log streams and to send query logs to log
        streams. For the value of <code>Resource</code>, specify the ARN for the
        log group that you created in the previous step. To use the same
        resource policy for all the CloudWatch Logs log groups that you created
        for query logging configurations, replace the hosted zone name with
        <code>*</code>, for example:</p> <p>
        <code>arn:aws:logs:us-east-1:123412341234:log-group:/aws/route53/*</code>
        </p> <note> <p>You can't use the CloudWatch console to create or edit a
        resource policy. You must use the CloudWatch API, one of the AWS SDKs,
        or the AWS CLI.</p> </note> </li> </ol> </dd> <dt>Log Streams and Edge
        Locations</dt> <dd> <p>When Route 53 finishes creating the configuration
        for DNS query logging, it does the following:</p> <ul> <li> <p>Creates a
        log stream for an edge location the first time that the edge location
        responds to DNS queries for the specified hosted zone. That log stream
        is used to log all queries that Route 53 responds to for that edge
        location.</p> </li> <li> <p>Begins to send query logs to the applicable
        log stream.</p> </li> </ul> <p>The name of each log stream is in the
        following format:</p> <p> <code> <i>hosted zone ID</i>/<i>edge location
        code</i> </code> </p> <p>The edge location code is a three-letter code
        and an arbitrarily assigned number, for example, DFW3. The three-letter
        code typically corresponds with the International Air Transport
        Association airport code for an airport near the edge location. (These
        abbreviations might change in the future.) For a list of edge locations,
        see "The Route 53 Global Network" on the <a
        href="http://aws.amazon.com/route53/details/">Route 53 Product
        Details</a> page.</p> </dd> <dt>Queries That Are Logged</dt> <dd>
        <p>Query logs contain only the queries that DNS resolvers forward to
        Route 53. If a DNS resolver has already cached the response to a query
        (such as the IP address for a load balancer for example.com), the
        resolver will continue to return the cached response. It doesn't forward
        another query to Route 53 until the TTL for the corresponding resource
        record set expires. Depending on how many DNS queries are submitted for
        a resource record set, and depending on the TTL for that resource record
        set, query logs might contain information about only one query out of
        every several thousand queries that are submitted to DNS. For more
        information about how DNS works, see <a
        href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/welcome-dns-service.html">Routing
        Internet Traffic to Your Website or Web Application</a> in the <i>Amazon
        Route 53 Developer Guide</i>.</p> </dd> <dt>Log File Format</dt> <dd>
        <p>For a list of the values in each query log and the format of each
        value, see <a
        href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/query-logs.html">Logging
        DNS Queries</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> </dd>
        <dt>Pricing</dt> <dd> <p>For information about charges for query logs,
        see <a href="http://aws.amazon.com/cloudwatch/pricing/">Amazon
        CloudWatch Pricing</a>.</p> </dd> <dt>How to Stop Logging</dt> <dd>
        <p>If you want Route 53 to stop sending query logs to CloudWatch Logs,
        delete the query logging configuration. For more information, see <a
        href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_DeleteQueryLoggingConfig.html">DeleteQueryLoggingConfig</a>.</p>
        </dd> </dl>
      responses:
        "201":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateQueryLoggingConfigResponse"
        "480":
          description: ConcurrentModification
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConcurrentModification"
        "481":
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHostedZone"
        "482":
          description: NoSuchCloudWatchLogsLogGroup
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchCloudWatchLogsLogGroup"
        "483":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "484":
          description: QueryLoggingConfigAlreadyExists
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/QueryLoggingConfigAlreadyExists"
        "485":
          description: InsufficientCloudWatchLogsResourcePolicy
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InsufficientCloudWatchLogsResourcePolicy"
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - HostedZoneId
                - CloudWatchLogsLogGroupArn
              properties:
                HostedZoneId:
                  description: The ID of the hosted zone that you want to log queries for.
                    You can log queries only for public hosted zones.
                  type: string
                  maxLength: 32
                CloudWatchLogsLogGroupArn:
                  description: <p>The Amazon Resource Name (ARN) for the log group that you
                    want to Amazon Route 53 to send query logs to. This is the
                    format of the ARN:</p>
                    <p>arn:aws:logs:<i>region</i>:<i>account-id</i>:log-group:<i>log_group_name</i>
                    </p> <p>To get the ARN for a log group, you can use the
                    CloudWatch console, the <a
                    href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeLogGroups.html">DescribeLogGroups</a>
                    API action, the <a
                    href="https://docs.aws.amazon.com/cli/latest/reference/logs/describe-log-groups.html">describe-log-groups</a>
                    command, or the applicable command in one of the AWS
                    SDKs.</p>
                  type: string
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListQueryLoggingConfigs
      description: <p>Lists the configurations for DNS query logging that are associated
        with the current AWS account or the configuration that is associated
        with a specified hosted zone.</p> <p>For more information about DNS
        query logs, see <a
        href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_CreateQueryLoggingConfig.html">CreateQueryLoggingConfig</a>.
        Additional information, including the format of DNS query logs, appears
        in <a
        href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/query-logs.html">Logging
        DNS Queries</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListQueryLoggingConfigsResponse"
        "480":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: InvalidPaginationToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidPaginationToken"
        "482":
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHostedZone"
      parameters:
        - name: hostedzoneid
          in: query
          required: false
          description: <p>(Optional) If you want to list the query logging configuration
            that is associated with a hosted zone, specify the ID in
            <code>HostedZoneId</code>. </p> <p>If you don't specify a hosted
            zone ID, <code>ListQueryLoggingConfigs</code> returns all of the
            configurations that are associated with the current AWS account.</p>
          schema:
            type: string
            maxLength: 32
        - name: nexttoken
          in: query
          required: false
          description: <p>(Optional) If the current AWS account has more than
            <code>MaxResults</code> query logging configurations, use
            <code>NextToken</code> to get the second and subsequent pages of
            results.</p> <p>For the first <code>ListQueryLoggingConfigs</code>
            request, omit this value.</p> <p>For the second and subsequent
            requests, get the value of <code>NextToken</code> from the previous
            response and specify that value for <code>NextToken</code> in the
            request.</p>
          schema:
            type: string
            maxLength: 256
        - name: maxresults
          in: query
          required: false
          description: <p>(Optional) The maximum number of query logging configurations
            that you want Amazon Route 53 to return in response to the current
            request. If the current AWS account has more than
            <code>MaxResults</code> configurations, use the value of <a
            href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_ListQueryLoggingConfigs.html#API_ListQueryLoggingConfigs_RequestSyntax">NextToken</a>
            in the response to get the next page of results.</p> <p>If you don't
            specify a value for <code>MaxResults</code>, Route 53 returns up to
            100 configurations.</p>
          schema:
            type: string
  /2013-04-01/delegationset:
    post:
      operationId: CreateReusableDelegationSet
      description: <p>Creates a delegation set (a group of four name servers) that can be
        reused by multiple hosted zones. If a hosted zoned ID is specified,
        <code>CreateReusableDelegationSet</code> marks the delegation set
        associated with that zone as reusable.</p> <note> <p>You can't associate
        a reusable delegation set with a private hosted zone.</p> </note> <p>For
        information about using a reusable delegation set to configure white
        label name servers, see <a
        href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/white-label-name-servers.html">Configuring
        White Label Name Servers</a>.</p> <p>The process for migrating existing
        hosted zones to use a reusable delegation set is comparable to the
        process for configuring white label name servers. You need to perform
        the following steps:</p> <ol> <li> <p>Create a reusable delegation
        set.</p> </li> <li> <p>Recreate hosted zones, and reduce the TTL to 60
        seconds or less.</p> </li> <li> <p>Recreate resource record sets in the
        new hosted zones.</p> </li> <li> <p>Change the registrar's name servers
        to use the name servers for the new hosted zones.</p> </li> <li>
        <p>Monitor traffic for the website or application.</p> </li> <li>
        <p>Change TTLs back to their original values.</p> </li> </ol> <p>If you
        want to migrate existing hosted zones to use a reusable delegation set,
        the existing hosted zones can't use any of the name servers that are
        assigned to the reusable delegation set. If one or more hosted zones do
        use one or more name servers that are assigned to the reusable
        delegation set, you can do one of the following:</p> <ul> <li> <p>For
        small numbers of hosted zones—up to a few hundred—it's relatively easy
        to create reusable delegation sets until you get one that has four name
        servers that don't overlap with any of the name servers in your hosted
        zones.</p> </li> <li> <p>For larger numbers of hosted zones, the easiest
        solution is to use more than one reusable delegation set.</p> </li> <li>
        <p>For larger numbers of hosted zones, you can also migrate hosted zones
        that have overlapping name servers to hosted zones that don't have
        overlapping name servers, then migrate the hosted zones again to use the
        reusable delegation set.</p> </li> </ul>
      responses:
        "201":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateReusableDelegationSetResponse"
        "480":
          description: DelegationSetAlreadyCreated
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DelegationSetAlreadyCreated"
        "481":
          description: LimitsExceeded
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LimitsExceeded"
        "482":
          description: HostedZoneNotFound
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HostedZoneNotFound"
        "483":
          description: InvalidArgument
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidArgument"
        "484":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "485":
          description: DelegationSetNotAvailable
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DelegationSetNotAvailable"
        "486":
          description: DelegationSetAlreadyReusable
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DelegationSetAlreadyReusable"
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - CallerReference
              properties:
                CallerReference:
                  description: A unique string that identifies the request, and that allows
                    you to retry failed <code>CreateReusableDelegationSet</code>
                    requests without the risk of executing the operation twice.
                    You must use a unique <code>CallerReference</code> string
                    every time you submit a
                    <code>CreateReusableDelegationSet</code> request.
                    <code>CallerReference</code> can be any unique string, for
                    example a date/time stamp.
                  type: string
                  minLength: 1
                  maxLength: 128
                HostedZoneId:
                  description: If you want to mark the delegation set for an existing
                    hosted zone as reusable, the ID for that hosted zone.
                  type: string
                  maxLength: 32
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListReusableDelegationSets
      description: Retrieves a list of the reusable delegation sets that are associated
        with the current AWS account.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListReusableDelegationSetsResponse"
        "480":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: marker
          in: query
          required: false
          description: <p>If the value of <code>IsTruncated</code> in the previous response
            was <code>true</code>, you have more reusable delegation sets. To
            get another group, submit another
            <code>ListReusableDelegationSets</code> request. </p> <p>For the
            value of <code>marker</code>, specify the value of
            <code>NextMarker</code> from the previous response, which is the ID
            of the first reusable delegation set that Amazon Route 53 will
            return if you submit another request.</p> <p>If the value of
            <code>IsTruncated</code> in the previous response was
            <code>false</code>, there are no more reusable delegation sets to
            get.</p>
          schema:
            type: string
            maxLength: 64
        - name: maxitems
          in: query
          required: false
          description: The number of reusable delegation sets that you want Amazon Route 53
            to return in the response to this request. If you specify a value
            greater than 100, Route 53 returns only the first 100 reusable
            delegation sets.
          schema:
            type: string
  /2013-04-01/trafficpolicy:
    post:
      operationId: CreateTrafficPolicy
      description: Creates a traffic policy, which you use to create multiple DNS resource
        record sets for one domain name (such as example.com) or one subdomain
        name (such as www.example.com).
      responses:
        "201":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateTrafficPolicyResponse"
        "480":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: TooManyTrafficPolicies
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTrafficPolicies"
        "482":
          description: TrafficPolicyAlreadyExists
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TrafficPolicyAlreadyExists"
        "483":
          description: InvalidTrafficPolicyDocument
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTrafficPolicyDocument"
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - Name
                - Document
              properties:
                Name:
                  description: The name of the traffic policy.
                  type: string
                  maxLength: 512
                Document:
                  description: The definition of this traffic policy in JSON format. For
                    more information, see <a
                    href="https://docs.aws.amazon.com/Route53/latest/APIReference/api-policies-traffic-policy-document-format.html">Traffic
                    Policy Document Format</a>.
                  type: string
                  maxLength: 102400
                Comment:
                  description: (Optional) Any comments that you want to include about the
                    traffic policy.
                  type: string
                  maxLength: 1024
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /2013-04-01/trafficpolicyinstance:
    post:
      operationId: CreateTrafficPolicyInstance
      description: Creates resource record sets in a specified hosted zone based on the
        settings in a specified traffic policy version. In addition,
        <code>CreateTrafficPolicyInstance</code> associates the resource record
        sets with a specified domain name (such as example.com) or subdomain
        name (such as www.example.com). Amazon Route 53 responds to DNS queries
        for the domain or subdomain name by using the resource record sets that
        <code>CreateTrafficPolicyInstance</code> created.
      responses:
        "201":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateTrafficPolicyInstanceResponse"
        "480":
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHostedZone"
        "481":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "482":
          description: TooManyTrafficPolicyInstances
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTrafficPolicyInstances"
        "483":
          description: NoSuchTrafficPolicy
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchTrafficPolicy"
        "484":
          description: TrafficPolicyInstanceAlreadyExists
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TrafficPolicyInstanceAlreadyExists"
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - HostedZoneId
                - Name
                - TTL
                - TrafficPolicyId
                - TrafficPolicyVersion
              properties:
                HostedZoneId:
                  description: The ID of the hosted zone that you want Amazon Route 53 to
                    create resource record sets in by using the configuration in
                    a traffic policy.
                  type: string
                  maxLength: 32
                Name:
                  description: The domain name (such as example.com) or subdomain name
                    (such as www.example.com) for which Amazon Route 53 responds
                    to DNS queries by using the resource record sets that Route
                    53 creates for this traffic policy instance.
                  type: string
                  maxLength: 1024
                TTL:
                  description: (Optional) The TTL that you want Amazon Route 53 to assign
                    to all of the resource record sets that it creates in the
                    specified hosted zone.
                  type: integer
                  minimum: 0
                  maximum: 2147483647
                TrafficPolicyId:
                  description: The ID of the traffic policy that you want to use to create
                    resource record sets in the specified hosted zone.
                  type: string
                  minLength: 1
                  maxLength: 36
                TrafficPolicyVersion:
                  description: The version of the traffic policy that you want to use to
                    create resource record sets in the specified hosted zone.
                  type: integer
                  minimum: 1
                  maximum: 1000
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2013-04-01/trafficpolicy/{Id}":
    post:
      operationId: CreateTrafficPolicyVersion
      description: Creates a new version of an existing traffic policy. When you create a
        new version of a traffic policy, you specify the ID of the traffic
        policy that you want to update and a JSON-formatted document that
        describes the new version. You use traffic policies to create multiple
        DNS resource record sets for one domain name (such as example.com) or
        one subdomain name (such as www.example.com). You can create a maximum
        of 1000 versions of a traffic policy. If you reach the limit and need to
        create another version, you'll need to start a new traffic policy.
      responses:
        "201":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateTrafficPolicyVersionResponse"
        "480":
          description: NoSuchTrafficPolicy
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchTrafficPolicy"
        "481":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "482":
          description: TooManyTrafficPolicyVersionsForCurrentPolicy
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTrafficPolicyVersionsForCurrentP\
                  olicy"
        "483":
          description: ConcurrentModification
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConcurrentModification"
        "484":
          description: InvalidTrafficPolicyDocument
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTrafficPolicyDocument"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the traffic policy for which you want to create a new
            version.
          schema:
            type: string
            minLength: 1
            maxLength: 36
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - Document
              properties:
                Document:
                  description: The definition of this version of the traffic policy, in
                    JSON format. You specified the JSON in the
                    <code>CreateTrafficPolicyVersion</code> request. For more
                    information about the JSON format, see <a
                    href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_CreateTrafficPolicy.html">CreateTrafficPolicy</a>.
                  type: string
                  maxLength: 102400
                Comment:
                  description: The comment that you specified in the
                    <code>CreateTrafficPolicyVersion</code> request, if any.
                  type: string
                  maxLength: 1024
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2013-04-01/hostedzone/{Id}/authorizevpcassociation":
    post:
      operationId: CreateVPCAssociationAuthorization
      description: <p>Authorizes the AWS account that created a specified VPC to submit an
        <code>AssociateVPCWithHostedZone</code> request to associate the VPC
        with a specified hosted zone that was created by a different account. To
        submit a <code>CreateVPCAssociationAuthorization</code> request, you
        must use the account that created the hosted zone. After you authorize
        the association, use the account that created the VPC to submit an
        <code>AssociateVPCWithHostedZone</code> request.</p> <note> <p>If you
        want to associate multiple VPCs that you created by using one account
        with a hosted zone that you created by using a different account, you
        must submit one authorization request for each VPC.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateVPCAssociationAuthorizationRespon\
                  se"
        "480":
          description: ConcurrentModification
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConcurrentModification"
        "481":
          description: TooManyVPCAssociationAuthorizations
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyVPCAssociationAuthorizations"
        "482":
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHostedZone"
        "483":
          description: InvalidVPCId
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCId"
        "484":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the private hosted zone that you want to authorize
            associating a VPC with.
          schema:
            type: string
            maxLength: 32
      requestBody:
        $ref: "#/components/requestBodies/CreateVPCAssociationAuthorizationBody"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListVPCAssociationAuthorizations
      description: <p>Gets a list of the VPCs that were created by other accounts and that
        can be associated with a specified hosted zone because you've submitted
        one or more <code>CreateVPCAssociationAuthorization</code> requests.
        </p> <p>The response includes a <code>VPCs</code> element with a
        <code>VPC</code> child element for each VPC that can be associated with
        the hosted zone.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListVPCAssociationAuthorizationsResponse"
        "480":
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHostedZone"
        "481":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "482":
          description: InvalidPaginationToken
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidPaginationToken"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the hosted zone for which you want a list of VPCs that can
            be associated with the hosted zone.
          schema:
            type: string
            maxLength: 32
        - name: nexttoken
          in: query
          required: false
          description: " <i>Optional</i>: If a response includes a <code>NextToken</code>
            element, there are more VPCs that can be associated with the
            specified hosted zone. To get the next page of results, submit
            another request, and include the value of <code>NextToken</code>
            from the response in the <code>nexttoken</code> parameter in another
            <code>ListVPCAssociationAuthorizations</code> request."
          schema:
            type: string
            maxLength: 256
        - name: maxresults
          in: query
          required: false
          description: " <i>Optional</i>: An integer that specifies the maximum number of
            VPCs that you want Amazon Route 53 to return. If you don't specify a
            value for <code>MaxResults</code>, Route 53 returns up to 50 VPCs
            per page."
          schema:
            type: string
  "/2013-04-01/healthcheck/{HealthCheckId}":
    delete:
      operationId: DeleteHealthCheck
      description: <p>Deletes a health check.</p> <important> <p>Amazon Route 53 does not
        prevent you from deleting a health check even if the health check is
        associated with one or more resource record sets. If you delete a health
        check and you don't update the associated resource record sets, the
        future status of the health check can't be predicted and may change.
        This will affect the routing of DNS queries for your DNS failover
        configuration. For more information, see <a
        href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/health-checks-creating-deleting.html#health-checks-deleting.html">Replacing
        and Deleting Health Checks</a> in the <i>Amazon Route 53 Developer
        Guide</i>.</p> </important>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteHealthCheckResponse"
        "480":
          description: NoSuchHealthCheck
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHealthCheck"
        "481":
          description: HealthCheckInUse
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HealthCheckInUse"
        "482":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: HealthCheckId
          in: path
          required: true
          description: The ID of the health check that you want to delete.
          schema:
            type: string
            maxLength: 64
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetHealthCheck
      description: Gets information about a specified health check.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetHealthCheckResponse"
        "480":
          description: NoSuchHealthCheck
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHealthCheck"
        "481":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "482":
          description: IncompatibleVersion
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/IncompatibleVersion"
      parameters:
        - name: HealthCheckId
          in: path
          required: true
          description: The identifier that Amazon Route 53 assigned to the health check
            when you created it. When you add or update a resource record set,
            you use this value to specify which health check to use. The value
            can be up to 64 characters long.
          schema:
            type: string
            maxLength: 64
    post:
      operationId: UpdateHealthCheck
      description: <p>Updates an existing health check. Note that some values can't be
        updated. </p> <p>For more information about updating health checks, see
        <a
        href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/health-checks-creating-deleting.html">Creating,
        Updating, and Deleting Health Checks</a> in the <i>Amazon Route 53
        Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UpdateHealthCheckResponse"
        "480":
          description: NoSuchHealthCheck
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHealthCheck"
        "481":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "482":
          description: HealthCheckVersionMismatch
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HealthCheckVersionMismatch"
      parameters:
        - name: HealthCheckId
          in: path
          required: true
          description: The ID for the health check for which you want detailed information.
            When you created the health check, <code>CreateHealthCheck</code>
            returned the ID in the response, in the <code>HealthCheckId</code>
            element.
          schema:
            type: string
            maxLength: 64
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - AlarmIdentifier
              properties:
                HealthCheckVersion:
                  description: <p>A sequential counter that Amazon Route 53 sets to
                    <code>1</code> when you create a health check and increments
                    by 1 each time you update settings for the health check.</p>
                    <p>We recommend that you use <code>GetHealthCheck</code> or
                    <code>ListHealthChecks</code> to get the current value of
                    <code>HealthCheckVersion</code> for the health check that
                    you want to update, and that you include that value in your
                    <code>UpdateHealthCheck</code> request. This prevents Route
                    53 from overwriting an intervening update:</p> <ul> <li>
                    <p>If the value in the <code>UpdateHealthCheck</code>
                    request matches the value of <code>HealthCheckVersion</code>
                    in the health check, Route 53 updates the health check with
                    the new settings.</p> </li> <li> <p>If the value of
                    <code>HealthCheckVersion</code> in the health check is
                    greater, the health check was changed after you got the
                    version number. Route 53 does not update the health check,
                    and it returns a <code>HealthCheckVersionMismatch</code>
                    error.</p> </li> </ul>
                  type: integer
                  minimum: 1
                IPAddress:
                  description: "<p>The IPv4 or IPv6 IP address for the endpoint that you
                    want Amazon Route 53 to perform health checks on. If you
                    don't specify a value for <code>IPAddress</code>, Route 53
                    sends a DNS request to resolve the domain name that you
                    specify in <code>FullyQualifiedDomainName</code> at the
                    interval that you specify in <code>RequestInterval</code>.
                    Using an IP address that is returned by DNS, Route 53 then
                    checks the health of the endpoint.</p> <p>Use one of the
                    following formats for the value of <code>IPAddress</code>:
                    </p> <ul> <li> <p> <b>IPv4 address</b>: four values between
                    0 and 255, separated by periods (.), for example,
                    <code>192.0.2.44</code>.</p> </li> <li> <p> <b>IPv6
                    address</b>: eight groups of four hexadecimal values,
                    separated by colons (:), for example,
                    <code>2001:0db8:85a3:0000:0000:abcd:0001:2345</code>. You
                    can also shorten IPv6 addresses as described in RFC 5952,
                    for example, <code>2001:db8:85a3::abcd:1:2345</code>.</p>
                    </li> </ul> <p>If the endpoint is an EC2 instance, we
                    recommend that you create an Elastic IP address, associate
                    it with your EC2 instance, and specify the Elastic IP
                    address for <code>IPAddress</code>. This ensures that the IP
                    address of your instance never changes. For more
                    information, see the applicable documentation:</p> <ul> <li>
                    <p>Linux: <a
                    href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/\
                    elastic-ip-addresses-eip.html\">Elastic IP Addresses
                    (EIP)</a> in the <i>Amazon EC2 User Guide for Linux
                    Instances</i> </p> </li> <li> <p>Windows: <a
                    href=\"https://docs.aws.amazon.com/AWSEC2/latest/WindowsGui\
                    de/elastic-ip-addresses-eip.html\">Elastic IP Addresses
                    (EIP)</a> in the <i>Amazon EC2 User Guide for Windows
                    Instances</i> </p> </li> </ul> <note> <p>If a health check
                    already has a value for <code>IPAddress</code>, you can
                    change the value. However, you can't update an existing
                    health check to add or remove the value of
                    <code>IPAddress</code>. </p> </note> <p>For more
                    information, see <a
                    href=\"https://docs.aws.amazon.com/Route53/latest/APIRefere\
                    nce/API_UpdateHealthCheck.html#Route53-UpdateHealthCheck-re\
                    quest-FullyQualifiedDomainName\">FullyQualifiedDomainName</\
                    a>. </p> <p>Constraints: Route 53 can't check the health of
                    endpoints for which the IP address is in local, private,
                    non-routable, or multicast ranges. For more information
                    about IP addresses for which you can't create health checks,
                    see the following documents:</p> <ul> <li> <p> <a
                    href=\"https://tools.ietf.org/html/rfc5735\">RFC 5735,
                    Special Use IPv4 Addresses</a> </p> </li> <li> <p> <a
                    href=\"https://tools.ietf.org/html/rfc6598\">RFC 6598,
                    IANA-Reserved IPv4 Prefix for Shared Address Space</a> </p>
                    </li> <li> <p> <a
                    href=\"https://tools.ietf.org/html/rfc5156\">RFC 5156,
                    Special-Use IPv6 Addresses</a> </p> </li> </ul>"
                  type: string
                  pattern: (^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$|^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$)
                  maxLength: 45
                Port:
                  description: The port on the endpoint on which you want Amazon Route 53
                    to perform health checks.
                  type: integer
                  minimum: 1
                  maximum: 65535
                ResourcePath:
                  description: <p>The path that you want Amazon Route 53 to request when
                    performing health checks. The path can be any value for
                    which your endpoint will return an HTTP status code of 2xx
                    or 3xx when the endpoint is healthy, for example the file
                    /docs/route53-health-check.html. You can also include query
                    string parameters, for example,
                    <code>/welcome.html?language=jp&amp;login=y</code>. </p>
                    <p>Specify this value only if you want to change it.</p>
                  type: string
                  maxLength: 255
                FullyQualifiedDomainName:
                  description: <p>Amazon Route 53 behavior depends on whether you specify a
                    value for <code>IPAddress</code>.</p> <note> <p>If a health
                    check already has a value for <code>IPAddress</code>, you
                    can change the value. However, you can't update an existing
                    health check to add or remove the value of
                    <code>IPAddress</code>. </p> </note> <p> <b>If you specify a
                    value for</b> <code>IPAddress</code>:</p> <p>Route 53 sends
                    health check requests to the specified IPv4 or IPv6 address
                    and passes the value of
                    <code>FullyQualifiedDomainName</code> in the
                    <code>Host</code> header for all health checks except TCP
                    health checks. This is typically the fully qualified DNS
                    name of the endpoint on which you want Route 53 to perform
                    health checks.</p> <p>When Route 53 checks the health of an
                    endpoint, here is how it constructs the <code>Host</code>
                    header:</p> <ul> <li> <p>If you specify a value of
                    <code>80</code> for <code>Port</code> and <code>HTTP</code>
                    or <code>HTTP_STR_MATCH</code> for <code>Type</code>, Route
                    53 passes the value of <code>FullyQualifiedDomainName</code>
                    to the endpoint in the <code>Host</code> header.</p> </li>
                    <li> <p>If you specify a value of <code>443</code> for
                    <code>Port</code> and <code>HTTPS</code> or
                    <code>HTTPS_STR_MATCH</code> for <code>Type</code>, Route 53
                    passes the value of <code>FullyQualifiedDomainName</code> to
                    the endpoint in the <code>Host</code> header.</p> </li> <li>
                    <p>If you specify another value for <code>Port</code> and
                    any value except <code>TCP</code> for <code>Type</code>,
                    Route 53 passes <i>
                    <code>FullyQualifiedDomainName</code>:<code>Port</code> </i>
                    to the endpoint in the <code>Host</code> header.</p> </li>
                    </ul> <p>If you don't specify a value for
                    <code>FullyQualifiedDomainName</code>, Route 53 substitutes
                    the value of <code>IPAddress</code> in the <code>Host</code>
                    header in each of the above cases.</p> <p> <b>If you don't
                    specify a value for</b> <code>IPAddress</code>:</p> <p>If
                    you don't specify a value for <code>IPAddress</code>, Route
                    53 sends a DNS request to the domain that you specify in
                    <code>FullyQualifiedDomainName</code> at the interval you
                    specify in <code>RequestInterval</code>. Using an IPv4
                    address that is returned by DNS, Route 53 then checks the
                    health of the endpoint.</p> <note> <p>If you don't specify a
                    value for <code>IPAddress</code>, Route 53 uses only IPv4 to
                    send health checks to the endpoint. If there's no resource
                    record set with a type of A for the name that you specify
                    for <code>FullyQualifiedDomainName</code>, the health check
                    fails with a "DNS resolution failed" error.</p> </note>
                    <p>If you want to check the health of weighted, latency, or
                    failover resource record sets and you choose to specify the
                    endpoint only by <code>FullyQualifiedDomainName</code>, we
                    recommend that you create a separate health check for each
                    endpoint. For example, create a health check for each HTTP
                    server that is serving content for www.example.com. For the
                    value of <code>FullyQualifiedDomainName</code>, specify the
                    domain name of the server (such as
                    <code>us-east-2-www.example.com</code>), not the name of the
                    resource record sets (www.example.com).</p> <important>
                    <p>In this configuration, if the value of
                    <code>FullyQualifiedDomainName</code> matches the name of
                    the resource record sets and you then associate the health
                    check with those resource record sets, health check results
                    will be unpredictable.</p> </important> <p>In addition, if
                    the value of <code>Type</code> is <code>HTTP</code>,
                    <code>HTTPS</code>, <code>HTTP_STR_MATCH</code>, or
                    <code>HTTPS_STR_MATCH</code>, Route 53 passes the value of
                    <code>FullyQualifiedDomainName</code> in the
                    <code>Host</code> header, as it does when you specify a
                    value for <code>IPAddress</code>. If the value of
                    <code>Type</code> is <code>TCP</code>, Route 53 doesn't pass
                    a <code>Host</code> header.</p>
                  type: string
                  maxLength: 255
                SearchString:
                  description: If the value of <code>Type</code> is
                    <code>HTTP_STR_MATCH</code> or <code>HTTP_STR_MATCH</code>,
                    the string that you want Amazon Route 53 to search for in
                    the response body from the specified resource. If the string
                    appears in the response body, Route 53 considers the
                    resource healthy. (You can't change the value of
                    <code>Type</code> when you update a health check.)
                  type: string
                  maxLength: 255
                FailureThreshold:
                  description: <p>The number of consecutive health checks that an endpoint
                    must pass or fail for Amazon Route 53 to change the current
                    status of the endpoint from unhealthy to healthy or vice
                    versa. For more information, see <a
                    href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-determining-health-of-endpoints.html">How
                    Amazon Route 53 Determines Whether an Endpoint Is
                    Healthy</a> in the <i>Amazon Route 53 Developer
                    Guide</i>.</p> <p>If you don't specify a value for
                    <code>FailureThreshold</code>, the default value is three
                    health checks.</p>
                  type: integer
                  minimum: 1
                  maximum: 10
                Inverted:
                  description: Specify whether you want Amazon Route 53 to invert the
                    status of a health check, for example, to consider a health
                    check unhealthy when it otherwise would be considered
                    healthy.
                  type: boolean
                Disabled:
                  description: <p>Stops Route 53 from performing health checks. When you
                    disable a health check, here's what happens:</p> <ul> <li>
                    <p> <b>Health checks that check the health of endpoints:</b>
                    Route 53 stops submitting requests to your application,
                    server, or other resource.</p> </li> <li> <p> <b>Calculated
                    health checks:</b> Route 53 stops aggregating the status of
                    the referenced health checks.</p> </li> <li> <p> <b>Health
                    checks that monitor CloudWatch alarms:</b> Route 53 stops
                    monitoring the corresponding CloudWatch metrics.</p> </li>
                    </ul> <p>After you disable a health check, Route 53
                    considers the status of the health check to always be
                    healthy. If you configured DNS failover, Route 53 continues
                    to route traffic to the corresponding resources. If you want
                    to stop routing traffic to a resource, change the value of
                    <a
                    href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_UpdateHealthCheck.html#Route53-UpdateHealthCheck-request-Inverted">Inverted</a>.
                    </p> <p>Charges for a health check still apply when the
                    health check is disabled. For more information, see <a
                    href="http://aws.amazon.com/route53/pricing/">Amazon Route
                    53 Pricing</a>.</p>
                  type: boolean
                HealthThreshold:
                  description: <p>The number of child health checks that are associated
                    with a <code>CALCULATED</code> health that Amazon Route 53
                    must consider healthy for the <code>CALCULATED</code> health
                    check to be considered healthy. To specify the child health
                    checks that you want to associate with a
                    <code>CALCULATED</code> health check, use the
                    <code>ChildHealthChecks</code> and
                    <code>ChildHealthCheck</code> elements.</p> <p>Note the
                    following:</p> <ul> <li> <p>If you specify a number greater
                    than the number of child health checks, Route 53 always
                    considers this health check to be unhealthy.</p> </li> <li>
                    <p>If you specify <code>0</code>, Route 53 always considers
                    this health check to be healthy.</p> </li> </ul>
                  type: integer
                  minimum: 0
                  maximum: 256
                ChildHealthChecks:
                  description: A complex type that contains one
                    <code>ChildHealthCheck</code> element for each health check
                    that you want to associate with a <code>CALCULATED</code>
                    health check.
                  type: array
                  items:
                    $ref: "#/components/schemas/HealthCheckId"
                  maxItems: 256
                EnableSNI:
                  description: <p>Specify whether you want Amazon Route 53 to send the
                    value of <code>FullyQualifiedDomainName</code> to the
                    endpoint in the <code>client_hello</code> message during
                    <code>TLS</code> negotiation. This allows the endpoint to
                    respond to <code>HTTPS</code> health check requests with the
                    applicable SSL/TLS certificate.</p> <p>Some endpoints
                    require that HTTPS requests include the host name in the
                    <code>client_hello</code> message. If you don't enable SNI,
                    the status of the health check will be SSL alert
                    <code>handshake_failure</code>. A health check can also have
                    that status for other reasons. If SNI is enabled and you're
                    still getting the error, check the SSL/TLS configuration on
                    your endpoint and confirm that your certificate is
                    valid.</p> <p>The SSL/TLS certificate on your endpoint
                    includes a domain name in the <code>Common Name</code> field
                    and possibly several more in the <code>Subject Alternative
                    Names</code> field. One of the domain names in the
                    certificate should match the value that you specify for
                    <code>FullyQualifiedDomainName</code>. If the endpoint
                    responds to the <code>client_hello</code> message with a
                    certificate that does not include the domain name that you
                    specified in <code>FullyQualifiedDomainName</code>, a health
                    checker will retry the handshake. In the second attempt, the
                    health checker will omit
                    <code>FullyQualifiedDomainName</code> from the
                    <code>client_hello</code> message.</p>
                  type: boolean
                Regions:
                  description: A complex type that contains one <code>Region</code> element
                    for each region that you want Amazon Route 53 health
                    checkers to check the specified endpoint from.
                  type: array
                  items:
                    $ref: "#/components/schemas/HealthCheckRegion"
                  minItems: 3
                  maxItems: 64
                AlarmIdentifier:
                  description: A complex type that identifies the CloudWatch alarm that you
                    want Amazon Route 53 health checkers to use to determine
                    whether the specified health check is healthy.
                  type: object
                  properties:
                    Region:
                      $ref: "#/components/schemas/CloudWatchRegion"
                    Name:
                      $ref: "#/components/schemas/AlarmName"
                InsufficientDataHealthStatus:
                  description: "<p>When CloudWatch has insufficient data about the metric
                    to determine the alarm state, the status that you want
                    Amazon Route 53 to assign to the health check:</p> <ul> <li>
                    <p> <code>Healthy</code>: Route 53 considers the health
                    check to be healthy.</p> </li> <li> <p>
                    <code>Unhealthy</code>: Route 53 considers the health check
                    to be unhealthy.</p> </li> <li> <p>
                    <code>LastKnownStatus</code>: Route 53 uses the status of
                    the health check from the last time CloudWatch had
                    sufficient data to determine the alarm state. For new health
                    checks that have no last known status, the default status
                    for the health check is healthy.</p> </li> </ul>"
                  type: string
                  enum:
                    - Healthy
                    - Unhealthy
                    - LastKnownStatus
                ResetElements:
                  description: '<p>A complex type that contains one
                    <code>ResettableElementName</code> element for each element
                    that you want to reset to the default value. Valid values
                    for <code>ResettableElementName</code> include the
                    following:</p> <ul> <li> <p> <code>ChildHealthChecks</code>:
                    Amazon Route 53 resets <a
                    href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_HealthCheckConfig.html#Route53-Type-HealthCheckConfig-ChildHealthChecks">ChildHealthChecks</a>
                    to null.</p> </li> <li> <p>
                    <code>FullyQualifiedDomainName</code>: Route 53 resets <a
                    href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_UpdateHealthCheck.html#Route53-UpdateHealthCheck-request-FullyQualifiedDomainName">FullyQualifiedDomainName</a>.
                    to null.</p> </li> <li> <p> <code>Regions</code>: Route 53
                    resets the <a
                    href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_HealthCheckConfig.html#Route53-Type-HealthCheckConfig-Regions">Regions</a>
                    list to the default set of regions. </p> </li> <li> <p>
                    <code>ResourcePath</code>: Route 53 resets <a
                    href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_HealthCheckConfig.html#Route53-Type-HealthCheckConfig-ResourcePath">ResourcePath</a>
                    to null.</p> </li> </ul>'
                  type: array
                  items:
                    $ref: "#/components/schemas/ResettableElementName"
                  maxItems: 64
        required: true
  "/2013-04-01/hostedzone/{Id}":
    delete:
      operationId: DeleteHostedZone
      description: <p>Deletes a hosted zone.</p> <p>If the hosted zone was created by
        another service, such as AWS Cloud Map, see <a
        href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DeleteHostedZone.html#delete-public-hosted-zone-created-by-another-service">Deleting
        Public Hosted Zones That Were Created by Another Service</a> in the
        <i>Amazon Route 53 Developer Guide</i> for information about how to
        delete it. (The process is the same for public and private hosted zones
        that were created by another service.)</p> <p>If you want to keep your
        domain registration but you want to stop routing internet traffic to
        your website or web application, we recommend that you delete resource
        record sets in the hosted zone instead of deleting the hosted zone.</p>
        <important> <p>If you delete a hosted zone, you can't undelete it. You
        must create a new hosted zone and update the name servers for your
        domain registration, which can require up to 48 hours to take effect.
        (If you delegated responsibility for a subdomain to a hosted zone and
        you delete the child hosted zone, you must update the name servers in
        the parent hosted zone.) In addition, if you delete a hosted zone,
        someone could hijack the domain and route traffic to their own resources
        using your domain name.</p> </important> <p>If you want to avoid the
        monthly charge for the hosted zone, you can transfer DNS service for the
        domain to a free DNS service. When you transfer DNS service, you have to
        update the name servers for the domain registration. If the domain is
        registered with Route 53, see <a
        href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_UpdateDomainNameservers.html">UpdateDomainNameservers</a>
        for information about how to replace Route 53 name servers with name
        servers for the new DNS service. If the domain is registered with
        another registrar, use the method provided by the registrar to update
        name servers for the domain registration. For more information, perform
        an internet search on "free DNS service."</p> <p>You can delete a hosted
        zone only if it contains only the default SOA record and NS resource
        record sets. If the hosted zone contains other resource record sets, you
        must delete them before you can delete the hosted zone. If you try to
        delete a hosted zone that contains other resource record sets, the
        request fails, and Route 53 returns a <code>HostedZoneNotEmpty</code>
        error. For information about deleting records from your hosted zone, see
        <a
        href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_ChangeResourceRecordSets.html">ChangeResourceRecordSets</a>.</p>
        <p>To verify that the hosted zone has been deleted, do one of the
        following:</p> <ul> <li> <p>Use the <code>GetHostedZone</code> action to
        request information about the hosted zone.</p> </li> <li> <p>Use the
        <code>ListHostedZones</code> action to get a list of the hosted zones
        associated with the current AWS account.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteHostedZoneResponse"
        "480":
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHostedZone"
        "481":
          description: HostedZoneNotEmpty
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HostedZoneNotEmpty"
        "482":
          description: PriorRequestNotComplete
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PriorRequestNotComplete"
        "483":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "484":
          description: InvalidDomainName
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDomainName"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the hosted zone you want to delete.
          schema:
            type: string
            maxLength: 32
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetHostedZone
      description: Gets information about a specified hosted zone including the four name
        servers assigned to the hosted zone.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetHostedZoneResponse"
        "480":
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHostedZone"
        "481":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the hosted zone that you want to get information about.
          schema:
            type: string
            maxLength: 32
    post:
      operationId: UpdateHostedZoneComment
      description: Updates the comment for a specified hosted zone.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UpdateHostedZoneCommentResponse"
        "480":
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHostedZone"
        "481":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID for the hosted zone that you want to update the comment for.
          schema:
            type: string
            maxLength: 32
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              properties:
                Comment:
                  description: The new comment for the hosted zone. If you don't specify a
                    value for <code>Comment</code>, Amazon Route 53 deletes the
                    existing value of the <code>Comment</code> element, if any.
                  type: string
                  maxLength: 256
        required: true
  "/2013-04-01/queryloggingconfig/{Id}":
    delete:
      operationId: DeleteQueryLoggingConfig
      description: <p>Deletes a configuration for DNS query logging. If you delete a
        configuration, Amazon Route 53 stops sending query logs to CloudWatch
        Logs. Route 53 doesn't delete any logs that are already in CloudWatch
        Logs.</p> <p>For more information about DNS query logs, see <a
        href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_CreateQueryLoggingConfig.html">CreateQueryLoggingConfig</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteQueryLoggingConfigResponse"
        "480":
          description: ConcurrentModification
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConcurrentModification"
        "481":
          description: NoSuchQueryLoggingConfig
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchQueryLoggingConfig"
        "482":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: Id
          in: path
          required: true
          description: "The ID of the configuration that you want to delete. "
          schema:
            type: string
            minLength: 1
            maxLength: 36
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetQueryLoggingConfig
      description: <p>Gets information about a specified configuration for DNS query
        logging.</p> <p>For more information about DNS query logs, see <a
        href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_CreateQueryLoggingConfig.html">CreateQueryLoggingConfig</a>
        and <a
        href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/query-logs.html">Logging
        DNS Queries</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetQueryLoggingConfigResponse"
        "480":
          description: NoSuchQueryLoggingConfig
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchQueryLoggingConfig"
        "481":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the configuration for DNS query logging that you want to
            get information about.
          schema:
            type: string
            minLength: 1
            maxLength: 36
  "/2013-04-01/delegationset/{Id}":
    delete:
      operationId: DeleteReusableDelegationSet
      description: <p>Deletes a reusable delegation set.</p> <important> <p>You can delete
        a reusable delegation set only if it isn't associated with any hosted
        zones.</p> </important> <p>To verify that the reusable delegation set is
        not associated with any hosted zones, submit a <a
        href="https://docs.aws.amazon.com/Route53/latest/APIReference/API_GetReusableDelegationSet.html">GetReusableDelegationSet</a>
        request and specify the ID of the reusable delegation set that you want
        to delete.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteReusableDelegationSetResponse"
        "480":
          description: NoSuchDelegationSet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchDelegationSet"
        "481":
          description: DelegationSetInUse
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DelegationSetInUse"
        "482":
          description: DelegationSetNotReusable
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DelegationSetNotReusable"
        "483":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the reusable delegation set that you want to delete.
          schema:
            type: string
            maxLength: 32
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetReusableDelegationSet
      description: Retrieves information about a specified reusable delegation set,
        including the four name servers that are assigned to the delegation set.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetReusableDelegationSetResponse"
        "480":
          description: NoSuchDelegationSet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchDelegationSet"
        "481":
          description: DelegationSetNotReusable
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DelegationSetNotReusable"
        "482":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the reusable delegation set that you want to get a list of
            name servers for.
          schema:
            type: string
            maxLength: 32
  "/2013-04-01/trafficpolicy/{Id}/{Version}":
    delete:
      operationId: DeleteTrafficPolicy
      description: Deletes a traffic policy.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteTrafficPolicyResponse"
        "480":
          description: NoSuchTrafficPolicy
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchTrafficPolicy"
        "481":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "482":
          description: TrafficPolicyInUse
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TrafficPolicyInUse"
        "483":
          description: ConcurrentModification
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConcurrentModification"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the traffic policy that you want to delete.
          schema:
            type: string
            minLength: 1
            maxLength: 36
        - name: Version
          in: path
          required: true
          description: The version number of the traffic policy that you want to delete.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetTrafficPolicy
      description: Gets information about a specific traffic policy version.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetTrafficPolicyResponse"
        "480":
          description: NoSuchTrafficPolicy
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchTrafficPolicy"
        "481":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the traffic policy that you want to get information about.
          schema:
            type: string
            minLength: 1
            maxLength: 36
        - name: Version
          in: path
          required: true
          description: The version number of the traffic policy that you want to get
            information about.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
    post:
      operationId: UpdateTrafficPolicyComment
      description: Updates the comment for a specified traffic policy version.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UpdateTrafficPolicyCommentResponse"
        "480":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: NoSuchTrafficPolicy
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchTrafficPolicy"
        "482":
          description: ConcurrentModification
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConcurrentModification"
      parameters:
        - name: Id
          in: path
          required: true
          description: The value of <code>Id</code> for the traffic policy that you want to
            update the comment for.
          schema:
            type: string
            minLength: 1
            maxLength: 36
        - name: Version
          in: path
          required: true
          description: The value of <code>Version</code> for the traffic policy that you
            want to update the comment for.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - Comment
              properties:
                Comment:
                  description: The new comment for the specified traffic policy and version.
                  type: string
                  maxLength: 1024
        required: true
  "/2013-04-01/trafficpolicyinstance/{Id}":
    delete:
      operationId: DeleteTrafficPolicyInstance
      description: <p>Deletes a traffic policy instance and all of the resource record sets
        that Amazon Route 53 created when you created the instance.</p> <note>
        <p>In the Route 53 console, traffic policy instances are known as policy
        records.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteTrafficPolicyInstanceResponse"
        "480":
          description: NoSuchTrafficPolicyInstance
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchTrafficPolicyInstance"
        "481":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "482":
          description: PriorRequestNotComplete
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PriorRequestNotComplete"
      parameters:
        - name: Id
          in: path
          required: true
          description: <p>The ID of the traffic policy instance that you want to delete.
            </p> <important> <p>When you delete a traffic policy instance,
            Amazon Route 53 also deletes all of the resource record sets that
            were created when you created the traffic policy instance.</p>
            </important>
          schema:
            type: string
            minLength: 1
            maxLength: 36
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetTrafficPolicyInstance
      description: <p>Gets information about a specified traffic policy instance.</p>
        <note> <p>After you submit a <code>CreateTrafficPolicyInstance</code> or
        an <code>UpdateTrafficPolicyInstance</code> request, there's a brief
        delay while Amazon Route 53 creates the resource record sets that are
        specified in the traffic policy definition. For more information, see
        the <code>State</code> response element.</p> </note> <note> <p>In the
        Route 53 console, traffic policy instances are known as policy
        records.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetTrafficPolicyInstanceResponse"
        "480":
          description: NoSuchTrafficPolicyInstance
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchTrafficPolicyInstance"
        "481":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the traffic policy instance that you want to get
            information about.
          schema:
            type: string
            minLength: 1
            maxLength: 36
    post:
      operationId: UpdateTrafficPolicyInstance
      description: <p>Updates the resource record sets in a specified hosted zone that were
        created based on the settings in a specified traffic policy version.</p>
        <p>When you update a traffic policy instance, Amazon Route 53 continues
        to respond to DNS queries for the root resource record set name (such as
        example.com) while it replaces one group of resource record sets with
        another. Route 53 performs the following operations:</p> <ol> <li>
        <p>Route 53 creates a new group of resource record sets based on the
        specified traffic policy. This is true regardless of how significant the
        differences are between the existing resource record sets and the new
        resource record sets. </p> </li> <li> <p>When all of the new resource
        record sets have been created, Route 53 starts to respond to DNS queries
        for the root resource record set name (such as example.com) by using the
        new resource record sets.</p> </li> <li> <p>Route 53 deletes the old
        group of resource record sets that are associated with the root resource
        record set name.</p> </li> </ol>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UpdateTrafficPolicyInstanceResponse"
        "480":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: NoSuchTrafficPolicy
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchTrafficPolicy"
        "482":
          description: NoSuchTrafficPolicyInstance
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchTrafficPolicyInstance"
        "483":
          description: PriorRequestNotComplete
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PriorRequestNotComplete"
        "484":
          description: ConflictingTypes
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConflictingTypes"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the traffic policy instance that you want to update.
          schema:
            type: string
            minLength: 1
            maxLength: 36
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - TTL
                - TrafficPolicyId
                - TrafficPolicyVersion
              properties:
                TTL:
                  description: The TTL that you want Amazon Route 53 to assign to all of
                    the updated resource record sets.
                  type: integer
                  minimum: 0
                  maximum: 2147483647
                TrafficPolicyId:
                  description: The ID of the traffic policy that you want Amazon Route 53
                    to use to update resource record sets for the specified
                    traffic policy instance.
                  type: string
                  minLength: 1
                  maxLength: 36
                TrafficPolicyVersion:
                  description: The version of the traffic policy that you want Amazon Route
                    53 to use to update resource record sets for the specified
                    traffic policy instance.
                  type: integer
                  minimum: 1
                  maximum: 1000
        required: true
  "/2013-04-01/hostedzone/{Id}/deauthorizevpcassociation":
    post:
      operationId: DeleteVPCAssociationAuthorization
      description: <p>Removes authorization to submit an
        <code>AssociateVPCWithHostedZone</code> request to associate a specified
        VPC with a hosted zone that was created by a different account. You must
        use the account that created the hosted zone to submit a
        <code>DeleteVPCAssociationAuthorization</code> request.</p> <important>
        <p>Sending this request only prevents the AWS account that created the
        VPC from associating the VPC with the Amazon Route 53 hosted zone in the
        future. If the VPC is already associated with the hosted zone,
        <code>DeleteVPCAssociationAuthorization</code> won't disassociate the
        VPC from the hosted zone. If you want to delete an existing association,
        use <code>DisassociateVPCFromHostedZone</code>.</p> </important>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteVPCAssociationAuthorizationRespon\
                  se"
        "480":
          description: ConcurrentModification
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ConcurrentModification"
        "481":
          description: VPCAssociationAuthorizationNotFound
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/VPCAssociationAuthorizationNotFound"
        "482":
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHostedZone"
        "483":
          description: InvalidVPCId
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCId"
        "484":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: Id
          in: path
          required: true
          description: When removing authorization to associate a VPC that was created by
            one AWS account with a hosted zone that was created with a different
            AWS account, the ID of the hosted zone.
          schema:
            type: string
            maxLength: 32
      requestBody:
        $ref: "#/components/requestBodies/CreateVPCAssociationAuthorizationBody"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2013-04-01/hostedzone/{Id}/disassociatevpc":
    post:
      operationId: DisassociateVPCFromHostedZone
      description: <p>Disassociates a VPC from a Amazon Route 53 private hosted zone. Note
        the following:</p> <ul> <li> <p>You can't disassociate the last VPC from
        a private hosted zone.</p> </li> <li> <p>You can't convert a private
        hosted zone into a public hosted zone.</p> </li> <li> <p>You can submit
        a <code>DisassociateVPCFromHostedZone</code> request using either the
        account that created the hosted zone or the account that created the
        VPC.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DisassociateVPCFromHostedZoneResponse"
        "480":
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHostedZone"
        "481":
          description: InvalidVPCId
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidVPCId"
        "482":
          description: VPCAssociationNotFound
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/VPCAssociationNotFound"
        "483":
          description: LastVPCAssociation
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LastVPCAssociation"
        "484":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the private hosted zone that you want to disassociate a
            VPC from.
          schema:
            type: string
            maxLength: 32
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - VPC
              properties:
                VPC:
                  description: (Private hosted zones only) A complex type that contains
                    information about an Amazon VPC.
                  type: object
                  properties:
                    VPCRegion:
                      $ref: "#/components/schemas/VPCRegion"
                    VPCId:
                      $ref: "#/components/schemas/VPCId"
                Comment:
                  description: " <i>Optional:</i> A comment about the disassociation
                    request."
                  type: string
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2013-04-01/accountlimit/{Type}":
    get:
      operationId: GetAccountLimit
      description: <p>Gets the specified limit for the current account, for example, the
        maximum number of health checks that you can create using the
        account.</p> <p>For the default limit, see <a
        href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html">Limits</a>
        in the <i>Amazon Route 53 Developer Guide</i>. To request a higher
        limit, <a
        href="https://console.aws.amazon.com/support/home#/case/create?issueType=service-limit-increase&amp;limitType=service-code-route53">open
        a case</a>.</p> <note> <p>You can also view account limits in AWS
        Trusted Advisor. Sign in to the AWS Management Console and open the
        Trusted Advisor console at <a
        href="https://console.aws.amazon.com/trustedadvisor">https://console.aws.amazon.com/trustedadvisor/</a>.
        Then choose <b>Service limits</b> in the navigation pane.</p> </note>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetAccountLimitResponse"
        "480":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: Type
          in: path
          required: true
          description: "<p>The limit that you want to get. Valid values include the
            following:</p> <ul> <li> <p> <b>MAX_HEALTH_CHECKS_BY_OWNER</b>: The
            maximum number of health checks that you can create using the
            current account.</p> </li> <li> <p>
            <b>MAX_HOSTED_ZONES_BY_OWNER</b>: The maximum number of hosted zones
            that you can create using the current account.</p> </li> <li> <p>
            <b>MAX_REUSABLE_DELEGATION_SETS_BY_OWNER</b>: The maximum number of
            reusable delegation sets that you can create using the current
            account.</p> </li> <li> <p> <b>MAX_TRAFFIC_POLICIES_BY_OWNER</b>:
            The maximum number of traffic policies that you can create using the
            current account.</p> </li> <li> <p>
            <b>MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER</b>: The maximum number of
            traffic policy instances that you can create using the current
            account. (Traffic policy instances are referred to as traffic flow
            policy records in the Amazon Route 53 console.)</p> </li> </ul>"
          schema:
            type: string
            enum:
              - MAX_HEALTH_CHECKS_BY_OWNER
              - MAX_HOSTED_ZONES_BY_OWNER
              - MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER
              - MAX_REUSABLE_DELEGATION_SETS_BY_OWNER
              - MAX_TRAFFIC_POLICIES_BY_OWNER
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2013-04-01/change/{Id}":
    get:
      operationId: GetChange
      description: <p>Returns the current status of a change batch request. The status is
        one of the following values:</p> <ul> <li> <p> <code>PENDING</code>
        indicates that the changes in this request have not propagated to all
        Amazon Route 53 DNS servers. This is the initial status of all change
        batch requests.</p> </li> <li> <p> <code>INSYNC</code> indicates that
        the changes have propagated to all Route 53 DNS servers. </p> </li>
        </ul>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetChangeResponse"
        "480":
          description: NoSuchChange
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchChange"
        "481":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the change batch request. The value that you specify here
            is the value that <code>ChangeResourceRecordSets</code> returned in
            the <code>Id</code> element when you submitted the request.
          schema:
            type: string
            maxLength: 32
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /2013-04-01/checkeripranges:
    get:
      operationId: GetCheckerIpRanges
      description: <important> <p> <code>GetCheckerIpRanges</code> still works, but we
        recommend that you download ip-ranges.json, which includes IP address
        ranges for all AWS services. For more information, see <a
        href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/route-53-ip-addresses.html">IP
        Address Ranges of Amazon Route 53 Servers</a> in the <i>Amazon Route 53
        Developer Guide</i>.</p> </important>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetCheckerIpRangesResponse"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /2013-04-01/geolocation:
    get:
      operationId: GetGeoLocation
      description: <p>Gets information about whether a specified geographic location is
        supported for Amazon Route 53 geolocation resource record sets.</p>
        <p>Use the following syntax to determine whether a continent is
        supported for geolocation:</p> <p> <code>GET
        /2013-04-01/geolocation?continentcode=<i>two-letter abbreviation for a
        continent</i> </code> </p> <p>Use the following syntax to determine
        whether a country is supported for geolocation:</p> <p> <code>GET
        /2013-04-01/geolocation?countrycode=<i>two-character country code</i>
        </code> </p> <p>Use the following syntax to determine whether a
        subdivision of a country is supported for geolocation:</p> <p> <code>GET
        /2013-04-01/geolocation?countrycode=<i>two-character country
        code</i>&amp;subdivisioncode=<i>subdivision code</i> </code> </p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetGeoLocationResponse"
        "480":
          description: NoSuchGeoLocation
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchGeoLocation"
        "481":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: continentcode
          in: query
          required: false
          description: "<p>Amazon Route 53 supports the following continent codes:</p> <ul>
            <li> <p> <b>AF</b>: Africa</p> </li> <li> <p> <b>AN</b>:
            Antarctica</p> </li> <li> <p> <b>AS</b>: Asia</p> </li> <li> <p>
            <b>EU</b>: Europe</p> </li> <li> <p> <b>OC</b>: Oceania</p> </li>
            <li> <p> <b>NA</b>: North America</p> </li> <li> <p> <b>SA</b>:
            South America</p> </li> </ul>"
          schema:
            type: string
            minLength: 2
            maxLength: 2
        - name: countrycode
          in: query
          required: false
          description: Amazon Route 53 uses the two-letter country codes that are specified
            in <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO
            standard 3166-1 alpha-2</a>.
          schema:
            type: string
            minLength: 1
            maxLength: 2
        - name: subdivisioncode
          in: query
          required: false
          description: "Amazon Route 53 uses the one- to three-letter subdivision codes
            that are specified in <a
            href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">ISO
            standard 3166-1 alpha-2</a>. Route 53 doesn't support subdivision
            codes for all countries. If you specify
            <code>subdivisioncode</code>, you must also specify
            <code>countrycode</code>. "
          schema:
            type: string
            minLength: 1
            maxLength: 3
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /2013-04-01/healthcheckcount:
    get:
      operationId: GetHealthCheckCount
      description: Retrieves the number of health checks that are associated with the
        current AWS account.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetHealthCheckCountResponse"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2013-04-01/healthcheck/{HealthCheckId}/lastfailurereason":
    get:
      operationId: GetHealthCheckLastFailureReason
      description: Gets the reason that a specified health check failed most recently.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetHealthCheckLastFailureReasonResponse"
        "480":
          description: NoSuchHealthCheck
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHealthCheck"
        "481":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: HealthCheckId
          in: path
          required: true
          description: <p>The ID for the health check for which you want the last failure
            reason. When you created the health check,
            <code>CreateHealthCheck</code> returned the ID in the response, in
            the <code>HealthCheckId</code> element.</p> <note> <p>If you want to
            get the last failure reason for a calculated health check, you must
            use the Amazon Route 53 console or the CloudWatch console. You can't
            use <code>GetHealthCheckLastFailureReason</code> for a calculated
            health check.</p> </note>
          schema:
            type: string
            maxLength: 64
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2013-04-01/healthcheck/{HealthCheckId}/status":
    get:
      operationId: GetHealthCheckStatus
      description: "Gets status of a specified health check. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetHealthCheckStatusResponse"
        "480":
          description: NoSuchHealthCheck
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHealthCheck"
        "481":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: HealthCheckId
          in: path
          required: true
          description: <p>The ID for the health check that you want the current status for.
            When you created the health check, <code>CreateHealthCheck</code>
            returned the ID in the response, in the <code>HealthCheckId</code>
            element.</p> <note> <p>If you want to check the status of a
            calculated health check, you must use the Amazon Route 53 console or
            the CloudWatch console. You can't use
            <code>GetHealthCheckStatus</code> to get the status of a calculated
            health check.</p> </note>
          schema:
            type: string
            maxLength: 64
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /2013-04-01/hostedzonecount:
    get:
      operationId: GetHostedZoneCount
      description: Retrieves the number of hosted zones that are associated with the
        current AWS account.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetHostedZoneCountResponse"
        "480":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2013-04-01/hostedzonelimit/{Id}/{Type}":
    get:
      operationId: GetHostedZoneLimit
      description: <p>Gets the specified limit for a specified hosted zone, for example,
        the maximum number of records that you can create in the hosted zone.
        </p> <p>For the default limit, see <a
        href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html">Limits</a>
        in the <i>Amazon Route 53 Developer Guide</i>. To request a higher
        limit, <a
        href="https://console.aws.amazon.com/support/home#/case/create?issueType=service-limit-increase&amp;limitType=service-code-route53">open
        a case</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetHostedZoneLimitResponse"
        "480":
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHostedZone"
        "481":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "482":
          description: HostedZoneNotPrivate
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HostedZoneNotPrivate"
      parameters:
        - name: Type
          in: path
          required: true
          description: "<p>The limit that you want to get. Valid values include the
            following:</p> <ul> <li> <p> <b>MAX_RRSETS_BY_ZONE</b>: The maximum
            number of records that you can create in the specified hosted
            zone.</p> </li> <li> <p> <b>MAX_VPCS_ASSOCIATED_BY_ZONE</b>: The
            maximum number of Amazon VPCs that you can associate with the
            specified private hosted zone.</p> </li> </ul>"
          schema:
            type: string
            enum:
              - MAX_RRSETS_BY_ZONE
              - MAX_VPCS_ASSOCIATED_BY_ZONE
        - name: Id
          in: path
          required: true
          description: The ID of the hosted zone that you want to get a limit for.
          schema:
            type: string
            maxLength: 32
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2013-04-01/reusabledelegationsetlimit/{Id}/{Type}":
    get:
      operationId: GetReusableDelegationSetLimit
      description: <p>Gets the maximum number of hosted zones that you can associate with
        the specified reusable delegation set.</p> <p>For the default limit, see
        <a
        href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DNSLimitations.html">Limits</a>
        in the <i>Amazon Route 53 Developer Guide</i>. To request a higher
        limit, <a
        href="https://console.aws.amazon.com/support/home#/case/create?issueType=service-limit-increase&amp;limitType=service-code-route53">open
        a case</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetReusableDelegationSetLimitResponse"
        "480":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: NoSuchDelegationSet
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchDelegationSet"
      parameters:
        - name: Type
          in: path
          required: true
          description: Specify <code>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</code> to get the
            maximum number of hosted zones that you can associate with the
            specified reusable delegation set.
          schema:
            type: string
            enum:
              - MAX_ZONES_BY_REUSABLE_DELEGATION_SET
        - name: Id
          in: path
          required: true
          description: The ID of the delegation set that you want to get the limit for.
          schema:
            type: string
            maxLength: 32
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /2013-04-01/trafficpolicyinstancecount:
    get:
      operationId: GetTrafficPolicyInstanceCount
      description: Gets the number of traffic policy instances that are associated with the
        current AWS account.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/GetTrafficPolicyInstanceCountResponse"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /2013-04-01/geolocations:
    get:
      operationId: ListGeoLocations
      description: <p>Retrieves a list of supported geographic locations.</p> <p>Countries
        are listed first, and continents are listed last. If Amazon Route 53
        supports subdivisions for a country (for example, states or provinces),
        the subdivisions for that country are listed in alphabetical order
        immediately after the corresponding country.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListGeoLocationsResponse"
        "480":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: startcontinentcode
          in: query
          required: false
          description: <p>The code for the continent with which you want to start listing
            locations that Amazon Route 53 supports for geolocation. If Route 53
            has already returned a page or more of results, if
            <code>IsTruncated</code> is true, and if
            <code>NextContinentCode</code> from the previous response has a
            value, enter that value in <code>startcontinentcode</code> to return
            the next page of results.</p> <p>Include
            <code>startcontinentcode</code> only if you want to list continents.
            Don't include <code>startcontinentcode</code> when you're listing
            countries or countries with their subdivisions.</p>
          schema:
            type: string
            minLength: 2
            maxLength: 2
        - name: startcountrycode
          in: query
          required: false
          description: <p>The code for the country with which you want to start listing
            locations that Amazon Route 53 supports for geolocation. If Route 53
            has already returned a page or more of results, if
            <code>IsTruncated</code> is <code>true</code>, and if
            <code>NextCountryCode</code> from the previous response has a value,
            enter that value in <code>startcountrycode</code> to return the next
            page of results.</p> <p>Route 53 uses the two-letter country codes
            that are specified in <a
            href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO standard
            3166-1 alpha-2</a>.</p>
          schema:
            type: string
            minLength: 1
            maxLength: 2
        - name: startsubdivisioncode
          in: query
          required: false
          description: <p>The code for the subdivision (for example, state or province)
            with which you want to start listing locations that Amazon Route 53
            supports for geolocation. If Route 53 has already returned a page or
            more of results, if <code>IsTruncated</code> is <code>true</code>,
            and if <code>NextSubdivisionCode</code> from the previous response
            has a value, enter that value in <code>startsubdivisioncode</code>
            to return the next page of results.</p> <p>To list subdivisions of a
            country, you must include both <code>startcountrycode</code> and
            <code>startsubdivisioncode</code>.</p>
          schema:
            type: string
            minLength: 1
            maxLength: 3
        - name: maxitems
          in: query
          required: false
          description: (Optional) The maximum number of geolocations to be included in the
            response body for this request. If more than <code>maxitems</code>
            geolocations remain to be listed, then the value of the
            <code>IsTruncated</code> element in the response is
            <code>true</code>.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /2013-04-01/hostedzonesbyname:
    get:
      operationId: ListHostedZonesByName
      description: <p>Retrieves a list of your hosted zones in lexicographic order. The
        response includes a <code>HostedZones</code> child element for each
        hosted zone created by the current AWS account. </p> <p>
        <code>ListHostedZonesByName</code> sorts hosted zones by name with the
        labels reversed. For example:</p> <p> <code>com.example.www.</code> </p>
        <p>Note the trailing dot, which can change the sort order in some
        circumstances.</p> <p>If the domain name includes escape characters or
        Punycode, <code>ListHostedZonesByName</code> alphabetizes the domain
        name using the escaped or Punycoded value, which is the format that
        Amazon Route 53 saves in its database. For example, to create a hosted
        zone for exämple.com, you specify ex\344mple.com for the domain name.
        <code>ListHostedZonesByName</code> alphabetizes it as:</p> <p>
        <code>com.ex\344mple.</code> </p> <p>The labels are reversed and
        alphabetized using the escaped value. For more information about valid
        domain name formats, including internationalized domain names, see <a
        href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DomainNameFormat.html">DNS
        Domain Name Format</a> in the <i>Amazon Route 53 Developer
        Guide</i>.</p> <p>Route 53 returns up to 100 items in each response. If
        you have a lot of hosted zones, use the <code>MaxItems</code> parameter
        to list them in groups of up to 100. The response includes values that
        help navigate from one group of <code>MaxItems</code> hosted zones to
        the next:</p> <ul> <li> <p>The <code>DNSName</code> and
        <code>HostedZoneId</code> elements in the response contain the values,
        if any, specified for the <code>dnsname</code> and
        <code>hostedzoneid</code> parameters in the request that produced the
        current response.</p> </li> <li> <p>The <code>MaxItems</code> element in
        the response contains the value, if any, that you specified for the
        <code>maxitems</code> parameter in the request that produced the current
        response.</p> </li> <li> <p>If the value of <code>IsTruncated</code> in
        the response is true, there are more hosted zones associated with the
        current AWS account. </p> <p>If <code>IsTruncated</code> is false, this
        response includes the last hosted zone that is associated with the
        current account. The <code>NextDNSName</code> element and
        <code>NextHostedZoneId</code> elements are omitted from the
        response.</p> </li> <li> <p>The <code>NextDNSName</code> and
        <code>NextHostedZoneId</code> elements in the response contain the
        domain name and the hosted zone ID of the next hosted zone that is
        associated with the current AWS account. If you want to list more hosted
        zones, make another call to <code>ListHostedZonesByName</code>, and
        specify the value of <code>NextDNSName</code> and
        <code>NextHostedZoneId</code> in the <code>dnsname</code> and
        <code>hostedzoneid</code> parameters, respectively.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListHostedZonesByNameResponse"
        "480":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: InvalidDomainName
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidDomainName"
      parameters:
        - name: dnsname
          in: query
          required: false
          description: (Optional) For your first request to
            <code>ListHostedZonesByName</code>, include the <code>dnsname</code>
            parameter only if you want to specify the name of the first hosted
            zone in the response. If you don't include the <code>dnsname</code>
            parameter, Amazon Route 53 returns all of the hosted zones that were
            created by the current AWS account, in ASCII order. For subsequent
            requests, include both <code>dnsname</code> and
            <code>hostedzoneid</code> parameters. For <code>dnsname</code>,
            specify the value of <code>NextDNSName</code> from the previous
            response.
          schema:
            type: string
            maxLength: 1024
        - name: hostedzoneid
          in: query
          required: false
          description: <p>(Optional) For your first request to
            <code>ListHostedZonesByName</code>, do not include the
            <code>hostedzoneid</code> parameter.</p> <p>If you have more hosted
            zones than the value of <code>maxitems</code>,
            <code>ListHostedZonesByName</code> returns only the first
            <code>maxitems</code> hosted zones. To get the next group of
            <code>maxitems</code> hosted zones, submit another request to
            <code>ListHostedZonesByName</code> and include both
            <code>dnsname</code> and <code>hostedzoneid</code> parameters. For
            the value of <code>hostedzoneid</code>, specify the value of the
            <code>NextHostedZoneId</code> element from the previous
            response.</p>
          schema:
            type: string
            maxLength: 32
        - name: maxitems
          in: query
          required: false
          description: "The maximum number of hosted zones to be included in the response
            body for this request. If you have more than <code>maxitems</code>
            hosted zones, then the value of the <code>IsTruncated</code> element
            in the response is true, and the values of <code>NextDNSName</code>
            and <code>NextHostedZoneId</code> specify the first hosted zone in
            the next group of <code>maxitems</code> hosted zones. "
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2013-04-01/hostedzone/{Id}/rrset":
    get:
      operationId: ListResourceRecordSets
      description: "<p>Lists the resource record sets in a specified hosted zone.</p> <p>
        <code>ListResourceRecordSets</code> returns up to 100 resource record
        sets at a time in ASCII order, beginning at a position specified by the
        <code>name</code> and <code>type</code> elements.</p> <p> <b>Sort
        order</b> </p> <p> <code>ListResourceRecordSets</code> sorts results
        first by DNS name with the labels reversed, for example:</p> <p>
        <code>com.example.www.</code> </p> <p>Note the trailing dot, which can
        change the sort order when the record name contains characters that
        appear before <code>.</code> (decimal 46) in the ASCII table. These
        characters include the following: <code>! \" # $ % &amp; ' ( ) * + ,
        -</code> </p> <p>When multiple records have the same DNS name,
        <code>ListResourceRecordSets</code> sorts results by the record
        type.</p> <p> <b>Specifying where to start listing records</b> </p>
        <p>You can use the name and type elements to specify the resource record
        set that the list begins with:</p> <dl> <dt>If you do not specify Name
        or Type</dt> <dd> <p>The results begin with the first resource record
        set that the hosted zone contains.</p> </dd> <dt>If you specify Name but
        not Type</dt> <dd> <p>The results begin with the first resource record
        set in the list whose name is greater than or equal to
        <code>Name</code>.</p> </dd> <dt>If you specify Type but not Name</dt>
        <dd> <p>Amazon Route 53 returns the <code>InvalidInput</code> error.</p>
        </dd> <dt>If you specify both Name and Type</dt> <dd> <p>The results
        begin with the first resource record set in the list whose name is
        greater than or equal to <code>Name</code>, and whose type is greater
        than or equal to <code>Type</code>.</p> </dd> </dl> <p> <b>Resource
        record sets that are PENDING</b> </p> <p>This action returns the most
        current version of the records. This includes records that are
        <code>PENDING</code>, and that are not yet available on all Route 53 DNS
        servers.</p> <p> <b>Changing resource record sets</b> </p> <p>To ensure
        that you get an accurate listing of the resource record sets for a
        hosted zone at a point in time, do not submit a
        <code>ChangeResourceRecordSets</code> request while you're paging
        through the results of a <code>ListResourceRecordSets</code> request. If
        you do, some pages may display results without the latest changes while
        other pages display results with the latest changes.</p> <p>
        <b>Displaying the next page of results</b> </p> <p>If a
        <code>ListResourceRecordSets</code> command returns more than one page
        of results, the value of <code>IsTruncated</code> is <code>true</code>.
        To display the next page of results, get the values of
        <code>NextRecordName</code>, <code>NextRecordType</code>, and
        <code>NextRecordIdentifier</code> (if any) from the response. Then
        submit another <code>ListResourceRecordSets</code> request, and specify
        those values for <code>StartRecordName</code>,
        <code>StartRecordType</code>, and
        <code>StartRecordIdentifier</code>.</p>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListResourceRecordSetsResponse"
        "480":
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHostedZone"
        "481":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the hosted zone that contains the resource record sets
            that you want to list.
          schema:
            type: string
            maxLength: 32
        - name: name
          in: query
          required: false
          description: The first name in the lexicographic ordering of resource record sets
            that you want to list.
          schema:
            type: string
            maxLength: 1024
        - name: type
          in: query
          required: false
          description: "<p>The type of resource record set to begin the record listing
            from.</p> <p>Valid values for basic resource record sets:
            <code>A</code> | <code>AAAA</code> | <code>CAA</code> |
            <code>CNAME</code> | <code>MX</code> | <code>NAPTR</code> |
            <code>NS</code> | <code>PTR</code> | <code>SOA</code> |
            <code>SPF</code> | <code>SRV</code> | <code>TXT</code> </p>
            <p>Values for weighted, latency, geolocation, and failover resource
            record sets: <code>A</code> | <code>AAAA</code> | <code>CAA</code> |
            <code>CNAME</code> | <code>MX</code> | <code>NAPTR</code> |
            <code>PTR</code> | <code>SPF</code> | <code>SRV</code> |
            <code>TXT</code> </p> <p>Values for alias resource record sets: </p>
            <ul> <li> <p> <b>API Gateway custom regional API or edge-optimized
            API</b>: A</p> </li> <li> <p> <b>CloudFront distribution</b>: A or
            AAAA</p> </li> <li> <p> <b>Elastic Beanstalk environment that has a
            regionalized subdomain</b>: A</p> </li> <li> <p> <b>Elastic Load
            Balancing load balancer</b>: A | AAAA</p> </li> <li> <p> <b>Amazon
            S3 bucket</b>: A</p> </li> <li> <p> <b>Amazon VPC interface VPC
            endpoint</b>: A</p> </li> <li> <p> <b>Another resource record set in
            this hosted zone:</b> The type of the resource record set that the
            alias references.</p> </li> </ul> <p>Constraint: Specifying
            <code>type</code> without specifying <code>name</code> returns an
            <code>InvalidInput</code> error.</p>"
          schema:
            type: string
            enum:
              - SOA
              - A
              - TXT
              - NS
              - CNAME
              - MX
              - NAPTR
              - PTR
              - SRV
              - SPF
              - AAAA
              - CAA
        - name: identifier
          in: query
          required: false
          description: " <i>Resource record sets that have a routing policy other than
            simple:</i> If results were truncated for a given DNS name and type,
            specify the value of <code>NextRecordIdentifier</code> from the
            previous response to get the next resource record set that has the
            current DNS name and type."
          schema:
            type: string
            minLength: 1
            maxLength: 128
        - name: maxitems
          in: query
          required: false
          description: (Optional) The maximum number of resource records sets to include in
            the response body for this request. If the response includes more
            than <code>maxitems</code> resource record sets, the value of the
            <code>IsTruncated</code> element in the response is
            <code>true</code>, and the values of the <code>NextRecordName</code>
            and <code>NextRecordType</code> elements in the response identify
            the first resource record set in the next group of
            <code>maxitems</code> resource record sets.
          schema:
            type: string
        - name: MaxItems
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: StartRecordName
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: StartRecordType
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: StartRecordIdentifier
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2013-04-01/tags/{ResourceType}":
    post:
      operationId: ListTagsForResources
      description: <p>Lists tags for up to 10 health checks or hosted zones.</p> <p>For
        information about using tags for cost allocation, see <a
        href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using
        Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListTagsForResourcesResponse"
        "480":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: NoSuchHealthCheck
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHealthCheck"
        "482":
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHostedZone"
        "483":
          description: PriorRequestNotComplete
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PriorRequestNotComplete"
        "484":
          description: ThrottlingException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: ResourceType
          in: path
          required: true
          description: <p>The type of the resources.</p> <ul> <li> <p>The resource type for
            health checks is <code>healthcheck</code>.</p> </li> <li> <p>The
            resource type for hosted zones is <code>hostedzone</code>.</p> </li>
            </ul>
          schema:
            type: string
            enum:
              - healthcheck
              - hostedzone
      requestBody:
        content:
          text/xml:
            schema:
              type: object
              required:
                - ResourceIds
              properties:
                ResourceIds:
                  description: A complex type that contains the ResourceId element for each
                    resource for which you want to get a list of tags.
                  type: array
                  items:
                    $ref: "#/components/schemas/TagResourceId"
                  minItems: 1
                  maxItems: 10
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /2013-04-01/trafficpolicies:
    get:
      operationId: ListTrafficPolicies
      description: "Gets information about the latest version for every traffic policy that
        is associated with the current AWS account. Policies are listed in the
        order that they were created in. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListTrafficPoliciesResponse"
        "480":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: trafficpolicyid
          in: query
          required: false
          description: <p>(Conditional) For your first request to
            <code>ListTrafficPolicies</code>, don't include the
            <code>TrafficPolicyIdMarker</code> parameter.</p> <p>If you have
            more traffic policies than the value of <code>MaxItems</code>,
            <code>ListTrafficPolicies</code> returns only the first
            <code>MaxItems</code> traffic policies. To get the next group of
            policies, submit another request to
            <code>ListTrafficPolicies</code>. For the value of
            <code>TrafficPolicyIdMarker</code>, specify the value of
            <code>TrafficPolicyIdMarker</code> that was returned in the previous
            response.</p>
          schema:
            type: string
            minLength: 1
            maxLength: 36
        - name: maxitems
          in: query
          required: false
          description: (Optional) The maximum number of traffic policies that you want
            Amazon Route 53 to return in response to this request. If you have
            more than <code>MaxItems</code> traffic policies, the value of
            <code>IsTruncated</code> in the response is <code>true</code>, and
            the value of <code>TrafficPolicyIdMarker</code> is the ID of the
            first traffic policy that Route 53 will return if you submit another
            request.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /2013-04-01/trafficpolicyinstances:
    get:
      operationId: ListTrafficPolicyInstances
      description: <p>Gets information about the traffic policy instances that you created
        by using the current AWS account.</p> <note> <p>After you submit an
        <code>UpdateTrafficPolicyInstance</code> request, there's a brief delay
        while Amazon Route 53 creates the resource record sets that are
        specified in the traffic policy definition. For more information, see
        the <code>State</code> response element.</p> </note> <p>Route 53 returns
        a maximum of 100 items in each response. If you have a lot of traffic
        policy instances, you can use the <code>MaxItems</code> parameter to
        list them in groups of up to 100.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListTrafficPolicyInstancesResponse"
        "480":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: NoSuchTrafficPolicyInstance
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchTrafficPolicyInstance"
      parameters:
        - name: hostedzoneid
          in: query
          required: false
          description: <p>If the value of <code>IsTruncated</code> in the previous response
            was <code>true</code>, you have more traffic policy instances. To
            get more traffic policy instances, submit another
            <code>ListTrafficPolicyInstances</code> request. For the value of
            <code>HostedZoneId</code>, specify the value of
            <code>HostedZoneIdMarker</code> from the previous response, which is
            the hosted zone ID of the first traffic policy instance in the next
            group of traffic policy instances.</p> <p>If the value of
            <code>IsTruncated</code> in the previous response was
            <code>false</code>, there are no more traffic policy instances to
            get.</p>
          schema:
            type: string
            maxLength: 32
        - name: trafficpolicyinstancename
          in: query
          required: false
          description: <p>If the value of <code>IsTruncated</code> in the previous response
            was <code>true</code>, you have more traffic policy instances. To
            get more traffic policy instances, submit another
            <code>ListTrafficPolicyInstances</code> request. For the value of
            <code>trafficpolicyinstancename</code>, specify the value of
            <code>TrafficPolicyInstanceNameMarker</code> from the previous
            response, which is the name of the first traffic policy instance in
            the next group of traffic policy instances.</p> <p>If the value of
            <code>IsTruncated</code> in the previous response was
            <code>false</code>, there are no more traffic policy instances to
            get.</p>
          schema:
            type: string
            maxLength: 1024
        - name: trafficpolicyinstancetype
          in: query
          required: false
          description: <p>If the value of <code>IsTruncated</code> in the previous response
            was <code>true</code>, you have more traffic policy instances. To
            get more traffic policy instances, submit another
            <code>ListTrafficPolicyInstances</code> request. For the value of
            <code>trafficpolicyinstancetype</code>, specify the value of
            <code>TrafficPolicyInstanceTypeMarker</code> from the previous
            response, which is the type of the first traffic policy instance in
            the next group of traffic policy instances.</p> <p>If the value of
            <code>IsTruncated</code> in the previous response was
            <code>false</code>, there are no more traffic policy instances to
            get.</p>
          schema:
            type: string
            enum:
              - SOA
              - A
              - TXT
              - NS
              - CNAME
              - MX
              - NAPTR
              - PTR
              - SRV
              - SPF
              - AAAA
              - CAA
        - name: maxitems
          in: query
          required: false
          description: The maximum number of traffic policy instances that you want Amazon
            Route 53 to return in response to a
            <code>ListTrafficPolicyInstances</code> request. If you have more
            than <code>MaxItems</code> traffic policy instances, the value of
            the <code>IsTruncated</code> element in the response is
            <code>true</code>, and the values of
            <code>HostedZoneIdMarker</code>,
            <code>TrafficPolicyInstanceNameMarker</code>, and
            <code>TrafficPolicyInstanceTypeMarker</code> represent the first
            traffic policy instance in the next group of <code>MaxItems</code>
            traffic policy instances.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /2013-04-01/trafficpolicyinstances/hostedzone#id:
    get:
      operationId: ListTrafficPolicyInstancesByHostedZone
      description: <p>Gets information about the traffic policy instances that you created
        in a specified hosted zone.</p> <note> <p>After you submit a
        <code>CreateTrafficPolicyInstance</code> or an
        <code>UpdateTrafficPolicyInstance</code> request, there's a brief delay
        while Amazon Route 53 creates the resource record sets that are
        specified in the traffic policy definition. For more information, see
        the <code>State</code> response element.</p> </note> <p>Route 53 returns
        a maximum of 100 items in each response. If you have a lot of traffic
        policy instances, you can use the <code>MaxItems</code> parameter to
        list them in groups of up to 100.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListTrafficPolicyInstancesByHostedZoneR\
                  esponse"
        "480":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: NoSuchTrafficPolicyInstance
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchTrafficPolicyInstance"
        "482":
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHostedZone"
      parameters:
        - name: id
          in: query
          required: true
          description: The ID of the hosted zone that you want to list traffic policy
            instances for.
          schema:
            type: string
            maxLength: 32
        - name: trafficpolicyinstancename
          in: query
          required: false
          description: <p>If the value of <code>IsTruncated</code> in the previous response
            is true, you have more traffic policy instances. To get more traffic
            policy instances, submit another
            <code>ListTrafficPolicyInstances</code> request. For the value of
            <code>trafficpolicyinstancename</code>, specify the value of
            <code>TrafficPolicyInstanceNameMarker</code> from the previous
            response, which is the name of the first traffic policy instance in
            the next group of traffic policy instances.</p> <p>If the value of
            <code>IsTruncated</code> in the previous response was
            <code>false</code>, there are no more traffic policy instances to
            get.</p>
          schema:
            type: string
            maxLength: 1024
        - name: trafficpolicyinstancetype
          in: query
          required: false
          description: <p>If the value of <code>IsTruncated</code> in the previous response
            is true, you have more traffic policy instances. To get more traffic
            policy instances, submit another
            <code>ListTrafficPolicyInstances</code> request. For the value of
            <code>trafficpolicyinstancetype</code>, specify the value of
            <code>TrafficPolicyInstanceTypeMarker</code> from the previous
            response, which is the type of the first traffic policy instance in
            the next group of traffic policy instances.</p> <p>If the value of
            <code>IsTruncated</code> in the previous response was
            <code>false</code>, there are no more traffic policy instances to
            get.</p>
          schema:
            type: string
            enum:
              - SOA
              - A
              - TXT
              - NS
              - CNAME
              - MX
              - NAPTR
              - PTR
              - SRV
              - SPF
              - AAAA
              - CAA
        - name: maxitems
          in: query
          required: false
          description: The maximum number of traffic policy instances to be included in the
            response body for this request. If you have more than
            <code>MaxItems</code> traffic policy instances, the value of the
            <code>IsTruncated</code> element in the response is
            <code>true</code>, and the values of
            <code>HostedZoneIdMarker</code>,
            <code>TrafficPolicyInstanceNameMarker</code>, and
            <code>TrafficPolicyInstanceTypeMarker</code> represent the first
            traffic policy instance that Amazon Route 53 will return if you
            submit another request.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /2013-04-01/trafficpolicyinstances/trafficpolicy#id&version:
    get:
      operationId: ListTrafficPolicyInstancesByPolicy
      description: <p>Gets information about the traffic policy instances that you created
        by using a specify traffic policy version.</p> <note> <p>After you
        submit a <code>CreateTrafficPolicyInstance</code> or an
        <code>UpdateTrafficPolicyInstance</code> request, there's a brief delay
        while Amazon Route 53 creates the resource record sets that are
        specified in the traffic policy definition. For more information, see
        the <code>State</code> response element.</p> </note> <p>Route 53 returns
        a maximum of 100 items in each response. If you have a lot of traffic
        policy instances, you can use the <code>MaxItems</code> parameter to
        list them in groups of up to 100.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListTrafficPolicyInstancesByPolicyRespo\
                  nse"
        "480":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: NoSuchTrafficPolicyInstance
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchTrafficPolicyInstance"
        "482":
          description: NoSuchTrafficPolicy
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchTrafficPolicy"
      parameters:
        - name: id
          in: query
          required: true
          description: The ID of the traffic policy for which you want to list traffic
            policy instances.
          schema:
            type: string
            minLength: 1
            maxLength: 36
        - name: version
          in: query
          required: true
          description: The version of the traffic policy for which you want to list traffic
            policy instances. The version must be associated with the traffic
            policy that is specified by <code>TrafficPolicyId</code>.
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: hostedzoneid
          in: query
          required: false
          description: <p>If the value of <code>IsTruncated</code> in the previous response
            was <code>true</code>, you have more traffic policy instances. To
            get more traffic policy instances, submit another
            <code>ListTrafficPolicyInstancesByPolicy</code> request. </p> <p>For
            the value of <code>hostedzoneid</code>, specify the value of
            <code>HostedZoneIdMarker</code> from the previous response, which is
            the hosted zone ID of the first traffic policy instance that Amazon
            Route 53 will return if you submit another request.</p> <p>If the
            value of <code>IsTruncated</code> in the previous response was
            <code>false</code>, there are no more traffic policy instances to
            get.</p>
          schema:
            type: string
            maxLength: 32
        - name: trafficpolicyinstancename
          in: query
          required: false
          description: <p>If the value of <code>IsTruncated</code> in the previous response
            was <code>true</code>, you have more traffic policy instances. To
            get more traffic policy instances, submit another
            <code>ListTrafficPolicyInstancesByPolicy</code> request.</p> <p>For
            the value of <code>trafficpolicyinstancename</code>, specify the
            value of <code>TrafficPolicyInstanceNameMarker</code> from the
            previous response, which is the name of the first traffic policy
            instance that Amazon Route 53 will return if you submit another
            request.</p> <p>If the value of <code>IsTruncated</code> in the
            previous response was <code>false</code>, there are no more traffic
            policy instances to get.</p>
          schema:
            type: string
            maxLength: 1024
        - name: trafficpolicyinstancetype
          in: query
          required: false
          description: <p>If the value of <code>IsTruncated</code> in the previous response
            was <code>true</code>, you have more traffic policy instances. To
            get more traffic policy instances, submit another
            <code>ListTrafficPolicyInstancesByPolicy</code> request.</p> <p>For
            the value of <code>trafficpolicyinstancetype</code>, specify the
            value of <code>TrafficPolicyInstanceTypeMarker</code> from the
            previous response, which is the name of the first traffic policy
            instance that Amazon Route 53 will return if you submit another
            request.</p> <p>If the value of <code>IsTruncated</code> in the
            previous response was <code>false</code>, there are no more traffic
            policy instances to get.</p>
          schema:
            type: string
            enum:
              - SOA
              - A
              - TXT
              - NS
              - CNAME
              - MX
              - NAPTR
              - PTR
              - SRV
              - SPF
              - AAAA
              - CAA
        - name: maxitems
          in: query
          required: false
          description: The maximum number of traffic policy instances to be included in the
            response body for this request. If you have more than
            <code>MaxItems</code> traffic policy instances, the value of the
            <code>IsTruncated</code> element in the response is
            <code>true</code>, and the values of
            <code>HostedZoneIdMarker</code>,
            <code>TrafficPolicyInstanceNameMarker</code>, and
            <code>TrafficPolicyInstanceTypeMarker</code> represent the first
            traffic policy instance that Amazon Route 53 will return if you
            submit another request.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2013-04-01/trafficpolicies/{Id}/versions":
    get:
      operationId: ListTrafficPolicyVersions
      description: <p>Gets information about all of the versions for a specified traffic
        policy.</p> <p>Traffic policy versions are listed in numerical order by
        <code>VersionNumber</code>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListTrafficPolicyVersionsResponse"
        "480":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
        "481":
          description: NoSuchTrafficPolicy
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchTrafficPolicy"
      parameters:
        - name: Id
          in: path
          required: true
          description: Specify the value of <code>Id</code> of the traffic policy for which
            you want to list all versions.
          schema:
            type: string
            minLength: 1
            maxLength: 36
        - name: trafficpolicyversion
          in: query
          required: false
          description: <p>For your first request to <code>ListTrafficPolicyVersions</code>,
            don't include the <code>TrafficPolicyVersionMarker</code>
            parameter.</p> <p>If you have more traffic policy versions than the
            value of <code>MaxItems</code>,
            <code>ListTrafficPolicyVersions</code> returns only the first group
            of <code>MaxItems</code> versions. To get more traffic policy
            versions, submit another <code>ListTrafficPolicyVersions</code>
            request. For the value of <code>TrafficPolicyVersionMarker</code>,
            specify the value of <code>TrafficPolicyVersionMarker</code> in the
            previous response.</p>
          schema:
            type: string
            maxLength: 4
        - name: maxitems
          in: query
          required: false
          description: The maximum number of traffic policy versions that you want Amazon
            Route 53 to include in the response body for this request. If the
            specified traffic policy has more than <code>MaxItems</code>
            versions, the value of <code>IsTruncated</code> in the response is
            <code>true</code>, and the value of the
            <code>TrafficPolicyVersionMarker</code> element is the ID of the
            first version that Route 53 will return if you submit another
            request.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /2013-04-01/testdnsanswer#hostedzoneid&recordname&recordtype:
    get:
      operationId: TestDNSAnswer
      description: "Gets the value that Amazon Route 53 returns in response to a DNS
        request for a specified record name and type. You can optionally specify
        the IP address of a DNS resolver, an EDNS0 client subnet IP address, and
        a subnet mask. "
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TestDNSAnswerResponse"
        "480":
          description: NoSuchHostedZone
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/NoSuchHostedZone"
        "481":
          description: InvalidInput
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidInput"
      parameters:
        - name: hostedzoneid
          in: query
          required: true
          description: The ID of the hosted zone that you want Amazon Route 53 to simulate
            a query for.
          schema:
            type: string
            maxLength: 32
        - name: recordname
          in: query
          required: true
          description: The name of the resource record set that you want Amazon Route 53 to
            simulate a query for.
          schema:
            type: string
            maxLength: 1024
        - name: recordtype
          in: query
          required: true
          description: The type of the resource record set.
          schema:
            type: string
            enum:
              - SOA
              - A
              - TXT
              - NS
              - CNAME
              - MX
              - NAPTR
              - PTR
              - SRV
              - SPF
              - AAAA
              - CAA
        - name: resolverip
          in: query
          required: false
          description: If you want to simulate a request from a specific DNS resolver,
            specify the IP address for that resolver. If you omit this value,
            <code>TestDnsAnswer</code> uses the IP address of a DNS resolver in
            the AWS US East (N. Virginia) Region (<code>us-east-1</code>).
          schema:
            type: string
            maxLength: 45
            pattern: (^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$|^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$)
        - name: edns0clientsubnetip
          in: query
          required: false
          description: If the resolver that you specified for resolverip supports EDNS0,
            specify the IPv4 or IPv6 address of a client in the applicable
            location, for example, <code>192.0.2.44</code> or
            <code>2001:db8:85a3::8a2e:370:7334</code>.
          schema:
            type: string
            maxLength: 45
            pattern: (^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$|^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$)
        - name: edns0clientsubnetmask
          in: query
          required: false
          description: "<p>If you specify an IP address for
            <code>edns0clientsubnetip</code>, you can optionally specify the
            number of bits of the IP address that you want the checking tool to
            include in the DNS query. For example, if you specify
            <code>192.0.2.44</code> for <code>edns0clientsubnetip</code> and
            <code>24</code> for <code>edns0clientsubnetmask</code>, the checking
            tool will simulate a request from 192.0.2.0/24. The default value is
            24 bits for IPv4 addresses and 64 bits for IPv6 addresses.</p>
            <p>The range of valid values depends on whether
            <code>edns0clientsubnetip</code> is an IPv4 or an IPv6 address:</p>
            <ul> <li> <p> <b>IPv4</b>: Specify a value between 0 and 32</p>
            </li> <li> <p> <b>IPv6</b>: Specify a value between 0 and 128</p>
            </li> </ul>"
          schema:
            type: string
            minLength: 0
            maxLength: 3
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: https://route53.amazonaws.com
    variables: {}
    description: The general Route 53 multi-region endpoint
  - url: http://route53.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Route 53 endpoint for China (Beijing) and China (Ningxia)
  - url: https://route53.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Route 53 endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  requestBodies:
    CreateVPCAssociationAuthorizationBody:
      content:
        text/xml:
          schema:
            type: object
            required:
              - VPC
            properties:
              VPC:
                description: (Private hosted zones only) A complex type that contains
                  information about an Amazon VPC.
                type: object
                properties:
                  VPCRegion:
                    $ref: "#/components/schemas/VPCRegion"
                  VPCId:
                    $ref: "#/components/schemas/VPCId"
      required: true
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AssociateVPCWithHostedZoneResponse:
      type: object
      required:
        - ChangeInfo
      example:
        ChangeInfo:
          Comment: ""
          Id: /change/C3HC6WDB2UANE2
          Status: INSYNC
          SubmittedAt: 2017-01-31T01:36:41.958Z
      properties:
        ChangeInfo:
          $ref: "#/components/schemas/ChangeInfo"
      description: A complex type that contains the response information for the
        <code>AssociateVPCWithHostedZone</code> request.
    VPCRegion:
      type: string
      enum:
        - us-east-1
        - us-east-2
        - us-west-1
        - us-west-2
        - eu-west-1
        - eu-west-2
        - eu-west-3
        - eu-central-1
        - ap-east-1
        - me-south-1
        - ap-southeast-1
        - ap-southeast-2
        - ap-south-1
        - ap-northeast-1
        - ap-northeast-2
        - ap-northeast-3
        - eu-north-1
        - sa-east-1
        - ca-central-1
        - cn-north-1
      minLength: 1
      maxLength: 64
    VPCId:
      type: string
      description: "(Private hosted zones only) The ID of an Amazon VPC. "
      maxLength: 1024
    NoSuchHostedZone: {}
    NotAuthorizedException: {}
    InvalidVPCId: {}
    InvalidInput: {}
    PublicZoneVPCAssociation: {}
    ConflictingDomainExists: {}
    LimitsExceeded: {}
    ChangeResourceRecordSetsResponse:
      type: object
      required:
        - ChangeInfo
      example:
        ChangeInfo:
          Comment: Geolocation alias configuration for example.com
          Id: /change/C2682N5HXP0BZ4
          Status: PENDING
          SubmittedAt: 2017-02-10T01:36:41.958Z
      properties:
        ChangeInfo:
          $ref: "#/components/schemas/ChangeInfo"
      description: A complex type containing the response for the request.
    ResourceDescription:
      type: string
      maxLength: 256
    Changes:
      type: array
      items:
        $ref: "#/components/schemas/Change"
      minItems: 1
    NoSuchHealthCheck: {}
    InvalidChangeBatch: {}
    PriorRequestNotComplete: {}
    ChangeTagsForResourceResponse:
      type: object
      example: {}
      properties: {}
      description: Empty response for the request.
    Tag:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
        Value:
          $ref: "#/components/schemas/TagValue"
      description: A complex type that contains information about a tag that you want to
        add or edit for the specified health check or hosted zone.
    TagKey:
      type: string
      maxLength: 128
    ThrottlingException: {}
    CreateHealthCheckResponse:
      type: object
      required:
        - HealthCheck
      properties:
        HealthCheck:
          $ref: "#/components/schemas/HealthCheck"
      description: A complex type containing the response information for the new health
        check.
    IPAddress:
      type: string
      pattern: (^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$|^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$)
      maxLength: 45
    Port:
      type: integer
      minimum: 1
      maximum: 65535
    HealthCheckType:
      type: string
      enum:
        - HTTP
        - HTTPS
        - HTTP_STR_MATCH
        - HTTPS_STR_MATCH
        - TCP
        - CALCULATED
        - CLOUDWATCH_METRIC
    ResourcePath:
      type: string
      maxLength: 255
    FullyQualifiedDomainName:
      type: string
      maxLength: 255
    SearchString:
      type: string
      maxLength: 255
    RequestInterval:
      type: integer
      minimum: 10
      maximum: 30
    FailureThreshold:
      type: integer
      minimum: 1
      maximum: 10
    MeasureLatency:
      type: boolean
    Inverted:
      type: boolean
    Disabled:
      type: boolean
    HealthThreshold:
      type: integer
      minimum: 0
      maximum: 256
    ChildHealthCheckList:
      type: array
      items:
        $ref: "#/components/schemas/HealthCheckId"
      maxItems: 256
    EnableSNI:
      type: boolean
    HealthCheckRegionList:
      type: array
      items:
        $ref: "#/components/schemas/HealthCheckRegion"
      minItems: 3
      maxItems: 64
    AlarmIdentifier:
      type: object
      required:
        - Region
        - Name
      properties:
        Region:
          $ref: "#/components/schemas/CloudWatchRegion"
        Name:
          $ref: "#/components/schemas/AlarmName"
      description: A complex type that identifies the CloudWatch alarm that you want Amazon
        Route 53 health checkers to use to determine whether the specified
        health check is healthy.
    InsufficientDataHealthStatus:
      type: string
      enum:
        - Healthy
        - Unhealthy
        - LastKnownStatus
    TooManyHealthChecks: {}
    HealthCheckAlreadyExists: {}
    CreateHostedZoneResponse:
      type: object
      required:
        - HostedZone
        - ChangeInfo
        - DelegationSet
      properties:
        HostedZone:
          $ref: "#/components/schemas/HostedZone"
        ChangeInfo:
          $ref: "#/components/schemas/ChangeInfo"
        DelegationSet:
          $ref: "#/components/schemas/DelegationSet"
        VPC:
          $ref: "#/components/schemas/VPC"
      description: A complex type containing the response information for the hosted zone.
    IsPrivateZone:
      type: boolean
    InvalidDomainName: {}
    HostedZoneAlreadyExists: {}
    TooManyHostedZones: {}
    DelegationSetNotAvailable: {}
    NoSuchDelegationSet: {}
    DelegationSetNotReusable: {}
    CreateQueryLoggingConfigResponse:
      type: object
      required:
        - QueryLoggingConfig
      properties:
        QueryLoggingConfig:
          $ref: "#/components/schemas/QueryLoggingConfig"
    ConcurrentModification: {}
    NoSuchCloudWatchLogsLogGroup: {}
    QueryLoggingConfigAlreadyExists: {}
    InsufficientCloudWatchLogsResourcePolicy: {}
    CreateReusableDelegationSetResponse:
      type: object
      required:
        - DelegationSet
      properties:
        DelegationSet:
          $ref: "#/components/schemas/DelegationSet"
    DelegationSetAlreadyCreated: {}
    HostedZoneNotFound: {}
    InvalidArgument: {}
    DelegationSetAlreadyReusable: {}
    CreateTrafficPolicyResponse:
      type: object
      required:
        - TrafficPolicy
      properties:
        TrafficPolicy:
          $ref: "#/components/schemas/TrafficPolicy"
      description: A complex type that contains the response information for the
        <code>CreateTrafficPolicy</code> request.
    TooManyTrafficPolicies: {}
    TrafficPolicyAlreadyExists: {}
    InvalidTrafficPolicyDocument: {}
    CreateTrafficPolicyInstanceResponse:
      type: object
      required:
        - TrafficPolicyInstance
      properties:
        TrafficPolicyInstance:
          $ref: "#/components/schemas/TrafficPolicyInstance"
      description: A complex type that contains the response information for the
        <code>CreateTrafficPolicyInstance</code> request.
    TooManyTrafficPolicyInstances: {}
    NoSuchTrafficPolicy: {}
    TrafficPolicyInstanceAlreadyExists: {}
    CreateTrafficPolicyVersionResponse:
      type: object
      required:
        - TrafficPolicy
      properties:
        TrafficPolicy:
          $ref: "#/components/schemas/TrafficPolicy"
      description: A complex type that contains the response information for the
        <code>CreateTrafficPolicyVersion</code> request.
    TooManyTrafficPolicyVersionsForCurrentPolicy: {}
    CreateVPCAssociationAuthorizationResponse:
      type: object
      required:
        - HostedZoneId
        - VPC
      properties:
        HostedZoneId:
          $ref: "#/components/schemas/ResourceId"
        VPC:
          $ref: "#/components/schemas/VPC"
      description: A complex type that contains the response information from a
        <code>CreateVPCAssociationAuthorization</code> request.
    TooManyVPCAssociationAuthorizations: {}
    DeleteHealthCheckResponse:
      type: object
      properties: {}
      description: An empty element.
    HealthCheckInUse: {}
    DeleteHostedZoneResponse:
      type: object
      required:
        - ChangeInfo
      properties:
        ChangeInfo:
          $ref: "#/components/schemas/ChangeInfo"
      description: A complex type that contains the response to a
        <code>DeleteHostedZone</code> request.
    HostedZoneNotEmpty: {}
    DeleteQueryLoggingConfigResponse:
      type: object
      properties: {}
    NoSuchQueryLoggingConfig: {}
    DeleteReusableDelegationSetResponse:
      type: object
      properties: {}
      description: An empty element.
    DelegationSetInUse: {}
    DeleteTrafficPolicyResponse:
      type: object
      properties: {}
      description: An empty element.
    TrafficPolicyInUse: {}
    DeleteTrafficPolicyInstanceResponse:
      type: object
      properties: {}
      description: An empty element.
    NoSuchTrafficPolicyInstance: {}
    DeleteVPCAssociationAuthorizationResponse:
      type: object
      properties: {}
      description: Empty response for the request.
    VPCAssociationAuthorizationNotFound: {}
    DisassociateVPCFromHostedZoneResponse:
      type: object
      required:
        - ChangeInfo
      properties:
        ChangeInfo:
          $ref: "#/components/schemas/ChangeInfo"
      description: A complex type that contains the response information for the
        disassociate request.
    VPCAssociationNotFound: {}
    LastVPCAssociation: {}
    GetAccountLimitResponse:
      type: object
      required:
        - Limit
        - Count
      properties:
        Limit:
          $ref: "#/components/schemas/AccountLimit"
        Count:
          $ref: "#/components/schemas/UsageCount"
      description: "A complex type that contains the requested limit. "
    GetChangeResponse:
      type: object
      required:
        - ChangeInfo
      properties:
        ChangeInfo:
          $ref: "#/components/schemas/ChangeInfo"
      description: A complex type that contains the <code>ChangeInfo</code> element.
    NoSuchChange: {}
    GetCheckerIpRangesResponse:
      type: object
      required:
        - CheckerIpRanges
      properties:
        CheckerIpRanges:
          $ref: "#/components/schemas/CheckerIpRanges"
      description: A complex type that contains the <code>CheckerIpRanges</code> element.
    GetGeoLocationResponse:
      type: object
      required:
        - GeoLocationDetails
      properties:
        GeoLocationDetails:
          $ref: "#/components/schemas/GeoLocationDetails"
      description: A complex type that contains the response information for the specified
        geolocation code.
    NoSuchGeoLocation: {}
    GetHealthCheckResponse:
      type: object
      required:
        - HealthCheck
      properties:
        HealthCheck:
          $ref: "#/components/schemas/HealthCheck"
      description: A complex type that contains the response to a
        <code>GetHealthCheck</code> request.
    IncompatibleVersion: {}
    GetHealthCheckCountResponse:
      type: object
      required:
        - HealthCheckCount
      properties:
        HealthCheckCount:
          $ref: "#/components/schemas/HealthCheckCount"
      description: A complex type that contains the response to a
        <code>GetHealthCheckCount</code> request.
    GetHealthCheckLastFailureReasonResponse:
      type: object
      required:
        - HealthCheckObservations
      properties:
        HealthCheckObservations:
          $ref: "#/components/schemas/HealthCheckObservations"
      description: A complex type that contains the response to a
        <code>GetHealthCheckLastFailureReason</code> request.
    GetHealthCheckStatusResponse:
      type: object
      required:
        - HealthCheckObservations
      properties:
        HealthCheckObservations:
          $ref: "#/components/schemas/HealthCheckObservations"
      description: A complex type that contains the response to a
        <code>GetHealthCheck</code> request.
    GetHostedZoneResponse:
      type: object
      required:
        - HostedZone
      example:
        DelegationSet:
          NameServers:
            - ns-2048.awsdns-64.com
            - ns-2049.awsdns-65.net
            - ns-2050.awsdns-66.org
            - ns-2051.awsdns-67.co.uk
        HostedZone:
          CallerReference: C741617D-04E4-F8DE-B9D7-0D150FC61C2E
          Config:
            PrivateZone: false
          Id: /hostedzone/Z3M3LMPEXAMPLE
          Name: myawsbucket.com.
          ResourceRecordSetCount: 8
      properties:
        HostedZone:
          $ref: "#/components/schemas/HostedZone"
        DelegationSet:
          $ref: "#/components/schemas/DelegationSet"
        VPCs:
          $ref: "#/components/schemas/VPCs"
      description: A complex type that contain the response to a <code>GetHostedZone</code>
        request.
    GetHostedZoneCountResponse:
      type: object
      required:
        - HostedZoneCount
      properties:
        HostedZoneCount:
          $ref: "#/components/schemas/HostedZoneCount"
      description: A complex type that contains the response to a
        <code>GetHostedZoneCount</code> request.
    GetHostedZoneLimitResponse:
      type: object
      required:
        - Limit
        - Count
      properties:
        Limit:
          $ref: "#/components/schemas/HostedZoneLimit"
        Count:
          $ref: "#/components/schemas/UsageCount"
      description: "A complex type that contains the requested limit. "
    HostedZoneNotPrivate: {}
    GetQueryLoggingConfigResponse:
      type: object
      required:
        - QueryLoggingConfig
      properties:
        QueryLoggingConfig:
          $ref: "#/components/schemas/QueryLoggingConfig"
    GetReusableDelegationSetResponse:
      type: object
      required:
        - DelegationSet
      properties:
        DelegationSet:
          $ref: "#/components/schemas/DelegationSet"
      description: A complex type that contains the response to the
        <code>GetReusableDelegationSet</code> request.
    GetReusableDelegationSetLimitResponse:
      type: object
      required:
        - Limit
        - Count
      properties:
        Limit:
          $ref: "#/components/schemas/ReusableDelegationSetLimit"
        Count:
          $ref: "#/components/schemas/UsageCount"
      description: "A complex type that contains the requested limit. "
    GetTrafficPolicyResponse:
      type: object
      required:
        - TrafficPolicy
      properties:
        TrafficPolicy:
          $ref: "#/components/schemas/TrafficPolicy"
      description: A complex type that contains the response information for the request.
    GetTrafficPolicyInstanceResponse:
      type: object
      required:
        - TrafficPolicyInstance
      properties:
        TrafficPolicyInstance:
          $ref: "#/components/schemas/TrafficPolicyInstance"
      description: A complex type that contains information about the resource record sets
        that Amazon Route 53 created based on a specified traffic policy.
    GetTrafficPolicyInstanceCountResponse:
      type: object
      required:
        - TrafficPolicyInstanceCount
      properties:
        TrafficPolicyInstanceCount:
          $ref: "#/components/schemas/TrafficPolicyInstanceCount"
      description: A complex type that contains information about the resource record sets
        that Amazon Route 53 created based on a specified traffic policy.
    ListGeoLocationsResponse:
      type: object
      required:
        - GeoLocationDetailsList
        - IsTruncated
        - MaxItems
      properties:
        GeoLocationDetailsList:
          $ref: "#/components/schemas/GeoLocationDetailsList"
        IsTruncated:
          $ref: "#/components/schemas/PageTruncated"
        NextContinentCode:
          $ref: "#/components/schemas/GeoLocationContinentCode"
        NextCountryCode:
          $ref: "#/components/schemas/GeoLocationCountryCode"
        NextSubdivisionCode:
          $ref: "#/components/schemas/GeoLocationSubdivisionCode"
        MaxItems:
          $ref: "#/components/schemas/PageMaxItems"
      description: A complex type containing the response information for the request.
    ListHealthChecksResponse:
      type: object
      required:
        - HealthChecks
        - Marker
        - IsTruncated
        - MaxItems
      properties:
        HealthChecks:
          $ref: "#/components/schemas/HealthChecks"
        Marker:
          $ref: "#/components/schemas/PageMarker"
        IsTruncated:
          $ref: "#/components/schemas/PageTruncated"
        NextMarker:
          $ref: "#/components/schemas/PageMarker"
        MaxItems:
          $ref: "#/components/schemas/PageMaxItems"
      description: A complex type that contains the response to a
        <code>ListHealthChecks</code> request.
    ListHostedZonesResponse:
      type: object
      required:
        - HostedZones
        - Marker
        - IsTruncated
        - MaxItems
      properties:
        HostedZones:
          $ref: "#/components/schemas/HostedZones"
        Marker:
          $ref: "#/components/schemas/PageMarker"
        IsTruncated:
          $ref: "#/components/schemas/PageTruncated"
        NextMarker:
          $ref: "#/components/schemas/PageMarker"
        MaxItems:
          $ref: "#/components/schemas/PageMaxItems"
    ListHostedZonesByNameResponse:
      type: object
      required:
        - HostedZones
        - IsTruncated
        - MaxItems
      properties:
        HostedZones:
          $ref: "#/components/schemas/HostedZones"
        DNSName:
          $ref: "#/components/schemas/DNSName"
        HostedZoneId:
          $ref: "#/components/schemas/ResourceId"
        IsTruncated:
          $ref: "#/components/schemas/PageTruncated"
        NextDNSName:
          $ref: "#/components/schemas/DNSName"
        NextHostedZoneId:
          $ref: "#/components/schemas/ResourceId"
        MaxItems:
          $ref: "#/components/schemas/PageMaxItems"
      description: A complex type that contains the response information for the request.
    ListQueryLoggingConfigsResponse:
      type: object
      required:
        - QueryLoggingConfigs
      properties:
        QueryLoggingConfigs:
          $ref: "#/components/schemas/QueryLoggingConfigs"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
    InvalidPaginationToken: {}
    ListResourceRecordSetsResponse:
      type: object
      required:
        - ResourceRecordSets
        - IsTruncated
        - MaxItems
      properties:
        ResourceRecordSets:
          $ref: "#/components/schemas/ResourceRecordSets"
        IsTruncated:
          $ref: "#/components/schemas/PageTruncated"
        NextRecordName:
          $ref: "#/components/schemas/DNSName"
        NextRecordType:
          $ref: "#/components/schemas/RRType"
        NextRecordIdentifier:
          $ref: "#/components/schemas/ResourceRecordSetIdentifier"
        MaxItems:
          $ref: "#/components/schemas/PageMaxItems"
      description: A complex type that contains list information for the resource record
        set.
    ListReusableDelegationSetsResponse:
      type: object
      required:
        - DelegationSets
        - Marker
        - IsTruncated
        - MaxItems
      properties:
        DelegationSets:
          $ref: "#/components/schemas/DelegationSets"
        Marker:
          $ref: "#/components/schemas/PageMarker"
        IsTruncated:
          $ref: "#/components/schemas/PageTruncated"
        NextMarker:
          $ref: "#/components/schemas/PageMarker"
        MaxItems:
          $ref: "#/components/schemas/PageMaxItems"
      description: A complex type that contains information about the reusable delegation
        sets that are associated with the current AWS account.
    ListTagsForResourceResponse:
      type: object
      required:
        - ResourceTagSet
      properties:
        ResourceTagSet:
          $ref: "#/components/schemas/ResourceTagSet"
      description: A complex type that contains information about the health checks or
        hosted zones for which you want to list tags.
    ListTagsForResourcesResponse:
      type: object
      required:
        - ResourceTagSets
      properties:
        ResourceTagSets:
          $ref: "#/components/schemas/ResourceTagSetList"
      description: A complex type containing tags for the specified resources.
    TagResourceId:
      type: string
      maxLength: 64
    ListTrafficPoliciesResponse:
      type: object
      required:
        - TrafficPolicySummaries
        - IsTruncated
        - TrafficPolicyIdMarker
        - MaxItems
      properties:
        TrafficPolicySummaries:
          $ref: "#/components/schemas/TrafficPolicySummaries"
        IsTruncated:
          $ref: "#/components/schemas/PageTruncated"
        TrafficPolicyIdMarker:
          $ref: "#/components/schemas/TrafficPolicyId"
        MaxItems:
          $ref: "#/components/schemas/PageMaxItems"
      description: A complex type that contains the response information for the request.
    ListTrafficPolicyInstancesResponse:
      type: object
      required:
        - TrafficPolicyInstances
        - IsTruncated
        - MaxItems
      properties:
        TrafficPolicyInstances:
          $ref: "#/components/schemas/TrafficPolicyInstances"
        HostedZoneIdMarker:
          $ref: "#/components/schemas/ResourceId"
        TrafficPolicyInstanceNameMarker:
          $ref: "#/components/schemas/DNSName"
        TrafficPolicyInstanceTypeMarker:
          $ref: "#/components/schemas/RRType"
        IsTruncated:
          $ref: "#/components/schemas/PageTruncated"
        MaxItems:
          $ref: "#/components/schemas/PageMaxItems"
      description: A complex type that contains the response information for the request.
    ListTrafficPolicyInstancesByHostedZoneResponse:
      type: object
      required:
        - TrafficPolicyInstances
        - IsTruncated
        - MaxItems
      properties:
        TrafficPolicyInstances:
          $ref: "#/components/schemas/TrafficPolicyInstances"
        TrafficPolicyInstanceNameMarker:
          $ref: "#/components/schemas/DNSName"
        TrafficPolicyInstanceTypeMarker:
          $ref: "#/components/schemas/RRType"
        IsTruncated:
          $ref: "#/components/schemas/PageTruncated"
        MaxItems:
          $ref: "#/components/schemas/PageMaxItems"
      description: A complex type that contains the response information for the request.
    ListTrafficPolicyInstancesByPolicyResponse:
      type: object
      required:
        - TrafficPolicyInstances
        - IsTruncated
        - MaxItems
      properties:
        TrafficPolicyInstances:
          $ref: "#/components/schemas/TrafficPolicyInstances"
        HostedZoneIdMarker:
          $ref: "#/components/schemas/ResourceId"
        TrafficPolicyInstanceNameMarker:
          $ref: "#/components/schemas/DNSName"
        TrafficPolicyInstanceTypeMarker:
          $ref: "#/components/schemas/RRType"
        IsTruncated:
          $ref: "#/components/schemas/PageTruncated"
        MaxItems:
          $ref: "#/components/schemas/PageMaxItems"
      description: A complex type that contains the response information for the request.
    ListTrafficPolicyVersionsResponse:
      type: object
      required:
        - TrafficPolicies
        - IsTruncated
        - TrafficPolicyVersionMarker
        - MaxItems
      properties:
        TrafficPolicies:
          $ref: "#/components/schemas/TrafficPolicies"
        IsTruncated:
          $ref: "#/components/schemas/PageTruncated"
        TrafficPolicyVersionMarker:
          $ref: "#/components/schemas/TrafficPolicyVersionMarker"
        MaxItems:
          $ref: "#/components/schemas/PageMaxItems"
      description: A complex type that contains the response information for the request.
    ListVPCAssociationAuthorizationsResponse:
      type: object
      required:
        - HostedZoneId
        - VPCs
      properties:
        HostedZoneId:
          $ref: "#/components/schemas/ResourceId"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        VPCs:
          $ref: "#/components/schemas/VPCs"
      description: A complex type that contains the response information for the request.
    TestDNSAnswerResponse:
      type: object
      required:
        - Nameserver
        - RecordName
        - RecordType
        - RecordData
        - ResponseCode
        - Protocol
      properties:
        Nameserver:
          $ref: "#/components/schemas/Nameserver"
        RecordName:
          $ref: "#/components/schemas/DNSName"
        RecordType:
          $ref: "#/components/schemas/RRType"
        RecordData:
          $ref: "#/components/schemas/RecordData"
        ResponseCode:
          $ref: "#/components/schemas/DNSRCode"
        Protocol:
          $ref: "#/components/schemas/TransportProtocol"
      description: "A complex type that contains the response to a
        <code>TestDNSAnswer</code> request. "
    UpdateHealthCheckResponse:
      type: object
      required:
        - HealthCheck
      properties:
        HealthCheck:
          $ref: "#/components/schemas/HealthCheck"
      description: A complex type that contains the response to the
        <code>UpdateHealthCheck</code> request.
    HealthCheckId:
      type: string
      maxLength: 64
    HealthCheckRegion:
      type: string
      enum:
        - us-east-1
        - us-west-1
        - us-west-2
        - eu-west-1
        - ap-southeast-1
        - ap-southeast-2
        - ap-northeast-1
        - sa-east-1
      minLength: 1
      maxLength: 64
    CloudWatchRegion:
      type: string
      enum:
        - us-east-1
        - us-east-2
        - us-west-1
        - us-west-2
        - ca-central-1
        - eu-central-1
        - eu-west-1
        - eu-west-2
        - eu-west-3
        - ap-east-1
        - me-south-1
        - ap-south-1
        - ap-southeast-1
        - ap-southeast-2
        - ap-northeast-1
        - ap-northeast-2
        - ap-northeast-3
        - eu-north-1
        - sa-east-1
        - cn-northwest-1
        - cn-north-1
      minLength: 1
      maxLength: 64
    AlarmName:
      type: string
      minLength: 1
      maxLength: 256
    ResettableElementName:
      type: string
      enum:
        - FullyQualifiedDomainName
        - Regions
        - ResourcePath
        - ChildHealthChecks
      minLength: 1
      maxLength: 64
    HealthCheckVersionMismatch: {}
    UpdateHostedZoneCommentResponse:
      type: object
      required:
        - HostedZone
      properties:
        HostedZone:
          $ref: "#/components/schemas/HostedZone"
      description: A complex type that contains the response to the
        <code>UpdateHostedZoneComment</code> request.
    UpdateTrafficPolicyCommentResponse:
      type: object
      required:
        - TrafficPolicy
      properties:
        TrafficPolicy:
          $ref: "#/components/schemas/TrafficPolicy"
      description: A complex type that contains the response information for the traffic
        policy.
    UpdateTrafficPolicyInstanceResponse:
      type: object
      required:
        - TrafficPolicyInstance
      properties:
        TrafficPolicyInstance:
          $ref: "#/components/schemas/TrafficPolicyInstance"
      description: A complex type that contains information about the resource record sets
        that Amazon Route 53 created based on a specified traffic policy.
    ConflictingTypes: {}
    AccountLimitType:
      type: string
      enum:
        - MAX_HEALTH_CHECKS_BY_OWNER
        - MAX_HOSTED_ZONES_BY_OWNER
        - MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER
        - MAX_REUSABLE_DELEGATION_SETS_BY_OWNER
        - MAX_TRAFFIC_POLICIES_BY_OWNER
    LimitValue:
      type: integer
      minimum: 1
    AccountLimit:
      type: object
      required:
        - Type
        - Value
      properties:
        Type:
          $ref: "#/components/schemas/AccountLimitType"
        Value:
          $ref: "#/components/schemas/LimitValue"
      description: A complex type that contains the type of limit that you specified in the
        request and the current value for that limit.
    AliasHealthEnabled:
      type: boolean
    ResourceId:
      type: string
      maxLength: 32
    DNSName:
      type: string
      maxLength: 1024
    AliasTarget:
      type: object
      required:
        - HostedZoneId
        - DNSName
        - EvaluateTargetHealth
      properties:
        HostedZoneId:
          $ref: "#/components/schemas/ResourceId"
        DNSName:
          $ref: "#/components/schemas/DNSName"
        EvaluateTargetHealth:
          $ref: "#/components/schemas/AliasHealthEnabled"
      description: <p> <i>Alias resource record sets only:</i> Information about the AWS
        resource, such as a CloudFront distribution or an Amazon S3 bucket, that
        you want to route traffic to.</p> <p>When creating resource record sets
        for a private hosted zone, note the following:</p> <ul> <li> <p>Creating
        geolocation alias resource record sets or latency alias resource record
        sets in a private hosted zone is unsupported.</p> </li> <li> <p>For
        information about creating failover resource record sets in a private
        hosted zone, see <a
        href="http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-private-hosted-zones.html">Configuring
        Failover in a Private Hosted Zone</a>.</p> </li> </ul>
    AssociateVPCComment:
      type: string
    VPC:
      type: object
      properties:
        VPCRegion:
          $ref: "#/components/schemas/VPCRegion"
        VPCId:
          $ref: "#/components/schemas/VPCId"
      description: (Private hosted zones only) A complex type that contains information
        about an Amazon VPC.
    AssociateVPCWithHostedZoneRequest:
      type: object
      required:
        - VPC
      properties:
        VPC:
          $ref: "#/components/schemas/VPC"
        Comment:
          $ref: "#/components/schemas/AssociateVPCComment"
      description: A complex type that contains information about the request to associate
        a VPC with a private hosted zone.
    ChangeInfo:
      type: object
      required:
        - Id
        - Status
        - SubmittedAt
      properties:
        Id:
          $ref: "#/components/schemas/ResourceId"
        Status:
          $ref: "#/components/schemas/ChangeStatus"
        SubmittedAt:
          $ref: "#/components/schemas/TimeStamp"
        Comment:
          $ref: "#/components/schemas/ResourceDescription"
      description: A complex type that describes change information about changes made to
        your hosted zone.
    ChangeAction:
      type: string
      enum:
        - CREATE
        - DELETE
        - UPSERT
    ResourceRecordSet:
      type: object
      required:
        - Name
        - Type
      properties:
        Name:
          $ref: "#/components/schemas/DNSName"
        Type:
          $ref: "#/components/schemas/RRType"
        SetIdentifier:
          $ref: "#/components/schemas/ResourceRecordSetIdentifier"
        Weight:
          $ref: "#/components/schemas/ResourceRecordSetWeight"
        Region:
          $ref: "#/components/schemas/ResourceRecordSetRegion"
        GeoLocation:
          $ref: "#/components/schemas/GeoLocation"
        Failover:
          $ref: "#/components/schemas/ResourceRecordSetFailover"
        MultiValueAnswer:
          $ref: "#/components/schemas/ResourceRecordSetMultiValueAnswer"
        TTL:
          $ref: "#/components/schemas/TTL"
        ResourceRecords:
          $ref: "#/components/schemas/ResourceRecords"
        AliasTarget:
          $ref: "#/components/schemas/AliasTarget"
        HealthCheckId:
          $ref: "#/components/schemas/HealthCheckId"
        TrafficPolicyInstanceId:
          $ref: "#/components/schemas/TrafficPolicyInstanceId"
      description: Information about the resource record set to create or delete.
    Change:
      type: object
      required:
        - Action
        - ResourceRecordSet
      properties:
        Action:
          $ref: "#/components/schemas/ChangeAction"
        ResourceRecordSet:
          $ref: "#/components/schemas/ResourceRecordSet"
      description: The information for each resource record set that you want to change.
    ChangeBatch:
      type: object
      required:
        - Changes
      properties:
        Comment:
          $ref: "#/components/schemas/ResourceDescription"
        Changes:
          $ref: "#/components/schemas/Changes"
      description: The information for a change request.
    ChangeStatus:
      type: string
      enum:
        - PENDING
        - INSYNC
    TimeStamp:
      type: string
      format: date-time
    ChangeResourceRecordSetsRequest:
      type: object
      required:
        - ChangeBatch
      properties:
        ChangeBatch:
          $ref: "#/components/schemas/ChangeBatch"
      description: A complex type that contains change information for the resource record
        set.
    TagResourceType:
      type: string
      enum:
        - healthcheck
        - hostedzone
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
      minItems: 1
      maxItems: 10
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
      minItems: 1
      maxItems: 10
    ChangeTagsForResourceRequest:
      type: object
      properties:
        AddTags:
          $ref: "#/components/schemas/TagList"
        RemoveTagKeys:
          $ref: "#/components/schemas/TagKeyList"
      description: A complex type that contains information about the tags that you want to
        add, edit, or delete.
    IPAddressCidr:
      type: string
    CheckerIpRanges:
      type: array
      items:
        $ref: "#/components/schemas/IPAddressCidr"
    EvaluationPeriods:
      type: integer
      minimum: 1
    Threshold:
      type: number
      format: double
    ComparisonOperator:
      type: string
      enum:
        - GreaterThanOrEqualToThreshold
        - GreaterThanThreshold
        - LessThanThreshold
        - LessThanOrEqualToThreshold
    Period:
      type: integer
      minimum: 60
    MetricName:
      type: string
      minLength: 1
      maxLength: 255
    Namespace:
      type: string
      minLength: 1
      maxLength: 255
    Statistic:
      type: string
      enum:
        - Average
        - Sum
        - SampleCount
        - Maximum
        - Minimum
    DimensionList:
      type: array
      items:
        $ref: "#/components/schemas/Dimension"
      maxItems: 10
    CloudWatchAlarmConfiguration:
      type: object
      required:
        - EvaluationPeriods
        - Threshold
        - ComparisonOperator
        - Period
        - MetricName
        - Namespace
        - Statistic
      properties:
        EvaluationPeriods:
          $ref: "#/components/schemas/EvaluationPeriods"
        Threshold:
          $ref: "#/components/schemas/Threshold"
        ComparisonOperator:
          $ref: "#/components/schemas/ComparisonOperator"
        Period:
          $ref: "#/components/schemas/Period"
        MetricName:
          $ref: "#/components/schemas/MetricName"
        Namespace:
          $ref: "#/components/schemas/Namespace"
        Statistic:
          $ref: "#/components/schemas/Statistic"
        Dimensions:
          $ref: "#/components/schemas/DimensionList"
      description: A complex type that contains information about the CloudWatch alarm that
        Amazon Route 53 is monitoring for this health check.
    CloudWatchLogsLogGroupArn:
      type: string
    HealthCheckNonce:
      type: string
      minLength: 1
      maxLength: 64
    HealthCheckConfig:
      type: object
      required:
        - Type
      properties:
        IPAddress:
          $ref: "#/components/schemas/IPAddress"
        Port:
          $ref: "#/components/schemas/Port"
        Type:
          $ref: "#/components/schemas/HealthCheckType"
        ResourcePath:
          $ref: "#/components/schemas/ResourcePath"
        FullyQualifiedDomainName:
          $ref: "#/components/schemas/FullyQualifiedDomainName"
        SearchString:
          $ref: "#/components/schemas/SearchString"
        RequestInterval:
          $ref: "#/components/schemas/RequestInterval"
        FailureThreshold:
          $ref: "#/components/schemas/FailureThreshold"
        MeasureLatency:
          $ref: "#/components/schemas/MeasureLatency"
        Inverted:
          $ref: "#/components/schemas/Inverted"
        Disabled:
          $ref: "#/components/schemas/Disabled"
        HealthThreshold:
          $ref: "#/components/schemas/HealthThreshold"
        ChildHealthChecks:
          $ref: "#/components/schemas/ChildHealthCheckList"
        EnableSNI:
          $ref: "#/components/schemas/EnableSNI"
        Regions:
          $ref: "#/components/schemas/HealthCheckRegionList"
        AlarmIdentifier:
          $ref: "#/components/schemas/AlarmIdentifier"
        InsufficientDataHealthStatus:
          $ref: "#/components/schemas/InsufficientDataHealthStatus"
      description: A complex type that contains information about the health check.
    CreateHealthCheckRequest:
      type: object
      required:
        - CallerReference
        - HealthCheckConfig
      properties:
        CallerReference:
          $ref: "#/components/schemas/HealthCheckNonce"
        HealthCheckConfig:
          $ref: "#/components/schemas/HealthCheckConfig"
      description: A complex type that contains the health check request information.
    HealthCheck:
      type: object
      required:
        - Id
        - CallerReference
        - HealthCheckConfig
        - HealthCheckVersion
      properties:
        Id:
          $ref: "#/components/schemas/HealthCheckId"
        CallerReference:
          $ref: "#/components/schemas/HealthCheckNonce"
        LinkedService:
          $ref: "#/components/schemas/LinkedService"
        HealthCheckConfig:
          $ref: "#/components/schemas/HealthCheckConfig"
        HealthCheckVersion:
          $ref: "#/components/schemas/HealthCheckVersion"
        CloudWatchAlarmConfiguration:
          $ref: "#/components/schemas/CloudWatchAlarmConfiguration"
      description: A complex type that contains information about one health check that is
        associated with the current AWS account.
    ResourceURI:
      type: string
      maxLength: 1024
    Nonce:
      type: string
      minLength: 1
      maxLength: 128
    HostedZoneConfig:
      type: object
      properties:
        Comment:
          $ref: "#/components/schemas/ResourceDescription"
        PrivateZone:
          $ref: "#/components/schemas/IsPrivateZone"
      description: A complex type that contains an optional comment about your hosted zone.
        If you don't want to specify a comment, omit both the
        <code>HostedZoneConfig</code> and <code>Comment</code> elements.
    CreateHostedZoneRequest:
      type: object
      required:
        - Name
        - CallerReference
      properties:
        Name:
          $ref: "#/components/schemas/DNSName"
        VPC:
          $ref: "#/components/schemas/VPC"
        CallerReference:
          $ref: "#/components/schemas/Nonce"
        HostedZoneConfig:
          $ref: "#/components/schemas/HostedZoneConfig"
        DelegationSetId:
          $ref: "#/components/schemas/ResourceId"
      description: A complex type that contains information about the request to create a
        public or private hosted zone.
    HostedZone:
      type: object
      required:
        - Id
        - Name
        - CallerReference
      properties:
        Id:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/DNSName"
        CallerReference:
          $ref: "#/components/schemas/Nonce"
        Config:
          $ref: "#/components/schemas/HostedZoneConfig"
        ResourceRecordSetCount:
          $ref: "#/components/schemas/HostedZoneRRSetCount"
        LinkedService:
          $ref: "#/components/schemas/LinkedService"
      description: A complex type that contains general information about the hosted zone.
    DelegationSet:
      type: object
      required:
        - NameServers
      properties:
        Id:
          $ref: "#/components/schemas/ResourceId"
        CallerReference:
          $ref: "#/components/schemas/Nonce"
        NameServers:
          $ref: "#/components/schemas/DelegationSetNameServers"
      description: A complex type that lists the name servers in a delegation set, as well
        as the <code>CallerReference</code> and the <code>ID</code> for the
        delegation set.
    CreateQueryLoggingConfigRequest:
      type: object
      required:
        - HostedZoneId
        - CloudWatchLogsLogGroupArn
      properties:
        HostedZoneId:
          $ref: "#/components/schemas/ResourceId"
        CloudWatchLogsLogGroupArn:
          $ref: "#/components/schemas/CloudWatchLogsLogGroupArn"
    QueryLoggingConfig:
      type: object
      required:
        - Id
        - HostedZoneId
        - CloudWatchLogsLogGroupArn
      properties:
        Id:
          $ref: "#/components/schemas/QueryLoggingConfigId"
        HostedZoneId:
          $ref: "#/components/schemas/ResourceId"
        CloudWatchLogsLogGroupArn:
          $ref: "#/components/schemas/CloudWatchLogsLogGroupArn"
      description: A complex type that contains information about a configuration for DNS
        query logging.
    CreateReusableDelegationSetRequest:
      type: object
      required:
        - CallerReference
      properties:
        CallerReference:
          $ref: "#/components/schemas/Nonce"
        HostedZoneId:
          $ref: "#/components/schemas/ResourceId"
    TTL:
      type: integer
      minimum: 0
      maximum: 2147483647
    TrafficPolicyId:
      type: string
      minLength: 1
      maxLength: 36
    TrafficPolicyVersion:
      type: integer
      minimum: 1
      maximum: 1000
    CreateTrafficPolicyInstanceRequest:
      type: object
      required:
        - HostedZoneId
        - Name
        - TTL
        - TrafficPolicyId
        - TrafficPolicyVersion
      properties:
        HostedZoneId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/DNSName"
        TTL:
          $ref: "#/components/schemas/TTL"
        TrafficPolicyId:
          $ref: "#/components/schemas/TrafficPolicyId"
        TrafficPolicyVersion:
          $ref: "#/components/schemas/TrafficPolicyVersion"
      description: A complex type that contains information about the resource record sets
        that you want to create based on a specified traffic policy.
    TrafficPolicyInstance:
      type: object
      required:
        - Id
        - HostedZoneId
        - Name
        - TTL
        - State
        - Message
        - TrafficPolicyId
        - TrafficPolicyVersion
        - TrafficPolicyType
      properties:
        Id:
          $ref: "#/components/schemas/TrafficPolicyInstanceId"
        HostedZoneId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/DNSName"
        TTL:
          $ref: "#/components/schemas/TTL"
        State:
          $ref: "#/components/schemas/TrafficPolicyInstanceState"
        Message:
          $ref: "#/components/schemas/Message"
        TrafficPolicyId:
          $ref: "#/components/schemas/TrafficPolicyId"
        TrafficPolicyVersion:
          $ref: "#/components/schemas/TrafficPolicyVersion"
        TrafficPolicyType:
          $ref: "#/components/schemas/RRType"
      description: A complex type that contains settings for the new traffic policy
        instance.
    TrafficPolicyName:
      type: string
      maxLength: 512
    TrafficPolicyDocument:
      type: string
      maxLength: 102400
    TrafficPolicyComment:
      type: string
      maxLength: 1024
    CreateTrafficPolicyRequest:
      type: object
      required:
        - Name
        - Document
      properties:
        Name:
          $ref: "#/components/schemas/TrafficPolicyName"
        Document:
          $ref: "#/components/schemas/TrafficPolicyDocument"
        Comment:
          $ref: "#/components/schemas/TrafficPolicyComment"
      description: A complex type that contains information about the traffic policy that
        you want to create.
    TrafficPolicy:
      type: object
      required:
        - Id
        - Version
        - Name
        - Type
        - Document
      properties:
        Id:
          $ref: "#/components/schemas/TrafficPolicyId"
        Version:
          $ref: "#/components/schemas/TrafficPolicyVersion"
        Name:
          $ref: "#/components/schemas/TrafficPolicyName"
        Type:
          $ref: "#/components/schemas/RRType"
        Document:
          $ref: "#/components/schemas/TrafficPolicyDocument"
        Comment:
          $ref: "#/components/schemas/TrafficPolicyComment"
      description: A complex type that contains settings for a traffic policy.
    CreateTrafficPolicyVersionRequest:
      type: object
      required:
        - Document
      properties:
        Document:
          $ref: "#/components/schemas/TrafficPolicyDocument"
        Comment:
          $ref: "#/components/schemas/TrafficPolicyComment"
      description: A complex type that contains information about the traffic policy that
        you want to create a new version for.
    CreateVPCAssociationAuthorizationRequest:
      type: object
      required:
        - VPC
      properties:
        VPC:
          $ref: "#/components/schemas/VPC"
      description: A complex type that contains information about the request to authorize
        associating a VPC with your private hosted zone. Authorization is only
        required when a private hosted zone and a VPC were created by using
        different accounts.
    DNSRCode:
      type: string
    DelegationSetNameServers:
      type: array
      items:
        $ref: "#/components/schemas/DNSName"
      minItems: 1
    DelegationSets:
      type: array
      items:
        $ref: "#/components/schemas/DelegationSet"
    DeleteHealthCheckRequest:
      type: object
      properties: {}
      description: This action deletes a health check.
    DeleteHostedZoneRequest:
      type: object
      properties: {}
      description: A request to delete a hosted zone.
    QueryLoggingConfigId:
      type: string
      minLength: 1
      maxLength: 36
    DeleteQueryLoggingConfigRequest:
      type: object
      properties: {}
    DeleteReusableDelegationSetRequest:
      type: object
      properties: {}
      description: A request to delete a reusable delegation set.
    TrafficPolicyInstanceId:
      type: string
      minLength: 1
      maxLength: 36
    DeleteTrafficPolicyInstanceRequest:
      type: object
      properties: {}
      description: A request to delete a specified traffic policy instance.
    DeleteTrafficPolicyRequest:
      type: object
      properties: {}
      description: A request to delete a specified traffic policy version.
    DeleteVPCAssociationAuthorizationRequest:
      type: object
      required:
        - VPC
      properties:
        VPC:
          $ref: "#/components/schemas/VPC"
      description: "A complex type that contains information about the request to remove
        authorization to associate a VPC that was created by one AWS account
        with a hosted zone that was created with a different AWS account. "
    DimensionField:
      type: string
      minLength: 1
      maxLength: 255
    Dimension:
      type: object
      required:
        - Name
        - Value
      properties:
        Name:
          $ref: "#/components/schemas/DimensionField"
        Value:
          $ref: "#/components/schemas/DimensionField"
      description: For the metric that the CloudWatch alarm is associated with, a complex
        type that contains information about one dimension.
    DisassociateVPCComment:
      type: string
    DisassociateVPCFromHostedZoneRequest:
      type: object
      required:
        - VPC
      properties:
        VPC:
          $ref: "#/components/schemas/VPC"
        Comment:
          $ref: "#/components/schemas/DisassociateVPCComment"
      description: A complex type that contains information about the VPC that you want to
        disassociate from a specified private hosted zone.
    GeoLocationContinentCode:
      type: string
      minLength: 2
      maxLength: 2
    GeoLocationCountryCode:
      type: string
      minLength: 1
      maxLength: 2
    GeoLocationSubdivisionCode:
      type: string
      minLength: 1
      maxLength: 3
    GeoLocation:
      type: object
      properties:
        ContinentCode:
          $ref: "#/components/schemas/GeoLocationContinentCode"
        CountryCode:
          $ref: "#/components/schemas/GeoLocationCountryCode"
        SubdivisionCode:
          $ref: "#/components/schemas/GeoLocationSubdivisionCode"
      description: A complex type that contains information about a geographic location.
    GeoLocationContinentName:
      type: string
      minLength: 1
      maxLength: 32
    GeoLocationCountryName:
      type: string
      minLength: 1
      maxLength: 64
    GeoLocationSubdivisionName:
      type: string
      minLength: 1
      maxLength: 64
    GeoLocationDetails:
      type: object
      properties:
        ContinentCode:
          $ref: "#/components/schemas/GeoLocationContinentCode"
        ContinentName:
          $ref: "#/components/schemas/GeoLocationContinentName"
        CountryCode:
          $ref: "#/components/schemas/GeoLocationCountryCode"
        CountryName:
          $ref: "#/components/schemas/GeoLocationCountryName"
        SubdivisionCode:
          $ref: "#/components/schemas/GeoLocationSubdivisionCode"
        SubdivisionName:
          $ref: "#/components/schemas/GeoLocationSubdivisionName"
      description: A complex type that contains the codes and full continent, country, and
        subdivision names for the specified <code>geolocation</code> code.
    GeoLocationDetailsList:
      type: array
      items:
        $ref: "#/components/schemas/GeoLocationDetails"
    GetAccountLimitRequest:
      type: object
      properties: {}
      description: A complex type that contains information about the request to create a
        hosted zone.
    UsageCount:
      type: integer
      minimum: 0
    GetChangeRequest:
      type: object
      properties: {}
      description: The input for a GetChange request.
    GetCheckerIpRangesRequest:
      type: object
      properties: {}
      description: Empty request.
    GetGeoLocationRequest:
      type: object
      properties: {}
      description: A request for information about whether a specified geographic location
        is supported for Amazon Route 53 geolocation resource record sets.
    GetHealthCheckCountRequest:
      type: object
      properties: {}
      description: A request for the number of health checks that are associated with the
        current AWS account.
    HealthCheckCount:
      type: integer
    GetHealthCheckLastFailureReasonRequest:
      type: object
      properties: {}
      description: A request for the reason that a health check failed most recently.
    HealthCheckObservations:
      type: array
      items:
        $ref: "#/components/schemas/HealthCheckObservation"
    GetHealthCheckRequest:
      type: object
      properties: {}
      description: "A request to get information about a specified health check. "
    GetHealthCheckStatusRequest:
      type: object
      properties: {}
      description: A request to get the status for a health check.
    GetHostedZoneCountRequest:
      type: object
      properties: {}
      description: A request to retrieve a count of all the hosted zones that are
        associated with the current AWS account.
    HostedZoneCount:
      type: integer
    HostedZoneLimitType:
      type: string
      enum:
        - MAX_RRSETS_BY_ZONE
        - MAX_VPCS_ASSOCIATED_BY_ZONE
    GetHostedZoneLimitRequest:
      type: object
      properties: {}
      description: A complex type that contains information about the request to create a
        hosted zone.
    HostedZoneLimit:
      type: object
      required:
        - Type
        - Value
      properties:
        Type:
          $ref: "#/components/schemas/HostedZoneLimitType"
        Value:
          $ref: "#/components/schemas/LimitValue"
      description: A complex type that contains the type of limit that you specified in the
        request and the current value for that limit.
    GetHostedZoneRequest:
      type: object
      properties: {}
      description: "A request to get information about a specified hosted zone. "
    VPCs:
      type: array
      description: (Private hosted zones only) A list of <code>VPC</code> elements.
      items:
        $ref: "#/components/schemas/VPC"
      minItems: 1
    GetQueryLoggingConfigRequest:
      type: object
      properties: {}
    ReusableDelegationSetLimitType:
      type: string
      enum:
        - MAX_ZONES_BY_REUSABLE_DELEGATION_SET
    GetReusableDelegationSetLimitRequest:
      type: object
      properties: {}
      description: A complex type that contains information about the request to create a
        hosted zone.
    ReusableDelegationSetLimit:
      type: object
      required:
        - Type
        - Value
      properties:
        Type:
          $ref: "#/components/schemas/ReusableDelegationSetLimitType"
        Value:
          $ref: "#/components/schemas/LimitValue"
      description: A complex type that contains the type of limit that you specified in the
        request and the current value for that limit.
    GetReusableDelegationSetRequest:
      type: object
      properties: {}
      description: A request to get information about a specified reusable delegation set.
    GetTrafficPolicyInstanceCountRequest:
      type: object
      properties: {}
      description: Request to get the number of traffic policy instances that are
        associated with the current AWS account.
    TrafficPolicyInstanceCount:
      type: integer
    GetTrafficPolicyInstanceRequest:
      type: object
      properties: {}
      description: Gets information about a specified traffic policy instance.
    GetTrafficPolicyRequest:
      type: object
      properties: {}
      description: Gets information about a specific traffic policy version.
    LinkedService:
      type: object
      properties:
        ServicePrincipal:
          $ref: "#/components/schemas/ServicePrincipal"
        Description:
          $ref: "#/components/schemas/ResourceDescription"
      description: "If a health check or hosted zone was created by another service,
        <code>LinkedService</code> is a complex type that describes the service
        that created the resource. When a resource is created by another
        service, you can't edit or delete it using Amazon Route 53. "
    HealthCheckVersion:
      type: integer
      minimum: 1
    StatusReport:
      type: object
      properties:
        Status:
          $ref: "#/components/schemas/Status"
        CheckedTime:
          $ref: "#/components/schemas/TimeStamp"
      description: A complex type that contains the status that one Amazon Route 53 health
        checker reports and the time of the health check.
    HealthCheckObservation:
      type: object
      properties:
        Region:
          $ref: "#/components/schemas/HealthCheckRegion"
        IPAddress:
          $ref: "#/components/schemas/IPAddress"
        StatusReport:
          $ref: "#/components/schemas/StatusReport"
      description: A complex type that contains the last failure reason as reported by one
        Amazon Route 53 health checker.
    HealthChecks:
      type: array
      items:
        $ref: "#/components/schemas/HealthCheck"
    HostedZoneRRSetCount:
      type: integer
    HostedZones:
      type: array
      items:
        $ref: "#/components/schemas/HostedZone"
    ServicePrincipal:
      type: string
      maxLength: 128
    PageMaxItems:
      type: string
    ListGeoLocationsRequest:
      type: object
      properties: {}
      description: "A request to get a list of geographic locations that Amazon Route 53
        supports for geolocation resource record sets. "
    PageTruncated:
      type: boolean
    PageMarker:
      type: string
      maxLength: 64
    ListHealthChecksRequest:
      type: object
      properties: {}
      description: A request to retrieve a list of the health checks that are associated
        with the current AWS account.
    ListHostedZonesByNameRequest:
      type: object
      properties: {}
      description: "Retrieves a list of the public and private hosted zones that are
        associated with the current AWS account in ASCII order by domain name. "
    ListHostedZonesRequest:
      type: object
      properties: {}
      description: A request to retrieve a list of the public and private hosted zones that
        are associated with the current AWS account.
    PaginationToken:
      type: string
      maxLength: 256
    MaxResults:
      type: string
    ListQueryLoggingConfigsRequest:
      type: object
      properties: {}
    QueryLoggingConfigs:
      type: array
      items:
        $ref: "#/components/schemas/QueryLoggingConfig"
    RRType:
      type: string
      enum:
        - SOA
        - A
        - TXT
        - NS
        - CNAME
        - MX
        - NAPTR
        - PTR
        - SRV
        - SPF
        - AAAA
        - CAA
    ResourceRecordSetIdentifier:
      type: string
      minLength: 1
      maxLength: 128
    ListResourceRecordSetsRequest:
      type: object
      properties: {}
      description: A request for the resource record sets that are associated with a
        specified hosted zone.
    ResourceRecordSets:
      type: array
      items:
        $ref: "#/components/schemas/ResourceRecordSet"
    ListReusableDelegationSetsRequest:
      type: object
      properties: {}
      description: A request to get a list of the reusable delegation sets that are
        associated with the current AWS account.
    ListTagsForResourceRequest:
      type: object
      properties: {}
      description: A complex type containing information about a request for a list of the
        tags that are associated with an individual resource.
    ResourceTagSet:
      type: object
      properties:
        ResourceType:
          $ref: "#/components/schemas/TagResourceType"
        ResourceId:
          $ref: "#/components/schemas/TagResourceId"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: A complex type containing a resource and its associated tags.
    TagResourceIdList:
      type: array
      items:
        $ref: "#/components/schemas/TagResourceId"
      minItems: 1
      maxItems: 10
    ListTagsForResourcesRequest:
      type: object
      required:
        - ResourceIds
      properties:
        ResourceIds:
          $ref: "#/components/schemas/TagResourceIdList"
      description: A complex type that contains information about the health checks or
        hosted zones for which you want to list tags.
    ResourceTagSetList:
      type: array
      items:
        $ref: "#/components/schemas/ResourceTagSet"
    ListTrafficPoliciesRequest:
      type: object
      properties: {}
      description: A complex type that contains the information about the request to list
        the traffic policies that are associated with the current AWS account.
    TrafficPolicySummaries:
      type: array
      items:
        $ref: "#/components/schemas/TrafficPolicySummary"
    ListTrafficPolicyInstancesByHostedZoneRequest:
      type: object
      properties: {}
      description: A request for the traffic policy instances that you created in a
        specified hosted zone.
    TrafficPolicyInstances:
      type: array
      items:
        $ref: "#/components/schemas/TrafficPolicyInstance"
    ListTrafficPolicyInstancesByPolicyRequest:
      type: object
      properties: {}
      description: A complex type that contains the information about the request to list
        your traffic policy instances.
    ListTrafficPolicyInstancesRequest:
      type: object
      properties: {}
      description: A request to get information about the traffic policy instances that you
        created by using the current AWS account.
    TrafficPolicyVersionMarker:
      type: string
      maxLength: 4
    ListTrafficPolicyVersionsRequest:
      type: object
      properties: {}
      description: A complex type that contains the information about the request to list
        your traffic policies.
    TrafficPolicies:
      type: array
      items:
        $ref: "#/components/schemas/TrafficPolicy"
    ListVPCAssociationAuthorizationsRequest:
      type: object
      properties: {}
      description: A complex type that contains information about that can be associated
        with your hosted zone.
    Message:
      type: string
      maxLength: 1024
    Nameserver:
      type: string
      minLength: 0
      maxLength: 255
    RData:
      type: string
      maxLength: 4000
    RecordDataEntry:
      type: string
      description: <p>A value that Amazon Route 53 returned for this resource record set. A
        <code>RecordDataEntry</code> element is one of the following:</p> <ul>
        <li> <p>For non-alias resource record sets, a
        <code>RecordDataEntry</code> element contains one value in the resource
        record set. If the resource record set contains multiple values, the
        response includes one <code>RecordDataEntry</code> element for each
        value.</p> </li> <li> <p>For multiple resource record sets that have the
        same name and type, which includes weighted, latency, geolocation, and
        failover, a <code>RecordDataEntry</code> element contains the value from
        the appropriate resource record set based on the request.</p> </li> <li>
        <p>For alias resource record sets that refer to AWS resources other than
        another resource record set, the <code>RecordDataEntry</code> element
        contains an IP address or a domain name for the AWS resource, depending
        on the type of resource.</p> </li> <li> <p>For alias resource record
        sets that refer to other resource record sets, a
        <code>RecordDataEntry</code> element contains one value from the
        referenced resource record set. If the referenced resource record set
        contains multiple values, the response includes one
        <code>RecordDataEntry</code> element for each value.</p> </li> </ul>
      minLength: 0
      maxLength: 512
    RecordData:
      type: array
      items:
        $ref: "#/components/schemas/RecordDataEntry"
    ResettableElementNameList:
      type: array
      items:
        $ref: "#/components/schemas/ResettableElementName"
      maxItems: 64
    ResourceRecord:
      type: object
      required:
        - Value
      properties:
        Value:
          $ref: "#/components/schemas/RData"
      description: <p>Information specific to the resource record.</p> <note> <p>If you're
        creating an alias resource record set, omit
        <code>ResourceRecord</code>.</p> </note>
    ResourceRecordSetWeight:
      type: integer
      minimum: 0
      maximum: 255
    ResourceRecordSetRegion:
      type: string
      enum:
        - us-east-1
        - us-east-2
        - us-west-1
        - us-west-2
        - ca-central-1
        - eu-west-1
        - eu-west-2
        - eu-west-3
        - eu-central-1
        - ap-southeast-1
        - ap-southeast-2
        - ap-northeast-1
        - ap-northeast-2
        - ap-northeast-3
        - eu-north-1
        - sa-east-1
        - cn-north-1
        - cn-northwest-1
        - ap-east-1
        - me-south-1
        - ap-south-1
      minLength: 1
      maxLength: 64
    ResourceRecordSetFailover:
      type: string
      enum:
        - PRIMARY
        - SECONDARY
    ResourceRecordSetMultiValueAnswer:
      type: boolean
    ResourceRecords:
      type: array
      items:
        $ref: "#/components/schemas/ResourceRecord"
      minItems: 1
    Status:
      type: string
    SubnetMask:
      type: string
      minLength: 0
      maxLength: 3
    TagValue:
      type: string
      maxLength: 256
    TestDNSAnswerRequest:
      type: object
      properties: {}
      description: "Gets the value that Amazon Route 53 returns in response to a DNS
        request for a specified record name and type. You can optionally specify
        the IP address of a DNS resolver, an EDNS0 client subnet IP address, and
        a subnet mask. "
    TransportProtocol:
      type: string
    TrafficPolicyInstanceState:
      type: string
    TrafficPolicySummary:
      type: object
      required:
        - Id
        - Name
        - Type
        - LatestVersion
        - TrafficPolicyCount
      properties:
        Id:
          $ref: "#/components/schemas/TrafficPolicyId"
        Name:
          $ref: "#/components/schemas/TrafficPolicyName"
        Type:
          $ref: "#/components/schemas/RRType"
        LatestVersion:
          $ref: "#/components/schemas/TrafficPolicyVersion"
        TrafficPolicyCount:
          $ref: "#/components/schemas/TrafficPolicyVersion"
      description: A complex type that contains information about the latest version of one
        traffic policy that is associated with the current AWS account.
    UpdateHealthCheckRequest:
      type: object
      properties:
        HealthCheckVersion:
          $ref: "#/components/schemas/HealthCheckVersion"
        IPAddress:
          $ref: "#/components/schemas/IPAddress"
        Port:
          $ref: "#/components/schemas/Port"
        ResourcePath:
          $ref: "#/components/schemas/ResourcePath"
        FullyQualifiedDomainName:
          $ref: "#/components/schemas/FullyQualifiedDomainName"
        SearchString:
          $ref: "#/components/schemas/SearchString"
        FailureThreshold:
          $ref: "#/components/schemas/FailureThreshold"
        Inverted:
          $ref: "#/components/schemas/Inverted"
        Disabled:
          $ref: "#/components/schemas/Disabled"
        HealthThreshold:
          $ref: "#/components/schemas/HealthThreshold"
        ChildHealthChecks:
          $ref: "#/components/schemas/ChildHealthCheckList"
        EnableSNI:
          $ref: "#/components/schemas/EnableSNI"
        Regions:
          $ref: "#/components/schemas/HealthCheckRegionList"
        AlarmIdentifier:
          $ref: "#/components/schemas/AlarmIdentifier"
        InsufficientDataHealthStatus:
          $ref: "#/components/schemas/InsufficientDataHealthStatus"
        ResetElements:
          $ref: "#/components/schemas/ResettableElementNameList"
      description: A complex type that contains information about a request to update a
        health check.
    UpdateHostedZoneCommentRequest:
      type: object
      properties:
        Comment:
          $ref: "#/components/schemas/ResourceDescription"
      description: A request to update the comment for a hosted zone.
    UpdateTrafficPolicyCommentRequest:
      type: object
      required:
        - Comment
      properties:
        Comment:
          $ref: "#/components/schemas/TrafficPolicyComment"
      description: A complex type that contains information about the traffic policy that
        you want to update the comment for.
    UpdateTrafficPolicyInstanceRequest:
      type: object
      required:
        - TTL
        - TrafficPolicyId
        - TrafficPolicyVersion
      properties:
        TTL:
          $ref: "#/components/schemas/TTL"
        TrafficPolicyId:
          $ref: "#/components/schemas/TrafficPolicyId"
        TrafficPolicyVersion:
          $ref: "#/components/schemas/TrafficPolicyVersion"
      description: A complex type that contains information about the resource record sets
        that you want to update based on a specified traffic policy instance.
