openapi: 3.0.0
info:
  version: 2016-10-06
  x-release: v4
  title: AWS CodeBuild
  description: "<fullname>AWS CodeBuild</fullname> <p>AWS CodeBuild is a fully managed
    build service in the cloud. AWS CodeBuild compiles your source code, runs
    unit tests, and produces artifacts that are ready to deploy. AWS CodeBuild
    eliminates the need to provision, manage, and scale your own build servers.
    It provides prepackaged build environments for the most popular programming
    languages and build tools, such as Apache Maven, Gradle, and more. You can
    also fully customize build environments in AWS CodeBuild to use your own
    build tools. AWS CodeBuild scales automatically to meet peak build requests.
    You pay only for the build time you consume. For more information about AWS
    CodeBuild, see the <i>AWS CodeBuild User Guide</i>.</p> <p>AWS CodeBuild
    supports these operations:</p> <ul> <li> <p> <code>BatchDeleteBuilds</code>:
    Deletes one or more builds.</p> </li> <li> <p>
    <code>BatchGetProjects</code>: Gets information about one or more build
    projects. A <i>build project</i> defines how AWS CodeBuild runs a build.
    This includes information such as where to get the source code to build, the
    build environment to use, the build commands to run, and where to store the
    build output. A <i>build environment</i> is a representation of operating
    system, programming language runtime, and tools that AWS CodeBuild uses to
    run a build. You can add tags to build projects to help manage your
    resources and costs.</p> </li> <li> <p> <code>CreateProject</code>: Creates
    a build project.</p> </li> <li> <p> <code>CreateWebhook</code>: For an
    existing AWS CodeBuild build project that has its source code stored in a
    GitHub or Bitbucket repository, enables AWS CodeBuild to start rebuilding
    the source code every time a code change is pushed to the repository.</p>
    </li> <li> <p> <code>UpdateWebhook</code>: Changes the settings of an
    existing webhook.</p> </li> <li> <p> <code>DeleteProject</code>: Deletes a
    build project.</p> </li> <li> <p> <code>DeleteWebhook</code>: For an
    existing AWS CodeBuild build project that has its source code stored in a
    GitHub or Bitbucket repository, stops AWS CodeBuild from rebuilding the
    source code every time a code change is pushed to the repository.</p> </li>
    <li> <p> <code>ListProjects</code>: Gets a list of build project names, with
    each build project name representing a single build project.</p> </li> <li>
    <p> <code>UpdateProject</code>: Changes the settings of an existing build
    project.</p> </li> <li> <p> <code>BatchGetBuilds</code>: Gets information
    about one or more builds.</p> </li> <li> <p> <code>ListBuilds</code>: Gets a
    list of build IDs, with each build ID representing a single build.</p> </li>
    <li> <p> <code>ListBuildsForProject</code>: Gets a list of build IDs for the
    specified build project, with each build ID representing a single build.</p>
    </li> <li> <p> <code>StartBuild</code>: Starts running a build.</p> </li>
    <li> <p> <code>StopBuild</code>: Attempts to stop running a build.</p> </li>
    <li> <p> <code>ListCuratedEnvironmentImages</code>: Gets information about
    Docker images that are managed by AWS CodeBuild.</p> </li> <li> <p>
    <code>DeleteSourceCredentials</code>: Deletes a set of GitHub, GitHub
    Enterprise, or Bitbucket source credentials.</p> </li> <li> <p>
    <code>ImportSourceCredentials</code>: Imports the source repository
    credentials for an AWS CodeBuild project that has its source code stored in
    a GitHub, GitHub Enterprise, or Bitbucket repository.</p> </li> <li> <p>
    <code>ListSourceCredentials</code>: Returns a list of
    <code>SourceCredentialsInfo</code> objects. Each
    <code>SourceCredentialsInfo</code> object includes the authentication type,
    token ARN, and type of source provider for one set of credentials.</p> </li>
    </ul>"
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: codebuild
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/codebuild-2016-10-06.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/codebuild/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=CodeBuild_20161006.BatchDeleteBuilds:
    post:
      operationId: BatchDeleteBuilds
      description: Deletes one or more builds.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchDeleteBuildsOutput"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeBuild_20161006.BatchDeleteBuilds
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDeleteBuildsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeBuild_20161006.BatchGetBuilds:
    post:
      operationId: BatchGetBuilds
      description: Gets information about builds.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchGetBuildsOutput"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeBuild_20161006.BatchGetBuilds
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchGetBuildsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeBuild_20161006.BatchGetProjects:
    post:
      operationId: BatchGetProjects
      description: Gets information about build projects.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchGetProjectsOutput"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeBuild_20161006.BatchGetProjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchGetProjectsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeBuild_20161006.CreateProject:
    post:
      operationId: CreateProject
      description: Creates a build project.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateProjectOutput"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "482":
          description: AccountLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeBuild_20161006.CreateProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateProjectInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeBuild_20161006.CreateWebhook:
    post:
      operationId: CreateWebhook
      description: <p>For an existing AWS CodeBuild build project that has its source code
        stored in a GitHub or Bitbucket repository, enables AWS CodeBuild to
        start rebuilding the source code every time a code change is pushed to
        the repository.</p> <important> <p>If you enable webhooks for an AWS
        CodeBuild project, and the project is used as a build step in AWS
        CodePipeline, then two identical builds are created for each commit. One
        build is triggered through webhooks, and one through AWS CodePipeline.
        Because billing is on a per-build basis, you are billed for both builds.
        Therefore, if you are using AWS CodePipeline, we recommend that you
        disable webhooks in AWS CodeBuild. In the AWS CodeBuild console, clear
        the Webhook box. For more information, see step 5 in <a
        href="https://docs.aws.amazon.com/codebuild/latest/userguide/change-project.html#change-project-console">Change
        a Build Project's Settings</a>.</p> </important>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWebhookOutput"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: OAuthProviderException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OAuthProviderException"
        "482":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeBuild_20161006.CreateWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWebhookInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeBuild_20161006.DeleteProject:
    post:
      operationId: DeleteProject
      description: Deletes a build project.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteProjectOutput"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeBuild_20161006.DeleteProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteProjectInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeBuild_20161006.DeleteSourceCredentials:
    post:
      operationId: DeleteSourceCredentials
      description: " Deletes a set of GitHub, GitHub Enterprise, or Bitbucket source
        credentials. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSourceCredentialsOutput"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeBuild_20161006.DeleteSourceCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteSourceCredentialsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeBuild_20161006.DeleteWebhook:
    post:
      operationId: DeleteWebhook
      description: For an existing AWS CodeBuild build project that has its source code
        stored in a GitHub or Bitbucket repository, stops AWS CodeBuild from
        rebuilding the source code every time a code change is pushed to the
        repository.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteWebhookOutput"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: OAuthProviderException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OAuthProviderException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeBuild_20161006.DeleteWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteWebhookInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeBuild_20161006.ImportSourceCredentials:
    post:
      operationId: ImportSourceCredentials
      description: " Imports the source repository credentials for an AWS CodeBuild project
        that has its source code stored in a GitHub, GitHub Enterprise, or
        Bitbucket repository. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportSourceCredentialsOutput"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: AccountLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountLimitExceededException"
        "482":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeBuild_20161006.ImportSourceCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportSourceCredentialsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeBuild_20161006.InvalidateProjectCache:
    post:
      operationId: InvalidateProjectCache
      description: Resets the cache for a project.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidateProjectCacheOutput"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeBuild_20161006.InvalidateProjectCache
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InvalidateProjectCacheInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeBuild_20161006.ListBuilds:
    post:
      operationId: ListBuilds
      description: Gets a list of build IDs, with each build ID representing a single build.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListBuildsOutput"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeBuild_20161006.ListBuilds
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListBuildsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeBuild_20161006.ListBuildsForProject:
    post:
      operationId: ListBuildsForProject
      description: Gets a list of build IDs for the specified build project, with each
        build ID representing a single build.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListBuildsForProjectOutput"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeBuild_20161006.ListBuildsForProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListBuildsForProjectInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeBuild_20161006.ListCuratedEnvironmentImages:
    post:
      operationId: ListCuratedEnvironmentImages
      description: Gets information about Docker images that are managed by AWS CodeBuild.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCuratedEnvironmentImagesOutput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeBuild_20161006.ListCuratedEnvironmentImages
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListCuratedEnvironmentImagesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeBuild_20161006.ListProjects:
    post:
      operationId: ListProjects
      description: Gets a list of build project names, with each build project name
        representing a single build project.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListProjectsOutput"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeBuild_20161006.ListProjects
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListProjectsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeBuild_20161006.ListSourceCredentials:
    post:
      operationId: ListSourceCredentials
      description: " Returns a list of <code>SourceCredentialsInfo</code> objects. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSourceCredentialsOutput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeBuild_20161006.ListSourceCredentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListSourceCredentialsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeBuild_20161006.StartBuild:
    post:
      operationId: StartBuild
      description: Starts running a build.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartBuildOutput"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccountLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeBuild_20161006.StartBuild
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartBuildInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeBuild_20161006.StopBuild:
    post:
      operationId: StopBuild
      description: Attempts to stop running a build.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopBuildOutput"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeBuild_20161006.StopBuild
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopBuildInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeBuild_20161006.UpdateProject:
    post:
      operationId: UpdateProject
      description: Changes the settings of a build project.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateProjectOutput"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeBuild_20161006.UpdateProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProjectInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=CodeBuild_20161006.UpdateWebhook:
    post:
      operationId: UpdateWebhook
      description: <p> Updates the webhook associated with an AWS CodeBuild build project.
        </p> <note> <p> If you use Bitbucket for your repository,
        <code>rotateSecret</code> is ignored. </p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateWebhookOutput"
        "480":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: OAuthProviderException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OAuthProviderException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - CodeBuild_20161006.UpdateWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWebhookInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://codebuild.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS CodeBuild multi-region endpoint
  - url: https://codebuild.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS CodeBuild multi-region endpoint
  - url: http://codebuild.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS CodeBuild endpoint for China (Beijing) and China (Ningxia)
  - url: https://codebuild.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS CodeBuild endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    BatchDeleteBuildsOutput:
      type: object
      properties:
        buildsDeleted:
          $ref: "#/components/schemas/BuildIds"
        buildsNotDeleted:
          $ref: "#/components/schemas/BuildsNotDeleted"
    BatchDeleteBuildsInput:
      type: object
      required:
        - ids
      properties:
        ids:
          $ref: "#/components/schemas/BuildIds"
    InvalidInputException: {}
    BatchGetBuildsOutput:
      type: object
      example:
        builds:
          - arn: arn:aws:codebuild:us-east-1:123456789012:build/codebuild-demo-project:9b0ac37f-d19e-4254-9079-f47e9a389eEX
            artifacts:
              location: arn:aws:s3:::codebuild-123456789012-output-bucket/codebuild-demo-project
            buildComplete: true
            buildStatus: SUCCEEDED
            currentPhase: COMPLETED
            endTime: 1479832474.764
            environment:
              type: LINUX_CONTAINER
              computeType: BUILD_GENERAL1_SMALL
              environmentVariables: []
              image: aws/codebuild/java:openjdk-8
              privilegedMode: false
            id: codebuild-demo-project:9b0ac37f-d19e-4254-9079-f47e9a389eEX
            initiator: MyDemoUser
            logs:
              deepLink: https://console.aws.amazon.com/cloudwatch/home?region=us-east-1#logEvent:group=/aws/codebuild/codebuild-demo-project;stream=9b0ac37f-d19e-4254-9079-f47e9a389eEX
              groupName: /aws/codebuild/codebuild-demo-project
              streamName: 9b0ac37f-d19e-4254-9079-f47e9a389eEX
            phases:
              - durationInSeconds: 0
                endTime: 1479832342.23
                phaseStatus: SUCCEEDED
                phaseType: SUBMITTED
                startTime: 1479832341.854
              - contexts: []
                durationInSeconds: 72
                endTime: 1479832415.064
                phaseStatus: SUCCEEDED
                phaseType: PROVISIONING
                startTime: 1479832342.23
              - contexts: []
                durationInSeconds: 46
                endTime: 1479832461.261
                phaseStatus: SUCCEEDED
                phaseType: DOWNLOAD_SOURCE
                startTime: 1479832415.064
              - contexts: []
                durationInSeconds: 0
                endTime: 1479832461.354
                phaseStatus: SUCCEEDED
                phaseType: INSTALL
                startTime: 1479832461.261
              - contexts: []
                durationInSeconds: 0
                endTime: 1479832461.448
                phaseStatus: SUCCEEDED
                phaseType: PRE_BUILD
                startTime: 1479832461.354
              - contexts: []
                durationInSeconds: 9
                endTime: 1479832471.115
                phaseStatus: SUCCEEDED
                phaseType: BUILD
                startTime: 1479832461.448
              - contexts: []
                durationInSeconds: 0
                endTime: 1479832471.224
                phaseStatus: SUCCEEDED
                phaseType: POST_BUILD
                startTime: 1479832471.115
              - contexts: []
                durationInSeconds: 0
                endTime: 1479832471.791
                phaseStatus: SUCCEEDED
                phaseType: UPLOAD_ARTIFACTS
                startTime: 1479832471.224
              - contexts: []
                durationInSeconds: 2
                endTime: 1479832474.764
                phaseStatus: SUCCEEDED
                phaseType: FINALIZING
                startTime: 1479832471.791
              - phaseType: COMPLETED
                startTime: 1479832474.764
            projectName: codebuild-demo-project
            source:
              type: S3
              buildspec: ""
              location: arn:aws:s3:::codebuild-123456789012-input-bucket/MessageUtil.zip
            startTime: 1479832341.854
            timeoutInMinutes: 60
          - arn: arn:aws:codebuild:us-east-1:123456789012:build/codebuild-demo-project:b79a46f7-1473-4636-a23f-da9c45c208EX
            artifacts:
              location: arn:aws:s3:::codebuild-123456789012-output-bucket/codebuild-demo-project
            buildComplete: true
            buildStatus: SUCCEEDED
            currentPhase: COMPLETED
            endTime: 1479401214.239
            environment:
              type: LINUX_CONTAINER
              computeType: BUILD_GENERAL1_SMALL
              environmentVariables: []
              image: aws/codebuild/java:openjdk-8
              privilegedMode: false
            id: codebuild-demo-project:b79a46f7-1473-4636-a23f-da9c45c208EX
            initiator: MyDemoUser
            logs:
              deepLink: https://console.aws.amazon.com/cloudwatch/home?region=us-east-1#logEvent:group=/aws/codebuild/codebuild-demo-project;stream=b79a46f7-1473-4636-a23f-da9c45c208EX
              groupName: /aws/codebuild/codebuild-demo-project
              streamName: b79a46f7-1473-4636-a23f-da9c45c208EX
            phases:
              - durationInSeconds: 0
                endTime: 1479401082.342
                phaseStatus: SUCCEEDED
                phaseType: SUBMITTED
                startTime: 1479401081.869
              - contexts: []
                durationInSeconds: 71
                endTime: 1479401154.129
                phaseStatus: SUCCEEDED
                phaseType: PROVISIONING
                startTime: 1479401082.342
              - contexts: []
                durationInSeconds: 45
                endTime: 1479401199.136
                phaseStatus: SUCCEEDED
                phaseType: DOWNLOAD_SOURCE
                startTime: 1479401154.129
              - contexts: []
                durationInSeconds: 0
                endTime: 1479401199.236
                phaseStatus: SUCCEEDED
                phaseType: INSTALL
                startTime: 1479401199.136
              - contexts: []
                durationInSeconds: 0
                endTime: 1479401199.345
                phaseStatus: SUCCEEDED
                phaseType: PRE_BUILD
                startTime: 1479401199.236
              - contexts: []
                durationInSeconds: 9
                endTime: 1479401208.68
                phaseStatus: SUCCEEDED
                phaseType: BUILD
                startTime: 1479401199.345
              - contexts: []
                durationInSeconds: 0
                endTime: 1479401208.783
                phaseStatus: SUCCEEDED
                phaseType: POST_BUILD
                startTime: 1479401208.68
              - contexts: []
                durationInSeconds: 0
                endTime: 1479401209.463
                phaseStatus: SUCCEEDED
                phaseType: UPLOAD_ARTIFACTS
                startTime: 1479401208.783
              - contexts: []
                durationInSeconds: 4
                endTime: 1479401214.239
                phaseStatus: SUCCEEDED
                phaseType: FINALIZING
                startTime: 1479401209.463
              - phaseType: COMPLETED
                startTime: 1479401214.239
            projectName: codebuild-demo-project
            source:
              type: S3
              location: arn:aws:s3:::codebuild-123456789012-input-bucket/MessageUtil.zip
            startTime: 1479401081.869
            timeoutInMinutes: 60
      properties:
        builds:
          $ref: "#/components/schemas/Builds"
        buildsNotFound:
          $ref: "#/components/schemas/BuildIds"
    BatchGetBuildsInput:
      type: object
      required:
        - ids
      properties:
        ids:
          $ref: "#/components/schemas/BuildIds"
    BatchGetProjectsOutput:
      type: object
      properties:
        projects:
          $ref: "#/components/schemas/Projects"
        projectsNotFound:
          $ref: "#/components/schemas/ProjectNames"
    BatchGetProjectsInput:
      type: object
      required:
        - names
      properties:
        names:
          $ref: "#/components/schemas/ProjectNames"
    CreateProjectOutput:
      type: object
      properties:
        project:
          $ref: "#/components/schemas/Project"
    CreateProjectInput:
      type: object
      required:
        - name
        - source
        - artifacts
        - environment
        - serviceRole
      properties:
        name:
          $ref: "#/components/schemas/ProjectName"
        description:
          $ref: "#/components/schemas/ProjectDescription"
        source:
          $ref: "#/components/schemas/ProjectSource"
        secondarySources:
          $ref: "#/components/schemas/ProjectSources"
        sourceVersion:
          $ref: "#/components/schemas/String"
        secondarySourceVersions:
          $ref: "#/components/schemas/ProjectSecondarySourceVersions"
        artifacts:
          $ref: "#/components/schemas/ProjectArtifacts"
        secondaryArtifacts:
          $ref: "#/components/schemas/ProjectArtifactsList"
        cache:
          $ref: "#/components/schemas/ProjectCache"
        environment:
          $ref: "#/components/schemas/ProjectEnvironment"
        serviceRole:
          $ref: "#/components/schemas/NonEmptyString"
        timeoutInMinutes:
          $ref: "#/components/schemas/TimeOut"
        queuedTimeoutInMinutes:
          $ref: "#/components/schemas/TimeOut"
        encryptionKey:
          $ref: "#/components/schemas/NonEmptyString"
        tags:
          $ref: "#/components/schemas/TagList"
        vpcConfig:
          $ref: "#/components/schemas/VpcConfig"
        badgeEnabled:
          $ref: "#/components/schemas/WrapperBoolean"
        logsConfig:
          $ref: "#/components/schemas/LogsConfig"
    ResourceAlreadyExistsException: {}
    AccountLimitExceededException: {}
    CreateWebhookOutput:
      type: object
      properties:
        webhook:
          $ref: "#/components/schemas/Webhook"
    CreateWebhookInput:
      type: object
      required:
        - projectName
      properties:
        projectName:
          $ref: "#/components/schemas/ProjectName"
        branchFilter:
          $ref: "#/components/schemas/String"
        filterGroups:
          $ref: "#/components/schemas/FilterGroups"
    OAuthProviderException: {}
    ResourceNotFoundException: {}
    DeleteProjectOutput:
      type: object
      properties: {}
    DeleteProjectInput:
      type: object
      required:
        - name
      properties:
        name:
          $ref: "#/components/schemas/NonEmptyString"
    DeleteSourceCredentialsOutput:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/NonEmptyString"
    DeleteSourceCredentialsInput:
      type: object
      required:
        - arn
      properties:
        arn:
          $ref: "#/components/schemas/NonEmptyString"
    DeleteWebhookOutput:
      type: object
      properties: {}
    DeleteWebhookInput:
      type: object
      required:
        - projectName
      properties:
        projectName:
          $ref: "#/components/schemas/ProjectName"
    ImportSourceCredentialsOutput:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/NonEmptyString"
    ImportSourceCredentialsInput:
      type: object
      required:
        - token
        - serverType
        - authType
      properties:
        username:
          $ref: "#/components/schemas/NonEmptyString"
        token:
          $ref: "#/components/schemas/SensitiveNonEmptyString"
        serverType:
          $ref: "#/components/schemas/ServerType"
        authType:
          $ref: "#/components/schemas/AuthType"
        shouldOverwrite:
          $ref: "#/components/schemas/WrapperBoolean"
    InvalidateProjectCacheOutput:
      type: object
      properties: {}
    InvalidateProjectCacheInput:
      type: object
      required:
        - projectName
      properties:
        projectName:
          $ref: "#/components/schemas/NonEmptyString"
    ListBuildsOutput:
      type: object
      properties:
        ids:
          $ref: "#/components/schemas/BuildIds"
        nextToken:
          $ref: "#/components/schemas/String"
    ListBuildsInput:
      type: object
      properties:
        sortOrder:
          $ref: "#/components/schemas/SortOrderType"
        nextToken:
          $ref: "#/components/schemas/String"
    ListBuildsForProjectOutput:
      type: object
      properties:
        ids:
          $ref: "#/components/schemas/BuildIds"
        nextToken:
          $ref: "#/components/schemas/String"
    ListBuildsForProjectInput:
      type: object
      required:
        - projectName
      properties:
        projectName:
          $ref: "#/components/schemas/NonEmptyString"
        sortOrder:
          $ref: "#/components/schemas/SortOrderType"
        nextToken:
          $ref: "#/components/schemas/String"
    ListCuratedEnvironmentImagesOutput:
      type: object
      properties:
        platforms:
          $ref: "#/components/schemas/EnvironmentPlatforms"
    ListCuratedEnvironmentImagesInput:
      type: object
      properties: {}
    ListProjectsOutput:
      type: object
      properties:
        nextToken:
          $ref: "#/components/schemas/String"
        projects:
          $ref: "#/components/schemas/ProjectNames"
    ListProjectsInput:
      type: object
      properties:
        sortBy:
          $ref: "#/components/schemas/ProjectSortByType"
        sortOrder:
          $ref: "#/components/schemas/SortOrderType"
        nextToken:
          $ref: "#/components/schemas/NonEmptyString"
    ListSourceCredentialsOutput:
      type: object
      properties:
        sourceCredentialsInfos:
          $ref: "#/components/schemas/SourceCredentialsInfos"
    ListSourceCredentialsInput:
      type: object
      properties: {}
    StartBuildOutput:
      type: object
      properties:
        build:
          $ref: "#/components/schemas/Build"
    StartBuildInput:
      type: object
      required:
        - projectName
      properties:
        projectName:
          $ref: "#/components/schemas/NonEmptyString"
        secondarySourcesOverride:
          $ref: "#/components/schemas/ProjectSources"
        secondarySourcesVersionOverride:
          $ref: "#/components/schemas/ProjectSecondarySourceVersions"
        sourceVersion:
          $ref: "#/components/schemas/String"
        artifactsOverride:
          $ref: "#/components/schemas/ProjectArtifacts"
        secondaryArtifactsOverride:
          $ref: "#/components/schemas/ProjectArtifactsList"
        environmentVariablesOverride:
          $ref: "#/components/schemas/EnvironmentVariables"
        sourceTypeOverride:
          $ref: "#/components/schemas/SourceType"
        sourceLocationOverride:
          $ref: "#/components/schemas/String"
        sourceAuthOverride:
          $ref: "#/components/schemas/SourceAuth"
        gitCloneDepthOverride:
          $ref: "#/components/schemas/GitCloneDepth"
        gitSubmodulesConfigOverride:
          $ref: "#/components/schemas/GitSubmodulesConfig"
        buildspecOverride:
          $ref: "#/components/schemas/String"
        insecureSslOverride:
          $ref: "#/components/schemas/WrapperBoolean"
        reportBuildStatusOverride:
          $ref: "#/components/schemas/WrapperBoolean"
        environmentTypeOverride:
          $ref: "#/components/schemas/EnvironmentType"
        imageOverride:
          $ref: "#/components/schemas/NonEmptyString"
        computeTypeOverride:
          $ref: "#/components/schemas/ComputeType"
        certificateOverride:
          $ref: "#/components/schemas/String"
        cacheOverride:
          $ref: "#/components/schemas/ProjectCache"
        serviceRoleOverride:
          $ref: "#/components/schemas/NonEmptyString"
        privilegedModeOverride:
          $ref: "#/components/schemas/WrapperBoolean"
        timeoutInMinutesOverride:
          $ref: "#/components/schemas/TimeOut"
        queuedTimeoutInMinutesOverride:
          $ref: "#/components/schemas/TimeOut"
        logsConfigOverride:
          $ref: "#/components/schemas/LogsConfig"
        registryCredentialOverride:
          $ref: "#/components/schemas/RegistryCredential"
        imagePullCredentialsTypeOverride:
          $ref: "#/components/schemas/ImagePullCredentialsType"
    StopBuildOutput:
      type: object
      properties:
        build:
          $ref: "#/components/schemas/Build"
    StopBuildInput:
      type: object
      required:
        - id
      properties:
        id:
          $ref: "#/components/schemas/NonEmptyString"
    UpdateProjectOutput:
      type: object
      properties:
        project:
          $ref: "#/components/schemas/Project"
    UpdateProjectInput:
      type: object
      required:
        - name
      properties:
        name:
          $ref: "#/components/schemas/NonEmptyString"
        description:
          $ref: "#/components/schemas/ProjectDescription"
        source:
          $ref: "#/components/schemas/ProjectSource"
        secondarySources:
          $ref: "#/components/schemas/ProjectSources"
        sourceVersion:
          $ref: "#/components/schemas/String"
        secondarySourceVersions:
          $ref: "#/components/schemas/ProjectSecondarySourceVersions"
        artifacts:
          $ref: "#/components/schemas/ProjectArtifacts"
        secondaryArtifacts:
          $ref: "#/components/schemas/ProjectArtifactsList"
        cache:
          $ref: "#/components/schemas/ProjectCache"
        environment:
          $ref: "#/components/schemas/ProjectEnvironment"
        serviceRole:
          $ref: "#/components/schemas/NonEmptyString"
        timeoutInMinutes:
          $ref: "#/components/schemas/TimeOut"
        queuedTimeoutInMinutes:
          $ref: "#/components/schemas/TimeOut"
        encryptionKey:
          $ref: "#/components/schemas/NonEmptyString"
        tags:
          $ref: "#/components/schemas/TagList"
        vpcConfig:
          $ref: "#/components/schemas/VpcConfig"
        badgeEnabled:
          $ref: "#/components/schemas/WrapperBoolean"
        logsConfig:
          $ref: "#/components/schemas/LogsConfig"
    UpdateWebhookOutput:
      type: object
      properties:
        webhook:
          $ref: "#/components/schemas/Webhook"
    UpdateWebhookInput:
      type: object
      required:
        - projectName
      properties:
        projectName:
          $ref: "#/components/schemas/ProjectName"
        branchFilter:
          $ref: "#/components/schemas/String"
        rotateSecret:
          $ref: "#/components/schemas/Boolean"
        filterGroups:
          $ref: "#/components/schemas/FilterGroups"
    ArtifactNamespace:
      type: string
      enum:
        - NONE
        - BUILD_ID
    ArtifactPackaging:
      type: string
      enum:
        - NONE
        - ZIP
    ArtifactsType:
      type: string
      enum:
        - CODEPIPELINE
        - S3
        - NO_ARTIFACTS
    AuthType:
      type: string
      enum:
        - OAUTH
        - BASIC_AUTH
        - PERSONAL_ACCESS_TOKEN
    BuildIds:
      type: array
      items:
        $ref: "#/components/schemas/NonEmptyString"
      minItems: 1
      maxItems: 100
    BuildsNotDeleted:
      type: array
      items:
        $ref: "#/components/schemas/BuildNotDeleted"
    Builds:
      type: array
      items:
        $ref: "#/components/schemas/Build"
    ProjectNames:
      type: array
      items:
        $ref: "#/components/schemas/NonEmptyString"
      minItems: 1
      maxItems: 100
    Projects:
      type: array
      items:
        $ref: "#/components/schemas/Project"
    Boolean:
      type: boolean
    NonEmptyString:
      type: string
      minLength: 1
    Timestamp:
      type: string
      format: date-time
    String:
      type: string
    StatusType:
      type: string
      enum:
        - SUCCEEDED
        - FAILED
        - FAULT
        - TIMED_OUT
        - IN_PROGRESS
        - STOPPED
    BuildPhases:
      type: array
      items:
        $ref: "#/components/schemas/BuildPhase"
    ProjectSource:
      type: object
      required:
        - type
      properties:
        type:
          $ref: "#/components/schemas/SourceType"
        location:
          $ref: "#/components/schemas/String"
        gitCloneDepth:
          $ref: "#/components/schemas/GitCloneDepth"
        gitSubmodulesConfig:
          $ref: "#/components/schemas/GitSubmodulesConfig"
        buildspec:
          $ref: "#/components/schemas/String"
        auth:
          $ref: "#/components/schemas/SourceAuth"
        reportBuildStatus:
          $ref: "#/components/schemas/WrapperBoolean"
        insecureSsl:
          $ref: "#/components/schemas/WrapperBoolean"
        sourceIdentifier:
          $ref: "#/components/schemas/String"
      description: Information about the build input source code for the build project.
    ProjectSources:
      type: array
      items:
        $ref: "#/components/schemas/ProjectSource"
      minItems: 0
      maxItems: 12
    ProjectSecondarySourceVersions:
      type: array
      items:
        $ref: "#/components/schemas/ProjectSourceVersion"
      minItems: 0
      maxItems: 12
    BuildArtifacts:
      type: object
      properties:
        location:
          $ref: "#/components/schemas/String"
        sha256sum:
          $ref: "#/components/schemas/String"
        md5sum:
          $ref: "#/components/schemas/String"
        overrideArtifactName:
          $ref: "#/components/schemas/WrapperBoolean"
        encryptionDisabled:
          $ref: "#/components/schemas/WrapperBoolean"
        artifactIdentifier:
          $ref: "#/components/schemas/String"
      description: Information about build output artifacts.
    BuildArtifactsList:
      type: array
      items:
        $ref: "#/components/schemas/BuildArtifacts"
      minItems: 0
      maxItems: 12
    ProjectCache:
      type: object
      required:
        - type
      properties:
        type:
          $ref: "#/components/schemas/CacheType"
        location:
          $ref: "#/components/schemas/String"
        modes:
          $ref: "#/components/schemas/ProjectCacheModes"
      description: Information about the cache for the build project.
    ProjectEnvironment:
      type: object
      required:
        - type
        - image
        - computeType
      properties:
        type:
          $ref: "#/components/schemas/EnvironmentType"
        image:
          $ref: "#/components/schemas/NonEmptyString"
        computeType:
          $ref: "#/components/schemas/ComputeType"
        environmentVariables:
          $ref: "#/components/schemas/EnvironmentVariables"
        privilegedMode:
          $ref: "#/components/schemas/WrapperBoolean"
        certificate:
          $ref: "#/components/schemas/String"
        registryCredential:
          $ref: "#/components/schemas/RegistryCredential"
        imagePullCredentialsType:
          $ref: "#/components/schemas/ImagePullCredentialsType"
      description: Information about the build environment of the build project.
    LogsLocation:
      type: object
      properties:
        groupName:
          $ref: "#/components/schemas/String"
        streamName:
          $ref: "#/components/schemas/String"
        deepLink:
          $ref: "#/components/schemas/String"
        s3DeepLink:
          $ref: "#/components/schemas/String"
        cloudWatchLogs:
          $ref: "#/components/schemas/CloudWatchLogsConfig"
        s3Logs:
          $ref: "#/components/schemas/S3LogsConfig"
      description: Information about build logs in Amazon CloudWatch Logs.
    WrapperInt:
      type: integer
    VpcConfig:
      type: object
      properties:
        vpcId:
          $ref: "#/components/schemas/NonEmptyString"
        subnets:
          $ref: "#/components/schemas/Subnets"
        securityGroupIds:
          $ref: "#/components/schemas/SecurityGroupIds"
      description: Information about the VPC configuration that AWS CodeBuild accesses.
    NetworkInterface:
      type: object
      properties:
        subnetId:
          $ref: "#/components/schemas/NonEmptyString"
        networkInterfaceId:
          $ref: "#/components/schemas/NonEmptyString"
      description: Describes a network interface.
    Build:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/NonEmptyString"
        arn:
          $ref: "#/components/schemas/NonEmptyString"
        startTime:
          $ref: "#/components/schemas/Timestamp"
        endTime:
          $ref: "#/components/schemas/Timestamp"
        currentPhase:
          $ref: "#/components/schemas/String"
        buildStatus:
          $ref: "#/components/schemas/StatusType"
        sourceVersion:
          $ref: "#/components/schemas/NonEmptyString"
        resolvedSourceVersion:
          $ref: "#/components/schemas/NonEmptyString"
        projectName:
          $ref: "#/components/schemas/NonEmptyString"
        phases:
          $ref: "#/components/schemas/BuildPhases"
        source:
          $ref: "#/components/schemas/ProjectSource"
        secondarySources:
          $ref: "#/components/schemas/ProjectSources"
        secondarySourceVersions:
          $ref: "#/components/schemas/ProjectSecondarySourceVersions"
        artifacts:
          $ref: "#/components/schemas/BuildArtifacts"
        secondaryArtifacts:
          $ref: "#/components/schemas/BuildArtifactsList"
        cache:
          $ref: "#/components/schemas/ProjectCache"
        environment:
          $ref: "#/components/schemas/ProjectEnvironment"
        serviceRole:
          $ref: "#/components/schemas/NonEmptyString"
        logs:
          $ref: "#/components/schemas/LogsLocation"
        timeoutInMinutes:
          $ref: "#/components/schemas/WrapperInt"
        queuedTimeoutInMinutes:
          $ref: "#/components/schemas/WrapperInt"
        buildComplete:
          $ref: "#/components/schemas/Boolean"
        initiator:
          $ref: "#/components/schemas/String"
        vpcConfig:
          $ref: "#/components/schemas/VpcConfig"
        networkInterface:
          $ref: "#/components/schemas/NetworkInterface"
        encryptionKey:
          $ref: "#/components/schemas/NonEmptyString"
      description: Information about a build.
    WrapperBoolean:
      type: boolean
    BuildNotDeleted:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/NonEmptyString"
        statusCode:
          $ref: "#/components/schemas/String"
      description: Information about a build that could not be successfully deleted.
    BuildPhaseType:
      type: string
      enum:
        - SUBMITTED
        - QUEUED
        - PROVISIONING
        - DOWNLOAD_SOURCE
        - INSTALL
        - PRE_BUILD
        - BUILD
        - POST_BUILD
        - UPLOAD_ARTIFACTS
        - FINALIZING
        - COMPLETED
    WrapperLong:
      type: integer
    PhaseContexts:
      type: array
      items:
        $ref: "#/components/schemas/PhaseContext"
    BuildPhase:
      type: object
      properties:
        phaseType:
          $ref: "#/components/schemas/BuildPhaseType"
        phaseStatus:
          $ref: "#/components/schemas/StatusType"
        startTime:
          $ref: "#/components/schemas/Timestamp"
        endTime:
          $ref: "#/components/schemas/Timestamp"
        durationInSeconds:
          $ref: "#/components/schemas/WrapperLong"
        contexts:
          $ref: "#/components/schemas/PhaseContexts"
      description: Information about a stage for a build.
    CacheMode:
      type: string
      enum:
        - LOCAL_DOCKER_LAYER_CACHE
        - LOCAL_SOURCE_CACHE
        - LOCAL_CUSTOM_CACHE
    CacheType:
      type: string
      enum:
        - NO_CACHE
        - S3
        - LOCAL
    LogsConfigStatusType:
      type: string
      enum:
        - ENABLED
        - DISABLED
    CloudWatchLogsConfig:
      type: object
      required:
        - status
      properties:
        status:
          $ref: "#/components/schemas/LogsConfigStatusType"
        groupName:
          $ref: "#/components/schemas/String"
        streamName:
          $ref: "#/components/schemas/String"
      description: " Information about Amazon CloudWatch Logs for a build project. "
    ComputeType:
      type: string
      enum:
        - BUILD_GENERAL1_SMALL
        - BUILD_GENERAL1_MEDIUM
        - BUILD_GENERAL1_LARGE
    ProjectName:
      type: string
      pattern: "[A-Za-z0-9][A-Za-z0-9\\-_]{1,254}"
      minLength: 2
      maxLength: 255
    ProjectDescription:
      type: string
      minLength: 0
      maxLength: 255
    ProjectArtifacts:
      type: object
      required:
        - type
      properties:
        type:
          $ref: "#/components/schemas/ArtifactsType"
        location:
          $ref: "#/components/schemas/String"
        path:
          $ref: "#/components/schemas/String"
        namespaceType:
          $ref: "#/components/schemas/ArtifactNamespace"
        name:
          $ref: "#/components/schemas/String"
        packaging:
          $ref: "#/components/schemas/ArtifactPackaging"
        overrideArtifactName:
          $ref: "#/components/schemas/WrapperBoolean"
        encryptionDisabled:
          $ref: "#/components/schemas/WrapperBoolean"
        artifactIdentifier:
          $ref: "#/components/schemas/String"
      description: Information about the build output artifacts for the build project.
    ProjectArtifactsList:
      type: array
      items:
        $ref: "#/components/schemas/ProjectArtifacts"
      minItems: 0
      maxItems: 12
    TimeOut:
      type: integer
      minimum: 5
      maximum: 480
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
      minItems: 0
      maxItems: 50
    LogsConfig:
      type: object
      properties:
        cloudWatchLogs:
          $ref: "#/components/schemas/CloudWatchLogsConfig"
        s3Logs:
          $ref: "#/components/schemas/S3LogsConfig"
      description: " Information about logs for a build project. These can be logs in
        Amazon CloudWatch Logs, built in a specified S3 bucket, or both. "
    Project:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ProjectName"
        arn:
          $ref: "#/components/schemas/String"
        description:
          $ref: "#/components/schemas/ProjectDescription"
        source:
          $ref: "#/components/schemas/ProjectSource"
        secondarySources:
          $ref: "#/components/schemas/ProjectSources"
        sourceVersion:
          $ref: "#/components/schemas/String"
        secondarySourceVersions:
          $ref: "#/components/schemas/ProjectSecondarySourceVersions"
        artifacts:
          $ref: "#/components/schemas/ProjectArtifacts"
        secondaryArtifacts:
          $ref: "#/components/schemas/ProjectArtifactsList"
        cache:
          $ref: "#/components/schemas/ProjectCache"
        environment:
          $ref: "#/components/schemas/ProjectEnvironment"
        serviceRole:
          $ref: "#/components/schemas/NonEmptyString"
        timeoutInMinutes:
          $ref: "#/components/schemas/TimeOut"
        queuedTimeoutInMinutes:
          $ref: "#/components/schemas/TimeOut"
        encryptionKey:
          $ref: "#/components/schemas/NonEmptyString"
        tags:
          $ref: "#/components/schemas/TagList"
        created:
          $ref: "#/components/schemas/Timestamp"
        lastModified:
          $ref: "#/components/schemas/Timestamp"
        webhook:
          $ref: "#/components/schemas/Webhook"
        vpcConfig:
          $ref: "#/components/schemas/VpcConfig"
        badge:
          $ref: "#/components/schemas/ProjectBadge"
        logsConfig:
          $ref: "#/components/schemas/LogsConfig"
      description: Information about a build project.
    FilterGroups:
      type: array
      items:
        $ref: "#/components/schemas/FilterGroup"
    Webhook:
      type: object
      properties:
        url:
          $ref: "#/components/schemas/NonEmptyString"
        payloadUrl:
          $ref: "#/components/schemas/NonEmptyString"
        secret:
          $ref: "#/components/schemas/NonEmptyString"
        branchFilter:
          $ref: "#/components/schemas/String"
        filterGroups:
          $ref: "#/components/schemas/FilterGroups"
        lastModifiedSecret:
          $ref: "#/components/schemas/Timestamp"
      description: Information about a webhook that connects repository events to a build
        project in AWS CodeBuild.
    CredentialProviderType:
      type: string
      enum:
        - SECRETS_MANAGER
    ImageVersions:
      type: array
      items:
        $ref: "#/components/schemas/String"
    EnvironmentImage:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/String"
        description:
          $ref: "#/components/schemas/String"
        versions:
          $ref: "#/components/schemas/ImageVersions"
      description: Information about a Docker image that is managed by AWS CodeBuild.
    EnvironmentImages:
      type: array
      items:
        $ref: "#/components/schemas/EnvironmentImage"
    LanguageType:
      type: string
      enum:
        - JAVA
        - PYTHON
        - NODE_JS
        - RUBY
        - GOLANG
        - DOCKER
        - ANDROID
        - DOTNET
        - BASE
        - PHP
    EnvironmentLanguage:
      type: object
      properties:
        language:
          $ref: "#/components/schemas/LanguageType"
        images:
          $ref: "#/components/schemas/EnvironmentImages"
      description: A set of Docker images that are related by programming language and are
        managed by AWS CodeBuild.
    EnvironmentLanguages:
      type: array
      items:
        $ref: "#/components/schemas/EnvironmentLanguage"
    PlatformType:
      type: string
      enum:
        - DEBIAN
        - AMAZON_LINUX
        - UBUNTU
        - WINDOWS_SERVER
    EnvironmentPlatform:
      type: object
      properties:
        platform:
          $ref: "#/components/schemas/PlatformType"
        languages:
          $ref: "#/components/schemas/EnvironmentLanguages"
      description: A set of Docker images that are related by platform and are managed by
        AWS CodeBuild.
    EnvironmentPlatforms:
      type: array
      items:
        $ref: "#/components/schemas/EnvironmentPlatform"
    EnvironmentType:
      type: string
      enum:
        - WINDOWS_CONTAINER
        - LINUX_CONTAINER
    EnvironmentVariableType:
      type: string
      enum:
        - PLAINTEXT
        - PARAMETER_STORE
    EnvironmentVariable:
      type: object
      required:
        - name
        - value
      properties:
        name:
          $ref: "#/components/schemas/NonEmptyString"
        value:
          $ref: "#/components/schemas/String"
        type:
          $ref: "#/components/schemas/EnvironmentVariableType"
      description: Information about an environment variable for a build project or a build.
    EnvironmentVariables:
      type: array
      items:
        $ref: "#/components/schemas/EnvironmentVariable"
    WebhookFilter:
      type: object
      required:
        - type
        - pattern
      properties:
        type:
          $ref: "#/components/schemas/WebhookFilterType"
        pattern:
          $ref: "#/components/schemas/String"
        excludeMatchedPattern:
          $ref: "#/components/schemas/WrapperBoolean"
      description: " A filter used to determine which webhooks trigger a build. "
    FilterGroup:
      type: array
      items:
        $ref: "#/components/schemas/WebhookFilter"
    GitCloneDepth:
      type: integer
      minimum: 0
    GitSubmodulesConfig:
      type: object
      required:
        - fetchSubmodules
      properties:
        fetchSubmodules:
          $ref: "#/components/schemas/WrapperBoolean"
      description: " Information about the Git submodules configuration for an AWS
        CodeBuild build project. "
    ImagePullCredentialsType:
      type: string
      enum:
        - CODEBUILD
        - SERVICE_ROLE
    SensitiveNonEmptyString:
      type: string
      minLength: 1
      format: password
    ServerType:
      type: string
      enum:
        - GITHUB
        - BITBUCKET
        - GITHUB_ENTERPRISE
    KeyInput:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=@+\-]*)$
      minLength: 1
      maxLength: 127
    SortOrderType:
      type: string
      enum:
        - ASCENDING
        - DESCENDING
    ProjectSortByType:
      type: string
      enum:
        - NAME
        - CREATED_TIME
        - LAST_MODIFIED_TIME
    SourceCredentialsInfos:
      type: array
      items:
        $ref: "#/components/schemas/SourceCredentialsInfo"
    S3LogsConfig:
      type: object
      required:
        - status
      properties:
        status:
          $ref: "#/components/schemas/LogsConfigStatusType"
        location:
          $ref: "#/components/schemas/String"
        encryptionDisabled:
          $ref: "#/components/schemas/WrapperBoolean"
      description: " Information about S3 logs for a build project. "
    PhaseContext:
      type: object
      properties:
        statusCode:
          $ref: "#/components/schemas/String"
        message:
          $ref: "#/components/schemas/String"
      description: Additional information about a build phase that has an error. You can
        use this information for troubleshooting.
    ProjectBadge:
      type: object
      properties:
        badgeEnabled:
          $ref: "#/components/schemas/Boolean"
        badgeRequestUrl:
          $ref: "#/components/schemas/String"
      description: Information about the build badge for the build project.
    ProjectCacheModes:
      type: array
      items:
        $ref: "#/components/schemas/CacheMode"
    RegistryCredential:
      type: object
      required:
        - credential
        - credentialProvider
      properties:
        credential:
          $ref: "#/components/schemas/NonEmptyString"
        credentialProvider:
          $ref: "#/components/schemas/CredentialProviderType"
      description: '<p> Information about credentials that provide access to a private
        Docker registry. When this is set: </p> <ul> <li> <p>
        <code>imagePullCredentialsType</code> must be set to
        <code>SERVICE_ROLE</code>. </p> </li> <li> <p> images cannot be curated
        or an Amazon ECR image.</p> </li> </ul> <p> For more information, see <a
        href="https://docs.aws.amazon.com/codebuild/latest/userguide/sample-private-registry.html">Private
        Registry with AWS Secrets Manager Sample for AWS CodeBuild</a>. </p>'
    ProjectSourceVersion:
      type: object
      required:
        - sourceIdentifier
        - sourceVersion
      properties:
        sourceIdentifier:
          $ref: "#/components/schemas/String"
        sourceVersion:
          $ref: "#/components/schemas/String"
      description: " A source identifier and its corresponding version. "
    SourceType:
      type: string
      enum:
        - CODECOMMIT
        - CODEPIPELINE
        - GITHUB
        - S3
        - BITBUCKET
        - GITHUB_ENTERPRISE
        - NO_SOURCE
    SourceAuth:
      type: object
      required:
        - type
      properties:
        type:
          $ref: "#/components/schemas/SourceAuthType"
        resource:
          $ref: "#/components/schemas/String"
      description: <p>Information about the authorization settings for AWS CodeBuild to
        access the source code to be built.</p> <p>This information is for the
        AWS CodeBuild console's use only. Your code should not get or set this
        information directly.</p>
    SecurityGroupIds:
      type: array
      items:
        $ref: "#/components/schemas/NonEmptyString"
      maxItems: 5
    SourceAuthType:
      type: string
      enum:
        - OAUTH
    SourceCredentialsInfo:
      type: object
      properties:
        arn:
          $ref: "#/components/schemas/NonEmptyString"
        serverType:
          $ref: "#/components/schemas/ServerType"
        authType:
          $ref: "#/components/schemas/AuthType"
      description: " Information about the credentials for a GitHub, GitHub Enterprise, or
        Bitbucket repository. "
    Subnets:
      type: array
      items:
        $ref: "#/components/schemas/NonEmptyString"
      maxItems: 16
    ValueInput:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=@+\-]*)$
      minLength: 1
      maxLength: 255
    Tag:
      type: object
      properties:
        key:
          $ref: "#/components/schemas/KeyInput"
        value:
          $ref: "#/components/schemas/ValueInput"
      description: <p>A tag, consisting of a key and a value.</p> <p>This tag is available
        for use by AWS services that support tags in AWS CodeBuild.</p>
    WebhookFilterType:
      type: string
      enum:
        - EVENT
        - BASE_REF
        - HEAD_REF
        - ACTOR_ACCOUNT_ID
        - FILE_PATH
