openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: Fetches reports for the administrators of G Suite customers about the usage,
    collaboration, security, and risk for their users.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Admin Reports
  version: reports_v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - analytics
  x-logo:
    url: https://www.gstatic.com/images/icons/material/product/2x/admin_64dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://www.googleapis.com/discovery/v1/apis/admin/reports_v1/rest
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: admin
externalDocs:
  url: https://developers.google.com/admin-sdk/reports/
tags:
  - name: activities
  - name: channels
  - name: customerUsageReports
  - name: entityUsageReports
  - name: userUsageReport
paths:
  "/activity/users/{userKey}/applications/{applicationName}":
    get:
      description: Retrieves a list of activities for a specific customer and application.
      operationId: reports.activities.list
      parameters:
        - description: IP Address of host where the event was performed. Supports both IPv4
            and IPv6 addresses.
          in: query
          name: actorIpAddress
          schema:
            type: string
        - description: Application name for which the events are to be retrieved.
          in: path
          name: applicationName
          required: true
          schema:
            type: string
        - description: Represents the customer for which the data is to be fetched.
          in: query
          name: customerId
          schema:
            type: string
        - description: Return events which occurred at or before this time.
          in: query
          name: endTime
          schema:
            type: string
        - description: Name of the event being queried.
          in: query
          name: eventName
          schema:
            type: string
        - description: Event parameters in the form [parameter1 name][operator][parameter1
            value],[parameter2 name][operator][parameter2 value],...
          in: query
          name: filters
          schema:
            type: string
        - description: Number of activity records to be shown in each page.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - description: the organizational unit's(OU) ID to filter activities from users
            belonging to a specific OU or one of its sub-OU(s)
          in: query
          name: orgUnitID
          schema:
            type: string
            default: ""
        - description: Token to specify next page.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Return events which occurred at or after this time.
          in: query
          name: startTime
          schema:
            type: string
        - description: Represents the profile id or the user email for which the data
            should be filtered. When 'all' is specified as the userKey, it
            returns usageReports for all users.
          in: path
          name: userKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Activities"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.reports.audit.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.reports.audit.readonly
      tags:
        - activities
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/activity/users/{userKey}/applications/{applicationName}/watch":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Push changes to activities
      operationId: reports.activities.watch
      parameters:
        - description: IP Address of host where the event was performed. Supports both IPv4
            and IPv6 addresses.
          in: query
          name: actorIpAddress
          schema:
            type: string
        - description: Application name for which the events are to be retrieved.
          in: path
          name: applicationName
          required: true
          schema:
            type: string
        - description: Represents the customer for which the data is to be fetched.
          in: query
          name: customerId
          schema:
            type: string
        - description: Return events which occurred at or before this time.
          in: query
          name: endTime
          schema:
            type: string
        - description: Name of the event being queried.
          in: query
          name: eventName
          schema:
            type: string
        - description: Event parameters in the form [parameter1 name][operator][parameter1
            value],[parameter2 name][operator][parameter2 value],...
          in: query
          name: filters
          schema:
            type: string
        - description: Number of activity records to be shown in each page.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - description: the organizational unit's(OU) ID to filter activities from users
            belonging to a specific OU or one of its sub-OU(s)
          in: query
          name: orgUnitID
          schema:
            type: string
            default: ""
        - description: Token to specify next page.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Return events which occurred at or after this time.
          in: query
          name: startTime
          schema:
            type: string
        - description: Represents the profile id or the user email for which the data
            should be filtered. When 'all' is specified as the userKey, it
            returns usageReports for all users.
          in: path
          name: userKey
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Channel"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Channel"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.reports.audit.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.reports.audit.readonly
      tags:
        - activities
  /admin/reports_v1/channels/stop:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Stop watching resources through this channel
      operationId: admin.channels.stop
      requestBody:
        $ref: "#/components/requestBodies/Channel"
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.reports.audit.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.reports.audit.readonly
      tags:
        - channels
  "/usage/dates/{date}":
    get:
      description: Retrieves a report which is a collection of properties / statistics for
        a specific customer.
      operationId: reports.customerUsageReports.get
      parameters:
        - description: Represents the customer for which the data is to be fetched.
          in: query
          name: customerId
          schema:
            type: string
        - description: Represents the date in yyyy-mm-dd format for which the data is to be
            fetched.
          in: path
          name: date
          required: true
          schema:
            type: string
        - description: Token to specify next page.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Represents the application name, parameter name pairs to fetch in
            csv as app_name1:param_name1, app_name2:param_name2.
          in: query
          name: parameters
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/UsageReports"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.reports.usage.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.reports.usage.readonly
      tags:
        - customerUsageReports
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/usage/users/{userKey}/dates/{date}":
    get:
      description: Retrieves a report which is a collection of properties / statistics for
        a set of users.
      operationId: reports.userUsageReport.get
      parameters:
        - description: Represents the customer for which the data is to be fetched.
          in: query
          name: customerId
          schema:
            type: string
        - description: Represents the date in yyyy-mm-dd format for which the data is to be
            fetched.
          in: path
          name: date
          required: true
          schema:
            type: string
        - description: Represents the set of filters including parameter operator value.
          in: query
          name: filters
          schema:
            type: string
        - description: Maximum number of results to return. Maximum allowed is 1000
          in: query
          name: maxResults
          schema:
            type: integer
            maximum: 1000
        - description: the organizational unit's ID to filter usage parameters from users
            belonging to a specific OU or one of its sub-OU(s).
          in: query
          name: orgUnitID
          schema:
            type: string
            default: ""
        - description: Token to specify next page.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Represents the application name, parameter name pairs to fetch in
            csv as app_name1:param_name1, app_name2:param_name2.
          in: query
          name: parameters
          schema:
            type: string
        - description: Represents the profile id or the user email for which the data
            should be filtered.
          in: path
          name: userKey
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/UsageReports"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.reports.usage.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.reports.usage.readonly
      tags:
        - userUsageReport
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/usage/{entityType}/{entityKey}/dates/{date}":
    get:
      description: Retrieves a report which is a collection of properties / statistics for
        a set of objects.
      operationId: reports.entityUsageReports.get
      parameters:
        - description: Represents the customer for which the data is to be fetched.
          in: query
          name: customerId
          schema:
            type: string
        - description: Represents the date in yyyy-mm-dd format for which the data is to be
            fetched.
          in: path
          name: date
          required: true
          schema:
            type: string
        - description: Represents the key of object for which the data should be filtered.
          in: path
          name: entityKey
          required: true
          schema:
            type: string
        - description: Type of object. Should be one of - gplus_communities.
          in: path
          name: entityType
          required: true
          schema:
            type: string
        - description: Represents the set of filters including parameter operator value.
          in: query
          name: filters
          schema:
            type: string
        - description: Maximum number of results to return. Maximum allowed is 1000
          in: query
          name: maxResults
          schema:
            type: integer
            maximum: 1000
        - description: Token to specify next page.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Represents the application name, parameter name pairs to fetch in
            csv as app_name1:param_name1, app_name2:param_name2.
          in: query
          name: parameters
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/UsageReports"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/admin.reports.usage.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/admin.reports.usage.readonly
      tags:
        - entityUsageReports
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
servers:
  - url: https://www.googleapis.com/admin/reports/v1
components:
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
        default: json
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not
        exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
  requestBodies:
    Channel:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Channel"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/admin.reports.audit.readonly: View audit reports for your G Suite domain
            https://www.googleapis.com/auth/admin.reports.usage.readonly: View usage reports for your G Suite domain
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/admin.reports.audit.readonly: View audit reports for your G Suite domain
            https://www.googleapis.com/auth/admin.reports.usage.readonly: View usage reports for your G Suite domain
  schemas:
    Activities:
      description: JSON template for a collection of activites.
      properties:
        etag:
          description: ETag of the resource.
          type: string
        items:
          description: Each record in read response.
          items:
            $ref: "#/components/schemas/Activity"
          type: array
        kind:
          default: admin#reports#activities
          description: Kind of list response this is.
          type: string
        nextPageToken:
          description: Token for retrieving the next page
          type: string
      type: object
    Activity:
      description: JSON template for the activity resource.
      properties:
        actor:
          description: User doing the action.
          properties:
            callerType:
              description: User or OAuth 2LO request.
              type: string
            email:
              description: Email address of the user.
              type: string
            key:
              description: For OAuth 2LO API requests, consumer_key of the requestor.
              type: string
            profileId:
              description: Obfuscated user id of the user.
              type: string
          type: object
        etag:
          description: ETag of the entry.
          type: string
        events:
          description: Activity events.
          items:
            properties:
              name:
                description: Name of event.
                type: string
              parameters:
                description: Parameter value pairs for various applications.
                items:
                  properties:
                    boolValue:
                      description: Boolean value of the parameter.
                      type: boolean
                    intValue:
                      description: Integral value of the parameter.
                      format: int64
                      type: string
                    messageValue:
                      description: Nested value of the parameter.
                      properties:
                        parameter:
                          description: Looping to get parameter values.
                          items:
                            $ref: "#/components/schemas/NestedParameter"
                          type: array
                      type: object
                    multiIntValue:
                      description: Multi-int value of the parameter.
                      items:
                        format: int64
                        type: string
                      type: array
                    multiMessageValue:
                      description: Nested values of the parameter.
                      items:
                        properties:
                          parameter:
                            description: Parameter value.
                            items:
                              $ref: "#/components/schemas/NestedParameter"
                            type: array
                        type: object
                      type: array
                    multiValue:
                      description: Multi-string value of the parameter.
                      items:
                        type: string
                      type: array
                    name:
                      description: The name of the parameter.
                      type: string
                    value:
                      description: String value of the parameter.
                      type: string
                  type: object
                type: array
              type:
                description: Type of event.
                type: string
            type: object
          type: array
        id:
          description: Unique identifier for each activity record.
          properties:
            applicationName:
              description: Application name to which the event belongs.
              type: string
            customerId:
              description: Obfuscated customer ID of the source customer.
              type: string
            time:
              description: Time of occurrence of the activity.
              format: date-time
              type: string
            uniqueQualifier:
              description: Unique qualifier if multiple events have the same time.
              format: int64
              type: string
          type: object
        ipAddress:
          description: IP Address of the user doing the action.
          type: string
        kind:
          default: admin#reports#activity
          description: Kind of resource this is.
          type: string
        ownerDomain:
          description: Domain of source customer.
          type: string
      type: object
    Channel:
      description: An notification channel used to watch for resource changes.
      properties:
        address:
          description: The address where notifications are delivered for this channel.
          type: string
        expiration:
          description: Date and time of notification channel expiration, expressed as a
            Unix timestamp, in milliseconds. Optional.
          format: int64
          type: string
        id:
          description: A UUID or similar unique string that identifies this channel.
          type: string
        kind:
          default: api#channel
          description: Identifies this as a notification channel used to watch for changes
            to a resource, which is "api#channel".
          type: string
        params:
          additionalProperties:
            description: Declares a new parameter by name.
            type: string
          description: Additional parameters controlling delivery channel behavior.
            Optional.
          type: object
        payload:
          description: A Boolean value to indicate whether payload is wanted. Optional.
          type: boolean
        resourceId:
          description: An opaque ID that identifies the resource being watched on this
            channel. Stable across different API versions.
          type: string
        resourceUri:
          description: A version-specific identifier for the watched resource.
          type: string
        token:
          description: An arbitrary string delivered to the target address with each
            notification delivered over this channel. Optional.
          type: string
        type:
          description: The type of delivery mechanism used for this channel.
          type: string
      type: object
    NestedParameter:
      description: JSON template for a parameter used in various reports.
      properties:
        boolValue:
          description: Boolean value of the parameter.
          type: boolean
        intValue:
          description: Integral value of the parameter.
          format: int64
          type: string
        multiBoolValue:
          description: Multiple boolean values of the parameter.
          items:
            type: boolean
          type: array
        multiIntValue:
          description: Multiple integral values of the parameter.
          items:
            format: int64
            type: string
          type: array
        multiValue:
          description: Multiple string values of the parameter.
          items:
            type: string
          type: array
        name:
          description: The name of the parameter.
          type: string
        value:
          description: String value of the parameter.
          type: string
      type: object
    UsageReport:
      description: JSON template for a usage report.
      properties:
        date:
          description: The date to which the record belongs.
          readOnly: true
          type: string
        entity:
          description: Information about the type of the item.
          properties:
            customerId:
              description: Obfuscated customer id for the record.
              readOnly: true
              type: string
            entityId:
              description: 'Object key. Only relevant if entity.type = "OBJECT" Note:
                external-facing name of report is "Entities" rather than
                "Objects".'
              readOnly: true
              type: string
            profileId:
              description: Obfuscated user id for the record.
              readOnly: true
              type: string
            type:
              description: The type of item, can be customer, user, or entity (aka. object).
              readOnly: true
              type: string
            userEmail:
              description: user's email. Only relevant if entity.type = "USER"
              readOnly: true
              type: string
          readOnly: true
          type: object
        etag:
          description: ETag of the resource.
          type: string
        kind:
          default: admin#reports#usageReport
          description: The kind of object.
          type: string
        parameters:
          description: Parameter value pairs for various applications.
          items:
            properties:
              boolValue:
                description: Boolean value of the parameter.
                readOnly: true
                type: boolean
              datetimeValue:
                description: RFC 3339 formatted value of the parameter.
                format: date-time
                readOnly: true
                type: string
              intValue:
                description: Integral value of the parameter.
                format: int64
                readOnly: true
                type: string
              msgValue:
                description: Nested message value of the parameter.
                items:
                  additionalProperties: {}
                  type: object
                readOnly: true
                type: array
              name:
                description: The name of the parameter.
                type: string
              stringValue:
                description: String value of the parameter.
                readOnly: true
                type: string
            type: object
          readOnly: true
          type: array
      type: object
    UsageReports:
      description: JSON template for a collection of usage reports.
      properties:
        etag:
          description: ETag of the resource.
          type: string
        kind:
          default: admin#reports#usageReports
          description: The kind of object.
          type: string
        nextPageToken:
          description: Token for retrieving the next page
          type: string
        usageReports:
          description: Various application parameter records.
          items:
            $ref: "#/components/schemas/UsageReport"
          type: array
        warnings:
          description: Warnings if any.
          items:
            properties:
              code:
                description: Machine readable code / warning type.
                type: string
              data:
                description: Key-Value pairs to give detailed information on the warning.
                items:
                  properties:
                    key:
                      description: Key associated with a key-value pair to give detailed
                        information on the warning.
                      type: string
                    value:
                      description: Value associated with a key-value pair to give detailed
                        information on the warning.
                      type: string
                  type: object
                type: array
              message:
                description: Human readable message for the warning.
                type: string
            type: object
          type: array
      type: object
