openapi: 3.0.0
info:
  contact:
    email: platform@williamhill.com
    name: William Hill Labs
    url: http://developer.williamhill.com
    x-twitter: WilliamHill
  description: The Accounts API is a collection of methods used to query a customer
    account. It allows the developer to retrieve account-related data such as
    the user account balance. It should be noted that regional variations may
    exist - so some fields may not be returned for certain territories.
  title: Accounts
  version: 2.0.0
  x-apisguru-categories:
    - entertainment
  x-logo:
    url: https://twitter.com/WillHillHelp/profile_image?size=original
  x-origin:
    - format: swagger
      url: https://developer.williamhill.com/wh-docs/docs-sdks/accounts/swagger/docs
      version: "2.0"
  x-providerName: whapi.com
  x-serviceName: accounts
paths:
  /account:
    get:
      description: Retrieves a limited set of customer account details. For security
        purposes, only a subset is supplied, which does not include fields such
        as security questions and answers.
      operationId: getDetails
      parameters:
        - $ref: "#/components/parameters/param_apiKey"
        - $ref: "#/components/parameters/param_apiSecret"
        - $ref: "#/components/parameters/param_apiTicket"
        - $ref: "#/components/parameters/param_fields"
        - $ref: "#/components/parameters/param_include"
        - $ref: "#/components/parameters/param_exclude"
        - $ref: "#/components/parameters/param_territory"
        - $ref: "#/components/parameters/param_languageAsPerTerritory"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accounts"
              examples:
                response:
                  value: |
                    {
                     "status": "A",
                     "accountNum": "14652314",
                     "accountId": "18164",
                     "customerId": "48",
                     "currencyCode": "GBP",
                     "countryCode": "GB",
                     "title": "Mr",
                     "firstName": "Joe",
                     "lastName": "Bloggs",
                     "street1": "10 Rillington Place",
                     "street2": "Old Basing",
                     "street3": "Lychpit",
                     "city": "Basingstoke",
                     "county": "Hampshire",
                     "postcode": "RG248YQ",
                     "country": "United Kingdom",
                     "email": "jbloggs@email.com",
                     "mobile": "09876543210",
                     "partnerContactable": true,
                     "contactable": true,
                     "flags": [
                     {
                     "pocf": true
                     }
                     ]
                    }
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountErrors"
              examples:
                response:
                  value: |
                    {
                     "errors" : [
                     {
                     "code":"000000",
                     "message":"Error Message Text",
                     "field":"aparam"
                     }
                     ]
                    }
      summary: Retrieves details of a customers account
      tags:
        - Accounts
      x-canReturnErrors:
        - 20401
  /account/balance:
    get:
      description: This method can be used to retrieve the customer’s account balance in UK
        Sterling.
      operationId: getBalance
      parameters:
        - $ref: "#/components/parameters/param_apiKey"
        - $ref: "#/components/parameters/param_apiSecret"
        - $ref: "#/components/parameters/param_apiTicket"
        - $ref: "#/components/parameters/param_fields"
        - $ref: "#/components/parameters/param_include"
        - $ref: "#/components/parameters/param_exclude"
        - $ref: "#/components/parameters/param_territory"
        - $ref: "#/components/parameters/param_languageAsPerTerritory"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountBalance"
              examples:
                response:
                  value: |
                    {
                     "currencyCode": "GBP",
                     "balance": 234.23,
                     "availableFunds": 234.23,
                     "withdrawableFunds": 234.23
                    }
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountErrors"
              examples:
                response:
                  value: |
                    {
                     "errors" : [
                     {
                     "code":"000000",
                     "message":"Error Message Text",
                     "field":"aparam"
                     }
                     ]
                    }
      summary: Get a customers account balance
      tags:
        - Accounts
  /account/flags:
    post:
      description: Sets a flag based on name to value provided for the user.
      operationId: setAccountFlags
      parameters:
        - $ref: "#/components/parameters/param_apiKey"
        - $ref: "#/components/parameters/param_apiSecret"
        - $ref: "#/components/parameters/param_apiTicket"
        - $ref: "#/components/parameters/param_apiCountryCode"
        - $ref: "#/components/parameters/param_territory"
        - $ref: "#/components/parameters/param_languageAsPerTerritory"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/flags"
        description: Array of KVP for setting flags.
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountFlagsSet"
              examples:
                response:
                  value: >
                    {
                     "token": "e0dX/YhYaRax7aI0/SkNS9G1rXlZZWOD64t64JDijaCfEhRe0A=="
                    }
        "404":
          description: No such customer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountErrors"
              examples:
                response:
                  value: |
                    {
                     "errors" : [
                     {
                     "code":"10003",
                     "message":"Resource Not Found",
                     "field":"token"
                     }
                     ]
                    }
      summary: Sets a flag based on name to value provided for the user.
      tags:
        - flags
      x-canReturnErrors:
        - 0
  /account/payments:
    get:
      description: Retrieves the customer’s account payments in UK Sterling.
      operationId: getPayments
      parameters:
        - $ref: "#/components/parameters/param_apiKey"
        - $ref: "#/components/parameters/param_apiSecret"
        - $ref: "#/components/parameters/param_apiTicket"
        - $ref: "#/components/parameters/param_page"
        - $ref: "#/components/parameters/param_pageSize"
        - $ref: "#/components/parameters/param_fromDateTime"
        - $ref: "#/components/parameters/param_toDateTime"
        - $ref: "#/components/parameters/param_sort"
        - $ref: "#/components/parameters/param_transactionFilter"
        - $ref: "#/components/parameters/param_fields"
        - $ref: "#/components/parameters/param_include"
        - $ref: "#/components/parameters/param_exclude"
        - $ref: "#/components/parameters/param_territory"
        - $ref: "#/components/parameters/param_languageAsPerTerritory"
      responses:
        "200":
          description: Success - Payments obtained
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getPayments"
              examples:
                response:
                  value: |
                    {
                     "payments":
                     [
                     {
                     "id": "277",
                     "methodId": "111",
                     "type": "CSH",
                     "action": "D",
                     "paymentDateTime": "2013-09-25T13:34:20",
                     "amount": "20.56",
                     "commission": "0.00",
                     "status": "Y",
                     "channel": "M",
                     "ipAddress": "10.0.0.12"
                     } 
                     ]
                    }
        "400":
          description: Errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountErrors"
              examples:
                response:
                  value: |
                    {
                     "errors" : [
                     {
                     "code":"000000",
                     "message":"Error Message Text",
                     "field":"aparam"
                     }
                     ]
                    }
        "404":
          description: No such customer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountErrors"
              examples:
                response:
                  value: |
                    {
                     "errors" : [
                     {
                     "code":"10003",
                     "message":"Resource Not Found",
                     "field":"token"
                     }
                     ]
                    }
      summary: Gets a customer's account payments
      tags:
        - Accounts
      x-canReturnErrors:
        - 20401
  /account/plusCard:
    get:
      description: Gets a customer's plus card details if they exist.
      operationId: getPlusCardDetails
      parameters:
        - $ref: "#/components/parameters/param_apiKey"
        - $ref: "#/components/parameters/param_apiSecret"
        - $ref: "#/components/parameters/param_apiTicket"
        - $ref: "#/components/parameters/param_fields"
        - $ref: "#/components/parameters/param_include"
        - $ref: "#/components/parameters/param_exclude"
      responses:
        "200":
          description: Success - Plus Card Details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/plusCardDetails"
              examples:
                response:
                  value: |
                    {
                     "card":
                     {
                     "blocked": false,
                     "cardNumber": "1234123412341234"
                     },
                     "phone":
                     {
                     "phoneNumber": "09876543210"
                     },
                     "pin":
                     {
                     "blocked": false,
                     "attemptsRemaining": 2
                     },
                     "onlineAccount":
                     {
                     "onlineAccountNumber": "DF412323",
                     "name": "George Bernard Shaw"
                     }
                     "retailAccount": 
                     {
                     "selfExcluded": true
                     }
                    }
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountErrors"
              examples:
                response:
                  value: |
                    {
                     "errors" : [
                     {
                     "code":"000000",
                     "message":"Error Message Text",
                     "field":"aparam"
                     }
                     ]
                    } 
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountErrors"
              examples:
                response:
                  value: |
                    {
                     "errors" : [
                     {
                     "code":"000000",
                     "message":"Error Message Text",
                     "field":"aparam"
                     }
                     ]
                    } 
        "404":
          description: No such plus card customer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountErrors"
              examples:
                response:
                  value: |
                    {
                     "errors" : [
                     {
                     "code":"10003",
                     "message":"Resource Not Found",
                     "field":"token"
                     }
                     ]
                    }
      summary: Gets a customer's plus card details if they exist.
      tags:
        - Plus Card
        - Omni
        - Wallet
        - Card Number
      x-canReturnErrors:
        - 20401
  /account/plusCard/lostStolen:
    post:
      description: Sets a customer's plus card as Lost/Stolen
      operationId: setLostStolen
      parameters:
        - $ref: "#/components/parameters/param_apiKey"
        - $ref: "#/components/parameters/param_apiSecret"
        - $ref: "#/components/parameters/param_apiTicket"
      responses:
        "204":
          description: Success - Card Reported Lost / Stolen
        "401":
          description: Errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountErrors"
              examples:
                response:
                  value: |
                    {
                     "errors" : [
                     {
                     "code":"000000",
                     "message":"Unauthorised"
                     }
                     ]
                    } 
        "404":
          description: No such plus card customer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountErrors"
              examples:
                response:
                  value: |
                    {
                     "errors" : [
                     {
                     "code":"10003",
                     "message":"Resource Not Found",
                     "field":"token"
                     }
                     ]
                    }
      summary: Sets a customer's plus card as Lost/Stolen
      tags:
        - Plus Card
        - Omni
        - Wallet
        - Card Number
        - Lost
        - Stolen
      x-canReturnErrors:
        - 20401
  "/account/plusCard/phone/{oldPhoneNumber}":
    post:
      description: Sets a customer's plus card phone number
      operationId: setPhoneNumber
      parameters:
        - $ref: "#/components/parameters/param_apiKey"
        - $ref: "#/components/parameters/param_apiSecret"
        - $ref: "#/components/parameters/param_apiTicket"
        - $ref: "#/components/parameters/param_oldPhoneNumber"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/phone"
        description: Phone Number to be set.
        required: true
      responses:
        "201":
          description: Success - New Phone number Created
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountErrors"
              examples:
                response:
                  value: |
                    {
                     "errors" : [
                     {
                     "code":"000000",
                     "message":"Error Message Text",
                     "field":"aparam"
                     }
                     ]
                    } 
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountErrors"
              examples:
                response:
                  value: |
                    {
                     "errors" : [
                     {
                     "code":"000000",
                     "message":"Error Message Text",
                     "field":"aparam"
                     }
                     ]
                    } 
        "404":
          description: No such plus card customer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountErrors"
              examples:
                response:
                  value: |
                    {
                     "errors" : [
                     {
                     "code":"10003",
                     "message":"Resource Not Found",
                     "field":"token"
                     }
                     ]
                    }
      summary: Sets a customer's plus card phone number
      tags:
        - Plus Card
        - Omni
        - Wallet
        - Card Number
        - Phone
      x-canReturnErrors:
        - 20401
  /account/plusCard/pin:
    post:
      description: Sets a customer's plus card pin
      operationId: setPin
      parameters:
        - $ref: "#/components/parameters/param_apiKey"
        - $ref: "#/components/parameters/param_apiSecret"
        - $ref: "#/components/parameters/param_apiTicket"
      requestBody:
        $ref: "#/components/requestBodies/pin"
      responses:
        "201":
          description: Success - PIN Created
        "400":
          description: Errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountErrors"
              examples:
                response:
                  value: |
                    {
                     "errors" : [
                     {
                     "code":"000000",
                     "message":"Error Message Text",
                     "field":"aparam"
                     }
                     ]
                    } 
        "404":
          description: No such plus card customer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountErrors"
              examples:
                response:
                  value: |
                    {
                     "errors" : [
                     {
                     "code":"10003",
                     "message":"Resource Not Found",
                     "field":"token"
                     }
                     ]
                    }
      summary: Sets a customer's plus card pin
      tags:
        - Plus Card
        - Omni
        - Wallet
        - Card Number
        - PIN
      x-canReturnErrors:
        - 20401
    put:
      description: Updates a customer's plus card pin
      operationId: updatePin
      parameters:
        - $ref: "#/components/parameters/param_apiKey"
        - $ref: "#/components/parameters/param_apiSecret"
        - $ref: "#/components/parameters/param_apiTicket"
      requestBody:
        $ref: "#/components/requestBodies/pin"
      responses:
        "204":
          description: Success - PIN Updated
        "400":
          description: Errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountErrors"
              examples:
                response:
                  value: |
                    {
                     "errors" : [
                     {
                     "code":"000000",
                     "message":"Error Message Text",
                     "field":"aparam"
                     }
                     ]
                    } 
        "404":
          description: No such plus card customer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/accountErrors"
              examples:
                response:
                  value: |
                    {
                     "errors" : [
                     {
                     "code":"10003",
                     "message":"Resource Not Found",
                     "field":"token"
                     }
                     ]
                    }
      summary: Updates a customer's plus card pin
      tags:
        - Plus Card
        - Omni
        - Wallet
        - Card Number
        - PIN
      x-canReturnErrors:
        - 20401
x-customerrors:
  - code: 20401
    message: Account details are not available for temporary accounts
    status: 400
  - code: 20402
    message: Account status not available
    status: 404
x-docchapters:
  - fieldSelection
  - apiSummary
  - headAndOptions
  - docsAndSdks
  - errorHandling
  - statusCodes
x-globalerrors: null
servers:
  - url: https://sandbox.whapi.com/v2/accounts
components:
  parameters:
    param_apiCountryCode:
      description: A two-character ISO 3166-1-Alpha-2 code representing the country API to
        use.
      in: header
      name: apiCountryCode
      required: false
      x-eg: ES
      schema:
        type: string
        pattern: ^(GB|ES|IT)$
        default: GB
    param_apiKey:
      description: A unique identifier of your application that is generated by the API
        portal.
      in: header
      name: apiKey
      required: true
      x-eg: l7xxa54460c573b5497c9b24b505xxxxxxxx
      schema:
        type: string
        pattern: ^[a-zA-Z0-9]{19,50}$
    param_apiSecret:
      description: Another unique identifier for your application.
      in: header
      name: apiSecret
      required: true
      x-eg: 355b1e522c544222ab4ff318xxxxxxxx
      schema:
        type: string
        pattern: ^[a-zA-Z0-9]{19,50}$
    param_apiTicket:
      description: Ticket Granting Ticket obtained from a previous request
      in: header
      name: apiTicket
      required: true
      x-eg: TGT-1920-Cl7l4e0hzFWK9aoKeiggDexuWcmAMf9brh6IFpVdsQxxxxxxxx-brsux349
      schema:
        type: string
        pattern: ^[a-zA-Z][a-zA-Z0-9-]{39,100}$
    param_exclude:
      description: Specify fields from the default to exclude (Comma-Separated List)
      in: query
      name: exclude
      required: false
      x-eg: expiryDateTime
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    param_fields:
      description: Specify an absolute field list to return (Comma-Separated List)
      in: query
      name: fields
      required: false
      x-eg: extended
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    param_fromDateTime:
      description: The FROM datetime from payments to be returned. (yyyy-MM-ddTHH:mm:ss)
      in: query
      name: dateFrom
      x-eg: 2013-09-25T13:34:20+01:00
      schema:
        type: string
        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})\:(\d{2})\:(\d{2})$
    param_include:
      description: Specify fields in addition to the default to return (Comma-Separated
        List)
      in: query
      name: include
      required: false
      x-eg: extended
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    param_languageAsPerTerritory:
      description: Defines response field name language, true (default) returns in language
        defined by territory, false returns in English
      in: query
      name: languageAsPerTerritory
      required: false
      x-eg: false
      schema:
        type: string
        pattern: ^(true|false)$
    param_oldPhoneNumber:
      description: Old phone number to replace
      in: path
      name: oldPhoneNumber
      required: true
      x-eg: "+447870818838"
      schema:
        type: string
    param_page:
      description: The page number to return (Used with pageSize)
      in: query
      name: page
      x-eg: 10
      schema:
        type: number
        pattern: ^[1-9]{1,7}$
        default: 1
    param_pageSize:
      description: Specify the number of results to return per page.
      in: query
      name: pageSize
      x-eg: 15
      schema:
        type: number
        pattern: ^[1-9]{1,7}$
        default: 100
    param_sort:
      description: The order the response will be retuned by. i.e. date,desc
      in: query
      name: sort
      required: false
      x-eg: date,desc
      schema:
        type: string
        default: date,asc
    param_territory:
      description: Territory from which request originates
      in: header
      name: territory
      required: false
      x-eg: ES
      schema:
        type: string
        pattern: ^(COM|ES|IT)$
    param_toDateTime:
      description: The TO datetime for payments to be returned. (yyyy-MM-ddTHH:mm:ss)
      in: query
      name: dateTo
      x-eg: 2013-09-25T13:34:20+01:00
      schema:
        type: string
        pattern: ^(\d{4})-(\d{2})-(\d{2})T(\d{2})\:(\d{2})\:(\d{2})[+-](\d{2})\:(\d{2})$
    param_transactionFilter:
      description: Allows the user to select with they want to see withdrawls or deposits.
        If it is omitted from the query both types will be returned
      in: query
      name: transactionType
      required: false
      x-eg: W
      schema:
        type: string
        pattern: ^(W|D)$
  requestBodies:
    pin:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/pin"
      description: PIN to be set.
      required: true
  schemas:
    accountBalance:
      properties:
        availableFunds:
          description: Current available funds in this account
          pattern: ([0-9]*.[0-9]{2})
          type: number
        balance:
          description: Current balance of account
          pattern: ([0-9]*.[0-9]{2})
          type: number
        currencyCode:
          description: A three-character ISO4217 currency code. This will be the currency
            that the user registered in
          type: string
        withdrawableFunds:
          description: Current withdrawable balance of this account
          pattern: ([0-9]*.[0-9]{2})
          type: number
      required:
        - balance
        - currencyCode
      type: object
    accountErrors:
      properties:
        errors:
          items:
            $ref: "#/components/schemas/error"
          type: array
      type: object
    accountFlagsSet:
      properties:
        token:
          type: string
      type: object
    accounts:
      properties:
        accountId:
          description: Account ID
          type: string
        accountNum:
          description: Account number
          type: string
        city:
          description: The city of the customer's address
          type: string
        contactable:
          description: Is it okay for the bookmaker to contact the customer with marketing
            information
          type: boolean
        country:
          description: The country of the customer's address
          type: string
        countryCode:
          description: A two-character ISO 3166-1-Alpha-2 code representing the customer's
            country of registration
          type: string
        county:
          description: The county of the customer's address
          type: string
        currencyCode:
          description: A three-character ISO4217 currency code. This will be the currency
            that the customer registered in
          type: string
        customerId:
          description: Customer ID
          type: string
        email:
          description: The primary email address of the customer with that account. Must be
            unique.
          type: string
        firstName:
          description: The first name of the customer with that account
          type: string
        flags:
          $ref: "#/components/schemas/flags"
        lastName:
          description: The last name of the customer with that account
          type: string
        mobile:
          description: The mobile number of the customer with that account
          type: string
        partnerContactable:
          description: Is it okay for the bookmaker to give the user's contact details to
            companies with which it has partnerships
          type: boolean
        postcode:
          description: The postCode of the customer's address
          type: string
        status:
          description: Account status
          type: string
        street1:
          description: Line number 1 of the customer's street address written out in full
          type: string
        street2:
          description: Line number 2 of the customer's street address written out in full
          type: string
        street3:
          description: Line number 3 of the customer's street address written out in full
          type: string
        title:
          description: The title of the name of the customer with that account
          type: string
      required:
        - status
        - accountNum
        - firstName
        - lastName
      type: object
    error:
      properties:
        code:
          description: A unique William Hill identifier for the error
          type: string
        field:
          description: To help pinpoint the exact parameter where a request has failed
          type: string
        message:
          description: A unique William Hill text string to enable you to identify the
            error (in English only)
          type: string
      type: object
    flags:
      items:
        properties:
          flagName:
            description: Name of the flag to set.
            type: string
          flagReason:
            description: The reason that the flag has been set.
            type: string
          flagValue:
            description: Value to set the flag to.
            type: string
        required:
          - flagName
          - flagValue
        type: object
      type: array
    getPayments:
      properties:
        payments:
          items:
            $ref: "#/components/schemas/payment"
          type: array
      type: object
    onlineAccount:
      description: Online Account
      properties:
        name:
          type: string
          x-eg: George Bernard Shaw
        onlineAccountNumber:
          type: string
          x-eg: DF412323
      type: object
    payment:
      properties:
        action:
          description: Action of the payment (D = Deposit, W = withdrawal)
          pattern: (D|W)
          type: string
        amount:
          description: The amount of the payment
          pattern: ([0-9]*.[0-9]{2})
          type: number
        channel:
          description: The channel through which the payment was made
          type: string
        commision:
          description: The commision for the payment
          pattern: ([0-9]*.[0-9]{2})
          type: number
        id:
          description: ID of the payment
          type: string
        ipAddress:
          description: The IP address from which the payment was made
          type: string
        methodId:
          description: ID of the payment method
          type: string
        paymentDateTime:
          description: The date and time when the payment was made
          type: string
        status:
          description: The status of the payment
          type: string
        type:
          description: Type of the payment
          pattern: ([A-Za-z]*)
          type: string
      required:
        - id
        - action
        - paymentDateTime
        - amount
        - status
      type: object
    phone:
      description: Phone Number
      properties:
        phoneNumber:
          type: string
          x-eg: 9876543210
      type: object
    pin:
      pattern: "[0-9]{4}"
      type: number
      x-eg: 1234
    pinStatus:
      description: PIN object - if this object is not returned in plusCardDetails object
        then it has not been set.
      properties:
        attemptsRemaining:
          type: number
        blocked:
          type: boolean
      type: object
    plusCard:
      description: Plus Card
      properties:
        blocked:
          type: boolean
        cardNumber:
          type: string
      type: object
    plusCardDetails:
      description: Plus Card Details and linked accounts
      properties:
        card:
          $ref: "#/components/schemas/plusCard"
        onlineAccount:
          $ref: "#/components/schemas/onlineAccount"
        phone:
          $ref: "#/components/schemas/phone"
        pin:
          $ref: "#/components/schemas/pinStatus"
        retailAccount:
          $ref: "#/components/schemas/retailAccount"
      type: object
    retailAccount:
      description: Retail Account
      properties:
        selfExcluded:
          type: boolean
      type: object
