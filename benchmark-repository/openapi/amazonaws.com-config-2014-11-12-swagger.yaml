openapi: 3.0.0
info:
  version: 2014-11-12
  x-release: v4
  title: AWS Config
  description: <fullname>AWS Config</fullname> <p>AWS Config provides a way to keep track
    of the configurations of all the AWS resources associated with your AWS
    account. You can use AWS Config to get the current and historical
    configurations of each AWS resource and also to get information about the
    relationship between the resources. An AWS resource can be an Amazon Compute
    Cloud (Amazon EC2) instance, an Elastic Block Store (EBS) volume, an elastic
    network Interface (ENI), or a security group. For a complete list of
    resources currently supported by AWS Config, see <a
    href="https://docs.aws.amazon.com/config/latest/developerguide/resource-config-reference.html#supported-resources">Supported
    AWS Resources</a>.</p> <p>You can access and manage AWS Config through the
    AWS Management Console, the AWS Command Line Interface (AWS CLI), the AWS
    Config API, or the AWS SDKs for AWS Config. This reference guide contains
    documentation for the AWS Config API and the AWS CLI commands that you can
    use to manage AWS Config. The AWS Config API uses the Signature Version 4
    protocol for signing requests. For more information about how to sign a
    request with this protocol, see <a
    href="https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html">Signature
    Version 4 Signing Process</a>. For detailed information about AWS Config
    features and their associated actions or commands, as well as how to work
    with AWS Management Console, see <a
    href="https://docs.aws.amazon.com/config/latest/developerguide/WhatIsConfig.html">What
    Is AWS Config</a> in the <i>AWS Config Developer Guide</i>.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: config
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/config-2014-11-12.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/config/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=StarlingDoveService.BatchGetAggregateResourceConfig:
    post:
      operationId: BatchGetAggregateResourceConfig
      description: <p>Returns the current configuration items for resources that are
        present in your AWS Config aggregator. The operation also returns a list
        of resources that are not processed in the current request. If there are
        no unprocessed resources, the operation returns an empty
        <code>unprocessedResourceIdentifiers</code> list. </p> <note> <ul> <li>
        <p>The API does not return results for deleted resources.</p> </li> <li>
        <p> The API does not return tags and relationships.</p> </li> </ul>
        </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchGetAggregateResourceConfigResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: NoSuchConfigurationAggregatorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchConfigurationAggregatorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.BatchGetAggregateResourceConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchGetAggregateResourceConfigRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.BatchGetResourceConfig:
    post:
      operationId: BatchGetResourceConfig
      description: <p>Returns the current configuration for one or more requested
        resources. The operation also returns a list of resources that are not
        processed in the current request. If there are no unprocessed resources,
        the operation returns an empty unprocessedResourceKeys list. </p> <note>
        <ul> <li> <p>The API does not return results for deleted resources.</p>
        </li> <li> <p> The API does not return any tags for the requested
        resources. This information is filtered out of the
        supplementaryConfiguration section of the API response.</p> </li> </ul>
        </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchGetResourceConfigResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: NoAvailableConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoAvailableConfigurationRecorderExcepti\
                  on"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.BatchGetResourceConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchGetResourceConfigRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DeleteAggregationAuthorization:
    post:
      operationId: DeleteAggregationAuthorization
      description: Deletes the authorization granted to the specified configuration
        aggregator account in a specified region.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeleteAggregationAuthorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteAggregationAuthorizationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DeleteConfigRule:
    post:
      operationId: DeleteConfigRule
      description: <p>Deletes the specified AWS Config rule and all of its evaluation
        results.</p> <p>AWS Config sets the state of a rule to
        <code>DELETING</code> until the deletion is complete. You cannot update
        a rule while it is in this state. If you make a
        <code>PutConfigRule</code> or <code>DeleteConfigRule</code> request for
        the rule, you will receive a <code>ResourceInUseException</code>.</p>
        <p>You can check the state of a rule by using the
        <code>DescribeConfigRules</code> request.</p>
      responses:
        "200":
          description: Success
        "480":
          description: NoSuchConfigRuleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchConfigRuleException"
        "481":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeleteConfigRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteConfigRuleRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DeleteConfigurationAggregator:
    post:
      operationId: DeleteConfigurationAggregator
      description: Deletes the specified configuration aggregator and the aggregated data
        associated with the aggregator.
      responses:
        "200":
          description: Success
        "480":
          description: NoSuchConfigurationAggregatorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchConfigurationAggregatorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeleteConfigurationAggregator
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteConfigurationAggregatorRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DeleteConfigurationRecorder:
    post:
      operationId: DeleteConfigurationRecorder
      description: <p>Deletes the configuration recorder.</p> <p>After the configuration
        recorder is deleted, AWS Config will not record resource configuration
        changes until you create a new configuration recorder.</p> <p>This
        action does not delete the configuration information that was previously
        recorded. You will be able to access the previously recorded information
        by using the <code>GetResourceConfigHistory</code> action, but you will
        not be able to access this information in the AWS Config console until
        you create a new configuration recorder.</p>
      responses:
        "200":
          description: Success
        "480":
          description: NoSuchConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchConfigurationRecorderException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeleteConfigurationRecorder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteConfigurationRecorderRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DeleteDeliveryChannel:
    post:
      operationId: DeleteDeliveryChannel
      description: <p>Deletes the delivery channel.</p> <p>Before you can delete the
        delivery channel, you must stop the configuration recorder by using the
        <a>StopConfigurationRecorder</a> action.</p>
      responses:
        "200":
          description: Success
        "480":
          description: NoSuchDeliveryChannelException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchDeliveryChannelException"
        "481":
          description: LastDeliveryChannelDeleteFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LastDeliveryChannelDeleteFailedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeleteDeliveryChannel
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDeliveryChannelRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DeleteEvaluationResults:
    post:
      operationId: DeleteEvaluationResults
      description: Deletes the evaluation results for the specified AWS Config rule. You
        can specify one AWS Config rule per request. After you delete the
        evaluation results, you can call the <a>StartConfigRulesEvaluation</a>
        API to start evaluating your AWS resources against the rule.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteEvaluationResultsResponse"
        "480":
          description: NoSuchConfigRuleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchConfigRuleException"
        "481":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeleteEvaluationResults
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteEvaluationResultsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DeleteOrganizationConfigRule:
    post:
      operationId: DeleteOrganizationConfigRule
      description: <p>Deletes the specified organization config rule and all of its
        evaluation results from all member accounts in that organization. Only a
        master account can delete an organization config rule.</p> <p>AWS Config
        sets the state of a rule to DELETE_IN_PROGRESS until the deletion is
        complete. You cannot update a rule while it is in this state.</p>
      responses:
        "200":
          description: Success
        "480":
          description: NoSuchOrganizationConfigRuleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchOrganizationConfigRuleException"
        "481":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "482":
          description: OrganizationAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationAccessDeniedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeleteOrganizationConfigRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteOrganizationConfigRuleRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DeletePendingAggregationRequest:
    post:
      operationId: DeletePendingAggregationRequest
      description: Deletes pending authorization requests for a specified aggregator
        account in a specified region.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeletePendingAggregationRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeletePendingAggregationRequestRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DeleteRemediationConfiguration:
    post:
      operationId: DeleteRemediationConfiguration
      description: Deletes the remediation configuration.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRemediationConfigurationResponse"
        "480":
          description: NoSuchRemediationConfigurationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchRemediationConfigurationException"
        "481":
          description: RemediationInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemediationInProgressException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeleteRemediationConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRemediationConfigurationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DeleteRemediationExceptions:
    post:
      operationId: DeleteRemediationExceptions
      description: Deletes one or more remediation exceptions mentioned in the resource
        keys.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRemediationExceptionsResponse"
        "480":
          description: NoSuchRemediationExceptionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchRemediationExceptionException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeleteRemediationExceptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRemediationExceptionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DeleteRetentionConfiguration:
    post:
      operationId: DeleteRetentionConfiguration
      description: Deletes the retention configuration.
      responses:
        "200":
          description: Success
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: NoSuchRetentionConfigurationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchRetentionConfigurationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeleteRetentionConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRetentionConfigurationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DeliverConfigSnapshot:
    post:
      operationId: DeliverConfigSnapshot
      description: <p>Schedules delivery of a configuration snapshot to the Amazon S3
        bucket in the specified delivery channel. After the delivery has
        started, AWS Config sends the following notifications using an Amazon
        SNS topic that you have specified.</p> <ul> <li> <p>Notification of the
        start of the delivery.</p> </li> <li> <p>Notification of the completion
        of the delivery, if the delivery was successfully completed.</p> </li>
        <li> <p>Notification of delivery failure, if the delivery failed.</p>
        </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliverConfigSnapshotResponse"
        "480":
          description: NoSuchDeliveryChannelException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchDeliveryChannelException"
        "481":
          description: NoAvailableConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoAvailableConfigurationRecorderExcepti\
                  on"
        "482":
          description: NoRunningConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoRunningConfigurationRecorderException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DeliverConfigSnapshot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeliverConfigSnapshotRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DescribeAggregateComplianceByConfigRules:
    post:
      operationId: DescribeAggregateComplianceByConfigRules
      description: <p>Returns a list of compliant and noncompliant rules with the number of
        resources for compliant and noncompliant rules. </p> <note> <p>The
        results can return an empty result page, but if you have a
        <code>nextToken</code>, the results are displayed on the next page.</p>
        </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAggregateComplianceByConfigRule\
                  sResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidLimitException"
        "482":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "483":
          description: NoSuchConfigurationAggregatorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchConfigurationAggregatorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeAggregateComplianceByConfigRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeAggregateComplianceByConfigRulesR\
                equest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DescribeAggregationAuthorizations:
    post:
      operationId: DescribeAggregationAuthorizations
      description: Returns a list of authorizations granted to various aggregator accounts
        and regions.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAggregationAuthorizationsRespon\
                  se"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "482":
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidLimitException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeAggregationAuthorizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeAggregationAuthorizationsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DescribeComplianceByConfigRule:
    post:
      operationId: DescribeComplianceByConfigRule
      description: <p>Indicates whether the specified AWS Config rules are compliant. If a
        rule is noncompliant, this action returns the number of AWS resources
        that do not comply with the rule.</p> <p>A rule is compliant if all of
        the evaluated resources comply with it. It is noncompliant if any of
        these resources do not comply.</p> <p>If AWS Config has no current
        evaluation results for the rule, it returns
        <code>INSUFFICIENT_DATA</code>. This result might indicate one of the
        following conditions:</p> <ul> <li> <p>AWS Config has never invoked an
        evaluation for the rule. To check whether it has, use the
        <code>DescribeConfigRuleEvaluationStatus</code> action to get the
        <code>LastSuccessfulInvocationTime</code> and
        <code>LastFailedInvocationTime</code>.</p> </li> <li> <p>The rule's AWS
        Lambda function is failing to send evaluation results to AWS Config.
        Verify that the role you assigned to your configuration recorder
        includes the <code>config:PutEvaluations</code> permission. If the rule
        is a custom rule, verify that the AWS Lambda execution role includes the
        <code>config:PutEvaluations</code> permission.</p> </li> <li> <p>The
        rule's AWS Lambda function has returned <code>NOT_APPLICABLE</code> for
        all evaluation results. This can occur if the resources were deleted or
        removed from the rule's scope.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeComplianceByConfigRuleResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: NoSuchConfigRuleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchConfigRuleException"
        "482":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeComplianceByConfigRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeComplianceByConfigRuleRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DescribeComplianceByResource:
    post:
      operationId: DescribeComplianceByResource
      description: <p>Indicates whether the specified AWS resources are compliant. If a
        resource is noncompliant, this action returns the number of AWS Config
        rules that the resource does not comply with.</p> <p>A resource is
        compliant if it complies with all the AWS Config rules that evaluate it.
        It is noncompliant if it does not comply with one or more of these
        rules.</p> <p>If AWS Config has no current evaluation results for the
        resource, it returns <code>INSUFFICIENT_DATA</code>. This result might
        indicate one of the following conditions about the rules that evaluate
        the resource:</p> <ul> <li> <p>AWS Config has never invoked an
        evaluation for the rule. To check whether it has, use the
        <code>DescribeConfigRuleEvaluationStatus</code> action to get the
        <code>LastSuccessfulInvocationTime</code> and
        <code>LastFailedInvocationTime</code>.</p> </li> <li> <p>The rule's AWS
        Lambda function is failing to send evaluation results to AWS Config.
        Verify that the role that you assigned to your configuration recorder
        includes the <code>config:PutEvaluations</code> permission. If the rule
        is a custom rule, verify that the AWS Lambda execution role includes the
        <code>config:PutEvaluations</code> permission.</p> </li> <li> <p>The
        rule's AWS Lambda function has returned <code>NOT_APPLICABLE</code> for
        all evaluation results. This can occur if the resources were deleted or
        removed from the rule's scope.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeComplianceByResourceResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeComplianceByResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeComplianceByResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DescribeConfigRuleEvaluationStatus:
    post:
      operationId: DescribeConfigRuleEvaluationStatus
      description: Returns status information for each of your AWS managed Config rules.
        The status includes information such as the last time AWS Config invoked
        the rule, the last time AWS Config failed to invoke the rule, and the
        related error for the last failure.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeConfigRuleEvaluationStatusRespo\
                  nse"
        "480":
          description: NoSuchConfigRuleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchConfigRuleException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeConfigRuleEvaluationStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeConfigRuleEvaluationStatusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DescribeConfigRules:
    post:
      operationId: DescribeConfigRules
      description: Returns details about your AWS Config rules.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeConfigRulesResponse"
        "480":
          description: NoSuchConfigRuleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchConfigRuleException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeConfigRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeConfigRulesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DescribeConfigurationAggregatorSourcesStatus:
    post:
      operationId: DescribeConfigurationAggregatorSourcesStatus
      description: "Returns status information for sources within an aggregator. The status
        includes information about the last time AWS Config verified
        authorization between the source account and an aggregator account. In
        case of a failure, the status contains the related error code or
        message. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeConfigurationAggregatorSourcesS\
                  tatusResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: NoSuchConfigurationAggregatorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchConfigurationAggregatorException"
        "482":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "483":
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidLimitException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeConfigurationAggregatorSourcesStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeConfigurationAggregatorSourcesSta\
                tusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DescribeConfigurationAggregators:
    post:
      operationId: DescribeConfigurationAggregators
      description: "Returns the details of one or more configuration aggregators. If the
        configuration aggregator is not specified, this action returns the
        details for all the configuration aggregators associated with the
        account. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeConfigurationAggregatorsResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: NoSuchConfigurationAggregatorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchConfigurationAggregatorException"
        "482":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "483":
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidLimitException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeConfigurationAggregators
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeConfigurationAggregatorsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DescribeConfigurationRecorderStatus:
    post:
      operationId: DescribeConfigurationRecorderStatus
      description: <p>Returns the current status of the specified configuration recorder.
        If a configuration recorder is not specified, this action returns the
        status of all configuration recorders associated with the account.</p>
        <note> <p>Currently, you can specify only one configuration recorder per
        region in your account.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeConfigurationRecorderStatusResp\
                  onse"
        "480":
          description: NoSuchConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchConfigurationRecorderException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeConfigurationRecorderStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeConfigurationRecorderStatusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DescribeConfigurationRecorders:
    post:
      operationId: DescribeConfigurationRecorders
      description: <p>Returns the details for the specified configuration recorders. If the
        configuration recorder is not specified, this action returns the details
        for all configuration recorders associated with the account.</p> <note>
        <p>Currently, you can specify only one configuration recorder per region
        in your account.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeConfigurationRecordersResponse"
        "480":
          description: NoSuchConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchConfigurationRecorderException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeConfigurationRecorders
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeConfigurationRecordersRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DescribeDeliveryChannelStatus:
    post:
      operationId: DescribeDeliveryChannelStatus
      description: <p>Returns the current status of the specified delivery channel. If a
        delivery channel is not specified, this action returns the current
        status of all delivery channels associated with the account.</p> <note>
        <p>Currently, you can specify only one delivery channel per region in
        your account.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDeliveryChannelStatusResponse"
        "480":
          description: NoSuchDeliveryChannelException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchDeliveryChannelException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeDeliveryChannelStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeDeliveryChannelStatusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DescribeDeliveryChannels:
    post:
      operationId: DescribeDeliveryChannels
      description: <p>Returns details about the specified delivery channel. If a delivery
        channel is not specified, this action returns the details of all
        delivery channels associated with the account.</p> <note> <p>Currently,
        you can specify only one delivery channel per region in your
        account.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDeliveryChannelsResponse"
        "480":
          description: NoSuchDeliveryChannelException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchDeliveryChannelException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeDeliveryChannels
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeDeliveryChannelsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DescribeOrganizationConfigRuleStatuses:
    post:
      operationId: DescribeOrganizationConfigRuleStatuses
      description: <p>Provides organization config rule deployment status for an
        organization.</p> <note> <p>The status is not considered successful
        until organization config rule is successfully deployed in all the
        member accounts with an exception of excluded accounts.</p> <p>When you
        specify the limit and the next token, you receive a paginated response.
        Limit and next token are not applicable if you specify organization
        config rule names. It is only applicable, when you request all the
        organization config rules.</p> <p>Only a master account can call this
        API.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeOrganizationConfigRuleStatusesR\
                  esponse"
        "480":
          description: NoSuchOrganizationConfigRuleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchOrganizationConfigRuleException"
        "481":
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidLimitException"
        "482":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "483":
          description: OrganizationAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationAccessDeniedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeOrganizationConfigRuleStatuses
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeOrganizationConfigRuleStatusesReq\
                uest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DescribeOrganizationConfigRules:
    post:
      operationId: DescribeOrganizationConfigRules
      description: <p>Returns a list of organization config rules.</p> <note> <p>When you
        specify the limit and the next token, you receive a paginated response.
        Limit and next token are not applicable if you specify organization
        config rule names. It is only applicable, when you request all the
        organization config rules.</p> <p>Only a master account can call this
        API.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeOrganizationConfigRulesResponse"
        "480":
          description: NoSuchOrganizationConfigRuleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchOrganizationConfigRuleException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "482":
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidLimitException"
        "483":
          description: OrganizationAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationAccessDeniedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeOrganizationConfigRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeOrganizationConfigRulesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DescribePendingAggregationRequests:
    post:
      operationId: DescribePendingAggregationRequests
      description: Returns a list of all pending aggregation requests.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePendingAggregationRequestsRespo\
                  nse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "482":
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidLimitException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribePendingAggregationRequests
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribePendingAggregationRequestsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DescribeRemediationConfigurations:
    post:
      operationId: DescribeRemediationConfigurations
      description: Returns the details of one or more remediation configurations.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeRemediationConfigurationsRespon\
                  se"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeRemediationConfigurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeRemediationConfigurationsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DescribeRemediationExceptions:
    post:
      operationId: DescribeRemediationExceptions
      description: <p>Returns the details of one or more remediation exceptions. A detailed
        view of a remediation exception for a set of resources that includes an
        explanation of an exception and the time when the exception will be
        deleted. When you specify the limit and the next token, you receive a
        paginated response. </p> <note> <p>When you specify the limit and the
        next token, you receive a paginated response. </p> <p>Limit and next
        token are not applicable if you request resources in batch. It is only
        applicable, when you request all resources.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeRemediationExceptionsResponse"
        "480":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
      parameters:
        - name: Limit
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeRemediationExceptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeRemediationExceptionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DescribeRemediationExecutionStatus:
    post:
      operationId: DescribeRemediationExecutionStatus
      description: Provides a detailed view of a Remediation Execution for a set of
        resources including state, timestamps for when steps for the remediation
        execution occur, and any error messages for steps that have failed. When
        you specify the limit and the next token, you receive a paginated
        response.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeRemediationExecutionStatusRespo\
                  nse"
        "480":
          description: NoSuchRemediationConfigurationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchRemediationConfigurationException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: Limit
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeRemediationExecutionStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeRemediationExecutionStatusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.DescribeRetentionConfigurations:
    post:
      operationId: DescribeRetentionConfigurations
      description: <p>Returns the details of one or more retention configurations. If the
        retention configuration name is not specified, this action returns the
        details for all the retention configurations for that account.</p>
        <note> <p>Currently, AWS Config supports only one retention
        configuration per region in your account.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeRetentionConfigurationsResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: NoSuchRetentionConfigurationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchRetentionConfigurationException"
        "482":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.DescribeRetentionConfigurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeRetentionConfigurationsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.GetAggregateComplianceDetailsByConfigRule:
    post:
      operationId: GetAggregateComplianceDetailsByConfigRule
      description: <p>Returns the evaluation results for the specified AWS Config rule for
        a specific resource in a rule. The results indicate which AWS resources
        were evaluated by the rule, when each resource was last evaluated, and
        whether each resource complies with the rule. </p> <note> <p>The results
        can return an empty result page. But if you have a
        <code>nextToken</code>, the results are displayed on the next page.</p>
        </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAggregateComplianceDetailsByConfigRu\
                  leResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidLimitException"
        "482":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "483":
          description: NoSuchConfigurationAggregatorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchConfigurationAggregatorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetAggregateComplianceDetailsByConfigRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetAggregateComplianceDetailsByConfigRule\
                Request"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.GetAggregateConfigRuleComplianceSummary:
    post:
      operationId: GetAggregateConfigRuleComplianceSummary
      description: <p>Returns the number of compliant and noncompliant rules for one or
        more accounts and regions in an aggregator.</p> <note> <p>The results
        can return an empty result page, but if you have a nextToken, the
        results are displayed on the next page.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAggregateConfigRuleComplianceSummary\
                  Response"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidLimitException"
        "482":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "483":
          description: NoSuchConfigurationAggregatorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchConfigurationAggregatorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetAggregateConfigRuleComplianceSummary
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetAggregateConfigRuleComplianceSummaryRe\
                quest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.GetAggregateDiscoveredResourceCounts:
    post:
      operationId: GetAggregateDiscoveredResourceCounts
      description: <p>Returns the resource counts across accounts and regions that are
        present in your AWS Config aggregator. You can request the resource
        counts by providing filters and GroupByKey.</p> <p>For example, if the
        input contains accountID 12345678910 and region us-east-1 in filters,
        the API returns the count of resources in account ID 12345678910 and
        region us-east-1. If the input contains ACCOUNT_ID as a GroupByKey, the
        API returns resource counts for all source accounts that are present in
        your aggregator.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAggregateDiscoveredResourceCountsRes\
                  ponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidLimitException"
        "482":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "483":
          description: NoSuchConfigurationAggregatorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchConfigurationAggregatorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetAggregateDiscoveredResourceCounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetAggregateDiscoveredResourceCountsReque\
                st"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.GetAggregateResourceConfig:
    post:
      operationId: GetAggregateResourceConfig
      description: Returns configuration item that is aggregated for your specific resource
        in a specific source account and region.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAggregateResourceConfigResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: NoSuchConfigurationAggregatorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchConfigurationAggregatorException"
        "482":
          description: OversizedConfigurationItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OversizedConfigurationItemException"
        "483":
          description: ResourceNotDiscoveredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotDiscoveredException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetAggregateResourceConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetAggregateResourceConfigRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.GetComplianceDetailsByConfigRule:
    post:
      operationId: GetComplianceDetailsByConfigRule
      description: Returns the evaluation results for the specified AWS Config rule. The
        results indicate which AWS resources were evaluated by the rule, when
        each resource was last evaluated, and whether each resource complies
        with the rule.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetComplianceDetailsByConfigRuleResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "482":
          description: NoSuchConfigRuleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchConfigRuleException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetComplianceDetailsByConfigRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetComplianceDetailsByConfigRuleRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.GetComplianceDetailsByResource:
    post:
      operationId: GetComplianceDetailsByResource
      description: Returns the evaluation results for the specified AWS resource. The
        results indicate which AWS Config rules were used to evaluate the
        resource, when each rule was last used, and whether the resource
        complies with each rule.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetComplianceDetailsByResourceResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetComplianceDetailsByResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetComplianceDetailsByResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.GetComplianceSummaryByConfigRule:
    post:
      operationId: GetComplianceSummaryByConfigRule
      description: Returns the number of AWS Config rules that are compliant and
        noncompliant, up to a maximum of 25 for each.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetComplianceSummaryByConfigRuleResponse"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetComplianceSummaryByConfigRule
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.GetComplianceSummaryByResourceType:
    post:
      operationId: GetComplianceSummaryByResourceType
      description: Returns the number of resources that are compliant and the number that
        are noncompliant. You can specify one or more resource types to get
        these numbers for each resource type. The maximum number returned is
        100.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetComplianceSummaryByResourceTypeRespo\
                  nse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetComplianceSummaryByResourceType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetComplianceSummaryByResourceTypeRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.GetDiscoveredResourceCounts:
    post:
      operationId: GetDiscoveredResourceCounts
      description: '<p>Returns the resource types, the number of each resource type, and
        the total number of resources that AWS Config is recording in this
        region for your AWS account. </p> <p class="title"> <b>Example</b> </p>
        <ol> <li> <p>AWS Config is recording three resource types in the US East
        (Ohio) Region for your account: 25 EC2 instances, 20 IAM users, and 15
        S3 buckets.</p> </li> <li> <p>You make a call to the
        <code>GetDiscoveredResourceCounts</code> action and specify that you
        want all resource types. </p> </li> <li> <p>AWS Config returns the
        following:</p> <ul> <li> <p>The resource types (EC2 instances, IAM
        users, and S3 buckets).</p> </li> <li> <p>The number of each resource
        type (25, 20, and 15).</p> </li> <li> <p>The total number of all
        resources (60).</p> </li> </ul> </li> </ol> <p>The response is
        paginated. By default, AWS Config lists 100 <a>ResourceCount</a> objects
        on each page. You can customize this number with the <code>limit</code>
        parameter. The response includes a <code>nextToken</code> string. To get
        the next page of results, run the request again and specify the string
        for the <code>nextToken</code> parameter.</p> <note> <p>If you make a
        call to the <a>GetDiscoveredResourceCounts</a> action, you might not
        immediately receive resource counts in the following situations:</p>
        <ul> <li> <p>You are a new AWS Config customer.</p> </li> <li> <p>You
        just enabled resource recording.</p> </li> </ul> <p>It might take a few
        minutes for AWS Config to record and count your resources. Wait a few
        minutes and then retry the <a>GetDiscoveredResourceCounts</a> action.
        </p> </note>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDiscoveredResourceCountsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidLimitException"
        "482":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetDiscoveredResourceCounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetDiscoveredResourceCountsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.GetOrganizationConfigRuleDetailedStatus:
    post:
      operationId: GetOrganizationConfigRuleDetailedStatus
      description: <p>Returns detailed status for each member account within an
        organization for a given organization config rule.</p> <note> <p>Only a
        master account can call this API.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetOrganizationConfigRuleDetailedStatus\
                  Response"
        "480":
          description: NoSuchOrganizationConfigRuleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchOrganizationConfigRuleException"
        "481":
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidLimitException"
        "482":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "483":
          description: OrganizationAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationAccessDeniedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetOrganizationConfigRuleDetailedStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetOrganizationConfigRuleDetailedStatusRe\
                quest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.GetResourceConfigHistory:
    post:
      operationId: GetResourceConfigHistory
      description: <p>Returns a list of configuration items for the specified resource. The
        list contains details about each state of the resource during the
        specified time interval. If you specified a retention period to retain
        your <code>ConfigurationItems</code> between a minimum of 30 days and a
        maximum of 7 years (2557 days), AWS Config returns the
        <code>ConfigurationItems</code> for the specified retention period. </p>
        <p>The response is paginated. By default, AWS Config returns a limit of
        10 configuration items per page. You can customize this number with the
        <code>limit</code> parameter. The response includes a
        <code>nextToken</code> string. To get the next page of results, run the
        request again and specify the string for the <code>nextToken</code>
        parameter.</p> <note> <p>Each call to the API is limited to span a
        duration of seven days. It is likely that the number of records returned
        is smaller than the specified <code>limit</code>. In such cases, you can
        make another call, using the <code>nextToken</code>.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetResourceConfigHistoryResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InvalidTimeRangeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTimeRangeException"
        "482":
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidLimitException"
        "483":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "484":
          description: NoAvailableConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoAvailableConfigurationRecorderExcepti\
                  on"
        "485":
          description: ResourceNotDiscoveredException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotDiscoveredException"
      parameters:
        - name: limit
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.GetResourceConfigHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetResourceConfigHistoryRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.ListAggregateDiscoveredResources:
    post:
      operationId: ListAggregateDiscoveredResources
      description: <p>Accepts a resource type and returns a list of resource identifiers
        that are aggregated for a specific resource type across accounts and
        regions. A resource identifier includes the resource type, ID, (if
        available) the custom resource name, source account, and source region.
        You can narrow the results to include only resources that have specific
        resource IDs, or a resource name, or source account ID, or source
        region.</p> <p>For example, if the input consists of accountID
        12345678910 and the region is us-east-1 for resource type
        <code>AWS::EC2::Instance</code> then the API returns all the EC2
        instance identifiers of accountID 12345678910 and region us-east-1.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAggregateDiscoveredResourcesResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidLimitException"
        "482":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "483":
          description: NoSuchConfigurationAggregatorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchConfigurationAggregatorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.ListAggregateDiscoveredResources
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListAggregateDiscoveredResourcesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.ListDiscoveredResources:
    post:
      operationId: ListDiscoveredResources
      description: <p>Accepts a resource type and returns a list of resource identifiers
        for the resources of that type. A resource identifier includes the
        resource type, ID, and (if available) the custom resource name. The
        results consist of resources that AWS Config has discovered, including
        those that AWS Config is not currently recording. You can narrow the
        results to include only resources that have specific resource IDs or a
        resource name.</p> <note> <p>You can specify either resource IDs or a
        resource name, but not both, in the same request.</p> </note> <p>The
        response is paginated. By default, AWS Config lists 100 resource
        identifiers on each page. You can customize this number with the
        <code>limit</code> parameter. The response includes a
        <code>nextToken</code> string. To get the next page of results, run the
        request again and specify the string for the <code>nextToken</code>
        parameter.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDiscoveredResourcesResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidLimitException"
        "482":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "483":
          description: NoAvailableConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoAvailableConfigurationRecorderExcepti\
                  on"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.ListDiscoveredResources
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListDiscoveredResourcesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: List the tags for AWS Config resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidLimitException"
        "483":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.ListTagsForResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagsForResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.PutAggregationAuthorization:
    post:
      operationId: PutAggregationAuthorization
      description: "Authorizes the aggregator account and region to collect data from the
        source account and region. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutAggregationAuthorizationResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutAggregationAuthorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutAggregationAuthorizationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.PutConfigRule:
    post:
      operationId: PutConfigRule
      description: <p>Adds or updates an AWS Config rule for evaluating whether your AWS
        resources comply with your desired configurations.</p> <p>You can use
        this action for custom AWS Config rules and AWS managed Config rules. A
        custom AWS Config rule is a rule that you develop and maintain. An AWS
        managed Config rule is a customizable, predefined rule that AWS Config
        provides.</p> <p>If you are adding a new custom AWS Config rule, you
        must first create the AWS Lambda function that the rule invokes to
        evaluate your resources. When you use the <code>PutConfigRule</code>
        action to add the rule to AWS Config, you must specify the Amazon
        Resource Name (ARN) that AWS Lambda assigns to the function. Specify the
        ARN for the <code>SourceIdentifier</code> key. This key is part of the
        <code>Source</code> object, which is part of the <code>ConfigRule</code>
        object. </p> <p>If you are adding an AWS managed Config rule, specify
        the rule's identifier for the <code>SourceIdentifier</code> key. To
        reference AWS managed Config rule identifiers, see <a
        href="https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html">About
        AWS Managed Config Rules</a>.</p> <p>For any new rule that you add,
        specify the <code>ConfigRuleName</code> in the <code>ConfigRule</code>
        object. Do not specify the <code>ConfigRuleArn</code> or the
        <code>ConfigRuleId</code>. These values are generated by AWS Config for
        new rules.</p> <p>If you are updating a rule that you added previously,
        you can specify the rule by <code>ConfigRuleName</code>,
        <code>ConfigRuleId</code>, or <code>ConfigRuleArn</code> in the
        <code>ConfigRule</code> data type that you use in this request.</p>
        <p>The maximum number of rules that AWS Config supports is 150.</p>
        <p>For information about requesting a rule limit increase, see <a
        href="http://docs.aws.amazon.com/general/latest/gr/aws_service_limits.html#limits_config">AWS
        Config Limits</a> in the <i>AWS General Reference Guide</i>.</p> <p>For
        more information about developing and using AWS Config rules, see <a
        href="https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config.html">Evaluating
        AWS Resource Configurations with AWS Config</a> in the <i>AWS Config
        Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: MaxNumberOfConfigRulesExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaxNumberOfConfigRulesExceededException"
        "482":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "483":
          description: InsufficientPermissionsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsufficientPermissionsException"
        "484":
          description: NoAvailableConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoAvailableConfigurationRecorderExcepti\
                  on"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutConfigRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutConfigRuleRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.PutConfigurationAggregator:
    post:
      operationId: PutConfigurationAggregator
      description: <p>Creates and updates the configuration aggregator with the selected
        source accounts and regions. The source account can be individual
        account(s) or an organization.</p> <note> <p>AWS Config should be
        enabled in source accounts and regions you want to aggregate.</p> <p>If
        your source type is an organization, you must be signed in to the master
        account and all features must be enabled in your organization. AWS
        Config calls <code>EnableAwsServiceAccess</code> API to enable
        integration between AWS Config and AWS Organizations. </p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutConfigurationAggregatorResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRoleException"
        "483":
          description: OrganizationAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationAccessDeniedException"
        "484":
          description: NoAvailableOrganizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoAvailableOrganizationException"
        "485":
          description: OrganizationAllFeaturesNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationAllFeaturesNotEnabledExcept\
                  ion"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutConfigurationAggregator
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutConfigurationAggregatorRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.PutConfigurationRecorder:
    post:
      operationId: PutConfigurationRecorder
      description: <p>Creates a new configuration recorder to record the selected resource
        configurations.</p> <p>You can use this action to change the role
        <code>roleARN</code> or the <code>recordingGroup</code> of an existing
        recorder. To change the role, call the action on the existing
        configuration recorder and specify a role.</p> <note> <p>Currently, you
        can specify only one configuration recorder per region in your
        account.</p> <p>If <code>ConfigurationRecorder</code> does not have the
        <b>recordingGroup</b> parameter specified, the default is to record all
        supported resource types.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: MaxNumberOfConfigurationRecordersExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaxNumberOfConfigurationRecordersExceed\
                  edException"
        "481":
          description: InvalidConfigurationRecorderNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRecorderNameExcepti\
                  on"
        "482":
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRoleException"
        "483":
          description: InvalidRecordingGroupException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRecordingGroupException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutConfigurationRecorder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutConfigurationRecorderRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.PutDeliveryChannel:
    post:
      operationId: PutDeliveryChannel
      description: <p>Creates a delivery channel object to deliver configuration
        information to an Amazon S3 bucket and Amazon SNS topic.</p> <p>Before
        you can create a delivery channel, you must create a configuration
        recorder.</p> <p>You can use this action to change the Amazon S3 bucket
        or an Amazon SNS topic of the existing delivery channel. To change the
        Amazon S3 bucket or an Amazon SNS topic, call this action and specify
        the changed values for the S3 bucket and the SNS topic. If you specify a
        different value for either the S3 bucket or the SNS topic, this action
        will keep the existing value for the parameter that is not changed.</p>
        <note> <p>You can have only one delivery channel per region in your
        account.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: MaxNumberOfDeliveryChannelsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaxNumberOfDeliveryChannelsExceededExce\
                  ption"
        "481":
          description: NoAvailableConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoAvailableConfigurationRecorderExcepti\
                  on"
        "482":
          description: InvalidDeliveryChannelNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeliveryChannelNameException"
        "483":
          description: NoSuchBucketException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchBucketException"
        "484":
          description: InvalidS3KeyPrefixException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidS3KeyPrefixException"
        "485":
          description: InvalidSNSTopicARNException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidSNSTopicARNException"
        "486":
          description: InsufficientDeliveryPolicyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsufficientDeliveryPolicyException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutDeliveryChannel
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutDeliveryChannelRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.PutEvaluations:
    post:
      operationId: PutEvaluations
      description: Used by an AWS Lambda function to deliver evaluation results to AWS
        Config. This action is required in every AWS Lambda function that is
        invoked by an AWS Config rule.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutEvaluationsResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: InvalidResultTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResultTokenException"
        "482":
          description: NoSuchConfigRuleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchConfigRuleException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutEvaluations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutEvaluationsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.PutOrganizationConfigRule:
    post:
      operationId: PutOrganizationConfigRule
      description: <p>Adds or updates organization config rule for your entire organization
        evaluating whether your AWS resources comply with your desired
        configurations. Only a master account can create or update an
        organization config rule.</p> <p>This API enables organization service
        access through the <code>EnableAWSServiceAccess</code> action and
        creates a service linked role
        <code>AWSServiceRoleForConfigMultiAccountSetup</code> in the master
        account of your organization. The service linked role is created only
        when the role does not exist in the master account. AWS Config verifies
        the existence of role with <code>GetRole</code> action.</p> <p>You can
        use this action to create both custom AWS Config rules and AWS managed
        Config rules. If you are adding a new custom AWS Config rule, you must
        first create AWS Lambda function in the master account that the rule
        invokes to evaluate your resources. When you use the
        <code>PutOrganizationConfigRule</code> action to add the rule to AWS
        Config, you must specify the Amazon Resource Name (ARN) that AWS Lambda
        assigns to the function. If you are adding an AWS managed Config rule,
        specify the rule's identifier for the <code>RuleIdentifier</code>
        key.</p> <p>The maximum number of organization config rules that AWS
        Config supports is 150.</p> <note> <p>Specify either
        <code>OrganizationCustomRuleMetadata</code> or
        <code>OrganizationManagedRuleMetadata</code>.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutOrganizationConfigRuleResponse"
        "480":
          description: MaxNumberOfOrganizationConfigRulesExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaxNumberOfOrganizationConfigRulesExcee\
                  dedException"
        "481":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: OrganizationAccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationAccessDeniedException"
        "485":
          description: NoAvailableOrganizationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoAvailableOrganizationException"
        "486":
          description: OrganizationAllFeaturesNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationAllFeaturesNotEnabledExcept\
                  ion"
        "487":
          description: InsufficientPermissionsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsufficientPermissionsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutOrganizationConfigRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutOrganizationConfigRuleRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.PutRemediationConfigurations:
    post:
      operationId: PutRemediationConfigurations
      description: "Adds or updates the remediation configuration with a specific AWS
        Config rule with the selected target or action. The API creates the
        <code>RemediationConfiguration</code> object for the AWS Config rule.
        The AWS Config rule must already exist for you to add a remediation
        configuration. The target (SSM document) must exist and have permissions
        to use the target. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutRemediationConfigurationsResponse"
        "480":
          description: InsufficientPermissionsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsufficientPermissionsException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutRemediationConfigurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutRemediationConfigurationsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.PutRemediationExceptions:
    post:
      operationId: PutRemediationExceptions
      description: "A remediation exception is when a specific resource is no longer
        considered for auto-remediation. This API adds a new exception or
        updates an exisiting exception for a specific resource with a specific
        AWS Config rule. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutRemediationExceptionsResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutRemediationExceptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutRemediationExceptionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.PutRetentionConfiguration:
    post:
      operationId: PutRetentionConfiguration
      description: <p>Creates and updates the retention configuration with details about
        retention period (number of days) that AWS Config stores your historical
        information. The API creates the <code>RetentionConfiguration</code>
        object and names the object as <b>default</b>. When you have a
        <code>RetentionConfiguration</code> object named <b>default</b>, calling
        the API modifies the default object. </p> <note> <p>Currently, AWS
        Config supports only one retention configuration per region in your
        account.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutRetentionConfigurationResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: MaxNumberOfRetentionConfigurationsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaxNumberOfRetentionConfigurationsExcee\
                  dedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.PutRetentionConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutRetentionConfigurationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.SelectResourceConfig:
    post:
      operationId: SelectResourceConfig
      description: <p>Accepts a structured query language (SQL) <code>SELECT</code>
        command, performs the corresponding search, and returns resource
        configurations matching the properties.</p> <p>For more information
        about query components, see the <a
        href="https://docs.aws.amazon.com/config/latest/developerguide/query-components.html">
        <b>Query Components</b> </a> section in the AWS Config Developer
        Guide.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SelectResourceConfigResponse"
        "480":
          description: InvalidExpressionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidExpressionException"
        "481":
          description: InvalidLimitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidLimitException"
        "482":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.SelectResourceConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SelectResourceConfigRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.StartConfigRulesEvaluation:
    post:
      operationId: StartConfigRulesEvaluation
      description: <p>Runs an on-demand evaluation for the specified AWS Config rules
        against the last known configuration state of the resources. Use
        <code>StartConfigRulesEvaluation</code> when you want to test that a
        rule you updated is working as expected.
        <code>StartConfigRulesEvaluation</code> does not re-record the latest
        configuration state for your resources. It re-runs an evaluation against
        the last known state of your resources. </p> <p>You can specify up to 25
        AWS Config rules per request. </p> <p>An existing
        <code>StartConfigRulesEvaluation</code> call for the specified rules
        must complete before you can call the API again. If you chose to have
        AWS Config stream to an Amazon SNS topic, you will receive a
        <code>ConfigRuleEvaluationStarted</code> notification when the
        evaluation starts.</p> <note> <p>You don't need to call the
        <code>StartConfigRulesEvaluation</code> API to run an evaluation for a
        new rule. When you create a rule, AWS Config evaluates your resources
        against the rule automatically. </p> </note> <p>The
        <code>StartConfigRulesEvaluation</code> API is useful if you want to run
        on-demand evaluations, such as the following example:</p> <ol> <li>
        <p>You have a custom rule that evaluates your IAM resources every 24
        hours.</p> </li> <li> <p>You update your Lambda function to add
        additional conditions to your rule.</p> </li> <li> <p>Instead of waiting
        for the next periodic evaluation, you call the
        <code>StartConfigRulesEvaluation</code> API.</p> </li> <li> <p>AWS
        Config invokes your Lambda function and evaluates your IAM
        resources.</p> </li> <li> <p>Your custom rule will still run periodic
        evaluations every 24 hours.</p> </li> </ol>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartConfigRulesEvaluationResponse"
        "480":
          description: NoSuchConfigRuleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchConfigRuleException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "483":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.StartConfigRulesEvaluation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartConfigRulesEvaluationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.StartConfigurationRecorder:
    post:
      operationId: StartConfigurationRecorder
      description: <p>Starts recording configurations of the AWS resources you have
        selected to record in your AWS account.</p> <p>You must have created at
        least one delivery channel to successfully start the configuration
        recorder.</p>
      responses:
        "200":
          description: Success
        "480":
          description: NoSuchConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchConfigurationRecorderException"
        "481":
          description: NoAvailableDeliveryChannelException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoAvailableDeliveryChannelException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.StartConfigurationRecorder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartConfigurationRecorderRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.StartRemediationExecution:
    post:
      operationId: StartRemediationExecution
      description: <p>Runs an on-demand remediation for the specified AWS Config rules
        against the last known remediation configuration. It runs an execution
        against the current state of your resources. Remediation execution is
        asynchronous.</p> <p>You can specify up to 100 resource keys per
        request. An existing StartRemediationExecution call for the specified
        resource keys must complete before you can call the API again.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartRemediationExecutionResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: InsufficientPermissionsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsufficientPermissionsException"
        "482":
          description: NoSuchRemediationConfigurationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchRemediationConfigurationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.StartRemediationExecution
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartRemediationExecutionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.StopConfigurationRecorder:
    post:
      operationId: StopConfigurationRecorder
      description: Stops recording configurations of the AWS resources you have selected to
        record in your AWS account.
      responses:
        "200":
          description: Success
        "480":
          description: NoSuchConfigurationRecorderException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoSuchConfigurationRecorderException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.StopConfigurationRecorder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopConfigurationRecorderRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.TagResource:
    post:
      operationId: TagResource
      description: Associates the specified tags to a resource with the specified
        resourceArn. If existing tags on a resource are not specified in the
        request parameters, they are not changed. When a resource is deleted,
        the tags associated with that resource are deleted as well.
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.TagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=StarlingDoveService.UntagResource:
    post:
      operationId: UntagResource
      description: Deletes specified tags from a resource.
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - StarlingDoveService.UntagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UntagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://config.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Config Service multi-region endpoint
  - url: https://config.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Config Service multi-region endpoint
  - url: http://config.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Config Service endpoint for China (Beijing) and China (Ningxia)
  - url: https://config.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Config Service endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    BatchGetAggregateResourceConfigResponse:
      type: object
      properties:
        BaseConfigurationItems:
          $ref: "#/components/schemas/BaseConfigurationItems"
        UnprocessedResourceIdentifiers:
          $ref: "#/components/schemas/UnprocessedResourceIdentifierList"
    BatchGetAggregateResourceConfigRequest:
      type: object
      required:
        - ConfigurationAggregatorName
        - ResourceIdentifiers
      properties:
        ConfigurationAggregatorName:
          $ref: "#/components/schemas/ConfigurationAggregatorName"
        ResourceIdentifiers:
          $ref: "#/components/schemas/ResourceIdentifiersList"
    ValidationException: {}
    NoSuchConfigurationAggregatorException: {}
    BatchGetResourceConfigResponse:
      type: object
      properties:
        baseConfigurationItems:
          $ref: "#/components/schemas/BaseConfigurationItems"
        unprocessedResourceKeys:
          $ref: "#/components/schemas/ResourceKeys"
    BatchGetResourceConfigRequest:
      type: object
      required:
        - resourceKeys
      properties:
        resourceKeys:
          $ref: "#/components/schemas/ResourceKeys"
    NoAvailableConfigurationRecorderException: {}
    DeleteAggregationAuthorizationRequest:
      type: object
      required:
        - AuthorizedAccountId
        - AuthorizedAwsRegion
      properties:
        AuthorizedAccountId:
          $ref: "#/components/schemas/AccountId"
        AuthorizedAwsRegion:
          $ref: "#/components/schemas/AwsRegion"
    InvalidParameterValueException: {}
    DeleteConfigRuleRequest:
      type: object
      required:
        - ConfigRuleName
      properties:
        ConfigRuleName:
          $ref: "#/components/schemas/StringWithCharLimit64"
      description: <p/>
    NoSuchConfigRuleException: {}
    ResourceInUseException: {}
    DeleteConfigurationAggregatorRequest:
      type: object
      required:
        - ConfigurationAggregatorName
      properties:
        ConfigurationAggregatorName:
          $ref: "#/components/schemas/ConfigurationAggregatorName"
    DeleteConfigurationRecorderRequest:
      type: object
      required:
        - ConfigurationRecorderName
      properties:
        ConfigurationRecorderName:
          $ref: "#/components/schemas/RecorderName"
      description: The request object for the <code>DeleteConfigurationRecorder</code>
        action.
    NoSuchConfigurationRecorderException: {}
    DeleteDeliveryChannelRequest:
      type: object
      required:
        - DeliveryChannelName
      properties:
        DeliveryChannelName:
          $ref: "#/components/schemas/ChannelName"
      description: "The input for the <a>DeleteDeliveryChannel</a> action. The action
        accepts the following data, in JSON format. "
    NoSuchDeliveryChannelException: {}
    LastDeliveryChannelDeleteFailedException: {}
    DeleteEvaluationResultsResponse:
      type: object
      properties: {}
      description: The output when you delete the evaluation results for the specified AWS
        Config rule.
    DeleteEvaluationResultsRequest:
      type: object
      required:
        - ConfigRuleName
      properties:
        ConfigRuleName:
          $ref: "#/components/schemas/StringWithCharLimit64"
      description: <p/>
    DeleteOrganizationConfigRuleRequest:
      type: object
      required:
        - OrganizationConfigRuleName
      properties:
        OrganizationConfigRuleName:
          $ref: "#/components/schemas/OrganizationConfigRuleName"
    NoSuchOrganizationConfigRuleException: {}
    OrganizationAccessDeniedException: {}
    DeletePendingAggregationRequestRequest:
      type: object
      required:
        - RequesterAccountId
        - RequesterAwsRegion
      properties:
        RequesterAccountId:
          $ref: "#/components/schemas/AccountId"
        RequesterAwsRegion:
          $ref: "#/components/schemas/AwsRegion"
    DeleteRemediationConfigurationResponse:
      type: object
      properties: {}
    DeleteRemediationConfigurationRequest:
      type: object
      required:
        - ConfigRuleName
      properties:
        ConfigRuleName:
          $ref: "#/components/schemas/ConfigRuleName"
        ResourceType:
          $ref: "#/components/schemas/String"
    NoSuchRemediationConfigurationException: {}
    RemediationInProgressException: {}
    DeleteRemediationExceptionsResponse:
      type: object
      properties:
        FailedBatches:
          $ref: "#/components/schemas/FailedDeleteRemediationExceptionsBatches"
    DeleteRemediationExceptionsRequest:
      type: object
      required:
        - ConfigRuleName
        - ResourceKeys
      properties:
        ConfigRuleName:
          $ref: "#/components/schemas/ConfigRuleName"
        ResourceKeys:
          $ref: "#/components/schemas/RemediationExceptionResourceKeys"
    NoSuchRemediationExceptionException: {}
    DeleteRetentionConfigurationRequest:
      type: object
      required:
        - RetentionConfigurationName
      properties:
        RetentionConfigurationName:
          $ref: "#/components/schemas/RetentionConfigurationName"
    NoSuchRetentionConfigurationException: {}
    DeliverConfigSnapshotResponse:
      type: object
      properties:
        configSnapshotId:
          $ref: "#/components/schemas/String"
      description: The output for the <a>DeliverConfigSnapshot</a> action, in JSON format.
    DeliverConfigSnapshotRequest:
      type: object
      required:
        - deliveryChannelName
      properties:
        deliveryChannelName:
          $ref: "#/components/schemas/ChannelName"
      description: The input for the <a>DeliverConfigSnapshot</a> action.
    NoRunningConfigurationRecorderException: {}
    DescribeAggregateComplianceByConfigRulesResponse:
      type: object
      properties:
        AggregateComplianceByConfigRules:
          $ref: "#/components/schemas/AggregateComplianceByConfigRuleList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeAggregateComplianceByConfigRulesRequest:
      type: object
      required:
        - ConfigurationAggregatorName
      properties:
        ConfigurationAggregatorName:
          $ref: "#/components/schemas/ConfigurationAggregatorName"
        Filters:
          $ref: "#/components/schemas/ConfigRuleComplianceFilters"
        Limit:
          $ref: "#/components/schemas/GroupByAPILimit"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    InvalidLimitException: {}
    InvalidNextTokenException: {}
    DescribeAggregationAuthorizationsResponse:
      type: object
      properties:
        AggregationAuthorizations:
          $ref: "#/components/schemas/AggregationAuthorizationList"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeAggregationAuthorizationsRequest:
      type: object
      properties:
        Limit:
          $ref: "#/components/schemas/Limit"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeComplianceByConfigRuleResponse:
      type: object
      properties:
        ComplianceByConfigRules:
          $ref: "#/components/schemas/ComplianceByConfigRules"
        NextToken:
          $ref: "#/components/schemas/String"
      description: <p/>
    DescribeComplianceByConfigRuleRequest:
      type: object
      properties:
        ConfigRuleNames:
          $ref: "#/components/schemas/ConfigRuleNames"
        ComplianceTypes:
          $ref: "#/components/schemas/ComplianceTypes"
        NextToken:
          $ref: "#/components/schemas/String"
      description: <p/>
    DescribeComplianceByResourceResponse:
      type: object
      properties:
        ComplianceByResources:
          $ref: "#/components/schemas/ComplianceByResources"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: <p/>
    DescribeComplianceByResourceRequest:
      type: object
      properties:
        ResourceType:
          $ref: "#/components/schemas/StringWithCharLimit256"
        ResourceId:
          $ref: "#/components/schemas/BaseResourceId"
        ComplianceTypes:
          $ref: "#/components/schemas/ComplianceTypes"
        Limit:
          $ref: "#/components/schemas/Limit"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: <p/>
    DescribeConfigRuleEvaluationStatusResponse:
      type: object
      properties:
        ConfigRulesEvaluationStatus:
          $ref: "#/components/schemas/ConfigRuleEvaluationStatusList"
        NextToken:
          $ref: "#/components/schemas/String"
      description: <p/>
    DescribeConfigRuleEvaluationStatusRequest:
      type: object
      properties:
        ConfigRuleNames:
          $ref: "#/components/schemas/ConfigRuleNames"
        NextToken:
          $ref: "#/components/schemas/String"
        Limit:
          $ref: "#/components/schemas/RuleLimit"
      description: <p/>
    DescribeConfigRulesResponse:
      type: object
      properties:
        ConfigRules:
          $ref: "#/components/schemas/ConfigRules"
        NextToken:
          $ref: "#/components/schemas/String"
      description: <p/>
    DescribeConfigRulesRequest:
      type: object
      properties:
        ConfigRuleNames:
          $ref: "#/components/schemas/ConfigRuleNames"
        NextToken:
          $ref: "#/components/schemas/String"
      description: <p/>
    DescribeConfigurationAggregatorSourcesStatusResponse:
      type: object
      properties:
        AggregatedSourceStatusList:
          $ref: "#/components/schemas/AggregatedSourceStatusList"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeConfigurationAggregatorSourcesStatusRequest:
      type: object
      required:
        - ConfigurationAggregatorName
      properties:
        ConfigurationAggregatorName:
          $ref: "#/components/schemas/ConfigurationAggregatorName"
        UpdateStatus:
          $ref: "#/components/schemas/AggregatedSourceStatusTypeList"
        NextToken:
          $ref: "#/components/schemas/String"
        Limit:
          $ref: "#/components/schemas/Limit"
    DescribeConfigurationAggregatorsResponse:
      type: object
      properties:
        ConfigurationAggregators:
          $ref: "#/components/schemas/ConfigurationAggregatorList"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeConfigurationAggregatorsRequest:
      type: object
      properties:
        ConfigurationAggregatorNames:
          $ref: "#/components/schemas/ConfigurationAggregatorNameList"
        NextToken:
          $ref: "#/components/schemas/String"
        Limit:
          $ref: "#/components/schemas/Limit"
    DescribeConfigurationRecorderStatusResponse:
      type: object
      properties:
        ConfigurationRecordersStatus:
          $ref: "#/components/schemas/ConfigurationRecorderStatusList"
      description: The output for the <a>DescribeConfigurationRecorderStatus</a> action, in
        JSON format.
    DescribeConfigurationRecorderStatusRequest:
      type: object
      properties:
        ConfigurationRecorderNames:
          $ref: "#/components/schemas/ConfigurationRecorderNameList"
      description: The input for the <a>DescribeConfigurationRecorderStatus</a> action.
    DescribeConfigurationRecordersResponse:
      type: object
      properties:
        ConfigurationRecorders:
          $ref: "#/components/schemas/ConfigurationRecorderList"
      description: The output for the <a>DescribeConfigurationRecorders</a> action.
    DescribeConfigurationRecordersRequest:
      type: object
      properties:
        ConfigurationRecorderNames:
          $ref: "#/components/schemas/ConfigurationRecorderNameList"
      description: The input for the <a>DescribeConfigurationRecorders</a> action.
    DescribeDeliveryChannelStatusResponse:
      type: object
      properties:
        DeliveryChannelsStatus:
          $ref: "#/components/schemas/DeliveryChannelStatusList"
      description: The output for the <a>DescribeDeliveryChannelStatus</a> action.
    DescribeDeliveryChannelStatusRequest:
      type: object
      properties:
        DeliveryChannelNames:
          $ref: "#/components/schemas/DeliveryChannelNameList"
      description: The input for the <a>DeliveryChannelStatus</a> action.
    DescribeDeliveryChannelsResponse:
      type: object
      properties:
        DeliveryChannels:
          $ref: "#/components/schemas/DeliveryChannelList"
      description: The output for the <a>DescribeDeliveryChannels</a> action.
    DescribeDeliveryChannelsRequest:
      type: object
      properties:
        DeliveryChannelNames:
          $ref: "#/components/schemas/DeliveryChannelNameList"
      description: The input for the <a>DescribeDeliveryChannels</a> action.
    DescribeOrganizationConfigRuleStatusesResponse:
      type: object
      properties:
        OrganizationConfigRuleStatuses:
          $ref: "#/components/schemas/OrganizationConfigRuleStatuses"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeOrganizationConfigRuleStatusesRequest:
      type: object
      properties:
        OrganizationConfigRuleNames:
          $ref: "#/components/schemas/OrganizationConfigRuleNames"
        Limit:
          $ref: "#/components/schemas/CosmosPageLimit"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeOrganizationConfigRulesResponse:
      type: object
      properties:
        OrganizationConfigRules:
          $ref: "#/components/schemas/OrganizationConfigRules"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeOrganizationConfigRulesRequest:
      type: object
      properties:
        OrganizationConfigRuleNames:
          $ref: "#/components/schemas/OrganizationConfigRuleNames"
        Limit:
          $ref: "#/components/schemas/CosmosPageLimit"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribePendingAggregationRequestsResponse:
      type: object
      properties:
        PendingAggregationRequests:
          $ref: "#/components/schemas/PendingAggregationRequestList"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribePendingAggregationRequestsRequest:
      type: object
      properties:
        Limit:
          $ref: "#/components/schemas/DescribePendingAggregationRequestsLimit"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeRemediationConfigurationsResponse:
      type: object
      properties:
        RemediationConfigurations:
          $ref: "#/components/schemas/RemediationConfigurations"
    DescribeRemediationConfigurationsRequest:
      type: object
      required:
        - ConfigRuleNames
      properties:
        ConfigRuleNames:
          $ref: "#/components/schemas/ConfigRuleNames"
    DescribeRemediationExceptionsResponse:
      type: object
      properties:
        RemediationExceptions:
          $ref: "#/components/schemas/RemediationExceptions"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeRemediationExceptionsRequest:
      type: object
      required:
        - ConfigRuleName
      properties:
        ConfigRuleName:
          $ref: "#/components/schemas/ConfigRuleName"
        ResourceKeys:
          $ref: "#/components/schemas/RemediationExceptionResourceKeys"
        Limit:
          $ref: "#/components/schemas/Limit"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeRemediationExecutionStatusResponse:
      type: object
      properties:
        RemediationExecutionStatuses:
          $ref: "#/components/schemas/RemediationExecutionStatuses"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeRemediationExecutionStatusRequest:
      type: object
      required:
        - ConfigRuleName
      properties:
        ConfigRuleName:
          $ref: "#/components/schemas/ConfigRuleName"
        ResourceKeys:
          $ref: "#/components/schemas/ResourceKeys"
        Limit:
          $ref: "#/components/schemas/Limit"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeRetentionConfigurationsResponse:
      type: object
      properties:
        RetentionConfigurations:
          $ref: "#/components/schemas/RetentionConfigurationList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    DescribeRetentionConfigurationsRequest:
      type: object
      properties:
        RetentionConfigurationNames:
          $ref: "#/components/schemas/RetentionConfigurationNameList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    GetAggregateComplianceDetailsByConfigRuleResponse:
      type: object
      properties:
        AggregateEvaluationResults:
          $ref: "#/components/schemas/AggregateEvaluationResultList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    GetAggregateComplianceDetailsByConfigRuleRequest:
      type: object
      required:
        - ConfigurationAggregatorName
        - ConfigRuleName
        - AccountId
        - AwsRegion
      properties:
        ConfigurationAggregatorName:
          $ref: "#/components/schemas/ConfigurationAggregatorName"
        ConfigRuleName:
          $ref: "#/components/schemas/ConfigRuleName"
        AccountId:
          $ref: "#/components/schemas/AccountId"
        AwsRegion:
          $ref: "#/components/schemas/AwsRegion"
        ComplianceType:
          $ref: "#/components/schemas/ComplianceType"
        Limit:
          $ref: "#/components/schemas/Limit"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    GetAggregateConfigRuleComplianceSummaryResponse:
      type: object
      properties:
        GroupByKey:
          $ref: "#/components/schemas/StringWithCharLimit256"
        AggregateComplianceCounts:
          $ref: "#/components/schemas/AggregateComplianceCountList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    GetAggregateConfigRuleComplianceSummaryRequest:
      type: object
      required:
        - ConfigurationAggregatorName
      properties:
        ConfigurationAggregatorName:
          $ref: "#/components/schemas/ConfigurationAggregatorName"
        Filters:
          $ref: "#/components/schemas/ConfigRuleComplianceSummaryFilters"
        GroupByKey:
          $ref: "#/components/schemas/ConfigRuleComplianceSummaryGroupKey"
        Limit:
          $ref: "#/components/schemas/GroupByAPILimit"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    GetAggregateDiscoveredResourceCountsResponse:
      type: object
      required:
        - TotalDiscoveredResources
      properties:
        TotalDiscoveredResources:
          $ref: "#/components/schemas/Long"
        GroupByKey:
          $ref: "#/components/schemas/StringWithCharLimit256"
        GroupedResourceCounts:
          $ref: "#/components/schemas/GroupedResourceCountList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    GetAggregateDiscoveredResourceCountsRequest:
      type: object
      required:
        - ConfigurationAggregatorName
      properties:
        ConfigurationAggregatorName:
          $ref: "#/components/schemas/ConfigurationAggregatorName"
        Filters:
          $ref: "#/components/schemas/ResourceCountFilters"
        GroupByKey:
          $ref: "#/components/schemas/ResourceCountGroupKey"
        Limit:
          $ref: "#/components/schemas/GroupByAPILimit"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    GetAggregateResourceConfigResponse:
      type: object
      properties:
        ConfigurationItem:
          $ref: "#/components/schemas/ConfigurationItem"
    GetAggregateResourceConfigRequest:
      type: object
      required:
        - ConfigurationAggregatorName
        - ResourceIdentifier
      properties:
        ConfigurationAggregatorName:
          $ref: "#/components/schemas/ConfigurationAggregatorName"
        ResourceIdentifier:
          $ref: "#/components/schemas/AggregateResourceIdentifier"
    OversizedConfigurationItemException: {}
    ResourceNotDiscoveredException: {}
    GetComplianceDetailsByConfigRuleResponse:
      type: object
      properties:
        EvaluationResults:
          $ref: "#/components/schemas/EvaluationResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: <p/>
    GetComplianceDetailsByConfigRuleRequest:
      type: object
      required:
        - ConfigRuleName
      properties:
        ConfigRuleName:
          $ref: "#/components/schemas/StringWithCharLimit64"
        ComplianceTypes:
          $ref: "#/components/schemas/ComplianceTypes"
        Limit:
          $ref: "#/components/schemas/Limit"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: <p/>
    GetComplianceDetailsByResourceResponse:
      type: object
      properties:
        EvaluationResults:
          $ref: "#/components/schemas/EvaluationResults"
        NextToken:
          $ref: "#/components/schemas/String"
      description: <p/>
    GetComplianceDetailsByResourceRequest:
      type: object
      required:
        - ResourceType
        - ResourceId
      properties:
        ResourceType:
          $ref: "#/components/schemas/StringWithCharLimit256"
        ResourceId:
          $ref: "#/components/schemas/BaseResourceId"
        ComplianceTypes:
          $ref: "#/components/schemas/ComplianceTypes"
        NextToken:
          $ref: "#/components/schemas/String"
      description: <p/>
    GetComplianceSummaryByConfigRuleResponse:
      type: object
      properties:
        ComplianceSummary:
          $ref: "#/components/schemas/ComplianceSummary"
      description: <p/>
    GetComplianceSummaryByResourceTypeResponse:
      type: object
      properties:
        ComplianceSummariesByResourceType:
          $ref: "#/components/schemas/ComplianceSummariesByResourceType"
      description: <p/>
    GetComplianceSummaryByResourceTypeRequest:
      type: object
      properties:
        ResourceTypes:
          $ref: "#/components/schemas/ResourceTypes"
      description: <p/>
    GetDiscoveredResourceCountsResponse:
      type: object
      properties:
        totalDiscoveredResources:
          $ref: "#/components/schemas/Long"
        resourceCounts:
          $ref: "#/components/schemas/ResourceCounts"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    GetDiscoveredResourceCountsRequest:
      type: object
      properties:
        resourceTypes:
          $ref: "#/components/schemas/ResourceTypes"
        limit:
          $ref: "#/components/schemas/Limit"
        nextToken:
          $ref: "#/components/schemas/NextToken"
    GetOrganizationConfigRuleDetailedStatusResponse:
      type: object
      properties:
        OrganizationConfigRuleDetailedStatus:
          $ref: "#/components/schemas/OrganizationConfigRuleDetailedStatus"
        NextToken:
          $ref: "#/components/schemas/String"
    GetOrganizationConfigRuleDetailedStatusRequest:
      type: object
      required:
        - OrganizationConfigRuleName
      properties:
        OrganizationConfigRuleName:
          $ref: "#/components/schemas/OrganizationConfigRuleName"
        Filters:
          $ref: "#/components/schemas/StatusDetailFilters"
        Limit:
          $ref: "#/components/schemas/CosmosPageLimit"
        NextToken:
          $ref: "#/components/schemas/String"
    GetResourceConfigHistoryResponse:
      type: object
      properties:
        configurationItems:
          $ref: "#/components/schemas/ConfigurationItemList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: The output for the <a>GetResourceConfigHistory</a> action.
    GetResourceConfigHistoryRequest:
      type: object
      required:
        - resourceType
        - resourceId
      properties:
        resourceType:
          $ref: "#/components/schemas/ResourceType"
        resourceId:
          $ref: "#/components/schemas/ResourceId"
        laterTime:
          $ref: "#/components/schemas/LaterTime"
        earlierTime:
          $ref: "#/components/schemas/EarlierTime"
        chronologicalOrder:
          $ref: "#/components/schemas/ChronologicalOrder"
        limit:
          $ref: "#/components/schemas/Limit"
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: The input for the <a>GetResourceConfigHistory</a> action.
    InvalidTimeRangeException: {}
    ListAggregateDiscoveredResourcesResponse:
      type: object
      properties:
        ResourceIdentifiers:
          $ref: "#/components/schemas/DiscoveredResourceIdentifierList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListAggregateDiscoveredResourcesRequest:
      type: object
      required:
        - ConfigurationAggregatorName
        - ResourceType
      properties:
        ConfigurationAggregatorName:
          $ref: "#/components/schemas/ConfigurationAggregatorName"
        ResourceType:
          $ref: "#/components/schemas/ResourceType"
        Filters:
          $ref: "#/components/schemas/ResourceFilters"
        Limit:
          $ref: "#/components/schemas/Limit"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListDiscoveredResourcesResponse:
      type: object
      properties:
        resourceIdentifiers:
          $ref: "#/components/schemas/ResourceIdentifierList"
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: <p/>
    ListDiscoveredResourcesRequest:
      type: object
      required:
        - resourceType
      properties:
        resourceType:
          $ref: "#/components/schemas/ResourceType"
        resourceIds:
          $ref: "#/components/schemas/ResourceIdList"
        resourceName:
          $ref: "#/components/schemas/ResourceName"
        limit:
          $ref: "#/components/schemas/Limit"
        includeDeletedResources:
          $ref: "#/components/schemas/Boolean"
        nextToken:
          $ref: "#/components/schemas/NextToken"
      description: <p/>
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: "#/components/schemas/TagList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceArn
      properties:
        ResourceArn:
          $ref: "#/components/schemas/AmazonResourceName"
        Limit:
          $ref: "#/components/schemas/Limit"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ResourceNotFoundException: {}
    PutAggregationAuthorizationResponse:
      type: object
      properties:
        AggregationAuthorization:
          $ref: "#/components/schemas/AggregationAuthorization"
    PutAggregationAuthorizationRequest:
      type: object
      required:
        - AuthorizedAccountId
        - AuthorizedAwsRegion
      properties:
        AuthorizedAccountId:
          $ref: "#/components/schemas/AccountId"
        AuthorizedAwsRegion:
          $ref: "#/components/schemas/AwsRegion"
        Tags:
          $ref: "#/components/schemas/TagsList"
    PutConfigRuleRequest:
      type: object
      required:
        - ConfigRule
      properties:
        ConfigRule:
          $ref: "#/components/schemas/ConfigRule"
        Tags:
          $ref: "#/components/schemas/TagsList"
    MaxNumberOfConfigRulesExceededException: {}
    InsufficientPermissionsException: {}
    PutConfigurationAggregatorResponse:
      type: object
      properties:
        ConfigurationAggregator:
          $ref: "#/components/schemas/ConfigurationAggregator"
    PutConfigurationAggregatorRequest:
      type: object
      required:
        - ConfigurationAggregatorName
      properties:
        ConfigurationAggregatorName:
          $ref: "#/components/schemas/ConfigurationAggregatorName"
        AccountAggregationSources:
          $ref: "#/components/schemas/AccountAggregationSourceList"
        OrganizationAggregationSource:
          $ref: "#/components/schemas/OrganizationAggregationSource"
        Tags:
          $ref: "#/components/schemas/TagsList"
    LimitExceededException: {}
    InvalidRoleException: {}
    NoAvailableOrganizationException: {}
    OrganizationAllFeaturesNotEnabledException: {}
    PutConfigurationRecorderRequest:
      type: object
      required:
        - ConfigurationRecorder
      properties:
        ConfigurationRecorder:
          $ref: "#/components/schemas/ConfigurationRecorder"
      description: The input for the <a>PutConfigurationRecorder</a> action.
    MaxNumberOfConfigurationRecordersExceededException: {}
    InvalidConfigurationRecorderNameException: {}
    InvalidRecordingGroupException: {}
    PutDeliveryChannelRequest:
      type: object
      required:
        - DeliveryChannel
      properties:
        DeliveryChannel:
          $ref: "#/components/schemas/DeliveryChannel"
      description: The input for the <a>PutDeliveryChannel</a> action.
    MaxNumberOfDeliveryChannelsExceededException: {}
    InvalidDeliveryChannelNameException: {}
    NoSuchBucketException: {}
    InvalidS3KeyPrefixException: {}
    InvalidSNSTopicARNException: {}
    InsufficientDeliveryPolicyException: {}
    PutEvaluationsResponse:
      type: object
      properties:
        FailedEvaluations:
          $ref: "#/components/schemas/Evaluations"
      description: <p/>
    PutEvaluationsRequest:
      type: object
      required:
        - ResultToken
      properties:
        Evaluations:
          $ref: "#/components/schemas/Evaluations"
        ResultToken:
          $ref: "#/components/schemas/String"
        TestMode:
          $ref: "#/components/schemas/Boolean"
      description: <p/>
    InvalidResultTokenException: {}
    PutOrganizationConfigRuleResponse:
      type: object
      properties:
        OrganizationConfigRuleArn:
          $ref: "#/components/schemas/StringWithCharLimit256"
    PutOrganizationConfigRuleRequest:
      type: object
      required:
        - OrganizationConfigRuleName
      properties:
        OrganizationConfigRuleName:
          $ref: "#/components/schemas/OrganizationConfigRuleName"
        OrganizationManagedRuleMetadata:
          $ref: "#/components/schemas/OrganizationManagedRuleMetadata"
        OrganizationCustomRuleMetadata:
          $ref: "#/components/schemas/OrganizationCustomRuleMetadata"
        ExcludedAccounts:
          $ref: "#/components/schemas/ExcludedAccounts"
    MaxNumberOfOrganizationConfigRulesExceededException: {}
    PutRemediationConfigurationsResponse:
      type: object
      properties:
        FailedBatches:
          $ref: "#/components/schemas/FailedRemediationBatches"
    PutRemediationConfigurationsRequest:
      type: object
      required:
        - RemediationConfigurations
      properties:
        RemediationConfigurations:
          $ref: "#/components/schemas/RemediationConfigurations"
    PutRemediationExceptionsResponse:
      type: object
      properties:
        FailedBatches:
          $ref: "#/components/schemas/FailedRemediationExceptionBatches"
    PutRemediationExceptionsRequest:
      type: object
      required:
        - ConfigRuleName
        - ResourceKeys
      properties:
        ConfigRuleName:
          $ref: "#/components/schemas/ConfigRuleName"
        ResourceKeys:
          $ref: "#/components/schemas/RemediationExceptionResourceKeys"
        Message:
          $ref: "#/components/schemas/StringWithCharLimit1024"
        ExpirationTime:
          $ref: "#/components/schemas/Date"
    PutRetentionConfigurationResponse:
      type: object
      properties:
        RetentionConfiguration:
          $ref: "#/components/schemas/RetentionConfiguration"
    PutRetentionConfigurationRequest:
      type: object
      required:
        - RetentionPeriodInDays
      properties:
        RetentionPeriodInDays:
          $ref: "#/components/schemas/RetentionPeriodInDays"
    MaxNumberOfRetentionConfigurationsExceededException: {}
    SelectResourceConfigResponse:
      type: object
      properties:
        Results:
          $ref: "#/components/schemas/Results"
        QueryInfo:
          $ref: "#/components/schemas/QueryInfo"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    SelectResourceConfigRequest:
      type: object
      required:
        - Expression
      properties:
        Expression:
          $ref: "#/components/schemas/Expression"
        Limit:
          $ref: "#/components/schemas/Limit"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    InvalidExpressionException: {}
    StartConfigRulesEvaluationResponse:
      type: object
      properties: {}
      description: The output when you start the evaluation for the specified AWS Config
        rule.
    StartConfigRulesEvaluationRequest:
      type: object
      properties:
        ConfigRuleNames:
          $ref: "#/components/schemas/ReevaluateConfigRuleNames"
      description: <p/>
    StartConfigurationRecorderRequest:
      type: object
      required:
        - ConfigurationRecorderName
      properties:
        ConfigurationRecorderName:
          $ref: "#/components/schemas/RecorderName"
      description: The input for the <a>StartConfigurationRecorder</a> action.
    NoAvailableDeliveryChannelException: {}
    StartRemediationExecutionResponse:
      type: object
      properties:
        FailureMessage:
          $ref: "#/components/schemas/String"
        FailedItems:
          $ref: "#/components/schemas/ResourceKeys"
    StartRemediationExecutionRequest:
      type: object
      required:
        - ConfigRuleName
        - ResourceKeys
      properties:
        ConfigRuleName:
          $ref: "#/components/schemas/ConfigRuleName"
        ResourceKeys:
          $ref: "#/components/schemas/ResourceKeys"
    StopConfigurationRecorderRequest:
      type: object
      required:
        - ConfigurationRecorderName
      properties:
        ConfigurationRecorderName:
          $ref: "#/components/schemas/RecorderName"
      description: The input for the <a>StopConfigurationRecorder</a> action.
    TagResourceRequest:
      type: object
      required:
        - ResourceArn
        - Tags
      properties:
        ResourceArn:
          $ref: "#/components/schemas/AmazonResourceName"
        Tags:
          $ref: "#/components/schemas/TagList"
    TooManyTagsException: {}
    UntagResourceRequest:
      type: object
      required:
        - ResourceArn
        - TagKeys
      properties:
        ResourceArn:
          $ref: "#/components/schemas/AmazonResourceName"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
    ARN:
      type: string
    AccountAggregationSourceAccountList:
      type: array
      items:
        $ref: "#/components/schemas/AccountId"
      minItems: 1
    Boolean:
      type: boolean
    AggregatorRegionList:
      type: array
      items:
        $ref: "#/components/schemas/String"
      minItems: 1
    AccountAggregationSource:
      type: object
      required:
        - AccountIds
      properties:
        AccountIds:
          $ref: "#/components/schemas/AccountAggregationSourceAccountList"
        AllAwsRegions:
          $ref: "#/components/schemas/Boolean"
        AwsRegions:
          $ref: "#/components/schemas/AggregatorRegionList"
      description: A collection of accounts and regions.
    AccountId:
      type: string
      pattern: \d{12}
    AccountAggregationSourceList:
      type: array
      items:
        $ref: "#/components/schemas/AccountAggregationSource"
      minItems: 0
      maxItems: 1
    ConfigRuleName:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 128
    Compliance:
      type: object
      properties:
        ComplianceType:
          $ref: "#/components/schemas/ComplianceType"
        ComplianceContributorCount:
          $ref: "#/components/schemas/ComplianceContributorCount"
      description: Indicates whether an AWS resource or AWS Config rule is compliant and
        provides the number of contributors that affect the compliance.
    AwsRegion:
      type: string
      minLength: 1
      maxLength: 64
    AggregateComplianceByConfigRule:
      type: object
      properties:
        ConfigRuleName:
          $ref: "#/components/schemas/ConfigRuleName"
        Compliance:
          $ref: "#/components/schemas/Compliance"
        AccountId:
          $ref: "#/components/schemas/AccountId"
        AwsRegion:
          $ref: "#/components/schemas/AwsRegion"
      description: <p>Indicates whether an AWS Config rule is compliant based on account
        ID, region, compliance, and rule name.</p> <p>A rule is compliant if all
        of the resources that the rule evaluated comply with it. It is
        noncompliant if any of these resources do not comply.</p>
    AggregateComplianceByConfigRuleList:
      type: array
      items:
        $ref: "#/components/schemas/AggregateComplianceByConfigRule"
    StringWithCharLimit256:
      type: string
      minLength: 1
      maxLength: 256
    ComplianceSummary:
      type: object
      properties:
        CompliantResourceCount:
          $ref: "#/components/schemas/ComplianceContributorCount"
        NonCompliantResourceCount:
          $ref: "#/components/schemas/ComplianceContributorCount"
        ComplianceSummaryTimestamp:
          $ref: "#/components/schemas/Date"
      description: The number of AWS Config rules or AWS resources that are compliant and
        noncompliant.
    AggregateComplianceCount:
      type: object
      properties:
        GroupName:
          $ref: "#/components/schemas/StringWithCharLimit256"
        ComplianceSummary:
          $ref: "#/components/schemas/ComplianceSummary"
      description: Returns the number of compliant and noncompliant rules for one or more
        accounts and regions in an aggregator.
    AggregateComplianceCountList:
      type: array
      items:
        $ref: "#/components/schemas/AggregateComplianceCount"
    EvaluationResultIdentifier:
      type: object
      properties:
        EvaluationResultQualifier:
          $ref: "#/components/schemas/EvaluationResultQualifier"
        OrderingTimestamp:
          $ref: "#/components/schemas/Date"
      description: Uniquely identifies an evaluation result.
    ComplianceType:
      type: string
      enum:
        - COMPLIANT
        - NON_COMPLIANT
        - NOT_APPLICABLE
        - INSUFFICIENT_DATA
    Date:
      type: string
      format: date-time
    AggregateEvaluationResult:
      type: object
      properties:
        EvaluationResultIdentifier:
          $ref: "#/components/schemas/EvaluationResultIdentifier"
        ComplianceType:
          $ref: "#/components/schemas/ComplianceType"
        ResultRecordedTime:
          $ref: "#/components/schemas/Date"
        ConfigRuleInvokedTime:
          $ref: "#/components/schemas/Date"
        Annotation:
          $ref: "#/components/schemas/StringWithCharLimit256"
        AccountId:
          $ref: "#/components/schemas/AccountId"
        AwsRegion:
          $ref: "#/components/schemas/AwsRegion"
      description: "The details of an AWS Config evaluation for an account ID and region in
        an aggregator. Provides the AWS resource that was evaluated, the
        compliance of the resource, related time stamps, and supplementary
        information. "
    AggregateEvaluationResultList:
      type: array
      items:
        $ref: "#/components/schemas/AggregateEvaluationResult"
    ResourceId:
      type: string
      minLength: 1
      maxLength: 768
    ResourceType:
      type: string
      enum:
        - AWS::EC2::CustomerGateway
        - AWS::EC2::EIP
        - AWS::EC2::Host
        - AWS::EC2::Instance
        - AWS::EC2::InternetGateway
        - AWS::EC2::NetworkAcl
        - AWS::EC2::NetworkInterface
        - AWS::EC2::RouteTable
        - AWS::EC2::SecurityGroup
        - AWS::EC2::Subnet
        - AWS::CloudTrail::Trail
        - AWS::EC2::Volume
        - AWS::EC2::VPC
        - AWS::EC2::VPNConnection
        - AWS::EC2::VPNGateway
        - AWS::EC2::RegisteredHAInstance
        - AWS::EC2::NatGateway
        - AWS::EC2::EgressOnlyInternetGateway
        - AWS::EC2::VPCEndpoint
        - AWS::EC2::VPCEndpointService
        - AWS::EC2::FlowLog
        - AWS::EC2::VPCPeeringConnection
        - AWS::IAM::Group
        - AWS::IAM::Policy
        - AWS::IAM::Role
        - AWS::IAM::User
        - AWS::ElasticLoadBalancingV2::LoadBalancer
        - AWS::ACM::Certificate
        - AWS::RDS::DBInstance
        - AWS::RDS::DBParameterGroup
        - AWS::RDS::DBOptionGroup
        - AWS::RDS::DBSubnetGroup
        - AWS::RDS::DBSecurityGroup
        - AWS::RDS::DBSnapshot
        - AWS::RDS::DBCluster
        - AWS::RDS::DBClusterParameterGroup
        - AWS::RDS::DBClusterSnapshot
        - AWS::RDS::EventSubscription
        - AWS::S3::Bucket
        - AWS::S3::AccountPublicAccessBlock
        - AWS::Redshift::Cluster
        - AWS::Redshift::ClusterSnapshot
        - AWS::Redshift::ClusterParameterGroup
        - AWS::Redshift::ClusterSecurityGroup
        - AWS::Redshift::ClusterSubnetGroup
        - AWS::Redshift::EventSubscription
        - AWS::SSM::ManagedInstanceInventory
        - AWS::CloudWatch::Alarm
        - AWS::CloudFormation::Stack
        - AWS::ElasticLoadBalancing::LoadBalancer
        - AWS::AutoScaling::AutoScalingGroup
        - AWS::AutoScaling::LaunchConfiguration
        - AWS::AutoScaling::ScalingPolicy
        - AWS::AutoScaling::ScheduledAction
        - AWS::DynamoDB::Table
        - AWS::CodeBuild::Project
        - AWS::WAF::RateBasedRule
        - AWS::WAF::Rule
        - AWS::WAF::RuleGroup
        - AWS::WAF::WebACL
        - AWS::WAFRegional::RateBasedRule
        - AWS::WAFRegional::Rule
        - AWS::WAFRegional::RuleGroup
        - AWS::WAFRegional::WebACL
        - AWS::CloudFront::Distribution
        - AWS::CloudFront::StreamingDistribution
        - AWS::Lambda::Alias
        - AWS::Lambda::Function
        - AWS::ElasticBeanstalk::Application
        - AWS::ElasticBeanstalk::ApplicationVersion
        - AWS::ElasticBeanstalk::Environment
        - AWS::MobileHub::Project
        - AWS::XRay::EncryptionConfig
        - AWS::SSM::AssociationCompliance
        - AWS::SSM::PatchCompliance
        - AWS::Shield::Protection
        - AWS::ShieldRegional::Protection
        - AWS::Config::ResourceCompliance
        - AWS::LicenseManager::LicenseConfiguration
        - AWS::ApiGateway::DomainName
        - AWS::ApiGateway::Method
        - AWS::ApiGateway::Stage
        - AWS::ApiGateway::RestApi
        - AWS::ApiGatewayV2::DomainName
        - AWS::ApiGatewayV2::Stage
        - AWS::ApiGatewayV2::Api
        - AWS::CodePipeline::Pipeline
        - AWS::ServiceCatalog::CloudFormationProvisionedProduct
        - AWS::ServiceCatalog::CloudFormationProduct
        - AWS::ServiceCatalog::Portfolio
    ResourceName:
      type: string
    AggregateResourceIdentifier:
      type: object
      required:
        - SourceAccountId
        - SourceRegion
        - ResourceId
        - ResourceType
      properties:
        SourceAccountId:
          $ref: "#/components/schemas/AccountId"
        SourceRegion:
          $ref: "#/components/schemas/AwsRegion"
        ResourceId:
          $ref: "#/components/schemas/ResourceId"
        ResourceType:
          $ref: "#/components/schemas/ResourceType"
        ResourceName:
          $ref: "#/components/schemas/ResourceName"
      description: The details that identify a resource that is collected by AWS Config
        aggregator, including the resource type, ID, (if available) the custom
        resource name, the source account, and source region.
    String:
      type: string
    AggregatedSourceType:
      type: string
      enum:
        - ACCOUNT
        - ORGANIZATION
    AggregatedSourceStatusType:
      type: string
      enum:
        - FAILED
        - SUCCEEDED
        - OUTDATED
    AggregatedSourceStatus:
      type: object
      properties:
        SourceId:
          $ref: "#/components/schemas/String"
        SourceType:
          $ref: "#/components/schemas/AggregatedSourceType"
        AwsRegion:
          $ref: "#/components/schemas/AwsRegion"
        LastUpdateStatus:
          $ref: "#/components/schemas/AggregatedSourceStatusType"
        LastUpdateTime:
          $ref: "#/components/schemas/Date"
        LastErrorCode:
          $ref: "#/components/schemas/String"
        LastErrorMessage:
          $ref: "#/components/schemas/String"
      description: The current sync status between the source and the aggregator account.
    AggregatedSourceStatusList:
      type: array
      items:
        $ref: "#/components/schemas/AggregatedSourceStatus"
    AggregatedSourceStatusTypeList:
      type: array
      items:
        $ref: "#/components/schemas/AggregatedSourceStatusType"
      minItems: 1
    AggregationAuthorization:
      type: object
      properties:
        AggregationAuthorizationArn:
          $ref: "#/components/schemas/String"
        AuthorizedAccountId:
          $ref: "#/components/schemas/AccountId"
        AuthorizedAwsRegion:
          $ref: "#/components/schemas/AwsRegion"
        CreationTime:
          $ref: "#/components/schemas/Date"
      description: An object that represents the authorizations granted to aggregator
        accounts and regions.
    AggregationAuthorizationList:
      type: array
      items:
        $ref: "#/components/schemas/AggregationAuthorization"
    AllSupported:
      type: boolean
    AmazonResourceName:
      type: string
      minLength: 1
      maxLength: 256
    AutoRemediationAttemptSeconds:
      type: integer
      minimum: 1
      maximum: 2678000
    AutoRemediationAttempts:
      type: integer
      minimum: 1
      maximum: 25
    AvailabilityZone:
      type: string
    Version:
      type: string
    ConfigurationItemCaptureTime:
      type: string
      format: date-time
    ConfigurationItemStatus:
      type: string
      enum:
        - OK
        - ResourceDiscovered
        - ResourceNotRecorded
        - ResourceDeleted
        - ResourceDeletedNotRecorded
    ConfigurationStateId:
      type: string
    ResourceCreationTime:
      type: string
      format: date-time
    Configuration:
      type: string
    SupplementaryConfiguration:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/SupplementaryConfigurationValue"
    BaseConfigurationItem:
      type: object
      properties:
        version:
          $ref: "#/components/schemas/Version"
        accountId:
          $ref: "#/components/schemas/AccountId"
        configurationItemCaptureTime:
          $ref: "#/components/schemas/ConfigurationItemCaptureTime"
        configurationItemStatus:
          $ref: "#/components/schemas/ConfigurationItemStatus"
        configurationStateId:
          $ref: "#/components/schemas/ConfigurationStateId"
        arn:
          $ref: "#/components/schemas/ARN"
        resourceType:
          $ref: "#/components/schemas/ResourceType"
        resourceId:
          $ref: "#/components/schemas/ResourceId"
        resourceName:
          $ref: "#/components/schemas/ResourceName"
        awsRegion:
          $ref: "#/components/schemas/AwsRegion"
        availabilityZone:
          $ref: "#/components/schemas/AvailabilityZone"
        resourceCreationTime:
          $ref: "#/components/schemas/ResourceCreationTime"
        configuration:
          $ref: "#/components/schemas/Configuration"
        supplementaryConfiguration:
          $ref: "#/components/schemas/SupplementaryConfiguration"
      description: The detailed configuration of a specified resource.
    BaseConfigurationItems:
      type: array
      items:
        $ref: "#/components/schemas/BaseConfigurationItem"
    BaseResourceId:
      type: string
      minLength: 1
      maxLength: 768
    ConfigurationAggregatorName:
      type: string
      pattern: "[\\w\\-]+"
      minLength: 1
      maxLength: 256
    ResourceIdentifiersList:
      type: array
      items:
        $ref: "#/components/schemas/AggregateResourceIdentifier"
      minItems: 1
      maxItems: 100
    UnprocessedResourceIdentifierList:
      type: array
      items:
        $ref: "#/components/schemas/AggregateResourceIdentifier"
    ResourceKeys:
      type: array
      items:
        $ref: "#/components/schemas/ResourceKey"
      minItems: 1
      maxItems: 100
    ChannelName:
      type: string
      minLength: 1
      maxLength: 256
    ChronologicalOrder:
      type: string
      enum:
        - Reverse
        - Forward
    ComplianceContributorCount:
      type: object
      properties:
        CappedCount:
          $ref: "#/components/schemas/Integer"
        CapExceeded:
          $ref: "#/components/schemas/Boolean"
      description: The number of AWS resources or AWS Config rules responsible for the
        current compliance of the item, up to a maximum number.
    StringWithCharLimit64:
      type: string
      minLength: 1
      maxLength: 64
    ComplianceByConfigRule:
      type: object
      properties:
        ConfigRuleName:
          $ref: "#/components/schemas/StringWithCharLimit64"
        Compliance:
          $ref: "#/components/schemas/Compliance"
      description: Indicates whether an AWS Config rule is compliant. A rule is compliant
        if all of the resources that the rule evaluated comply with it. A rule
        is noncompliant if any of these resources do not comply.
    ComplianceByConfigRules:
      type: array
      items:
        $ref: "#/components/schemas/ComplianceByConfigRule"
    ComplianceByResource:
      type: object
      properties:
        ResourceType:
          $ref: "#/components/schemas/StringWithCharLimit256"
        ResourceId:
          $ref: "#/components/schemas/BaseResourceId"
        Compliance:
          $ref: "#/components/schemas/Compliance"
      description: Indicates whether an AWS resource that is evaluated according to one or
        more AWS Config rules is compliant. A resource is compliant if it
        complies with all of the rules that evaluate it. A resource is
        noncompliant if it does not comply with one or more of these rules.
    ComplianceByResources:
      type: array
      items:
        $ref: "#/components/schemas/ComplianceByResource"
    Integer:
      type: integer
    ComplianceResourceTypes:
      type: array
      items:
        $ref: "#/components/schemas/StringWithCharLimit256"
      minItems: 0
      maxItems: 100
    ComplianceSummaryByResourceType:
      type: object
      properties:
        ResourceType:
          $ref: "#/components/schemas/StringWithCharLimit256"
        ComplianceSummary:
          $ref: "#/components/schemas/ComplianceSummary"
      description: The number of AWS resources of a specific type that are compliant or
        noncompliant, up to a maximum of 100 for each.
    ComplianceSummariesByResourceType:
      type: array
      items:
        $ref: "#/components/schemas/ComplianceSummaryByResourceType"
    ComplianceTypes:
      type: array
      items:
        $ref: "#/components/schemas/ComplianceType"
      minItems: 0
      maxItems: 3
    DeliveryStatus:
      type: string
      enum:
        - Success
        - Failure
        - Not_Applicable
    ConfigExportDeliveryInfo:
      type: object
      properties:
        lastStatus:
          $ref: "#/components/schemas/DeliveryStatus"
        lastErrorCode:
          $ref: "#/components/schemas/String"
        lastErrorMessage:
          $ref: "#/components/schemas/String"
        lastAttemptTime:
          $ref: "#/components/schemas/Date"
        lastSuccessfulTime:
          $ref: "#/components/schemas/Date"
        nextDeliveryTime:
          $ref: "#/components/schemas/Date"
      description: Provides status of the delivery of the snapshot or the configuration
        history to the specified Amazon S3 bucket. Also provides the status of
        notifications about the Amazon S3 delivery to the specified Amazon SNS
        topic.
    EmptiableStringWithCharLimit256:
      type: string
      minLength: 0
      maxLength: 256
    Scope:
      type: object
      properties:
        ComplianceResourceTypes:
          $ref: "#/components/schemas/ComplianceResourceTypes"
        TagKey:
          $ref: "#/components/schemas/StringWithCharLimit128"
        TagValue:
          $ref: "#/components/schemas/StringWithCharLimit256"
        ComplianceResourceId:
          $ref: "#/components/schemas/BaseResourceId"
      description: Defines which resources trigger an evaluation for an AWS Config rule.
        The scope can include one or more resource types, a combination of a tag
        key and value, or a combination of one resource type and one resource
        ID. Specify a scope to constrain which resources trigger an evaluation
        for a rule. Otherwise, evaluations for the rule are triggered when any
        resource in your recording group changes in configuration.
    Source:
      type: object
      required:
        - Owner
        - SourceIdentifier
      properties:
        Owner:
          $ref: "#/components/schemas/Owner"
        SourceIdentifier:
          $ref: "#/components/schemas/StringWithCharLimit256"
        SourceDetails:
          $ref: "#/components/schemas/SourceDetails"
      description: Provides the AWS Config rule owner (AWS or customer), the rule
        identifier, and the events that trigger the evaluation of your AWS
        resources.
    StringWithCharLimit1024:
      type: string
      minLength: 1
      maxLength: 1024
    MaximumExecutionFrequency:
      type: string
      enum:
        - One_Hour
        - Three_Hours
        - Six_Hours
        - Twelve_Hours
        - TwentyFour_Hours
    ConfigRuleState:
      type: string
      enum:
        - ACTIVE
        - DELETING
        - DELETING_RESULTS
        - EVALUATING
    ConfigRule:
      type: object
      required:
        - Source
      properties:
        ConfigRuleName:
          $ref: "#/components/schemas/StringWithCharLimit64"
        ConfigRuleArn:
          $ref: "#/components/schemas/String"
        ConfigRuleId:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/EmptiableStringWithCharLimit256"
        Scope:
          $ref: "#/components/schemas/Scope"
        Source:
          $ref: "#/components/schemas/Source"
        InputParameters:
          $ref: "#/components/schemas/StringWithCharLimit1024"
        MaximumExecutionFrequency:
          $ref: "#/components/schemas/MaximumExecutionFrequency"
        ConfigRuleState:
          $ref: "#/components/schemas/ConfigRuleState"
        CreatedBy:
          $ref: "#/components/schemas/StringWithCharLimit256"
      description: <p>An AWS Config rule represents an AWS Lambda function that you create
        for a custom rule or a predefined function for an AWS managed rule. The
        function evaluates configuration items to assess whether your AWS
        resources comply with your desired configurations. This function can run
        when AWS Config detects a configuration change to an AWS resource and at
        a periodic frequency that you choose (for example, every 24 hours).</p>
        <note> <p>You can use the AWS CLI and AWS SDKs if you want to create a
        rule that triggers evaluations for your resources when AWS Config
        delivers the configuration snapshot. For more information, see
        <a>ConfigSnapshotDeliveryProperties</a>.</p> </note> <p>For more
        information about developing and using AWS Config rules, see <a
        href="https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config.html">Evaluating
        AWS Resource Configurations with AWS Config</a> in the <i>AWS Config
        Developer Guide</i>.</p>
    ConfigRuleComplianceFilters:
      type: object
      properties:
        ConfigRuleName:
          $ref: "#/components/schemas/ConfigRuleName"
        ComplianceType:
          $ref: "#/components/schemas/ComplianceType"
        AccountId:
          $ref: "#/components/schemas/AccountId"
        AwsRegion:
          $ref: "#/components/schemas/AwsRegion"
      description: Filters the compliance results based on account ID, region, compliance
        type, and rule name.
    ConfigRuleComplianceSummaryFilters:
      type: object
      properties:
        AccountId:
          $ref: "#/components/schemas/AccountId"
        AwsRegion:
          $ref: "#/components/schemas/AwsRegion"
      description: Filters the results based on the account IDs and regions.
    ConfigRuleComplianceSummaryGroupKey:
      type: string
      enum:
        - ACCOUNT_ID
        - AWS_REGION
    ConfigRuleEvaluationStatus:
      type: object
      properties:
        ConfigRuleName:
          $ref: "#/components/schemas/StringWithCharLimit64"
        ConfigRuleArn:
          $ref: "#/components/schemas/String"
        ConfigRuleId:
          $ref: "#/components/schemas/String"
        LastSuccessfulInvocationTime:
          $ref: "#/components/schemas/Date"
        LastFailedInvocationTime:
          $ref: "#/components/schemas/Date"
        LastSuccessfulEvaluationTime:
          $ref: "#/components/schemas/Date"
        LastFailedEvaluationTime:
          $ref: "#/components/schemas/Date"
        FirstActivatedTime:
          $ref: "#/components/schemas/Date"
        LastErrorCode:
          $ref: "#/components/schemas/String"
        LastErrorMessage:
          $ref: "#/components/schemas/String"
        FirstEvaluationStarted:
          $ref: "#/components/schemas/Boolean"
      description: <p>Status information for your AWS managed Config rules. The status
        includes information such as the last time the rule ran, the last time
        it failed, and the related error for the last failure.</p> <p>This
        action does not return status information about custom AWS Config
        rules.</p>
    ConfigRuleEvaluationStatusList:
      type: array
      items:
        $ref: "#/components/schemas/ConfigRuleEvaluationStatus"
    ConfigRuleNames:
      type: array
      items:
        $ref: "#/components/schemas/ConfigRuleName"
      minItems: 0
      maxItems: 25
    ConfigRules:
      type: array
      items:
        $ref: "#/components/schemas/ConfigRule"
    ConfigSnapshotDeliveryProperties:
      type: object
      properties:
        deliveryFrequency:
          $ref: "#/components/schemas/MaximumExecutionFrequency"
      description: <p>Provides options for how often AWS Config delivers configuration
        snapshots to the Amazon S3 bucket in your delivery channel.</p> <p>The
        frequency for a rule that triggers evaluations for your resources when
        AWS Config delivers the configuration snapshot is set by one of two
        values, depending on which is less frequent:</p> <ul> <li> <p>The value
        for the <code>deliveryFrequency</code> parameter within the delivery
        channel configuration, which sets how often AWS Config delivers
        configuration snapshots. This value also sets how often AWS Config
        invokes evaluations for AWS Config rules.</p> </li> <li> <p>The value
        for the <code>MaximumExecutionFrequency</code> parameter, which sets the
        maximum frequency with which AWS Config invokes evaluations for the
        rule. For more information, see <a>ConfigRule</a>.</p> </li> </ul> <p>If
        the <code>deliveryFrequency</code> value is less frequent than the
        <code>MaximumExecutionFrequency</code> value for a rule, AWS Config
        invokes the rule only as often as the <code>deliveryFrequency</code>
        value.</p> <ol> <li> <p>For example, you want your rule to run
        evaluations when AWS Config delivers the configuration snapshot.</p>
        </li> <li> <p>You specify the <code>MaximumExecutionFrequency</code>
        value for <code>Six_Hours</code>. </p> </li> <li> <p>You then specify
        the delivery channel <code>deliveryFrequency</code> value for
        <code>TwentyFour_Hours</code>.</p> </li> <li> <p>Because the value for
        <code>deliveryFrequency</code> is less frequent than
        <code>MaximumExecutionFrequency</code>, AWS Config invokes evaluations
        for the rule every 24 hours. </p> </li> </ol> <p>You should set the
        <code>MaximumExecutionFrequency</code> value to be at least as frequent
        as the <code>deliveryFrequency</code> value. You can view the
        <code>deliveryFrequency</code> value by using the
        <code>DescribeDeliveryChannnels</code> action.</p> <p>To update the
        <code>deliveryFrequency</code> with which AWS Config delivers your
        configuration snapshots, use the <code>PutDeliveryChannel</code>
        action.</p>
    ConfigStreamDeliveryInfo:
      type: object
      properties:
        lastStatus:
          $ref: "#/components/schemas/DeliveryStatus"
        lastErrorCode:
          $ref: "#/components/schemas/String"
        lastErrorMessage:
          $ref: "#/components/schemas/String"
        lastStatusChangeTime:
          $ref: "#/components/schemas/Date"
      description: A list that contains the status of the delivery of the configuration
        stream notification to the Amazon SNS topic.
    ConfigurationAggregatorArn:
      type: string
      pattern: arn:aws[a-z\-]*:config:[a-z\-\d]+:\d+:config-aggregator/config-aggregator-[a-z\d]+
    OrganizationAggregationSource:
      type: object
      required:
        - RoleArn
      properties:
        RoleArn:
          $ref: "#/components/schemas/String"
        AwsRegions:
          $ref: "#/components/schemas/AggregatorRegionList"
        AllAwsRegions:
          $ref: "#/components/schemas/Boolean"
      description: This object contains regions to set up the aggregator and an IAM role to
        retrieve organization details.
    ConfigurationAggregator:
      type: object
      properties:
        ConfigurationAggregatorName:
          $ref: "#/components/schemas/ConfigurationAggregatorName"
        ConfigurationAggregatorArn:
          $ref: "#/components/schemas/ConfigurationAggregatorArn"
        AccountAggregationSources:
          $ref: "#/components/schemas/AccountAggregationSourceList"
        OrganizationAggregationSource:
          $ref: "#/components/schemas/OrganizationAggregationSource"
        CreationTime:
          $ref: "#/components/schemas/Date"
        LastUpdatedTime:
          $ref: "#/components/schemas/Date"
      description: "The details about the configuration aggregator, including information
        about source accounts, regions, and metadata of the aggregator. "
    ConfigurationAggregatorList:
      type: array
      items:
        $ref: "#/components/schemas/ConfigurationAggregator"
    ConfigurationAggregatorNameList:
      type: array
      items:
        $ref: "#/components/schemas/ConfigurationAggregatorName"
      minItems: 0
      maxItems: 10
    ConfigurationItemMD5Hash:
      type: string
    Tags:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/Value"
    RelatedEventList:
      type: array
      items:
        $ref: "#/components/schemas/RelatedEvent"
    RelationshipList:
      type: array
      items:
        $ref: "#/components/schemas/Relationship"
    ConfigurationItem:
      type: object
      properties:
        version:
          $ref: "#/components/schemas/Version"
        accountId:
          $ref: "#/components/schemas/AccountId"
        configurationItemCaptureTime:
          $ref: "#/components/schemas/ConfigurationItemCaptureTime"
        configurationItemStatus:
          $ref: "#/components/schemas/ConfigurationItemStatus"
        configurationStateId:
          $ref: "#/components/schemas/ConfigurationStateId"
        configurationItemMD5Hash:
          $ref: "#/components/schemas/ConfigurationItemMD5Hash"
        arn:
          $ref: "#/components/schemas/ARN"
        resourceType:
          $ref: "#/components/schemas/ResourceType"
        resourceId:
          $ref: "#/components/schemas/ResourceId"
        resourceName:
          $ref: "#/components/schemas/ResourceName"
        awsRegion:
          $ref: "#/components/schemas/AwsRegion"
        availabilityZone:
          $ref: "#/components/schemas/AvailabilityZone"
        resourceCreationTime:
          $ref: "#/components/schemas/ResourceCreationTime"
        tags:
          $ref: "#/components/schemas/Tags"
        relatedEvents:
          $ref: "#/components/schemas/RelatedEventList"
        relationships:
          $ref: "#/components/schemas/RelationshipList"
        configuration:
          $ref: "#/components/schemas/Configuration"
        supplementaryConfiguration:
          $ref: "#/components/schemas/SupplementaryConfiguration"
      description: A list that contains detailed configurations of a specified resource.
    ConfigurationItemList:
      type: array
      items:
        $ref: "#/components/schemas/ConfigurationItem"
    RecorderName:
      type: string
      minLength: 1
      maxLength: 256
    RecordingGroup:
      type: object
      properties:
        allSupported:
          $ref: "#/components/schemas/AllSupported"
        includeGlobalResourceTypes:
          $ref: "#/components/schemas/IncludeGlobalResourceTypes"
        resourceTypes:
          $ref: "#/components/schemas/ResourceTypeList"
      description: "<p>Specifies the types of AWS resource for which AWS Config records
        configuration changes.</p> <p>In the recording group, you specify
        whether all supported types or specific types of resources are
        recorded.</p> <p>By default, AWS Config records configuration changes
        for all supported types of regional resources that AWS Config discovers
        in the region in which it is running. Regional resources are tied to a
        region and can be used only in that region. Examples of regional
        resources are EC2 instances and EBS volumes.</p> <p>You can also have
        AWS Config record configuration changes for supported types of global
        resources (for example, IAM resources). Global resources are not tied to
        an individual region and can be used in all regions.</p> <important>
        <p>The configuration details for any global resource are the same in all
        regions. If you customize AWS Config in multiple regions to record
        global resources, it will create multiple configuration items each time
        a global resource changes: one configuration item for each region. These
        configuration items will contain identical data. To prevent duplicate
        configuration items, you should consider customizing AWS Config in only
        one region to record global resources, unless you want the configuration
        items to be available in multiple regions.</p> </important> <p>If you
        don't want AWS Config to record all resources, you can specify which
        types of resources it will record with the <code>resourceTypes</code>
        parameter.</p> <p>For a list of supported resource types, see <a
        href=\"https://docs.aws.amazon.com/config/latest/developerguide/resourc\
        e-config-reference.html#supported-resources\">Supported Resource
        Types</a>.</p> <p>For more information, see <a
        href=\"https://docs.aws.amazon.com/config/latest/developerguide/select-\
        resources.html\">Selecting Which Resources AWS Config Records</a>.</p>"
    ConfigurationRecorder:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/RecorderName"
        roleARN:
          $ref: "#/components/schemas/String"
        recordingGroup:
          $ref: "#/components/schemas/RecordingGroup"
      description: An object that represents the recording of configuration changes of an
        AWS resource.
    ConfigurationRecorderList:
      type: array
      items:
        $ref: "#/components/schemas/ConfigurationRecorder"
    ConfigurationRecorderNameList:
      type: array
      items:
        $ref: "#/components/schemas/RecorderName"
    RecorderStatus:
      type: string
      enum:
        - Pending
        - Success
        - Failure
    ConfigurationRecorderStatus:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/String"
        lastStartTime:
          $ref: "#/components/schemas/Date"
        lastStopTime:
          $ref: "#/components/schemas/Date"
        recording:
          $ref: "#/components/schemas/Boolean"
        lastStatus:
          $ref: "#/components/schemas/RecorderStatus"
        lastErrorCode:
          $ref: "#/components/schemas/String"
        lastErrorMessage:
          $ref: "#/components/schemas/String"
        lastStatusChangeTime:
          $ref: "#/components/schemas/Date"
      description: The current status of the configuration recorder.
    ConfigurationRecorderStatusList:
      type: array
      items:
        $ref: "#/components/schemas/ConfigurationRecorderStatus"
    CosmosPageLimit:
      type: integer
      minimum: 0
      maximum: 100
    OrganizationConfigRuleName:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 64
    RemediationExceptionResourceKeys:
      type: array
      items:
        $ref: "#/components/schemas/RemediationExceptionResourceKey"
      minItems: 1
      maxItems: 100
    FailedDeleteRemediationExceptionsBatches:
      type: array
      items:
        $ref: "#/components/schemas/FailedDeleteRemediationExceptionsBatch"
    RetentionConfigurationName:
      type: string
      pattern: "[\\w\\-]+"
      minLength: 1
      maxLength: 256
    DeliveryChannel:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/ChannelName"
        s3BucketName:
          $ref: "#/components/schemas/String"
        s3KeyPrefix:
          $ref: "#/components/schemas/String"
        snsTopicARN:
          $ref: "#/components/schemas/String"
        configSnapshotDeliveryProperties:
          $ref: "#/components/schemas/ConfigSnapshotDeliveryProperties"
      description: The channel through which AWS Config delivers notifications and updated
        configuration states.
    DeliveryChannelList:
      type: array
      items:
        $ref: "#/components/schemas/DeliveryChannel"
    DeliveryChannelNameList:
      type: array
      items:
        $ref: "#/components/schemas/ChannelName"
    DeliveryChannelStatus:
      type: object
      properties:
        name:
          $ref: "#/components/schemas/String"
        configSnapshotDeliveryInfo:
          $ref: "#/components/schemas/ConfigExportDeliveryInfo"
        configHistoryDeliveryInfo:
          $ref: "#/components/schemas/ConfigExportDeliveryInfo"
        configStreamDeliveryInfo:
          $ref: "#/components/schemas/ConfigStreamDeliveryInfo"
      description: "<p>The status of a specified delivery channel.</p> <p>Valid values:
        <code>Success</code> | <code>Failure</code> </p>"
    DeliveryChannelStatusList:
      type: array
      items:
        $ref: "#/components/schemas/DeliveryChannelStatus"
    GroupByAPILimit:
      type: integer
      minimum: 0
      maximum: 1000
    NextToken:
      type: string
    Limit:
      type: integer
      minimum: 0
      maximum: 100
    RuleLimit:
      type: integer
      minimum: 0
      maximum: 50
    OrganizationConfigRuleNames:
      type: array
      items:
        $ref: "#/components/schemas/StringWithCharLimit64"
      minItems: 0
      maxItems: 25
    OrganizationConfigRuleStatuses:
      type: array
      items:
        $ref: "#/components/schemas/OrganizationConfigRuleStatus"
    OrganizationConfigRules:
      type: array
      items:
        $ref: "#/components/schemas/OrganizationConfigRule"
    DescribePendingAggregationRequestsLimit:
      type: integer
      minimum: 0
      maximum: 20
    PendingAggregationRequestList:
      type: array
      items:
        $ref: "#/components/schemas/PendingAggregationRequest"
    RemediationConfigurations:
      type: array
      items:
        $ref: "#/components/schemas/RemediationConfiguration"
      minItems: 0
      maxItems: 25
    RemediationExceptions:
      type: array
      items:
        $ref: "#/components/schemas/RemediationException"
      minItems: 0
      maxItems: 25
    RemediationExecutionStatuses:
      type: array
      items:
        $ref: "#/components/schemas/RemediationExecutionStatus"
    RetentionConfigurationNameList:
      type: array
      items:
        $ref: "#/components/schemas/RetentionConfigurationName"
      minItems: 0
      maxItems: 1
    RetentionConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/RetentionConfiguration"
    DiscoveredResourceIdentifierList:
      type: array
      items:
        $ref: "#/components/schemas/AggregateResourceIdentifier"
    EarlierTime:
      type: string
      format: date-time
    OrderingTimestamp:
      type: string
      format: date-time
    Evaluation:
      type: object
      required:
        - ComplianceResourceType
        - ComplianceResourceId
        - ComplianceType
        - OrderingTimestamp
      properties:
        ComplianceResourceType:
          $ref: "#/components/schemas/StringWithCharLimit256"
        ComplianceResourceId:
          $ref: "#/components/schemas/BaseResourceId"
        ComplianceType:
          $ref: "#/components/schemas/ComplianceType"
        Annotation:
          $ref: "#/components/schemas/StringWithCharLimit256"
        OrderingTimestamp:
          $ref: "#/components/schemas/OrderingTimestamp"
      description: Identifies an AWS resource and indicates whether it complies with the
        AWS Config rule that it was evaluated against.
    EvaluationResult:
      type: object
      properties:
        EvaluationResultIdentifier:
          $ref: "#/components/schemas/EvaluationResultIdentifier"
        ComplianceType:
          $ref: "#/components/schemas/ComplianceType"
        ResultRecordedTime:
          $ref: "#/components/schemas/Date"
        ConfigRuleInvokedTime:
          $ref: "#/components/schemas/Date"
        Annotation:
          $ref: "#/components/schemas/StringWithCharLimit256"
        ResultToken:
          $ref: "#/components/schemas/String"
      description: The details of an AWS Config evaluation. Provides the AWS resource that
        was evaluated, the compliance of the resource, related time stamps, and
        supplementary information.
    EvaluationResultQualifier:
      type: object
      properties:
        ConfigRuleName:
          $ref: "#/components/schemas/StringWithCharLimit64"
        ResourceType:
          $ref: "#/components/schemas/StringWithCharLimit256"
        ResourceId:
          $ref: "#/components/schemas/BaseResourceId"
      description: Identifies an AWS Config rule that evaluated an AWS resource, and
        provides the type and ID of the resource that the rule evaluated.
    EvaluationResults:
      type: array
      items:
        $ref: "#/components/schemas/EvaluationResult"
    Evaluations:
      type: array
      items:
        $ref: "#/components/schemas/Evaluation"
      minItems: 0
      maxItems: 100
    EventSource:
      type: string
      enum:
        - aws.config
    ExcludedAccounts:
      type: array
      items:
        $ref: "#/components/schemas/AccountId"
      minItems: 0
      maxItems: 1000
    SsmControls:
      type: object
      properties:
        ConcurrentExecutionRatePercentage:
          $ref: "#/components/schemas/Percentage"
        ErrorPercentage:
          $ref: "#/components/schemas/Percentage"
      description: AWS Systems Manager (SSM) specific remediation controls.
    ExecutionControls:
      type: object
      properties:
        SsmControls:
          $ref: "#/components/schemas/SsmControls"
      description: The controls that AWS Config uses for executing remediations.
    Expression:
      type: string
      minLength: 1
      maxLength: 4096
    FailedDeleteRemediationExceptionsBatch:
      type: object
      properties:
        FailureMessage:
          $ref: "#/components/schemas/String"
        FailedItems:
          $ref: "#/components/schemas/RemediationExceptionResourceKeys"
      description: List of each of the failed delete remediation exceptions with specific
        reasons.
    FailedRemediationBatch:
      type: object
      properties:
        FailureMessage:
          $ref: "#/components/schemas/String"
        FailedItems:
          $ref: "#/components/schemas/RemediationConfigurations"
      description: List of each of the failed remediations with specific reasons.
    FailedRemediationBatches:
      type: array
      items:
        $ref: "#/components/schemas/FailedRemediationBatch"
    FailedRemediationExceptionBatch:
      type: object
      properties:
        FailureMessage:
          $ref: "#/components/schemas/String"
        FailedItems:
          $ref: "#/components/schemas/RemediationExceptions"
      description: List of each of the failed remediation exceptions with specific reasons.
    FailedRemediationExceptionBatches:
      type: array
      items:
        $ref: "#/components/schemas/FailedRemediationExceptionBatch"
    FieldName:
      type: string
    FieldInfo:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/FieldName"
      description: Details about the fields such as name of the field.
    FieldInfoList:
      type: array
      items:
        $ref: "#/components/schemas/FieldInfo"
    ResourceCountFilters:
      type: object
      properties:
        ResourceType:
          $ref: "#/components/schemas/ResourceType"
        AccountId:
          $ref: "#/components/schemas/AccountId"
        Region:
          $ref: "#/components/schemas/AwsRegion"
      description: Filters the resource count based on account ID, region, and resource
        type.
    ResourceCountGroupKey:
      type: string
      enum:
        - RESOURCE_TYPE
        - ACCOUNT_ID
        - AWS_REGION
    Long:
      type: integer
    GroupedResourceCountList:
      type: array
      items:
        $ref: "#/components/schemas/GroupedResourceCount"
    ResourceTypes:
      type: array
      items:
        $ref: "#/components/schemas/StringWithCharLimit256"
      minItems: 0
      maxItems: 20
    ResourceCounts:
      type: array
      items:
        $ref: "#/components/schemas/ResourceCount"
    StatusDetailFilters:
      type: object
      properties:
        AccountId:
          $ref: "#/components/schemas/AccountId"
        MemberAccountRuleStatus:
          $ref: "#/components/schemas/MemberAccountRuleStatus"
      description: "Status filter object to filter results based on specific member account
        ID or status type for an organization config rule. "
    OrganizationConfigRuleDetailedStatus:
      type: array
      items:
        $ref: "#/components/schemas/MemberAccountStatus"
    LaterTime:
      type: string
      format: date-time
    GroupedResourceCount:
      type: object
      required:
        - GroupName
        - ResourceCount
      properties:
        GroupName:
          $ref: "#/components/schemas/StringWithCharLimit256"
        ResourceCount:
          $ref: "#/components/schemas/Long"
      description: The count of resources that are grouped by the group name.
    IncludeGlobalResourceTypes:
      type: boolean
    ResourceFilters:
      type: object
      properties:
        AccountId:
          $ref: "#/components/schemas/AccountId"
        ResourceId:
          $ref: "#/components/schemas/ResourceId"
        ResourceName:
          $ref: "#/components/schemas/ResourceName"
        Region:
          $ref: "#/components/schemas/AwsRegion"
      description: Filters the results by resource account ID, region, resource ID, and
        resource name.
    ResourceIdList:
      type: array
      items:
        $ref: "#/components/schemas/ResourceId"
    ResourceIdentifierList:
      type: array
      items:
        $ref: "#/components/schemas/ResourceIdentifier"
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
      minItems: 1
      maxItems: 50
    MemberAccountRuleStatus:
      type: string
      enum:
        - CREATE_SUCCESSFUL
        - CREATE_IN_PROGRESS
        - CREATE_FAILED
        - UPDATE_SUCCESSFUL
        - UPDATE_FAILED
        - UPDATE_IN_PROGRESS
        - DELETE_SUCCESSFUL
        - DELETE_FAILED
        - DELETE_IN_PROGRESS
    MemberAccountStatus:
      type: object
      required:
        - AccountId
        - ConfigRuleName
        - MemberAccountRuleStatus
      properties:
        AccountId:
          $ref: "#/components/schemas/AccountId"
        ConfigRuleName:
          $ref: "#/components/schemas/StringWithCharLimit64"
        MemberAccountRuleStatus:
          $ref: "#/components/schemas/MemberAccountRuleStatus"
        ErrorCode:
          $ref: "#/components/schemas/String"
        ErrorMessage:
          $ref: "#/components/schemas/String"
        LastUpdateTime:
          $ref: "#/components/schemas/Date"
      description: Organization config rule creation or deletion status in each member
        account. This includes the name of the rule, the status, error code and
        error message when the rule creation or deletion failed.
    MessageType:
      type: string
      enum:
        - ConfigurationItemChangeNotification
        - ConfigurationSnapshotDeliveryCompleted
        - ScheduledNotification
        - OversizedConfigurationItemChangeNotification
    Name:
      type: string
    OrganizationManagedRuleMetadata:
      type: object
      required:
        - RuleIdentifier
      properties:
        Description:
          $ref: "#/components/schemas/StringWithCharLimit256Min0"
        RuleIdentifier:
          $ref: "#/components/schemas/StringWithCharLimit256"
        InputParameters:
          $ref: "#/components/schemas/StringWithCharLimit2048"
        MaximumExecutionFrequency:
          $ref: "#/components/schemas/MaximumExecutionFrequency"
        ResourceTypesScope:
          $ref: "#/components/schemas/ResourceTypesScope"
        ResourceIdScope:
          $ref: "#/components/schemas/StringWithCharLimit768"
        TagKeyScope:
          $ref: "#/components/schemas/StringWithCharLimit128"
        TagValueScope:
          $ref: "#/components/schemas/StringWithCharLimit256"
      description: An object that specifies organization managed rule metadata such as
        resource type and ID of AWS resource along with the rule identifier. It
        also provides the frequency with which you want AWS Config to run
        evaluations for the rule if the trigger type is periodic.
    OrganizationCustomRuleMetadata:
      type: object
      required:
        - LambdaFunctionArn
        - OrganizationConfigRuleTriggerTypes
      properties:
        Description:
          $ref: "#/components/schemas/StringWithCharLimit256Min0"
        LambdaFunctionArn:
          $ref: "#/components/schemas/StringWithCharLimit256"
        OrganizationConfigRuleTriggerTypes:
          $ref: "#/components/schemas/OrganizationConfigRuleTriggerTypes"
        InputParameters:
          $ref: "#/components/schemas/StringWithCharLimit2048"
        MaximumExecutionFrequency:
          $ref: "#/components/schemas/MaximumExecutionFrequency"
        ResourceTypesScope:
          $ref: "#/components/schemas/ResourceTypesScope"
        ResourceIdScope:
          $ref: "#/components/schemas/StringWithCharLimit768"
        TagKeyScope:
          $ref: "#/components/schemas/StringWithCharLimit128"
        TagValueScope:
          $ref: "#/components/schemas/StringWithCharLimit256"
      description: An object that specifies organization custom rule metadata such as
        resource type, resource ID of AWS resource, Lamdba function ARN, and
        organization trigger types that trigger AWS Config to evaluate your AWS
        resources against a rule. It also provides the frequency with which you
        want AWS Config to run evaluations for the rule if the trigger type is
        periodic.
    OrganizationConfigRule:
      type: object
      required:
        - OrganizationConfigRuleName
        - OrganizationConfigRuleArn
      properties:
        OrganizationConfigRuleName:
          $ref: "#/components/schemas/OrganizationConfigRuleName"
        OrganizationConfigRuleArn:
          $ref: "#/components/schemas/StringWithCharLimit256"
        OrganizationManagedRuleMetadata:
          $ref: "#/components/schemas/OrganizationManagedRuleMetadata"
        OrganizationCustomRuleMetadata:
          $ref: "#/components/schemas/OrganizationCustomRuleMetadata"
        ExcludedAccounts:
          $ref: "#/components/schemas/ExcludedAccounts"
        LastUpdateTime:
          $ref: "#/components/schemas/Date"
      description: An organization config rule that has information about config rules that
        AWS Config creates in member accounts.
    OrganizationRuleStatus:
      type: string
      enum:
        - CREATE_SUCCESSFUL
        - CREATE_IN_PROGRESS
        - CREATE_FAILED
        - UPDATE_SUCCESSFUL
        - UPDATE_FAILED
        - UPDATE_IN_PROGRESS
        - DELETE_SUCCESSFUL
        - DELETE_FAILED
        - DELETE_IN_PROGRESS
    OrganizationConfigRuleStatus:
      type: object
      required:
        - OrganizationConfigRuleName
        - OrganizationRuleStatus
      properties:
        OrganizationConfigRuleName:
          $ref: "#/components/schemas/OrganizationConfigRuleName"
        OrganizationRuleStatus:
          $ref: "#/components/schemas/OrganizationRuleStatus"
        ErrorCode:
          $ref: "#/components/schemas/String"
        ErrorMessage:
          $ref: "#/components/schemas/String"
        LastUpdateTime:
          $ref: "#/components/schemas/Date"
      description: Returns the status for an organization config rule in an organization.
    OrganizationConfigRuleTriggerType:
      type: string
      enum:
        - ConfigurationItemChangeNotification
        - OversizedConfigurationItemChangeNotification
        - ScheduledNotification
    OrganizationConfigRuleTriggerTypes:
      type: array
      items:
        $ref: "#/components/schemas/OrganizationConfigRuleTriggerType"
    StringWithCharLimit256Min0:
      type: string
      minLength: 0
      maxLength: 256
    StringWithCharLimit2048:
      type: string
      minLength: 1
      maxLength: 2048
    ResourceTypesScope:
      type: array
      items:
        $ref: "#/components/schemas/StringWithCharLimit256"
      minItems: 0
      maxItems: 100
    StringWithCharLimit768:
      type: string
      minLength: 1
      maxLength: 768
    StringWithCharLimit128:
      type: string
      minLength: 1
      maxLength: 128
    Owner:
      type: string
      enum:
        - CUSTOM_LAMBDA
        - AWS
    PendingAggregationRequest:
      type: object
      properties:
        RequesterAccountId:
          $ref: "#/components/schemas/AccountId"
        RequesterAwsRegion:
          $ref: "#/components/schemas/AwsRegion"
      description: An object that represents the account ID and region of an aggregator
        account that is requesting authorization but is not yet authorized.
    Percentage:
      type: integer
      minimum: 1
      maximum: 100
    TagsList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
      minItems: 0
      maxItems: 50
    RetentionPeriodInDays:
      type: integer
      minimum: 30
      maximum: 2557
    RetentionConfiguration:
      type: object
      required:
        - Name
        - RetentionPeriodInDays
      properties:
        Name:
          $ref: "#/components/schemas/RetentionConfigurationName"
        RetentionPeriodInDays:
          $ref: "#/components/schemas/RetentionPeriodInDays"
      description: An object with the name of the retention configuration and the retention
        period in days. The object stores the configuration for data retention
        in AWS Config.
    QueryInfo:
      type: object
      properties:
        SelectFields:
          $ref: "#/components/schemas/FieldInfoList"
      description: Details about the query.
    ResourceTypeList:
      type: array
      items:
        $ref: "#/components/schemas/ResourceType"
    ReevaluateConfigRuleNames:
      type: array
      items:
        $ref: "#/components/schemas/StringWithCharLimit64"
      minItems: 1
      maxItems: 25
    RelatedEvent:
      type: string
    RelationshipName:
      type: string
    Relationship:
      type: object
      properties:
        resourceType:
          $ref: "#/components/schemas/ResourceType"
        resourceId:
          $ref: "#/components/schemas/ResourceId"
        resourceName:
          $ref: "#/components/schemas/ResourceName"
        relationshipName:
          $ref: "#/components/schemas/RelationshipName"
      description: The relationship of the related resource to the main resource.
    RemediationTargetType:
      type: string
      enum:
        - SSM_DOCUMENT
    RemediationParameters:
      type: object
      minProperties: 0
      maxProperties: 25
      additionalProperties:
        $ref: "#/components/schemas/RemediationParameterValue"
    RemediationConfiguration:
      type: object
      required:
        - ConfigRuleName
        - TargetType
        - TargetId
      properties:
        ConfigRuleName:
          $ref: "#/components/schemas/ConfigRuleName"
        TargetType:
          $ref: "#/components/schemas/RemediationTargetType"
        TargetId:
          $ref: "#/components/schemas/StringWithCharLimit256"
        TargetVersion:
          $ref: "#/components/schemas/String"
        Parameters:
          $ref: "#/components/schemas/RemediationParameters"
        ResourceType:
          $ref: "#/components/schemas/String"
        Automatic:
          $ref: "#/components/schemas/Boolean"
        ExecutionControls:
          $ref: "#/components/schemas/ExecutionControls"
        MaximumAutomaticAttempts:
          $ref: "#/components/schemas/AutoRemediationAttempts"
        RetryAttemptSeconds:
          $ref: "#/components/schemas/AutoRemediationAttemptSeconds"
        Arn:
          $ref: "#/components/schemas/StringWithCharLimit1024"
        CreatedByService:
          $ref: "#/components/schemas/StringWithCharLimit1024"
      description: An object that represents the details about the remediation
        configuration that includes the remediation action, parameters, and data
        to execute the action.
    RemediationException:
      type: object
      required:
        - ConfigRuleName
        - ResourceType
        - ResourceId
      properties:
        ConfigRuleName:
          $ref: "#/components/schemas/ConfigRuleName"
        ResourceType:
          $ref: "#/components/schemas/StringWithCharLimit256"
        ResourceId:
          $ref: "#/components/schemas/StringWithCharLimit1024"
        Message:
          $ref: "#/components/schemas/StringWithCharLimit1024"
        ExpirationTime:
          $ref: "#/components/schemas/Date"
      description: "An object that represents the details about the remediation exception.
        The details include the rule name, an explanation of an exception, the
        time when the exception will be deleted, the resource ID, and resource
        type. "
    RemediationExceptionResourceKey:
      type: object
      properties:
        ResourceType:
          $ref: "#/components/schemas/StringWithCharLimit256"
        ResourceId:
          $ref: "#/components/schemas/StringWithCharLimit1024"
      description: "The details that identify a resource within AWS Config, including the
        resource type and resource ID. "
    RemediationExecutionState:
      type: string
      enum:
        - QUEUED
        - IN_PROGRESS
        - SUCCEEDED
        - FAILED
    ResourceKey:
      type: object
      required:
        - resourceType
        - resourceId
      properties:
        resourceType:
          $ref: "#/components/schemas/ResourceType"
        resourceId:
          $ref: "#/components/schemas/ResourceId"
      description: The details that identify a resource within AWS Config, including the
        resource type and resource ID.
    RemediationExecutionSteps:
      type: array
      items:
        $ref: "#/components/schemas/RemediationExecutionStep"
    RemediationExecutionStatus:
      type: object
      properties:
        ResourceKey:
          $ref: "#/components/schemas/ResourceKey"
        State:
          $ref: "#/components/schemas/RemediationExecutionState"
        StepDetails:
          $ref: "#/components/schemas/RemediationExecutionSteps"
        InvocationTime:
          $ref: "#/components/schemas/Date"
        LastUpdatedTime:
          $ref: "#/components/schemas/Date"
      description: Provides details of the current status of the invoked remediation action
        for that resource.
    RemediationExecutionStepState:
      type: string
      enum:
        - SUCCEEDED
        - PENDING
        - FAILED
    RemediationExecutionStep:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/String"
        State:
          $ref: "#/components/schemas/RemediationExecutionStepState"
        ErrorMessage:
          $ref: "#/components/schemas/String"
        StartTime:
          $ref: "#/components/schemas/Date"
        StopTime:
          $ref: "#/components/schemas/Date"
      description: Name of the step from the SSM document.
    ResourceValue:
      type: object
      required:
        - Value
      properties:
        Value:
          $ref: "#/components/schemas/ResourceValueType"
      description: The dynamic value of the resource.
    StaticValue:
      type: object
      required:
        - Values
      properties:
        Values:
          $ref: "#/components/schemas/StaticParameterValues"
      description: The static value of the resource.
    RemediationParameterValue:
      type: object
      properties:
        ResourceValue:
          $ref: "#/components/schemas/ResourceValue"
        StaticValue:
          $ref: "#/components/schemas/StaticValue"
      description: The value is either a dynamic (resource) value or a static value. You
        must select either a dynamic value or a static value.
    ResourceCount:
      type: object
      properties:
        resourceType:
          $ref: "#/components/schemas/ResourceType"
        count:
          $ref: "#/components/schemas/Long"
      description: An object that contains the resource type and the number of resources.
    ResourceDeletionTime:
      type: string
      format: date-time
    ResourceIdentifier:
      type: object
      properties:
        resourceType:
          $ref: "#/components/schemas/ResourceType"
        resourceId:
          $ref: "#/components/schemas/ResourceId"
        resourceName:
          $ref: "#/components/schemas/ResourceName"
        resourceDeletionTime:
          $ref: "#/components/schemas/ResourceDeletionTime"
      description: The details that identify a resource that is discovered by AWS Config,
        including the resource type, ID, and (if available) the custom resource
        name.
    ResourceValueType:
      type: string
      enum:
        - RESOURCE_ID
    Results:
      type: array
      items:
        $ref: "#/components/schemas/String"
    SourceDetails:
      type: array
      items:
        $ref: "#/components/schemas/SourceDetail"
      minItems: 0
      maxItems: 25
    SourceDetail:
      type: object
      properties:
        EventSource:
          $ref: "#/components/schemas/EventSource"
        MessageType:
          $ref: "#/components/schemas/MessageType"
        MaximumExecutionFrequency:
          $ref: "#/components/schemas/MaximumExecutionFrequency"
      description: "Provides the source and the message types that trigger AWS Config to
        evaluate your AWS resources against a rule. It also provides the
        frequency with which you want AWS Config to run evaluations for the rule
        if the trigger type is periodic. You can specify the parameter values
        for <code>SourceDetail</code> only for custom rules. "
    StaticParameterValues:
      type: array
      items:
        $ref: "#/components/schemas/StringWithCharLimit256"
      minItems: 0
      maxItems: 25
    SupplementaryConfigurationValue:
      type: string
    SupplementaryConfigurationName:
      type: string
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
        Value:
          $ref: "#/components/schemas/TagValue"
      description: The tags for the resource. The metadata that you apply to a resource to
        help you categorize and organize them. Each tag consists of a key and an
        optional value, both of which you define. Tag keys can have a maximum
        character length of 128 characters, and tag values can have a maximum
        length of 256 characters.
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
      minItems: 1
      maxItems: 50
    Value:
      type: string
