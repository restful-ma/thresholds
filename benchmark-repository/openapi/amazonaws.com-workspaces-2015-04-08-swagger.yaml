openapi: 3.0.0
info:
  version: 2015-04-08
  x-release: v4
  title: Amazon WorkSpaces
  description: <fullname>Amazon WorkSpaces Service</fullname> <p>Amazon WorkSpaces enables
    you to provision virtual, cloud-based Microsoft Windows and Amazon Linux
    desktops for your users.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: workspaces
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/workspaces-2015-04-08.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/workspaces/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=WorkspacesService.AssociateIpGroups:
    post:
      operationId: AssociateIpGroups
      description: Associates the specified IP access control group with the specified
        directory.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateIpGroupsResult"
        "480":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceededException"
        "483":
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceStateException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotSupportedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.AssociateIpGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateIpGroupsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.AuthorizeIpRules:
    post:
      operationId: AuthorizeIpRules
      description: <p>Adds one or more rules to the specified IP access control group.</p>
        <p>This action gives users permission to access their WorkSpaces from
        the CIDR address ranges specified in the rules.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizeIpRulesResult"
        "480":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceededException"
        "483":
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceStateException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.AuthorizeIpRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthorizeIpRulesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.CopyWorkspaceImage:
    post:
      operationId: CopyWorkspaceImage
      description: Copies the specified image from the specified Region to the current
        Region.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CopyWorkspaceImageResult"
        "480":
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceededException"
        "481":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
        "484":
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotSupportedException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.CopyWorkspaceImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CopyWorkspaceImageRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.CreateIpGroup:
    post:
      operationId: CreateIpGroup
      description: <p>Creates an IP access control group.</p> <p>An IP access control group
        provides you with the ability to control the IP addresses from which
        users are allowed to access their WorkSpaces. To specify the CIDR
        address ranges, add rules to your IP access control group and then
        associate the group with your directory. You can add rules when you
        create the group or at any time using <a>AuthorizeIpRules</a>.</p>
        <p>There is a default IP access control group associated with your
        directory. If you don't associate an IP access control group with your
        directory, the default group is used. The default group includes a
        default rule that allows users to access their WorkSpaces from anywhere.
        You cannot modify the default IP access control group for your
        directory.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateIpGroupResult"
        "480":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
        "481":
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceededException"
        "482":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "483":
          description: ResourceCreationFailedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceCreationFailedException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.CreateIpGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateIpGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.CreateTags:
    post:
      operationId: CreateTags
      description: Creates the specified tags for the specified WorkSpaces resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTagsResult"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
        "482":
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.CreateTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTagsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.CreateWorkspaces:
    post:
      operationId: CreateWorkspaces
      description: <p>Creates one or more WorkSpaces.</p> <p>This operation is asynchronous
        and returns before the WorkSpaces are created.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkspacesResult"
        "480":
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceededException"
        "481":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.CreateWorkspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWorkspacesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.DeleteIpGroup:
    post:
      operationId: DeleteIpGroup
      description: <p>Deletes the specified IP access control group.</p> <p>You cannot
        delete an IP access control group that is associated with a
        directory.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteIpGroupResult"
        "480":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ResourceAssociatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAssociatedException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DeleteIpGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteIpGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.DeleteTags:
    post:
      operationId: DeleteTags
      description: Deletes the specified tags from the specified WorkSpaces resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteTagsResult"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DeleteTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteTagsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.DeleteWorkspaceImage:
    post:
      operationId: DeleteWorkspaceImage
      description: "Deletes the specified image from your account. To delete an image, you
        must first delete any bundles that are associated with the image and
        un-share the image if it is shared with other accounts. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteWorkspaceImageResult"
        "480":
          description: ResourceAssociatedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAssociatedException"
        "481":
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceStateException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DeleteWorkspaceImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteWorkspaceImageRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.DescribeAccount:
    post:
      operationId: DescribeAccount
      description: Retrieves a list that describes the configuration of bring your own
        license (BYOL) for the specified account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAccountResult"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DescribeAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeAccountRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.DescribeAccountModifications:
    post:
      operationId: DescribeAccountModifications
      description: Retrieves a list that describes modifications to the configuration of
        bring your own license (BYOL) for the specified account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAccountModificationsResult"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DescribeAccountModifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeAccountModificationsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.DescribeClientProperties:
    post:
      operationId: DescribeClientProperties
      description: Retrieves a list that describes one or more specified Amazon WorkSpaces
        clients.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeClientPropertiesResult"
        "480":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DescribeClientProperties
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeClientPropertiesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.DescribeIpGroups:
    post:
      operationId: DescribeIpGroups
      description: Describes one or more of your IP access control groups.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeIpGroupsResult"
        "480":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DescribeIpGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeIpGroupsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.DescribeTags:
    post:
      operationId: DescribeTags
      description: Describes the specified tags for the specified WorkSpaces resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTagsResult"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DescribeTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeTagsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.DescribeWorkspaceBundles:
    post:
      operationId: DescribeWorkspaceBundles
      description: <p>Retrieves a list that describes the available WorkSpace bundles.</p>
        <p>You can filter the results using either bundle ID or owner, but not
        both.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeWorkspaceBundlesResult"
        "480":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
      parameters:
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DescribeWorkspaceBundles
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeWorkspaceBundlesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.DescribeWorkspaceDirectories:
    post:
      operationId: DescribeWorkspaceDirectories
      description: Describes the available AWS Directory Service directories that are
        registered with Amazon WorkSpaces.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeWorkspaceDirectoriesResult"
        "480":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
      parameters:
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DescribeWorkspaceDirectories
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeWorkspaceDirectoriesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.DescribeWorkspaceImages:
    post:
      operationId: DescribeWorkspaceImages
      description: "Retrieves a list that describes one or more specified images, if the
        image identifiers are provided. Otherwise, all images in the account are
        described. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeWorkspaceImagesResult"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DescribeWorkspaceImages
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeWorkspaceImagesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.DescribeWorkspaceSnapshots:
    post:
      operationId: DescribeWorkspaceSnapshots
      description: Describes the snapshots for the specified WorkSpace.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeWorkspaceSnapshotsResult"
        "480":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DescribeWorkspaceSnapshots
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeWorkspaceSnapshotsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.DescribeWorkspaces:
    post:
      operationId: DescribeWorkspaces
      description: <p>Describes the specified WorkSpaces.</p> <p>You can filter the results
        by using the bundle identifier, directory identifier, or owner, but you
        can specify only one filter at a time.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeWorkspacesResult"
        "480":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
        "481":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: Limit
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DescribeWorkspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeWorkspacesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.DescribeWorkspacesConnectionStatus:
    post:
      operationId: DescribeWorkspacesConnectionStatus
      description: Describes the connection status of the specified WorkSpaces.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeWorkspacesConnectionStatusResult"
        "480":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DescribeWorkspacesConnectionStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeWorkspacesConnectionStatusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.DisassociateIpGroups:
    post:
      operationId: DisassociateIpGroups
      description: Disassociates the specified IP access control group from the specified
        directory.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateIpGroupsResult"
        "480":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceStateException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.DisassociateIpGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateIpGroupsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.ImportWorkspaceImage:
    post:
      operationId: ImportWorkspaceImage
      description: "Imports the specified Windows 7 or Windows 10 bring your own license
        (BYOL) image into Amazon WorkSpaces. The image must be an already
        licensed EC2 image that is in your AWS account, and you must own the
        image. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportWorkspaceImageResult"
        "480":
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceededException"
        "481":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: OperationNotSupportedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotSupportedException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.ImportWorkspaceImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportWorkspaceImageRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.ListAvailableManagementCidrRanges:
    post:
      operationId: ListAvailableManagementCidrRanges
      description: <p>Retrieves a list of IP address ranges, specified as IPv4 CIDR blocks,
        that you can use for the network management interface when you enable
        bring your own license (BYOL). </p> <p>The management network interface
        is connected to a secure Amazon WorkSpaces management network. It is
        used for interactive streaming of the WorkSpace desktop to Amazon
        WorkSpaces clients, and to allow Amazon WorkSpaces to manage the
        WorkSpace.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAvailableManagementCidrRangesResult"
        "480":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.ListAvailableManagementCidrRanges
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListAvailableManagementCidrRangesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.ModifyAccount:
    post:
      operationId: ModifyAccount
      description: Modifies the configuration of bring your own license (BYOL) for the
        specified account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModifyAccountResult"
        "480":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceStateException"
        "483":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.ModifyAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModifyAccountRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.ModifyClientProperties:
    post:
      operationId: ModifyClientProperties
      description: Modifies the properties of the specified Amazon WorkSpaces clients.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModifyClientPropertiesResult"
        "480":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.ModifyClientProperties
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModifyClientPropertiesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.ModifyWorkspaceProperties:
    post:
      operationId: ModifyWorkspaceProperties
      description: Modifies the specified WorkSpace properties.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModifyWorkspacePropertiesResult"
        "480":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
        "481":
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceStateException"
        "482":
          description: OperationInProgressException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationInProgressException"
        "483":
          description: UnsupportedWorkspaceConfigurationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedWorkspaceConfigurationExcept\
                  ion"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.ModifyWorkspaceProperties
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModifyWorkspacePropertiesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.ModifyWorkspaceState:
    post:
      operationId: ModifyWorkspaceState
      description: <p>Sets the state of the specified WorkSpace.</p> <p>To maintain a
        WorkSpace without being interrupted, set the WorkSpace state to
        <code>ADMIN_MAINTENANCE</code>. WorkSpaces in this state do not respond
        to requests to reboot, stop, start, rebuild, or restore. An AutoStop
        WorkSpace in this state is not stopped. Users cannot log into a
        WorkSpace in the <code>ADMIN_MAINTENANCE</code> state.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModifyWorkspaceStateResult"
        "480":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
        "481":
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceStateException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.ModifyWorkspaceState
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModifyWorkspaceStateRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.RebootWorkspaces:
    post:
      operationId: RebootWorkspaces
      description: <p>Reboots the specified WorkSpaces.</p> <p>You cannot reboot a
        WorkSpace unless its state is <code>AVAILABLE</code> or
        <code>UNHEALTHY</code>.</p> <p>This operation is asynchronous and
        returns before the WorkSpaces have rebooted.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RebootWorkspacesResult"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.RebootWorkspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RebootWorkspacesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.RebuildWorkspaces:
    post:
      operationId: RebuildWorkspaces
      description: <p>Rebuilds the specified WorkSpace.</p> <p>You cannot rebuild a
        WorkSpace unless its state is <code>AVAILABLE</code>,
        <code>ERROR</code>, or <code>UNHEALTHY</code>.</p> <p>Rebuilding a
        WorkSpace is a potentially destructive action that can result in the
        loss of data. For more information, see <a
        href="https://docs.aws.amazon.com/workspaces/latest/adminguide/reset-workspace.html">Rebuild
        a WorkSpace</a>.</p> <p>This operation is asynchronous and returns
        before the WorkSpaces have been completely rebuilt.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RebuildWorkspacesResult"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.RebuildWorkspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RebuildWorkspacesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.RestoreWorkspace:
    post:
      operationId: RestoreWorkspace
      description: <p>Restores the specified WorkSpace to its last known healthy state.</p>
        <p>You cannot restore a WorkSpace unless its state is <code>
        AVAILABLE</code>, <code>ERROR</code>, or <code>UNHEALTHY</code>.</p>
        <p>Restoring a WorkSpace is a potentially destructive action that can
        result in the loss of data. For more information, see <a
        href="https://docs.aws.amazon.com/workspaces/latest/adminguide/restore-workspace.html">Restore
        a WorkSpace</a>.</p> <p>This operation is asynchronous and returns
        before the WorkSpace is completely restored.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestoreWorkspaceResult"
        "480":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.RestoreWorkspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestoreWorkspaceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.RevokeIpRules:
    post:
      operationId: RevokeIpRules
      description: Removes one or more rules from the specified IP access control group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RevokeIpRulesResult"
        "480":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceStateException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.RevokeIpRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RevokeIpRulesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.StartWorkspaces:
    post:
      operationId: StartWorkspaces
      description: <p>Starts the specified WorkSpaces.</p> <p>You cannot start a WorkSpace
        unless it has a running mode of <code>AutoStop</code> and a state of
        <code>STOPPED</code>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartWorkspacesResult"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.StartWorkspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartWorkspacesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.StopWorkspaces:
    post:
      operationId: StopWorkspaces
      description: <p> Stops the specified WorkSpaces.</p> <p>You cannot stop a WorkSpace
        unless it has a running mode of <code>AutoStop</code> and a state of
        <code>AVAILABLE</code>, <code>IMPAIRED</code>, <code>UNHEALTHY</code>,
        or <code>ERROR</code>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopWorkspacesResult"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.StopWorkspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopWorkspacesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.TerminateWorkspaces:
    post:
      operationId: TerminateWorkspaces
      description: <p>Terminates the specified WorkSpaces.</p> <p>Terminating a WorkSpace
        is a permanent action and cannot be undone. The user's data is
        destroyed. If you need to archive any user data, contact Amazon Web
        Services before terminating the WorkSpace.</p> <p>You can terminate a
        WorkSpace that is in any state except <code>SUSPENDED</code>.</p>
        <p>This operation is asynchronous and returns before the WorkSpaces have
        been completely terminated.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TerminateWorkspacesResult"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.TerminateWorkspaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TerminateWorkspacesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=WorkspacesService.UpdateRulesOfIpGroup:
    post:
      operationId: UpdateRulesOfIpGroup
      description: Replaces the current rules of the specified IP access control group with
        the specified rules.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateRulesOfIpGroupResult"
        "480":
          description: InvalidParameterValuesException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValuesException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceededException"
        "483":
          description: InvalidResourceStateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceStateException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - WorkspacesService.UpdateRulesOfIpGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRulesOfIpGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://workspaces.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon WorkSpaces multi-region endpoint
  - url: https://workspaces.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon WorkSpaces multi-region endpoint
  - url: http://workspaces.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon WorkSpaces endpoint for China (Beijing) and China (Ningxia)
  - url: https://workspaces.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon WorkSpaces endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AssociateIpGroupsResult:
      type: object
      properties: {}
    AssociateIpGroupsRequest:
      type: object
      required:
        - DirectoryId
        - GroupIds
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        GroupIds:
          $ref: "#/components/schemas/IpGroupIdList"
    InvalidParameterValuesException: {}
    ResourceNotFoundException: {}
    ResourceLimitExceededException: {}
    InvalidResourceStateException: {}
    AccessDeniedException: {}
    OperationNotSupportedException: {}
    AuthorizeIpRulesResult:
      type: object
      properties: {}
    AuthorizeIpRulesRequest:
      type: object
      required:
        - GroupId
        - UserRules
      properties:
        GroupId:
          $ref: "#/components/schemas/IpGroupId"
        UserRules:
          $ref: "#/components/schemas/IpRuleList"
    CopyWorkspaceImageResult:
      type: object
      properties:
        ImageId:
          $ref: "#/components/schemas/WorkspaceImageId"
    CopyWorkspaceImageRequest:
      type: object
      required:
        - Name
        - SourceImageId
        - SourceRegion
      properties:
        Name:
          $ref: "#/components/schemas/WorkspaceImageName"
        Description:
          $ref: "#/components/schemas/WorkspaceImageDescription"
        SourceImageId:
          $ref: "#/components/schemas/WorkspaceImageId"
        SourceRegion:
          $ref: "#/components/schemas/Region"
        Tags:
          $ref: "#/components/schemas/TagList"
    ResourceAlreadyExistsException: {}
    ResourceUnavailableException: {}
    CreateIpGroupResult:
      type: object
      properties:
        GroupId:
          $ref: "#/components/schemas/IpGroupId"
    CreateIpGroupRequest:
      type: object
      required:
        - GroupName
      properties:
        GroupName:
          $ref: "#/components/schemas/IpGroupName"
        GroupDesc:
          $ref: "#/components/schemas/IpGroupDesc"
        UserRules:
          $ref: "#/components/schemas/IpRuleList"
        Tags:
          $ref: "#/components/schemas/TagList"
    ResourceCreationFailedException: {}
    CreateTagsResult:
      type: object
      properties: {}
    CreateTagsRequest:
      type: object
      required:
        - ResourceId
        - Tags
      properties:
        ResourceId:
          $ref: "#/components/schemas/NonEmptyString"
        Tags:
          $ref: "#/components/schemas/TagList"
    CreateWorkspacesResult:
      type: object
      properties:
        FailedRequests:
          $ref: "#/components/schemas/FailedCreateWorkspaceRequests"
        PendingRequests:
          $ref: "#/components/schemas/WorkspaceList"
    CreateWorkspacesRequest:
      type: object
      required:
        - Workspaces
      properties:
        Workspaces:
          $ref: "#/components/schemas/WorkspaceRequestList"
    DeleteIpGroupResult:
      type: object
      properties: {}
    DeleteIpGroupRequest:
      type: object
      required:
        - GroupId
      properties:
        GroupId:
          $ref: "#/components/schemas/IpGroupId"
    ResourceAssociatedException: {}
    DeleteTagsResult:
      type: object
      properties: {}
    DeleteTagsRequest:
      type: object
      required:
        - ResourceId
        - TagKeys
      properties:
        ResourceId:
          $ref: "#/components/schemas/NonEmptyString"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
    DeleteWorkspaceImageResult:
      type: object
      properties: {}
    DeleteWorkspaceImageRequest:
      type: object
      required:
        - ImageId
      properties:
        ImageId:
          $ref: "#/components/schemas/WorkspaceImageId"
    DescribeAccountResult:
      type: object
      properties:
        DedicatedTenancySupport:
          $ref: "#/components/schemas/DedicatedTenancySupportResultEnum"
        DedicatedTenancyManagementCidrRange:
          $ref: "#/components/schemas/DedicatedTenancyManagementCidrRange"
    DescribeAccountRequest:
      type: object
      properties: {}
    DescribeAccountModificationsResult:
      type: object
      properties:
        AccountModifications:
          $ref: "#/components/schemas/AccountModificationList"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
    DescribeAccountModificationsRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
    DescribeClientPropertiesResult:
      type: object
      properties:
        ClientPropertiesList:
          $ref: "#/components/schemas/ClientPropertiesList"
    DescribeClientPropertiesRequest:
      type: object
      required:
        - ResourceIds
      properties:
        ResourceIds:
          $ref: "#/components/schemas/ResourceIdList"
    DescribeIpGroupsResult:
      type: object
      properties:
        Result:
          $ref: "#/components/schemas/WorkspacesIpGroupsList"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
    DescribeIpGroupsRequest:
      type: object
      properties:
        GroupIds:
          $ref: "#/components/schemas/IpGroupIdList"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        MaxResults:
          $ref: "#/components/schemas/Limit"
    DescribeTagsResult:
      type: object
      properties:
        TagList:
          $ref: "#/components/schemas/TagList"
    DescribeTagsRequest:
      type: object
      required:
        - ResourceId
      properties:
        ResourceId:
          $ref: "#/components/schemas/NonEmptyString"
    DescribeWorkspaceBundlesResult:
      type: object
      properties:
        Bundles:
          $ref: "#/components/schemas/BundleList"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
    DescribeWorkspaceBundlesRequest:
      type: object
      properties:
        BundleIds:
          $ref: "#/components/schemas/BundleIdList"
        Owner:
          $ref: "#/components/schemas/BundleOwner"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
    DescribeWorkspaceDirectoriesResult:
      type: object
      properties:
        Directories:
          $ref: "#/components/schemas/DirectoryList"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
    DescribeWorkspaceDirectoriesRequest:
      type: object
      properties:
        DirectoryIds:
          $ref: "#/components/schemas/DirectoryIdList"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
    DescribeWorkspaceImagesResult:
      type: object
      properties:
        Images:
          $ref: "#/components/schemas/WorkspaceImageList"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
    DescribeWorkspaceImagesRequest:
      type: object
      properties:
        ImageIds:
          $ref: "#/components/schemas/WorkspaceImageIdList"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
        MaxResults:
          $ref: "#/components/schemas/Limit"
    DescribeWorkspaceSnapshotsResult:
      type: object
      properties:
        RebuildSnapshots:
          $ref: "#/components/schemas/SnapshotList"
        RestoreSnapshots:
          $ref: "#/components/schemas/SnapshotList"
    DescribeWorkspaceSnapshotsRequest:
      type: object
      required:
        - WorkspaceId
      properties:
        WorkspaceId:
          $ref: "#/components/schemas/WorkspaceId"
    DescribeWorkspacesResult:
      type: object
      properties:
        Workspaces:
          $ref: "#/components/schemas/WorkspaceList"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
    DescribeWorkspacesRequest:
      type: object
      properties:
        WorkspaceIds:
          $ref: "#/components/schemas/WorkspaceIdList"
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        UserName:
          $ref: "#/components/schemas/UserName"
        BundleId:
          $ref: "#/components/schemas/BundleId"
        Limit:
          $ref: "#/components/schemas/Limit"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
    DescribeWorkspacesConnectionStatusResult:
      type: object
      properties:
        WorkspacesConnectionStatus:
          $ref: "#/components/schemas/WorkspaceConnectionStatusList"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
    DescribeWorkspacesConnectionStatusRequest:
      type: object
      properties:
        WorkspaceIds:
          $ref: "#/components/schemas/WorkspaceIdList"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
    DisassociateIpGroupsResult:
      type: object
      properties: {}
    DisassociateIpGroupsRequest:
      type: object
      required:
        - DirectoryId
        - GroupIds
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        GroupIds:
          $ref: "#/components/schemas/IpGroupIdList"
    ImportWorkspaceImageResult:
      type: object
      properties:
        ImageId:
          $ref: "#/components/schemas/WorkspaceImageId"
    ImportWorkspaceImageRequest:
      type: object
      required:
        - Ec2ImageId
        - IngestionProcess
        - ImageName
        - ImageDescription
      properties:
        Ec2ImageId:
          $ref: "#/components/schemas/Ec2ImageId"
        IngestionProcess:
          $ref: "#/components/schemas/WorkspaceImageIngestionProcess"
        ImageName:
          $ref: "#/components/schemas/WorkspaceImageName"
        ImageDescription:
          $ref: "#/components/schemas/WorkspaceImageDescription"
        Tags:
          $ref: "#/components/schemas/TagList"
    ListAvailableManagementCidrRangesResult:
      type: object
      properties:
        ManagementCidrRanges:
          $ref: "#/components/schemas/DedicatedTenancyCidrRangeList"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
    ListAvailableManagementCidrRangesRequest:
      type: object
      required:
        - ManagementCidrRangeConstraint
      properties:
        ManagementCidrRangeConstraint:
          $ref: "#/components/schemas/ManagementCidrRangeConstraint"
        MaxResults:
          $ref: "#/components/schemas/ManagementCidrRangeMaxResults"
        NextToken:
          $ref: "#/components/schemas/PaginationToken"
    ModifyAccountResult:
      type: object
      properties: {}
    ModifyAccountRequest:
      type: object
      properties:
        DedicatedTenancySupport:
          $ref: "#/components/schemas/DedicatedTenancySupportEnum"
        DedicatedTenancyManagementCidrRange:
          $ref: "#/components/schemas/DedicatedTenancyManagementCidrRange"
    ModifyClientPropertiesResult:
      type: object
      properties: {}
    ModifyClientPropertiesRequest:
      type: object
      required:
        - ResourceId
        - ClientProperties
      properties:
        ResourceId:
          $ref: "#/components/schemas/NonEmptyString"
        ClientProperties:
          $ref: "#/components/schemas/ClientProperties"
    ModifyWorkspacePropertiesResult:
      type: object
      properties: {}
    ModifyWorkspacePropertiesRequest:
      type: object
      required:
        - WorkspaceId
        - WorkspaceProperties
      properties:
        WorkspaceId:
          $ref: "#/components/schemas/WorkspaceId"
        WorkspaceProperties:
          $ref: "#/components/schemas/WorkspaceProperties"
    OperationInProgressException: {}
    UnsupportedWorkspaceConfigurationException: {}
    ModifyWorkspaceStateResult:
      type: object
      properties: {}
    ModifyWorkspaceStateRequest:
      type: object
      required:
        - WorkspaceId
        - WorkspaceState
      properties:
        WorkspaceId:
          $ref: "#/components/schemas/WorkspaceId"
        WorkspaceState:
          $ref: "#/components/schemas/TargetWorkspaceState"
    RebootWorkspacesResult:
      type: object
      properties:
        FailedRequests:
          $ref: "#/components/schemas/FailedRebootWorkspaceRequests"
    RebootWorkspacesRequest:
      type: object
      required:
        - RebootWorkspaceRequests
      properties:
        RebootWorkspaceRequests:
          $ref: "#/components/schemas/RebootWorkspaceRequests"
    RebuildWorkspacesResult:
      type: object
      properties:
        FailedRequests:
          $ref: "#/components/schemas/FailedRebuildWorkspaceRequests"
    RebuildWorkspacesRequest:
      type: object
      required:
        - RebuildWorkspaceRequests
      properties:
        RebuildWorkspaceRequests:
          $ref: "#/components/schemas/RebuildWorkspaceRequests"
    RestoreWorkspaceResult:
      type: object
      properties: {}
    RestoreWorkspaceRequest:
      type: object
      required:
        - WorkspaceId
      properties:
        WorkspaceId:
          $ref: "#/components/schemas/WorkspaceId"
    RevokeIpRulesResult:
      type: object
      properties: {}
    RevokeIpRulesRequest:
      type: object
      required:
        - GroupId
        - UserRules
      properties:
        GroupId:
          $ref: "#/components/schemas/IpGroupId"
        UserRules:
          $ref: "#/components/schemas/IpRevokedRuleList"
    StartWorkspacesResult:
      type: object
      properties:
        FailedRequests:
          $ref: "#/components/schemas/FailedStartWorkspaceRequests"
    StartWorkspacesRequest:
      type: object
      required:
        - StartWorkspaceRequests
      properties:
        StartWorkspaceRequests:
          $ref: "#/components/schemas/StartWorkspaceRequests"
    StopWorkspacesResult:
      type: object
      properties:
        FailedRequests:
          $ref: "#/components/schemas/FailedStopWorkspaceRequests"
    StopWorkspacesRequest:
      type: object
      required:
        - StopWorkspaceRequests
      properties:
        StopWorkspaceRequests:
          $ref: "#/components/schemas/StopWorkspaceRequests"
    TerminateWorkspacesResult:
      type: object
      properties:
        FailedRequests:
          $ref: "#/components/schemas/FailedTerminateWorkspaceRequests"
    TerminateWorkspacesRequest:
      type: object
      required:
        - TerminateWorkspaceRequests
      properties:
        TerminateWorkspaceRequests:
          $ref: "#/components/schemas/TerminateWorkspaceRequests"
    UpdateRulesOfIpGroupResult:
      type: object
      properties: {}
    UpdateRulesOfIpGroupRequest:
      type: object
      required:
        - GroupId
        - UserRules
      properties:
        GroupId:
          $ref: "#/components/schemas/IpGroupId"
        UserRules:
          $ref: "#/components/schemas/IpRuleList"
    ARN:
      type: string
      pattern: ^arn:aws:[A-Za-z0-9][A-za-z0-9_/.-]{0,62}:[A-za-z0-9_/.-]{0,63}:[A-za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-za-z0-9_/.-]{0,127}$
    DedicatedTenancyModificationStateEnum:
      type: string
      enum:
        - PENDING
        - COMPLETED
        - FAILED
    DedicatedTenancySupportResultEnum:
      type: string
      enum:
        - ENABLED
        - DISABLED
    DedicatedTenancyManagementCidrRange:
      type: string
      pattern: (^([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.0\.0)(\/(16$))$
    Timestamp:
      type: string
      format: date-time
    WorkspaceErrorCode:
      type: string
    Description:
      type: string
    AccountModification:
      type: object
      properties:
        ModificationState:
          $ref: "#/components/schemas/DedicatedTenancyModificationStateEnum"
        DedicatedTenancySupport:
          $ref: "#/components/schemas/DedicatedTenancySupportResultEnum"
        DedicatedTenancyManagementCidrRange:
          $ref: "#/components/schemas/DedicatedTenancyManagementCidrRange"
        StartTime:
          $ref: "#/components/schemas/Timestamp"
        ErrorCode:
          $ref: "#/components/schemas/WorkspaceErrorCode"
        ErrorMessage:
          $ref: "#/components/schemas/Description"
      description: "Describes a modification to the configuration of bring your own license
        (BYOL) for the specified account. "
    AccountModificationList:
      type: array
      items:
        $ref: "#/components/schemas/AccountModification"
    Alias:
      type: string
    DirectoryId:
      type: string
      pattern: ^d-[0-9a-f]{8,63}$
    IpGroupIdList:
      type: array
      items:
        $ref: "#/components/schemas/IpGroupId"
    IpGroupId:
      type: string
      pattern: wsipg-[0-9a-z]{8,63}$
    IpRuleList:
      type: array
      items:
        $ref: "#/components/schemas/IpRuleItem"
    BooleanObject:
      type: boolean
    BundleId:
      type: string
      pattern: ^wsb-[0-9a-z]{8,63}$
    BundleIdList:
      type: array
      items:
        $ref: "#/components/schemas/BundleId"
      minItems: 1
      maxItems: 25
    WorkspaceBundle:
      type: object
      properties:
        BundleId:
          $ref: "#/components/schemas/BundleId"
        Name:
          $ref: "#/components/schemas/NonEmptyString"
        Owner:
          $ref: "#/components/schemas/BundleOwner"
        Description:
          $ref: "#/components/schemas/Description"
        RootStorage:
          $ref: "#/components/schemas/RootStorage"
        UserStorage:
          $ref: "#/components/schemas/UserStorage"
        ComputeType:
          $ref: "#/components/schemas/ComputeType"
      description: Describes a WorkSpace bundle.
    BundleList:
      type: array
      items:
        $ref: "#/components/schemas/WorkspaceBundle"
    BundleOwner:
      type: string
    ReconnectEnum:
      type: string
      enum:
        - ENABLED
        - DISABLED
    ClientProperties:
      type: object
      properties:
        ReconnectEnabled:
          $ref: "#/components/schemas/ReconnectEnum"
      description: Describes an Amazon WorkSpaces client.
    ClientPropertiesResult:
      type: object
      properties:
        ResourceId:
          $ref: "#/components/schemas/NonEmptyString"
        ClientProperties:
          $ref: "#/components/schemas/ClientProperties"
      description: Information about the Amazon WorkSpaces client.
    ClientPropertiesList:
      type: array
      items:
        $ref: "#/components/schemas/ClientPropertiesResult"
    NonEmptyString:
      type: string
      minLength: 1
    Compute:
      type: string
      enum:
        - VALUE
        - STANDARD
        - PERFORMANCE
        - POWER
        - GRAPHICS
        - POWERPRO
        - GRAPHICSPRO
    ComputeType:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/Compute"
      description: Describes the compute type.
    ComputerName:
      type: string
    ConnectionState:
      type: string
      enum:
        - CONNECTED
        - DISCONNECTED
        - UNKNOWN
    WorkspaceImageName:
      type: string
      pattern: ^[a-zA-Z0-9_./()\\-]+$
      minLength: 1
      maxLength: 64
    WorkspaceImageDescription:
      type: string
      pattern: ^[a-zA-Z0-9_./() -]+$
      minLength: 1
      maxLength: 256
    WorkspaceImageId:
      type: string
      pattern: wsi-[0-9a-z]{9,63}$
    Region:
      type: string
      pattern: ^[-0-9a-z]{1,31}$
      minLength: 1
      maxLength: 31
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    IpGroupName:
      type: string
    IpGroupDesc:
      type: string
    WorkspaceRequestList:
      type: array
      items:
        $ref: "#/components/schemas/WorkspaceRequest"
      minItems: 1
      maxItems: 25
    FailedCreateWorkspaceRequests:
      type: array
      items:
        $ref: "#/components/schemas/FailedCreateWorkspaceRequest"
    WorkspaceList:
      type: array
      items:
        $ref: "#/components/schemas/Workspace"
    DedicatedTenancyCidrRangeList:
      type: array
      items:
        $ref: "#/components/schemas/DedicatedTenancyManagementCidrRange"
    DedicatedTenancySupportEnum:
      type: string
      enum:
        - ENABLED
    DefaultOu:
      type: string
    SecurityGroupId:
      type: string
      pattern: ^(sg-[0-9a-f]{8})$
    DefaultWorkspaceCreationProperties:
      type: object
      properties:
        EnableWorkDocs:
          $ref: "#/components/schemas/BooleanObject"
        EnableInternetAccess:
          $ref: "#/components/schemas/BooleanObject"
        DefaultOu:
          $ref: "#/components/schemas/DefaultOu"
        CustomSecurityGroupId:
          $ref: "#/components/schemas/SecurityGroupId"
        UserEnabledAsLocalAdministrator:
          $ref: "#/components/schemas/BooleanObject"
      description: Describes the default values used to create a WorkSpace.
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/NonEmptyString"
    PaginationToken:
      type: string
      minLength: 1
      maxLength: 63
    ResourceIdList:
      type: array
      items:
        $ref: "#/components/schemas/NonEmptyString"
      minItems: 1
      maxItems: 25
    Limit:
      type: integer
      minimum: 1
      maximum: 25
    WorkspacesIpGroupsList:
      type: array
      items:
        $ref: "#/components/schemas/WorkspacesIpGroup"
    DirectoryIdList:
      type: array
      items:
        $ref: "#/components/schemas/DirectoryId"
      minItems: 1
      maxItems: 25
    DirectoryList:
      type: array
      items:
        $ref: "#/components/schemas/WorkspaceDirectory"
    WorkspaceImageIdList:
      type: array
      items:
        $ref: "#/components/schemas/WorkspaceImageId"
      minItems: 1
      maxItems: 25
    WorkspaceImageList:
      type: array
      items:
        $ref: "#/components/schemas/WorkspaceImage"
    WorkspaceId:
      type: string
      pattern: ^ws-[0-9a-z]{8,63}$
    SnapshotList:
      type: array
      items:
        $ref: "#/components/schemas/Snapshot"
    WorkspaceIdList:
      type: array
      items:
        $ref: "#/components/schemas/WorkspaceId"
      minItems: 1
      maxItems: 25
    WorkspaceConnectionStatusList:
      type: array
      items:
        $ref: "#/components/schemas/WorkspaceConnectionStatus"
    UserName:
      type: string
      minLength: 1
      maxLength: 63
    WorkspaceDirectory:
      type: object
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        Alias:
          $ref: "#/components/schemas/Alias"
        DirectoryName:
          $ref: "#/components/schemas/DirectoryName"
        RegistrationCode:
          $ref: "#/components/schemas/RegistrationCode"
        SubnetIds:
          $ref: "#/components/schemas/SubnetIds"
        DnsIpAddresses:
          $ref: "#/components/schemas/DnsIpAddresses"
        CustomerUserName:
          $ref: "#/components/schemas/UserName"
        IamRoleId:
          $ref: "#/components/schemas/ARN"
        DirectoryType:
          $ref: "#/components/schemas/WorkspaceDirectoryType"
        WorkspaceSecurityGroupId:
          $ref: "#/components/schemas/SecurityGroupId"
        State:
          $ref: "#/components/schemas/WorkspaceDirectoryState"
        WorkspaceCreationProperties:
          $ref: "#/components/schemas/DefaultWorkspaceCreationProperties"
        ipGroupIds:
          $ref: "#/components/schemas/IpGroupIdList"
      description: Describes an AWS Directory Service directory that is used with Amazon
        WorkSpaces.
    DirectoryName:
      type: string
    IpAddress:
      type: string
    DnsIpAddresses:
      type: array
      items:
        $ref: "#/components/schemas/IpAddress"
    Ec2ImageId:
      type: string
      pattern: ^ami\-([a-f0-9]{8}|[a-f0-9]{17})$
    ErrorType:
      type: string
    WorkspaceRequest:
      type: object
      required:
        - DirectoryId
        - UserName
        - BundleId
      properties:
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        UserName:
          $ref: "#/components/schemas/UserName"
        BundleId:
          $ref: "#/components/schemas/BundleId"
        VolumeEncryptionKey:
          $ref: "#/components/schemas/VolumeEncryptionKey"
        UserVolumeEncryptionEnabled:
          $ref: "#/components/schemas/BooleanObject"
        RootVolumeEncryptionEnabled:
          $ref: "#/components/schemas/BooleanObject"
        WorkspaceProperties:
          $ref: "#/components/schemas/WorkspaceProperties"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: Describes the information used to create a WorkSpace.
    FailedCreateWorkspaceRequest:
      type: object
      properties:
        WorkspaceRequest:
          $ref: "#/components/schemas/WorkspaceRequest"
        ErrorCode:
          $ref: "#/components/schemas/ErrorType"
        ErrorMessage:
          $ref: "#/components/schemas/Description"
      description: Describes a WorkSpace that cannot be created.
    FailedWorkspaceChangeRequest:
      type: object
      properties:
        WorkspaceId:
          $ref: "#/components/schemas/WorkspaceId"
        ErrorCode:
          $ref: "#/components/schemas/ErrorType"
        ErrorMessage:
          $ref: "#/components/schemas/Description"
      description: Describes a WorkSpace that could not be rebooted.
        (<a>RebootWorkspaces</a>), rebuilt (<a>RebuildWorkspaces</a>), restored
        (<a>RestoreWorkspace</a>), terminated (<a>TerminateWorkspaces</a>),
        started (<a>StartWorkspaces</a>), or stopped (<a>StopWorkspaces</a>).
    FailedRebootWorkspaceRequests:
      type: array
      items:
        $ref: "#/components/schemas/FailedWorkspaceChangeRequest"
    FailedRebuildWorkspaceRequests:
      type: array
      items:
        $ref: "#/components/schemas/FailedWorkspaceChangeRequest"
    FailedStartWorkspaceRequests:
      type: array
      items:
        $ref: "#/components/schemas/FailedWorkspaceChangeRequest"
    FailedStopWorkspaceRequests:
      type: array
      items:
        $ref: "#/components/schemas/FailedWorkspaceChangeRequest"
    FailedTerminateWorkspaceRequests:
      type: array
      items:
        $ref: "#/components/schemas/FailedWorkspaceChangeRequest"
    WorkspaceImageIngestionProcess:
      type: string
      enum:
        - BYOL_REGULAR
        - BYOL_GRAPHICS
        - BYOL_GRAPHICSPRO
    IpRule:
      type: string
    IpRevokedRuleList:
      type: array
      items:
        $ref: "#/components/schemas/IpRule"
    IpRuleDesc:
      type: string
    IpRuleItem:
      type: object
      properties:
        ipRule:
          $ref: "#/components/schemas/IpRule"
        ruleDesc:
          $ref: "#/components/schemas/IpRuleDesc"
      description: Describes a rule for an IP access control group.
    ManagementCidrRangeConstraint:
      type: string
      pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[1-2][0-9]|[0-9]))$
    ManagementCidrRangeMaxResults:
      type: integer
      minimum: 1
      maximum: 5
    ModificationResourceEnum:
      type: string
      enum:
        - ROOT_VOLUME
        - USER_VOLUME
        - COMPUTE_TYPE
    ModificationStateEnum:
      type: string
      enum:
        - UPDATE_INITIATED
        - UPDATE_IN_PROGRESS
    ModificationState:
      type: object
      properties:
        Resource:
          $ref: "#/components/schemas/ModificationResourceEnum"
        State:
          $ref: "#/components/schemas/ModificationStateEnum"
      description: Describes a WorkSpace modification.
    ModificationStateList:
      type: array
      items:
        $ref: "#/components/schemas/ModificationState"
    WorkspaceProperties:
      type: object
      properties:
        RunningMode:
          $ref: "#/components/schemas/RunningMode"
        RunningModeAutoStopTimeoutInMinutes:
          $ref: "#/components/schemas/RunningModeAutoStopTimeoutInMinutes"
        RootVolumeSizeGib:
          $ref: "#/components/schemas/RootVolumeSizeGib"
        UserVolumeSizeGib:
          $ref: "#/components/schemas/UserVolumeSizeGib"
        ComputeTypeName:
          $ref: "#/components/schemas/Compute"
      description: Describes a WorkSpace.
    TargetWorkspaceState:
      type: string
      enum:
        - AVAILABLE
        - ADMIN_MAINTENANCE
    OperatingSystemType:
      type: string
      enum:
        - WINDOWS
        - LINUX
    OperatingSystem:
      type: object
      properties:
        Type:
          $ref: "#/components/schemas/OperatingSystemType"
      description: The operating system that the image is running.
    RebootRequest:
      type: object
      required:
        - WorkspaceId
      properties:
        WorkspaceId:
          $ref: "#/components/schemas/WorkspaceId"
      description: Describes the information used to reboot a WorkSpace.
    RebootWorkspaceRequests:
      type: array
      items:
        $ref: "#/components/schemas/RebootRequest"
      minItems: 1
      maxItems: 25
    RebuildRequest:
      type: object
      required:
        - WorkspaceId
      properties:
        WorkspaceId:
          $ref: "#/components/schemas/WorkspaceId"
      description: Describes the information used to rebuild a WorkSpace.
    RebuildWorkspaceRequests:
      type: array
      items:
        $ref: "#/components/schemas/RebuildRequest"
      minItems: 1
      maxItems: 1
    RegistrationCode:
      type: string
      minLength: 1
      maxLength: 20
    RootStorage:
      type: object
      properties:
        Capacity:
          $ref: "#/components/schemas/NonEmptyString"
      description: Describes the root volume for a WorkSpace bundle.
    RootVolumeSizeGib:
      type: integer
    RunningMode:
      type: string
      enum:
        - AUTO_STOP
        - ALWAYS_ON
    RunningModeAutoStopTimeoutInMinutes:
      type: integer
    Snapshot:
      type: object
      properties:
        SnapshotTime:
          $ref: "#/components/schemas/Timestamp"
      description: Describes a snapshot.
    StartRequest:
      type: object
      properties:
        WorkspaceId:
          $ref: "#/components/schemas/WorkspaceId"
      description: Information used to start a WorkSpace.
    StartWorkspaceRequests:
      type: array
      items:
        $ref: "#/components/schemas/StartRequest"
      minItems: 1
      maxItems: 25
    StopRequest:
      type: object
      properties:
        WorkspaceId:
          $ref: "#/components/schemas/WorkspaceId"
      description: Describes the information used to stop a WorkSpace.
    StopWorkspaceRequests:
      type: array
      items:
        $ref: "#/components/schemas/StopRequest"
      minItems: 1
      maxItems: 25
    SubnetId:
      type: string
      pattern: ^(subnet-[0-9a-f]{8})$
    SubnetIds:
      type: array
      items:
        $ref: "#/components/schemas/SubnetId"
    TagKey:
      type: string
      minLength: 1
      maxLength: 127
    TagValue:
      type: string
      maxLength: 255
    Tag:
      type: object
      required:
        - Key
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
        Value:
          $ref: "#/components/schemas/TagValue"
      description: Describes a tag.
    TerminateRequest:
      type: object
      required:
        - WorkspaceId
      properties:
        WorkspaceId:
          $ref: "#/components/schemas/WorkspaceId"
      description: Describes the information used to terminate a WorkSpace.
    TerminateWorkspaceRequests:
      type: array
      items:
        $ref: "#/components/schemas/TerminateRequest"
      minItems: 1
      maxItems: 25
    UserStorage:
      type: object
      properties:
        Capacity:
          $ref: "#/components/schemas/NonEmptyString"
      description: Describes the user storage for a WorkSpace bundle.
    UserVolumeSizeGib:
      type: integer
    VolumeEncryptionKey:
      type: string
    WorkspaceState:
      type: string
      enum:
        - PENDING
        - AVAILABLE
        - IMPAIRED
        - UNHEALTHY
        - REBOOTING
        - STARTING
        - REBUILDING
        - RESTORING
        - MAINTENANCE
        - ADMIN_MAINTENANCE
        - TERMINATING
        - TERMINATED
        - SUSPENDED
        - UPDATING
        - STOPPING
        - STOPPED
        - ERROR
    Workspace:
      type: object
      properties:
        WorkspaceId:
          $ref: "#/components/schemas/WorkspaceId"
        DirectoryId:
          $ref: "#/components/schemas/DirectoryId"
        UserName:
          $ref: "#/components/schemas/UserName"
        IpAddress:
          $ref: "#/components/schemas/IpAddress"
        State:
          $ref: "#/components/schemas/WorkspaceState"
        BundleId:
          $ref: "#/components/schemas/BundleId"
        SubnetId:
          $ref: "#/components/schemas/SubnetId"
        ErrorMessage:
          $ref: "#/components/schemas/Description"
        ErrorCode:
          $ref: "#/components/schemas/WorkspaceErrorCode"
        ComputerName:
          $ref: "#/components/schemas/ComputerName"
        VolumeEncryptionKey:
          $ref: "#/components/schemas/VolumeEncryptionKey"
        UserVolumeEncryptionEnabled:
          $ref: "#/components/schemas/BooleanObject"
        RootVolumeEncryptionEnabled:
          $ref: "#/components/schemas/BooleanObject"
        WorkspaceProperties:
          $ref: "#/components/schemas/WorkspaceProperties"
        ModificationStates:
          $ref: "#/components/schemas/ModificationStateList"
      description: Describes a WorkSpace.
    WorkspaceConnectionStatus:
      type: object
      properties:
        WorkspaceId:
          $ref: "#/components/schemas/WorkspaceId"
        ConnectionState:
          $ref: "#/components/schemas/ConnectionState"
        ConnectionStateCheckTimestamp:
          $ref: "#/components/schemas/Timestamp"
        LastKnownUserConnectionTimestamp:
          $ref: "#/components/schemas/Timestamp"
      description: Describes the connection status of a WorkSpace.
    WorkspaceDirectoryType:
      type: string
      enum:
        - SIMPLE_AD
        - AD_CONNECTOR
    WorkspaceDirectoryState:
      type: string
      enum:
        - REGISTERING
        - REGISTERED
        - DEREGISTERING
        - DEREGISTERED
        - ERROR
    WorkspaceImageState:
      type: string
      enum:
        - AVAILABLE
        - PENDING
        - ERROR
    WorkspaceImageRequiredTenancy:
      type: string
      enum:
        - DEFAULT
        - DEDICATED
    WorkspaceImageErrorCode:
      type: string
    WorkspaceImage:
      type: object
      properties:
        ImageId:
          $ref: "#/components/schemas/WorkspaceImageId"
        Name:
          $ref: "#/components/schemas/WorkspaceImageName"
        Description:
          $ref: "#/components/schemas/WorkspaceImageDescription"
        OperatingSystem:
          $ref: "#/components/schemas/OperatingSystem"
        State:
          $ref: "#/components/schemas/WorkspaceImageState"
        RequiredTenancy:
          $ref: "#/components/schemas/WorkspaceImageRequiredTenancy"
        ErrorCode:
          $ref: "#/components/schemas/WorkspaceImageErrorCode"
        ErrorMessage:
          $ref: "#/components/schemas/Description"
      description: Describes a WorkSpace image.
    WorkspacesIpGroup:
      type: object
      properties:
        groupId:
          $ref: "#/components/schemas/IpGroupId"
        groupName:
          $ref: "#/components/schemas/IpGroupName"
        groupDesc:
          $ref: "#/components/schemas/IpGroupDesc"
        userRules:
          $ref: "#/components/schemas/IpRuleList"
      description: Describes an IP access control group.
