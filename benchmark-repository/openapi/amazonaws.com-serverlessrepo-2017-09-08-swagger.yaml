openapi: 3.0.0
info:
  version: 2017-09-08
  x-release: v4
  title: AWSServerlessApplicationRepository
  description: >-
    <p>The AWS Serverless Application Repository makes it easy for developers
    and enterprises to quickly find
     and deploy serverless applications in the AWS Cloud. For more information about serverless applications,
     see Serverless Computing and Applications on the AWS website.</p><p>The AWS Serverless Application Repository is deeply integrated with the AWS Lambda console, so that developers of 
     all levels can get started with serverless computing without needing to learn anything new. You can use category 
     keywords to browse for applications such as web and mobile backends, data processing applications, or chatbots. 
     You can also search for applications by name, publisher, or event source. To use an application, you simply choose it, 
     configure any required fields, and deploy it with a few clicks. </p><p>You can also easily publish applications, sharing them publicly with the community at large, or privately
     within your team or across your organization. To publish a serverless application (or app), you can use the
     AWS Management Console, AWS Command Line Interface (AWS CLI), or AWS SDKs to upload the code. Along with the
     code, you upload a simple manifest file, also known as the AWS Serverless Application Model (AWS SAM) template.
     For more information about AWS SAM, see AWS Serverless Application Model (AWS SAM) on the AWS Labs
     GitHub repository.</p><p>The AWS Serverless Application Repository Developer Guide contains more information about the two developer
     experiences available:</p><ul>
     <li>
     <p>Consuming Applications – Browse for applications and view information about them, including
     source code and readme files. Also install, configure, and deploy applications of your choosing. </p>
     <p>Publishing Applications – Configure and upload applications to make them available to other
     developers, and publish new versions of applications. </p>
     </li>
     </ul>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: serverlessrepo
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/serverlessrepo-2017-09-08.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/serverlessrepo/
security:
  - hmac: []
paths:
  /applications:
    post:
      operationId: CreateApplication
      description: Creates an application, optionally including an AWS SAM file to create
        the first application version in the same call.
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateApplicationResponse"
        "480":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "481":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "482":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - author
                - description
                - name
              properties:
                author:
                  description: <p>The name of the author publishing the app.</p><p>Minimum
                    length=1. Maximum length=127.</p><p>Pattern
                    "^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$";</p>
                  type: string
                description:
                  description: <p>The description of the application.</p><p>Minimum
                    length=1. Maximum length=256</p>
                  type: string
                homePageUrl:
                  description: A URL with more information about the application, for
                    example the location of your GitHub repository for the
                    application.
                  type: string
                labels:
                  description: '<p>Labels to improve discovery of apps in search
                    results.</p><p>Minimum length=1. Maximum length=127. Maximum
                    number of labels: 10</p><p>Pattern:
                    "^[a-zA-Z0-9+\\-_:\\/@]+$";</p>'
                  type: array
                  items:
                    $ref: "#/components/schemas/__string"
                licenseBody:
                  description: >-
                    <p>A local text file that contains the license of the app
                    that matches the spdxLicenseID value of your application.
                     The file has the format file://&lt;path>/&lt;filename>.</p><p>Maximum size 5 MB</p><p>You can specify only one of licenseBody and licenseUrl; otherwise, an error results.</p>
                  type: string
                licenseUrl:
                  description: <p>A link to the S3 object that contains the license of the
                    app that matches the spdxLicenseID value of your
                    application.</p><p>Maximum size 5 MB</p><p>You can specify
                    only one of licenseBody and licenseUrl; otherwise, an error
                    results.</p>
                  type: string
                name:
                  description: '<p>The name of the application that you want to
                    publish.</p><p>Minimum length=1. Maximum
                    length=140</p><p>Pattern: "[a-zA-Z0-9\\-]+";</p>'
                  type: string
                readmeBody:
                  description: >-
                    <p>A local text readme file in Markdown language that
                    contains a more detailed description of the application and
                    how it works.
                     The file has the format file://&lt;path>/&lt;filename>.</p><p>Maximum size 5 MB</p><p>You can specify only one of readmeBody and readmeUrl; otherwise, an error results.</p>
                  type: string
                readmeUrl:
                  description: <p>A link to the S3 object in Markdown language that
                    contains a more detailed description of the application and
                    how it works.</p><p>Maximum size 5 MB</p><p>You can specify
                    only one of readmeBody and readmeUrl; otherwise, an error
                    results.</p>
                  type: string
                semanticVersion:
                  description: |-
                    <p>The semantic version of the application:</p><p>
                     <a href="https://semver.org/">https://semver.org/</a>
                     </p>
                  type: string
                sourceCodeArchiveUrl:
                  description: <p>A link to the S3 object that contains the ZIP archive of
                    the source code for this version of your
                    application.</p><p>Maximum size 50 MB</p>
                  type: string
                sourceCodeUrl:
                  description: A link to a public repository for the source code of your
                    application, for example the URL of a specific GitHub
                    commit.
                  type: string
                spdxLicenseId:
                  description: A valid identifier from <a
                    href="https://spdx.org/licenses/">https://spdx.org/licenses/</a>.
                  type: string
                templateBody:
                  description: >-
                    <p>The local raw packaged AWS SAM template file of your
                    application.
                     The file has the format file://&lt;path>/&lt;filename>.</p><p>You can specify only one of templateBody and templateUrl; otherwise an error results.</p>
                  type: string
                templateUrl:
                  description: <p>A link to the S3 object containing the packaged AWS SAM
                    template of your application.</p><p>You can specify only one
                    of templateBody and templateUrl; otherwise an error
                    results.</p>
                  type: string
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListApplications
      description: Lists applications owned by the requester.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListApplicationsResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "482":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "483":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
      parameters:
        - name: maxItems
          in: query
          required: false
          description: The total number of items to return.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: A token to specify where to start paginating.
          schema:
            type: string
        - name: MaxItems
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
  "/applications/{applicationId}/versions/{semanticVersion}":
    put:
      operationId: CreateApplicationVersion
      description: Creates an application version.
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateApplicationVersionResponse"
        "480":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "481":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "482":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
      parameters:
        - name: applicationId
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the application.
          schema:
            type: string
        - name: semanticVersion
          in: path
          required: true
          description: The semantic version of the new version.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sourceCodeArchiveUrl:
                  description: <p>A link to the S3 object that contains the ZIP archive of
                    the source code for this version of your
                    application.</p><p>Maximum size 50 MB</p>
                  type: string
                sourceCodeUrl:
                  description: A link to a public repository for the source code of your
                    application, for example the URL of a specific GitHub
                    commit.
                  type: string
                templateBody:
                  description: The raw packaged AWS SAM template of your application.
                  type: string
                templateUrl:
                  description: A link to the packaged AWS SAM template of your application.
                  type: string
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/applications/{applicationId}/changesets":
    post:
      operationId: CreateCloudFormationChangeSet
      description: Creates an AWS CloudFormation change set for the given application.
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCloudFormationChangeSetResponse"
        "480":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "481":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "482":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "483":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
      parameters:
        - name: applicationId
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the application.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - stackName
              properties:
                capabilities:
                  description: >-
                    <p>A list of values that you must specify before you can
                    deploy certain applications.
                     Some applications might include resources that can affect permissions in your AWS
                     account, for example, by creating new AWS Identity and Access Management (IAM) users.
                     For those applications, you must explicitly acknowledge their capabilities by
                     specifying this parameter.</p><p>The only valid values are CAPABILITY_IAM, CAPABILITY_NAMED_IAM,
                     CAPABILITY_RESOURCE_POLICY, and CAPABILITY_AUTO_EXPAND.</p><p>The following resources require you to specify CAPABILITY_IAM or
                     CAPABILITY_NAMED_IAM:
                     <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html">AWS::IAM::Group</a>,
                     <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html">AWS::IAM::InstanceProfile</a>,
                     <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html">AWS::IAM::Policy</a>, and
                     <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html">AWS::IAM::Role</a>.
                     If the application contains IAM resources, you can specify either CAPABILITY_IAM
                     or CAPABILITY_NAMED_IAM. If the application contains IAM resources
                     with custom names, you must specify CAPABILITY_NAMED_IAM.</p><p>The following resources require you to specify CAPABILITY_RESOURCE_POLICY:
                     <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html">AWS::Lambda::Permission</a>,
                     <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-policy.html">AWS::IAM:Policy</a>,
                     <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-applicationautoscaling-scalingpolicy.html">AWS::ApplicationAutoScaling::ScalingPolicy</a>,
                     <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html">AWS::S3::BucketPolicy</a>,
                     <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sqs-policy.html">AWS::SQS::QueuePolicy</a>, and
                     <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sns-policy.html">AWS::SNS:TopicPolicy</a>.</p><p>Applications that contain one or more nested applications require you to specify
                     CAPABILITY_AUTO_EXPAND.</p><p>If your application template contains any of the above resources, we recommend that you review
                     all permissions associated with the application before deploying. If you don't specify
                     this parameter for an application that requires capabilities, the call will fail.</p>
                  type: array
                  items:
                    $ref: "#/components/schemas/__string"
                changeSetName:
                  description: >-
                    This property corresponds to the parameter of the same name
                    for the <i>AWS CloudFormation <a
                    href="https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/CreateChangeSet">CreateChangeSet</a>
                     </i> API.
                  type: string
                clientToken:
                  description: >-
                    This property corresponds to the parameter of the same name
                    for the <i>AWS CloudFormation <a
                    href="https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/CreateChangeSet">CreateChangeSet</a>
                     </i> API.
                  type: string
                description:
                  description: >-
                    This property corresponds to the parameter of the same name
                    for the <i>AWS CloudFormation <a
                    href="https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/CreateChangeSet">CreateChangeSet</a>
                     </i> API.
                  type: string
                notificationArns:
                  description: >-
                    This property corresponds to the parameter of the same name
                    for the <i>AWS CloudFormation <a
                    href="https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/CreateChangeSet">CreateChangeSet</a>
                     </i> API.
                  type: array
                  items:
                    $ref: "#/components/schemas/__string"
                parameterOverrides:
                  description: A list of parameter values for the parameters of the
                    application.
                  type: array
                  items:
                    $ref: "#/components/schemas/ParameterValue"
                resourceTypes:
                  description: >-
                    This property corresponds to the parameter of the same name
                    for the <i>AWS CloudFormation <a
                    href="https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/CreateChangeSet">CreateChangeSet</a>
                     </i> API.
                  type: array
                  items:
                    $ref: "#/components/schemas/__string"
                rollbackConfiguration:
                  description: >-
                    This property corresponds to the <i>AWS CloudFormation <a
                    href="https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/RollbackConfiguration">RollbackConfiguration</a>
                     </i> Data Type.
                  type: object
                  properties:
                    MonitoringTimeInMinutes:
                      $ref: "#/components/schemas/__integer"
                    RollbackTriggers:
                      $ref: "#/components/schemas/__listOfRollbackTrigger"
                semanticVersion:
                  description: |-
                    <p>The semantic version of the application:</p><p>
                     <a href="https://semver.org/">https://semver.org/</a>
                     </p>
                  type: string
                stackName:
                  description: >-
                    This property corresponds to the parameter of the same name
                    for the <i>AWS CloudFormation <a
                    href="https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/CreateChangeSet">CreateChangeSet</a>
                     </i> API.
                  type: string
                tags:
                  description: >-
                    This property corresponds to the parameter of the same name
                    for the <i>AWS CloudFormation <a
                    href="https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/CreateChangeSet">CreateChangeSet</a>
                     </i> API.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                templateId:
                  description: "<p>The UUID returned by
                    CreateCloudFormationTemplate.</p><p>Pattern:
                    [0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA\
                    -F]{4}\\-[0-9a-fA-F]{12}</p>"
                  type: string
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/applications/{applicationId}/templates":
    post:
      operationId: CreateCloudFormationTemplate
      description: Creates an AWS CloudFormation template.
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCloudFormationTemplateResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "483":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "484":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
      parameters:
        - name: applicationId
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the application.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                semanticVersion:
                  description: |-
                    <p>The semantic version of the application:</p><p>
                     <a href="https://semver.org/">https://semver.org/</a>
                     </p>
                  type: string
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/applications/{applicationId}":
    delete:
      operationId: DeleteApplication
      description: Deletes the specified application.
      responses:
        "204":
          description: Success
        "480":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "481":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "482":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "485":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
      parameters:
        - name: applicationId
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the application.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetApplication
      description: Gets the specified application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetApplicationResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "483":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "484":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
      parameters:
        - name: applicationId
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the application.
          schema:
            type: string
        - name: semanticVersion
          in: query
          required: false
          description: The semantic version of the application to get.
          schema:
            type: string
    patch:
      operationId: UpdateApplication
      description: Updates the specified application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateApplicationResponse"
        "480":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "481":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "482":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "485":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
      parameters:
        - name: applicationId
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the application.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                author:
                  description: <p>The name of the author publishing the app.</p><p>Minimum
                    length=1. Maximum length=127.</p><p>Pattern
                    "^[a-z0-9](([a-z0-9]|-(?!-))*[a-z0-9])?$";</p>
                  type: string
                description:
                  description: <p>The description of the application.</p><p>Minimum
                    length=1. Maximum length=256</p>
                  type: string
                homePageUrl:
                  description: A URL with more information about the application, for
                    example the location of your GitHub repository for the
                    application.
                  type: string
                labels:
                  description: '<p>Labels to improve discovery of apps in search
                    results.</p><p>Minimum length=1. Maximum length=127. Maximum
                    number of labels: 10</p><p>Pattern:
                    "^[a-zA-Z0-9+\\-_:\\/@]+$";</p>'
                  type: array
                  items:
                    $ref: "#/components/schemas/__string"
                readmeBody:
                  description: <p>A text readme file in Markdown language that contains a
                    more detailed description of the application and how it
                    works.</p><p>Maximum size 5 MB</p>
                  type: string
                readmeUrl:
                  description: <p>A link to the readme file in Markdown language that
                    contains a more detailed description of the application and
                    how it works.</p><p>Maximum size 5 MB</p>
                  type: string
        required: true
  "/applications/{applicationId}/policy":
    get:
      operationId: GetApplicationPolicy
      description: Retrieves the policy for the application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetApplicationPolicyResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "483":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "484":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
      parameters:
        - name: applicationId
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the application.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    put:
      operationId: PutApplicationPolicy
      description: >-
        Sets the permission policy for an application. For the list of actions
        supported for this operation, see
         <a href="https://docs.aws.amazon.com/serverlessrepo/latest/devguide/access-control-resource-based.html#application-permissions">Application 
         Permissions</a>
         .
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutApplicationPolicyResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "483":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "484":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
      parameters:
        - name: applicationId
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the application.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - statements
              properties:
                statements:
                  description: An array of policy statements applied to the application.
                  type: array
                  items:
                    $ref: "#/components/schemas/ApplicationPolicyStatement"
        required: true
  "/applications/{applicationId}/templates/{templateId}":
    get:
      operationId: GetCloudFormationTemplate
      description: Gets the specified AWS CloudFormation template.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCloudFormationTemplateResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "483":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "484":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
      parameters:
        - name: applicationId
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the application.
          schema:
            type: string
        - name: templateId
          in: path
          required: true
          description: "<p>The UUID returned by
            CreateCloudFormationTemplate.</p><p>Pattern:
            [0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\\
            -[0-9a-fA-F]{12}</p>"
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/applications/{applicationId}/dependencies":
    get:
      operationId: ListApplicationDependencies
      description: Retrieves the list of applications nested in the containing application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListApplicationDependenciesResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "483":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "484":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
      parameters:
        - name: applicationId
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the application.
          schema:
            type: string
        - name: maxItems
          in: query
          required: false
          description: The total number of items to return.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: A token to specify where to start paginating.
          schema:
            type: string
        - name: semanticVersion
          in: query
          required: false
          description: The semantic version of the application to get.
          schema:
            type: string
        - name: MaxItems
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/applications/{applicationId}/versions":
    get:
      operationId: ListApplicationVersions
      description: Lists versions for the specified application.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListApplicationVersionsResponse"
        "480":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "483":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "484":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
      parameters:
        - name: applicationId
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the application.
          schema:
            type: string
        - name: maxItems
          in: query
          required: false
          description: The total number of items to return.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: A token to specify where to start paginating.
          schema:
            type: string
        - name: MaxItems
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://serverlessrepo.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWSServerlessApplicationRepository multi-region endpoint
  - url: https://serverlessrepo.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWSServerlessApplicationRepository multi-region endpoint
  - url: http://serverlessrepo.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWSServerlessApplicationRepository endpoint for China (Beijing) and
      China (Ningxia)
  - url: https://serverlessrepo.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWSServerlessApplicationRepository endpoint for China (Beijing) and
      China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateApplicationResponse:
      type: object
      properties:
        ApplicationId:
          $ref: "#/components/schemas/__string"
        Author:
          $ref: "#/components/schemas/__string"
        CreationTime:
          $ref: "#/components/schemas/__string"
        Description:
          $ref: "#/components/schemas/__string"
        HomePageUrl:
          $ref: "#/components/schemas/__string"
        Labels:
          $ref: "#/components/schemas/__listOf__string"
        LicenseUrl:
          $ref: "#/components/schemas/__string"
        Name:
          $ref: "#/components/schemas/__string"
        ReadmeUrl:
          $ref: "#/components/schemas/__string"
        SpdxLicenseId:
          $ref: "#/components/schemas/__string"
        Version:
          $ref: "#/components/schemas/Version"
    __string:
      type: string
    TooManyRequestsException: {}
    BadRequestException: {}
    InternalServerErrorException: {}
    ConflictException: {}
    ForbiddenException: {}
    CreateApplicationVersionResponse:
      type: object
      properties:
        ApplicationId:
          $ref: "#/components/schemas/__string"
        CreationTime:
          $ref: "#/components/schemas/__string"
        ParameterDefinitions:
          $ref: "#/components/schemas/__listOfParameterDefinition"
        RequiredCapabilities:
          $ref: "#/components/schemas/__listOfCapability"
        ResourcesSupported:
          $ref: "#/components/schemas/__boolean"
        SemanticVersion:
          $ref: "#/components/schemas/__string"
        SourceCodeArchiveUrl:
          $ref: "#/components/schemas/__string"
        SourceCodeUrl:
          $ref: "#/components/schemas/__string"
        TemplateUrl:
          $ref: "#/components/schemas/__string"
    CreateCloudFormationChangeSetResponse:
      type: object
      properties:
        ApplicationId:
          $ref: "#/components/schemas/__string"
        ChangeSetId:
          $ref: "#/components/schemas/__string"
        SemanticVersion:
          $ref: "#/components/schemas/__string"
        StackId:
          $ref: "#/components/schemas/__string"
    ParameterValue:
      type: object
      required:
        - Value
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/__string"
        Value:
          $ref: "#/components/schemas/__string"
      description: Parameter value of the application.
    __integer:
      type: integer
    __listOfRollbackTrigger:
      type: array
      items:
        $ref: "#/components/schemas/RollbackTrigger"
    Tag:
      type: object
      required:
        - Value
        - Key
      properties:
        Key:
          $ref: "#/components/schemas/__string"
        Value:
          $ref: "#/components/schemas/__string"
      description: >-
        This property corresponds to the <i>AWS CloudFormation <a
        href="https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/Tag">Tag</a>
         </i> Data Type.
    CreateCloudFormationTemplateResponse:
      type: object
      properties:
        ApplicationId:
          $ref: "#/components/schemas/__string"
        CreationTime:
          $ref: "#/components/schemas/__string"
        ExpirationTime:
          $ref: "#/components/schemas/__string"
        SemanticVersion:
          $ref: "#/components/schemas/__string"
        Status:
          $ref: "#/components/schemas/Status"
        TemplateId:
          $ref: "#/components/schemas/__string"
        TemplateUrl:
          $ref: "#/components/schemas/__string"
    NotFoundException: {}
    GetApplicationResponse:
      type: object
      properties:
        ApplicationId:
          $ref: "#/components/schemas/__string"
        Author:
          $ref: "#/components/schemas/__string"
        CreationTime:
          $ref: "#/components/schemas/__string"
        Description:
          $ref: "#/components/schemas/__string"
        HomePageUrl:
          $ref: "#/components/schemas/__string"
        Labels:
          $ref: "#/components/schemas/__listOf__string"
        LicenseUrl:
          $ref: "#/components/schemas/__string"
        Name:
          $ref: "#/components/schemas/__string"
        ReadmeUrl:
          $ref: "#/components/schemas/__string"
        SpdxLicenseId:
          $ref: "#/components/schemas/__string"
        Version:
          $ref: "#/components/schemas/Version"
    GetApplicationPolicyResponse:
      type: object
      properties:
        Statements:
          $ref: "#/components/schemas/__listOfApplicationPolicyStatement"
    GetCloudFormationTemplateResponse:
      type: object
      properties:
        ApplicationId:
          $ref: "#/components/schemas/__string"
        CreationTime:
          $ref: "#/components/schemas/__string"
        ExpirationTime:
          $ref: "#/components/schemas/__string"
        SemanticVersion:
          $ref: "#/components/schemas/__string"
        Status:
          $ref: "#/components/schemas/Status"
        TemplateId:
          $ref: "#/components/schemas/__string"
        TemplateUrl:
          $ref: "#/components/schemas/__string"
    ListApplicationDependenciesResponse:
      type: object
      properties:
        Dependencies:
          $ref: "#/components/schemas/__listOfApplicationDependencySummary"
        NextToken:
          $ref: "#/components/schemas/__string"
    ListApplicationVersionsResponse:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/__string"
        Versions:
          $ref: "#/components/schemas/__listOfVersionSummary"
    ListApplicationsResponse:
      type: object
      properties:
        Applications:
          $ref: "#/components/schemas/__listOfApplicationSummary"
        NextToken:
          $ref: "#/components/schemas/__string"
    PutApplicationPolicyResponse:
      type: object
      properties:
        Statements:
          $ref: "#/components/schemas/__listOfApplicationPolicyStatement"
    ApplicationPolicyStatement:
      type: object
      required:
        - Principals
        - Actions
      properties:
        Actions:
          $ref: "#/components/schemas/__listOf__string"
        Principals:
          $ref: "#/components/schemas/__listOf__string"
        StatementId:
          $ref: "#/components/schemas/__string"
      description: Policy statement applied to the application.
    UpdateApplicationResponse:
      type: object
      properties:
        ApplicationId:
          $ref: "#/components/schemas/__string"
        Author:
          $ref: "#/components/schemas/__string"
        CreationTime:
          $ref: "#/components/schemas/__string"
        Description:
          $ref: "#/components/schemas/__string"
        HomePageUrl:
          $ref: "#/components/schemas/__string"
        Labels:
          $ref: "#/components/schemas/__listOf__string"
        LicenseUrl:
          $ref: "#/components/schemas/__string"
        Name:
          $ref: "#/components/schemas/__string"
        ReadmeUrl:
          $ref: "#/components/schemas/__string"
        SpdxLicenseId:
          $ref: "#/components/schemas/__string"
        Version:
          $ref: "#/components/schemas/Version"
    ApplicationDependencySummary:
      type: object
      required:
        - ApplicationId
        - SemanticVersion
      properties:
        ApplicationId:
          $ref: "#/components/schemas/__string"
        SemanticVersion:
          $ref: "#/components/schemas/__string"
      description: A nested application summary.
    __listOf__string:
      type: array
      items:
        $ref: "#/components/schemas/__string"
    ApplicationSummary:
      type: object
      required:
        - Description
        - Author
        - ApplicationId
        - Name
      properties:
        ApplicationId:
          $ref: "#/components/schemas/__string"
        Author:
          $ref: "#/components/schemas/__string"
        CreationTime:
          $ref: "#/components/schemas/__string"
        Description:
          $ref: "#/components/schemas/__string"
        HomePageUrl:
          $ref: "#/components/schemas/__string"
        Labels:
          $ref: "#/components/schemas/__listOf__string"
        Name:
          $ref: "#/components/schemas/__string"
        SpdxLicenseId:
          $ref: "#/components/schemas/__string"
      description: Summary of details about the application.
    Capability:
      type: string
      enum:
        - CAPABILITY_IAM
        - CAPABILITY_NAMED_IAM
        - CAPABILITY_AUTO_EXPAND
        - CAPABILITY_RESOURCE_POLICY
      description: Values that must be specified in order to deploy some applications.
    CreateApplicationRequest:
      type: object
      required:
        - Description
        - Name
        - Author
      properties:
        Author:
          $ref: "#/components/schemas/__string"
        Description:
          $ref: "#/components/schemas/__string"
        HomePageUrl:
          $ref: "#/components/schemas/__string"
        Labels:
          $ref: "#/components/schemas/__listOf__string"
        LicenseBody:
          $ref: "#/components/schemas/__string"
        LicenseUrl:
          $ref: "#/components/schemas/__string"
        Name:
          $ref: "#/components/schemas/__string"
        ReadmeBody:
          $ref: "#/components/schemas/__string"
        ReadmeUrl:
          $ref: "#/components/schemas/__string"
        SemanticVersion:
          $ref: "#/components/schemas/__string"
        SourceCodeArchiveUrl:
          $ref: "#/components/schemas/__string"
        SourceCodeUrl:
          $ref: "#/components/schemas/__string"
        SpdxLicenseId:
          $ref: "#/components/schemas/__string"
        TemplateBody:
          $ref: "#/components/schemas/__string"
        TemplateUrl:
          $ref: "#/components/schemas/__string"
    Version:
      type: object
      required:
        - TemplateUrl
        - ParameterDefinitions
        - ResourcesSupported
        - CreationTime
        - RequiredCapabilities
        - ApplicationId
        - SemanticVersion
      properties:
        ApplicationId:
          $ref: "#/components/schemas/__string"
        CreationTime:
          $ref: "#/components/schemas/__string"
        ParameterDefinitions:
          $ref: "#/components/schemas/__listOfParameterDefinition"
        RequiredCapabilities:
          $ref: "#/components/schemas/__listOfCapability"
        ResourcesSupported:
          $ref: "#/components/schemas/__boolean"
        SemanticVersion:
          $ref: "#/components/schemas/__string"
        SourceCodeArchiveUrl:
          $ref: "#/components/schemas/__string"
        SourceCodeUrl:
          $ref: "#/components/schemas/__string"
        TemplateUrl:
          $ref: "#/components/schemas/__string"
      description: Application version details.
    CreateApplicationVersionRequest:
      type: object
      properties:
        SourceCodeArchiveUrl:
          $ref: "#/components/schemas/__string"
        SourceCodeUrl:
          $ref: "#/components/schemas/__string"
        TemplateBody:
          $ref: "#/components/schemas/__string"
        TemplateUrl:
          $ref: "#/components/schemas/__string"
    __listOfParameterDefinition:
      type: array
      items:
        $ref: "#/components/schemas/ParameterDefinition"
    __listOfCapability:
      type: array
      items:
        $ref: "#/components/schemas/Capability"
    __boolean:
      type: boolean
    __listOfParameterValue:
      type: array
      items:
        $ref: "#/components/schemas/ParameterValue"
    RollbackConfiguration:
      type: object
      properties:
        MonitoringTimeInMinutes:
          $ref: "#/components/schemas/__integer"
        RollbackTriggers:
          $ref: "#/components/schemas/__listOfRollbackTrigger"
      description: >-
        This property corresponds to the <i>AWS CloudFormation <a
        href="https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/RollbackConfiguration">RollbackConfiguration</a>
         </i> Data Type.
    __listOfTag:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    CreateCloudFormationChangeSetRequest:
      type: object
      required:
        - StackName
      properties:
        Capabilities:
          $ref: "#/components/schemas/__listOf__string"
        ChangeSetName:
          $ref: "#/components/schemas/__string"
        ClientToken:
          $ref: "#/components/schemas/__string"
        Description:
          $ref: "#/components/schemas/__string"
        NotificationArns:
          $ref: "#/components/schemas/__listOf__string"
        ParameterOverrides:
          $ref: "#/components/schemas/__listOfParameterValue"
        ResourceTypes:
          $ref: "#/components/schemas/__listOf__string"
        RollbackConfiguration:
          $ref: "#/components/schemas/RollbackConfiguration"
        SemanticVersion:
          $ref: "#/components/schemas/__string"
        StackName:
          $ref: "#/components/schemas/__string"
        Tags:
          $ref: "#/components/schemas/__listOfTag"
        TemplateId:
          $ref: "#/components/schemas/__string"
    CreateCloudFormationTemplateRequest:
      type: object
      properties:
        SemanticVersion:
          $ref: "#/components/schemas/__string"
    Status:
      type: string
      enum:
        - PREPARING
        - ACTIVE
        - EXPIRED
    DeleteApplicationRequest:
      type: object
      properties: {}
    GetApplicationPolicyRequest:
      type: object
      properties: {}
    __listOfApplicationPolicyStatement:
      type: array
      items:
        $ref: "#/components/schemas/ApplicationPolicyStatement"
    GetApplicationRequest:
      type: object
      properties: {}
    GetCloudFormationTemplateRequest:
      type: object
      properties: {}
    MaxItems:
      type: integer
      minimum: 1
      maximum: 100
    ListApplicationDependenciesRequest:
      type: object
      properties: {}
    __listOfApplicationDependencySummary:
      type: array
      items:
        $ref: "#/components/schemas/ApplicationDependencySummary"
    ListApplicationVersionsRequest:
      type: object
      properties: {}
    __listOfVersionSummary:
      type: array
      items:
        $ref: "#/components/schemas/VersionSummary"
    ListApplicationsRequest:
      type: object
      properties: {}
    __listOfApplicationSummary:
      type: array
      items:
        $ref: "#/components/schemas/ApplicationSummary"
    ParameterDefinition:
      type: object
      required:
        - ReferencedByResources
        - Name
      properties:
        AllowedPattern:
          $ref: "#/components/schemas/__string"
        AllowedValues:
          $ref: "#/components/schemas/__listOf__string"
        ConstraintDescription:
          $ref: "#/components/schemas/__string"
        DefaultValue:
          $ref: "#/components/schemas/__string"
        Description:
          $ref: "#/components/schemas/__string"
        MaxLength:
          $ref: "#/components/schemas/__integer"
        MaxValue:
          $ref: "#/components/schemas/__integer"
        MinLength:
          $ref: "#/components/schemas/__integer"
        MinValue:
          $ref: "#/components/schemas/__integer"
        Name:
          $ref: "#/components/schemas/__string"
        NoEcho:
          $ref: "#/components/schemas/__boolean"
        ReferencedByResources:
          $ref: "#/components/schemas/__listOf__string"
        Type:
          $ref: "#/components/schemas/__string"
      description: Parameters supported by the application.
    PutApplicationPolicyRequest:
      type: object
      required:
        - Statements
      properties:
        Statements:
          $ref: "#/components/schemas/__listOfApplicationPolicyStatement"
    RollbackTrigger:
      type: object
      required:
        - Type
        - Arn
      properties:
        Arn:
          $ref: "#/components/schemas/__string"
        Type:
          $ref: "#/components/schemas/__string"
      description: >-
        This property corresponds to the <i>AWS CloudFormation <a
        href="https://docs.aws.amazon.com/goto/WebAPI/cloudformation-2010-05-15/RollbackTrigger">RollbackTrigger</a>
         </i> Data Type.
    UpdateApplicationRequest:
      type: object
      properties:
        Author:
          $ref: "#/components/schemas/__string"
        Description:
          $ref: "#/components/schemas/__string"
        HomePageUrl:
          $ref: "#/components/schemas/__string"
        Labels:
          $ref: "#/components/schemas/__listOf__string"
        ReadmeBody:
          $ref: "#/components/schemas/__string"
        ReadmeUrl:
          $ref: "#/components/schemas/__string"
    VersionSummary:
      type: object
      required:
        - CreationTime
        - ApplicationId
        - SemanticVersion
      properties:
        ApplicationId:
          $ref: "#/components/schemas/__string"
        CreationTime:
          $ref: "#/components/schemas/__string"
        SemanticVersion:
          $ref: "#/components/schemas/__string"
        SourceCodeUrl:
          $ref: "#/components/schemas/__string"
      description: An application version summary.
