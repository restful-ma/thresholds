openapi: 3.0.0
info:
  version: 2015-12-01
  x-release: v4
  title: Elastic Load Balancing
  description: '<fullname>Elastic Load Balancing</fullname> <p>A load balancer distributes
    incoming traffic across targets, such as your EC2 instances. This enables
    you to increase the availability of your application. The load balancer also
    monitors the health of its registered targets and ensures that it routes
    traffic only to healthy targets. You configure your load balancer to accept
    incoming traffic by specifying one or more listeners, which are configured
    with a protocol and port number for connections from clients to the load
    balancer. You configure a target group with a protocol and port number for
    connections from the load balancer to the targets, and with health check
    settings to be used when checking the health status of the targets.</p>
    <p>Elastic Load Balancing supports the following types of load balancers:
    Application Load Balancers, Network Load Balancers, and Classic Load
    Balancers. This reference covers Application Load Balancers and Network Load
    Balancers.</p> <p>An Application Load Balancer makes routing and load
    balancing decisions at the application layer (HTTP/HTTPS). A Network Load
    Balancer makes routing and load balancing decisions at the transport layer
    (TCP/TLS). Both Application Load Balancers and Network Load Balancers can
    route requests to one or more ports on each EC2 instance or container
    instance in your virtual private cloud (VPC). For more information, see the
    <a
    href="https://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/">Elastic
    Load Balancing User Guide</a>.</p> <p>All Elastic Load Balancing operations
    are idempotent, which means that they complete at most one time. If you
    repeat an operation, it succeeds.</p>'
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: elasticloadbalancingv2
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/elasticloadbalancingv2-2015-12-01.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/elasticloadbalancing/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#Action=AddListenerCertificates:
    get:
      x-aws-operation-name: AddListenerCertificates
      operationId: GET AddListenerCertificates
      description: <p>Adds the specified SSL server certificate to the certificate list for
        the specified HTTPS or TLS listener.</p> <p>If the certificate in
        already in the certificate list, the call is successful but the
        certificate is not added again.</p> <p>To get the certificate list for a
        listener, use <a>DescribeListenerCertificates</a>. To remove
        certificates from the certificate list for a listener, use
        <a>RemoveListenerCertificates</a>. To replace the default certificate
        for a listener, use <a>ModifyListener</a>.</p> <p>For more information,
        see <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#https-listener-certificates">SSL
        Certificates</a> in the <i>Application Load Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AddListenerCertificatesOutput"
        "480":
          description: ListenerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListenerNotFoundException"
        "481":
          description: TooManyCertificatesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyCertificatesException"
        "482":
          description: CertificateNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateNotFoundException"
      parameters:
        - name: ListenerArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the listener.
          schema:
            type: string
        - name: Certificates
          in: query
          required: true
          description: The certificate to add. You can specify one certificate per call.
            Set <code>CertificateArn</code> to the certificate ARN but do not
            set <code>IsDefault</code>.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddListenerCertificates
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: AddListenerCertificates
      operationId: POST AddListenerCertificates
      description: <p>Adds the specified SSL server certificate to the certificate list for
        the specified HTTPS or TLS listener.</p> <p>If the certificate in
        already in the certificate list, the call is successful but the
        certificate is not added again.</p> <p>To get the certificate list for a
        listener, use <a>DescribeListenerCertificates</a>. To remove
        certificates from the certificate list for a listener, use
        <a>RemoveListenerCertificates</a>. To replace the default certificate
        for a listener, use <a>ModifyListener</a>.</p> <p>For more information,
        see <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#https-listener-certificates">SSL
        Certificates</a> in the <i>Application Load Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AddListenerCertificatesOutput"
        "480":
          description: ListenerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListenerNotFoundException"
        "481":
          description: TooManyCertificatesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyCertificatesException"
        "482":
          description: CertificateNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateNotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddListenerCertificates
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ListenerArn:
                  description: The Amazon Resource Name (ARN) of the listener.
                  type: string
                Certificates:
                  description: The certificate to add. You can specify one certificate per
                    call. Set <code>CertificateArn</code> to the certificate ARN
                    but do not set <code>IsDefault</code>.
                  type: array
                  items:
                    type: string
              required:
                - ListenerArn
                - Certificates
  /#Action=AddTags:
    get:
      x-aws-operation-name: AddTags
      operationId: GET AddTags
      description: <p>Adds the specified tags to the specified Elastic Load Balancing
        resource. You can tag your Application Load Balancers, Network Load
        Balancers, and your target groups.</p> <p>Each tag consists of a key and
        an optional value. If a resource already has a tag with the same key,
        <code>AddTags</code> updates its value.</p> <p>To list the current tags
        for your resources, use <a>DescribeTags</a>. To remove tags from your
        resources, use <a>RemoveTags</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AddTagsOutput"
        "480":
          description: DuplicateTagKeysException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicateTagKeysException"
        "481":
          description: TooManyTagsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "482":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
        "483":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
      parameters:
        - name: ResourceArns
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: array
            items:
              type: string
        - name: Tags
          in: query
          required: true
          description: The tags. Each resource can have a maximum of 10 tags.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: AddTags
      operationId: POST AddTags
      description: <p>Adds the specified tags to the specified Elastic Load Balancing
        resource. You can tag your Application Load Balancers, Network Load
        Balancers, and your target groups.</p> <p>Each tag consists of a key and
        an optional value. If a resource already has a tag with the same key,
        <code>AddTags</code> updates its value.</p> <p>To list the current tags
        for your resources, use <a>DescribeTags</a>. To remove tags from your
        resources, use <a>RemoveTags</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AddTagsOutput"
        "480":
          description: DuplicateTagKeysException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicateTagKeysException"
        "481":
          description: TooManyTagsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "482":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
        "483":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - AddTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ResourceArns:
                  description: The Amazon Resource Name (ARN) of the resource.
                  type: array
                  items:
                    type: string
                Tags:
                  description: The tags. Each resource can have a maximum of 10 tags.
                  type: array
                  items:
                    type: string
              required:
                - ResourceArns
                - Tags
  /#Action=CreateListener:
    get:
      x-aws-operation-name: CreateListener
      operationId: GET CreateListener
      description: <p>Creates a listener for the specified Application Load Balancer or
        Network Load Balancer.</p> <p>To update a listener, use
        <a>ModifyListener</a>. When you are finished with a listener, you can
        delete it using <a>DeleteListener</a>. If you are finished with both the
        listener and the load balancer, you can delete them both using
        <a>DeleteLoadBalancer</a>.</p> <p>This operation is idempotent, which
        means that it completes at most one time. If you attempt to create
        multiple listeners with the same settings, each call succeeds.</p>
        <p>For more information, see <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html">Listeners
        for Your Application Load Balancers</a> in the <i>Application Load
        Balancers Guide</i> and <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-listeners.html">Listeners
        for Your Network Load Balancers</a> in the <i>Network Load Balancers
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateListenerOutput"
        "480":
          description: DuplicateListenerException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicateListenerException"
        "481":
          description: TooManyListenersException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyListenersException"
        "482":
          description: TooManyCertificatesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyCertificatesException"
        "483":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
        "484":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
        "485":
          description: TargetGroupAssociationLimitException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupAssociationLimitException"
        "486":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
        "487":
          description: IncompatibleProtocolsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/IncompatibleProtocolsException"
        "488":
          description: SSLPolicyNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SSLPolicyNotFoundException"
        "489":
          description: CertificateNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateNotFoundException"
        "490":
          description: UnsupportedProtocolException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedProtocolException"
        "491":
          description: TooManyRegistrationsForTargetIdException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyRegistrationsForTargetIdException"
        "492":
          description: TooManyTargetsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTargetsException"
        "493":
          description: TooManyActionsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyActionsException"
        "494":
          description: InvalidLoadBalancerActionException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidLoadBalancerActionException"
      parameters:
        - name: LoadBalancerArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the load balancer.
          schema:
            type: string
        - name: Protocol
          in: query
          required: true
          description: The protocol for connections from clients to the load balancer. For
            Application Load Balancers, the supported protocols are HTTP and
            HTTPS. For Network Load Balancers, the supported protocols are TCP,
            TLS, UDP, and TCP_UDP.
          schema:
            type: string
            enum:
              - HTTP
              - HTTPS
              - TCP
              - TLS
              - UDP
              - TCP_UDP
        - name: Port
          in: query
          required: true
          description: The port on which the load balancer is listening.
          schema:
            type: integer
            minimum: 1
            maximum: 65535
        - name: SslPolicy
          in: query
          required: false
          description: "[HTTPS and TLS listeners] The security policy that defines which
            ciphers and protocols are supported. The default is the current
            predefined security policy."
          schema:
            type: string
        - name: Certificates
          in: query
          required: false
          description: <p>[HTTPS and TLS listeners] The default certificate for the
            listener. You must provide exactly one certificate. Set
            <code>CertificateArn</code> to the certificate ARN but do not set
            <code>IsDefault</code>.</p> <p>To create a certificate list for the
            listener, use <a>AddListenerCertificates</a>.</p>
          schema:
            type: array
            items:
              type: string
        - name: DefaultActions
          in: query
          required: true
          description: <p>The actions for the default rule. The rule must include one
            forward action or one or more fixed-response actions.</p> <p>If the
            action type is <code>forward</code>, you specify a target group. The
            protocol of the target group must be HTTP or HTTPS for an
            Application Load Balancer. The protocol of the target group must be
            TCP, TLS, UDP, or TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS
            listeners] If the action type is <code>authenticate-oidc</code>, you
            authenticate users through an identity provider that is OpenID
            Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action
            type is <code>authenticate-cognito</code>, you authenticate users
            through the user pools supported by Amazon Cognito.</p>
            <p>[Application Load Balancer] If the action type is
            <code>redirect</code>, you redirect specified client requests from
            one URL to another.</p> <p>[Application Load Balancer] If the action
            type is <code>fixed-response</code>, you drop specified client
            requests and return a custom HTTP response.</p>
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateListener
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateListener
      operationId: POST CreateListener
      description: <p>Creates a listener for the specified Application Load Balancer or
        Network Load Balancer.</p> <p>To update a listener, use
        <a>ModifyListener</a>. When you are finished with a listener, you can
        delete it using <a>DeleteListener</a>. If you are finished with both the
        listener and the load balancer, you can delete them both using
        <a>DeleteLoadBalancer</a>.</p> <p>This operation is idempotent, which
        means that it completes at most one time. If you attempt to create
        multiple listeners with the same settings, each call succeeds.</p>
        <p>For more information, see <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html">Listeners
        for Your Application Load Balancers</a> in the <i>Application Load
        Balancers Guide</i> and <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-listeners.html">Listeners
        for Your Network Load Balancers</a> in the <i>Network Load Balancers
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateListenerOutput"
        "480":
          description: DuplicateListenerException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicateListenerException"
        "481":
          description: TooManyListenersException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyListenersException"
        "482":
          description: TooManyCertificatesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyCertificatesException"
        "483":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
        "484":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
        "485":
          description: TargetGroupAssociationLimitException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupAssociationLimitException"
        "486":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
        "487":
          description: IncompatibleProtocolsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/IncompatibleProtocolsException"
        "488":
          description: SSLPolicyNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SSLPolicyNotFoundException"
        "489":
          description: CertificateNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateNotFoundException"
        "490":
          description: UnsupportedProtocolException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedProtocolException"
        "491":
          description: TooManyRegistrationsForTargetIdException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyRegistrationsForTargetIdException"
        "492":
          description: TooManyTargetsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTargetsException"
        "493":
          description: TooManyActionsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyActionsException"
        "494":
          description: InvalidLoadBalancerActionException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidLoadBalancerActionException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateListener
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerArn:
                  description: The Amazon Resource Name (ARN) of the load balancer.
                  type: string
                Protocol:
                  description: The protocol for connections from clients to the load
                    balancer. For Application Load Balancers, the supported
                    protocols are HTTP and HTTPS. For Network Load Balancers,
                    the supported protocols are TCP, TLS, UDP, and TCP_UDP.
                  type: string
                  enum:
                    - HTTP
                    - HTTPS
                    - TCP
                    - TLS
                    - UDP
                    - TCP_UDP
                Port:
                  description: The port on which the load balancer is listening.
                  type: integer
                  minimum: 1
                  maximum: 65535
                SslPolicy:
                  description: "[HTTPS and TLS listeners] The security policy that defines
                    which ciphers and protocols are supported. The default is
                    the current predefined security policy."
                  type: string
                Certificates:
                  description: <p>[HTTPS and TLS listeners] The default certificate for the
                    listener. You must provide exactly one certificate. Set
                    <code>CertificateArn</code> to the certificate ARN but do
                    not set <code>IsDefault</code>.</p> <p>To create a
                    certificate list for the listener, use
                    <a>AddListenerCertificates</a>.</p>
                  type: array
                  items:
                    type: string
                DefaultActions:
                  description: <p>The actions for the default rule. The rule must include
                    one forward action or one or more fixed-response
                    actions.</p> <p>If the action type is <code>forward</code>,
                    you specify a target group. The protocol of the target group
                    must be HTTP or HTTPS for an Application Load Balancer. The
                    protocol of the target group must be TCP, TLS, UDP, or
                    TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS
                    listeners] If the action type is
                    <code>authenticate-oidc</code>, you authenticate users
                    through an identity provider that is OpenID Connect (OIDC)
                    compliant.</p> <p>[HTTPS listeners] If the action type is
                    <code>authenticate-cognito</code>, you authenticate users
                    through the user pools supported by Amazon Cognito.</p>
                    <p>[Application Load Balancer] If the action type is
                    <code>redirect</code>, you redirect specified client
                    requests from one URL to another.</p> <p>[Application Load
                    Balancer] If the action type is <code>fixed-response</code>,
                    you drop specified client requests and return a custom HTTP
                    response.</p>
                  type: array
                  items:
                    type: string
              required:
                - LoadBalancerArn
                - Protocol
                - Port
                - DefaultActions
  /#Action=CreateLoadBalancer:
    get:
      x-aws-operation-name: CreateLoadBalancer
      operationId: GET CreateLoadBalancer
      description: <p>Creates an Application Load Balancer or a Network Load Balancer.</p>
        <p>When you create a load balancer, you can specify security groups,
        public subnets, IP address type, and tags. Otherwise, you could do so
        later using <a>SetSecurityGroups</a>, <a>SetSubnets</a>,
        <a>SetIpAddressType</a>, and <a>AddTags</a>.</p> <p>To create listeners
        for your load balancer, use <a>CreateListener</a>. To describe your
        current load balancers, see <a>DescribeLoadBalancers</a>. When you are
        finished with a load balancer, you can delete it using
        <a>DeleteLoadBalancer</a>.</p> <p>For limit information, see <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-limits.html">Limits
        for Your Application Load Balancer</a> in the <i>Application Load
        Balancers Guide</i> and <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-limits.html">Limits
        for Your Network Load Balancer</a> in the <i>Network Load Balancers
        Guide</i>.</p> <p>This operation is idempotent, which means that it
        completes at most one time. If you attempt to create multiple load
        balancers with the same settings, each call succeeds.</p> <p>For more
        information, see <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html">Application
        Load Balancers</a> in the <i>Application Load Balancers Guide</i> and <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/network-load-balancers.html">Network
        Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateLoadBalancerOutput"
        "480":
          description: DuplicateLoadBalancerNameException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicateLoadBalancerNameException"
        "481":
          description: TooManyLoadBalancersException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyLoadBalancersException"
        "482":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
        "483":
          description: SubnetNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubnetNotFoundException"
        "484":
          description: InvalidSubnetException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnetException"
        "485":
          description: InvalidSecurityGroupException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSecurityGroupException"
        "486":
          description: InvalidSchemeException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSchemeException"
        "487":
          description: TooManyTagsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "488":
          description: DuplicateTagKeysException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicateTagKeysException"
        "489":
          description: ResourceInUseException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "490":
          description: AllocationIdNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AllocationIdNotFoundException"
        "491":
          description: AvailabilityZoneNotSupportedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AvailabilityZoneNotSupportedException"
        "492":
          description: OperationNotPermittedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: Name
          in: query
          required: true
          description: <p>The name of the load balancer.</p> <p>This name must be unique
            per region per account, can have a maximum of 32 characters, must
            contain only alphanumeric characters or hyphens, must not begin or
            end with a hyphen, and must not begin with "internal-".</p>
          schema:
            type: string
        - name: Subnets
          in: query
          required: false
          description: <p>The IDs of the public subnets. You can specify only one subnet
            per Availability Zone. You must specify either subnets or subnet
            mappings.</p> <p>[Application Load Balancers] You must specify
            subnets from at least two Availability Zones.</p> <p>[Network Load
            Balancers] You can specify subnets from one or more Availability
            Zones.</p>
          schema:
            type: array
            items:
              type: string
        - name: SubnetMappings
          in: query
          required: false
          description: <p>The IDs of the public subnets. You can specify only one subnet
            per Availability Zone. You must specify either subnets or subnet
            mappings.</p> <p>[Application Load Balancers] You must specify
            subnets from at least two Availability Zones. You cannot specify
            Elastic IP addresses for your subnets.</p> <p>[Network Load
            Balancers] You can specify subnets from one or more Availability
            Zones. You can specify one Elastic IP address per subnet if you need
            static IP addresses for your load balancer.</p>
          schema:
            type: array
            items:
              type: string
        - name: SecurityGroups
          in: query
          required: false
          description: "[Application Load Balancers] The IDs of the security groups for the
            load balancer."
          schema:
            type: array
            items:
              type: string
        - name: Scheme
          in: query
          required: false
          description: <p>The nodes of an Internet-facing load balancer have public IP
            addresses. The DNS name of an Internet-facing load balancer is
            publicly resolvable to the public IP addresses of the nodes.
            Therefore, Internet-facing load balancers can route requests from
            clients over the internet.</p> <p>The nodes of an internal load
            balancer have only private IP addresses. The DNS name of an internal
            load balancer is publicly resolvable to the private IP addresses of
            the nodes. Therefore, internal load balancers can only route
            requests from clients with access to the VPC for the load
            balancer.</p> <p>The default is an Internet-facing load
            balancer.</p>
          schema:
            type: string
            enum:
              - internet-facing
              - internal
        - name: Tags
          in: query
          required: false
          description: One or more tags to assign to the load balancer.
          schema:
            type: array
            items:
              type: string
        - name: Type
          in: query
          required: false
          description: The type of load balancer. The default is <code>application</code>.
          schema:
            type: string
            enum:
              - application
              - network
        - name: IpAddressType
          in: query
          required: false
          description: "[Application Load Balancers] The type of IP addresses used by the
            subnets for your load balancer. The possible values are
            <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code>
            (for IPv4 and IPv6 addresses). Internal load balancers must use
            <code>ipv4</code>."
          schema:
            type: string
            enum:
              - ipv4
              - dualstack
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateLoadBalancer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateLoadBalancer
      operationId: POST CreateLoadBalancer
      description: <p>Creates an Application Load Balancer or a Network Load Balancer.</p>
        <p>When you create a load balancer, you can specify security groups,
        public subnets, IP address type, and tags. Otherwise, you could do so
        later using <a>SetSecurityGroups</a>, <a>SetSubnets</a>,
        <a>SetIpAddressType</a>, and <a>AddTags</a>.</p> <p>To create listeners
        for your load balancer, use <a>CreateListener</a>. To describe your
        current load balancers, see <a>DescribeLoadBalancers</a>. When you are
        finished with a load balancer, you can delete it using
        <a>DeleteLoadBalancer</a>.</p> <p>For limit information, see <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-limits.html">Limits
        for Your Application Load Balancer</a> in the <i>Application Load
        Balancers Guide</i> and <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-limits.html">Limits
        for Your Network Load Balancer</a> in the <i>Network Load Balancers
        Guide</i>.</p> <p>This operation is idempotent, which means that it
        completes at most one time. If you attempt to create multiple load
        balancers with the same settings, each call succeeds.</p> <p>For more
        information, see <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html">Application
        Load Balancers</a> in the <i>Application Load Balancers Guide</i> and <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/network-load-balancers.html">Network
        Load Balancers</a> in the <i>Network Load Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateLoadBalancerOutput"
        "480":
          description: DuplicateLoadBalancerNameException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicateLoadBalancerNameException"
        "481":
          description: TooManyLoadBalancersException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyLoadBalancersException"
        "482":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
        "483":
          description: SubnetNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubnetNotFoundException"
        "484":
          description: InvalidSubnetException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnetException"
        "485":
          description: InvalidSecurityGroupException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSecurityGroupException"
        "486":
          description: InvalidSchemeException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSchemeException"
        "487":
          description: TooManyTagsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "488":
          description: DuplicateTagKeysException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicateTagKeysException"
        "489":
          description: ResourceInUseException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "490":
          description: AllocationIdNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AllocationIdNotFoundException"
        "491":
          description: AvailabilityZoneNotSupportedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AvailabilityZoneNotSupportedException"
        "492":
          description: OperationNotPermittedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateLoadBalancer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Name:
                  description: <p>The name of the load balancer.</p> <p>This name must be
                    unique per region per account, can have a maximum of 32
                    characters, must contain only alphanumeric characters or
                    hyphens, must not begin or end with a hyphen, and must not
                    begin with "internal-".</p>
                  type: string
                Subnets:
                  description: <p>The IDs of the public subnets. You can specify only one
                    subnet per Availability Zone. You must specify either
                    subnets or subnet mappings.</p> <p>[Application Load
                    Balancers] You must specify subnets from at least two
                    Availability Zones.</p> <p>[Network Load Balancers] You can
                    specify subnets from one or more Availability Zones.</p>
                  type: array
                  items:
                    type: string
                SubnetMappings:
                  description: <p>The IDs of the public subnets. You can specify only one
                    subnet per Availability Zone. You must specify either
                    subnets or subnet mappings.</p> <p>[Application Load
                    Balancers] You must specify subnets from at least two
                    Availability Zones. You cannot specify Elastic IP addresses
                    for your subnets.</p> <p>[Network Load Balancers] You can
                    specify subnets from one or more Availability Zones. You can
                    specify one Elastic IP address per subnet if you need static
                    IP addresses for your load balancer.</p>
                  type: array
                  items:
                    type: string
                SecurityGroups:
                  description: "[Application Load Balancers] The IDs of the security groups
                    for the load balancer."
                  type: array
                  items:
                    type: string
                Scheme:
                  description: <p>The nodes of an Internet-facing load balancer have public
                    IP addresses. The DNS name of an Internet-facing load
                    balancer is publicly resolvable to the public IP addresses
                    of the nodes. Therefore, Internet-facing load balancers can
                    route requests from clients over the internet.</p> <p>The
                    nodes of an internal load balancer have only private IP
                    addresses. The DNS name of an internal load balancer is
                    publicly resolvable to the private IP addresses of the
                    nodes. Therefore, internal load balancers can only route
                    requests from clients with access to the VPC for the load
                    balancer.</p> <p>The default is an Internet-facing load
                    balancer.</p>
                  type: string
                  enum:
                    - internet-facing
                    - internal
                Tags:
                  description: One or more tags to assign to the load balancer.
                  type: array
                  items:
                    type: string
                Type:
                  description: The type of load balancer. The default is
                    <code>application</code>.
                  type: string
                  enum:
                    - application
                    - network
                IpAddressType:
                  description: "[Application Load Balancers] The type of IP addresses used
                    by the subnets for your load balancer. The possible values
                    are <code>ipv4</code> (for IPv4 addresses) and
                    <code>dualstack</code> (for IPv4 and IPv6 addresses).
                    Internal load balancers must use <code>ipv4</code>."
                  type: string
                  enum:
                    - ipv4
                    - dualstack
              required:
                - Name
  /#Action=CreateRule:
    get:
      x-aws-operation-name: CreateRule
      operationId: GET CreateRule
      description: <p>Creates a rule for the specified listener. The listener must be
        associated with an Application Load Balancer.</p> <p>Rules are evaluated
        in priority order, from the lowest value to the highest value. When the
        conditions for a rule are met, its actions are performed. If the
        conditions for no rules are met, the actions for the default rule are
        performed. For more information, see <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#listener-rules">Listener
        Rules</a> in the <i>Application Load Balancers Guide</i>.</p> <p>To view
        your current rules, use <a>DescribeRules</a>. To update a rule, use
        <a>ModifyRule</a>. To set the priorities of your rules, use
        <a>SetRulePriorities</a>. To delete a rule, use <a>DeleteRule</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateRuleOutput"
        "480":
          description: PriorityInUseException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PriorityInUseException"
        "481":
          description: TooManyTargetGroupsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTargetGroupsException"
        "482":
          description: TooManyRulesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyRulesException"
        "483":
          description: TargetGroupAssociationLimitException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupAssociationLimitException"
        "484":
          description: IncompatibleProtocolsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/IncompatibleProtocolsException"
        "485":
          description: ListenerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListenerNotFoundException"
        "486":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
        "487":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
        "488":
          description: TooManyRegistrationsForTargetIdException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyRegistrationsForTargetIdException"
        "489":
          description: TooManyTargetsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTargetsException"
        "490":
          description: UnsupportedProtocolException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedProtocolException"
        "491":
          description: TooManyActionsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyActionsException"
        "492":
          description: InvalidLoadBalancerActionException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidLoadBalancerActionException"
      parameters:
        - name: ListenerArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the listener.
          schema:
            type: string
        - name: Conditions
          in: query
          required: true
          description: "The conditions. Each rule can include zero or one of the following
            conditions: <code>http-request-method</code>,
            <code>host-header</code>, <code>path-pattern</code>, and
            <code>source-ip</code>, and zero or more of the following
            conditions: <code>http-header</code> and <code>query-string</code>."
          schema:
            type: array
            items:
              type: string
        - name: Priority
          in: query
          required: true
          description: The rule priority. A listener can't have multiple rules with the
            same priority.
          schema:
            type: integer
            minimum: 1
            maximum: 50000
        - name: Actions
          in: query
          required: true
          description: "<p>The actions. Each rule must include exactly one of the following
            types of actions: <code>forward</code>, <code>fixed-response</code>,
            or <code>redirect</code>.</p> <p>If the action type is
            <code>forward</code>, you specify a target group. The protocol of
            the target group must be HTTP or HTTPS for an Application Load
            Balancer. The protocol of the target group must be TCP, TLS, UDP, or
            TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS listeners] If the
            action type is <code>authenticate-oidc</code>, you authenticate
            users through an identity provider that is OpenID Connect (OIDC)
            compliant.</p> <p>[HTTPS listeners] If the action type is
            <code>authenticate-cognito</code>, you authenticate users through
            the user pools supported by Amazon Cognito.</p> <p>[Application Load
            Balancer] If the action type is <code>redirect</code>, you redirect
            specified client requests from one URL to another.</p>
            <p>[Application Load Balancer] If the action type is
            <code>fixed-response</code>, you drop specified client requests and
            return a custom HTTP response.</p>"
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateRule
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateRule
      operationId: POST CreateRule
      description: <p>Creates a rule for the specified listener. The listener must be
        associated with an Application Load Balancer.</p> <p>Rules are evaluated
        in priority order, from the lowest value to the highest value. When the
        conditions for a rule are met, its actions are performed. If the
        conditions for no rules are met, the actions for the default rule are
        performed. For more information, see <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-listeners.html#listener-rules">Listener
        Rules</a> in the <i>Application Load Balancers Guide</i>.</p> <p>To view
        your current rules, use <a>DescribeRules</a>. To update a rule, use
        <a>ModifyRule</a>. To set the priorities of your rules, use
        <a>SetRulePriorities</a>. To delete a rule, use <a>DeleteRule</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateRuleOutput"
        "480":
          description: PriorityInUseException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PriorityInUseException"
        "481":
          description: TooManyTargetGroupsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTargetGroupsException"
        "482":
          description: TooManyRulesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyRulesException"
        "483":
          description: TargetGroupAssociationLimitException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupAssociationLimitException"
        "484":
          description: IncompatibleProtocolsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/IncompatibleProtocolsException"
        "485":
          description: ListenerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListenerNotFoundException"
        "486":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
        "487":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
        "488":
          description: TooManyRegistrationsForTargetIdException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyRegistrationsForTargetIdException"
        "489":
          description: TooManyTargetsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTargetsException"
        "490":
          description: UnsupportedProtocolException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedProtocolException"
        "491":
          description: TooManyActionsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyActionsException"
        "492":
          description: InvalidLoadBalancerActionException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidLoadBalancerActionException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateRule
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ListenerArn:
                  description: The Amazon Resource Name (ARN) of the listener.
                  type: string
                Conditions:
                  description: "The conditions. Each rule can include zero or one of the
                    following conditions: <code>http-request-method</code>,
                    <code>host-header</code>, <code>path-pattern</code>, and
                    <code>source-ip</code>, and zero or more of the following
                    conditions: <code>http-header</code> and
                    <code>query-string</code>."
                  type: array
                  items:
                    type: string
                Priority:
                  description: The rule priority. A listener can't have multiple rules with
                    the same priority.
                  type: integer
                  minimum: 1
                  maximum: 50000
                Actions:
                  description: "<p>The actions. Each rule must include exactly one of the
                    following types of actions: <code>forward</code>,
                    <code>fixed-response</code>, or <code>redirect</code>.</p>
                    <p>If the action type is <code>forward</code>, you specify a
                    target group. The protocol of the target group must be HTTP
                    or HTTPS for an Application Load Balancer. The protocol of
                    the target group must be TCP, TLS, UDP, or TCP_UDP for a
                    Network Load Balancer.</p> <p>[HTTPS listeners] If the
                    action type is <code>authenticate-oidc</code>, you
                    authenticate users through an identity provider that is
                    OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If
                    the action type is <code>authenticate-cognito</code>, you
                    authenticate users through the user pools supported by
                    Amazon Cognito.</p> <p>[Application Load Balancer] If the
                    action type is <code>redirect</code>, you redirect specified
                    client requests from one URL to another.</p> <p>[Application
                    Load Balancer] If the action type is
                    <code>fixed-response</code>, you drop specified client
                    requests and return a custom HTTP response.</p>"
                  type: array
                  items:
                    type: string
              required:
                - ListenerArn
                - Conditions
                - Priority
                - Actions
  /#Action=CreateTargetGroup:
    get:
      x-aws-operation-name: CreateTargetGroup
      operationId: GET CreateTargetGroup
      description: <p>Creates a target group.</p> <p>To register targets with the target
        group, use <a>RegisterTargets</a>. To update the health check settings
        for the target group, use <a>ModifyTargetGroup</a>. To monitor the
        health of targets in the target group, use
        <a>DescribeTargetHealth</a>.</p> <p>To route traffic to the targets in a
        target group, specify the target group in an action using
        <a>CreateListener</a> or <a>CreateRule</a>.</p> <p>To delete a target
        group, use <a>DeleteTargetGroup</a>.</p> <p>This operation is
        idempotent, which means that it completes at most one time. If you
        attempt to create multiple target groups with the same settings, each
        call succeeds.</p> <p>For more information, see <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html">Target
        Groups for Your Application Load Balancers</a> in the <i>Application
        Load Balancers Guide</i> or <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html">Target
        Groups for Your Network Load Balancers</a> in the <i>Network Load
        Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateTargetGroupOutput"
        "480":
          description: DuplicateTargetGroupNameException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicateTargetGroupNameException"
        "481":
          description: TooManyTargetGroupsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTargetGroupsException"
        "482":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: Name
          in: query
          required: true
          description: <p>The name of the target group.</p> <p>This name must be unique per
            region per account, can have a maximum of 32 characters, must
            contain only alphanumeric characters or hyphens, and must not begin
            or end with a hyphen.</p>
          schema:
            type: string
        - name: Protocol
          in: query
          required: false
          description: The protocol to use for routing traffic to the targets. For
            Application Load Balancers, the supported protocols are HTTP and
            HTTPS. For Network Load Balancers, the supported protocols are TCP,
            TLS, UDP, or TCP_UDP. A TCP_UDP listener must be associated with a
            TCP_UDP target group. If the target is a Lambda function, this
            parameter does not apply.
          schema:
            type: string
            enum:
              - HTTP
              - HTTPS
              - TCP
              - TLS
              - UDP
              - TCP_UDP
        - name: Port
          in: query
          required: false
          description: The port on which the targets receive traffic. This port is used
            unless you specify a port override when registering the target. If
            the target is a Lambda function, this parameter does not apply.
          schema:
            type: integer
            minimum: 1
            maximum: 65535
        - name: VpcId
          in: query
          required: false
          description: The identifier of the virtual private cloud (VPC). If the target is
            a Lambda function, this parameter does not apply. Otherwise, this
            parameter is required.
          schema:
            type: string
        - name: HealthCheckProtocol
          in: query
          required: false
          description: The protocol the load balancer uses when performing health checks on
            targets. For Application Load Balancers, the default is HTTP. For
            Network Load Balancers, the default is TCP. The TCP protocol is
            supported for health checks only if the protocol of the target group
            is TCP, TLS, UDP, or TCP_UDP. The TLS, UDP, and TCP_UDP protocols
            are not supported for health checks.
          schema:
            type: string
            enum:
              - HTTP
              - HTTPS
              - TCP
              - TLS
              - UDP
              - TCP_UDP
        - name: HealthCheckPort
          in: query
          required: false
          description: The port the load balancer uses when performing health checks on
            targets. The default is <code>traffic-port</code>, which is the port
            on which each target receives traffic from the load balancer.
          schema:
            type: string
        - name: HealthCheckEnabled
          in: query
          required: false
          description: Indicates whether health checks are enabled. If the target type is
            <code>lambda</code>, health checks are disabled by default but can
            be enabled. If the target type is <code>instance</code> or
            <code>ip</code>, health checks are always enabled and cannot be
            disabled.
          schema:
            type: boolean
        - name: HealthCheckPath
          in: query
          required: false
          description: "[HTTP/HTTPS health checks] The ping path that is the destination on
            the targets for health checks. The default is /."
          schema:
            type: string
            minLength: 1
            maxLength: 1024
        - name: HealthCheckIntervalSeconds
          in: query
          required: false
          description: The approximate amount of time, in seconds, between health checks of
            an individual target. For HTTP and HTTPS health checks, the range is
            5–300 seconds. For TCP health checks, the supported values are 10
            and 30 seconds. If the target type is <code>instance</code> or
            <code>ip</code>, the default is 30 seconds. If the target type is
            <code>lambda</code>, the default is 35 seconds.
          schema:
            type: integer
            minimum: 5
            maximum: 300
        - name: HealthCheckTimeoutSeconds
          in: query
          required: false
          description: The amount of time, in seconds, during which no response from a
            target means a failed health check. For target groups with a
            protocol of HTTP or HTTPS, the default is 5 seconds. For target
            groups with a protocol of TCP or TLS, this value must be 6 seconds
            for HTTP health checks and 10 seconds for TCP and HTTPS health
            checks. If the target type is <code>lambda</code>, the default is 30
            seconds.
          schema:
            type: integer
            minimum: 2
            maximum: 120
        - name: HealthyThresholdCount
          in: query
          required: false
          description: The number of consecutive health checks successes required before
            considering an unhealthy target healthy. For target groups with a
            protocol of HTTP or HTTPS, the default is 5. For target groups with
            a protocol of TCP or TLS, the default is 3. If the target type is
            <code>lambda</code>, the default is 5.
          schema:
            type: integer
            minimum: 2
            maximum: 10
        - name: UnhealthyThresholdCount
          in: query
          required: false
          description: The number of consecutive health check failures required before
            considering a target unhealthy. For target groups with a protocol of
            HTTP or HTTPS, the default is 2. For target groups with a protocol
            of TCP or TLS, this value must be the same as the healthy threshold
            count. If the target type is <code>lambda</code>, the default is 2.
          schema:
            type: integer
            minimum: 2
            maximum: 10
        - name: Matcher.HttpCode
          in: query
          description: >-
            Information to use when checking for a successful response from a
            target.

            <p>The HTTP codes.</p> <p>For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values (for example, "200,202") or a range of values (for example, "200-299").</p> <p>For Network Load Balancers, this is 200–399.</p>
          schema:
            type: string
        - name: TargetType
          in: query
          required: false
          description: <p>The type of target that you must specify when registering targets
            with this target group. You can't specify targets for a target group
            using more than one target type.</p> <ul> <li> <p>
            <code>instance</code> - Targets are specified by instance ID. This
            is the default value. If the target group protocol is UDP or
            TCP_UDP, the target type must be <code>instance</code>.</p> </li>
            <li> <p> <code>ip</code> - Targets are specified by IP address. You
            can specify IP addresses from the subnets of the virtual private
            cloud (VPC) for the target group, the RFC 1918 range (10.0.0.0/8,
            172.16.0.0/12, and 192.168.0.0/16), and the RFC 6598 range
            (100.64.0.0/10). You can't specify publicly routable IP
            addresses.</p> </li> <li> <p> <code>lambda</code> - The target
            groups contains a single Lambda function.</p> </li> </ul>
          schema:
            type: string
            enum:
              - instance
              - ip
              - lambda
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateTargetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: CreateTargetGroup
      operationId: POST CreateTargetGroup
      description: <p>Creates a target group.</p> <p>To register targets with the target
        group, use <a>RegisterTargets</a>. To update the health check settings
        for the target group, use <a>ModifyTargetGroup</a>. To monitor the
        health of targets in the target group, use
        <a>DescribeTargetHealth</a>.</p> <p>To route traffic to the targets in a
        target group, specify the target group in an action using
        <a>CreateListener</a> or <a>CreateRule</a>.</p> <p>To delete a target
        group, use <a>DeleteTargetGroup</a>.</p> <p>This operation is
        idempotent, which means that it completes at most one time. If you
        attempt to create multiple target groups with the same settings, each
        call succeeds.</p> <p>For more information, see <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html">Target
        Groups for Your Application Load Balancers</a> in the <i>Application
        Load Balancers Guide</i> or <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html">Target
        Groups for Your Network Load Balancers</a> in the <i>Network Load
        Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CreateTargetGroupOutput"
        "480":
          description: DuplicateTargetGroupNameException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicateTargetGroupNameException"
        "481":
          description: TooManyTargetGroupsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTargetGroupsException"
        "482":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - CreateTargetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Name:
                  description: <p>The name of the target group.</p> <p>This name must be
                    unique per region per account, can have a maximum of 32
                    characters, must contain only alphanumeric characters or
                    hyphens, and must not begin or end with a hyphen.</p>
                  type: string
                Protocol:
                  description: The protocol to use for routing traffic to the targets. For
                    Application Load Balancers, the supported protocols are HTTP
                    and HTTPS. For Network Load Balancers, the supported
                    protocols are TCP, TLS, UDP, or TCP_UDP. A TCP_UDP listener
                    must be associated with a TCP_UDP target group. If the
                    target is a Lambda function, this parameter does not apply.
                  type: string
                  enum:
                    - HTTP
                    - HTTPS
                    - TCP
                    - TLS
                    - UDP
                    - TCP_UDP
                Port:
                  description: The port on which the targets receive traffic. This port is
                    used unless you specify a port override when registering the
                    target. If the target is a Lambda function, this parameter
                    does not apply.
                  type: integer
                  minimum: 1
                  maximum: 65535
                VpcId:
                  description: The identifier of the virtual private cloud (VPC). If the
                    target is a Lambda function, this parameter does not apply.
                    Otherwise, this parameter is required.
                  type: string
                HealthCheckProtocol:
                  description: The protocol the load balancer uses when performing health
                    checks on targets. For Application Load Balancers, the
                    default is HTTP. For Network Load Balancers, the default is
                    TCP. The TCP protocol is supported for health checks only if
                    the protocol of the target group is TCP, TLS, UDP, or
                    TCP_UDP. The TLS, UDP, and TCP_UDP protocols are not
                    supported for health checks.
                  type: string
                  enum:
                    - HTTP
                    - HTTPS
                    - TCP
                    - TLS
                    - UDP
                    - TCP_UDP
                HealthCheckPort:
                  description: The port the load balancer uses when performing health
                    checks on targets. The default is <code>traffic-port</code>,
                    which is the port on which each target receives traffic from
                    the load balancer.
                  type: string
                HealthCheckEnabled:
                  description: Indicates whether health checks are enabled. If the target
                    type is <code>lambda</code>, health checks are disabled by
                    default but can be enabled. If the target type is
                    <code>instance</code> or <code>ip</code>, health checks are
                    always enabled and cannot be disabled.
                  type: boolean
                HealthCheckPath:
                  description: "[HTTP/HTTPS health checks] The ping path that is the
                    destination on the targets for health checks. The default is
                    /."
                  type: string
                  minLength: 1
                  maxLength: 1024
                HealthCheckIntervalSeconds:
                  description: The approximate amount of time, in seconds, between health
                    checks of an individual target. For HTTP and HTTPS health
                    checks, the range is 5–300 seconds. For TCP health checks,
                    the supported values are 10 and 30 seconds. If the target
                    type is <code>instance</code> or <code>ip</code>, the
                    default is 30 seconds. If the target type is
                    <code>lambda</code>, the default is 35 seconds.
                  type: integer
                  minimum: 5
                  maximum: 300
                HealthCheckTimeoutSeconds:
                  description: The amount of time, in seconds, during which no response
                    from a target means a failed health check. For target groups
                    with a protocol of HTTP or HTTPS, the default is 5 seconds.
                    For target groups with a protocol of TCP or TLS, this value
                    must be 6 seconds for HTTP health checks and 10 seconds for
                    TCP and HTTPS health checks. If the target type is
                    <code>lambda</code>, the default is 30 seconds.
                  type: integer
                  minimum: 2
                  maximum: 120
                HealthyThresholdCount:
                  description: The number of consecutive health checks successes required
                    before considering an unhealthy target healthy. For target
                    groups with a protocol of HTTP or HTTPS, the default is 5.
                    For target groups with a protocol of TCP or TLS, the default
                    is 3. If the target type is <code>lambda</code>, the default
                    is 5.
                  type: integer
                  minimum: 2
                  maximum: 10
                UnhealthyThresholdCount:
                  description: The number of consecutive health check failures required
                    before considering a target unhealthy. For target groups
                    with a protocol of HTTP or HTTPS, the default is 2. For
                    target groups with a protocol of TCP or TLS, this value must
                    be the same as the healthy threshold count. If the target
                    type is <code>lambda</code>, the default is 2.
                  type: integer
                  minimum: 2
                  maximum: 10
                Matcher.HttpCode:
                  description: >-
                    Information to use when checking for a successful response
                    from a target.

                    <p>The HTTP codes.</p> <p>For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values (for example, "200,202") or a range of values (for example, "200-299").</p> <p>For Network Load Balancers, this is 200–399.</p>
                  type: string
                TargetType:
                  description: <p>The type of target that you must specify when registering
                    targets with this target group. You can't specify targets
                    for a target group using more than one target type.</p> <ul>
                    <li> <p> <code>instance</code> - Targets are specified by
                    instance ID. This is the default value. If the target group
                    protocol is UDP or TCP_UDP, the target type must be
                    <code>instance</code>.</p> </li> <li> <p> <code>ip</code> -
                    Targets are specified by IP address. You can specify IP
                    addresses from the subnets of the virtual private cloud
                    (VPC) for the target group, the RFC 1918 range (10.0.0.0/8,
                    172.16.0.0/12, and 192.168.0.0/16), and the RFC 6598 range
                    (100.64.0.0/10). You can't specify publicly routable IP
                    addresses.</p> </li> <li> <p> <code>lambda</code> - The
                    target groups contains a single Lambda function.</p> </li>
                    </ul>
                  type: string
                  enum:
                    - instance
                    - ip
                    - lambda
              required:
                - Name
  /#Action=DeleteListener:
    get:
      x-aws-operation-name: DeleteListener
      operationId: GET DeleteListener
      description: <p>Deletes the specified listener.</p> <p>Alternatively, your listener
        is deleted when you delete the load balancer to which it is attached,
        using <a>DeleteLoadBalancer</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteListenerOutput"
        "480":
          description: ListenerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListenerNotFoundException"
      parameters:
        - name: ListenerArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the listener.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteListener
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteListener
      operationId: POST DeleteListener
      description: <p>Deletes the specified listener.</p> <p>Alternatively, your listener
        is deleted when you delete the load balancer to which it is attached,
        using <a>DeleteLoadBalancer</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteListenerOutput"
        "480":
          description: ListenerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListenerNotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteListener
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ListenerArn:
                  description: The Amazon Resource Name (ARN) of the listener.
                  type: string
              required:
                - ListenerArn
  /#Action=DeleteLoadBalancer:
    get:
      x-aws-operation-name: DeleteLoadBalancer
      operationId: GET DeleteLoadBalancer
      description: <p>Deletes the specified Application Load Balancer or Network Load
        Balancer and its attached listeners.</p> <p>You can't delete a load
        balancer if deletion protection is enabled. If the load balancer does
        not exist or has already been deleted, the call succeeds.</p>
        <p>Deleting a load balancer does not affect its registered targets. For
        example, your EC2 instances continue to run and are still registered to
        their target groups. If you no longer need these EC2 instances, you can
        stop or terminate them.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteLoadBalancerOutput"
        "480":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
        "481":
          description: OperationNotPermittedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
        "482":
          description: ResourceInUseException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
      parameters:
        - name: LoadBalancerArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the load balancer.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteLoadBalancer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteLoadBalancer
      operationId: POST DeleteLoadBalancer
      description: <p>Deletes the specified Application Load Balancer or Network Load
        Balancer and its attached listeners.</p> <p>You can't delete a load
        balancer if deletion protection is enabled. If the load balancer does
        not exist or has already been deleted, the call succeeds.</p>
        <p>Deleting a load balancer does not affect its registered targets. For
        example, your EC2 instances continue to run and are still registered to
        their target groups. If you no longer need these EC2 instances, you can
        stop or terminate them.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteLoadBalancerOutput"
        "480":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
        "481":
          description: OperationNotPermittedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
        "482":
          description: ResourceInUseException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteLoadBalancer
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        $ref: "#/components/requestBodies/POST_DeleteLoadBalancer"
  /#Action=DeleteRule:
    get:
      x-aws-operation-name: DeleteRule
      operationId: GET DeleteRule
      description: Deletes the specified rule.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteRuleOutput"
        "480":
          description: RuleNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RuleNotFoundException"
        "481":
          description: OperationNotPermittedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: RuleArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the rule.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteRule
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteRule
      operationId: POST DeleteRule
      description: Deletes the specified rule.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteRuleOutput"
        "480":
          description: RuleNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RuleNotFoundException"
        "481":
          description: OperationNotPermittedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteRule
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                RuleArn:
                  description: The Amazon Resource Name (ARN) of the rule.
                  type: string
              required:
                - RuleArn
  /#Action=DeleteTargetGroup:
    get:
      x-aws-operation-name: DeleteTargetGroup
      operationId: GET DeleteTargetGroup
      description: <p>Deletes the specified target group.</p> <p>You can delete a target
        group if it is not referenced by any actions. Deleting a target group
        also deletes any associated health checks.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteTargetGroupOutput"
        "480":
          description: ResourceInUseException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
      parameters:
        - name: TargetGroupArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the target group.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteTargetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeleteTargetGroup
      operationId: POST DeleteTargetGroup
      description: <p>Deletes the specified target group.</p> <p>You can delete a target
        group if it is not referenced by any actions. Deleting a target group
        also deletes any associated health checks.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeleteTargetGroupOutput"
        "480":
          description: ResourceInUseException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeleteTargetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        $ref: "#/components/requestBodies/POST_DeleteTargetGroup"
  /#Action=DeregisterTargets:
    get:
      x-aws-operation-name: DeregisterTargets
      operationId: GET DeregisterTargets
      description: Deregisters the specified targets from the specified target group. After
        the targets are deregistered, they no longer receive traffic from the
        load balancer.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeregisterTargetsOutput"
        "480":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
        "481":
          description: InvalidTargetException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTargetException"
      parameters:
        - name: TargetGroupArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the target group.
          schema:
            type: string
        - name: Targets
          in: query
          required: true
          description: The targets. If you specified a port override when you registered a
            target, you must specify both the target ID and the port when you
            deregister it.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeregisterTargets
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DeregisterTargets
      operationId: POST DeregisterTargets
      description: Deregisters the specified targets from the specified target group. After
        the targets are deregistered, they no longer receive traffic from the
        load balancer.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DeregisterTargetsOutput"
        "480":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
        "481":
          description: InvalidTargetException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTargetException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DeregisterTargets
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                TargetGroupArn:
                  description: The Amazon Resource Name (ARN) of the target group.
                  type: string
                Targets:
                  description: The targets. If you specified a port override when you
                    registered a target, you must specify both the target ID and
                    the port when you deregister it.
                  type: array
                  items:
                    type: string
              required:
                - TargetGroupArn
                - Targets
  /#Action=DescribeAccountLimits:
    get:
      x-aws-operation-name: DescribeAccountLimits
      operationId: GET DescribeAccountLimits
      description: <p>Describes the current Elastic Load Balancing resource limits for your
        AWS account.</p> <p>For more information, see <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-limits.html">Limits
        for Your Application Load Balancers</a> in the <i>Application Load
        Balancer Guide</i> or <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-limits.html">Limits
        for Your Network Load Balancers</a> in the <i>Network Load Balancers
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeAccountLimitsOutput"
      parameters:
        - name: Marker
          in: query
          required: false
          description: The marker for the next set of results. (You received this marker
            from a previous call.)
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: The maximum number of results to return with this call.
          schema:
            type: integer
            minimum: 1
            maximum: 400
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAccountLimits
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeAccountLimits
      operationId: POST DescribeAccountLimits
      description: <p>Describes the current Elastic Load Balancing resource limits for your
        AWS account.</p> <p>For more information, see <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-limits.html">Limits
        for Your Application Load Balancers</a> in the <i>Application Load
        Balancer Guide</i> or <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-limits.html">Limits
        for Your Network Load Balancers</a> in the <i>Network Load Balancers
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeAccountLimitsOutput"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeAccountLimits
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Marker:
                  description: The marker for the next set of results. (You received this
                    marker from a previous call.)
                  type: string
                PageSize:
                  description: The maximum number of results to return with this call.
                  type: integer
                  minimum: 1
                  maximum: 400
  /#Action=DescribeListenerCertificates:
    get:
      x-aws-operation-name: DescribeListenerCertificates
      operationId: GET DescribeListenerCertificates
      description: <p>Describes the default certificate and the certificate list for the
        specified HTTPS or TLS listener.</p> <p>If the default certificate is
        also in the certificate list, it appears twice in the results (once with
        <code>IsDefault</code> set to true and once with <code>IsDefault</code>
        set to false).</p> <p>For more information, see <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#https-listener-certificates">SSL
        Certificates</a> in the <i>Application Load Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeListenerCertificatesOutput"
        "480":
          description: ListenerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListenerNotFoundException"
      parameters:
        - name: ListenerArn
          in: query
          required: true
          description: The Amazon Resource Names (ARN) of the listener.
          schema:
            type: string
        - name: Marker
          in: query
          required: false
          description: The marker for the next set of results. (You received this marker
            from a previous call.)
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: The maximum number of results to return with this call.
          schema:
            type: integer
            minimum: 1
            maximum: 400
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeListenerCertificates
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeListenerCertificates
      operationId: POST DescribeListenerCertificates
      description: <p>Describes the default certificate and the certificate list for the
        specified HTTPS or TLS listener.</p> <p>If the default certificate is
        also in the certificate list, it appears twice in the results (once with
        <code>IsDefault</code> set to true and once with <code>IsDefault</code>
        set to false).</p> <p>For more information, see <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#https-listener-certificates">SSL
        Certificates</a> in the <i>Application Load Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeListenerCertificatesOutput"
        "480":
          description: ListenerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListenerNotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeListenerCertificates
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ListenerArn:
                  description: The Amazon Resource Names (ARN) of the listener.
                  type: string
                Marker:
                  description: The marker for the next set of results. (You received this
                    marker from a previous call.)
                  type: string
                PageSize:
                  description: The maximum number of results to return with this call.
                  type: integer
                  minimum: 1
                  maximum: 400
              required:
                - ListenerArn
  /#Action=DescribeListeners:
    get:
      x-aws-operation-name: DescribeListeners
      operationId: GET DescribeListeners
      description: <p>Describes the specified listeners or the listeners for the specified
        Application Load Balancer or Network Load Balancer. You must specify
        either a load balancer or one or more listeners.</p> <p>For an HTTPS or
        TLS listener, the output includes the default certificate for the
        listener. To describe the certificate list for the listener, use
        <a>DescribeListenerCertificates</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeListenersOutput"
        "480":
          description: ListenerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListenerNotFoundException"
        "481":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
        "482":
          description: UnsupportedProtocolException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedProtocolException"
      parameters:
        - name: LoadBalancerArn
          in: query
          required: false
          description: The Amazon Resource Name (ARN) of the load balancer.
          schema:
            type: string
        - name: ListenerArns
          in: query
          required: false
          description: The Amazon Resource Names (ARN) of the listeners.
          schema:
            type: array
            items:
              type: string
        - name: Marker
          in: query
          required: false
          description: The marker for the next set of results. (You received this marker
            from a previous call.)
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: The maximum number of results to return with this call.
          schema:
            type: integer
            minimum: 1
            maximum: 400
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeListeners
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeListeners
      operationId: POST DescribeListeners
      description: <p>Describes the specified listeners or the listeners for the specified
        Application Load Balancer or Network Load Balancer. You must specify
        either a load balancer or one or more listeners.</p> <p>For an HTTPS or
        TLS listener, the output includes the default certificate for the
        listener. To describe the certificate list for the listener, use
        <a>DescribeListenerCertificates</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeListenersOutput"
        "480":
          description: ListenerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListenerNotFoundException"
        "481":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
        "482":
          description: UnsupportedProtocolException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedProtocolException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeListeners
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerArn:
                  description: The Amazon Resource Name (ARN) of the load balancer.
                  type: string
                ListenerArns:
                  description: The Amazon Resource Names (ARN) of the listeners.
                  type: array
                  items:
                    type: string
                Marker:
                  description: The marker for the next set of results. (You received this
                    marker from a previous call.)
                  type: string
                PageSize:
                  description: The maximum number of results to return with this call.
                  type: integer
                  minimum: 1
                  maximum: 400
  /#Action=DescribeLoadBalancerAttributes:
    get:
      x-aws-operation-name: DescribeLoadBalancerAttributes
      operationId: GET DescribeLoadBalancerAttributes
      description: <p>Describes the attributes for the specified Application Load Balancer
        or Network Load Balancer.</p> <p>For more information, see <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html#load-balancer-attributes">Load
        Balancer Attributes</a> in the <i>Application Load Balancers Guide</i>
        or <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/network-load-balancers.html#load-balancer-attributes">Load
        Balancer Attributes</a> in the <i>Network Load Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeLoadBalancerAttributesOutput"
        "480":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
      parameters:
        - name: LoadBalancerArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the load balancer.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLoadBalancerAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeLoadBalancerAttributes
      operationId: POST DescribeLoadBalancerAttributes
      description: <p>Describes the attributes for the specified Application Load Balancer
        or Network Load Balancer.</p> <p>For more information, see <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html#load-balancer-attributes">Load
        Balancer Attributes</a> in the <i>Application Load Balancers Guide</i>
        or <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/network-load-balancers.html#load-balancer-attributes">Load
        Balancer Attributes</a> in the <i>Network Load Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeLoadBalancerAttributesOutput"
        "480":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLoadBalancerAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        $ref: "#/components/requestBodies/POST_DeleteLoadBalancer"
  /#Action=DescribeLoadBalancers:
    get:
      x-aws-operation-name: DescribeLoadBalancers
      operationId: GET DescribeLoadBalancers
      description: <p>Describes the specified load balancers or all of your load
        balancers.</p> <p>To describe the listeners for a load balancer, use
        <a>DescribeListeners</a>. To describe the attributes for a load
        balancer, use <a>DescribeLoadBalancerAttributes</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeLoadBalancersOutput"
        "480":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
      parameters:
        - name: LoadBalancerArns
          in: query
          required: false
          description: The Amazon Resource Names (ARN) of the load balancers. You can
            specify up to 20 load balancers in a single call.
          schema:
            type: array
            items:
              type: string
        - name: Names
          in: query
          required: false
          description: The names of the load balancers.
          schema:
            type: array
            items:
              type: string
        - name: Marker
          in: query
          required: false
          description: The marker for the next set of results. (You received this marker
            from a previous call.)
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: The maximum number of results to return with this call.
          schema:
            type: integer
            minimum: 1
            maximum: 400
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLoadBalancers
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeLoadBalancers
      operationId: POST DescribeLoadBalancers
      description: <p>Describes the specified load balancers or all of your load
        balancers.</p> <p>To describe the listeners for a load balancer, use
        <a>DescribeListeners</a>. To describe the attributes for a load
        balancer, use <a>DescribeLoadBalancerAttributes</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeLoadBalancersOutput"
        "480":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeLoadBalancers
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerArns:
                  description: The Amazon Resource Names (ARN) of the load balancers. You
                    can specify up to 20 load balancers in a single call.
                  type: array
                  items:
                    type: string
                Names:
                  description: The names of the load balancers.
                  type: array
                  items:
                    type: string
                Marker:
                  description: The marker for the next set of results. (You received this
                    marker from a previous call.)
                  type: string
                PageSize:
                  description: The maximum number of results to return with this call.
                  type: integer
                  minimum: 1
                  maximum: 400
  /#Action=DescribeRules:
    get:
      x-aws-operation-name: DescribeRules
      operationId: GET DescribeRules
      description: Describes the specified rules or the rules for the specified listener.
        You must specify either a listener or one or more rules.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeRulesOutput"
        "480":
          description: ListenerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListenerNotFoundException"
        "481":
          description: RuleNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RuleNotFoundException"
        "482":
          description: UnsupportedProtocolException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedProtocolException"
      parameters:
        - name: ListenerArn
          in: query
          required: false
          description: The Amazon Resource Name (ARN) of the listener.
          schema:
            type: string
        - name: RuleArns
          in: query
          required: false
          description: The Amazon Resource Names (ARN) of the rules.
          schema:
            type: array
            items:
              type: string
        - name: Marker
          in: query
          required: false
          description: The marker for the next set of results. (You received this marker
            from a previous call.)
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: The maximum number of results to return with this call.
          schema:
            type: integer
            minimum: 1
            maximum: 400
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeRules
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeRules
      operationId: POST DescribeRules
      description: Describes the specified rules or the rules for the specified listener.
        You must specify either a listener or one or more rules.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeRulesOutput"
        "480":
          description: ListenerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListenerNotFoundException"
        "481":
          description: RuleNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RuleNotFoundException"
        "482":
          description: UnsupportedProtocolException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedProtocolException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeRules
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ListenerArn:
                  description: The Amazon Resource Name (ARN) of the listener.
                  type: string
                RuleArns:
                  description: The Amazon Resource Names (ARN) of the rules.
                  type: array
                  items:
                    type: string
                Marker:
                  description: The marker for the next set of results. (You received this
                    marker from a previous call.)
                  type: string
                PageSize:
                  description: The maximum number of results to return with this call.
                  type: integer
                  minimum: 1
                  maximum: 400
  /#Action=DescribeSSLPolicies:
    get:
      x-aws-operation-name: DescribeSSLPolicies
      operationId: GET DescribeSSLPolicies
      description: <p>Describes the specified policies or all policies used for SSL
        negotiation.</p> <p>For more information, see <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies">Security
        Policies</a> in the <i>Application Load Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeSSLPoliciesOutput"
        "480":
          description: SSLPolicyNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SSLPolicyNotFoundException"
      parameters:
        - name: Names
          in: query
          required: false
          description: The names of the policies.
          schema:
            type: array
            items:
              type: string
        - name: Marker
          in: query
          required: false
          description: The marker for the next set of results. (You received this marker
            from a previous call.)
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: The maximum number of results to return with this call.
          schema:
            type: integer
            minimum: 1
            maximum: 400
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeSSLPolicies
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeSSLPolicies
      operationId: POST DescribeSSLPolicies
      description: <p>Describes the specified policies or all policies used for SSL
        negotiation.</p> <p>For more information, see <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies">Security
        Policies</a> in the <i>Application Load Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeSSLPoliciesOutput"
        "480":
          description: SSLPolicyNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SSLPolicyNotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeSSLPolicies
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                Names:
                  description: The names of the policies.
                  type: array
                  items:
                    type: string
                Marker:
                  description: The marker for the next set of results. (You received this
                    marker from a previous call.)
                  type: string
                PageSize:
                  description: The maximum number of results to return with this call.
                  type: integer
                  minimum: 1
                  maximum: 400
  /#Action=DescribeTags:
    get:
      x-aws-operation-name: DescribeTags
      operationId: GET DescribeTags
      description: Describes the tags for the specified resources. You can describe the
        tags for one or more Application Load Balancers, Network Load Balancers,
        and target groups.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeTagsOutput"
        "480":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
        "481":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
        "482":
          description: ListenerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListenerNotFoundException"
        "483":
          description: RuleNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RuleNotFoundException"
      parameters:
        - name: ResourceArns
          in: query
          required: true
          description: The Amazon Resource Names (ARN) of the resources.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeTags
      operationId: POST DescribeTags
      description: Describes the tags for the specified resources. You can describe the
        tags for one or more Application Load Balancers, Network Load Balancers,
        and target groups.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeTagsOutput"
        "480":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
        "481":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
        "482":
          description: ListenerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListenerNotFoundException"
        "483":
          description: RuleNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RuleNotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ResourceArns:
                  description: The Amazon Resource Names (ARN) of the resources.
                  type: array
                  items:
                    type: string
              required:
                - ResourceArns
  /#Action=DescribeTargetGroupAttributes:
    get:
      x-aws-operation-name: DescribeTargetGroupAttributes
      operationId: GET DescribeTargetGroupAttributes
      description: <p>Describes the attributes for the specified target group.</p> <p>For
        more information, see <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html#target-group-attributes">Target
        Group Attributes</a> in the <i>Application Load Balancers Guide</i> or
        <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html#target-group-attributes">Target
        Group Attributes</a> in the <i>Network Load Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeTargetGroupAttributesOutput"
        "480":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
      parameters:
        - name: TargetGroupArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the target group.
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeTargetGroupAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeTargetGroupAttributes
      operationId: POST DescribeTargetGroupAttributes
      description: <p>Describes the attributes for the specified target group.</p> <p>For
        more information, see <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-target-groups.html#target-group-attributes">Target
        Group Attributes</a> in the <i>Application Load Balancers Guide</i> or
        <a
        href="https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html#target-group-attributes">Target
        Group Attributes</a> in the <i>Network Load Balancers Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeTargetGroupAttributesOutput"
        "480":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeTargetGroupAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        $ref: "#/components/requestBodies/POST_DeleteTargetGroup"
  /#Action=DescribeTargetGroups:
    get:
      x-aws-operation-name: DescribeTargetGroups
      operationId: GET DescribeTargetGroups
      description: "<p>Describes the specified target groups or all of your target groups.
        By default, all target groups are described. Alternatively, you can
        specify one of the following to filter the results: the ARN of the load
        balancer, the names of one or more target groups, or the ARNs of one or
        more target groups.</p> <p>To describe the targets for a target group,
        use <a>DescribeTargetHealth</a>. To describe the attributes of a target
        group, use <a>DescribeTargetGroupAttributes</a>.</p>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeTargetGroupsOutput"
        "480":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
        "481":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
      parameters:
        - name: LoadBalancerArn
          in: query
          required: false
          description: The Amazon Resource Name (ARN) of the load balancer.
          schema:
            type: string
        - name: TargetGroupArns
          in: query
          required: false
          description: The Amazon Resource Names (ARN) of the target groups.
          schema:
            type: array
            items:
              type: string
        - name: Names
          in: query
          required: false
          description: The names of the target groups.
          schema:
            type: array
            items:
              type: string
        - name: Marker
          in: query
          required: false
          description: The marker for the next set of results. (You received this marker
            from a previous call.)
          schema:
            type: string
        - name: PageSize
          in: query
          required: false
          description: The maximum number of results to return with this call.
          schema:
            type: integer
            minimum: 1
            maximum: 400
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeTargetGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeTargetGroups
      operationId: POST DescribeTargetGroups
      description: "<p>Describes the specified target groups or all of your target groups.
        By default, all target groups are described. Alternatively, you can
        specify one of the following to filter the results: the ARN of the load
        balancer, the names of one or more target groups, or the ARNs of one or
        more target groups.</p> <p>To describe the targets for a target group,
        use <a>DescribeTargetHealth</a>. To describe the attributes of a target
        group, use <a>DescribeTargetGroupAttributes</a>.</p>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeTargetGroupsOutput"
        "480":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
        "481":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeTargetGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerArn:
                  description: The Amazon Resource Name (ARN) of the load balancer.
                  type: string
                TargetGroupArns:
                  description: The Amazon Resource Names (ARN) of the target groups.
                  type: array
                  items:
                    type: string
                Names:
                  description: The names of the target groups.
                  type: array
                  items:
                    type: string
                Marker:
                  description: The marker for the next set of results. (You received this
                    marker from a previous call.)
                  type: string
                PageSize:
                  description: The maximum number of results to return with this call.
                  type: integer
                  minimum: 1
                  maximum: 400
  /#Action=DescribeTargetHealth:
    get:
      x-aws-operation-name: DescribeTargetHealth
      operationId: GET DescribeTargetHealth
      description: Describes the health of the specified targets or all of your targets.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeTargetHealthOutput"
        "480":
          description: InvalidTargetException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTargetException"
        "481":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
        "482":
          description: HealthUnavailableException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HealthUnavailableException"
      parameters:
        - name: TargetGroupArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the target group.
          schema:
            type: string
        - name: Targets
          in: query
          required: false
          description: The targets.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeTargetHealth
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: DescribeTargetHealth
      operationId: POST DescribeTargetHealth
      description: Describes the health of the specified targets or all of your targets.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DescribeTargetHealthOutput"
        "480":
          description: InvalidTargetException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTargetException"
        "481":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
        "482":
          description: HealthUnavailableException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/HealthUnavailableException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - DescribeTargetHealth
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                TargetGroupArn:
                  description: The Amazon Resource Name (ARN) of the target group.
                  type: string
                Targets:
                  description: The targets.
                  type: array
                  items:
                    type: string
              required:
                - TargetGroupArn
  /#Action=ModifyListener:
    get:
      x-aws-operation-name: ModifyListener
      operationId: GET ModifyListener
      description: <p>Modifies the specified properties of the specified listener.</p>
        <p>Any properties that you do not specify retain their current values.
        However, changing the protocol from HTTPS to HTTP, or from TLS to TCP,
        removes the security policy and default certificate properties. If you
        change the protocol from HTTP to HTTPS, or from TCP to TLS, you must add
        the security policy and default certificate properties.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyListenerOutput"
        "480":
          description: DuplicateListenerException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicateListenerException"
        "481":
          description: TooManyListenersException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyListenersException"
        "482":
          description: TooManyCertificatesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyCertificatesException"
        "483":
          description: ListenerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListenerNotFoundException"
        "484":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
        "485":
          description: TargetGroupAssociationLimitException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupAssociationLimitException"
        "486":
          description: IncompatibleProtocolsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/IncompatibleProtocolsException"
        "487":
          description: SSLPolicyNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SSLPolicyNotFoundException"
        "488":
          description: CertificateNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateNotFoundException"
        "489":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
        "490":
          description: UnsupportedProtocolException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedProtocolException"
        "491":
          description: TooManyRegistrationsForTargetIdException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyRegistrationsForTargetIdException"
        "492":
          description: TooManyTargetsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTargetsException"
        "493":
          description: TooManyActionsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyActionsException"
        "494":
          description: InvalidLoadBalancerActionException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidLoadBalancerActionException"
      parameters:
        - name: ListenerArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the listener.
          schema:
            type: string
        - name: Port
          in: query
          required: false
          description: The port for connections from clients to the load balancer.
          schema:
            type: integer
            minimum: 1
            maximum: 65535
        - name: Protocol
          in: query
          required: false
          description: The protocol for connections from clients to the load balancer.
            Application Load Balancers support the HTTP and HTTPS protocols.
            Network Load Balancers support the TCP, TLS, UDP, and TCP_UDP
            protocols.
          schema:
            type: string
            enum:
              - HTTP
              - HTTPS
              - TCP
              - TLS
              - UDP
              - TCP_UDP
        - name: SslPolicy
          in: query
          required: false
          description: '[HTTPS and TLS listeners] The security policy that defines which
            protocols and ciphers are supported. For more information, see <a
            href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies">Security
            Policies</a> in the <i>Application Load Balancers Guide</i>.'
          schema:
            type: string
        - name: Certificates
          in: query
          required: false
          description: <p>[HTTPS and TLS listeners] The default certificate for the
            listener. You must provide exactly one certificate. Set
            <code>CertificateArn</code> to the certificate ARN but do not set
            <code>IsDefault</code>.</p> <p>To create a certificate list, use
            <a>AddListenerCertificates</a>.</p>
          schema:
            type: array
            items:
              type: string
        - name: DefaultActions
          in: query
          required: false
          description: <p>The actions for the default rule. The rule must include one
            forward action or one or more fixed-response actions.</p> <p>If the
            action type is <code>forward</code>, you specify a target group. The
            protocol of the target group must be HTTP or HTTPS for an
            Application Load Balancer. The protocol of the target group must be
            TCP, TLS, UDP, or TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS
            listeners] If the action type is <code>authenticate-oidc</code>, you
            authenticate users through an identity provider that is OpenID
            Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If the action
            type is <code>authenticate-cognito</code>, you authenticate users
            through the user pools supported by Amazon Cognito.</p>
            <p>[Application Load Balancer] If the action type is
            <code>redirect</code>, you redirect specified client requests from
            one URL to another.</p> <p>[Application Load Balancer] If the action
            type is <code>fixed-response</code>, you drop specified client
            requests and return a custom HTTP response.</p>
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyListener
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyListener
      operationId: POST ModifyListener
      description: <p>Modifies the specified properties of the specified listener.</p>
        <p>Any properties that you do not specify retain their current values.
        However, changing the protocol from HTTPS to HTTP, or from TLS to TCP,
        removes the security policy and default certificate properties. If you
        change the protocol from HTTP to HTTPS, or from TCP to TLS, you must add
        the security policy and default certificate properties.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyListenerOutput"
        "480":
          description: DuplicateListenerException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/DuplicateListenerException"
        "481":
          description: TooManyListenersException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyListenersException"
        "482":
          description: TooManyCertificatesException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyCertificatesException"
        "483":
          description: ListenerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListenerNotFoundException"
        "484":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
        "485":
          description: TargetGroupAssociationLimitException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupAssociationLimitException"
        "486":
          description: IncompatibleProtocolsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/IncompatibleProtocolsException"
        "487":
          description: SSLPolicyNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SSLPolicyNotFoundException"
        "488":
          description: CertificateNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/CertificateNotFoundException"
        "489":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
        "490":
          description: UnsupportedProtocolException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedProtocolException"
        "491":
          description: TooManyRegistrationsForTargetIdException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyRegistrationsForTargetIdException"
        "492":
          description: TooManyTargetsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTargetsException"
        "493":
          description: TooManyActionsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyActionsException"
        "494":
          description: InvalidLoadBalancerActionException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidLoadBalancerActionException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyListener
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ListenerArn:
                  description: The Amazon Resource Name (ARN) of the listener.
                  type: string
                Port:
                  description: The port for connections from clients to the load balancer.
                  type: integer
                  minimum: 1
                  maximum: 65535
                Protocol:
                  description: The protocol for connections from clients to the load
                    balancer. Application Load Balancers support the HTTP and
                    HTTPS protocols. Network Load Balancers support the TCP,
                    TLS, UDP, and TCP_UDP protocols.
                  type: string
                  enum:
                    - HTTP
                    - HTTPS
                    - TCP
                    - TLS
                    - UDP
                    - TCP_UDP
                SslPolicy:
                  description: '[HTTPS and TLS listeners] The security policy that defines
                    which protocols and ciphers are supported. For more
                    information, see <a
                    href="https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies">Security
                    Policies</a> in the <i>Application Load Balancers
                    Guide</i>.'
                  type: string
                Certificates:
                  description: <p>[HTTPS and TLS listeners] The default certificate for the
                    listener. You must provide exactly one certificate. Set
                    <code>CertificateArn</code> to the certificate ARN but do
                    not set <code>IsDefault</code>.</p> <p>To create a
                    certificate list, use <a>AddListenerCertificates</a>.</p>
                  type: array
                  items:
                    type: string
                DefaultActions:
                  description: <p>The actions for the default rule. The rule must include
                    one forward action or one or more fixed-response
                    actions.</p> <p>If the action type is <code>forward</code>,
                    you specify a target group. The protocol of the target group
                    must be HTTP or HTTPS for an Application Load Balancer. The
                    protocol of the target group must be TCP, TLS, UDP, or
                    TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS
                    listeners] If the action type is
                    <code>authenticate-oidc</code>, you authenticate users
                    through an identity provider that is OpenID Connect (OIDC)
                    compliant.</p> <p>[HTTPS listeners] If the action type is
                    <code>authenticate-cognito</code>, you authenticate users
                    through the user pools supported by Amazon Cognito.</p>
                    <p>[Application Load Balancer] If the action type is
                    <code>redirect</code>, you redirect specified client
                    requests from one URL to another.</p> <p>[Application Load
                    Balancer] If the action type is <code>fixed-response</code>,
                    you drop specified client requests and return a custom HTTP
                    response.</p>
                  type: array
                  items:
                    type: string
              required:
                - ListenerArn
  /#Action=ModifyLoadBalancerAttributes:
    get:
      x-aws-operation-name: ModifyLoadBalancerAttributes
      operationId: GET ModifyLoadBalancerAttributes
      description: <p>Modifies the specified attributes of the specified Application Load
        Balancer or Network Load Balancer.</p> <p>If any of the specified
        attributes can't be modified as requested, the call fails. Any existing
        attributes that you do not modify retain their current values.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyLoadBalancerAttributesOutput"
        "480":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
        "481":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: LoadBalancerArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the load balancer.
          schema:
            type: string
        - name: Attributes
          in: query
          required: true
          description: The load balancer attributes.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyLoadBalancerAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyLoadBalancerAttributes
      operationId: POST ModifyLoadBalancerAttributes
      description: <p>Modifies the specified attributes of the specified Application Load
        Balancer or Network Load Balancer.</p> <p>If any of the specified
        attributes can't be modified as requested, the call fails. Any existing
        attributes that you do not modify retain their current values.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyLoadBalancerAttributesOutput"
        "480":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
        "481":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyLoadBalancerAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerArn:
                  description: The Amazon Resource Name (ARN) of the load balancer.
                  type: string
                Attributes:
                  description: The load balancer attributes.
                  type: array
                  items:
                    type: string
              required:
                - LoadBalancerArn
                - Attributes
  /#Action=ModifyRule:
    get:
      x-aws-operation-name: ModifyRule
      operationId: GET ModifyRule
      description: <p>Modifies the specified rule.</p> <p>Any existing properties that you
        do not modify retain their current values.</p> <p>To modify the actions
        for the default rule, use <a>ModifyListener</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyRuleOutput"
        "480":
          description: TargetGroupAssociationLimitException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupAssociationLimitException"
        "481":
          description: IncompatibleProtocolsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/IncompatibleProtocolsException"
        "482":
          description: RuleNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RuleNotFoundException"
        "483":
          description: OperationNotPermittedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
        "484":
          description: TooManyRegistrationsForTargetIdException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyRegistrationsForTargetIdException"
        "485":
          description: TooManyTargetsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTargetsException"
        "486":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
        "487":
          description: UnsupportedProtocolException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedProtocolException"
        "488":
          description: TooManyActionsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyActionsException"
        "489":
          description: InvalidLoadBalancerActionException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidLoadBalancerActionException"
      parameters:
        - name: RuleArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the rule.
          schema:
            type: string
        - name: Conditions
          in: query
          required: false
          description: "The conditions. Each rule can include zero or one of the following
            conditions: <code>http-request-method</code>,
            <code>host-header</code>, <code>path-pattern</code>, and
            <code>source-ip</code>, and zero or more of the following
            conditions: <code>http-header</code> and <code>query-string</code>."
          schema:
            type: array
            items:
              type: string
        - name: Actions
          in: query
          required: false
          description: "<p>The actions. Each rule must include exactly one of the following
            types of actions: <code>forward</code>, <code>fixed-response</code>,
            or <code>redirect</code>.</p> <p>If the action type is
            <code>forward</code>, you specify a target group. The protocol of
            the target group must be HTTP or HTTPS for an Application Load
            Balancer. The protocol of the target group must be TCP, TLS, UDP, or
            TCP_UDP for a Network Load Balancer.</p> <p>[HTTPS listeners] If the
            action type is <code>authenticate-oidc</code>, you authenticate
            users through an identity provider that is OpenID Connect (OIDC)
            compliant.</p> <p>[HTTPS listeners] If the action type is
            <code>authenticate-cognito</code>, you authenticate users through
            the user pools supported by Amazon Cognito.</p> <p>[Application Load
            Balancer] If the action type is <code>redirect</code>, you redirect
            specified client requests from one URL to another.</p>
            <p>[Application Load Balancer] If the action type is
            <code>fixed-response</code>, you drop specified client requests and
            return a custom HTTP response.</p>"
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyRule
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyRule
      operationId: POST ModifyRule
      description: <p>Modifies the specified rule.</p> <p>Any existing properties that you
        do not modify retain their current values.</p> <p>To modify the actions
        for the default rule, use <a>ModifyListener</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyRuleOutput"
        "480":
          description: TargetGroupAssociationLimitException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupAssociationLimitException"
        "481":
          description: IncompatibleProtocolsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/IncompatibleProtocolsException"
        "482":
          description: RuleNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RuleNotFoundException"
        "483":
          description: OperationNotPermittedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
        "484":
          description: TooManyRegistrationsForTargetIdException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyRegistrationsForTargetIdException"
        "485":
          description: TooManyTargetsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTargetsException"
        "486":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
        "487":
          description: UnsupportedProtocolException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/UnsupportedProtocolException"
        "488":
          description: TooManyActionsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyActionsException"
        "489":
          description: InvalidLoadBalancerActionException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidLoadBalancerActionException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyRule
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                RuleArn:
                  description: The Amazon Resource Name (ARN) of the rule.
                  type: string
                Conditions:
                  description: "The conditions. Each rule can include zero or one of the
                    following conditions: <code>http-request-method</code>,
                    <code>host-header</code>, <code>path-pattern</code>, and
                    <code>source-ip</code>, and zero or more of the following
                    conditions: <code>http-header</code> and
                    <code>query-string</code>."
                  type: array
                  items:
                    type: string
                Actions:
                  description: "<p>The actions. Each rule must include exactly one of the
                    following types of actions: <code>forward</code>,
                    <code>fixed-response</code>, or <code>redirect</code>.</p>
                    <p>If the action type is <code>forward</code>, you specify a
                    target group. The protocol of the target group must be HTTP
                    or HTTPS for an Application Load Balancer. The protocol of
                    the target group must be TCP, TLS, UDP, or TCP_UDP for a
                    Network Load Balancer.</p> <p>[HTTPS listeners] If the
                    action type is <code>authenticate-oidc</code>, you
                    authenticate users through an identity provider that is
                    OpenID Connect (OIDC) compliant.</p> <p>[HTTPS listeners] If
                    the action type is <code>authenticate-cognito</code>, you
                    authenticate users through the user pools supported by
                    Amazon Cognito.</p> <p>[Application Load Balancer] If the
                    action type is <code>redirect</code>, you redirect specified
                    client requests from one URL to another.</p> <p>[Application
                    Load Balancer] If the action type is
                    <code>fixed-response</code>, you drop specified client
                    requests and return a custom HTTP response.</p>"
                  type: array
                  items:
                    type: string
              required:
                - RuleArn
  /#Action=ModifyTargetGroup:
    get:
      x-aws-operation-name: ModifyTargetGroup
      operationId: GET ModifyTargetGroup
      description: <p>Modifies the health checks used when evaluating the health state of
        the targets in the specified target group.</p> <p>To monitor the health
        of the targets, use <a>DescribeTargetHealth</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyTargetGroupOutput"
        "480":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
        "481":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: TargetGroupArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the target group.
          schema:
            type: string
        - name: HealthCheckProtocol
          in: query
          required: false
          description: <p>The protocol the load balancer uses when performing health checks
            on targets. The TCP protocol is supported for health checks only if
            the protocol of the target group is TCP, TLS, UDP, or TCP_UDP. The
            TLS, UDP, and TCP_UDP protocols are not supported for health
            checks.</p> <p>If the protocol of the target group is TCP, you can't
            modify this setting.</p>
          schema:
            type: string
            enum:
              - HTTP
              - HTTPS
              - TCP
              - TLS
              - UDP
              - TCP_UDP
        - name: HealthCheckPort
          in: query
          required: false
          description: The port the load balancer uses when performing health checks on
            targets.
          schema:
            type: string
        - name: HealthCheckPath
          in: query
          required: false
          description: "[HTTP/HTTPS health checks] The ping path that is the destination
            for the health check request."
          schema:
            type: string
            minLength: 1
            maxLength: 1024
        - name: HealthCheckEnabled
          in: query
          required: false
          description: Indicates whether health checks are enabled.
          schema:
            type: boolean
        - name: HealthCheckIntervalSeconds
          in: query
          required: false
          description: <p>The approximate amount of time, in seconds, between health checks
            of an individual target. For Application Load Balancers, the range
            is 5 to 300 seconds. For Network Load Balancers, the supported
            values are 10 or 30 seconds.</p> <p>If the protocol of the target
            group is TCP, you can't modify this setting.</p>
          schema:
            type: integer
            minimum: 5
            maximum: 300
        - name: HealthCheckTimeoutSeconds
          in: query
          required: false
          description: <p>[HTTP/HTTPS health checks] The amount of time, in seconds, during
            which no response means a failed health check.</p> <p>If the
            protocol of the target group is TCP, you can't modify this
            setting.</p>
          schema:
            type: integer
            minimum: 2
            maximum: 120
        - name: HealthyThresholdCount
          in: query
          required: false
          description: The number of consecutive health checks successes required before
            considering an unhealthy target healthy.
          schema:
            type: integer
            minimum: 2
            maximum: 10
        - name: UnhealthyThresholdCount
          in: query
          required: false
          description: The number of consecutive health check failures required before
            considering the target unhealthy. For Network Load Balancers, this
            value must be the same as the healthy threshold count.
          schema:
            type: integer
            minimum: 2
            maximum: 10
        - name: Matcher.HttpCode
          in: query
          description: >-
            Information to use when checking for a successful response from a
            target.

            <p>The HTTP codes.</p> <p>For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values (for example, "200,202") or a range of values (for example, "200-299").</p> <p>For Network Load Balancers, this is 200–399.</p>
          schema:
            type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyTargetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyTargetGroup
      operationId: POST ModifyTargetGroup
      description: <p>Modifies the health checks used when evaluating the health state of
        the targets in the specified target group.</p> <p>To monitor the health
        of the targets, use <a>DescribeTargetHealth</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyTargetGroupOutput"
        "480":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
        "481":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyTargetGroup
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                TargetGroupArn:
                  description: The Amazon Resource Name (ARN) of the target group.
                  type: string
                HealthCheckProtocol:
                  description: <p>The protocol the load balancer uses when performing
                    health checks on targets. The TCP protocol is supported for
                    health checks only if the protocol of the target group is
                    TCP, TLS, UDP, or TCP_UDP. The TLS, UDP, and TCP_UDP
                    protocols are not supported for health checks.</p> <p>If the
                    protocol of the target group is TCP, you can't modify this
                    setting.</p>
                  type: string
                  enum:
                    - HTTP
                    - HTTPS
                    - TCP
                    - TLS
                    - UDP
                    - TCP_UDP
                HealthCheckPort:
                  description: The port the load balancer uses when performing health
                    checks on targets.
                  type: string
                HealthCheckPath:
                  description: "[HTTP/HTTPS health checks] The ping path that is the
                    destination for the health check request."
                  type: string
                  minLength: 1
                  maxLength: 1024
                HealthCheckEnabled:
                  description: Indicates whether health checks are enabled.
                  type: boolean
                HealthCheckIntervalSeconds:
                  description: <p>The approximate amount of time, in seconds, between
                    health checks of an individual target. For Application Load
                    Balancers, the range is 5 to 300 seconds. For Network Load
                    Balancers, the supported values are 10 or 30 seconds.</p>
                    <p>If the protocol of the target group is TCP, you can't
                    modify this setting.</p>
                  type: integer
                  minimum: 5
                  maximum: 300
                HealthCheckTimeoutSeconds:
                  description: <p>[HTTP/HTTPS health checks] The amount of time, in
                    seconds, during which no response means a failed health
                    check.</p> <p>If the protocol of the target group is TCP,
                    you can't modify this setting.</p>
                  type: integer
                  minimum: 2
                  maximum: 120
                HealthyThresholdCount:
                  description: The number of consecutive health checks successes required
                    before considering an unhealthy target healthy.
                  type: integer
                  minimum: 2
                  maximum: 10
                UnhealthyThresholdCount:
                  description: The number of consecutive health check failures required
                    before considering the target unhealthy. For Network Load
                    Balancers, this value must be the same as the healthy
                    threshold count.
                  type: integer
                  minimum: 2
                  maximum: 10
                Matcher.HttpCode:
                  description: >-
                    Information to use when checking for a successful response
                    from a target.

                    <p>The HTTP codes.</p> <p>For Application Load Balancers, you can specify values between 200 and 499, and the default value is 200. You can specify multiple values (for example, "200,202") or a range of values (for example, "200-299").</p> <p>For Network Load Balancers, this is 200–399.</p>
                  type: string
              required:
                - TargetGroupArn
  /#Action=ModifyTargetGroupAttributes:
    get:
      x-aws-operation-name: ModifyTargetGroupAttributes
      operationId: GET ModifyTargetGroupAttributes
      description: Modifies the specified attributes of the specified target group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyTargetGroupAttributesOutput"
        "480":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
        "481":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: TargetGroupArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the target group.
          schema:
            type: string
        - name: Attributes
          in: query
          required: true
          description: The attributes.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyTargetGroupAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: ModifyTargetGroupAttributes
      operationId: POST ModifyTargetGroupAttributes
      description: Modifies the specified attributes of the specified target group.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ModifyTargetGroupAttributesOutput"
        "480":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
        "481":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - ModifyTargetGroupAttributes
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                TargetGroupArn:
                  description: The Amazon Resource Name (ARN) of the target group.
                  type: string
                Attributes:
                  description: The attributes.
                  type: array
                  items:
                    type: string
              required:
                - TargetGroupArn
                - Attributes
  /#Action=RegisterTargets:
    get:
      x-aws-operation-name: RegisterTargets
      operationId: GET RegisterTargets
      description: "<p>Registers the specified targets with the specified target group.</p>
        <p>If the target is an EC2 instance, it must be in the
        <code>running</code> state when you register it.</p> <p>By default, the
        load balancer routes requests to registered targets using the protocol
        and port for the target group. Alternatively, you can override the port
        for a target when you register it. You can register each EC2 instance or
        IP address with the same target group multiple times using different
        ports.</p> <p>With a Network Load Balancer, you cannot register
        instances by instance ID if they have the following instance types: C1,
        CC1, CC2, CG1, CG2, CR1, CS1, G1, G2, HI1, HS1, M1, M2, M3, and T1. You
        can register instances of these types by IP address.</p> <p>To remove a
        target from a target group, use <a>DeregisterTargets</a>.</p>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RegisterTargetsOutput"
        "480":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
        "481":
          description: TooManyTargetsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTargetsException"
        "482":
          description: InvalidTargetException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTargetException"
        "483":
          description: TooManyRegistrationsForTargetIdException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyRegistrationsForTargetIdException"
      parameters:
        - name: TargetGroupArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the target group.
          schema:
            type: string
        - name: Targets
          in: query
          required: true
          description: <p>The targets.</p> <p>To register a target by instance ID, specify
            the instance ID. To register a target by IP address, specify the IP
            address. To register a Lambda function, specify the ARN of the
            Lambda function.</p>
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RegisterTargets
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RegisterTargets
      operationId: POST RegisterTargets
      description: "<p>Registers the specified targets with the specified target group.</p>
        <p>If the target is an EC2 instance, it must be in the
        <code>running</code> state when you register it.</p> <p>By default, the
        load balancer routes requests to registered targets using the protocol
        and port for the target group. Alternatively, you can override the port
        for a target when you register it. You can register each EC2 instance or
        IP address with the same target group multiple times using different
        ports.</p> <p>With a Network Load Balancer, you cannot register
        instances by instance ID if they have the following instance types: C1,
        CC1, CC2, CG1, CG2, CR1, CS1, G1, G2, HI1, HS1, M1, M2, M3, and T1. You
        can register instances of these types by IP address.</p> <p>To remove a
        target from a target group, use <a>DeregisterTargets</a>.</p>"
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RegisterTargetsOutput"
        "480":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
        "481":
          description: TooManyTargetsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTargetsException"
        "482":
          description: InvalidTargetException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidTargetException"
        "483":
          description: TooManyRegistrationsForTargetIdException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyRegistrationsForTargetIdException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RegisterTargets
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                TargetGroupArn:
                  description: The Amazon Resource Name (ARN) of the target group.
                  type: string
                Targets:
                  description: <p>The targets.</p> <p>To register a target by instance ID,
                    specify the instance ID. To register a target by IP address,
                    specify the IP address. To register a Lambda function,
                    specify the ARN of the Lambda function.</p>
                  type: array
                  items:
                    type: string
              required:
                - TargetGroupArn
                - Targets
  /#Action=RemoveListenerCertificates:
    get:
      x-aws-operation-name: RemoveListenerCertificates
      operationId: GET RemoveListenerCertificates
      description: <p>Removes the specified certificate from the certificate list for the
        specified HTTPS or TLS listener.</p> <p>You can't remove the default
        certificate for a listener. To replace the default certificate, call
        <a>ModifyListener</a>.</p> <p>To list the certificates for your
        listener, use <a>DescribeListenerCertificates</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RemoveListenerCertificatesOutput"
        "480":
          description: ListenerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListenerNotFoundException"
        "481":
          description: OperationNotPermittedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: ListenerArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the listener.
          schema:
            type: string
        - name: Certificates
          in: query
          required: true
          description: The certificate to remove. You can specify one certificate per call.
            Set <code>CertificateArn</code> to the certificate ARN but do not
            set <code>IsDefault</code>.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RemoveListenerCertificates
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RemoveListenerCertificates
      operationId: POST RemoveListenerCertificates
      description: <p>Removes the specified certificate from the certificate list for the
        specified HTTPS or TLS listener.</p> <p>You can't remove the default
        certificate for a listener. To replace the default certificate, call
        <a>ModifyListener</a>.</p> <p>To list the certificates for your
        listener, use <a>DescribeListenerCertificates</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RemoveListenerCertificatesOutput"
        "480":
          description: ListenerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListenerNotFoundException"
        "481":
          description: OperationNotPermittedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RemoveListenerCertificates
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ListenerArn:
                  description: The Amazon Resource Name (ARN) of the listener.
                  type: string
                Certificates:
                  description: The certificate to remove. You can specify one certificate
                    per call. Set <code>CertificateArn</code> to the certificate
                    ARN but do not set <code>IsDefault</code>.
                  type: array
                  items:
                    type: string
              required:
                - ListenerArn
                - Certificates
  /#Action=RemoveTags:
    get:
      x-aws-operation-name: RemoveTags
      operationId: GET RemoveTags
      description: <p>Removes the specified tags from the specified Elastic Load Balancing
        resource.</p> <p>To list the current tags for your resources, use
        <a>DescribeTags</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RemoveTagsOutput"
        "480":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
        "481":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
        "482":
          description: ListenerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListenerNotFoundException"
        "483":
          description: RuleNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RuleNotFoundException"
        "484":
          description: TooManyTagsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
      parameters:
        - name: ResourceArns
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: array
            items:
              type: string
        - name: TagKeys
          in: query
          required: true
          description: The tag keys for the tags to remove.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RemoveTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: RemoveTags
      operationId: POST RemoveTags
      description: <p>Removes the specified tags from the specified Elastic Load Balancing
        resource.</p> <p>To list the current tags for your resources, use
        <a>DescribeTags</a>.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RemoveTagsOutput"
        "480":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
        "481":
          description: TargetGroupNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TargetGroupNotFoundException"
        "482":
          description: ListenerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/ListenerNotFoundException"
        "483":
          description: RuleNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RuleNotFoundException"
        "484":
          description: TooManyTagsException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - RemoveTags
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ResourceArns:
                  description: The Amazon Resource Name (ARN) of the resource.
                  type: array
                  items:
                    type: string
                TagKeys:
                  description: The tag keys for the tags to remove.
                  type: array
                  items:
                    type: string
              required:
                - ResourceArns
                - TagKeys
  /#Action=SetIpAddressType:
    get:
      x-aws-operation-name: SetIpAddressType
      operationId: GET SetIpAddressType
      description: Sets the type of IP addresses used by the subnets of the specified
        Application Load Balancer or Network Load Balancer.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SetIpAddressTypeOutput"
        "480":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
        "481":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
        "482":
          description: InvalidSubnetException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnetException"
      parameters:
        - name: LoadBalancerArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the load balancer.
          schema:
            type: string
        - name: IpAddressType
          in: query
          required: true
          description: The IP address type. The possible values are <code>ipv4</code> (for
            IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6
            addresses). Internal load balancers must use <code>ipv4</code>.
            Network Load Balancers must use <code>ipv4</code>.
          schema:
            type: string
            enum:
              - ipv4
              - dualstack
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetIpAddressType
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: SetIpAddressType
      operationId: POST SetIpAddressType
      description: Sets the type of IP addresses used by the subnets of the specified
        Application Load Balancer or Network Load Balancer.
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SetIpAddressTypeOutput"
        "480":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
        "481":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
        "482":
          description: InvalidSubnetException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnetException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetIpAddressType
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerArn:
                  description: The Amazon Resource Name (ARN) of the load balancer.
                  type: string
                IpAddressType:
                  description: The IP address type. The possible values are
                    <code>ipv4</code> (for IPv4 addresses) and
                    <code>dualstack</code> (for IPv4 and IPv6 addresses).
                    Internal load balancers must use <code>ipv4</code>. Network
                    Load Balancers must use <code>ipv4</code>.
                  type: string
                  enum:
                    - ipv4
                    - dualstack
              required:
                - LoadBalancerArn
                - IpAddressType
  /#Action=SetRulePriorities:
    get:
      x-aws-operation-name: SetRulePriorities
      operationId: GET SetRulePriorities
      description: <p>Sets the priorities of the specified rules.</p> <p>You can reorder
        the rules as long as there are no priority conflicts in the new order.
        Any existing rules that you do not specify retain their current
        priority.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SetRulePrioritiesOutput"
        "480":
          description: RuleNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RuleNotFoundException"
        "481":
          description: PriorityInUseException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PriorityInUseException"
        "482":
          description: OperationNotPermittedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: RulePriorities
          in: query
          required: true
          description: The rule priorities.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetRulePriorities
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: SetRulePriorities
      operationId: POST SetRulePriorities
      description: <p>Sets the priorities of the specified rules.</p> <p>You can reorder
        the rules as long as there are no priority conflicts in the new order.
        Any existing rules that you do not specify retain their current
        priority.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SetRulePrioritiesOutput"
        "480":
          description: RuleNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/RuleNotFoundException"
        "481":
          description: PriorityInUseException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/PriorityInUseException"
        "482":
          description: OperationNotPermittedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetRulePriorities
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                RulePriorities:
                  description: The rule priorities.
                  type: array
                  items:
                    type: string
              required:
                - RulePriorities
  /#Action=SetSecurityGroups:
    get:
      x-aws-operation-name: SetSecurityGroups
      operationId: GET SetSecurityGroups
      description: <p>Associates the specified security groups with the specified
        Application Load Balancer. The specified security groups override the
        previously associated security groups.</p> <p>You can't specify a
        security group for a Network Load Balancer.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SetSecurityGroupsOutput"
        "480":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
        "481":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
        "482":
          description: InvalidSecurityGroupException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSecurityGroupException"
      parameters:
        - name: LoadBalancerArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the load balancer.
          schema:
            type: string
        - name: SecurityGroups
          in: query
          required: true
          description: The IDs of the security groups.
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetSecurityGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: SetSecurityGroups
      operationId: POST SetSecurityGroups
      description: <p>Associates the specified security groups with the specified
        Application Load Balancer. The specified security groups override the
        previously associated security groups.</p> <p>You can't specify a
        security group for a Network Load Balancer.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SetSecurityGroupsOutput"
        "480":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
        "481":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
        "482":
          description: InvalidSecurityGroupException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSecurityGroupException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetSecurityGroups
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerArn:
                  description: The Amazon Resource Name (ARN) of the load balancer.
                  type: string
                SecurityGroups:
                  description: The IDs of the security groups.
                  type: array
                  items:
                    type: string
              required:
                - LoadBalancerArn
                - SecurityGroups
  /#Action=SetSubnets:
    get:
      x-aws-operation-name: SetSubnets
      operationId: GET SetSubnets
      description: <p>Enables the Availability Zone for the specified public subnets for
        the specified Application Load Balancer. The specified subnets replace
        the previously enabled subnets.</p> <p>You can't change the subnets for
        a Network Load Balancer.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SetSubnetsOutput"
        "480":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
        "481":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
        "482":
          description: SubnetNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubnetNotFoundException"
        "483":
          description: InvalidSubnetException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnetException"
        "484":
          description: AllocationIdNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AllocationIdNotFoundException"
        "485":
          description: AvailabilityZoneNotSupportedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AvailabilityZoneNotSupportedException"
      parameters:
        - name: LoadBalancerArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the load balancer.
          schema:
            type: string
        - name: Subnets
          in: query
          required: false
          description: The IDs of the public subnets. You must specify subnets from at
            least two Availability Zones. You can specify only one subnet per
            Availability Zone. You must specify either subnets or subnet
            mappings.
          schema:
            type: array
            items:
              type: string
        - name: SubnetMappings
          in: query
          required: false
          description: <p>The IDs of the public subnets. You must specify subnets from at
            least two Availability Zones. You can specify only one subnet per
            Availability Zone. You must specify either subnets or subnet
            mappings.</p> <p>You cannot specify Elastic IP addresses for your
            subnets.</p>
          schema:
            type: array
            items:
              type: string
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetSubnets
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      x-aws-operation-name: SetSubnets
      operationId: POST SetSubnets
      description: <p>Enables the Availability Zone for the specified public subnets for
        the specified Application Load Balancer. The specified subnets replace
        the previously enabled subnets.</p> <p>You can't change the subnets for
        a Network Load Balancer.</p>
      responses:
        "200":
          description: Success
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SetSubnetsOutput"
        "480":
          description: LoadBalancerNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/LoadBalancerNotFoundException"
        "481":
          description: InvalidConfigurationRequestException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidConfigurationRequestException"
        "482":
          description: SubnetNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/SubnetNotFoundException"
        "483":
          description: InvalidSubnetException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/InvalidSubnetException"
        "484":
          description: AllocationIdNotFoundException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AllocationIdNotFoundException"
        "485":
          description: AvailabilityZoneNotSupportedException
          content:
            text/xml:
              schema:
                $ref: "#/components/schemas/AvailabilityZoneNotSupportedException"
      parameters:
        - name: Action
          in: query
          required: true
          schema:
            type: string
            enum:
              - SetSubnets
        - name: Version
          in: query
          required: true
          schema:
            type: string
            enum:
              - 2015-12-01
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                LoadBalancerArn:
                  description: The Amazon Resource Name (ARN) of the load balancer.
                  type: string
                Subnets:
                  description: The IDs of the public subnets. You must specify subnets from
                    at least two Availability Zones. You can specify only one
                    subnet per Availability Zone. You must specify either
                    subnets or subnet mappings.
                  type: array
                  items:
                    type: string
                SubnetMappings:
                  description: <p>The IDs of the public subnets. You must specify subnets
                    from at least two Availability Zones. You can specify only
                    one subnet per Availability Zone. You must specify either
                    subnets or subnet mappings.</p> <p>You cannot specify
                    Elastic IP addresses for your subnets.</p>
                  type: array
                  items:
                    type: string
              required:
                - LoadBalancerArn
servers:
  - url: http://elasticloadbalancing.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Elastic Load Balancing v2 multi-region endpoint
  - url: https://elasticloadbalancing.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Elastic Load Balancing v2 multi-region endpoint
  - url: http://elasticloadbalancing.amazonaws.com
    variables: {}
    description: The general Elastic Load Balancing v2 endpoint for US East (N. Virginia)
  - url: https://elasticloadbalancing.amazonaws.com
    variables: {}
    description: The general Elastic Load Balancing v2 endpoint for US East (N. Virginia)
  - url: http://elasticloadbalancing.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Elastic Load Balancing v2 endpoint for China (Beijing) and China
      (Ningxia)
  - url: https://elasticloadbalancing.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Elastic Load Balancing v2 endpoint for China (Beijing) and China
      (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  requestBodies:
    POST_DeleteTargetGroup:
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              TargetGroupArn:
                description: The Amazon Resource Name (ARN) of the target group.
                type: string
            required:
              - TargetGroupArn
    POST_DeleteLoadBalancer:
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              LoadBalancerArn:
                description: The Amazon Resource Name (ARN) of the load balancer.
                type: string
            required:
              - LoadBalancerArn
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AddListenerCertificatesOutput:
      type: object
      properties:
        Certificates:
          $ref: "#/components/schemas/CertificateList"
    Certificate:
      type: object
      properties:
        CertificateArn:
          $ref: "#/components/schemas/CertificateArn"
        IsDefault:
          $ref: "#/components/schemas/Default"
      description: Information about an SSL server certificate.
    ListenerNotFoundException: {}
    TooManyCertificatesException: {}
    CertificateNotFoundException: {}
    AddTagsOutput:
      type: object
      properties: {}
    ResourceArn:
      type: string
    Tag:
      type: object
      required:
        - Key
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
        Value:
          $ref: "#/components/schemas/TagValue"
      description: Information about a tag.
    DuplicateTagKeysException: {}
    TooManyTagsException: {}
    LoadBalancerNotFoundException: {}
    TargetGroupNotFoundException: {}
    CreateListenerOutput:
      type: object
      example:
        Listeners:
          - Certificates:
              - CertificateArn: arn:aws:iam::123456789012:server-certificate/my-server-cert
            DefaultActions:
              - TargetGroupArn: arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067
                Type: forward
            ListenerArn: arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2
            LoadBalancerArn: arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188
            Port: 443
            Protocol: HTTPS
            SslPolicy: ELBSecurityPolicy-2015-05
      properties:
        Listeners:
          $ref: "#/components/schemas/Listeners"
    Action:
      type: object
      required:
        - Type
      properties:
        Type:
          $ref: "#/components/schemas/ActionTypeEnum"
        TargetGroupArn:
          $ref: "#/components/schemas/TargetGroupArn"
        AuthenticateOidcConfig:
          $ref: "#/components/schemas/AuthenticateOidcActionConfig"
        AuthenticateCognitoConfig:
          $ref: "#/components/schemas/AuthenticateCognitoActionConfig"
        Order:
          $ref: "#/components/schemas/ActionOrder"
        RedirectConfig:
          $ref: "#/components/schemas/RedirectActionConfig"
        FixedResponseConfig:
          $ref: "#/components/schemas/FixedResponseActionConfig"
      description: Information about an action.
    DuplicateListenerException: {}
    TooManyListenersException: {}
    TargetGroupAssociationLimitException: {}
    InvalidConfigurationRequestException: {}
    IncompatibleProtocolsException: {}
    SSLPolicyNotFoundException: {}
    UnsupportedProtocolException: {}
    TooManyRegistrationsForTargetIdException: {}
    TooManyTargetsException: {}
    TooManyActionsException: {}
    InvalidLoadBalancerActionException: {}
    CreateLoadBalancerOutput:
      type: object
      example:
        LoadBalancers:
          - AvailabilityZones:
              - SubnetId: subnet-8360a9e7
                ZoneName: us-west-2a
              - SubnetId: subnet-b7d581c0
                ZoneName: us-west-2b
            CanonicalHostedZoneId: Z2P70J7EXAMPLE
            CreatedTime: 2016-03-25T21:29:48.850Z
            DNSName: internal-my-internal-load-balancer-1529930873.us-west-2.elb.amazonaws.com
            LoadBalancerArn: arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-internal-load-balancer/5b49b8d4303115c2
            LoadBalancerName: my-internal-load-balancer
            Scheme: internal
            SecurityGroups:
              - sg-5943793c
            State:
              Code: provisioning
            Type: application
            VpcId: vpc-3ac0fb5f
      properties:
        LoadBalancers:
          $ref: "#/components/schemas/LoadBalancers"
    SubnetId:
      type: string
    SubnetMapping:
      type: object
      properties:
        SubnetId:
          $ref: "#/components/schemas/SubnetId"
        AllocationId:
          $ref: "#/components/schemas/AllocationId"
      description: Information about a subnet mapping.
    SecurityGroupId:
      type: string
    DuplicateLoadBalancerNameException: {}
    TooManyLoadBalancersException: {}
    SubnetNotFoundException: {}
    InvalidSubnetException: {}
    InvalidSecurityGroupException: {}
    InvalidSchemeException: {}
    ResourceInUseException: {}
    AllocationIdNotFoundException: {}
    AvailabilityZoneNotSupportedException: {}
    OperationNotPermittedException: {}
    CreateRuleOutput:
      type: object
      example:
        Rules:
          - Actions:
              - TargetGroupArn: arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067
                Type: forward
            Conditions:
              - Field: path-pattern
                Values:
                  - /img/*
            IsDefault: false
            Priority: "10"
            RuleArn: arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/9683b2d02a6cabee
      properties:
        Rules:
          $ref: "#/components/schemas/Rules"
    RuleCondition:
      type: object
      properties:
        Field:
          $ref: "#/components/schemas/ConditionFieldName"
        Values:
          $ref: "#/components/schemas/ListOfString"
        HostHeaderConfig:
          $ref: "#/components/schemas/HostHeaderConditionConfig"
        PathPatternConfig:
          $ref: "#/components/schemas/PathPatternConditionConfig"
        HttpHeaderConfig:
          $ref: "#/components/schemas/HttpHeaderConditionConfig"
        QueryStringConfig:
          $ref: "#/components/schemas/QueryStringConditionConfig"
        HttpRequestMethodConfig:
          $ref: "#/components/schemas/HttpRequestMethodConditionConfig"
        SourceIpConfig:
          $ref: "#/components/schemas/SourceIpConditionConfig"
      description: Information about a condition for a rule.
    PriorityInUseException: {}
    TooManyTargetGroupsException: {}
    TooManyRulesException: {}
    CreateTargetGroupOutput:
      type: object
      example:
        TargetGroups:
          - HealthCheckIntervalSeconds: 30
            HealthCheckPath: /
            HealthCheckPort: traffic-port
            HealthCheckProtocol: HTTP
            HealthCheckTimeoutSeconds: 5
            HealthyThresholdCount: 5
            Matcher:
              HttpCode: "200"
            Port: 80
            Protocol: HTTP
            TargetGroupArn: arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067
            TargetGroupName: my-targets
            UnhealthyThresholdCount: 2
            VpcId: vpc-3ac0fb5f
      properties:
        TargetGroups:
          $ref: "#/components/schemas/TargetGroups"
    HttpCode:
      type: string
    DuplicateTargetGroupNameException: {}
    DeleteListenerOutput:
      type: object
      properties: {}
    DeleteLoadBalancerOutput:
      type: object
      properties: {}
    DeleteRuleOutput:
      type: object
      properties: {}
    RuleNotFoundException: {}
    DeleteTargetGroupOutput:
      type: object
      properties: {}
    DeregisterTargetsOutput:
      type: object
      properties: {}
    TargetDescription:
      type: object
      required:
        - Id
      properties:
        Id:
          $ref: "#/components/schemas/TargetId"
        Port:
          $ref: "#/components/schemas/Port"
        AvailabilityZone:
          $ref: "#/components/schemas/ZoneName"
      description: Information about a target.
    InvalidTargetException: {}
    DescribeAccountLimitsOutput:
      type: object
      properties:
        Limits:
          $ref: "#/components/schemas/Limits"
        NextMarker:
          $ref: "#/components/schemas/Marker"
    DescribeListenerCertificatesOutput:
      type: object
      properties:
        Certificates:
          $ref: "#/components/schemas/CertificateList"
        NextMarker:
          $ref: "#/components/schemas/Marker"
    DescribeListenersOutput:
      type: object
      example:
        Listeners:
          - DefaultActions:
              - TargetGroupArn: arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067
                Type: forward
            ListenerArn: arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2
            LoadBalancerArn: arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188
            Port: 80
            Protocol: HTTP
      properties:
        Listeners:
          $ref: "#/components/schemas/Listeners"
        NextMarker:
          $ref: "#/components/schemas/Marker"
    ListenerArn:
      type: string
    DescribeLoadBalancerAttributesOutput:
      type: object
      example:
        Attributes:
          - Key: access_logs.s3.enabled
            Value: "false"
          - Key: idle_timeout.timeout_seconds
            Value: "60"
          - Key: access_logs.s3.prefix
            Value: ""
          - Key: deletion_protection.enabled
            Value: "false"
          - Key: access_logs.s3.bucket
            Value: ""
      properties:
        Attributes:
          $ref: "#/components/schemas/LoadBalancerAttributes"
    DescribeLoadBalancersOutput:
      type: object
      example:
        LoadBalancers:
          - AvailabilityZones:
              - SubnetId: subnet-8360a9e7
                ZoneName: us-west-2a
              - SubnetId: subnet-b7d581c0
                ZoneName: us-west-2b
            CanonicalHostedZoneId: Z2P70J7EXAMPLE
            CreatedTime: 2016-03-25T21:26:12.920Z
            DNSName: my-load-balancer-424835706.us-west-2.elb.amazonaws.com
            LoadBalancerArn: arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188
            LoadBalancerName: my-load-balancer
            Scheme: internet-facing
            SecurityGroups:
              - sg-5943793c
            State:
              Code: active
            Type: application
            VpcId: vpc-3ac0fb5f
      properties:
        LoadBalancers:
          $ref: "#/components/schemas/LoadBalancers"
        NextMarker:
          $ref: "#/components/schemas/Marker"
    LoadBalancerArn:
      type: string
    LoadBalancerName:
      type: string
    DescribeRulesOutput:
      type: object
      example:
        Rules:
          - Actions:
              - TargetGroupArn: arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067
                Type: forward
            Conditions:
              - Field: path-pattern
                Values:
                  - /img/*
            IsDefault: false
            Priority: "10"
            RuleArn: arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/9683b2d02a6cabee
      properties:
        Rules:
          $ref: "#/components/schemas/Rules"
        NextMarker:
          $ref: "#/components/schemas/Marker"
    RuleArn:
      type: string
    DescribeSSLPoliciesOutput:
      type: object
      example:
        SslPolicies:
          - Ciphers:
              - Name: ECDHE-ECDSA-AES128-GCM-SHA256
                Priority: 1
              - Name: ECDHE-RSA-AES128-GCM-SHA256
                Priority: 2
              - Name: ECDHE-ECDSA-AES128-SHA256
                Priority: 3
              - Name: ECDHE-RSA-AES128-SHA256
                Priority: 4
              - Name: ECDHE-ECDSA-AES128-SHA
                Priority: 5
              - Name: ECDHE-RSA-AES128-SHA
                Priority: 6
              - Name: DHE-RSA-AES128-SHA
                Priority: 7
              - Name: ECDHE-ECDSA-AES256-GCM-SHA384
                Priority: 8
              - Name: ECDHE-RSA-AES256-GCM-SHA384
                Priority: 9
              - Name: ECDHE-ECDSA-AES256-SHA384
                Priority: 10
              - Name: ECDHE-RSA-AES256-SHA384
                Priority: 11
              - Name: ECDHE-RSA-AES256-SHA
                Priority: 12
              - Name: ECDHE-ECDSA-AES256-SHA
                Priority: 13
              - Name: AES128-GCM-SHA256
                Priority: 14
              - Name: AES128-SHA256
                Priority: 15
              - Name: AES128-SHA
                Priority: 16
              - Name: AES256-GCM-SHA384
                Priority: 17
              - Name: AES256-SHA256
                Priority: 18
              - Name: AES256-SHA
                Priority: 19
            Name: ELBSecurityPolicy-2015-05
            SslProtocols:
              - TLSv1
              - TLSv1.1
              - TLSv1.2
      properties:
        SslPolicies:
          $ref: "#/components/schemas/SslPolicies"
        NextMarker:
          $ref: "#/components/schemas/Marker"
    SslPolicyName:
      type: string
    DescribeTagsOutput:
      type: object
      example:
        TagDescriptions:
          - ResourceArn: arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188
            Tags:
              - Key: project
                Value: lima
              - Key: department
                Value: digital-media
      properties:
        TagDescriptions:
          $ref: "#/components/schemas/TagDescriptions"
    DescribeTargetGroupAttributesOutput:
      type: object
      example:
        Attributes:
          - Key: stickiness.enabled
            Value: "false"
          - Key: deregistration_delay.timeout_seconds
            Value: "300"
          - Key: stickiness.type
            Value: lb_cookie
          - Key: stickiness.lb_cookie.duration_seconds
            Value: "86400"
      properties:
        Attributes:
          $ref: "#/components/schemas/TargetGroupAttributes"
    DescribeTargetGroupsOutput:
      type: object
      example:
        TargetGroups:
          - HealthCheckIntervalSeconds: 30
            HealthCheckPath: /
            HealthCheckPort: traffic-port
            HealthCheckProtocol: HTTP
            HealthCheckTimeoutSeconds: 5
            HealthyThresholdCount: 5
            LoadBalancerArns:
              - arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188
            Matcher:
              HttpCode: "200"
            Port: 80
            Protocol: HTTP
            TargetGroupArn: arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067
            TargetGroupName: my-targets
            UnhealthyThresholdCount: 2
            VpcId: vpc-3ac0fb5f
      properties:
        TargetGroups:
          $ref: "#/components/schemas/TargetGroups"
        NextMarker:
          $ref: "#/components/schemas/Marker"
    TargetGroupArn:
      type: string
    TargetGroupName:
      type: string
    DescribeTargetHealthOutput:
      type: object
      example:
        TargetHealthDescriptions:
          - HealthCheckPort: "80"
            Target:
              Id: i-0f76fade
              Port: 80
            TargetHealth:
              State: healthy
      properties:
        TargetHealthDescriptions:
          $ref: "#/components/schemas/TargetHealthDescriptions"
    HealthUnavailableException: {}
    ModifyListenerOutput:
      type: object
      example:
        Listeners:
          - Certificates:
              - CertificateArn: arn:aws:iam::123456789012:server-certificate/my-new-server-cert
            DefaultActions:
              - TargetGroupArn: arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067
                Type: forward
            ListenerArn: arn:aws:elasticloadbalancing:us-west-2:123456789012:listener/app/my-load-balancer/50dc6c495c0c9188/0467ef3c8400ae65
            LoadBalancerArn: arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188
            Port: 443
            Protocol: HTTPS
            SslPolicy: ELBSecurityPolicy-2015-05
      properties:
        Listeners:
          $ref: "#/components/schemas/Listeners"
    ModifyLoadBalancerAttributesOutput:
      type: object
      example:
        Attributes:
          - Key: access_logs.s3.enabled
            Value: "true"
          - Key: access_logs.s3.bucket
            Value: my-load-balancer-logs
          - Key: access_logs.s3.prefix
            Value: myapp
          - Key: idle_timeout.timeout_seconds
            Value: "60"
          - Key: deletion_protection.enabled
            Value: "false"
      properties:
        Attributes:
          $ref: "#/components/schemas/LoadBalancerAttributes"
    LoadBalancerAttribute:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/LoadBalancerAttributeKey"
        Value:
          $ref: "#/components/schemas/LoadBalancerAttributeValue"
      description: Information about a load balancer attribute.
    ModifyRuleOutput:
      type: object
      example:
        Rules:
          - Actions:
              - TargetGroupArn: arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067
                Type: forward
            Conditions:
              - Field: path-pattern
                Values:
                  - /images/*
            IsDefault: false
            Priority: "10"
            RuleArn: arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/9683b2d02a6cabee
      properties:
        Rules:
          $ref: "#/components/schemas/Rules"
    ModifyTargetGroupOutput:
      type: object
      example:
        TargetGroups:
          - HealthCheckIntervalSeconds: 30
            HealthCheckPort: "443"
            HealthCheckProtocol: HTTPS
            HealthCheckTimeoutSeconds: 5
            HealthyThresholdCount: 5
            LoadBalancerArns:
              - arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188
            Matcher:
              HttpCode: "200"
            Port: 443
            Protocol: HTTPS
            TargetGroupArn: arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-https-targets/2453ed029918f21f
            TargetGroupName: my-https-targets
            UnhealthyThresholdCount: 2
            VpcId: vpc-3ac0fb5f
      properties:
        TargetGroups:
          $ref: "#/components/schemas/TargetGroups"
    ModifyTargetGroupAttributesOutput:
      type: object
      example:
        Attributes:
          - Key: stickiness.enabled
            Value: "false"
          - Key: deregistration_delay.timeout_seconds
            Value: "600"
          - Key: stickiness.type
            Value: lb_cookie
          - Key: stickiness.lb_cookie.duration_seconds
            Value: "86400"
      properties:
        Attributes:
          $ref: "#/components/schemas/TargetGroupAttributes"
    TargetGroupAttribute:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/TargetGroupAttributeKey"
        Value:
          $ref: "#/components/schemas/TargetGroupAttributeValue"
      description: Information about a target group attribute.
    RegisterTargetsOutput:
      type: object
      properties: {}
    RemoveListenerCertificatesOutput:
      type: object
      properties: {}
    RemoveTagsOutput:
      type: object
      properties: {}
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    SetIpAddressTypeOutput:
      type: object
      properties:
        IpAddressType:
          $ref: "#/components/schemas/IpAddressType"
    SetRulePrioritiesOutput:
      type: object
      example:
        Rules:
          - Actions:
              - TargetGroupArn: arn:aws:elasticloadbalancing:us-west-2:123456789012:targetgroup/my-targets/73e2d6bc24d8a067
                Type: forward
            Conditions:
              - Field: path-pattern
                Values:
                  - /img/*
            IsDefault: false
            Priority: "5"
            RuleArn: arn:aws:elasticloadbalancing:us-west-2:123456789012:listener-rule/app/my-load-balancer/50dc6c495c0c9188/f2f7dc8efc522ab2/1291d13826f405c3
      properties:
        Rules:
          $ref: "#/components/schemas/Rules"
    RulePriorityPair:
      type: object
      properties:
        RuleArn:
          $ref: "#/components/schemas/RuleArn"
        Priority:
          $ref: "#/components/schemas/RulePriority"
      description: Information about the priorities for the rules for a listener.
    SetSecurityGroupsOutput:
      type: object
      example:
        SecurityGroupIds:
          - sg-5943793c
      properties:
        SecurityGroupIds:
          $ref: "#/components/schemas/SecurityGroups"
    SetSubnetsOutput:
      type: object
      example:
        AvailabilityZones:
          - SubnetId: subnet-8360a9e7
            ZoneName: us-west-2a
          - SubnetId: subnet-b7d581c0
            ZoneName: us-west-2b
      properties:
        AvailabilityZones:
          $ref: "#/components/schemas/AvailabilityZones"
    ActionTypeEnum:
      type: string
      enum:
        - forward
        - authenticate-oidc
        - authenticate-cognito
        - redirect
        - fixed-response
    AuthenticateOidcActionConfig:
      type: object
      required:
        - Issuer
        - AuthorizationEndpoint
        - TokenEndpoint
        - UserInfoEndpoint
        - ClientId
      properties:
        Issuer:
          $ref: "#/components/schemas/AuthenticateOidcActionIssuer"
        AuthorizationEndpoint:
          $ref: "#/components/schemas/AuthenticateOidcActionAuthorizationEndpoint"
        TokenEndpoint:
          $ref: "#/components/schemas/AuthenticateOidcActionTokenEndpoint"
        UserInfoEndpoint:
          $ref: "#/components/schemas/AuthenticateOidcActionUserInfoEndpoint"
        ClientId:
          $ref: "#/components/schemas/AuthenticateOidcActionClientId"
        ClientSecret:
          $ref: "#/components/schemas/AuthenticateOidcActionClientSecret"
        SessionCookieName:
          $ref: "#/components/schemas/AuthenticateOidcActionSessionCookieName"
        Scope:
          $ref: "#/components/schemas/AuthenticateOidcActionScope"
        SessionTimeout:
          $ref: "#/components/schemas/AuthenticateOidcActionSessionTimeout"
        AuthenticationRequestExtraParams:
          $ref: "#/components/schemas/AuthenticateOidcActionAuthenticationRequestEx\
            traParams"
        OnUnauthenticatedRequest:
          $ref: "#/components/schemas/AuthenticateOidcActionConditionalBehaviorEnum"
        UseExistingClientSecret:
          $ref: "#/components/schemas/AuthenticateOidcActionUseExistingClientSecret"
      description: Request parameters when using an identity provider (IdP) that is
        compliant with OpenID Connect (OIDC) to authenticate users.
    AuthenticateCognitoActionConfig:
      type: object
      required:
        - UserPoolArn
        - UserPoolClientId
        - UserPoolDomain
      properties:
        UserPoolArn:
          $ref: "#/components/schemas/AuthenticateCognitoActionUserPoolArn"
        UserPoolClientId:
          $ref: "#/components/schemas/AuthenticateCognitoActionUserPoolClientId"
        UserPoolDomain:
          $ref: "#/components/schemas/AuthenticateCognitoActionUserPoolDomain"
        SessionCookieName:
          $ref: "#/components/schemas/AuthenticateCognitoActionSessionCookieName"
        Scope:
          $ref: "#/components/schemas/AuthenticateCognitoActionScope"
        SessionTimeout:
          $ref: "#/components/schemas/AuthenticateCognitoActionSessionTimeout"
        AuthenticationRequestExtraParams:
          $ref: "#/components/schemas/AuthenticateCognitoActionAuthenticationReques\
            tExtraParams"
        OnUnauthenticatedRequest:
          $ref: "#/components/schemas/AuthenticateCognitoActionConditionalBehaviorE\
            num"
      description: Request parameters to use when integrating with Amazon Cognito to
        authenticate users.
    ActionOrder:
      type: integer
      minimum: 1
      maximum: 50000
    RedirectActionConfig:
      type: object
      required:
        - StatusCode
      properties:
        Protocol:
          $ref: "#/components/schemas/RedirectActionProtocol"
        Port:
          $ref: "#/components/schemas/RedirectActionPort"
        Host:
          $ref: "#/components/schemas/RedirectActionHost"
        Path:
          $ref: "#/components/schemas/RedirectActionPath"
        Query:
          $ref: "#/components/schemas/RedirectActionQuery"
        StatusCode:
          $ref: "#/components/schemas/RedirectActionStatusCodeEnum"
      description: '<p>Information about a redirect action.</p> <p>A URI consists of the
        following components: protocol://hostname:port/path?query. You must
        modify at least one of the following components to avoid a redirect
        loop: protocol, hostname, port, or path. Any components that you do not
        modify retain their original values.</p> <p>You can reuse URI components
        using the following reserved keywords:</p> <ul> <li> <p>#{protocol}</p>
        </li> <li> <p>#{host}</p> </li> <li> <p>#{port}</p> </li> <li>
        <p>#{path} (the leading "/" is removed)</p> </li> <li> <p>#{query}</p>
        </li> </ul> <p>For example, you can change the path to "/new/#{path}",
        the hostname to "example.#{host}", or the query to
        "#{query}&amp;value=xyz".</p>'
    FixedResponseActionConfig:
      type: object
      required:
        - StatusCode
      properties:
        MessageBody:
          $ref: "#/components/schemas/FixedResponseActionMessage"
        StatusCode:
          $ref: "#/components/schemas/FixedResponseActionStatusCode"
        ContentType:
          $ref: "#/components/schemas/FixedResponseActionContentType"
      description: Information about an action that returns a custom HTTP response.
    Actions:
      type: array
      items:
        $ref: "#/components/schemas/Action"
    CertificateList:
      type: array
      items:
        $ref: "#/components/schemas/Certificate"
    AddListenerCertificatesInput:
      type: object
      required:
        - ListenerArn
        - Certificates
      properties:
        ListenerArn:
          $ref: "#/components/schemas/ListenerArn"
        Certificates:
          $ref: "#/components/schemas/CertificateList"
    ResourceArns:
      type: array
      items:
        $ref: "#/components/schemas/ResourceArn"
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
      minItems: 1
    AddTagsInput:
      type: object
      required:
        - ResourceArns
        - Tags
      properties:
        ResourceArns:
          $ref: "#/components/schemas/ResourceArns"
        Tags:
          $ref: "#/components/schemas/TagList"
    AllocationId:
      type: string
    AuthenticateCognitoActionAuthenticationRequestParamValue:
      type: string
    AuthenticateCognitoActionAuthenticationRequestExtraParams:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/AuthenticateCognitoActionAuthenticationRequestP\
          aramValue"
    AuthenticateCognitoActionAuthenticationRequestParamName:
      type: string
    AuthenticateCognitoActionConditionalBehaviorEnum:
      type: string
      enum:
        - deny
        - allow
        - authenticate
    AuthenticateCognitoActionUserPoolArn:
      type: string
    AuthenticateCognitoActionUserPoolClientId:
      type: string
    AuthenticateCognitoActionUserPoolDomain:
      type: string
    AuthenticateCognitoActionSessionCookieName:
      type: string
    AuthenticateCognitoActionScope:
      type: string
    AuthenticateCognitoActionSessionTimeout:
      type: integer
    AuthenticateOidcActionAuthenticationRequestParamValue:
      type: string
    AuthenticateOidcActionAuthenticationRequestExtraParams:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/AuthenticateOidcActionAuthenticationRequestPara\
          mValue"
    AuthenticateOidcActionAuthenticationRequestParamName:
      type: string
    AuthenticateOidcActionAuthorizationEndpoint:
      type: string
    AuthenticateOidcActionClientId:
      type: string
    AuthenticateOidcActionClientSecret:
      type: string
    AuthenticateOidcActionConditionalBehaviorEnum:
      type: string
      enum:
        - deny
        - allow
        - authenticate
    AuthenticateOidcActionIssuer:
      type: string
    AuthenticateOidcActionTokenEndpoint:
      type: string
    AuthenticateOidcActionUserInfoEndpoint:
      type: string
    AuthenticateOidcActionSessionCookieName:
      type: string
    AuthenticateOidcActionScope:
      type: string
    AuthenticateOidcActionSessionTimeout:
      type: integer
    AuthenticateOidcActionUseExistingClientSecret:
      type: boolean
    ZoneName:
      type: string
    LoadBalancerAddresses:
      type: array
      items:
        $ref: "#/components/schemas/LoadBalancerAddress"
    AvailabilityZone:
      type: object
      properties:
        ZoneName:
          $ref: "#/components/schemas/ZoneName"
        SubnetId:
          $ref: "#/components/schemas/SubnetId"
        LoadBalancerAddresses:
          $ref: "#/components/schemas/LoadBalancerAddresses"
      description: Information about an Availability Zone.
    AvailabilityZones:
      type: array
      items:
        $ref: "#/components/schemas/AvailabilityZone"
    CanonicalHostedZoneId:
      type: string
    CertificateArn:
      type: string
    Default:
      type: boolean
    CipherName:
      type: string
    CipherPriority:
      type: integer
    Cipher:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/CipherName"
        Priority:
          $ref: "#/components/schemas/CipherPriority"
      description: Information about a cipher used in a policy.
    Ciphers:
      type: array
      items:
        $ref: "#/components/schemas/Cipher"
    ConditionFieldName:
      type: string
      maxLength: 64
    ProtocolEnum:
      type: string
      enum:
        - HTTP
        - HTTPS
        - TCP
        - TLS
        - UDP
        - TCP_UDP
    Port:
      type: integer
      minimum: 1
      maximum: 65535
    CreateListenerInput:
      type: object
      required:
        - LoadBalancerArn
        - Protocol
        - Port
        - DefaultActions
      properties:
        LoadBalancerArn:
          $ref: "#/components/schemas/LoadBalancerArn"
        Protocol:
          $ref: "#/components/schemas/ProtocolEnum"
        Port:
          $ref: "#/components/schemas/Port"
        SslPolicy:
          $ref: "#/components/schemas/SslPolicyName"
        Certificates:
          $ref: "#/components/schemas/CertificateList"
        DefaultActions:
          $ref: "#/components/schemas/Actions"
    Listeners:
      type: array
      items:
        $ref: "#/components/schemas/Listener"
    Subnets:
      type: array
      items:
        $ref: "#/components/schemas/SubnetId"
    SubnetMappings:
      type: array
      items:
        $ref: "#/components/schemas/SubnetMapping"
    SecurityGroups:
      type: array
      items:
        $ref: "#/components/schemas/SecurityGroupId"
    LoadBalancerSchemeEnum:
      type: string
      enum:
        - internet-facing
        - internal
    LoadBalancerTypeEnum:
      type: string
      enum:
        - application
        - network
    IpAddressType:
      type: string
      enum:
        - ipv4
        - dualstack
    CreateLoadBalancerInput:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/LoadBalancerName"
        Subnets:
          $ref: "#/components/schemas/Subnets"
        SubnetMappings:
          $ref: "#/components/schemas/SubnetMappings"
        SecurityGroups:
          $ref: "#/components/schemas/SecurityGroups"
        Scheme:
          $ref: "#/components/schemas/LoadBalancerSchemeEnum"
        Tags:
          $ref: "#/components/schemas/TagList"
        Type:
          $ref: "#/components/schemas/LoadBalancerTypeEnum"
        IpAddressType:
          $ref: "#/components/schemas/IpAddressType"
    LoadBalancers:
      type: array
      items:
        $ref: "#/components/schemas/LoadBalancer"
    RuleConditionList:
      type: array
      items:
        $ref: "#/components/schemas/RuleCondition"
    RulePriority:
      type: integer
      minimum: 1
      maximum: 50000
    CreateRuleInput:
      type: object
      required:
        - ListenerArn
        - Conditions
        - Priority
        - Actions
      properties:
        ListenerArn:
          $ref: "#/components/schemas/ListenerArn"
        Conditions:
          $ref: "#/components/schemas/RuleConditionList"
        Priority:
          $ref: "#/components/schemas/RulePriority"
        Actions:
          $ref: "#/components/schemas/Actions"
    Rules:
      type: array
      items:
        $ref: "#/components/schemas/Rule"
    VpcId:
      type: string
    HealthCheckPort:
      type: string
    HealthCheckEnabled:
      type: boolean
    Path:
      type: string
      minLength: 1
      maxLength: 1024
    HealthCheckIntervalSeconds:
      type: integer
      minimum: 5
      maximum: 300
    HealthCheckTimeoutSeconds:
      type: integer
      minimum: 2
      maximum: 120
    HealthCheckThresholdCount:
      type: integer
      minimum: 2
      maximum: 10
    Matcher:
      type: object
      required:
        - HttpCode
      properties:
        HttpCode:
          $ref: "#/components/schemas/HttpCode"
      description: Information to use when checking for a successful response from a target.
    TargetTypeEnum:
      type: string
      enum:
        - instance
        - ip
        - lambda
    CreateTargetGroupInput:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/TargetGroupName"
        Protocol:
          $ref: "#/components/schemas/ProtocolEnum"
        Port:
          $ref: "#/components/schemas/Port"
        VpcId:
          $ref: "#/components/schemas/VpcId"
        HealthCheckProtocol:
          $ref: "#/components/schemas/ProtocolEnum"
        HealthCheckPort:
          $ref: "#/components/schemas/HealthCheckPort"
        HealthCheckEnabled:
          $ref: "#/components/schemas/HealthCheckEnabled"
        HealthCheckPath:
          $ref: "#/components/schemas/Path"
        HealthCheckIntervalSeconds:
          $ref: "#/components/schemas/HealthCheckIntervalSeconds"
        HealthCheckTimeoutSeconds:
          $ref: "#/components/schemas/HealthCheckTimeoutSeconds"
        HealthyThresholdCount:
          $ref: "#/components/schemas/HealthCheckThresholdCount"
        UnhealthyThresholdCount:
          $ref: "#/components/schemas/HealthCheckThresholdCount"
        Matcher:
          $ref: "#/components/schemas/Matcher"
        TargetType:
          $ref: "#/components/schemas/TargetTypeEnum"
    TargetGroups:
      type: array
      items:
        $ref: "#/components/schemas/TargetGroup"
    CreatedTime:
      type: string
      format: date-time
    DNSName:
      type: string
    DeleteListenerInput:
      type: object
      required:
        - ListenerArn
      properties:
        ListenerArn:
          $ref: "#/components/schemas/ListenerArn"
    DeleteLoadBalancerInput:
      type: object
      required:
        - LoadBalancerArn
      properties:
        LoadBalancerArn:
          $ref: "#/components/schemas/LoadBalancerArn"
    DeleteRuleInput:
      type: object
      required:
        - RuleArn
      properties:
        RuleArn:
          $ref: "#/components/schemas/RuleArn"
    DeleteTargetGroupInput:
      type: object
      required:
        - TargetGroupArn
      properties:
        TargetGroupArn:
          $ref: "#/components/schemas/TargetGroupArn"
    TargetDescriptions:
      type: array
      items:
        $ref: "#/components/schemas/TargetDescription"
    DeregisterTargetsInput:
      type: object
      required:
        - TargetGroupArn
        - Targets
      properties:
        TargetGroupArn:
          $ref: "#/components/schemas/TargetGroupArn"
        Targets:
          $ref: "#/components/schemas/TargetDescriptions"
    Marker:
      type: string
    PageSize:
      type: integer
      minimum: 1
      maximum: 400
    DescribeAccountLimitsInput:
      type: object
      properties:
        Marker:
          $ref: "#/components/schemas/Marker"
        PageSize:
          $ref: "#/components/schemas/PageSize"
    Limits:
      type: array
      items:
        $ref: "#/components/schemas/Limit"
    DescribeListenerCertificatesInput:
      type: object
      required:
        - ListenerArn
      properties:
        ListenerArn:
          $ref: "#/components/schemas/ListenerArn"
        Marker:
          $ref: "#/components/schemas/Marker"
        PageSize:
          $ref: "#/components/schemas/PageSize"
    ListenerArns:
      type: array
      items:
        $ref: "#/components/schemas/ListenerArn"
    DescribeListenersInput:
      type: object
      properties:
        LoadBalancerArn:
          $ref: "#/components/schemas/LoadBalancerArn"
        ListenerArns:
          $ref: "#/components/schemas/ListenerArns"
        Marker:
          $ref: "#/components/schemas/Marker"
        PageSize:
          $ref: "#/components/schemas/PageSize"
    DescribeLoadBalancerAttributesInput:
      type: object
      required:
        - LoadBalancerArn
      properties:
        LoadBalancerArn:
          $ref: "#/components/schemas/LoadBalancerArn"
    LoadBalancerAttributes:
      type: array
      items:
        $ref: "#/components/schemas/LoadBalancerAttribute"
      maxItems: 20
    LoadBalancerArns:
      type: array
      items:
        $ref: "#/components/schemas/LoadBalancerArn"
    LoadBalancerNames:
      type: array
      items:
        $ref: "#/components/schemas/LoadBalancerName"
    DescribeLoadBalancersInput:
      type: object
      properties:
        LoadBalancerArns:
          $ref: "#/components/schemas/LoadBalancerArns"
        Names:
          $ref: "#/components/schemas/LoadBalancerNames"
        Marker:
          $ref: "#/components/schemas/Marker"
        PageSize:
          $ref: "#/components/schemas/PageSize"
    RuleArns:
      type: array
      items:
        $ref: "#/components/schemas/RuleArn"
    DescribeRulesInput:
      type: object
      properties:
        ListenerArn:
          $ref: "#/components/schemas/ListenerArn"
        RuleArns:
          $ref: "#/components/schemas/RuleArns"
        Marker:
          $ref: "#/components/schemas/Marker"
        PageSize:
          $ref: "#/components/schemas/PageSize"
    SslPolicyNames:
      type: array
      items:
        $ref: "#/components/schemas/SslPolicyName"
    DescribeSSLPoliciesInput:
      type: object
      properties:
        Names:
          $ref: "#/components/schemas/SslPolicyNames"
        Marker:
          $ref: "#/components/schemas/Marker"
        PageSize:
          $ref: "#/components/schemas/PageSize"
    SslPolicies:
      type: array
      items:
        $ref: "#/components/schemas/SslPolicy"
    DescribeTagsInput:
      type: object
      required:
        - ResourceArns
      properties:
        ResourceArns:
          $ref: "#/components/schemas/ResourceArns"
    TagDescriptions:
      type: array
      items:
        $ref: "#/components/schemas/TagDescription"
    DescribeTargetGroupAttributesInput:
      type: object
      required:
        - TargetGroupArn
      properties:
        TargetGroupArn:
          $ref: "#/components/schemas/TargetGroupArn"
    TargetGroupAttributes:
      type: array
      items:
        $ref: "#/components/schemas/TargetGroupAttribute"
    TargetGroupArns:
      type: array
      items:
        $ref: "#/components/schemas/TargetGroupArn"
    TargetGroupNames:
      type: array
      items:
        $ref: "#/components/schemas/TargetGroupName"
    DescribeTargetGroupsInput:
      type: object
      properties:
        LoadBalancerArn:
          $ref: "#/components/schemas/LoadBalancerArn"
        TargetGroupArns:
          $ref: "#/components/schemas/TargetGroupArns"
        Names:
          $ref: "#/components/schemas/TargetGroupNames"
        Marker:
          $ref: "#/components/schemas/Marker"
        PageSize:
          $ref: "#/components/schemas/PageSize"
    DescribeTargetHealthInput:
      type: object
      required:
        - TargetGroupArn
      properties:
        TargetGroupArn:
          $ref: "#/components/schemas/TargetGroupArn"
        Targets:
          $ref: "#/components/schemas/TargetDescriptions"
    TargetHealthDescriptions:
      type: array
      items:
        $ref: "#/components/schemas/TargetHealthDescription"
    Description:
      type: string
    FixedResponseActionMessage:
      type: string
      minLength: 0
      maxLength: 1024
    FixedResponseActionStatusCode:
      type: string
      pattern: ^(2|4|5)\d\d$
    FixedResponseActionContentType:
      type: string
      minLength: 0
      maxLength: 32
    ListOfString:
      type: array
      items:
        $ref: "#/components/schemas/StringValue"
    HostHeaderConditionConfig:
      type: object
      properties:
        Values:
          $ref: "#/components/schemas/ListOfString"
      description: Information about a host header condition.
    HttpHeaderConditionName:
      type: string
    HttpHeaderConditionConfig:
      type: object
      properties:
        HttpHeaderName:
          $ref: "#/components/schemas/HttpHeaderConditionName"
        Values:
          $ref: "#/components/schemas/ListOfString"
      description: <p>Information about an HTTP header condition.</p> <p>There is a set of
        standard HTTP header fields. You can also define custom HTTP header
        fields.</p>
    HttpRequestMethodConditionConfig:
      type: object
      properties:
        Values:
          $ref: "#/components/schemas/ListOfString"
      description: <p>Information about an HTTP method condition.</p> <p>HTTP defines a set
        of request methods, also referred to as HTTP verbs. For more
        information, see the <a
        href="https://www.iana.org/assignments/http-methods/http-methods.xhtml">HTTP
        Method Registry</a>. You can also define custom HTTP methods.</p>
    IpAddress:
      type: string
    IsDefault:
      type: boolean
    Name:
      type: string
    Max:
      type: string
    Limit:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/Name"
        Max:
          $ref: "#/components/schemas/Max"
      description: Information about an Elastic Load Balancing resource limit for your AWS
        account.
    StringValue:
      type: string
    Listener:
      type: object
      properties:
        ListenerArn:
          $ref: "#/components/schemas/ListenerArn"
        LoadBalancerArn:
          $ref: "#/components/schemas/LoadBalancerArn"
        Port:
          $ref: "#/components/schemas/Port"
        Protocol:
          $ref: "#/components/schemas/ProtocolEnum"
        Certificates:
          $ref: "#/components/schemas/CertificateList"
        SslPolicy:
          $ref: "#/components/schemas/SslPolicyName"
        DefaultActions:
          $ref: "#/components/schemas/Actions"
      description: Information about a listener.
    LoadBalancerState:
      type: object
      properties:
        Code:
          $ref: "#/components/schemas/LoadBalancerStateEnum"
        Reason:
          $ref: "#/components/schemas/StateReason"
      description: Information about the state of the load balancer.
    LoadBalancer:
      type: object
      properties:
        LoadBalancerArn:
          $ref: "#/components/schemas/LoadBalancerArn"
        DNSName:
          $ref: "#/components/schemas/DNSName"
        CanonicalHostedZoneId:
          $ref: "#/components/schemas/CanonicalHostedZoneId"
        CreatedTime:
          $ref: "#/components/schemas/CreatedTime"
        LoadBalancerName:
          $ref: "#/components/schemas/LoadBalancerName"
        Scheme:
          $ref: "#/components/schemas/LoadBalancerSchemeEnum"
        VpcId:
          $ref: "#/components/schemas/VpcId"
        State:
          $ref: "#/components/schemas/LoadBalancerState"
        Type:
          $ref: "#/components/schemas/LoadBalancerTypeEnum"
        AvailabilityZones:
          $ref: "#/components/schemas/AvailabilityZones"
        SecurityGroups:
          $ref: "#/components/schemas/SecurityGroups"
        IpAddressType:
          $ref: "#/components/schemas/IpAddressType"
      description: Information about a load balancer.
    LoadBalancerAddress:
      type: object
      properties:
        IpAddress:
          $ref: "#/components/schemas/IpAddress"
        AllocationId:
          $ref: "#/components/schemas/AllocationId"
      description: Information about a static IP address for a load balancer.
    LoadBalancerAttributeKey:
      type: string
      pattern: ^[a-zA-Z0-9._]+$
      maxLength: 256
    LoadBalancerAttributeValue:
      type: string
      maxLength: 1024
    LoadBalancerStateEnum:
      type: string
      enum:
        - active
        - provisioning
        - active_impaired
        - failed
    StateReason:
      type: string
    ModifyListenerInput:
      type: object
      required:
        - ListenerArn
      properties:
        ListenerArn:
          $ref: "#/components/schemas/ListenerArn"
        Port:
          $ref: "#/components/schemas/Port"
        Protocol:
          $ref: "#/components/schemas/ProtocolEnum"
        SslPolicy:
          $ref: "#/components/schemas/SslPolicyName"
        Certificates:
          $ref: "#/components/schemas/CertificateList"
        DefaultActions:
          $ref: "#/components/schemas/Actions"
    ModifyLoadBalancerAttributesInput:
      type: object
      required:
        - LoadBalancerArn
        - Attributes
      properties:
        LoadBalancerArn:
          $ref: "#/components/schemas/LoadBalancerArn"
        Attributes:
          $ref: "#/components/schemas/LoadBalancerAttributes"
    ModifyRuleInput:
      type: object
      required:
        - RuleArn
      properties:
        RuleArn:
          $ref: "#/components/schemas/RuleArn"
        Conditions:
          $ref: "#/components/schemas/RuleConditionList"
        Actions:
          $ref: "#/components/schemas/Actions"
    ModifyTargetGroupAttributesInput:
      type: object
      required:
        - TargetGroupArn
        - Attributes
      properties:
        TargetGroupArn:
          $ref: "#/components/schemas/TargetGroupArn"
        Attributes:
          $ref: "#/components/schemas/TargetGroupAttributes"
    ModifyTargetGroupInput:
      type: object
      required:
        - TargetGroupArn
      properties:
        TargetGroupArn:
          $ref: "#/components/schemas/TargetGroupArn"
        HealthCheckProtocol:
          $ref: "#/components/schemas/ProtocolEnum"
        HealthCheckPort:
          $ref: "#/components/schemas/HealthCheckPort"
        HealthCheckPath:
          $ref: "#/components/schemas/Path"
        HealthCheckEnabled:
          $ref: "#/components/schemas/HealthCheckEnabled"
        HealthCheckIntervalSeconds:
          $ref: "#/components/schemas/HealthCheckIntervalSeconds"
        HealthCheckTimeoutSeconds:
          $ref: "#/components/schemas/HealthCheckTimeoutSeconds"
        HealthyThresholdCount:
          $ref: "#/components/schemas/HealthCheckThresholdCount"
        UnhealthyThresholdCount:
          $ref: "#/components/schemas/HealthCheckThresholdCount"
        Matcher:
          $ref: "#/components/schemas/Matcher"
    PathPatternConditionConfig:
      type: object
      properties:
        Values:
          $ref: "#/components/schemas/ListOfString"
      description: Information about a path pattern condition.
    QueryStringKeyValuePairList:
      type: array
      items:
        $ref: "#/components/schemas/QueryStringKeyValuePair"
    QueryStringConditionConfig:
      type: object
      properties:
        Values:
          $ref: "#/components/schemas/QueryStringKeyValuePairList"
      description: <p>Information about a query string condition.</p> <p>The query string
        component of a URI starts after the first '?' character and is
        terminated by either a '#' character or the end of the URI. A typical
        query string contains key/value pairs separated by '&amp;' characters.
        The allowed characters are specified by RFC 3986. Any character can be
        percentage encoded.</p>
    QueryStringKeyValuePair:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/StringValue"
        Value:
          $ref: "#/components/schemas/StringValue"
      description: Information about a key/value pair.
    RedirectActionProtocol:
      type: string
      pattern: ^(HTTPS?|#\{protocol\})$
    RedirectActionPort:
      type: string
    RedirectActionHost:
      type: string
      minLength: 1
      maxLength: 128
    RedirectActionPath:
      type: string
      minLength: 1
      maxLength: 128
    RedirectActionQuery:
      type: string
      minLength: 0
      maxLength: 128
    RedirectActionStatusCodeEnum:
      type: string
      enum:
        - HTTP_301
        - HTTP_302
    RegisterTargetsInput:
      type: object
      required:
        - TargetGroupArn
        - Targets
      properties:
        TargetGroupArn:
          $ref: "#/components/schemas/TargetGroupArn"
        Targets:
          $ref: "#/components/schemas/TargetDescriptions"
    RemoveListenerCertificatesInput:
      type: object
      required:
        - ListenerArn
        - Certificates
      properties:
        ListenerArn:
          $ref: "#/components/schemas/ListenerArn"
        Certificates:
          $ref: "#/components/schemas/CertificateList"
    TagKeys:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
    RemoveTagsInput:
      type: object
      required:
        - ResourceArns
        - TagKeys
      properties:
        ResourceArns:
          $ref: "#/components/schemas/ResourceArns"
        TagKeys:
          $ref: "#/components/schemas/TagKeys"
    String:
      type: string
    Rule:
      type: object
      properties:
        RuleArn:
          $ref: "#/components/schemas/RuleArn"
        Priority:
          $ref: "#/components/schemas/String"
        Conditions:
          $ref: "#/components/schemas/RuleConditionList"
        Actions:
          $ref: "#/components/schemas/Actions"
        IsDefault:
          $ref: "#/components/schemas/IsDefault"
      description: Information about a rule.
    SourceIpConditionConfig:
      type: object
      properties:
        Values:
          $ref: "#/components/schemas/ListOfString"
      description: <p>Information about a source IP condition.</p> <p>You can use this
        condition to route based on the IP address of the source that connects
        to the load balancer. If a client is behind a proxy, this is the IP
        address of the proxy not the IP address of the client.</p>
    RulePriorityList:
      type: array
      items:
        $ref: "#/components/schemas/RulePriorityPair"
    SetIpAddressTypeInput:
      type: object
      required:
        - LoadBalancerArn
        - IpAddressType
      properties:
        LoadBalancerArn:
          $ref: "#/components/schemas/LoadBalancerArn"
        IpAddressType:
          $ref: "#/components/schemas/IpAddressType"
    SetRulePrioritiesInput:
      type: object
      required:
        - RulePriorities
      properties:
        RulePriorities:
          $ref: "#/components/schemas/RulePriorityList"
    SetSecurityGroupsInput:
      type: object
      required:
        - LoadBalancerArn
        - SecurityGroups
      properties:
        LoadBalancerArn:
          $ref: "#/components/schemas/LoadBalancerArn"
        SecurityGroups:
          $ref: "#/components/schemas/SecurityGroups"
    SetSubnetsInput:
      type: object
      required:
        - LoadBalancerArn
      properties:
        LoadBalancerArn:
          $ref: "#/components/schemas/LoadBalancerArn"
        Subnets:
          $ref: "#/components/schemas/Subnets"
        SubnetMappings:
          $ref: "#/components/schemas/SubnetMappings"
    SslPolicy:
      type: object
      properties:
        SslProtocols:
          $ref: "#/components/schemas/SslProtocols"
        Ciphers:
          $ref: "#/components/schemas/Ciphers"
        Name:
          $ref: "#/components/schemas/SslPolicyName"
      description: Information about a policy used for SSL negotiation.
    SslProtocols:
      type: array
      items:
        $ref: "#/components/schemas/SslProtocol"
    SslProtocol:
      type: string
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 256
    TagDescription:
      type: object
      properties:
        ResourceArn:
          $ref: "#/components/schemas/ResourceArn"
        Tags:
          $ref: "#/components/schemas/TagList"
      description: The tags associated with a resource.
    TargetId:
      type: string
    TargetGroup:
      type: object
      properties:
        TargetGroupArn:
          $ref: "#/components/schemas/TargetGroupArn"
        TargetGroupName:
          $ref: "#/components/schemas/TargetGroupName"
        Protocol:
          $ref: "#/components/schemas/ProtocolEnum"
        Port:
          $ref: "#/components/schemas/Port"
        VpcId:
          $ref: "#/components/schemas/VpcId"
        HealthCheckProtocol:
          $ref: "#/components/schemas/ProtocolEnum"
        HealthCheckPort:
          $ref: "#/components/schemas/HealthCheckPort"
        HealthCheckEnabled:
          $ref: "#/components/schemas/HealthCheckEnabled"
        HealthCheckIntervalSeconds:
          $ref: "#/components/schemas/HealthCheckIntervalSeconds"
        HealthCheckTimeoutSeconds:
          $ref: "#/components/schemas/HealthCheckTimeoutSeconds"
        HealthyThresholdCount:
          $ref: "#/components/schemas/HealthCheckThresholdCount"
        UnhealthyThresholdCount:
          $ref: "#/components/schemas/HealthCheckThresholdCount"
        HealthCheckPath:
          $ref: "#/components/schemas/Path"
        Matcher:
          $ref: "#/components/schemas/Matcher"
        LoadBalancerArns:
          $ref: "#/components/schemas/LoadBalancerArns"
        TargetType:
          $ref: "#/components/schemas/TargetTypeEnum"
      description: Information about a target group.
    TargetGroupAttributeKey:
      type: string
      pattern: ^[a-zA-Z0-9._]+$
      maxLength: 256
    TargetGroupAttributeValue:
      type: string
    TargetHealthStateEnum:
      type: string
      enum:
        - initial
        - healthy
        - unhealthy
        - unused
        - draining
        - unavailable
    TargetHealthReasonEnum:
      type: string
      enum:
        - Elb.RegistrationInProgress
        - Elb.InitialHealthChecking
        - Target.ResponseCodeMismatch
        - Target.Timeout
        - Target.FailedHealthChecks
        - Target.NotRegistered
        - Target.NotInUse
        - Target.DeregistrationInProgress
        - Target.InvalidState
        - Target.IpUnusable
        - Target.HealthCheckDisabled
        - Elb.InternalError
    TargetHealth:
      type: object
      properties:
        State:
          $ref: "#/components/schemas/TargetHealthStateEnum"
        Reason:
          $ref: "#/components/schemas/TargetHealthReasonEnum"
        Description:
          $ref: "#/components/schemas/Description"
      description: Information about the current health of a target.
    TargetHealthDescription:
      type: object
      properties:
        Target:
          $ref: "#/components/schemas/TargetDescription"
        HealthCheckPort:
          $ref: "#/components/schemas/HealthCheckPort"
        TargetHealth:
          $ref: "#/components/schemas/TargetHealth"
      description: Information about the health of a target.
