openapi: 3.0.0
info:
  title: Marketcheck APIs
  version: "1.6"
  x-apisguru-categories:
    - ecommerce
  x-logo:
    url: https://twitter.com/MarketcheckAPIs/profile_image?size=original
  x-origin:
    - format: swagger
      url: http://production-dot-marketcheck-gcp.appspot.com/api-docs
      version: "2.0"
  x-providerName: apigee.net
  x-serviceName: marketcheck-cars
paths:
  "/crm_check/{vin}":
    get:
      description: Check whether particular vin has had a listing after stipulated date or
        not
      operationId: crm_check
      parameters:
        - $ref: "#/components/parameters/api_key"
        - description: vin for which CRM check needs to be done
          in: path
          name: vin
          required: true
          schema:
            type: string
            format: string
        - description: sale date after which listing has appeared or not
          in: query
          name: sale_date
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: CRM check for given vin
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CRMResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      summary: CRM check of a particular vin
      tags:
        - CRM Cleanse API
      x-swagger-router-controller: Listing
  "/dealer/{dealer_id}":
    get:
      description: Get a particular dealer's information by its id
      operationId: getDealer
      parameters:
        - $ref: "#/components/parameters/api_key"
        - description: Dealer id to get all the dealer info attributes
          in: path
          name: dealer_id
          required: true
          schema:
            type: string
            format: string
        - description: boolean param to include site providers name in response
          in: query
          name: provider
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Dealer for the given id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dealer"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      summary: Dealer by id
      tags:
        - Dealer API
      x-swagger-router-controller: Dealer
  /dealers:
    get:
      description: The dealers API returns a list of dealers around a given point and
        radius.
      operationId: dealerSearch
      parameters:
        - $ref: "#/components/parameters/api_key"
        - description: Latitude component of location
          in: query
          name: latitude
          required: false
          schema:
            type: number
            format: double
        - description: Longitude component of location
          in: query
          name: longitude
          required: false
          schema:
            type: number
            format: double
        - description: Radius around the search location
          in: query
          name: radius
          required: false
          schema:
            type: integer
        - description: Number of results to return. Default is 10. Max is 50
          in: query
          name: rows
          required: false
          schema:
            type: number
            format: number
        - description: Offset for the search results. Default is 1.
          in: query
          name: start
          required: false
          schema:
            type: number
            format: number
        - description: Country to search dealers from, Value can either be US or CA
          in: query
          name: country
          required: false
          schema:
            type: string
            format: string
            enum:
              - us
              - ca
              - CA
              - Ca
              - US
              - Us
        - description: Search dealers based on their type - either franchise or independent
          in: query
          name: dealer_type
          required: false
          schema:
            type: string
            format: string
            enum:
              - independent
              - franchise
        - description: City to search dealers from
          in: query
          name: city
          required: false
          schema:
            type: string
            format: string
        - description: State to search dealers from
          in: query
          name: state
          required: false
          schema:
            type: string
            format: string
        - description: inventory_url of dealer to be searched
          in: query
          name: inventory_url
          required: false
          schema:
            type: string
            format: string
        - description: Zip code around which to search for dealers
          in: query
          name: zip
          required: false
          schema:
            type: string
        - description: sort for dealer search, can either be asc or desc, default is asc
          in: query
          name: sort_order
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: asc
        - description: boolean param to include site providers name in response
          in: query
          name: provider
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: List of dealers for the search
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DealersResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      summary: Find car dealers around
      tags:
        - Dealer API
    x-swagger-router-controller: Dealer
  "/history/{vin}":
    get:
      description: The history API returns online listing history for a car identified by
        its VIN. History listings are sorted in the descending order of the
        listing date / last seen date
      operationId: history
      parameters:
        - $ref: "#/components/parameters/api_key"
        - description: The VIN to identify the car to fetch the listing history. Must be a
            valid 17 char VIN
          in: path
          name: vin
          required: true
          schema:
            type: string
            format: string
        - description: List of fields to fetch, in case the default fields list in the
            response is to be trimmed down
          in: query
          name: fields
          required: false
          schema:
            type: string
            format: string
        - description: Page number to fetch the results for the given criteria. Default is
            1.
          in: query
          name: page
          required: false
          schema:
            type: number
            format: number
      responses:
        "200":
          description: Online listing history for the given vin
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/HistoricalListing"
                type: array
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      summary: Get a cars online listing history
      tags:
        - VIN History API
    x-swagger-router-controller: Listing
  "/listing/{id}":
    get:
      description: Get a particular listing by its id
      operationId: getListing
      parameters:
        - $ref: "#/components/parameters/api_key"
        - description: Listing id to get all the listing attributes
          in: path
          name: id
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Listing for the given id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Listing"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      summary: Listing by id
      tags:
        - Inventory Search API
    x-swagger-router-controller: Listing
  "/listing/{id}/extra":
    get:
      description: Get listing options, features, seller comments
      operationId: getListingExtra
      parameters:
        - $ref: "#/components/parameters/api_key"
        - description: Listing id to get all the long text listing attributes
          in: path
          name: id
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: ListingAttributes for the given listing id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListingExtraAttributes"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      summary: Long text Listings attributes for Listing with the given id
      tags:
        - Inventory Search API
    x-swagger-router-controller: Listing
  "/listing/{id}/media":
    get:
      description: Get listing media (photo, photos) by id
      operationId: getListingMedia
      parameters:
        - $ref: "#/components/parameters/api_key"
        - description: Listing id to get all the listing attributes
          in: path
          name: id
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: ListingMedia for the given listing id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListingMedia"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      summary: Listing media by id
      tags:
        - Inventory Search API
    x-swagger-router-controller: Listing
  /mds:
    get:
      description: Get the basic information on specifications for a car identified by a
        valid VIN
      operationId: getMDS
      parameters:
        - $ref: "#/components/parameters/api_key"
        - description: VIN to decode
          in: query
          name: vin
          required: true
          schema:
            type: string
            format: string
        - description: Exact parameter
          in: query
          name: exact
          required: false
          schema:
            type: boolean
            default: false
        - description: Latitude component of location
          in: query
          name: latitude
          required: false
          schema:
            type: number
            format: double
        - description: Longitude component of location
          in: query
          name: longitude
          required: false
          schema:
            type: number
            format: double
        - description: Radius around the search location
          in: query
          name: radius
          required: false
          schema:
            type: integer
        - description: Debug parameter
          in: query
          name: debug
          required: false
          schema:
            type: integer
            enum:
              - 0
              - 1
            default: 0
        - description: To fetch sold vins
          in: query
          name: include_sold
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Provides Market Days supply for year make model or trim combination
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Mds"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      summary: Market Days Supply
      tags:
        - Cars Market API
      x-swagger-router-controller: MDS
  /popular/cars:
    get:
      description: Get make model wise top 50 popular cars on national, state, city level
      operationId: getPopularCars
      parameters:
        - $ref: "#/components/parameters/api_key"
        - description: State level sales count
          in: query
          name: state
          required: false
          schema:
            type: string
            format: string
        - description: City level sales count, pipe seperated like
            city_state=jacksonville|FL
          in: query
          name: city_state
          required: false
          schema:
            type: string
            format: string
        - description: Inventory type for which popular count is to be searched
          in: query
          name: car_type
          required: true
          schema:
            type: string
            format: string
            enum:
              - new
              - used
      responses:
        "200":
          description: List of most popular top 50 cars
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PopularCars"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      summary: Get make model wise top 50 popular cars on national, state, city level
      tags:
        - Cars Market API
      x-swagger-router-controller: SalesIndex
  /sales:
    get:
      description: Get a sales count for city, state or national level by make, model,
        year, trim or taxonomy vin
      operationId: getSalesCount
      parameters:
        - $ref: "#/components/parameters/api_key"
        - description: Inventory type for which sales count is to be searched, default is
            used
          in: query
          name: car_type
          required: false
          schema:
            type: string
            format: string
            enum:
              - new
              - used
            default: used
        - description: Make for which sales count is to be searched
          in: query
          name: make
          required: false
          schema:
            type: string
            format: string
        - description: Make-Model for which sales count is to be searched, pipe seperated
            like mm=ford|f-150
          in: query
          name: mm
          required: false
          schema:
            type: string
            format: string
        - description: Year-Make-Model for which sales count is to be searched, pipe
            seperated like ymm=2015|ford|f-150
          in: query
          name: ymm
          required: false
          schema:
            type: string
            format: string
        - description: Year-Make-Model-Trim for which sales count is to be searched, pipe
            seperated like ymmt=2015|ford|f-150|platinum
          in: query
          name: ymmt
          required: false
          schema:
            type: string
            format: string
        - description: taxonomy_vin for which sales count is to be searched
          in: query
          name: taxonomy_vin
          required: false
          schema:
            type: string
            format: string
        - description: State level sales count
          in: query
          name: state
          required: false
          schema:
            type: string
            format: string
        - description: City level sales count, pipe seperated like
            city_state=jacksonville|FL
          in: query
          name: city_state
          required: false
          schema:
            type: string
            format: string
        - description: VIN that will be transformed to taxonomy_vin
          in: query
          name: vin
          required: false
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Sales count for given parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sales"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      summary: Get sales count by make, model, year, trim or taxonomy vin
      tags:
        - Cars Market API
      x-swagger-router-controller: SalesIndex
  /search:
    get:
      description: >-
        This endpoint is the meat of the API and serves many purposes. This API
        produces a list of currently active cars from the market for the given
        search criteria. The API results are limited to allow pagination upto
        10000 rows. 
         The search API facilitates the following use cases - 
        1. Search Cars around a given geo-point within a given radius 

        2. Search cars for a specific year / make / model or combination of these 

        3. Search cars matching multiple year, make, model combinatins in the same search request

        4. Filter results by most car specification attributes

        5. Search for similar cars by VIN or Taxonomy VIN 

        6. Filter cars within a given price / miles / days on market (dom) range

        7. Specify a sort order for the results on price / miles / dom / listed date 

        8. Search cars for a given City / State combination 

        9. Get Facets to build the search drill downs 

        10. Get Market averages for price/miles/dom for your search
      parameters:
        - $ref: "#/components/parameters/api_key"
        - description: Latitude component of location
          in: query
          name: latitude
          required: false
          schema:
            type: number
            format: double
        - description: Longitude component of location
          in: query
          name: longitude
          required: false
          schema:
            type: number
            format: double
        - description: Radius around the search location
          in: query
          name: radius
          required: false
          schema:
            type: integer
        - description: car search bases on zipcode
          in: query
          name: zip
          required: false
          schema:
            type: string
        - description: Boolean param to search for listings that include leasing options in
            them
          in: query
          name: include_lease
          required: false
          schema:
            type: boolean
        - description: Boolean param to search for listings that include finance options in
            them
          in: query
          name: include_finance
          required: false
          schema:
            type: boolean
        - description: Search listings with exact lease term, or inside a range with min
            and max seperated by a dash like lease_term=30-60
          in: query
          name: lease_term
          required: false
          schema:
            type: string
        - description: Search listings with exact down payment in lease offers, or inside a
            range with min and max seperated by a dash like
            lease_down_payment=30-60
          in: query
          name: lease_down_payment
          required: false
          schema:
            type: string
        - description: Search listings with lease offers exactly matching Estimated Monthly
            Payment(EMI), or inside a range with min and max seperated by a dash
            like lease_emp=30-60
          in: query
          name: lease_emp
          required: false
          schema:
            type: string
        - description: Search listings with exact finance loan term, or inside a range with
            min and max seperated by a dash like finance_loan_term=30-60
          in: query
          name: finance_loan_term
          required: false
          schema:
            type: string
        - description: Search listings with finance offers exactly matching loans Annual
            Percentage Rate, or inside a range with min and max seperated by a
            dash like finance_loan_apr=30-60
          in: query
          name: finance_loan_apr
          required: false
          schema:
            type: string
        - description: Search listings with finance offers exactly matching Estimated
            Monthly Payment(EMI), or inside a range with min and max seperated
            by a dash like finance_emp=30-60
          in: query
          name: finance_emp
          required: false
          schema:
            type: string
        - description: Search listings with exact down payment in finance offers, or inside
            a range with min and max seperated by a dash like
            finance_down_payment=30-60
          in: query
          name: finance_down_payment
          required: false
          schema:
            type: string
        - description: Search listings with exact down payment percentage in finance
            offers, or inside a range with min and max seperated by a dash like
            finance_down_payment_per=30-60
          in: query
          name: finance_down_payment_per
          required: false
          schema:
            type: string
        - description: Car type. Allowed values are - new / used / certified
          in: query
          name: car_type
          required: false
          schema:
            type: string
            enum:
              - new
              - used
              - certified
        - description: Seller type to filter cars on. Valid filter values are those that
            our Search facets API returns for unique seller types. You can pass
            in multiple seller type values comma separated.
          in: query
          name: seller_type
          required: false
          schema:
            type: string
            format: string
            default: dealer
        - description: Indicates whether car has had only one owner or not
          in: query
          name: carfax_1_owner
          required: false
          schema:
            type: string
            enum:
              - "true"
              - "false"
        - description: Indicates whether car has clean ownership records
          in: query
          name: carfax_clean_title
          required: false
          schema:
            type: string
            enum:
              - "true"
              - "false"
        - description: Car year - 1980 onwards. Valid filter values are those that our
            Search facets API returns for unique years. You can pass in multiple
            year values comma separated.
          in: query
          name: year
          required: false
          schema:
            type: string
        - description: Car Make - should be a standard OEM Make name. Valid filter values
            are those that our Search facets API returns for unique make. You
            can pass in multiple make values separated by comma. e.g. ford,audi
          in: query
          name: make
          required: false
          schema:
            type: string
            format: string
        - description: Car model to search. Valid filter values are those that our Search
            facets API returns for unique model. You can pass in multiple model
            values comma separated for e.g f-150,Mustang.
          in: query
          name: model
          required: false
          schema:
            type: string
            format: string
        - description: Car trim to search. Valid filter values are those that our Search
            facets API returns for unique trim. You can pass in multiple trim
            values comma separated
          in: query
          name: trim
          required: false
          schema:
            type: string
            format: string
        - description: Dealer id to filter the cars.
          in: query
          name: dealer_id
          required: false
          schema:
            type: string
            format: string
        - description: Car vin to search
          in: query
          name: vin
          required: false
          schema:
            type: string
            format: string
        - description: Source to search cars. Valid filter values are those that our Search
            facets API returns for unique source. You can pass in multiple
            source values comma separated
          in: query
          name: source
          required: false
          schema:
            type: string
            format: string
        - description: Body type to filter the cars on. Valid filter values are those that
            our Search facets API returns for unique body types. You can pass in
            multiple body types comma separated.
          in: query
          name: body_type
          required: false
          schema:
            type: string
            format: string
        - description: Body subtype to filter the cars on. Valid filter values are those
            that our Search facets API returns for unique body subtypes. You can
            pass in multiple body subtype values comma separated
          in: query
          name: body_subtype
          required: false
          schema:
            type: string
            format: string
        - description: Vehicle type to filter the cars on. Valid filter values are those
            that our Search facets API returns for unique vehicle types. You can
            pass in multiple vehicle type values comma separated
          in: query
          name: vehicle_type
          required: false
          schema:
            type: string
            format: string
        - description: Comma separated list of 17 digit vins to search the matching cars
            for. Only 10 VINs allowed per request. If the request contains more
            than 10 VINs the first 10 VINs will be considered. Could be used as
            a More Like This or Similar Vehicles search for the given VINs. Ths
            vins parameter is an alternative to taxonomy_vins or ymmt parameters
            available with the search API. vins and taxonomy_vins parameters
            could be used to filter our cars with the exact build represented by
            the vins or taxonomy_vins whereas ymmt is a top level filter that
            does not filter cars by the build attributes like doors, drivetrain,
            cylinders, body type, body subtype, vehicle type etc
          in: query
          name: vins
          required: false
          schema:
            type: string
        - description: Comma separated list of 10 letters excert from the 17 letter VIN.
            The 10 letters to be picked up from the 17 letter VIN are - first 8
            letters and the 10th and 11th letter. E.g. For a VIN -
            1FTFW1EF3EKE57182 the taxonomy vin would be - 1FTFW1EFEK  A taxonomy
            VIN identified a build of a car and could be used to filter our cars
            of a particular build. This is an alternative to the vin or ymmt
            parameters to the search API.
          in: query
          name: taxonomy_vins
          required: false
          schema:
            type: string
        - description: Comma separated list of Year, Make, Model, Trim combinations. Each
            combination needs to have the year,make,model, trim values separated
            by a pipe '|' character in the form year|make|model|trim. e.g.
            2010|Audi|A5,2014|Nissan|Sentra|S 6MT,|Honda|City|   You could just
            provide strings of the form - 'year|make||' or 'year|make|model' or
            '|make|model|' combinations. Individual year / make / model filters
            provied with the API calls will take precedence over the Year, Make,
            Model, Trim combinations. The Make, Model, Trim values must be valid
            values as per the Marketcheck Vin Decoder. If you are using a
            separate vin decoder then look at using the 'vins' or
            'taxonomy_vins' parameter to the search api instead the
            year|make|model|trim combinations.
          in: query
          name: ymmt
          required: false
          schema:
            type: string
        - description: Comma separated list of Year, Make, Model, Trim fields. For example
            - year,make,model,trim fields for which user wants to do an exact
            match
          in: query
          name: match
          required: false
          schema:
            type: string
        - description: Cylinders to filter the cars on. Valid filter values are those that
            our Search facets API returns for unique cylinder values. You can
            pass in multiple cylinder values comma separated
          in: query
          name: cylinders
          required: false
          schema:
            type: string
            format: string
        - description: Transmission to filter the cars on. [a = Automatic, m = Manual].
            Valid filter values are those that our Search facets API returns for
            unique transmission. You can pass in multiple transmission values
            comma separated
          in: query
          name: transmission
          required: false
          schema:
            type: string
            format: string
        - description: Speeds to filter the cars on. Valid filter values are those that our
            Search facets API returns for unique speeds. You can pass in
            multiple speeds values comma separated
          in: query
          name: speeds
          required: false
          schema:
            type: string
            format: string
        - description: Doors to filter the cars on. Valid filter values are those that our
            Search facets API returns for unique doors. You can pass in multiple
            doors values comma separated
          in: query
          name: doors
          required: false
          schema:
            type: string
            format: string
        - description: Drivetrain to filter the cars on. Valid filter values are those that
            our Search facets API returns for unique drivetrains. You can pass
            in multiple drivetrain values comma separated
          in: query
          name: drivetrain
          required: false
          schema:
            type: string
            format: string
        - description: Exterior color to match. Valid filter values are those that our
            Search facets API returns for unique exterior colors. You can pass
            in multiple exterior color values comma separated
          in: query
          name: exterior_color
          required: false
          schema:
            type: string
        - description: Interior color to match. Valid filter values are those that our
            Search facets API returns for unique interior colors. You can pass
            in multiple interior color values comma separated
          in: query
          name: interior_color
          required: false
          schema:
            type: string
        - description: Base exterior color to match. Valid filter values are those that our
            Search facets API returns for unique base exterior colors. You can
            pass in multiple base interior color values comma separated
          in: query
          name: base_exterior_color
          required: false
          schema:
            type: string
        - description: Base interior color to match. Valid filter values are those that our
            Search facets API returns for unique base interior colors. You can
            pass in multiple base interior color values comma separated
          in: query
          name: base_interior_color
          required: false
          schema:
            type: string
        - description: Filter listings on engine
          in: query
          name: engine
          required: false
          schema:
            type: string
        - description: Engine Size to match. Valid filter values are those that our Search
            facets API returns for unique engine size. You can pass in multiple
            engine size values comma separated
          in: query
          name: engine_size
          required: false
          schema:
            type: string
        - description: Engine Aspiration to match. Valid filter values are those that our
            Search facets API returns for unique Engine Aspirations. You can
            pass in multiple Engine aspirations values comma separated
          in: query
          name: engine_aspiration
          required: false
          schema:
            type: string
        - description: Engine Block to match. Valid filter values are those that our Search
            facets API returns for unique Engine Block. You can pass in multiple
            Engine Block values comma separated
          in: query
          name: engine_block
          required: false
          schema:
            type: string
        - description: Miles range to filter cars with miles in the given range. Range to
            be given in the format - min-max e.g. 1000-5000
          in: query
          name: miles_range
          required: false
          schema:
            type: string
            format: string
        - description: Price range to filter cars with the price in the range given. Range
            to be given in the format - min-max e.g. 1000-5000
          in: query
          name: price_range
          required: false
          schema:
            type: string
            format: string
        - description: Days on Market range to filter cars with the DOM within the given
            range. Range to be given in the format - min-max e.g. 10-50
          in: query
          name: dom_range
          required: false
          schema:
            type: string
            format: string
        - description: Sort by field - allowed fields are
            distance|price|miles|dom|age|posted_at|year. Default sort field is
            distance from the given point
          in: query
          name: sort_by
          required: false
          schema:
            type: string
            format: string
        - description: Sort order - asc or desc. Default sort order is distance from a
            point.
          in: query
          name: sort_order
          required: false
          schema:
            type: string
            format: string
        - description: Number of results to return. Default is 10. Max is 50
          in: query
          name: rows
          required: false
          schema:
            type: string
        - description: Page number to fetch the results for the given criteria. Default is
            1. Pagination is allowed only till first 10000 results for the
            search and sort criteria. The page value can be only between 1 to
            10000/rows
          in: query
          name: start
          required: false
          schema:
            type: string
        - description: The comma separated list of fields for which facets are requested.
            Supported fields are - year, make, model, trim, vehicle_type,
            car_type, body_type, body_subtype, drivetrain, cylinders,
            transmission, exterior_color, interior_color, doors, engine_size,
            engine_aspiration, engine_block. Facets could be requested in
            addition to the listings for the search. Please note - The API calls
            with lots of facet fields may take longer to respond.
          in: query
          name: facets
          required: false
          schema:
            type: string
        - description: The comma separated list of numeric fields for which range facets
            are requested. Supported fields are - price, miles, dom. Facets
            could be requested in addition to the listings for the search.
            Please note - The API calls with lots of facet fields may take
            longer to respond.
          in: query
          name: range_facets
          required: false
          schema:
            type: string
        - description: Control sort order of facets with this parameter with default sort
            being on count, Other available sort is alphabetical sort, which can
            be obtained by using index as value for this param
          in: query
          name: facet_sort
          required: false
          schema:
            type: string
            enum:
              - count
              - index
        - description: The list of fields for which stats need to be generated based on the
            matching listings for the search criteria. Allowed fields are -
            price, miles, msrp, dom The stats consists of mean, max, average and
            count of listings based on which the stats are calculated for the
            field. Stats could be requested in addition to the listings for the
            search. Please note - The API calls with the stats fields may take
            longer to respond.
          in: query
          name: stats
          required: false
          schema:
            type: string
        - description: Filter on Country, by default US. Search available on US (United
            States) and CA (Canada)
          in: query
          name: country
          required: false
          schema:
            type: string
        - description: If plot has value true results in around 25k coordinates with
            limited fields to plot respective graph
          in: query
          name: plot
          required: false
          schema:
            type: boolean
        - description: If nodedup is set to true then API will give results without
            is_searchable i.e multiple listings for single vin
          in: query
          name: nodedup
          required: false
          schema:
            type: boolean
        - description: If dedup is set to true then will give results with is_searchable
            irrespecive of dealer_id or source
          in: query
          name: dedup
          required: false
          schema:
            type: boolean
        - description: Used in combination with dealer_id or source, when true returns the
            listings actually owned by dealer himself
          in: query
          name: owned
          required: false
          schema:
            type: boolean
        - description: Filter listsings on State
          in: query
          name: state
          required: false
          schema:
            type: string
        - description: Filter listings on city
          in: query
          name: city
          required: false
          schema:
            type: string
        - description: Filter listings on dealer_name
          in: query
          name: dealer_name
          required: false
          schema:
            type: string
        - description: Filter listings on web scraped trim
          in: query
          name: trim_o
          required: false
          schema:
            type: string
        - description: Filter trim on custom possible matches
          in: query
          name: trim_r
          required: false
          schema:
            type: string
        - description: Active Days on Market range to filter cars with the DOM within the
            given range. Range to be given in the format - min-max e.g. 10-50
          in: query
          name: dom_active_range
          required: false
          schema:
            type: string
            format: string
        - description: Last 180 Days on Market range to filter cars with the DOM within the
            given range. Range to be given in the format - min-max e.g. 10-50
          in: query
          name: dom_180_range
          required: false
          schema:
            type: string
            format: string
        - description: Boolean param to exclude certified cars from search results
          in: query
          name: exclude_certified
          required: false
          schema:
            type: boolean
        - description: fuel type of the car to be searched
          in: query
          name: fuel_type
          required: false
          schema:
            type: string
        - description: Filter based on dealer type independant or franchise
          in: query
          name: dealer_type
          required: false
          schema:
            type: string
            enum:
              - franchise
              - independent
        - description: A boolean indicating whether to include only those listings that
            have photo_links in search results, And discard those that don't
            have them
          in: query
          name: photo_links
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: List of all cars listings matching the search & filter criteria
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      summary: Gets active car listings for the given search criteria
      tags:
        - Inventory Search API
    x-swagger-router-controller: Listing
  /search/auction:
    get:
      description: >-
        This endpoint is the meat of the API and serves many purposes. This API
        produces a list of currently active cars from the market for the given
        search criteria. The API results are limited to allow pagination upto
        10000 rows. 
         The search API facilitates the following use cases - 
        1. Search Cars around a given geo-point within a given radius 

        2. Search cars for a specific year / make / model or combination of these 

        3. Search cars matching multiple year, make, model combinatins in the same search request

        4. Filter results by most car specification attributes

        5. Search for similar cars by VIN or Taxonomy VIN 

        6. Filter cars within a given price / miles / days on market (dom) range

        7. Specify a sort order for the results on price / miles / dom / listed date 

        8. Search cars for a given City / State combination 

        9. Get Facets to build the search drill downs 

        10. Get Market averages for price/miles/dom for your search
      parameters:
        - $ref: "#/components/parameters/api_key"
        - description: Latitude component of location
          in: query
          name: latitude
          required: false
          schema:
            type: number
            format: double
        - description: Longitude component of location
          in: query
          name: longitude
          required: false
          schema:
            type: number
            format: double
        - description: Radius around the search location
          in: query
          name: radius
          required: false
          schema:
            type: integer
        - description: car search bases on zipcode
          in: query
          name: zip
          required: false
          schema:
            type: string
        - description: Boolean param to search for listings that include leasing options in
            them
          in: query
          name: include_lease
          required: false
          schema:
            type: boolean
        - description: Boolean param to search for listings that include finance options in
            them
          in: query
          name: include_finance
          required: false
          schema:
            type: boolean
        - description: Search listings with exact lease term, or inside a range with min
            and max seperated by a dash like lease_term=30-60
          in: query
          name: lease_term
          required: false
          schema:
            type: string
        - description: Search listings with exact down payment in lease offers, or inside a
            range with min and max seperated by a dash like
            lease_down_payment=30-60
          in: query
          name: lease_down_payment
          required: false
          schema:
            type: string
        - description: Search listings with lease offers exactly matching Estimated Monthly
            Payment(EMI), or inside a range with min and max seperated by a dash
            like lease_emp=30-60
          in: query
          name: lease_emp
          required: false
          schema:
            type: string
        - description: Search listings with exact finance loan term, or inside a range with
            min and max seperated by a dash like finance_loan_term=30-60
          in: query
          name: finance_loan_term
          required: false
          schema:
            type: string
        - description: Search listings with finance offers exactly matching loans Annual
            Percentage Rate, or inside a range with min and max seperated by a
            dash like finance_loan_apr=30-60
          in: query
          name: finance_loan_apr
          required: false
          schema:
            type: string
        - description: Search listings with finance offers exactly matching Estimated
            Monthly Payment(EMI), or inside a range with min and max seperated
            by a dash like finance_emp=30-60
          in: query
          name: finance_emp
          required: false
          schema:
            type: string
        - description: Search listings with exact down payment in finance offers, or inside
            a range with min and max seperated by a dash like
            finance_down_payment=30-60
          in: query
          name: finance_down_payment
          required: false
          schema:
            type: string
        - description: Search listings with exact down payment percentage in finance
            offers, or inside a range with min and max seperated by a dash like
            finance_down_payment_per=30-60
          in: query
          name: finance_down_payment_per
          required: false
          schema:
            type: string
        - description: Car type. Allowed values are - new / used / certified
          in: query
          name: car_type
          required: false
          schema:
            type: string
            enum:
              - new
              - used
              - certified
        - description: Indicates whether car has had only one owner or not
          in: query
          name: carfax_1_owner
          required: false
          schema:
            type: string
            enum:
              - "true"
              - "false"
        - description: Indicates whether car has clean ownership records
          in: query
          name: carfax_clean_title
          required: false
          schema:
            type: string
            enum:
              - "true"
              - "false"
        - description: Car year - 1980 onwards. Valid filter values are those that our
            Search facets API returns for unique years. You can pass in multiple
            year values comma separated.
          in: query
          name: year
          required: false
          schema:
            type: string
        - description: Car Make - should be a standard OEM Make name. Valid filter values
            are those that our Search facets API returns for unique make. You
            can pass in multiple make values separated by comma. e.g. ford,audi
          in: query
          name: make
          required: false
          schema:
            type: string
            format: string
        - description: Car model to search. Valid filter values are those that our Search
            facets API returns for unique model. You can pass in multiple model
            values comma separated for e.g f-150,Mustang.
          in: query
          name: model
          required: false
          schema:
            type: string
            format: string
        - description: Car trim to search. Valid filter values are those that our Search
            facets API returns for unique trim. You can pass in multiple trim
            values comma separated
          in: query
          name: trim
          required: false
          schema:
            type: string
            format: string
        - description: Dealer id to filter the cars.
          in: query
          name: dealer_id
          required: false
          schema:
            type: string
            format: string
        - description: Car vin to search
          in: query
          name: vin
          required: false
          schema:
            type: string
            format: string
        - description: Source to search cars. Valid filter values are those that our Search
            facets API returns for unique source. You can pass in multiple
            source values comma separated
          in: query
          name: source
          required: false
          schema:
            type: string
            format: string
        - description: Body type to filter the cars on. Valid filter values are those that
            our Search facets API returns for unique body types. You can pass in
            multiple body types comma separated.
          in: query
          name: body_type
          required: false
          schema:
            type: string
            format: string
        - description: Body subtype to filter the cars on. Valid filter values are those
            that our Search facets API returns for unique body subtypes. You can
            pass in multiple body subtype values comma separated
          in: query
          name: body_subtype
          required: false
          schema:
            type: string
            format: string
        - description: Vehicle type to filter the cars on. Valid filter values are those
            that our Search facets API returns for unique vehicle types. You can
            pass in multiple vehicle type values comma separated
          in: query
          name: vehicle_type
          required: false
          schema:
            type: string
            format: string
        - description: Comma separated list of 17 digit vins to search the matching cars
            for. Only 10 VINs allowed per request. If the request contains more
            than 10 VINs the first 10 VINs will be considered. Could be used as
            a More Like This or Similar Vehicles search for the given VINs. Ths
            vins parameter is an alternative to taxonomy_vins or ymmt parameters
            available with the search API. vins and taxonomy_vins parameters
            could be used to filter our cars with the exact build represented by
            the vins or taxonomy_vins whereas ymmt is a top level filter that
            does not filter cars by the build attributes like doors, drivetrain,
            cylinders, body type, body subtype, vehicle type etc
          in: query
          name: vins
          required: false
          schema:
            type: string
        - description: Comma separated list of 10 letters excert from the 17 letter VIN.
            The 10 letters to be picked up from the 17 letter VIN are - first 8
            letters and the 10th and 11th letter. E.g. For a VIN -
            1FTFW1EF3EKE57182 the taxonomy vin would be - 1FTFW1EFEK  A taxonomy
            VIN identified a build of a car and could be used to filter our cars
            of a particular build. This is an alternative to the vin or ymmt
            parameters to the search API.
          in: query
          name: taxonomy_vins
          required: false
          schema:
            type: string
        - description: Comma separated list of Year, Make, Model, Trim combinations. Each
            combination needs to have the year,make,model, trim values separated
            by a pipe '|' character in the form year|make|model|trim. e.g.
            2010|Audi|A5,2014|Nissan|Sentra|S 6MT,|Honda|City|   You could just
            provide strings of the form - 'year|make||' or 'year|make|model' or
            '|make|model|' combinations. Individual year / make / model filters
            provied with the API calls will take precedence over the Year, Make,
            Model, Trim combinations. The Make, Model, Trim values must be valid
            values as per the Marketcheck Vin Decoder. If you are using a
            separate vin decoder then look at using the 'vins' or
            'taxonomy_vins' parameter to the search api instead the
            year|make|model|trim combinations.
          in: query
          name: ymmt
          required: false
          schema:
            type: string
        - description: Comma separated list of Year, Make, Model, Trim fields. For example
            - year,make,model,trim fields for which user wants to do an exact
            match
          in: query
          name: match
          required: false
          schema:
            type: string
        - description: Cylinders to filter the cars on. Valid filter values are those that
            our Search facets API returns for unique cylinder values. You can
            pass in multiple cylinder values comma separated
          in: query
          name: cylinders
          required: false
          schema:
            type: string
            format: string
        - description: Transmission to filter the cars on. [a = Automatic, m = Manual].
            Valid filter values are those that our Search facets API returns for
            unique transmission. You can pass in multiple transmission values
            comma separated
          in: query
          name: transmission
          required: false
          schema:
            type: string
            format: string
        - description: Speeds to filter the cars on. Valid filter values are those that our
            Search facets API returns for unique speeds. You can pass in
            multiple speeds values comma separated
          in: query
          name: speeds
          required: false
          schema:
            type: string
            format: string
        - description: Doors to filter the cars on. Valid filter values are those that our
            Search facets API returns for unique doors. You can pass in multiple
            doors values comma separated
          in: query
          name: doors
          required: false
          schema:
            type: string
            format: string
        - description: Drivetrain to filter the cars on. Valid filter values are those that
            our Search facets API returns for unique drivetrains. You can pass
            in multiple drivetrain values comma separated
          in: query
          name: drivetrain
          required: false
          schema:
            type: string
            format: string
        - description: Exterior color to match. Valid filter values are those that our
            Search facets API returns for unique exterior colors. You can pass
            in multiple exterior color values comma separated
          in: query
          name: exterior_color
          required: false
          schema:
            type: string
        - description: Interior color to match. Valid filter values are those that our
            Search facets API returns for unique interior colors. You can pass
            in multiple interior color values comma separated
          in: query
          name: interior_color
          required: false
          schema:
            type: string
        - description: Base exterior color to match. Valid filter values are those that our
            Search facets API returns for unique base exterior colors. You can
            pass in multiple base interior color values comma separated
          in: query
          name: base_exterior_color
          required: false
          schema:
            type: string
        - description: Base interior color to match. Valid filter values are those that our
            Search facets API returns for unique base interior colors. You can
            pass in multiple base interior color values comma separated
          in: query
          name: base_interior_color
          required: false
          schema:
            type: string
        - description: Filter listings on engine
          in: query
          name: engine
          required: false
          schema:
            type: string
        - description: Engine Size to match. Valid filter values are those that our Search
            facets API returns for unique engine size. You can pass in multiple
            engine size values comma separated
          in: query
          name: engine_size
          required: false
          schema:
            type: string
        - description: Engine Aspiration to match. Valid filter values are those that our
            Search facets API returns for unique Engine Aspirations. You can
            pass in multiple Engine aspirations values comma separated
          in: query
          name: engine_aspiration
          required: false
          schema:
            type: string
        - description: Engine Block to match. Valid filter values are those that our Search
            facets API returns for unique Engine Block. You can pass in multiple
            Engine Block values comma separated
          in: query
          name: engine_block
          required: false
          schema:
            type: string
        - description: Miles range to filter cars with miles in the given range. Range to
            be given in the format - min-max e.g. 1000-5000
          in: query
          name: miles_range
          required: false
          schema:
            type: string
            format: string
        - description: Price range to filter cars with the price in the range given. Range
            to be given in the format - min-max e.g. 1000-5000
          in: query
          name: price_range
          required: false
          schema:
            type: string
            format: string
        - description: Days on Market range to filter cars with the DOM within the given
            range. Range to be given in the format - min-max e.g. 10-50
          in: query
          name: dom_range
          required: false
          schema:
            type: string
            format: string
        - description: Sort by field - allowed fields are
            distance|price|miles|dom|age|posted_at|year. Default sort field is
            distance from the given point
          in: query
          name: sort_by
          required: false
          schema:
            type: string
            format: string
        - description: Sort order - asc or desc. Default sort order is distance from a
            point.
          in: query
          name: sort_order
          required: false
          schema:
            type: string
            format: string
        - description: Number of results to return. Default is 10. Max is 50
          in: query
          name: rows
          required: false
          schema:
            type: string
        - description: Page number to fetch the results for the given criteria. Default is
            1. Pagination is allowed only till first 10000 results for the
            search and sort criteria. The page value can be only between 1 to
            10000/rows
          in: query
          name: start
          required: false
          schema:
            type: string
        - description: The comma separated list of fields for which facets are requested.
            Supported fields are - year, make, model, trim, vehicle_type,
            car_type, body_type, body_subtype, drivetrain, cylinders,
            transmission, exterior_color, interior_color, doors, engine_size,
            engine_aspiration, engine_block. Facets could be requested in
            addition to the listings for the search. Please note - The API calls
            with lots of facet fields may take longer to respond.
          in: query
          name: facets
          required: false
          schema:
            type: string
        - description: The comma separated list of numeric fields for which range facets
            are requested. Supported fields are - price, miles, dom. Facets
            could be requested in addition to the listings for the search.
            Please note - The API calls with lots of facet fields may take
            longer to respond.
          in: query
          name: range_facets
          required: false
          schema:
            type: string
        - description: Control sort order of facets with this parameter with default sort
            being on count, Other available sort is alphabetical sort, which can
            be obtained by using index as value for this param
          in: query
          name: facet_sort
          required: false
          schema:
            type: string
            enum:
              - count
              - index
        - description: The list of fields for which stats need to be generated based on the
            matching listings for the search criteria. Allowed fields are -
            price, miles, msrp, dom The stats consists of mean, max, average and
            count of listings based on which the stats are calculated for the
            field. Stats could be requested in addition to the listings for the
            search. Please note - The API calls with the stats fields may take
            longer to respond.
          in: query
          name: stats
          required: false
          schema:
            type: string
        - description: Filter on Country, by default US. Search available on US (United
            States) and CA (Canada)
          in: query
          name: country
          required: false
          schema:
            type: string
        - description: If plot has value true results in around 25k coordinates with
            limited fields to plot respective graph
          in: query
          name: plot
          required: false
          schema:
            type: boolean
        - description: If nodedup is set to true then API will give results without
            is_searchable i.e multiple listings for single vin
          in: query
          name: nodedup
          required: false
          schema:
            type: boolean
        - description: If dedup is set to true then will give results with is_searchable
            irrespecive of dealer_id or source
          in: query
          name: dedup
          required: false
          schema:
            type: boolean
        - description: Used in combination with dealer_id or source, when true returns the
            listings actually owned by dealer himself
          in: query
          name: owned
          required: false
          schema:
            type: boolean
        - description: Filter listsings on State
          in: query
          name: state
          required: false
          schema:
            type: string
        - description: Filter listings on city
          in: query
          name: city
          required: false
          schema:
            type: string
        - description: Filter listings on dealer_name
          in: query
          name: dealer_name
          required: false
          schema:
            type: string
        - description: Filter listings on web scraped trim
          in: query
          name: trim_o
          required: false
          schema:
            type: string
        - description: Filter trim on custom possible matches
          in: query
          name: trim_r
          required: false
          schema:
            type: string
        - description: Active Days on Market range to filter cars with the DOM within the
            given range. Range to be given in the format - min-max e.g. 10-50
          in: query
          name: dom_active_range
          required: false
          schema:
            type: string
            format: string
        - description: Last 180 Days on Market range to filter cars with the DOM within the
            given range. Range to be given in the format - min-max e.g. 10-50
          in: query
          name: dom_180_range
          required: false
          schema:
            type: string
            format: string
        - description: Boolean param to exclude certified cars from search results
          in: query
          name: exclude_certified
          required: false
          schema:
            type: boolean
        - description: fuel type of the car to be searched
          in: query
          name: fuel_type
          required: false
          schema:
            type: string
        - description: A boolean indicating whether to include only those listings that
            have photo_links in search results, And discard those that don't
            have them
          in: query
          name: photo_links
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: List of all cars listings matching the search & filter criteria
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      summary: Gets active car listings for the given search criteria
      tags:
        - Inventory Search API
    x-swagger-router-controller: Listing
  /search/auto-complete:
    get:
      description: Auto-complete the inputs of your end users
      operationId: searchAutoComplete
      parameters:
        - $ref: "#/components/parameters/api_key"
        - description: Field name for which you want auto-completion
          in: query
          name: field
          required: true
          schema:
            type: string
            format: string
            enum:
              - ymm
              - mm
              - make
              - model
              - trim
              - body_type
              - body_subtype
              - vehicle_type
              - transmission
              - drivetrain
              - fuel_type
              - exterior_color
              - interior_color
              - engine
              - engine_size
              - engine_block
              - state
              - city
        - description: Input entered so far
          in: query
          name: input
          required: true
          schema:
            type: string
            format: string
        - description: Apply year filter to selections
          in: query
          name: year
          required: false
          schema:
            type: string
            format: string
        - description: Apply make filter to selections
          in: query
          name: make
          required: false
          schema:
            type: string
            format: string
        - description: Apply model filter to selections
          in: query
          name: model
          required: false
          schema:
            type: string
            format: string
        - description: Apply trim filter to selections
          in: query
          name: trim
          required: false
          schema:
            type: string
            format: string
        - description: Apply body_type filter to selections
          in: query
          name: body_type
          required: false
          schema:
            type: string
            format: string
        - description: Apply body_subtype filter to selections
          in: query
          name: body_subtype
          required: false
          schema:
            type: string
            format: string
        - description: Apply vehicle_type filter to selections
          in: query
          name: vehicle_type
          required: false
          schema:
            type: string
            format: string
        - description: Apply transmission filter to selections
          in: query
          name: transmission
          required: false
          schema:
            type: string
            format: string
        - description: Apply drivetrain filter to selections
          in: query
          name: drivetrain
          required: false
          schema:
            type: string
            format: string
        - description: Apply fuel_type filter to selections
          in: query
          name: fuel_type
          required: false
          schema:
            type: string
            format: string
        - description: Apply exterior_color filter to selections
          in: query
          name: exterior_color
          required: false
          schema:
            type: string
            format: string
        - description: Apply interior_color filter to selections
          in: query
          name: interior_color
          required: false
          schema:
            type: string
            format: string
        - description: Apply engine filter to selections
          in: query
          name: engine
          required: false
          schema:
            type: string
            format: string
        - description: Apply engine_size filter to selections
          in: query
          name: engine_size
          required: false
          schema:
            type: string
            format: string
        - description: Apply engine_block filter to selections
          in: query
          name: engine_block
          required: false
          schema:
            type: string
            format: string
        - description: State level auto-completion
          in: query
          name: state
          required: false
          schema:
            type: string
            format: string
        - description: City level auto-completion
          in: query
          name: city
          required: false
          schema:
            type: string
            format: string
        - description: Country for which auto-completion is to be performed
          in: query
          name: country
          required: false
          schema:
            type: string
            format: string
            enum:
              - US
              - CA
            default: US
        - description: Inventory type
          in: query
          name: car_type
          required: false
          schema:
            type: string
            format: string
            enum:
              - new
              - used
        - description: Boolean variable to indicate ignore case of current input
          in: query
          name: ignore_case
          required: false
          schema:
            type: boolean
            default: true
        - description: Boolean variable to indicate wheather to include term counts as well
            in response
          in: query
          name: term_counts
          required: false
          schema:
            type: boolean
            default: false
        - description: Sort the response, either by index or count(default)
          in: query
          name: sort_by
          required: false
          schema:
            type: string
            enum:
              - index
              - count
            default: index
      responses:
        "200":
          description: Unique terms available in given field for auto completion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchAutoCompleteResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      summary: API for auto-completion of inputs
      tags:
        - Inventory Search API
      x-swagger-router-controller: Listing
  /search/fsbo:
    get:
      description: >-
        This endpoint is the meat of the API and serves many purposes. This API
        produces a list of currently active cars from the market for the given
        search criteria. The API results are limited to allow pagination upto
        10000 rows. 
         The search API facilitates the following use cases - 
        1. Search Cars around a given geo-point within a given radius 

        2. Search cars for a specific year / make / model or combination of these 

        3. Search cars matching multiple year, make, model combinatins in the same search request

        4. Filter results by most car specification attributes

        5. Search for similar cars by VIN or Taxonomy VIN 

        6. Filter cars within a given price / miles / days on market (dom) range

        7. Specify a sort order for the results on price / miles / dom / listed date 

        8. Search cars for a given City / State combination 

        9. Get Facets to build the search drill downs 

        10. Get Market averages for price/miles/dom for your search
      parameters:
        - $ref: "#/components/parameters/api_key"
        - description: Latitude component of location
          in: query
          name: latitude
          required: false
          schema:
            type: number
            format: double
        - description: Longitude component of location
          in: query
          name: longitude
          required: false
          schema:
            type: number
            format: double
        - description: Radius around the search location
          in: query
          name: radius
          required: false
          schema:
            type: integer
        - description: car search bases on zipcode
          in: query
          name: zip
          required: false
          schema:
            type: string
        - description: Boolean param to search for listings that include leasing options in
            them
          in: query
          name: include_lease
          required: false
          schema:
            type: boolean
        - description: Boolean param to search for listings that include finance options in
            them
          in: query
          name: include_finance
          required: false
          schema:
            type: boolean
        - description: Search listings with exact lease term, or inside a range with min
            and max seperated by a dash like lease_term=30-60
          in: query
          name: lease_term
          required: false
          schema:
            type: string
        - description: Search listings with exact down payment in lease offers, or inside a
            range with min and max seperated by a dash like
            lease_down_payment=30-60
          in: query
          name: lease_down_payment
          required: false
          schema:
            type: string
        - description: Search listings with lease offers exactly matching Estimated Monthly
            Payment(EMI), or inside a range with min and max seperated by a dash
            like lease_emp=30-60
          in: query
          name: lease_emp
          required: false
          schema:
            type: string
        - description: Search listings with exact finance loan term, or inside a range with
            min and max seperated by a dash like finance_loan_term=30-60
          in: query
          name: finance_loan_term
          required: false
          schema:
            type: string
        - description: Search listings with finance offers exactly matching loans Annual
            Percentage Rate, or inside a range with min and max seperated by a
            dash like finance_loan_apr=30-60
          in: query
          name: finance_loan_apr
          required: false
          schema:
            type: string
        - description: Search listings with finance offers exactly matching Estimated
            Monthly Payment(EMI), or inside a range with min and max seperated
            by a dash like finance_emp=30-60
          in: query
          name: finance_emp
          required: false
          schema:
            type: string
        - description: Search listings with exact down payment in finance offers, or inside
            a range with min and max seperated by a dash like
            finance_down_payment=30-60
          in: query
          name: finance_down_payment
          required: false
          schema:
            type: string
        - description: Search listings with exact down payment percentage in finance
            offers, or inside a range with min and max seperated by a dash like
            finance_down_payment_per=30-60
          in: query
          name: finance_down_payment_per
          required: false
          schema:
            type: string
        - description: Car type. Allowed values are - new / used / certified
          in: query
          name: car_type
          required: false
          schema:
            type: string
            enum:
              - new
              - used
              - certified
        - description: Indicates whether car has had only one owner or not
          in: query
          name: carfax_1_owner
          required: false
          schema:
            type: string
            enum:
              - "true"
              - "false"
        - description: Indicates whether car has clean ownership records
          in: query
          name: carfax_clean_title
          required: false
          schema:
            type: string
            enum:
              - "true"
              - "false"
        - description: Car year - 1980 onwards. Valid filter values are those that our
            Search facets API returns for unique years. You can pass in multiple
            year values comma separated.
          in: query
          name: year
          required: false
          schema:
            type: string
        - description: Car Make - should be a standard OEM Make name. Valid filter values
            are those that our Search facets API returns for unique make. You
            can pass in multiple make values separated by comma. e.g. ford,audi
          in: query
          name: make
          required: false
          schema:
            type: string
            format: string
        - description: Car model to search. Valid filter values are those that our Search
            facets API returns for unique model. You can pass in multiple model
            values comma separated for e.g f-150,Mustang.
          in: query
          name: model
          required: false
          schema:
            type: string
            format: string
        - description: Car trim to search. Valid filter values are those that our Search
            facets API returns for unique trim. You can pass in multiple trim
            values comma separated
          in: query
          name: trim
          required: false
          schema:
            type: string
            format: string
        - description: Dealer id to filter the cars.
          in: query
          name: dealer_id
          required: false
          schema:
            type: string
            format: string
        - description: Car vin to search
          in: query
          name: vin
          required: false
          schema:
            type: string
            format: string
        - description: Source to search cars. Valid filter values are those that our Search
            facets API returns for unique source. You can pass in multiple
            source values comma separated
          in: query
          name: source
          required: false
          schema:
            type: string
            format: string
        - description: Body type to filter the cars on. Valid filter values are those that
            our Search facets API returns for unique body types. You can pass in
            multiple body types comma separated.
          in: query
          name: body_type
          required: false
          schema:
            type: string
            format: string
        - description: Body subtype to filter the cars on. Valid filter values are those
            that our Search facets API returns for unique body subtypes. You can
            pass in multiple body subtype values comma separated
          in: query
          name: body_subtype
          required: false
          schema:
            type: string
            format: string
        - description: Vehicle type to filter the cars on. Valid filter values are those
            that our Search facets API returns for unique vehicle types. You can
            pass in multiple vehicle type values comma separated
          in: query
          name: vehicle_type
          required: false
          schema:
            type: string
            format: string
        - description: Comma separated list of 17 digit vins to search the matching cars
            for. Only 10 VINs allowed per request. If the request contains more
            than 10 VINs the first 10 VINs will be considered. Could be used as
            a More Like This or Similar Vehicles search for the given VINs. Ths
            vins parameter is an alternative to taxonomy_vins or ymmt parameters
            available with the search API. vins and taxonomy_vins parameters
            could be used to filter our cars with the exact build represented by
            the vins or taxonomy_vins whereas ymmt is a top level filter that
            does not filter cars by the build attributes like doors, drivetrain,
            cylinders, body type, body subtype, vehicle type etc
          in: query
          name: vins
          required: false
          schema:
            type: string
        - description: Comma separated list of 10 letters excert from the 17 letter VIN.
            The 10 letters to be picked up from the 17 letter VIN are - first 8
            letters and the 10th and 11th letter. E.g. For a VIN -
            1FTFW1EF3EKE57182 the taxonomy vin would be - 1FTFW1EFEK  A taxonomy
            VIN identified a build of a car and could be used to filter our cars
            of a particular build. This is an alternative to the vin or ymmt
            parameters to the search API.
          in: query
          name: taxonomy_vins
          required: false
          schema:
            type: string
        - description: Comma separated list of Year, Make, Model, Trim combinations. Each
            combination needs to have the year,make,model, trim values separated
            by a pipe '|' character in the form year|make|model|trim. e.g.
            2010|Audi|A5,2014|Nissan|Sentra|S 6MT,|Honda|City|   You could just
            provide strings of the form - 'year|make||' or 'year|make|model' or
            '|make|model|' combinations. Individual year / make / model filters
            provied with the API calls will take precedence over the Year, Make,
            Model, Trim combinations. The Make, Model, Trim values must be valid
            values as per the Marketcheck Vin Decoder. If you are using a
            separate vin decoder then look at using the 'vins' or
            'taxonomy_vins' parameter to the search api instead the
            year|make|model|trim combinations.
          in: query
          name: ymmt
          required: false
          schema:
            type: string
        - description: Comma separated list of Year, Make, Model, Trim fields. For example
            - year,make,model,trim fields for which user wants to do an exact
            match
          in: query
          name: match
          required: false
          schema:
            type: string
        - description: Cylinders to filter the cars on. Valid filter values are those that
            our Search facets API returns for unique cylinder values. You can
            pass in multiple cylinder values comma separated
          in: query
          name: cylinders
          required: false
          schema:
            type: string
            format: string
        - description: Transmission to filter the cars on. [a = Automatic, m = Manual].
            Valid filter values are those that our Search facets API returns for
            unique transmission. You can pass in multiple transmission values
            comma separated
          in: query
          name: transmission
          required: false
          schema:
            type: string
            format: string
        - description: Speeds to filter the cars on. Valid filter values are those that our
            Search facets API returns for unique speeds. You can pass in
            multiple speeds values comma separated
          in: query
          name: speeds
          required: false
          schema:
            type: string
            format: string
        - description: Doors to filter the cars on. Valid filter values are those that our
            Search facets API returns for unique doors. You can pass in multiple
            doors values comma separated
          in: query
          name: doors
          required: false
          schema:
            type: string
            format: string
        - description: Drivetrain to filter the cars on. Valid filter values are those that
            our Search facets API returns for unique drivetrains. You can pass
            in multiple drivetrain values comma separated
          in: query
          name: drivetrain
          required: false
          schema:
            type: string
            format: string
        - description: Exterior color to match. Valid filter values are those that our
            Search facets API returns for unique exterior colors. You can pass
            in multiple exterior color values comma separated
          in: query
          name: exterior_color
          required: false
          schema:
            type: string
        - description: Interior color to match. Valid filter values are those that our
            Search facets API returns for unique interior colors. You can pass
            in multiple interior color values comma separated
          in: query
          name: interior_color
          required: false
          schema:
            type: string
        - description: Base exterior color to match. Valid filter values are those that our
            Search facets API returns for unique base exterior colors. You can
            pass in multiple base interior color values comma separated
          in: query
          name: base_exterior_color
          required: false
          schema:
            type: string
        - description: Base interior color to match. Valid filter values are those that our
            Search facets API returns for unique base interior colors. You can
            pass in multiple base interior color values comma separated
          in: query
          name: base_interior_color
          required: false
          schema:
            type: string
        - description: Filter listings on engine
          in: query
          name: engine
          required: false
          schema:
            type: string
        - description: Engine Size to match. Valid filter values are those that our Search
            facets API returns for unique engine size. You can pass in multiple
            engine size values comma separated
          in: query
          name: engine_size
          required: false
          schema:
            type: string
        - description: Engine Aspiration to match. Valid filter values are those that our
            Search facets API returns for unique Engine Aspirations. You can
            pass in multiple Engine aspirations values comma separated
          in: query
          name: engine_aspiration
          required: false
          schema:
            type: string
        - description: Engine Block to match. Valid filter values are those that our Search
            facets API returns for unique Engine Block. You can pass in multiple
            Engine Block values comma separated
          in: query
          name: engine_block
          required: false
          schema:
            type: string
        - description: Miles range to filter cars with miles in the given range. Range to
            be given in the format - min-max e.g. 1000-5000
          in: query
          name: miles_range
          required: false
          schema:
            type: string
            format: string
        - description: Price range to filter cars with the price in the range given. Range
            to be given in the format - min-max e.g. 1000-5000
          in: query
          name: price_range
          required: false
          schema:
            type: string
            format: string
        - description: Days on Market range to filter cars with the DOM within the given
            range. Range to be given in the format - min-max e.g. 10-50
          in: query
          name: dom_range
          required: false
          schema:
            type: string
            format: string
        - description: Sort by field - allowed fields are
            distance|price|miles|dom|age|posted_at|year. Default sort field is
            distance from the given point
          in: query
          name: sort_by
          required: false
          schema:
            type: string
            format: string
        - description: Sort order - asc or desc. Default sort order is distance from a
            point.
          in: query
          name: sort_order
          required: false
          schema:
            type: string
            format: string
        - description: Number of results to return. Default is 10. Max is 50
          in: query
          name: rows
          required: false
          schema:
            type: string
        - description: Page number to fetch the results for the given criteria. Default is
            1. Pagination is allowed only till first 10000 results for the
            search and sort criteria. The page value can be only between 1 to
            10000/rows
          in: query
          name: start
          required: false
          schema:
            type: string
        - description: The comma separated list of fields for which facets are requested.
            Supported fields are - year, make, model, trim, vehicle_type,
            car_type, body_type, body_subtype, drivetrain, cylinders,
            transmission, exterior_color, interior_color, doors, engine_size,
            engine_aspiration, engine_block. Facets could be requested in
            addition to the listings for the search. Please note - The API calls
            with lots of facet fields may take longer to respond.
          in: query
          name: facets
          required: false
          schema:
            type: string
        - description: The comma separated list of numeric fields for which range facets
            are requested. Supported fields are - price, miles, dom. Facets
            could be requested in addition to the listings for the search.
            Please note - The API calls with lots of facet fields may take
            longer to respond.
          in: query
          name: range_facets
          required: false
          schema:
            type: string
        - description: Control sort order of facets with this parameter with default sort
            being on count, Other available sort is alphabetical sort, which can
            be obtained by using index as value for this param
          in: query
          name: facet_sort
          required: false
          schema:
            type: string
            enum:
              - count
              - index
        - description: The list of fields for which stats need to be generated based on the
            matching listings for the search criteria. Allowed fields are -
            price, miles, msrp, dom The stats consists of mean, max, average and
            count of listings based on which the stats are calculated for the
            field. Stats could be requested in addition to the listings for the
            search. Please note - The API calls with the stats fields may take
            longer to respond.
          in: query
          name: stats
          required: false
          schema:
            type: string
        - description: Filter on Country, by default US. Search available on US (United
            States) and CA (Canada)
          in: query
          name: country
          required: false
          schema:
            type: string
        - description: If plot has value true results in around 25k coordinates with
            limited fields to plot respective graph
          in: query
          name: plot
          required: false
          schema:
            type: boolean
        - description: If nodedup is set to true then API will give results without
            is_searchable i.e multiple listings for single vin
          in: query
          name: nodedup
          required: false
          schema:
            type: boolean
        - description: If dedup is set to true then will give results with is_searchable
            irrespecive of dealer_id or source
          in: query
          name: dedup
          required: false
          schema:
            type: boolean
        - description: Used in combination with dealer_id or source, when true returns the
            listings actually owned by dealer himself
          in: query
          name: owned
          required: false
          schema:
            type: boolean
        - description: Filter listsings on State
          in: query
          name: state
          required: false
          schema:
            type: string
        - description: Filter listings on city
          in: query
          name: city
          required: false
          schema:
            type: string
        - description: Filter listings on dealer_name
          in: query
          name: dealer_name
          required: false
          schema:
            type: string
        - description: Filter listings on web scraped trim
          in: query
          name: trim_o
          required: false
          schema:
            type: string
        - description: Filter trim on custom possible matches
          in: query
          name: trim_r
          required: false
          schema:
            type: string
        - description: Active Days on Market range to filter cars with the DOM within the
            given range. Range to be given in the format - min-max e.g. 10-50
          in: query
          name: dom_active_range
          required: false
          schema:
            type: string
            format: string
        - description: Last 180 Days on Market range to filter cars with the DOM within the
            given range. Range to be given in the format - min-max e.g. 10-50
          in: query
          name: dom_180_range
          required: false
          schema:
            type: string
            format: string
        - description: Boolean param to exclude certified cars from search results
          in: query
          name: exclude_certified
          required: false
          schema:
            type: boolean
        - description: fuel type of the car to be searched
          in: query
          name: fuel_type
          required: false
          schema:
            type: string
        - description: A boolean indicating whether to include only those listings that
            have photo_links in search results, And discard those that don't
            have them
          in: query
          name: photo_links
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: List of all cars listings matching the search & filter criteria
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      summary: Gets active car listings for the given search criteria
      tags:
        - Inventory Search API
    x-swagger-router-controller: Listing
  /search/recents:
    get:
      description: >-
        This endpoint is the meat of the API and serves many purposes. This API
        produces a list of 90 days cars from the market for the given search
        criteria. The API results are limited to allow pagination upto 10000
        rows. 
         The search API facilitates the following use cases - 
        1. Search Cars around a given geo-point within a given radius 

        2. Search cars for a specific year / make / model or combination of these 

        3. Search cars matching multiple year, make, model combinatins in the same search request

        4. Filter results by most car specification attributes

        5. Search for similar cars by VIN or Taxonomy VIN 

        6. Filter cars within a given price / miles / days on market (dom) range

        7. Specify a sort order for the results on price / miles / dom / listed date 

        8. Search cars for a given City / State combination 

        9. Get Facets to build the search drill downs 

        10. Get Market averages for price/miles/dom for your search
      operationId: search90Days
      parameters:
        - $ref: "#/components/parameters/api_key"
        - description: Latitude component of location
          in: query
          name: latitude
          required: false
          schema:
            type: number
            format: double
        - description: Longitude component of location
          in: query
          name: longitude
          required: false
          schema:
            type: number
            format: double
        - description: Radius around the search location
          in: query
          name: radius
          required: false
          schema:
            type: integer
        - description: car search bases on zipcode
          in: query
          name: zip
          required: false
          schema:
            type: string
        - description: Boolean param to search for listings that include leasing options in
            them
          in: query
          name: include_lease
          required: false
          schema:
            type: boolean
        - description: Boolean param to search for listings that include finance options in
            them
          in: query
          name: include_finance
          required: false
          schema:
            type: boolean
        - description: Search listings with exact lease term, or inside a range with min
            and max seperated by a dash like lease_term=30-60
          in: query
          name: lease_term
          required: false
          schema:
            type: string
        - description: Search listings with exact down payment in lease offers, or inside a
            range with min and max seperated by a dash like
            lease_down_payment=30-60
          in: query
          name: lease_down_payment
          required: false
          schema:
            type: string
        - description: Search listings with lease offers exactly matching Estimated Monthly
            Payment(EMI), or inside a range with min and max seperated by a dash
            like lease_emp=30-60
          in: query
          name: lease_emp
          required: false
          schema:
            type: string
        - description: Search listings with exact finance loan term, or inside a range with
            min and max seperated by a dash like finance_loan_term=30-60
          in: query
          name: finance_loan_term
          required: false
          schema:
            type: string
        - description: Search listings with finance offers exactly matching loans Annual
            Percentage Rate, or inside a range with min and max seperated by a
            dash like finance_loan_apr=30-60
          in: query
          name: finance_loan_apr
          required: false
          schema:
            type: string
        - description: Search listings with finance offers exactly matching Estimated
            Monthly Payment(EMI), or inside a range with min and max seperated
            by a dash like finance_emp=30-60
          in: query
          name: finance_emp
          required: false
          schema:
            type: string
        - description: Search listings with exact down payment in finance offers, or inside
            a range with min and max seperated by a dash like
            finance_down_payment=30-60
          in: query
          name: finance_down_payment
          required: false
          schema:
            type: string
        - description: Search listings with exact down payment percentage in finance
            offers, or inside a range with min and max seperated by a dash like
            finance_down_payment_per=30-60
          in: query
          name: finance_down_payment_per
          required: false
          schema:
            type: string
        - description: Car type. Allowed values are - new / used / certified
          in: query
          name: car_type
          required: false
          schema:
            type: string
            enum:
              - new
              - used
              - certified
        - description: Indicates whether car has had only one owner or not
          in: query
          name: carfax_1_owner
          required: false
          schema:
            type: string
            enum:
              - "true"
              - "false"
        - description: Indicates whether car has clean ownership records
          in: query
          name: carfax_clean_title
          required: false
          schema:
            type: string
            enum:
              - "true"
              - "false"
        - description: Car year - 1980 onwards. Valid filter values are those that our
            Search facets API returns for unique years. You can pass in multiple
            year values comma separated.
          in: query
          name: year
          required: false
          schema:
            type: string
        - description: Car Make - should be a standard OEM Make name. Valid filter values
            are those that our Search facets API returns for unique make. You
            can pass in multiple make values separated by comma. e.g. ford,audi
          in: query
          name: make
          required: false
          schema:
            type: string
            format: string
        - description: Car model to search. Valid filter values are those that our Search
            facets API returns for unique model. You can pass in multiple model
            values comma separated for e.g f-150,Mustang.
          in: query
          name: model
          required: false
          schema:
            type: string
            format: string
        - description: Car trim to search. Valid filter values are those that our Search
            facets API returns for unique trim. You can pass in multiple trim
            values comma separated
          in: query
          name: trim
          required: false
          schema:
            type: string
            format: string
        - description: Dealer id to filter the cars.
          in: query
          name: dealer_id
          required: false
          schema:
            type: string
            format: string
        - description: Car vin to search
          in: query
          name: vin
          required: false
          schema:
            type: string
            format: string
        - description: Source to search cars. Valid filter values are those that our Search
            facets API returns for unique source. You can pass in multiple
            source values comma separated
          in: query
          name: source
          required: false
          schema:
            type: string
            format: string
        - description: Body type to filter the cars on. Valid filter values are those that
            our Search facets API returns for unique body types. You can pass in
            multiple body types comma separated.
          in: query
          name: body_type
          required: false
          schema:
            type: string
            format: string
        - description: Body subtype to filter the cars on. Valid filter values are those
            that our Search facets API returns for unique body subtypes. You can
            pass in multiple body subtype values comma separated
          in: query
          name: body_subtype
          required: false
          schema:
            type: string
            format: string
        - description: Vehicle type to filter the cars on. Valid filter values are those
            that our Search facets API returns for unique vehicle types. You can
            pass in multiple vehicle type values comma separated
          in: query
          name: vehicle_type
          required: false
          schema:
            type: string
            format: string
        - description: Comma separated list of 17 digit vins to search the matching cars
            for. Only 10 VINs allowed per request. If the request contains more
            than 10 VINs the first 10 VINs will be considered. Could be used as
            a More Like This or Similar Vehicles search for the given VINs. Ths
            vins parameter is an alternative to taxonomy_vins or ymmt parameters
            available with the search API. vins and taxonomy_vins parameters
            could be used to filter our cars with the exact build represented by
            the vins or taxonomy_vins whereas ymmt is a top level filter that
            does not filter cars by the build attributes like doors, drivetrain,
            cylinders, body type, body subtype, vehicle type etc
          in: query
          name: vins
          required: false
          schema:
            type: string
        - description: Comma separated list of 10 letters excert from the 17 letter VIN.
            The 10 letters to be picked up from the 17 letter VIN are - first 8
            letters and the 10th and 11th letter. E.g. For a VIN -
            1FTFW1EF3EKE57182 the taxonomy vin would be - 1FTFW1EFEK  A taxonomy
            VIN identified a build of a car and could be used to filter our cars
            of a particular build. This is an alternative to the vin or ymmt
            parameters to the search API.
          in: query
          name: taxonomy_vins
          required: false
          schema:
            type: string
        - description: Comma separated list of Year, Make, Model, Trim combinations. Each
            combination needs to have the year,make,model, trim values separated
            by a pipe '|' character in the form year|make|model|trim. e.g.
            2010|Audi|A5,2014|Nissan|Sentra|S 6MT,|Honda|City|   You could just
            provide strings of the form - 'year|make||' or 'year|make|model' or
            '|make|model|' combinations. Individual year / make / model filters
            provied with the API calls will take precedence over the Year, Make,
            Model, Trim combinations. The Make, Model, Trim values must be valid
            values as per the Marketcheck Vin Decoder. If you are using a
            separate vin decoder then look at using the 'vins' or
            'taxonomy_vins' parameter to the search api instead the
            year|make|model|trim combinations.
          in: query
          name: ymmt
          required: false
          schema:
            type: string
        - description: Comma separated list of Year, Make, Model, Trim fields. For example
            - year,make,model,trim fields for which user wants to do an exact
            match
          in: query
          name: match
          required: false
          schema:
            type: string
        - description: Cylinders to filter the cars on. Valid filter values are those that
            our Search facets API returns for unique cylinder values. You can
            pass in multiple cylinder values comma separated
          in: query
          name: cylinders
          required: false
          schema:
            type: string
            format: string
        - description: Transmission to filter the cars on. [a = Automatic, m = Manual].
            Valid filter values are those that our Search facets API returns for
            unique transmission. You can pass in multiple transmission values
            comma separated
          in: query
          name: transmission
          required: false
          schema:
            type: string
            format: string
        - description: Speeds to filter the cars on. Valid filter values are those that our
            Search facets API returns for unique speeds. You can pass in
            multiple speeds values comma separated
          in: query
          name: speeds
          required: false
          schema:
            type: string
            format: string
        - description: Doors to filter the cars on. Valid filter values are those that our
            Search facets API returns for unique doors. You can pass in multiple
            doors values comma separated
          in: query
          name: doors
          required: false
          schema:
            type: string
            format: string
        - description: Drivetrain to filter the cars on. Valid filter values are those that
            our Search facets API returns for unique drivetrains. You can pass
            in multiple drivetrain values comma separated
          in: query
          name: drivetrain
          required: false
          schema:
            type: string
            format: string
        - description: Exterior color to match. Valid filter values are those that our
            Search facets API returns for unique exterior colors. You can pass
            in multiple exterior color values comma separated
          in: query
          name: exterior_color
          required: false
          schema:
            type: string
        - description: Interior color to match. Valid filter values are those that our
            Search facets API returns for unique interior colors. You can pass
            in multiple interior color values comma separated
          in: query
          name: interior_color
          required: false
          schema:
            type: string
        - description: Base exterior color to match. Valid filter values are those that our
            Search facets API returns for unique base exterior colors. You can
            pass in multiple base interior color values comma separated
          in: query
          name: base_exterior_color
          required: false
          schema:
            type: string
        - description: Base interior color to match. Valid filter values are those that our
            Search facets API returns for unique base interior colors. You can
            pass in multiple base interior color values comma separated
          in: query
          name: base_interior_color
          required: false
          schema:
            type: string
        - description: Filter listings on engine
          in: query
          name: engine
          required: false
          schema:
            type: string
        - description: Engine Size to match. Valid filter values are those that our Search
            facets API returns for unique engine size. You can pass in multiple
            engine size values comma separated
          in: query
          name: engine_size
          required: false
          schema:
            type: string
        - description: Engine Aspiration to match. Valid filter values are those that our
            Search facets API returns for unique Engine Aspirations. You can
            pass in multiple Engine aspirations values comma separated
          in: query
          name: engine_aspiration
          required: false
          schema:
            type: string
        - description: Engine Block to match. Valid filter values are those that our Search
            facets API returns for unique Engine Block. You can pass in multiple
            Engine Block values comma separated
          in: query
          name: engine_block
          required: false
          schema:
            type: string
        - description: Miles range to filter cars with miles in the given range. Range to
            be given in the format - min-max e.g. 1000-5000
          in: query
          name: miles_range
          required: false
          schema:
            type: string
            format: string
        - description: Price range to filter cars with the price in the range given. Range
            to be given in the format - min-max e.g. 1000-5000
          in: query
          name: price_range
          required: false
          schema:
            type: string
            format: string
        - description: Days on Market range to filter cars with the DOM within the given
            range. Range to be given in the format - min-max e.g. 10-50
          in: query
          name: dom_range
          required: false
          schema:
            type: string
            format: string
        - description: Sort by field - allowed fields are
            distance|price|miles|dom|age|posted_at|year. Default sort field is
            distance from the given point
          in: query
          name: sort_by
          required: false
          schema:
            type: string
            format: string
        - description: Sort order - asc or desc. Default sort order is distance from a
            point.
          in: query
          name: sort_order
          required: false
          schema:
            type: string
            format: string
        - description: Number of results to return. Default is 10. Max is 50
          in: query
          name: rows
          required: false
          schema:
            type: string
        - description: Page number to fetch the results for the given criteria. Default is
            1. Pagination is allowed only till first 10000 results for the
            search and sort criteria. The page value can be only between 1 to
            10000/rows
          in: query
          name: start
          required: false
          schema:
            type: string
        - description: The comma separated list of fields for which facets are requested.
            Supported fields are - year, make, model, trim, vehicle_type,
            car_type, body_type, body_subtype, drivetrain, cylinders,
            transmission, exterior_color, interior_color, doors, engine_size,
            engine_aspiration, engine_block. Facets could be requested in
            addition to the listings for the search. Please note - The API calls
            with lots of facet fields may take longer to respond.
          in: query
          name: facets
          required: false
          schema:
            type: string
        - description: The comma separated list of numeric fields for which range facets
            are requested. Supported fields are - price, miles, dom. Facets
            could be requested in addition to the listings for the search.
            Please note - The API calls with lots of facet fields may take
            longer to respond.
          in: query
          name: range_facets
          required: false
          schema:
            type: string
        - description: Control sort order of facets with this parameter with default sort
            being on count, Other available sort is alphabetical sort, which can
            be obtained by using index as value for this param
          in: query
          name: facet_sort
          required: false
          schema:
            type: string
            enum:
              - count
              - index
        - description: The list of fields for which stats need to be generated based on the
            matching listings for the search criteria. Allowed fields are -
            price, miles, msrp, dom The stats consists of mean, max, average and
            count of listings based on which the stats are calculated for the
            field. Stats could be requested in addition to the listings for the
            search. Please note - The API calls with the stats fields may take
            longer to respond.
          in: query
          name: stats
          required: false
          schema:
            type: string
        - description: Filter on Country, by default US. Search available on US (United
            States) and CA (Canada)
          in: query
          name: country
          required: false
          schema:
            type: string
        - description: If plot has value true results in around 25k coordinates with
            limited fields to plot respective graph
          in: query
          name: plot
          required: false
          schema:
            type: boolean
        - description: If nodedup is set to true then API will give results without
            is_searchable i.e multiple listings for single vin
          in: query
          name: nodedup
          required: false
          schema:
            type: boolean
        - description: If dedup is set to true then will give results with is_searchable
            irrespecive of dealer_id or source
          in: query
          name: dedup
          required: false
          schema:
            type: boolean
        - description: Used in combination with dealer_id or source, when true returns the
            listings actually owned by dealer himself
          in: query
          name: owned
          required: false
          schema:
            type: boolean
        - description: Filter listsings on State
          in: query
          name: state
          required: false
          schema:
            type: string
        - description: Filter listings on city
          in: query
          name: city
          required: false
          schema:
            type: string
        - description: Filter listings on dealer_name
          in: query
          name: dealer_name
          required: false
          schema:
            type: string
        - description: Filter listings on web scraped trim
          in: query
          name: trim_o
          required: false
          schema:
            type: string
        - description: Filter trim on custom possible matches
          in: query
          name: trim_r
          required: false
          schema:
            type: string
        - description: Active Days on Market range to filter cars with the DOM within the
            given range. Range to be given in the format - min-max e.g. 10-50
          in: query
          name: dom_active_range
          required: false
          schema:
            type: string
            format: string
        - description: Last 180 Days on Market range to filter cars with the DOM within the
            given range. Range to be given in the format - min-max e.g. 10-50
          in: query
          name: dom_180_range
          required: false
          schema:
            type: string
            format: string
        - description: Boolean param to exclude certified cars from search results
          in: query
          name: exclude_certified
          required: false
          schema:
            type: boolean
        - description: fuel type of the car to be searched
          in: query
          name: fuel_type
          required: false
          schema:
            type: string
        - description: A boolean indicating whether to include only those listings that
            have photo_links in search results, And discard those that don't
            have them
          in: query
          name: photo_links
          required: false
          schema:
            type: boolean
        - description: sold parameter to display only sold listings
          in: query
          name: sold
          required: false
          schema:
            type: boolean
        - description: Last seen date range to filter listings with the last seen in the
            range given. Range to be given in the format [YYYYMMDD] - min-max
            e.g. 20190523-20190623
          in: query
          name: last_seen_range
          required: false
          schema:
            type: string
        - description: First seen date range to filter listings with the last seen in the
            range given. Range to be given in the format [YYYYMMDD] - min-max
            e.g. 20190523-20190623
          in: query
          name: first_seen_range
          required: false
          schema:
            type: string
      responses:
        "200":
          description: List of all cars listings matching the search & filter criteria
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      summary: Gets 90 Day car listings for the given search criteria
      tags:
        - Inventory Search API
    x-swagger-router-controller: Listing
  /specs/auto-complete:
    get:
      description: Auto-complete the inputs of your end users, not from active set but from
        taxonomy (decoder database)
      operationId: specsAutoComplete
      parameters:
        - $ref: "#/components/parameters/api_key"
        - description: Field name for which you want auto-completion
          in: query
          name: field
          required: true
          schema:
            type: string
            format: string
            enum:
              - make
              - model
              - trim
              - body_type
              - body_subtype
              - vehicle_type
              - transmission
              - drivetrain
              - fuel_type
              - engine
              - engine_size
              - engine_block
        - description: Input entered so far
          in: query
          name: input
          required: true
          schema:
            type: string
            format: string
        - description: Apply year filter to selections
          in: query
          name: year
          required: false
          schema:
            type: string
            format: string
        - description: Apply make filter to selections
          in: query
          name: make
          required: false
          schema:
            type: string
            format: string
        - description: Apply model filter to selections
          in: query
          name: model
          required: false
          schema:
            type: string
            format: string
        - description: Apply trim filter to selections
          in: query
          name: trim
          required: false
          schema:
            type: string
            format: string
        - description: Apply body_type filter to selections
          in: query
          name: body_type
          required: false
          schema:
            type: string
            format: string
        - description: Apply body_subtype filter to selections
          in: query
          name: body_subtype
          required: false
          schema:
            type: string
            format: string
        - description: Apply vehicle_type filter to selections
          in: query
          name: vehicle_type
          required: false
          schema:
            type: string
            format: string
        - description: Apply transmission filter to selections
          in: query
          name: transmission
          required: false
          schema:
            type: string
            format: string
        - description: Apply drivetrain filter to selections
          in: query
          name: drivetrain
          required: false
          schema:
            type: string
            format: string
        - description: Apply fuel_type filter to selections
          in: query
          name: fuel_type
          required: false
          schema:
            type: string
            format: string
        - description: Apply engine filter to selections
          in: query
          name: engine
          required: false
          schema:
            type: string
            format: string
        - description: Apply engine_size filter to selections
          in: query
          name: engine_size
          required: false
          schema:
            type: string
            format: string
        - description: Apply engine_block filter to selections
          in: query
          name: engine_block
          required: false
          schema:
            type: string
            format: string
        - description: Boolean variable to indicate ignore case of current input
          in: query
          name: ignore_case
          required: false
          schema:
            type: boolean
            default: true
      responses:
        "200":
          description: Unique terms available in given field for auto completion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpecsAutoCompleteResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      summary: API for auto-completion of inputs based on taxonomy
      tags:
        - VIN Decoder API
      x-swagger-router-controller: VINDecoder
  /specs/terms:
    get:
      description: Facets on taxonomy
      operationId: getTaxonomyTerms
      parameters:
        - $ref: "#/components/parameters/api_key"
        - description: Comma separated list of fields to get terms for
          in: query
          name: field
          required: true
          schema:
            type: string
            format: string
        - description: Apply year filter to selections
          in: query
          name: year
          required: false
          schema:
            type: string
            format: string
        - description: Apply make filter to selections
          in: query
          name: make
          required: false
          schema:
            type: string
            format: string
        - description: Apply model filter to selections
          in: query
          name: model
          required: false
          schema:
            type: string
            format: string
        - description: Apply trim filter to selections
          in: query
          name: trim
          required: false
          schema:
            type: string
            format: string
        - description: Apply body_type filter to selections
          in: query
          name: body_type
          required: false
          schema:
            type: string
            format: string
        - description: Apply body_subtype filter to selections
          in: query
          name: body_subtype
          required: false
          schema:
            type: string
            format: string
        - description: Apply vehicle_type filter to selections
          in: query
          name: vehicle_type
          required: false
          schema:
            type: string
            format: string
        - description: Apply transmission filter to selections
          in: query
          name: transmission
          required: false
          schema:
            type: string
            format: string
        - description: Apply drivetrain filter to selections
          in: query
          name: drivetrain
          required: false
          schema:
            type: string
            format: string
        - description: Apply fuel_type filter to selections
          in: query
          name: fuel_type
          required: false
          schema:
            type: string
            format: string
        - description: Apply engine filter to selections
          in: query
          name: engine
          required: false
          schema:
            type: string
            format: string
        - description: Apply engine_size filter to selections
          in: query
          name: engine_size
          required: false
          schema:
            type: string
            format: string
        - description: Apply engine_block filter to selections
          in: query
          name: engine_block
          required: false
          schema:
            type: string
            format: string
      responses:
        "200":
          description: List of unique terms for specified fields
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpecsAutoCompleteResponse"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      summary: API for getting terms from taxonomy
      tags:
        - VIN Decoder API
      x-swagger-router-controller: VINDecoder
  /stats:
    get:
      description: National, state and city level stats for price, miles and dom
      operationId: getDailyStats
      parameters:
        - $ref: "#/components/parameters/api_key"
        - description: Country for which the stats are to be searched
          in: query
          name: country
          required: false
          schema:
            type: string
            format: string
            enum:
              - us
              - ca
            default: us
        - description: Inventory type for which stats are to be searched, default is used
          in: query
          name: car_type
          required: false
          schema:
            type: string
            format: string
            enum:
              - new
              - used
            default: used
        - description: Year, Make, Model of the car, Separated by pipe e.g.
            ymm=2015|ford|f-150
          in: query
          name: ymm
          required: false
          schema:
            type: string
            format: string
        - description: Year, Make, Model, Trim of the car, Separated by pipe e.g.
            ymmt=2015|ford|f-150|platinum
          in: query
          name: ymmt
          required: false
          schema:
            type: string
            format: string
        - description: Taxonomy vin for referance to find stats of similar cars
          in: query
          name: taxonomy_vin
          required: false
          schema:
            type: string
            format: string
        - description: VIN that will be transformed to taxonomy_vin
          in: query
          name: vin
          required: false
          schema:
            type: string
            format: string
        - description: State level stats
          in: query
          name: state
          required: false
          schema:
            type: string
            format: string
        - description: City level stats, pipe seperated like city_state=jacksonville|FL
          in: query
          name: city_state
          required: false
          schema:
            type: string
            format: string
        - description: Date, with year and month for which to search stats for. Format
            should be YYYYMM
          in: query
          name: date
          required: false
          schema:
            type: integer
        - description: Range for date param in months, API will go back those many months
            and fetch the averages for all those months
          in: query
          name: range
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: Data with Market averages and stats
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DailyStats"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      summary: Price, Miles and Days on Market stats
      tags:
        - Cars Market API
      x-swagger-router-controller: Market
  "/vin/{vin}/specs":
    get:
      description: Get the basic information on specifications for a car identified by a
        valid VIN
      operationId: decode
      parameters:
        - $ref: "#/components/parameters/api_key"
        - description: VIN to decode
          in: path
          name: vin
          required: true
          schema:
            type: string
            format: string
      responses:
        "200":
          description: Basic sepcifications details about the car
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Build"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      summary: VIN Decoder
      tags:
        - VIN Decoder API
      x-swagger-router-controller: VINDecoder
servers:
  - url: https://marketcheck-prod.apigee.net/v1
components:
  parameters:
    api_key:
      description: The API Authentication Key. Mandatory with all API calls.
      in: query
      name: api_key
      required: false
      schema:
        type: string
  schemas:
    Averages:
      properties:
        age:
          description: Average age of the car
          type: number
        dom:
          description: Average Days on Market value for the car based on all listings found
            in the Marketcheck database for this car
          type: number
        miles:
          description: Mean miles value for the car
          type: number
        msrp:
          description: Mean msrp value for the car
          type: number
        price:
          description: Mean price value for the car
          type: number
        units:
          description: No of units for this car on the market
          type: number
      type: object
    BaseListing:
      description: Minimal set of attributes describing a listing
      properties:
        build:
          $ref: "#/components/schemas/Build"
        carfax_1_owner:
          description: Flag to indicate whether listing is carfax_1_owner
          type: boolean
        carfax_clean_title:
          description: Flag to indicate whether listing is carfax_clean_title
          type: boolean
        data_source:
          description: Data source of the listing
          type: string
        dealer:
          $ref: "#/components/schemas/NestDealer"
        dist:
          description: Distance of the car's location from the specified user lcoation
          format: double
          type: number
        dom:
          description: Days on Market value for the car based on current and historical
            listings found in the Marketcheck database for this car
          type: integer
        dom_180:
          description: Days on Market value for the car based on current and last 6 month
            listings found in the Marketcheck database for this car
          type: integer
        dom_active:
          description: Days on Market value for the car based on current and last 30 days
            listings found in the Marketcheck database for this car
          type: integer
        exterior_color:
          description: Exterior color of the car
          type: string
        financing_options:
          description: Array of all finance offers for this listing
          items:
            $ref: "#/components/schemas/ListingFinance"
          type: array
        first_seen_at:
          description: Listing first seen at first scraped timestamp
          type: integer
        first_seen_at_date:
          description: Listing first seen at first scraped date
          type: string
        heading:
          description: Listing title as displayed on the source website
          type: string
        id:
          description: Unique identifier representing a specific listing from the
            Marketcheck database
          type: string
        interior_color:
          description: Interior color of the car
          type: string
        inventory_type:
          description: Inventory type of car
          type: string
        is_certified:
          description: Certified car
          type: integer
        last_seen_at:
          description: Listing last seen at (most recent) timestamp
          type: integer
        last_seen_at_date:
          description: Listing last seen at (most recent) date
          type: string
        leasing_options:
          description: Array of all finance offers for this listing
          items:
            $ref: "#/components/schemas/ListingLease"
          type: array
        media:
          $ref: "#/components/schemas/ListingNestMedia"
        miles:
          description: Odometer reading / reported miles usage for the car
          type: integer
        model_code:
          description: model_code of the listing
          type: string
        msrp:
          description: MSRP for the car
          type: integer
        price:
          description: Asking price for the car
          type: integer
        ref_miles:
          description: Last Odometer reading / reported miles usage for the car. If the
            asking miles value is not or is available then the last_miles could
            perhaps be used. last_miles is the miles for the car listed on the
            source website as of last_miles_dt date
          type: string
        ref_miles_dt:
          description: The date at which the last miles was reported online. This is
            earlier to last_seen_date
          type: integer
        ref_price:
          description: Last reported price for the car. If the asking price value is not or
            is available then the last_price could perhaps be used. last_price
            is the price for the car listed on the source website as of
            last_price_dt date
          type: string
        ref_price_dt:
          description: The date at which the last price was reported online. This is
            earlier to last_seen_date
          type: integer
        scraped_at:
          description: Listing last seen at date timestamp
          format: integer
          type: number
        scraped_at_date:
          description: Listing last seen at date
          type: string
        seller_type:
          description: Seller type for the car
          type: string
        source:
          description: Source domain of the listing
          type: string
        stock_no:
          description: Stock number of car in dealers inventory
          type: string
        vdp_url:
          description: Vehicle Details Page url of the specific car
          type: string
        vin:
          description: VIN for the car
          type: string
      type: object
    BasePopular:
      description: Single popular car in array
      properties:
        city:
          description: City
          type: string
        counts:
          description: Number of sold listings of this model
          type: string
        dom_stats:
          $ref: "#/components/schemas/SalesStats"
        inventoryType:
          description: Inventory type
          type: string
        make:
          description: Make name
          type: string
        miles_stats:
          $ref: "#/components/schemas/SalesStats"
        model:
          description: Model name
          type: string
        price_stats:
          $ref: "#/components/schemas/SalesStats"
        state:
          description: State
          type: string
      type: object
    Build:
      description: Describes the Car specification
      properties:
        antibrake_sys:
          description: Antibrake system of the car
          type: string
        body_subtype:
          description: Body subtype of the car
          type: string
        body_type:
          description: Body type of the car
          type: string
        city_miles:
          description: City miles of the car
          type: string
        cylinders:
          description: No of cylinders of the car
          type: integer
        doors:
          description: No of doors of the car
          type: integer
        drivetrain:
          description: Drivetrain of the car
          type: string
        engine:
          description: Engine of the car
          type: string
        engine_aspiration:
          description: Engine aspiration of the car
          type: string
        engine_block:
          description: Engine block of the car
          type: string
        engine_measure:
          description: Engine block of the car
          type: string
        engine_size:
          description: Engine size of the car
          format: double
          type: number
        fuel_type:
          description: Fuel type of the car
          type: string
        highway_miles:
          description: Highway miles of the car
          type: string
        made_in:
          description: Made in of the car
          type: string
        make:
          description: Car Make
          type: string
        model:
          description: Car model
          type: string
        opt_seating:
          description: opt seating of the car
          type: string
        overall_height:
          description: Overall height of the car
          type: string
        overall_length:
          description: Overall length of the car
          type: string
        overall_width:
          description: Overall width of the car
          type: string
        short_trim:
          description: Short trim of the car
          type: string
        std_seating:
          description: Std seating of the car
          type: string
        steering_type:
          description: Steering type of the car
          type: string
        tank_size:
          description: Tank size of the car
          type: string
        transmission:
          description: Transmission of the car
          type: string
        trim:
          description: Trim of the car
          type: string
        trim_r:
          description: Trim_r of the car
          type: string
        vehicle_type:
          description: Vehicle type of the car
          type: string
        year:
          description: Year of the Car
          type: integer
      type: object
    CRMResponse:
      properties:
        for_sale:
          description: Boolean to indicate whether given vin has had listing after given
            date or not
          type: string
      type: object
    ComparisonPoint:
      properties:
        dealer_indicator:
          description: Deal Indicator
          type: string
        fair_deal_price:
          description: Fair Deal Price
          type: number
        similar_vehicles_count:
          description: Similar Vehicles Count
          type: number
        vin_price:
          description: Price for Vin
          type: number
      type: object
    CompetitorsCarDetails:
      properties:
        avg_market_value:
          description: Estimated market value
          type: string
        miles:
          description: mileage of car
          type: string
        name:
          description: Current car name
          type: string
        price:
          description: price of car
          type: string
      type: object
    CompetitorsPoint:
      properties:
        current_car:
          $ref: "#/components/schemas/CompetitorsCarDetails"
        same_car_models:
          items:
            $ref: "#/components/schemas/CompetitorsSameCars"
          type: array
        similar_car_models:
          items:
            $ref: "#/components/schemas/CompetitorsSimilarCars"
          type: array
      type: object
    CompetitorsSameCars:
      properties:
        avg_market_value:
          description: Estimated market value of year make model combination
          type: number
        avg_miles:
          description: Mileage of year make model combination
          type: number
        avg_price:
          description: Price of year make model combination
          type: number
        name:
          description: ymm_comb_name
          type: string
      type: object
    CompetitorsSimilarCars:
      properties:
        avg_market_value:
          description: Average market value of year make model combination
          type: number
        avg_miles:
          description: Average mileage of year make model combination
          type: number
        avg_price:
          description: Average price of year make model combination
          type: number
        name:
          description: ymm_comb_name
          type: string
      type: object
    DailyStats:
      properties:
        dom:
          $ref: "#/components/schemas/DailyStatsNestedJson"
        miles_stats:
          $ref: "#/components/schemas/DailyStatsNestedJson"
        price_stats:
          $ref: "#/components/schemas/DailyStatsNestedJson"
        units_for_sale:
          description: Number of units of this car for sale on the market
          type: number
      type: object
    DailyStatsNestedJson:
      description: All nested JSON of stats
      properties:
        interquartile_range:
          description: Interquartile range
          type: number
        mean:
          description: Mean
          type: number
        median:
          description: Median
          type: number
        population_standard_deviation:
          description: population standard deviation
          type: number
        standard_deviation:
          description: Standard Deviation
          type: number
        trimmed_mean:
          description: Trimmed Mean
          type: number
        variance:
          description: variance
          type: number
      type: object
    Dealer:
      properties:
        city:
          description: City of the dealer
          type: string
        country:
          description: country of the dealer
          type: string
        data_source:
          description: Datasource of the dealer
          type: string
        distance:
          description: Distance of dealer from given location
          format: double
          type: number
        id:
          description: The unique id associated with the dealer in the Marketcheck database
          type: string
        inventory_url:
          description: Website of the dealer
          type: string
        latitude:
          description: Latutide for the dealer location
          type: string
        location_ll:
          description: location_ll for the dealer location
          type: string
        longitude:
          description: Longitude for the dealer location
          type: string
        seller_email:
          description: Contact email of the dealer
          type: string
        seller_name:
          description: Name of the dealer
          type: string
        seller_phone:
          description: Contact no of the dealer
          type: string
        state:
          description: State of the dealer
          type: string
        status:
          description: Status of the dealer
          type: string
        street:
          description: Street of the dealer
          type: string
        zip:
          description: Zip of the dealer
          type: string
      type: object
    DealerLandingPage:
      description: Describes the dealer landing page (SRP) HTML object
      properties:
        crawled_at:
          description: The timestamp indicating the time when the SRP was cached
          type: number
        html:
          description: The HTML string for the listing web page
          type: string
        srp_url:
          description: The URL of the SRP
          type: string
      type: object
    DealerRating:
      properties:
        city:
          description: City of the dealer
          type: string
        latitude:
          description: Latutide for the dealer location
          type: string
        longitude:
          description: Longitude for the dealer location
          type: string
        name:
          description: Name of the dealer
          type: string
        overall_rating:
          description: Overall rating of the dealership on scale 1-5
          type: number
        rating_components:
          items:
            $ref: "#/components/schemas/RatingComponents"
          type: array
        state:
          description: State of the dealer
          type: string
        street:
          description: Street of the dealer
          type: string
        zip:
          description: Zip of the dealer
          type: string
      type: object
    DealerReview:
      properties:
        city:
          description: City of the dealer
          type: string
        latitude:
          description: Latutide for the dealer location
          type: string
        longitude:
          description: Longitude for the dealer location
          type: string
        name:
          description: Name of the dealer
          type: string
        overall_reviews:
          description: Overall reviews of the dealership
          type: number
        review_components:
          items:
            $ref: "#/components/schemas/ReviewComponents"
          type: array
        state:
          description: State of the dealer
          type: string
        street:
          description: Street of the dealer
          type: string
        zip:
          description: Zip of the dealer
          type: string
      type: object
    DealersResponse:
      description: Dealers Response
      properties:
        dealers:
          items:
            $ref: "#/components/schemas/Dealer"
          type: array
        num_found:
          description: number of dealers found
          type: integer
      type: object
    DepreciationPoint:
      properties:
        similar_models:
          items:
            $ref: "#/components/schemas/DepreciationStats"
          type: array
      type: object
    DepreciationStats:
      properties:
        current_value:
          description: Price of year make model combination
          type: number
        five_year_from_now:
          description: price after five year from now
          type: number
        five_year_from_now_percent:
          description: price depreciation percent after five year from now
          type: number
        name:
          description: ymm_comb_name
          type: string
        one_year_from_now:
          description: price after one year from now
          type: number
        one_year_from_now_percent:
          description: price depreciation percent after one year from now
          type: number
        two_year_from_now:
          description: price after two year from now
          type: number
        two_year_from_now_percent:
          description: price depreciation percent after two year from now
          type: number
      type: object
    Economy:
      properties:
        ghg_emissions_indicator:
          description: Contains text like bad|Good|Very Good| Excellent
          type: string
        ghg_emissions_rating:
          description: Show vehicle impact on climate change in terms of greeenhouse gases.
            This rating will be in the range of 1 - 10
          type: number
        smog_indicator:
          description: Contains text like bad|Good|Very Good| Excellent
          type: string
        smog_rating:
          description: Shows vehicle's emissions of pollutants known to cause smog and
            other forms of air pollution. This rating will be in the range of 1
            - 10
          type: number
      type: object
    Error:
      properties:
        code:
          description: Error code
          type: integer
        message:
          description: Error message
          type: string
      type: object
    FacetItem:
      properties:
        count:
          description: Facet item count
          type: integer
        item:
          description: Facet item
          type: string
      type: object
    FuelEfficiency:
      properties:
        annual_miles:
          description: Annual Miles of Car
          type: number
        city_mileage:
          description: City Mileage in MPG
          type: string
        combined_mileage:
          description: Combined Mileage
          type: string
        highway_mileage:
          description: Highway Mileage in MPG
          type: string
        monthly_fuel_expense:
          description: Monthly fuel expense
          type: number
      type: object
    HistoricalListing:
      description: Represents a car history entry
      properties:
        carfax_1_owner:
          description: Flag to indicate whether listing is carfax_1_owner
          type: boolean
        carfax_clean_title:
          description: Flag to indicate whether listing is carfax_clean_title
          type: boolean
        city:
          description: City of the listing
          type: string
        data_source:
          description: Data source of the listing
          type: string
        dealer_id:
          description: Unique MC assigned dealers id for the listing
          type: integer
        dom:
          description: Days on Market value for the car based on current and historical
            listings found in the Marketcheck database for this car
          type: integer
        dom_180:
          description: Days on Market value for the car based on current and last 6 month
            listings found in the Marketcheck database for this car
          type: integer
        dom_active:
          description: Days on Market value for the car based on current and last 30 days
            listings found in the Marketcheck database for this car
          type: integer
        exterior_color:
          description: Exterior color of the car
          type: string
        financing_options:
          description: Array of all finance offers for this listing
          items:
            $ref: "#/components/schemas/ListingFinance"
          type: array
        first_seen_at:
          description: Listing first seen at first scraped timestamp
          type: integer
        first_seen_at_date:
          description: Listing first seen at first scraped date
          type: string
        heading:
          description: Listing title as displayed on the source website
          type: string
        id:
          description: Unique identifier representing a specific listing from the
            Marketcheck database
          type: string
        interior_color:
          description: Interior color of the car
          type: string
        inventory_type:
          description: Inventory type of car
          type: string
        is_certified:
          description: Certified car
          type: integer
        is_searchable:
          description: Flag to indicate listing is marked searchable or not
          type: string
        last_seen_at:
          description: Listing last seen at (most recent) timestamp
          type: integer
        last_seen_at_date:
          description: Listing last seen at (most recent) date
          type: string
        latitude:
          description: Latitude of the listing
          type: string
        leasing_options:
          description: Array of all finance offers for this listing
          items:
            $ref: "#/components/schemas/ListingLease"
          type: array
        longitude:
          description: Longitude of the listing
          type: string
        miles:
          description: Odometer reading / reported miles usage for the car
          type: integer
        msrp:
          description: MSRP for the car
          type: integer
        price:
          description: Asking price for the car
          type: integer
        ref_miles:
          description: Last Odometer reading / reported miles usage for the car. If the
            asking miles value is not or is available then the last_miles could
            perhaps be used. last_miles is the miles for the car listed on the
            source website as of last_miles_dt date
          type: string
        ref_miles_dt:
          description: The date at which the last miles was reported online. This is
            earlier to last_seen_date
          type: integer
        ref_price:
          description: Last reported price for the car. If the asking price value is not or
            is available then the last_price could perhaps be used. last_price
            is the price for the car listed on the source website as of
            last_price_dt date
          type: string
        ref_price_dt:
          description: The date at which the last price was reported online. This is
            earlier to last_seen_date
          type: integer
        scraped_at:
          description: Listing last seen at date timestamp
          type: integer
        scraped_at_date:
          description: Listing last seen at date
          type: string
        seller_name:
          description: Seller name of the listing from the Marketcheck database
          type: string
        seller_name_o:
          description: Seller name of the listing from the Marketcheck database
          type: string
        seller_type:
          description: Seller type for the car
          type: string
        source:
          description: Source domain of the listing
          type: string
        state:
          description: State of the listing
          type: string
        status_date:
          description: Timestamp of status date
          type: integer
        stock_no:
          description: Stock number of car in dealers inventory
          type: string
        street:
          description: Street of the listing
          type: string
        trim_r:
          description: Trim of the car
          type: string
        vdp_url:
          description: Vehicle Details Page url of the specific car
          type: string
        vin:
          description: VIN for the car
          type: string
        zip:
          description: Zip of the listing
          type: string
      type: object
    Listing:
      description: Represents a full list of attributes available with Marketcheck for a car
      properties:
        build:
          $ref: "#/components/schemas/Build"
        carfax_1_owner:
          description: Flag to indicate whether listing is carfax_1_owner
          type: boolean
        carfax_clean_title:
          description: Flag to indicate whether listing is carfax_clean_title
          type: boolean
        data_source:
          description: Data source of the listing
          type: string
        dealer:
          $ref: "#/components/schemas/NestDealer"
        dom:
          description: Days on Market value for the car based on current and historical
            listings found in the Marketcheck database for this car
          type: integer
        dom_180:
          description: Days on Market value for the car based on current and last 6 month
            listings found in the Marketcheck database for this car
          type: integer
        dom_active:
          description: Days on Market value for the car based on current and last 30 days
            listings found in the Marketcheck database for this car
          type: integer
        exterior_color:
          description: Exterior color of the car
          type: string
        extra:
          $ref: "#/components/schemas/ListingNestExtraAttributes"
        financing_options:
          description: Array of all finance offers for this listing
          items:
            $ref: "#/components/schemas/ListingFinance"
          type: array
        first_seen_at:
          description: Listing first seen at first scraped timestamp
          type: integer
        first_seen_at_date:
          description: Listing first seen at first scraped date
          type: string
        heading:
          description: Listing title as displayed on the source website
          type: string
        id:
          description: Unique identifier representing a specific listing from the
            Marketcheck database
          type: string
        interior_color:
          description: Interior color of the car
          type: string
        inventory_type:
          description: Inventory type of car
          type: string
        is_certified:
          description: Certified car
          type: integer
        last_seen_at:
          description: Listing last seen at (most recent) timestamp
          type: integer
        last_seen_at_date:
          description: Listing last seen at (most recent) date
          type: string
        leasing_options:
          description: Array of all finance offers for this listing
          items:
            $ref: "#/components/schemas/ListingLease"
          type: array
        media:
          $ref: "#/components/schemas/ListingNestMedia"
        miles:
          description: Odometer reading / reported miles usage for the car
          type: integer
        msrp:
          description: MSRP for the car
          type: integer
        price:
          description: Asking price for the car
          type: integer
        ref_miles:
          description: Last Odometer reading / reported miles usage for the car. If the
            asking miles value is not or is available then the last_miles could
            perhaps be used. last_miles is the miles for the car listed on the
            source website as of last_miles_dt date
          type: string
        ref_miles_dt:
          description: The date at which the last miles was reported online. This is
            earlier to last_seen_date
          type: integer
        ref_price:
          description: Last reported price for the car. If the asking price value is not or
            is available then the last_price could perhaps be used. last_price
            is the price for the car listed on the source website as of
            last_price_dt date
          type: string
        ref_price_dt:
          description: The date at which the last price was reported online. This is
            earlier to last_seen_date
          type: integer
        scraped_at:
          description: Listing last seen at date timestamp
          type: integer
        scraped_at_date:
          description: Listing last seen at date
          type: string
        seller_type:
          description: Seller type for the car
          type: string
        source:
          description: Source domain of the listing
          type: string
        stock_no:
          description: Stock number of car in dealers inventory
          type: string
        vdp_url:
          description: Vehicle Details Page url of the specific car
          type: string
        vin:
          description: VIN for the car
          type: string
      type: object
    ListingDebugAttributes:
      properties:
        cycle_id:
          description: Cycle id
          type: number
        robot_id:
          description: Robot id
          type: number
        scraped_at:
          description: Scraped date and time
          type: string
        taxonomy_vin:
          description: Taxonomy vin
          type: string
        template_id:
          description: Template id
          type: number
        user_id:
          description: User id
          type: number
      type: object
    ListingExtraAttributes:
      properties:
        dealer_added_f:
          description: List of dealer added features available with the car
          items:
            type: string
          type: array
        electronics_f:
          description: List of electronic features available with the car
          items:
            type: string
          type: array
        exterior_f:
          description: List of exterior features available with the car
          items:
            type: string
          type: array
        features:
          description: List of Features available with the car
          items:
            type: string
          type: array
        id:
          description: Unique identifier representing a specific listing from the
            Marketcheck database
          type: string
        interior_f:
          description: List of interior features available with the car
          items:
            type: string
          type: array
        options:
          description: Installed Options of the car
          items:
            type: string
          type: array
        safety_f:
          description: List of safety features available with the car
          items:
            type: string
          type: array
        seller_cmts:
          description: Seller comment for the car
          type: string
        standard_f:
          description: List of standard features available with the car
          items:
            type: string
          type: array
        technical_f:
          description: List of technical features available with the car
          items:
            type: string
          type: array
      type: object
    ListingFinance:
      properties:
        down_payment:
          description: Down payment for this finance offer
          format: double
          type: number
        down_payment_percentage:
          description: down payment percentage for this finance offer
          format: double
          type: number
        estimated_monthly_payment:
          description: estimated monthly payment for this finance offer
          format: double
          type: number
        loan_apr:
          description: Loan APR for this finance offer
          format: double
          type: number
        loan_term:
          description: Loan term for this finance offer
          type: integer
      type: object
    ListingLease:
      properties:
        down_payment:
          description: Down payment for this lease offer
          format: double
          type: number
        estimated_monthly_payment:
          description: estimated monthly payment for this lease offer
          format: double
          type: number
        lease_term:
          description: Lease term for this lease offer
          format: integer
          type: integer
      type: object
    ListingMedia:
      properties:
        id:
          description: Unique identifier representing a specific listing from the
            Marketcheck database
          type: string
        photo_links:
          description: A list of photo urls for the car
          items:
            type: string
          type: array
        photo_url:
          description: Single photo url of the car
          type: string
      type: object
    ListingNestExtraAttributes:
      properties:
        dealer_added_f:
          description: List of dealer added features available with the car
          items:
            type: string
          type: array
        electronics_f:
          description: List of electronic features available with the car
          items:
            type: string
          type: array
        exterior_f:
          description: List of exterior features available with the car
          items:
            type: string
          type: array
        features:
          description: List of Features available with the car
          items:
            type: string
          type: array
        interior_f:
          description: List of interior features available with the car
          items:
            type: string
          type: array
        options:
          description: Installed Options of the car
          items:
            type: string
          type: array
        safety_f:
          description: List of safety features available with the car
          items:
            type: string
          type: array
        seller_comments:
          description: Seller comments for the car
          type: string
        standard_f:
          description: List of standard features available with the car
          items:
            type: string
          type: array
        technical_f:
          description: List of technical features available with the car
          items:
            type: string
          type: array
      type: object
    ListingNestMedia:
      properties:
        photo_links:
          description: A list of photo urls for the car
          items:
            type: string
          type: array
      type: object
    ListingVDP:
      description: Describes the VDP (Vehicle Details Page) HTML object
      properties:
        crawled_at:
          description: The timestamp indicating the time when the VDP was cached
          type: number
        html:
          description: The HTML string for the listing web page
          type: string
        vdp_url:
          description: The URL of the VDP
          type: string
      type: object
    Location:
      description: Represents a location
      properties:
        city:
          description: City of the listing
          type: string
        latitude:
          description: Latitude component of the location
          format: double
          type: number
        longitude:
          description: Longitude component of the location
          format: double
          type: number
        state:
          description: State of the listing
          type: string
        zip:
          description: Zip of the listing
          type: string
      type: object
    MakeModel:
      properties:
        make:
          type: string
        model:
          type: string
      type: object
    Mds:
      description: Describes Market days supply results for year make model trim combination
      properties:
        make:
          description: Make of vin provided
          type: string
        mds:
          description: Provides Market days supply count
          type: integer
        model:
          description: Model of vin provided
          type: string
        sold_vins:
          description: Sold vins array
          items:
            description: Sold vins array
            type: string
          type: array
        total_active_cars_for_ymmt:
          description: Active cars for ymmt combination
          type: integer
        total_cars_sold_in_last_45_days:
          description: Cars sold in last 45 days
          type: integer
        trim:
          description: Trim of vin provided
          type: string
        year:
          description: Year of vin provided
          type: integer
      type: object
    NestDealer:
      properties:
        city:
          description: City of the dealer
          type: string
        country:
          description: country of the dealer
          type: string
        dealer_type:
          description: Type of dealer (franchise/independent)
          type: string
        id:
          description: The unique id associated with the dealer in the Marketcheck database
          type: integer
        latitude:
          description: Latutide for the dealer location
          type: string
        longitude:
          description: Longitude for the dealer location
          type: string
        name:
          description: Name of the dealer
          type: string
        phone:
          description: Contact no of the dealer
          type: string
        seller_email:
          description: Contact email of the dealer
          type: string
        state:
          description: State of the dealer
          type: string
        street:
          description: Street of the dealer
          type: string
        website:
          description: Website of the dealer
          type: string
        zip:
          description: Zip of the dealer
          type: string
      type: object
    PlotPoint:
      properties:
        dom:
          description: DOM
          type: number
        id:
          description: Listing id
          type: string
        miles:
          description: Miles
          type: number
        msrp:
          description: Msrp
          type: number
        price:
          description: Price
          type: number
        seller_name:
          description: Seller name
          type: string
        vin:
          description: Vin
          type: string
      type: object
    PopularCars:
      description: Top 50 popular cars
      properties:
        new_top50:
          description: Array of all new top 50 cars
          items:
            $ref: "#/components/schemas/BasePopular"
          type: array
        used_top50:
          description: Array of all used top 50 cars
          items:
            $ref: "#/components/schemas/BasePopular"
          type: array
      type: object
    PopularityItem:
      properties:
        color:
          description: Color depending upon left and right analysis numbers
          type: string
        delta_percent:
          description: Delta percent
          type: number
        difference:
          description: Difference depending upon left and right analysis
          type: number
        left:
          description: Left side rating for above description (2016 ford F-150 Lariat)
          type: number
        right:
          description: Right side rating for above description (All Other Cars)
          type: number
        text:
          description: "Description for which popularity should be show eg: 2016 ford F-150
            Lariat vs All Other Cars"
          type: string
        thumbs:
          description: Thumbs up/down depending upon left and right analysis numbers
          type: string
      type: object
    RangeFacetItem:
      properties:
        after:
          description: Number of listings that have field value after range end
          type: integer
        before:
          description: Number of listings that have field value before range start
          type: integer
        between:
          description: Number of listings that have field value between range start and
            range end
          type: integer
        counts:
          items:
            properties:
              count:
                type: integer
              lower_bound:
                type: integer
              upper_bound:
                type: integer
            type: object
          type: array
        end:
          description: The end of range
          type: integer
        gap:
          description: The range gap applied for range faceting
          type: integer
        start:
          description: The start of range
          type: integer
      type: object
    RatingComponents:
      properties:
        actual_rating:
          description: rating of car on that condition
          type: number
        rating_condition:
          description: Specifices rating condition parameter
          type: string
      type: object
    ReviewComponents:
      properties:
        actual_review:
          description: review of car given by current user
          type: string
        user_name:
          description: Name of user who has given review
          type: string
        user_rating:
          description: rating for dealer given by user ranging from 1-5
          type: number
      type: object
    SafetyRating:
      description: Describes the Safety Ratings of current listing
      properties:
        driver_front_rating:
          description: Driver front rating of the Listing on scale 1-5
          type: number
        driver_side_rating:
          description: Driver Side rating of the Listing on scale 1-5
          type: number
        overall_rating:
          description: Overall rating of the Listing on scale 1-5
          type: number
        passenger_front_rating:
          description: Passenger front rating of the Listing on scale 1-5
          type: number
        roll_over_rating:
          description: Roll Over rating of the Listing on scale 1-5
          type: number
      type: object
    Sales:
      description: Sales count query response
      properties:
        city:
          description: City
          type: string
        counts:
          description: Sales count
          type: integer
        cpo:
          description: cpo sales count
          type: integer
        dom_stats:
          $ref: "#/components/schemas/SalesStats"
        inventory_type:
          description: inventory_type
          type: string
        make:
          description: Make
          type: string
        miles_stats:
          $ref: "#/components/schemas/SalesStats"
        model:
          description: model
          type: string
        non-cpo:
          description: Non-cpo sales count
          type: integer
        price_stats:
          $ref: "#/components/schemas/SalesStats"
        state:
          description: State
          type: string
        taxonomy_vin:
          description: taxonomy_vin
          type: string
        trim:
          description: trim
          type: string
        year:
          description: year
          type: string
      type: object
    SalesStats:
      description: Sales stats response
      properties:
        absolute_mean_deviation:
          description: absolute_mean_deviation
          type: number
        iqr:
          description: iqr
          type: number
        mean:
          description: mean
          type: number
        median:
          description: median
          type: number
        population_standard_deviation:
          description: population_standard_deviation
          type: number
        standard_deviation:
          description: standard_deviation
          type: number
        trimmed_mean:
          description: trimmed_mean
          type: number
        variance:
          description: variance
          type: number
        weighted_mean:
          description: weighted_mean
          type: number
      type: object
    SearchAutoCompleteResponse:
      description: Search auto complete query response
      properties:
        terms:
          items:
            properties:
              count:
                description: The number of listings with item as value for given field
                type: integer
              item:
                description: The actual term that either has prefix or contains given input
                type: string
            type: object
          type: array
      type: object
    SearchFacets:
      properties:
        body_subtype:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        body_type:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        car_type:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        carfax_1_owner:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        carfax_clean_title:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        city:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        cylinders:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        data_source:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        dealer_id:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        doors:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        drivetrain:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        engine:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        engine_aspiration:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        engine_block:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        engine_size:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        exterior_color:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        fuel_type:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        interior_color:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        make:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        model:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        seller_name:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        seller_name_o:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        seller_type:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        source:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        state:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        transmission:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        trim:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        trim_o:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        trim_r:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        vehicle_type:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
        year:
          items:
            $ref: "#/components/schemas/FacetItem"
          type: array
      type: object
    SearchRangeFacets:
      properties:
        dom:
          items:
            $ref: "#/components/schemas/RangeFacetItem"
          type: object
        dom_180:
          items:
            $ref: "#/components/schemas/RangeFacetItem"
          type: object
        dom_active:
          items:
            $ref: "#/components/schemas/RangeFacetItem"
          type: object
        miles:
          items:
            $ref: "#/components/schemas/RangeFacetItem"
          type: object
        price:
          items:
            $ref: "#/components/schemas/RangeFacetItem"
          type: object
      type: object
    SearchResponse:
      description: Search query response
      properties:
        facets:
          items:
            $ref: "#/components/schemas/SearchFacets"
          type: object
        listings:
          items:
            $ref: "#/components/schemas/BaseListing"
          type: array
        num_found:
          description: The number of listings found
          type: integer
        range_facets:
          items:
            $ref: "#/components/schemas/SearchRangeFacets"
          type: object
        stats:
          items:
            $ref: "#/components/schemas/SearchStats"
          type: object
      type: object
    SearchStats:
      properties:
        dom:
          $ref: "#/components/schemas/StatsItem"
        dom_180:
          $ref: "#/components/schemas/StatsItem"
        dom_active:
          $ref: "#/components/schemas/StatsItem"
        finance_down_payment:
          $ref: "#/components/schemas/StatsItem"
        finance_down_payment_per:
          $ref: "#/components/schemas/StatsItem"
        finance_emp:
          $ref: "#/components/schemas/StatsItem"
        finance_loan_apr:
          $ref: "#/components/schemas/StatsItem"
        finance_loan_term:
          $ref: "#/components/schemas/StatsItem"
        lease_down_payment:
          $ref: "#/components/schemas/StatsItem"
        lease_emp:
          $ref: "#/components/schemas/StatsItem"
        lease_term:
          $ref: "#/components/schemas/StatsItem"
        miles:
          $ref: "#/components/schemas/StatsItem"
        msrp:
          $ref: "#/components/schemas/StatsItem"
        price:
          $ref: "#/components/schemas/StatsItem"
      type: object
    SpecsAutoCompleteResponse:
      description: Specs auto complete query response
      properties:
        terms:
          items:
            description: The actual term that either has prefix or contains given input
            type: string
          type: array
      type: object
    StatsItem:
      properties:
        count:
          description: count
          type: integer
        max:
          description: Maximum value of the field
          type: integer
        mean:
          description: Mean of the field
          type: number
        median:
          description: median of the field
          type: number
        min:
          description: Minimum value of the field
          type: integer
        missing:
          description: count of listings missing particular field
          type: integer
        stddev:
          description: stddev of the field
          type: number
        sum:
          description: Summation of all values of the field
          type: integer
        sum_of_squares:
          description: sum_of_squares of the field
          type: number
      type: object
    TrendPoint:
      properties:
        dom:
          description: Days on Market
          type: number
        miles:
          description: Miles
          type: number
        msrp:
          description: MSRP
          type: number
        price:
          description: Price
          type: number
        units:
          description: Units
          type: number
      type: object
    VinReport:
      properties:
        icon:
          description: icon url
          type: string
        some_text:
          description: Some descriptional text
          type: string
      type: object
