openapi: 3.0.0
info:
  version: 2016-12-01
  x-release: v4
  title: Amazon AppStream
  description: <fullname>Amazon AppStream 2.0</fullname> <p>This is the <i>Amazon AppStream
    2.0 API Reference</i>. This documentation provides descriptions and syntax
    for each of the actions and data types in AppStream 2.0. AppStream 2.0 is a
    fully managed, secure application streaming service that lets you stream
    desktop applications to users without rewriting applications. AppStream 2.0
    manages the AWS resources that are required to host and run your
    applications, scales automatically, and provides access to your users on
    demand. </p> <note> <p>You can call the AppStream 2.0 API operations by
    using an interface VPC endpoint (interface endpoint). For more information,
    see <a
    href="https://docs.aws.amazon.com/appstream2/latest/developerguide/access-api-cli-through-interface-vpc-endpoint.html">Access
    AppStream 2.0 API Operations and CLI Commands Through an Interface VPC
    Endpoint</a> in the <i>Amazon AppStream 2.0 Administration Guide</i>.</p>
    </note> <p>To learn more about AppStream 2.0, see the following
    resources:</p> <ul> <li> <p> <a
    href="http://aws.amazon.com/appstream2">Amazon AppStream 2.0 product
    page</a> </p> </li> <li> <p> <a
    href="http://aws.amazon.com/documentation/appstream2">Amazon AppStream 2.0
    documentation</a> </p> </li> </ul>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: appstream
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/appstream-2016-12-01.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/appstream2/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=PhotonAdminProxyService.AssociateFleet:
    post:
      operationId: AssociateFleet
      description: Associates the specified fleet with the specified stack.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateFleetResult"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccountStatusException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "484":
          description: IncompatibleImageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleImageException"
        "485":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.AssociateFleet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateFleetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.BatchAssociateUserStack:
    post:
      operationId: BatchAssociateUserStack
      description: Associates the specified users with the specified stacks. Users in a
        user pool cannot be assigned to stacks with fleets that are joined to an
        Active Directory domain.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchAssociateUserStackResult"
        "480":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.BatchAssociateUserStack
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchAssociateUserStackRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.BatchDisassociateUserStack:
    post:
      operationId: BatchDisassociateUserStack
      description: Disassociates the specified users from the specified stacks.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchDisassociateUserStackResult"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.BatchDisassociateUserStack
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDisassociateUserStackRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.CopyImage:
    post:
      operationId: CopyImage
      description: Copies the image within the same region or to a new region within the
        same AWS account. Note that any tags you added to the image will not be
        copied.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CopyImageResponse"
        "480":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ResourceNotAvailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotAvailableException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccountStatusException"
        "485":
          description: IncompatibleImageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleImageException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.CopyImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CopyImageRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.CreateDirectoryConfig:
    post:
      operationId: CreateDirectoryConfig
      description: Creates a Directory Config object in AppStream 2.0. This object includes
        the configuration information required to join fleets and image builders
        to Microsoft Active Directory domains.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDirectoryConfigResult"
        "480":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccountStatusException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.CreateDirectoryConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDirectoryConfigRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.CreateFleet:
    post:
      operationId: CreateFleet
      description: Creates a fleet. A fleet consists of streaming instances that run a
        specified image.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateFleetResult"
        "480":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "481":
          description: ResourceNotAvailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotAvailableException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccountStatusException"
        "485":
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRoleException"
        "486":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "487":
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
        "488":
          description: IncompatibleImageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleImageException"
        "489":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.CreateFleet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateFleetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.CreateImageBuilder:
    post:
      operationId: CreateImageBuilder
      description: <p>Creates an image builder. An image builder is a virtual machine that
        is used to create an image.</p> <p>The initial state of the builder is
        <code>PENDING</code>. When it is ready, the state is
        <code>RUNNING</code>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateImageBuilderResult"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccountStatusException"
        "482":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "483":
          description: ResourceNotAvailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotAvailableException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRoleException"
        "486":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "487":
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
        "488":
          description: IncompatibleImageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleImageException"
        "489":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.CreateImageBuilder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateImageBuilderRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.CreateImageBuilderStreamingURL:
    post:
      operationId: CreateImageBuilderStreamingURL
      description: Creates a URL to start an image builder streaming session.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateImageBuilderStreamingURLResult"
        "480":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.CreateImageBuilderStreamingURL
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateImageBuilderStreamingURLRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.CreateStack:
    post:
      operationId: CreateStack
      description: "Creates a stack to start streaming applications to users. A stack
        consists of an associated fleet, user access policies, and storage
        configurations. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateStackResult"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccountStatusException"
        "482":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "483":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "484":
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRoleException"
        "485":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "486":
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.CreateStack
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateStackRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.CreateStreamingURL:
    post:
      operationId: CreateStreamingURL
      description: "Creates a temporary URL to start an AppStream 2.0 streaming session for
        the specified user. A streaming URL enables application streaming to be
        tested without user setup. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateStreamingURLResult"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ResourceNotAvailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotAvailableException"
        "482":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
        "483":
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.CreateStreamingURL
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateStreamingURLRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.CreateUsageReportSubscription:
    post:
      operationId: CreateUsageReportSubscription
      description: Creates a usage report subscription. Usage reports are generated daily.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateUsageReportSubscriptionResult"
        "480":
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRoleException"
        "481":
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccountStatusException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.CreateUsageReportSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUsageReportSubscriptionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.CreateUser:
    post:
      operationId: CreateUser
      description: Creates a new user in the user pool.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateUserResult"
        "480":
          description: ResourceAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistsException"
        "481":
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccountStatusException"
        "482":
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.DeleteDirectoryConfig:
    post:
      operationId: DeleteDirectoryConfig
      description: Deletes the specified Directory Config object from AppStream 2.0. This
        object includes the information required to join streaming instances to
        an Active Directory domain.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDirectoryConfigResult"
        "480":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DeleteDirectoryConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDirectoryConfigRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.DeleteFleet:
    post:
      operationId: DeleteFleet
      description: Deletes the specified fleet.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteFleetResult"
        "480":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DeleteFleet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteFleetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.DeleteImage:
    post:
      operationId: DeleteImage
      description: Deletes the specified image. You cannot delete an image when it is in
        use. After you delete an image, you cannot provision new capacity using
        the image.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteImageResult"
        "480":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
        "483":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DeleteImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteImageRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.DeleteImageBuilder:
    post:
      operationId: DeleteImageBuilder
      description: Deletes the specified image builder and releases the capacity.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteImageBuilderResult"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DeleteImageBuilder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteImageBuilderRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.DeleteImagePermissions:
    post:
      operationId: DeleteImagePermissions
      description: Deletes permissions for the specified private image. After you delete
        permissions for an image, AWS accounts to which you previously granted
        these permissions can no longer use the image.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteImagePermissionsResult"
        "480":
          description: ResourceNotAvailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotAvailableException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DeleteImagePermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteImagePermissionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.DeleteStack:
    post:
      operationId: DeleteStack
      description: Deletes the specified stack. After the stack is deleted, the application
        streaming environment provided by the stack is no longer available to
        users. Also, any reservations made for application streaming sessions
        for the stack are released.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteStackResult"
        "480":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DeleteStack
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteStackRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.DeleteUsageReportSubscription:
    post:
      operationId: DeleteUsageReportSubscription
      description: Disables usage report generation.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteUsageReportSubscriptionResult"
        "480":
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccountStatusException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DeleteUsageReportSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteUsageReportSubscriptionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.DeleteUser:
    post:
      operationId: DeleteUser
      description: Deletes a user from the user pool.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteUserResult"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DeleteUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteUserRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.DescribeDirectoryConfigs:
    post:
      operationId: DescribeDirectoryConfigs
      description: <p>Retrieves a list that describes one or more specified Directory
        Config objects for AppStream 2.0, if the names for these objects are
        provided. Otherwise, all Directory Config objects in the account are
        described. These objects include the configuration information required
        to join fleets and image builders to Microsoft Active Directory domains.
        </p> <p>Although the response syntax in this topic includes the account
        password, this password is not returned in the actual response.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDirectoryConfigsResult"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DescribeDirectoryConfigs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeDirectoryConfigsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.DescribeFleets:
    post:
      operationId: DescribeFleets
      description: Retrieves a list that describes one or more specified fleets, if the
        fleet names are provided. Otherwise, all fleets in the account are
        described.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeFleetsResult"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DescribeFleets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeFleetsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.DescribeImageBuilders:
    post:
      operationId: DescribeImageBuilders
      description: Retrieves a list that describes one or more specified image builders, if
        the image builder names are provided. Otherwise, all image builders in
        the account are described.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeImageBuildersResult"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DescribeImageBuilders
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeImageBuildersRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.DescribeImagePermissions:
    post:
      operationId: DescribeImagePermissions
      description: "Retrieves a list that describes the permissions for shared AWS account
        IDs on a private image that you own. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeImagePermissionsResult"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DescribeImagePermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeImagePermissionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.DescribeImages:
    post:
      operationId: DescribeImages
      description: Retrieves a list that describes one or more specified images, if the
        image names or image ARNs are provided. Otherwise, all images in the
        account are described.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeImagesResult"
        "480":
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DescribeImages
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeImagesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.DescribeSessions:
    post:
      operationId: DescribeSessions
      description: Retrieves a list that describes the streaming sessions for a specified
        stack and fleet. If a UserId is provided for the stack and fleet, only
        streaming sessions for that user are described. If an authentication
        type is not provided, the default is to authenticate users using a
        streaming URL.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeSessionsResult"
        "480":
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DescribeSessions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeSessionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.DescribeStacks:
    post:
      operationId: DescribeStacks
      description: Retrieves a list that describes one or more specified stacks, if the
        stack names are provided. Otherwise, all stacks in the account are
        described.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeStacksResult"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DescribeStacks
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeStacksRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.DescribeUsageReportSubscriptions:
    post:
      operationId: DescribeUsageReportSubscriptions
      description: Retrieves a list that describes one or more usage report subscriptions.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeUsageReportSubscriptionsResult"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccountStatusException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DescribeUsageReportSubscriptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeUsageReportSubscriptionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.DescribeUserStackAssociations:
    post:
      operationId: DescribeUserStackAssociations
      description: <p>Retrieves a list that describes the UserStackAssociation objects. You
        must specify either or both of the following:</p> <ul> <li> <p>The stack
        name</p> </li> <li> <p>The user name (email address of the user
        associated with the stack) and the authentication type for the user</p>
        </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeUserStackAssociationsResult"
        "480":
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DescribeUserStackAssociations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeUserStackAssociationsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.DescribeUsers:
    post:
      operationId: DescribeUsers
      description: Retrieves a list that describes one or more specified users in the user
        pool.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeUsersResult"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DescribeUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeUsersRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.DisableUser:
    post:
      operationId: DisableUser
      description: "Disables the specified user in the user pool. Users can't sign in to
        AppStream 2.0 until they are re-enabled. This action does not delete the
        user. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisableUserResult"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DisableUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisableUserRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.DisassociateFleet:
    post:
      operationId: DisassociateFleet
      description: Disassociates the specified fleet from the specified stack.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateFleetResult"
        "480":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.DisassociateFleet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateFleetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.EnableUser:
    post:
      operationId: EnableUser
      description: Enables a user in the user pool. After being enabled, users can sign in
        to AppStream 2.0 and open applications from the stacks to which they are
        assigned.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnableUserResult"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccountStatusException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.EnableUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnableUserRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.ExpireSession:
    post:
      operationId: ExpireSession
      description: Immediately stops the specified streaming session.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpireSessionResult"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.ExpireSession
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExpireSessionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.ListAssociatedFleets:
    post:
      operationId: ListAssociatedFleets
      description: Retrieves the name of the fleet that is associated with the specified
        stack.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAssociatedFleetsResult"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.ListAssociatedFleets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListAssociatedFleetsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.ListAssociatedStacks:
    post:
      operationId: ListAssociatedStacks
      description: Retrieves the name of the stack with which the specified fleet is
        associated.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAssociatedStacksResult"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.ListAssociatedStacks
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListAssociatedStacksRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: <p>Retrieves a list of all tags for the specified AppStream 2.0
        resource. You can tag AppStream 2.0 image builders, images, fleets, and
        stacks.</p> <p>For more information about tags, see <a
        href="https://docs.aws.amazon.com/appstream2/latest/developerguide/tagging-basic.html">Tagging
        Your Resources</a> in the <i>Amazon AppStream 2.0 Administration
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.ListTagsForResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagsForResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.StartFleet:
    post:
      operationId: StartFleet
      description: Starts the specified fleet.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartFleetResult"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccountStatusException"
        "484":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "485":
          description: ResourceNotAvailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotAvailableException"
        "486":
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRoleException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.StartFleet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartFleetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.StartImageBuilder:
    post:
      operationId: StartImageBuilder
      description: Starts the specified image builder.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartImageBuilderResult"
        "480":
          description: ResourceNotAvailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotAvailableException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccountStatusException"
        "484":
          description: IncompatibleImageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleImageException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.StartImageBuilder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartImageBuilderRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.StopFleet:
    post:
      operationId: StopFleet
      description: Stops the specified fleet.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopFleetResult"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.StopFleet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopFleetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.StopImageBuilder:
    post:
      operationId: StopImageBuilder
      description: Stops the specified image builder.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopImageBuilderResult"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.StopImageBuilder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopImageBuilderRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.TagResource:
    post:
      operationId: TagResource
      description: <p>Adds or overwrites one or more tags for the specified AppStream 2.0
        resource. You can tag AppStream 2.0 image builders, images, fleets, and
        stacks.</p> <p>Each tag consists of a key and an optional value. If a
        resource already has a tag with the same key, this operation updates its
        value.</p> <p>To list the current tags for your resources, use
        <a>ListTagsForResource</a>. To disassociate tags from your resources,
        use <a>UntagResource</a>.</p> <p>For more information about tags, see <a
        href="https://docs.aws.amazon.com/appstream2/latest/developerguide/tagging-basic.html">Tagging
        Your Resources</a> in the <i>Amazon AppStream 2.0 Administration
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccountStatusException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.TagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.UntagResource:
    post:
      operationId: UntagResource
      description: <p>Disassociates one or more specified tags from the specified AppStream
        2.0 resource.</p> <p>To list the current tags for your resources, use
        <a>ListTagsForResource</a>.</p> <p>For more information about tags, see
        <a
        href="https://docs.aws.amazon.com/appstream2/latest/developerguide/tagging-basic.html">Tagging
        Your Resources</a> in the <i>Amazon AppStream 2.0 Administration
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.UntagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UntagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.UpdateDirectoryConfig:
    post:
      operationId: UpdateDirectoryConfig
      description: Updates the specified Directory Config object in AppStream 2.0. This
        object includes the configuration information required to join fleets
        and image builders to Microsoft Active Directory domains.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDirectoryConfigResult"
        "480":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.UpdateDirectoryConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDirectoryConfigRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.UpdateFleet:
    post:
      operationId: UpdateFleet
      description: <p>Updates the specified fleet.</p> <p>If the fleet is in the
        <code>STOPPED</code> state, you can update any attribute except the
        fleet name. If the fleet is in the <code>RUNNING</code> state, you can
        update the <code>DisplayName</code>, <code>ComputeCapacity</code>,
        <code>ImageARN</code>, <code>ImageName</code>,
        <code>IdleDisconnectTimeoutInSeconds</code>, and
        <code>DisconnectTimeoutInSeconds</code> attributes. If the fleet is in
        the <code>STARTING</code> or <code>STOPPING</code> state, you can't
        update it.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateFleetResult"
        "480":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccountStatusException"
        "483":
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRoleException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: ResourceNotAvailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotAvailableException"
        "486":
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
        "487":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "488":
          description: IncompatibleImageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleImageException"
        "489":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.UpdateFleet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateFleetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.UpdateImagePermissions:
    post:
      operationId: UpdateImagePermissions
      description: "Adds or updates permissions for the specified private image. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateImagePermissionsResult"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ResourceNotAvailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotAvailableException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.UpdateImagePermissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateImagePermissionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=PhotonAdminProxyService.UpdateStack:
    post:
      operationId: UpdateStack
      description: Updates the specified fields for the specified stack.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateStackResult"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "482":
          description: InvalidRoleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRoleException"
        "483":
          description: InvalidParameterCombinationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterCombinationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: InvalidAccountStatusException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccountStatusException"
        "486":
          description: IncompatibleImageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleImageException"
        "487":
          description: OperationNotPermittedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedException"
        "488":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - PhotonAdminProxyService.UpdateStack
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateStackRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://appstream2.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon AppStream multi-region endpoint
  - url: https://appstream2.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon AppStream multi-region endpoint
  - url: http://appstream2.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon AppStream endpoint for China (Beijing) and China (Ningxia)
  - url: https://appstream2.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon AppStream endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AssociateFleetResult:
      type: object
      properties: {}
    AssociateFleetRequest:
      type: object
      required:
        - FleetName
        - StackName
      properties:
        FleetName:
          $ref: "#/components/schemas/String"
        StackName:
          $ref: "#/components/schemas/String"
    LimitExceededException: {}
    InvalidAccountStatusException: {}
    ResourceNotFoundException: {}
    ConcurrentModificationException: {}
    IncompatibleImageException: {}
    OperationNotPermittedException: {}
    BatchAssociateUserStackResult:
      type: object
      properties:
        errors:
          $ref: "#/components/schemas/UserStackAssociationErrorList"
    BatchAssociateUserStackRequest:
      type: object
      required:
        - UserStackAssociations
      properties:
        UserStackAssociations:
          $ref: "#/components/schemas/UserStackAssociationList"
    BatchDisassociateUserStackResult:
      type: object
      properties:
        errors:
          $ref: "#/components/schemas/UserStackAssociationErrorList"
    BatchDisassociateUserStackRequest:
      type: object
      required:
        - UserStackAssociations
      properties:
        UserStackAssociations:
          $ref: "#/components/schemas/UserStackAssociationList"
    CopyImageResponse:
      type: object
      properties:
        DestinationImageName:
          $ref: "#/components/schemas/Name"
    CopyImageRequest:
      type: object
      required:
        - SourceImageName
        - DestinationImageName
        - DestinationRegion
      properties:
        SourceImageName:
          $ref: "#/components/schemas/Name"
        DestinationImageName:
          $ref: "#/components/schemas/Name"
        DestinationRegion:
          $ref: "#/components/schemas/RegionName"
        DestinationImageDescription:
          $ref: "#/components/schemas/Description"
    ResourceAlreadyExistsException: {}
    ResourceNotAvailableException: {}
    CreateDirectoryConfigResult:
      type: object
      properties:
        DirectoryConfig:
          $ref: "#/components/schemas/DirectoryConfig"
    CreateDirectoryConfigRequest:
      type: object
      required:
        - DirectoryName
        - OrganizationalUnitDistinguishedNames
        - ServiceAccountCredentials
      properties:
        DirectoryName:
          $ref: "#/components/schemas/DirectoryName"
        OrganizationalUnitDistinguishedNames:
          $ref: "#/components/schemas/OrganizationalUnitDistinguishedNamesList"
        ServiceAccountCredentials:
          $ref: "#/components/schemas/ServiceAccountCredentials"
    CreateFleetResult:
      type: object
      properties:
        Fleet:
          $ref: "#/components/schemas/Fleet"
    CreateFleetRequest:
      type: object
      required:
        - Name
        - InstanceType
        - ComputeCapacity
      properties:
        Name:
          $ref: "#/components/schemas/Name"
        ImageName:
          $ref: "#/components/schemas/String"
        ImageArn:
          $ref: "#/components/schemas/Arn"
        InstanceType:
          $ref: "#/components/schemas/String"
        FleetType:
          $ref: "#/components/schemas/FleetType"
        ComputeCapacity:
          $ref: "#/components/schemas/ComputeCapacity"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
        MaxUserDurationInSeconds:
          $ref: "#/components/schemas/Integer"
        DisconnectTimeoutInSeconds:
          $ref: "#/components/schemas/Integer"
        Description:
          $ref: "#/components/schemas/Description"
        DisplayName:
          $ref: "#/components/schemas/DisplayName"
        EnableDefaultInternetAccess:
          $ref: "#/components/schemas/BooleanObject"
        DomainJoinInfo:
          $ref: "#/components/schemas/DomainJoinInfo"
        Tags:
          $ref: "#/components/schemas/Tags"
        IdleDisconnectTimeoutInSeconds:
          $ref: "#/components/schemas/Integer"
        IamRoleArn:
          $ref: "#/components/schemas/Arn"
    InvalidRoleException: {}
    InvalidParameterCombinationException: {}
    CreateImageBuilderResult:
      type: object
      properties:
        ImageBuilder:
          $ref: "#/components/schemas/ImageBuilder"
    CreateImageBuilderRequest:
      type: object
      required:
        - Name
        - InstanceType
      properties:
        Name:
          $ref: "#/components/schemas/Name"
        ImageName:
          $ref: "#/components/schemas/String"
        ImageArn:
          $ref: "#/components/schemas/Arn"
        InstanceType:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/Description"
        DisplayName:
          $ref: "#/components/schemas/DisplayName"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
        IamRoleArn:
          $ref: "#/components/schemas/Arn"
        EnableDefaultInternetAccess:
          $ref: "#/components/schemas/BooleanObject"
        DomainJoinInfo:
          $ref: "#/components/schemas/DomainJoinInfo"
        AppstreamAgentVersion:
          $ref: "#/components/schemas/AppstreamAgentVersion"
        Tags:
          $ref: "#/components/schemas/Tags"
        AccessEndpoints:
          $ref: "#/components/schemas/AccessEndpointList"
    CreateImageBuilderStreamingURLResult:
      type: object
      properties:
        StreamingURL:
          $ref: "#/components/schemas/String"
        Expires:
          $ref: "#/components/schemas/Timestamp"
    CreateImageBuilderStreamingURLRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/String"
        Validity:
          $ref: "#/components/schemas/Long"
    CreateStackResult:
      type: object
      properties:
        Stack:
          $ref: "#/components/schemas/Stack"
    CreateStackRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/Name"
        Description:
          $ref: "#/components/schemas/Description"
        DisplayName:
          $ref: "#/components/schemas/DisplayName"
        StorageConnectors:
          $ref: "#/components/schemas/StorageConnectorList"
        RedirectURL:
          $ref: "#/components/schemas/RedirectURL"
        FeedbackURL:
          $ref: "#/components/schemas/FeedbackURL"
        UserSettings:
          $ref: "#/components/schemas/UserSettingList"
        ApplicationSettings:
          $ref: "#/components/schemas/ApplicationSettings"
        Tags:
          $ref: "#/components/schemas/Tags"
        AccessEndpoints:
          $ref: "#/components/schemas/AccessEndpointList"
    CreateStreamingURLResult:
      type: object
      properties:
        StreamingURL:
          $ref: "#/components/schemas/String"
        Expires:
          $ref: "#/components/schemas/Timestamp"
    CreateStreamingURLRequest:
      type: object
      required:
        - StackName
        - FleetName
        - UserId
      properties:
        StackName:
          $ref: "#/components/schemas/String"
        FleetName:
          $ref: "#/components/schemas/String"
        UserId:
          $ref: "#/components/schemas/StreamingUrlUserId"
        ApplicationId:
          $ref: "#/components/schemas/String"
        Validity:
          $ref: "#/components/schemas/Long"
        SessionContext:
          $ref: "#/components/schemas/String"
    CreateUsageReportSubscriptionResult:
      type: object
      properties:
        S3BucketName:
          $ref: "#/components/schemas/String"
        Schedule:
          $ref: "#/components/schemas/UsageReportSchedule"
    CreateUsageReportSubscriptionRequest:
      type: object
      properties: {}
    CreateUserResult:
      type: object
      properties: {}
    CreateUserRequest:
      type: object
      required:
        - UserName
        - AuthenticationType
      properties:
        UserName:
          $ref: "#/components/schemas/Username"
        MessageAction:
          $ref: "#/components/schemas/MessageAction"
        FirstName:
          $ref: "#/components/schemas/UserAttributeValue"
        LastName:
          $ref: "#/components/schemas/UserAttributeValue"
        AuthenticationType:
          $ref: "#/components/schemas/AuthenticationType"
    DeleteDirectoryConfigResult:
      type: object
      properties: {}
    DeleteDirectoryConfigRequest:
      type: object
      required:
        - DirectoryName
      properties:
        DirectoryName:
          $ref: "#/components/schemas/DirectoryName"
    ResourceInUseException: {}
    DeleteFleetResult:
      type: object
      properties: {}
    DeleteFleetRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/String"
    DeleteImageResult:
      type: object
      properties:
        Image:
          $ref: "#/components/schemas/Image"
    DeleteImageRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/Name"
    DeleteImageBuilderResult:
      type: object
      properties:
        ImageBuilder:
          $ref: "#/components/schemas/ImageBuilder"
    DeleteImageBuilderRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/Name"
    DeleteImagePermissionsResult:
      type: object
      properties: {}
    DeleteImagePermissionsRequest:
      type: object
      required:
        - Name
        - SharedAccountId
      properties:
        Name:
          $ref: "#/components/schemas/Name"
        SharedAccountId:
          $ref: "#/components/schemas/AwsAccountId"
    DeleteStackResult:
      type: object
      properties: {}
    DeleteStackRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/String"
    DeleteUsageReportSubscriptionResult:
      type: object
      properties: {}
    DeleteUsageReportSubscriptionRequest:
      type: object
      properties: {}
    DeleteUserResult:
      type: object
      properties: {}
    DeleteUserRequest:
      type: object
      required:
        - UserName
        - AuthenticationType
      properties:
        UserName:
          $ref: "#/components/schemas/Username"
        AuthenticationType:
          $ref: "#/components/schemas/AuthenticationType"
    DescribeDirectoryConfigsResult:
      type: object
      properties:
        DirectoryConfigs:
          $ref: "#/components/schemas/DirectoryConfigList"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeDirectoryConfigsRequest:
      type: object
      properties:
        DirectoryNames:
          $ref: "#/components/schemas/DirectoryNameList"
        MaxResults:
          $ref: "#/components/schemas/Integer"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeFleetsResult:
      type: object
      properties:
        Fleets:
          $ref: "#/components/schemas/FleetList"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeFleetsRequest:
      type: object
      properties:
        Names:
          $ref: "#/components/schemas/StringList"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeImageBuildersResult:
      type: object
      properties:
        ImageBuilders:
          $ref: "#/components/schemas/ImageBuilderList"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeImageBuildersRequest:
      type: object
      properties:
        Names:
          $ref: "#/components/schemas/StringList"
        MaxResults:
          $ref: "#/components/schemas/Integer"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeImagePermissionsResult:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/Name"
        SharedImagePermissionsList:
          $ref: "#/components/schemas/SharedImagePermissionsList"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeImagePermissionsRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/Name"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        SharedAwsAccountIds:
          $ref: "#/components/schemas/AwsAccountIdList"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeImagesResult:
      type: object
      properties:
        Images:
          $ref: "#/components/schemas/ImageList"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeImagesRequest:
      type: object
      properties:
        Names:
          $ref: "#/components/schemas/StringList"
        Arns:
          $ref: "#/components/schemas/ArnList"
        Type:
          $ref: "#/components/schemas/VisibilityType"
        NextToken:
          $ref: "#/components/schemas/String"
        MaxResults:
          $ref: "#/components/schemas/DescribeImagesMaxResults"
    DescribeSessionsResult:
      type: object
      properties:
        Sessions:
          $ref: "#/components/schemas/SessionList"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeSessionsRequest:
      type: object
      required:
        - StackName
        - FleetName
      properties:
        StackName:
          $ref: "#/components/schemas/String"
        FleetName:
          $ref: "#/components/schemas/String"
        UserId:
          $ref: "#/components/schemas/UserId"
        NextToken:
          $ref: "#/components/schemas/String"
        Limit:
          $ref: "#/components/schemas/Integer"
        AuthenticationType:
          $ref: "#/components/schemas/AuthenticationType"
    DescribeStacksResult:
      type: object
      properties:
        Stacks:
          $ref: "#/components/schemas/StackList"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeStacksRequest:
      type: object
      properties:
        Names:
          $ref: "#/components/schemas/StringList"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeUsageReportSubscriptionsResult:
      type: object
      properties:
        UsageReportSubscriptions:
          $ref: "#/components/schemas/UsageReportSubscriptionList"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeUsageReportSubscriptionsRequest:
      type: object
      properties:
        MaxResults:
          $ref: "#/components/schemas/Integer"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeUserStackAssociationsResult:
      type: object
      properties:
        UserStackAssociations:
          $ref: "#/components/schemas/UserStackAssociationList"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeUserStackAssociationsRequest:
      type: object
      properties:
        StackName:
          $ref: "#/components/schemas/String"
        UserName:
          $ref: "#/components/schemas/Username"
        AuthenticationType:
          $ref: "#/components/schemas/AuthenticationType"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeUsersResult:
      type: object
      properties:
        Users:
          $ref: "#/components/schemas/UserList"
        NextToken:
          $ref: "#/components/schemas/String"
    DescribeUsersRequest:
      type: object
      required:
        - AuthenticationType
      properties:
        AuthenticationType:
          $ref: "#/components/schemas/AuthenticationType"
        MaxResults:
          $ref: "#/components/schemas/Integer"
        NextToken:
          $ref: "#/components/schemas/String"
    DisableUserResult:
      type: object
      properties: {}
    DisableUserRequest:
      type: object
      required:
        - UserName
        - AuthenticationType
      properties:
        UserName:
          $ref: "#/components/schemas/Username"
        AuthenticationType:
          $ref: "#/components/schemas/AuthenticationType"
    DisassociateFleetResult:
      type: object
      properties: {}
    DisassociateFleetRequest:
      type: object
      required:
        - FleetName
        - StackName
      properties:
        FleetName:
          $ref: "#/components/schemas/String"
        StackName:
          $ref: "#/components/schemas/String"
    EnableUserResult:
      type: object
      properties: {}
    EnableUserRequest:
      type: object
      required:
        - UserName
        - AuthenticationType
      properties:
        UserName:
          $ref: "#/components/schemas/Username"
        AuthenticationType:
          $ref: "#/components/schemas/AuthenticationType"
    ExpireSessionResult:
      type: object
      properties: {}
    ExpireSessionRequest:
      type: object
      required:
        - SessionId
      properties:
        SessionId:
          $ref: "#/components/schemas/String"
    ListAssociatedFleetsResult:
      type: object
      properties:
        Names:
          $ref: "#/components/schemas/StringList"
        NextToken:
          $ref: "#/components/schemas/String"
    ListAssociatedFleetsRequest:
      type: object
      required:
        - StackName
      properties:
        StackName:
          $ref: "#/components/schemas/String"
        NextToken:
          $ref: "#/components/schemas/String"
    ListAssociatedStacksResult:
      type: object
      properties:
        Names:
          $ref: "#/components/schemas/StringList"
        NextToken:
          $ref: "#/components/schemas/String"
    ListAssociatedStacksRequest:
      type: object
      required:
        - FleetName
      properties:
        FleetName:
          $ref: "#/components/schemas/String"
        NextToken:
          $ref: "#/components/schemas/String"
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: "#/components/schemas/Tags"
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceArn
      properties:
        ResourceArn:
          $ref: "#/components/schemas/Arn"
    StartFleetResult:
      type: object
      properties: {}
    StartFleetRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/String"
    StartImageBuilderResult:
      type: object
      properties:
        ImageBuilder:
          $ref: "#/components/schemas/ImageBuilder"
    StartImageBuilderRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/String"
        AppstreamAgentVersion:
          $ref: "#/components/schemas/AppstreamAgentVersion"
    StopFleetResult:
      type: object
      properties: {}
    StopFleetRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/String"
    StopImageBuilderResult:
      type: object
      properties:
        ImageBuilder:
          $ref: "#/components/schemas/ImageBuilder"
    StopImageBuilderRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/String"
    TagResourceResponse:
      type: object
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - ResourceArn
        - Tags
      properties:
        ResourceArn:
          $ref: "#/components/schemas/Arn"
        Tags:
          $ref: "#/components/schemas/Tags"
    UntagResourceResponse:
      type: object
      properties: {}
    UntagResourceRequest:
      type: object
      required:
        - ResourceArn
        - TagKeys
      properties:
        ResourceArn:
          $ref: "#/components/schemas/Arn"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
    UpdateDirectoryConfigResult:
      type: object
      properties:
        DirectoryConfig:
          $ref: "#/components/schemas/DirectoryConfig"
    UpdateDirectoryConfigRequest:
      type: object
      required:
        - DirectoryName
      properties:
        DirectoryName:
          $ref: "#/components/schemas/DirectoryName"
        OrganizationalUnitDistinguishedNames:
          $ref: "#/components/schemas/OrganizationalUnitDistinguishedNamesList"
        ServiceAccountCredentials:
          $ref: "#/components/schemas/ServiceAccountCredentials"
    UpdateFleetResult:
      type: object
      properties:
        Fleet:
          $ref: "#/components/schemas/Fleet"
    UpdateFleetRequest:
      type: object
      properties:
        ImageName:
          $ref: "#/components/schemas/String"
        ImageArn:
          $ref: "#/components/schemas/Arn"
        Name:
          $ref: "#/components/schemas/String"
        InstanceType:
          $ref: "#/components/schemas/String"
        ComputeCapacity:
          $ref: "#/components/schemas/ComputeCapacity"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
        MaxUserDurationInSeconds:
          $ref: "#/components/schemas/Integer"
        DisconnectTimeoutInSeconds:
          $ref: "#/components/schemas/Integer"
        DeleteVpcConfig:
          $ref: "#/components/schemas/Boolean"
        Description:
          $ref: "#/components/schemas/Description"
        DisplayName:
          $ref: "#/components/schemas/DisplayName"
        EnableDefaultInternetAccess:
          $ref: "#/components/schemas/BooleanObject"
        DomainJoinInfo:
          $ref: "#/components/schemas/DomainJoinInfo"
        IdleDisconnectTimeoutInSeconds:
          $ref: "#/components/schemas/Integer"
        AttributesToDelete:
          $ref: "#/components/schemas/FleetAttributes"
        IamRoleArn:
          $ref: "#/components/schemas/Arn"
    UpdateImagePermissionsResult:
      type: object
      properties: {}
    UpdateImagePermissionsRequest:
      type: object
      required:
        - Name
        - SharedAccountId
        - ImagePermissions
      properties:
        Name:
          $ref: "#/components/schemas/Name"
        SharedAccountId:
          $ref: "#/components/schemas/AwsAccountId"
        ImagePermissions:
          $ref: "#/components/schemas/ImagePermissions"
    UpdateStackResult:
      type: object
      properties:
        Stack:
          $ref: "#/components/schemas/Stack"
    UpdateStackRequest:
      type: object
      required:
        - Name
      properties:
        DisplayName:
          $ref: "#/components/schemas/DisplayName"
        Description:
          $ref: "#/components/schemas/Description"
        Name:
          $ref: "#/components/schemas/String"
        StorageConnectors:
          $ref: "#/components/schemas/StorageConnectorList"
        DeleteStorageConnectors:
          $ref: "#/components/schemas/Boolean"
        RedirectURL:
          $ref: "#/components/schemas/RedirectURL"
        FeedbackURL:
          $ref: "#/components/schemas/FeedbackURL"
        AttributesToDelete:
          $ref: "#/components/schemas/StackAttributes"
        UserSettings:
          $ref: "#/components/schemas/UserSettingList"
        ApplicationSettings:
          $ref: "#/components/schemas/ApplicationSettings"
        AccessEndpoints:
          $ref: "#/components/schemas/AccessEndpointList"
    AccessEndpointType:
      type: string
      enum:
        - STREAMING
    String:
      type: string
      minLength: 1
    AccessEndpoint:
      type: object
      required:
        - EndpointType
      properties:
        EndpointType:
          $ref: "#/components/schemas/AccessEndpointType"
        VpceId:
          $ref: "#/components/schemas/String"
      description: Describes an interface VPC endpoint (interface endpoint) that lets you
        create a private connection between the virtual private cloud (VPC) that
        you specify and AppStream 2.0. When you specify an interface endpoint
        for a stack, users of the stack can connect to AppStream 2.0 only
        through that endpoint. When you specify an interface endpoint for an
        image builder, administrators can connect to the image builder only
        through that endpoint.
    AccessEndpointList:
      type: array
      items:
        $ref: "#/components/schemas/AccessEndpoint"
      minItems: 1
      maxItems: 4
    AccountName:
      type: string
      minLength: 1
      format: password
    AccountPassword:
      type: string
      minLength: 1
      maxLength: 127
      format: password
    Action:
      type: string
      enum:
        - CLIPBOARD_COPY_FROM_LOCAL_DEVICE
        - CLIPBOARD_COPY_TO_LOCAL_DEVICE
        - FILE_UPLOAD
        - FILE_DOWNLOAD
        - PRINTING_TO_LOCAL_DEVICE
    Boolean:
      type: boolean
    Metadata:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/String"
    Application:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/String"
        DisplayName:
          $ref: "#/components/schemas/String"
        IconURL:
          $ref: "#/components/schemas/String"
        LaunchPath:
          $ref: "#/components/schemas/String"
        LaunchParameters:
          $ref: "#/components/schemas/String"
        Enabled:
          $ref: "#/components/schemas/Boolean"
        Metadata:
          $ref: "#/components/schemas/Metadata"
      description: Describes an application in the application catalog.
    SettingsGroup:
      type: string
      maxLength: 100
    ApplicationSettings:
      type: object
      required:
        - Enabled
      properties:
        Enabled:
          $ref: "#/components/schemas/Boolean"
        SettingsGroup:
          $ref: "#/components/schemas/SettingsGroup"
      description: The persistent application settings for users of a stack.
    ApplicationSettingsResponse:
      type: object
      properties:
        Enabled:
          $ref: "#/components/schemas/Boolean"
        SettingsGroup:
          $ref: "#/components/schemas/SettingsGroup"
        S3BucketName:
          $ref: "#/components/schemas/String"
      description: Describes the persistent application settings for users of a stack.
    Applications:
      type: array
      items:
        $ref: "#/components/schemas/Application"
    AppstreamAgentVersion:
      type: string
      minLength: 1
      maxLength: 100
    Arn:
      type: string
      pattern: ^arn:aws:[A-Za-z0-9][A-Za-z0-9_/.-]{0,62}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9_/.-]{0,63}:[A-Za-z0-9][A-Za-z0-9:_/+=,@.-]{0,1023}$
    ArnList:
      type: array
      items:
        $ref: "#/components/schemas/Arn"
    AuthenticationType:
      type: string
      enum:
        - API
        - SAML
        - USERPOOL
    AwsAccountId:
      type: string
      pattern: ^\d+$
    AwsAccountIdList:
      type: array
      items:
        $ref: "#/components/schemas/AwsAccountId"
      minItems: 1
      maxItems: 5
    UserStackAssociationList:
      type: array
      items:
        $ref: "#/components/schemas/UserStackAssociation"
      minItems: 1
      maxItems: 25
    UserStackAssociationErrorList:
      type: array
      items:
        $ref: "#/components/schemas/UserStackAssociationError"
    BooleanObject:
      type: boolean
    Integer:
      type: integer
    ComputeCapacity:
      type: object
      required:
        - DesiredInstances
      properties:
        DesiredInstances:
          $ref: "#/components/schemas/Integer"
      description: Describes the capacity for a fleet.
    ComputeCapacityStatus:
      type: object
      required:
        - Desired
      properties:
        Desired:
          $ref: "#/components/schemas/Integer"
        Running:
          $ref: "#/components/schemas/Integer"
        InUse:
          $ref: "#/components/schemas/Integer"
        Available:
          $ref: "#/components/schemas/Integer"
      description: Describes the capacity status for a fleet.
    Name:
      type: string
      pattern: ^[a-zA-Z0-9][a-zA-Z0-9_.-]{0,100}$
    RegionName:
      type: string
      minLength: 1
      maxLength: 32
    Description:
      type: string
      maxLength: 256
    DirectoryName:
      type: string
    OrganizationalUnitDistinguishedNamesList:
      type: array
      items:
        $ref: "#/components/schemas/OrganizationalUnitDistinguishedName"
    ServiceAccountCredentials:
      type: object
      required:
        - AccountName
        - AccountPassword
      properties:
        AccountName:
          $ref: "#/components/schemas/AccountName"
        AccountPassword:
          $ref: "#/components/schemas/AccountPassword"
      description: Describes the credentials for the service account used by the fleet or
        image builder to connect to the directory.
    DirectoryConfig:
      type: object
      required:
        - DirectoryName
      properties:
        DirectoryName:
          $ref: "#/components/schemas/DirectoryName"
        OrganizationalUnitDistinguishedNames:
          $ref: "#/components/schemas/OrganizationalUnitDistinguishedNamesList"
        ServiceAccountCredentials:
          $ref: "#/components/schemas/ServiceAccountCredentials"
        CreatedTime:
          $ref: "#/components/schemas/Timestamp"
      description: Describes the configuration information required to join fleets and
        image builders to Microsoft Active Directory domains.
    FleetType:
      type: string
      enum:
        - ALWAYS_ON
        - ON_DEMAND
    VpcConfig:
      type: object
      properties:
        SubnetIds:
          $ref: "#/components/schemas/SubnetIdList"
        SecurityGroupIds:
          $ref: "#/components/schemas/SecurityGroupIdList"
      description: Describes VPC configuration information for fleets and image builders.
    DisplayName:
      type: string
      maxLength: 100
    DomainJoinInfo:
      type: object
      properties:
        DirectoryName:
          $ref: "#/components/schemas/DirectoryName"
        OrganizationalUnitDistinguishedName:
          $ref: "#/components/schemas/OrganizationalUnitDistinguishedName"
      description: Describes the configuration information required to join fleets and
        image builders to Microsoft Active Directory domains.
    Tags:
      type: object
      minProperties: 1
      maxProperties: 50
      additionalProperties:
        $ref: "#/components/schemas/TagValue"
    Fleet:
      type: object
      required:
        - Arn
        - Name
        - InstanceType
        - ComputeCapacityStatus
        - State
      properties:
        Arn:
          $ref: "#/components/schemas/Arn"
        Name:
          $ref: "#/components/schemas/String"
        DisplayName:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        ImageName:
          $ref: "#/components/schemas/String"
        ImageArn:
          $ref: "#/components/schemas/Arn"
        InstanceType:
          $ref: "#/components/schemas/String"
        FleetType:
          $ref: "#/components/schemas/FleetType"
        ComputeCapacityStatus:
          $ref: "#/components/schemas/ComputeCapacityStatus"
        MaxUserDurationInSeconds:
          $ref: "#/components/schemas/Integer"
        DisconnectTimeoutInSeconds:
          $ref: "#/components/schemas/Integer"
        State:
          $ref: "#/components/schemas/FleetState"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
        CreatedTime:
          $ref: "#/components/schemas/Timestamp"
        FleetErrors:
          $ref: "#/components/schemas/FleetErrors"
        EnableDefaultInternetAccess:
          $ref: "#/components/schemas/BooleanObject"
        DomainJoinInfo:
          $ref: "#/components/schemas/DomainJoinInfo"
        IdleDisconnectTimeoutInSeconds:
          $ref: "#/components/schemas/Integer"
        IamRoleArn:
          $ref: "#/components/schemas/Arn"
      description: Describes a fleet.
    ImageBuilder:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/String"
        Arn:
          $ref: "#/components/schemas/Arn"
        ImageArn:
          $ref: "#/components/schemas/Arn"
        Description:
          $ref: "#/components/schemas/String"
        DisplayName:
          $ref: "#/components/schemas/String"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
        InstanceType:
          $ref: "#/components/schemas/String"
        Platform:
          $ref: "#/components/schemas/PlatformType"
        IamRoleArn:
          $ref: "#/components/schemas/Arn"
        State:
          $ref: "#/components/schemas/ImageBuilderState"
        StateChangeReason:
          $ref: "#/components/schemas/ImageBuilderStateChangeReason"
        CreatedTime:
          $ref: "#/components/schemas/Timestamp"
        EnableDefaultInternetAccess:
          $ref: "#/components/schemas/BooleanObject"
        DomainJoinInfo:
          $ref: "#/components/schemas/DomainJoinInfo"
        NetworkAccessConfiguration:
          $ref: "#/components/schemas/NetworkAccessConfiguration"
        ImageBuilderErrors:
          $ref: "#/components/schemas/ResourceErrors"
        AppstreamAgentVersion:
          $ref: "#/components/schemas/AppstreamAgentVersion"
        AccessEndpoints:
          $ref: "#/components/schemas/AccessEndpointList"
      description: "Describes a virtual machine that is used to create an image. "
    Long:
      type: integer
    Timestamp:
      type: string
      format: date-time
    StorageConnectorList:
      type: array
      description: The storage connectors.
      items:
        $ref: "#/components/schemas/StorageConnector"
    RedirectURL:
      type: string
      maxLength: 1000
    FeedbackURL:
      type: string
      maxLength: 1000
    UserSettingList:
      type: array
      items:
        $ref: "#/components/schemas/UserSetting"
      minItems: 1
    Stack:
      type: object
      required:
        - Name
      properties:
        Arn:
          $ref: "#/components/schemas/Arn"
        Name:
          $ref: "#/components/schemas/String"
        Description:
          $ref: "#/components/schemas/String"
        DisplayName:
          $ref: "#/components/schemas/String"
        CreatedTime:
          $ref: "#/components/schemas/Timestamp"
        StorageConnectors:
          $ref: "#/components/schemas/StorageConnectorList"
        RedirectURL:
          $ref: "#/components/schemas/RedirectURL"
        FeedbackURL:
          $ref: "#/components/schemas/FeedbackURL"
        StackErrors:
          $ref: "#/components/schemas/StackErrors"
        UserSettings:
          $ref: "#/components/schemas/UserSettingList"
        ApplicationSettings:
          $ref: "#/components/schemas/ApplicationSettingsResponse"
        AccessEndpoints:
          $ref: "#/components/schemas/AccessEndpointList"
      description: Describes a stack.
    StreamingUrlUserId:
      type: string
      pattern: "[\\w+=,.@-]*"
      minLength: 2
      maxLength: 32
    UsageReportSchedule:
      type: string
      enum:
        - DAILY
    Username:
      type: string
      pattern: "[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+"
      minLength: 1
      maxLength: 128
      format: password
    MessageAction:
      type: string
      enum:
        - SUPPRESS
        - RESEND
    UserAttributeValue:
      type: string
      pattern: ^[A-Za-z0-9_\-\s]+$
      maxLength: 2048
      format: password
    Image:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/String"
        Arn:
          $ref: "#/components/schemas/Arn"
        BaseImageArn:
          $ref: "#/components/schemas/Arn"
        DisplayName:
          $ref: "#/components/schemas/String"
        State:
          $ref: "#/components/schemas/ImageState"
        Visibility:
          $ref: "#/components/schemas/VisibilityType"
        ImageBuilderSupported:
          $ref: "#/components/schemas/Boolean"
        ImageBuilderName:
          $ref: "#/components/schemas/String"
        Platform:
          $ref: "#/components/schemas/PlatformType"
        Description:
          $ref: "#/components/schemas/String"
        StateChangeReason:
          $ref: "#/components/schemas/ImageStateChangeReason"
        Applications:
          $ref: "#/components/schemas/Applications"
        CreatedTime:
          $ref: "#/components/schemas/Timestamp"
        PublicBaseImageReleasedDate:
          $ref: "#/components/schemas/Timestamp"
        AppstreamAgentVersion:
          $ref: "#/components/schemas/AppstreamAgentVersion"
        ImagePermissions:
          $ref: "#/components/schemas/ImagePermissions"
      description: Describes an image.
    DirectoryNameList:
      type: array
      items:
        $ref: "#/components/schemas/DirectoryName"
    DirectoryConfigList:
      type: array
      items:
        $ref: "#/components/schemas/DirectoryConfig"
    StringList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    FleetList:
      type: array
      description: The fleets.
      items:
        $ref: "#/components/schemas/Fleet"
    ImageBuilderList:
      type: array
      items:
        $ref: "#/components/schemas/ImageBuilder"
    MaxResults:
      type: integer
      minimum: 0
      maximum: 500
    SharedImagePermissionsList:
      type: array
      items:
        $ref: "#/components/schemas/SharedImagePermissions"
    DescribeImagesMaxResults:
      type: integer
      minimum: 0
      maximum: 25
    VisibilityType:
      type: string
      enum:
        - PUBLIC
        - PRIVATE
        - SHARED
    ImageList:
      type: array
      items:
        $ref: "#/components/schemas/Image"
    UserId:
      type: string
      minLength: 2
      maxLength: 32
    SessionList:
      type: array
      description: List of sessions.
      items:
        $ref: "#/components/schemas/Session"
    StackList:
      type: array
      description: The stacks.
      items:
        $ref: "#/components/schemas/Stack"
    UsageReportSubscriptionList:
      type: array
      items:
        $ref: "#/components/schemas/UsageReportSubscription"
    UserList:
      type: array
      items:
        $ref: "#/components/schemas/User"
    Domain:
      type: string
      description: GSuite domain for GDrive integration.
      maxLength: 64
    OrganizationalUnitDistinguishedName:
      type: string
      maxLength: 2000
    DomainList:
      type: array
      items:
        $ref: "#/components/schemas/Domain"
      maxItems: 10
    FleetState:
      type: string
      enum:
        - STARTING
        - RUNNING
        - STOPPING
        - STOPPED
    FleetErrors:
      type: array
      items:
        $ref: "#/components/schemas/FleetError"
    FleetAttribute:
      type: string
      enum:
        - VPC_CONFIGURATION
        - VPC_CONFIGURATION_SECURITY_GROUP_IDS
        - DOMAIN_JOIN_INFO
        - IAM_ROLE_ARN
      description: The fleet attribute.
    FleetAttributes:
      type: array
      description: The fleet attributes.
      items:
        $ref: "#/components/schemas/FleetAttribute"
    FleetErrorCode:
      type: string
      enum:
        - IAM_SERVICE_ROLE_MISSING_ENI_DESCRIBE_ACTION
        - IAM_SERVICE_ROLE_MISSING_ENI_CREATE_ACTION
        - IAM_SERVICE_ROLE_MISSING_ENI_DELETE_ACTION
        - NETWORK_INTERFACE_LIMIT_EXCEEDED
        - INTERNAL_SERVICE_ERROR
        - IAM_SERVICE_ROLE_IS_MISSING
        - MACHINE_ROLE_IS_MISSING
        - STS_DISABLED_IN_REGION
        - SUBNET_HAS_INSUFFICIENT_IP_ADDRESSES
        - IAM_SERVICE_ROLE_MISSING_DESCRIBE_SUBNET_ACTION
        - SUBNET_NOT_FOUND
        - IMAGE_NOT_FOUND
        - INVALID_SUBNET_CONFIGURATION
        - SECURITY_GROUPS_NOT_FOUND
        - IGW_NOT_ATTACHED
        - IAM_SERVICE_ROLE_MISSING_DESCRIBE_SECURITY_GROUPS_ACTION
        - DOMAIN_JOIN_ERROR_FILE_NOT_FOUND
        - DOMAIN_JOIN_ERROR_ACCESS_DENIED
        - DOMAIN_JOIN_ERROR_LOGON_FAILURE
        - DOMAIN_JOIN_ERROR_INVALID_PARAMETER
        - DOMAIN_JOIN_ERROR_MORE_DATA
        - DOMAIN_JOIN_ERROR_NO_SUCH_DOMAIN
        - DOMAIN_JOIN_ERROR_NOT_SUPPORTED
        - DOMAIN_JOIN_NERR_INVALID_WORKGROUP_NAME
        - DOMAIN_JOIN_NERR_WORKSTATION_NOT_STARTED
        - DOMAIN_JOIN_ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED
        - DOMAIN_JOIN_NERR_PASSWORD_EXPIRED
        - DOMAIN_JOIN_INTERNAL_SERVICE_ERROR
    FleetError:
      type: object
      properties:
        ErrorCode:
          $ref: "#/components/schemas/FleetErrorCode"
        ErrorMessage:
          $ref: "#/components/schemas/String"
      description: Describes a fleet error.
    ImageState:
      type: string
      enum:
        - PENDING
        - AVAILABLE
        - FAILED
        - COPYING
        - DELETING
    PlatformType:
      type: string
      enum:
        - WINDOWS
        - WINDOWS_SERVER_2016
        - WINDOWS_SERVER_2019
    ImageStateChangeReason:
      type: object
      properties:
        Code:
          $ref: "#/components/schemas/ImageStateChangeReasonCode"
        Message:
          $ref: "#/components/schemas/String"
      description: Describes the reason why the last image state change occurred.
    ImagePermissions:
      type: object
      properties:
        allowFleet:
          $ref: "#/components/schemas/BooleanObject"
        allowImageBuilder:
          $ref: "#/components/schemas/BooleanObject"
      description: "Describes the permissions for an image. "
    ImageBuilderState:
      type: string
      enum:
        - PENDING
        - UPDATING_AGENT
        - RUNNING
        - STOPPING
        - STOPPED
        - REBOOTING
        - SNAPSHOTTING
        - DELETING
        - FAILED
    ImageBuilderStateChangeReason:
      type: object
      properties:
        Code:
          $ref: "#/components/schemas/ImageBuilderStateChangeReasonCode"
        Message:
          $ref: "#/components/schemas/String"
      description: Describes the reason why the last image builder state change occurred.
    NetworkAccessConfiguration:
      type: object
      properties:
        EniPrivateIpAddress:
          $ref: "#/components/schemas/String"
        EniId:
          $ref: "#/components/schemas/String"
      description: Describes the network details of the fleet or image builder instance.
    ResourceErrors:
      type: array
      items:
        $ref: "#/components/schemas/ResourceError"
    ImageBuilderStateChangeReasonCode:
      type: string
      enum:
        - INTERNAL_ERROR
        - IMAGE_UNAVAILABLE
    ImageStateChangeReasonCode:
      type: string
      enum:
        - INTERNAL_ERROR
        - IMAGE_BUILDER_NOT_AVAILABLE
        - IMAGE_COPY_FAILURE
    UsageReportExecutionErrorCode:
      type: string
      enum:
        - RESOURCE_NOT_FOUND
        - ACCESS_DENIED
        - INTERNAL_SERVICE_ERROR
    LastReportGenerationExecutionError:
      type: object
      properties:
        ErrorCode:
          $ref: "#/components/schemas/UsageReportExecutionErrorCode"
        ErrorMessage:
          $ref: "#/components/schemas/String"
      description: Describes the error that is returned when a usage report can't be
        generated.
    LastReportGenerationExecutionErrors:
      type: array
      items:
        $ref: "#/components/schemas/LastReportGenerationExecutionError"
    Permission:
      type: string
      enum:
        - ENABLED
        - DISABLED
    ResourceError:
      type: object
      properties:
        ErrorCode:
          $ref: "#/components/schemas/FleetErrorCode"
        ErrorMessage:
          $ref: "#/components/schemas/String"
        ErrorTimestamp:
          $ref: "#/components/schemas/Timestamp"
      description: Describes a resource error.
    ResourceIdentifier:
      type: string
      description: The ARN of the resource.
      minLength: 1
    SecurityGroupIdList:
      type: array
      description: The security group identifiers.
      items:
        $ref: "#/components/schemas/String"
      maxItems: 5
    SessionState:
      type: string
      enum:
        - ACTIVE
        - PENDING
        - EXPIRED
      description: Possible values for the state of a streaming session.
    SessionConnectionState:
      type: string
      enum:
        - CONNECTED
        - NOT_CONNECTED
    Session:
      type: object
      required:
        - Id
        - UserId
        - StackName
        - FleetName
        - State
      properties:
        Id:
          $ref: "#/components/schemas/String"
        UserId:
          $ref: "#/components/schemas/UserId"
        StackName:
          $ref: "#/components/schemas/String"
        FleetName:
          $ref: "#/components/schemas/String"
        State:
          $ref: "#/components/schemas/SessionState"
        ConnectionState:
          $ref: "#/components/schemas/SessionConnectionState"
        StartTime:
          $ref: "#/components/schemas/Timestamp"
        MaxExpirationTime:
          $ref: "#/components/schemas/Timestamp"
        AuthenticationType:
          $ref: "#/components/schemas/AuthenticationType"
        NetworkAccessConfiguration:
          $ref: "#/components/schemas/NetworkAccessConfiguration"
      description: Describes a streaming session.
    SharedImagePermissions:
      type: object
      required:
        - sharedAccountId
        - imagePermissions
      properties:
        sharedAccountId:
          $ref: "#/components/schemas/AwsAccountId"
        imagePermissions:
          $ref: "#/components/schemas/ImagePermissions"
      description: Describes the permissions that are available to the specified AWS
        account for a shared image.
    StackErrors:
      type: array
      description: The stack errors.
      items:
        $ref: "#/components/schemas/StackError"
    StackAttribute:
      type: string
      enum:
        - STORAGE_CONNECTORS
        - STORAGE_CONNECTOR_HOMEFOLDERS
        - STORAGE_CONNECTOR_GOOGLE_DRIVE
        - STORAGE_CONNECTOR_ONE_DRIVE
        - REDIRECT_URL
        - FEEDBACK_URL
        - THEME_NAME
        - USER_SETTINGS
        - IAM_ROLE_ARN
        - ACCESS_ENDPOINTS
    StackAttributes:
      type: array
      items:
        $ref: "#/components/schemas/StackAttribute"
    StackErrorCode:
      type: string
      enum:
        - STORAGE_CONNECTOR_ERROR
        - INTERNAL_SERVICE_ERROR
    StackError:
      type: object
      properties:
        ErrorCode:
          $ref: "#/components/schemas/StackErrorCode"
        ErrorMessage:
          $ref: "#/components/schemas/String"
      description: Describes a stack error.
    StorageConnectorType:
      type: string
      enum:
        - HOMEFOLDERS
        - GOOGLE_DRIVE
        - ONE_DRIVE
      description: The type of storage connector.
    StorageConnector:
      type: object
      required:
        - ConnectorType
      properties:
        ConnectorType:
          $ref: "#/components/schemas/StorageConnectorType"
        ResourceIdentifier:
          $ref: "#/components/schemas/ResourceIdentifier"
        Domains:
          $ref: "#/components/schemas/DomainList"
      description: Describes a connector that enables persistent storage for users.
    SubnetIdList:
      type: array
      description: The subnet identifiers.
      items:
        $ref: "#/components/schemas/String"
    TagKey:
      type: string
      pattern: ^(^(?!aws:).[\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
      minItems: 1
      maxItems: 50
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 256
    UsageReportSubscription:
      type: object
      properties:
        S3BucketName:
          $ref: "#/components/schemas/String"
        Schedule:
          $ref: "#/components/schemas/UsageReportSchedule"
        LastGeneratedReportDate:
          $ref: "#/components/schemas/Timestamp"
        SubscriptionErrors:
          $ref: "#/components/schemas/LastReportGenerationExecutionErrors"
      description: Describes information about the usage report subscription.
    User:
      type: object
      required:
        - AuthenticationType
      properties:
        Arn:
          $ref: "#/components/schemas/Arn"
        UserName:
          $ref: "#/components/schemas/Username"
        Enabled:
          $ref: "#/components/schemas/Boolean"
        Status:
          $ref: "#/components/schemas/String"
        FirstName:
          $ref: "#/components/schemas/UserAttributeValue"
        LastName:
          $ref: "#/components/schemas/UserAttributeValue"
        CreatedTime:
          $ref: "#/components/schemas/Timestamp"
        AuthenticationType:
          $ref: "#/components/schemas/AuthenticationType"
      description: Describes a user in the user pool.
    UserSetting:
      type: object
      required:
        - Action
        - Permission
      properties:
        Action:
          $ref: "#/components/schemas/Action"
        Permission:
          $ref: "#/components/schemas/Permission"
      description: Describes an action and whether the action is enabled or disabled for
        users during their streaming sessions.
    UserStackAssociation:
      type: object
      required:
        - StackName
        - UserName
        - AuthenticationType
      properties:
        StackName:
          $ref: "#/components/schemas/String"
        UserName:
          $ref: "#/components/schemas/Username"
        AuthenticationType:
          $ref: "#/components/schemas/AuthenticationType"
        SendEmailNotification:
          $ref: "#/components/schemas/Boolean"
      description: Describes a user in the user pool and the associated stack.
    UserStackAssociationErrorCode:
      type: string
      enum:
        - STACK_NOT_FOUND
        - USER_NAME_NOT_FOUND
        - INTERNAL_ERROR
    UserStackAssociationError:
      type: object
      properties:
        UserStackAssociation:
          $ref: "#/components/schemas/UserStackAssociation"
        ErrorCode:
          $ref: "#/components/schemas/UserStackAssociationErrorCode"
        ErrorMessage:
          $ref: "#/components/schemas/String"
      description: "Describes the error that is returned when a user can’t be associated
        with or disassociated from a stack. "
