openapi: 3.0.0
info:
  title: Run History APIs
  version: 2019-08-01
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/machinelearningservices/data-plane/Microsoft.MachineLearningServices/preview/2019-08-01/runHistory.json
      version: "2.0"
  x-providerName: azure.com
  x-serviceName: machinelearningservices-runHistory
  x-tags:
    - Azure
    - Microsoft
security:
  - azure_auth:
      - user_impersonation
tags: []
paths:
  "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experimentids/{experimentId}":
    get:
      description: Get details of an Experiment with specific Experiment Id.
      operationId: Experiments_GetById
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The identifier of the experiment.
          in: path
          name: experimentId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Experiment"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Get details of an Experiment.
      tags:
        - Experiments
    patch:
      description: Update details of an Experiment with specific Experiment Id.
      operationId: Experiments_Update
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The identifier of the experiment.
          in: path
          name: experimentId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModifyExperiment"
        description: Experiment details which needs to be updated.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Experiment"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Update details of an Experiment.
      tags:
        - Experiments
  "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experimentids/{experimentId}/tags":
    delete:
      description: Delete list of Tags from a specific Experiment Id.
      operationId: Experiments_DeleteTags
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The identifier of the experiment.
          in: path
          name: experimentId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteTagsCommand"
        description: The requested tags list to be deleted.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Experiment"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Delete list of Tags in an Experiment.
      tags:
        - Experiments
  "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}":
    get:
      description: Get details of an Experiment with specific Experiment name.
      operationId: Experiments_Get
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The experiment name.
          in: path
          name: experimentName
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The details of the Experiment are returned successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Experiment"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Get details of an Experiment.
      tags:
        - Experiments
    post:
      description: Create a new Experiment.
      operationId: Experiments_Create
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The experiment name.
          in: path
          name: experimentName
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The Experiment is created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Experiment"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Create an Experiment.
      tags:
        - Experiments
  "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/batch/events":
    post:
      description: Post event data to a specific Run Id.
      operationId: Events_BatchPost
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The experiment name.
          in: path
          name: experimentName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchEventCommand"
        description: The batch of Event details.
      responses:
        "200":
          description: The batch of Events is posted successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchEventCommandResult"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Batch post event data.
      tags:
        - Events
  "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/batch/runs":
    patch:
      description: Add or Modify a batch of Runs for a given experiment.
      operationId: Runs_BatchAddOrModify
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The experiment name.
          in: path
          name: experimentName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchAddOrModifyRunRequest"
        description: The list of requested Run Additions/modifications in an Experiment.
      responses:
        "200":
          description: The Batch Runs are added/modified successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchAddOrModifyRunResult"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Add or Modify a batch of Runs.
      tags:
        - Run
  "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/metrics/{metricId}":
    get:
      description: Get Metric details for a specific Metric Id.
      operationId: RunMetrics_Get
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The experiment name.
          in: path
          name: experimentName
          required: true
          schema:
            type: string
        - description: The identifier for a Metric.
          in: path
          name: metricId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunMetric"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Get Metric details.
      tags:
        - RunMetrics
  "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/metrics:query":
    post:
      description: Get all Run Metrics for the specific Experiment with the specified query
        filters.
      operationId: RunMetrics_GetByQuery
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The experiment name.
          in: path
          name: experimentName
          required: true
          schema:
            type: string
        - description: "The type of merge strategy. Currently supported strategies are:\r

            None - all logged values are returned as individual
            metrics.\r

            MergeToVector - merges multiple values into a vector of
            values.\r

            Default - the system determines the behavior."
          in: query
          name: MergeStrategyType
          required: false
          schema:
            type: string
            enum:
              - Default
              - None
              - MergeToVector
        - description: Controls behavior of the merge strategy in certain cases; e.g. when
            a metric is not merged.
          in: query
          name: MergeStrategyOptions
          required: false
          schema:
            type: string
            enum:
              - None
              - ReportUnmergedMetricsValues
        - description: The strategy settings version.
          in: query
          name: MergeStrategySettings.Version
          required: false
          schema:
            type: string
        - description: Defines how to select metrics when merging them together.
          in: query
          name: MergeStrategySettings.SelectMetrics
          required: false
          schema:
            type: string
            enum:
              - SelectAll
              - SelectByFirstValueSchema
              - SelectByFirstValueSchemaMergeNumericValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryParams"
        description: Query Parameters for data sorting and filtering.
      responses:
        "200":
          description: The Run Metrics are returned successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedRunMetricList"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Get all Run Metrics for the specific Experiment.
      tags:
        - RunMetrics
      x-ms-pageable:
        nextLinkName: nextLink
  "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}":
    get:
      description: Get Run details of a specific Run Id.
      operationId: Runs_Get
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The experiment name.
          in: path
          name: experimentName
          required: true
          schema:
            type: string
        - description: The identifier of the Run.
          in: path
          name: runId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The details of the Run are returned successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Run"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Get Run details.
      tags:
        - Run
    patch:
      description: Add a new Run or Modify an existing Run.
      operationId: Runs_Patch
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The experiment name.
          in: path
          name: experimentName
          required: true
          schema:
            type: string
        - description: The identifier of the Run.
          in: path
          name: runId
          required: true
          schema:
            type: string
            pattern: ^[a-zA-Z0-9][\w-]{0,255}$
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRun"
        description: The requested Run parameter Additions/modifications.
      responses:
        "200":
          description: The Run is added/modified successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Run"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Add or Modify a Run.
      tags:
        - Run
  "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/artifacts":
    get:
      description: Get Artifacts in container for a specific Run Id.
      operationId: RunArtifacts_ListInContainer
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The experiment name.
          in: path
          name: experimentName
          required: true
          schema:
            type: string
        - description: The identifier of the Run.
          in: path
          name: runId
          required: true
          schema:
            type: string
        - description: The Continuation Token.
          in: query
          name: continuationToken
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The Artifacts in Container are returned successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedArtifactList"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Get Artifacts in a container.
      tags:
        - RunArtifacts
      x-ms-pageable:
        nextLinkName: nextLink
  "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/artifacts/artifacturi":
    get:
      description: Get URI of an Artifact for a specific Run Id.
      operationId: RunArtifacts_GetSasUri
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The experiment name.
          in: path
          name: experimentName
          required: true
          schema:
            type: string
        - description: The identifier of the Run.
          in: path
          name: runId
          required: true
          schema:
            type: string
        - description: The Artifact Path.
          in: query
          name: path
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: string
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Get URI of an Artifact.
      tags:
        - RunArtifacts
  "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/artifacts/batch/metadata":
    post:
      description: Create a batch of empty Artifacts in a specific Run.
      operationId: RunArtifacts_BatchCreateEmptyArtifacts
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The experiment name.
          in: path
          name: experimentName
          required: true
          schema:
            type: string
        - description: The identifier of the Run.
          in: path
          name: runId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ArtifactPathList"
        description: The list of artifact paths.
      responses:
        "200":
          description: The Batch Artifacts are created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchArtifactContentInformationResult"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Create a batch of empty Artifacts.
      tags:
        - RunArtifacts
  "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/artifacts/contentinfo":
    get:
      description: Get Artifact content information for give Run Id.
      operationId: RunArtifacts_GetContentInformation
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The experiment name.
          in: path
          name: experimentName
          required: true
          schema:
            type: string
        - description: The identifier of the Run.
          in: path
          name: runId
          required: true
          schema:
            type: string
        - description: The Artifact Path.
          in: query
          name: path
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The Artifact content information is returned successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArtifactContentInformation"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Get Artifact content information.
      tags:
        - RunArtifacts
  "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/artifacts/metadata":
    get:
      description: Get Artifact for a specific Id.
      operationId: RunArtifacts_GetById
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The experiment name.
          in: path
          name: experimentName
          required: true
          schema:
            type: string
        - description: The identifier of the Run.
          in: path
          name: runId
          required: true
          schema:
            type: string
        - description: The Artifact Path.
          in: query
          name: path
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Artifact"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Get Artifact by Id.
      tags:
        - RunArtifacts
  "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/artifacts/path":
    get:
      description: Get Artifacts in the provided path for a specific Run Id.
      operationId: RunArtifacts_ListInPath
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The experiment name.
          in: path
          name: experimentName
          required: true
          schema:
            type: string
        - description: The identifier of the Run.
          in: path
          name: runId
          required: true
          schema:
            type: string
        - description: The Artifact Path.
          in: query
          name: path
          required: false
          schema:
            type: string
        - description: The Continuation Token.
          in: query
          name: continuationToken
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedArtifactList"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Get Artifacts in the provided path.
      tags:
        - RunArtifacts
      x-ms-pageable:
        nextLinkName: nextLink
  "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/artifacts/prefix/contentinfo":
    get:
      description: Get SAS of an Artifact in the specified path.
      operationId: RunArtifacts_ListSasByPrefix
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The experiment name.
          in: path
          name: experimentName
          required: true
          schema:
            type: string
        - description: The identifier of the Run.
          in: path
          name: runId
          required: true
          schema:
            type: string
        - description: The Artifact Path.
          in: query
          name: path
          required: false
          schema:
            type: string
        - description: The Continuation Token.
          in: query
          name: continuationToken
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedArtifactContentInformationList"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Get SAS of an Artifact.
      tags:
        - RunArtifacts
      x-ms-pageable:
        nextLinkName: nextLink
  "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/batch/metrics":
    post:
      description: Post Metrics to a specific Run Id.
      operationId: RunMetrics_BatchPost
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The experiment name.
          in: path
          name: experimentName
          required: true
          schema:
            type: string
        - description: The identifier for a run.
          in: path
          name: runId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchMetric"
        description: Details of the Metrics which will be added to the Run Id.
      responses:
        "200":
          description: The Run Metrics are posted successfully.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Post Metrics to a Run.
      tags:
        - RunMetrics
  "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/children":
    get:
      description: Get details of all child runs for the specified Run Id with the
        specified filters.
      operationId: Runs_GetChild
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The experiment name.
          in: path
          name: experimentName
          required: true
          schema:
            type: string
        - description: The identifier of the Run.
          in: path
          name: runId
          required: true
          schema:
            type: string
        - description: "Allows for filtering the collection of resources.\r

            The expression specified is evaluated for each resource
            in the collection, and only items where the expression evaluates to
            true are included in the response."
          in: query
          name: $filter
          required: false
          schema:
            type: string
        - description: The continuation token to use for getting the next set of resources.
          in: query
          name: $continuationtoken
          required: false
          schema:
            type: string
        - description: The list of resource properties to use for sorting the requested
            resources.
          in: query
          name: $orderby
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
            uniqueItems: false
        - description: The sort order of the returned resources. Not used, specify asc or
            desc after each property name in the OrderBy parameter.
          in: query
          name: $sortorder
          required: false
          schema:
            type: string
            enum:
              - Asc
              - Desc
        - description: "The maximum number of items in the resource collection to be
            included in the result.\r

            If not specified, all items are returned."
          in: query
          name: $top
          required: false
          schema:
            type: integer
            format: int32
        - description: Whether to include a count of the matching resources along with the
            resources returned in the response.
          in: query
          name: $count
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: The details of the child Runs are returned successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedRunList"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Get details of all child runs.
      tags:
        - Run
      x-ms-pageable:
        nextLinkName: nextLink
  "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/details":
    get:
      description: Get Run Details for a specific Run Id.
      operationId: Runs_GetDetails
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The experiment name.
          in: path
          name: experimentName
          required: true
          schema:
            type: string
        - description: The identifier of the Run.
          in: path
          name: runId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The details of the Run are returned successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunDetails"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Get Run Details.
      tags:
        - Run
  "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/events":
    post:
      description: Post event data to a specific Run Id.
      operationId: Events_Post
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The experiment name.
          in: path
          name: experimentName
          required: true
          schema:
            type: string
        - description: The identifier of the Run.
          in: path
          name: runId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BaseEvent"
        description: The Event details.
      responses:
        "200":
          description: The Event is posted successfully.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Post event data.
      tags:
        - Events
  "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/metrics":
    post:
      description: Post a Metric to a specific Run Id.
      operationId: RunMetrics_Post
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The experiment name.
          in: path
          name: experimentName
          required: true
          schema:
            type: string
        - description: The identifier for a run.
          in: path
          name: runId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Metric"
        description: Details of the metric which will be added to the Run Id.
      responses:
        "200":
          description: The Run Metric is posted successfully.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Post Metric to a Run.
      tags:
        - RunMetrics
  "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs/{runId}/tags":
    delete:
      description: Delete list of Tags from a specific Run Id.
      operationId: Runs_DeleteTags
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The experiment name.
          in: path
          name: experimentName
          required: true
          schema:
            type: string
        - description: The identifier of the Run.
          in: path
          name: runId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
              uniqueItems: false
        description: The requested tags list to be deleted.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Run"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Delete list of Tags in a Run.
      tags:
        - Run
  "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments/{experimentName}/runs:query":
    post:
      description: Get all Runs for a specific Experiment with the specified query filters.
      operationId: Runs_GetByQuery
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
        - description: The experiment name.
          in: path
          name: experimentName
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/QueryParams"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedRunList"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Get all Runs for a specific Experiment.
      tags:
        - Run
      x-ms-pageable:
        nextLinkName: nextLink
  "/history/v1.0/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.MachineLearningServices/workspaces/{workspaceName}/experiments:query":
    post:
      description: Get all experiments in a specific workspace with the specified query
        filters.
      operationId: Experiments_GetByQuery
      parameters:
        - $ref: "#/components/parameters/subscriptionIdParameter"
        - $ref: "#/components/parameters/resourceGroupNameParameter"
        - $ref: "#/components/parameters/workspaceNameParameter"
      requestBody:
        $ref: "#/components/requestBodies/QueryParams"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedExperimentList"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
      summary: Get all Experiments in a specific workspace.
      tags:
        - Experiments
      x-ms-pageable:
        nextLinkName: nextLink
servers:
  - url: https://azure.local
components:
  parameters:
    resourceGroupNameParameter:
      description: The Name of the resource group in which the workspace is located.
      in: path
      name: resourceGroupName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    subscriptionIdParameter:
      description: The Azure Subscription ID.
      in: path
      name: subscriptionId
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
        format: uuid
    workspaceNameParameter:
      description: The name of the workspace.
      in: path
      name: workspaceName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
  requestBodies:
    QueryParams:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/QueryParams"
      description: Query parameters for data sorting and filtering.
  securitySchemes:
    azure_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    Artifact:
      description: Details of an Artifact.
      properties:
        artifactId:
          description: The identifier of an Artifact. Format of ArtifactId -
            {Origin}/{Container}/{Path}.
          type: string
        container:
          description: The name of container. Artifacts can be grouped by container.
          type: string
        createdTime:
          description: The Date and Time at which the Artifact is created. The DateTime is
            in UTC.
          format: date-time
          readOnly: true
          type: string
        dataPath:
          $ref: "#/components/schemas/DataPath"
        etag:
          description: The Etag of the Artifact.
          readOnly: true
          type: string
        origin:
          description: The origin of the Artifact creation request. Available origins are
            'ExperimentRun', 'LocalUpload', 'WebUpload', 'Dataset' and
            'Unknown'.
          type: string
        path:
          description: The path to the Artifact in a container.
          type: string
      required:
        - origin
        - container
        - path
      type: object
    ArtifactContentInformation:
      description: Details of an Artifact Content Information.
      properties:
        container:
          description: The name of container. Artifacts can be grouped by container.
          type: string
        contentUri:
          description: The URI of the content.
          type: string
        origin:
          description: The origin of the Artifact creation request. Available origins are
            'ExperimentRun', 'LocalUpload', 'WebUpload', 'Dataset',
            'ComputeRecord', 'Metric', and 'Unknown'.
          type: string
        path:
          description: The path to the Artifact in a container.
          type: string
      type: object
    ArtifactPath:
      description: Details of an Artifact Path.
      properties:
        path:
          description: The path to the Artifact in a container.
          type: string
      required:
        - path
      type: object
    ArtifactPathList:
      description: Contains list of Artifact Paths.
      properties:
        paths:
          description: List of Artifact Paths.
          items:
            $ref: "#/components/schemas/ArtifactPath"
          type: array
          uniqueItems: false
      required:
        - paths
      type: object
    BaseEvent:
      description: Base event is the envelope used to post event data to the Event
        controller
      properties:
        data:
          type: object
        name:
          type: string
        timestamp:
          format: date-time
          type: string
      type: object
    BatchAddOrModifyRunRequest:
      properties:
        runs:
          items:
            $ref: "#/components/schemas/CreateRun"
          type: array
          uniqueItems: false
      type: object
    BatchAddOrModifyRunResult:
      properties:
        errors:
          additionalProperties:
            $ref: "#/components/schemas/ErrorResponse"
          type: object
        runs:
          additionalProperties:
            $ref: "#/components/schemas/Run"
          type: object
      type: object
    BatchArtifactContentInformationResult:
      description: Results of the Batch Artifact Content Information request.
      properties:
        artifactContentInformation:
          additionalProperties:
            $ref: "#/components/schemas/ArtifactContentInformation"
          description: Artifact Content Information details of the Artifact Ids requested.
          type: object
        artifacts:
          additionalProperties:
            $ref: "#/components/schemas/Artifact"
          description: Artifact details of the Artifact Ids requested.
          type: object
        errors:
          additionalProperties:
            $ref: "#/components/schemas/ErrorResponse"
          description: Errors occurred while fetching the requested Artifact Ids.
          type: object
      type: object
    BatchEventCommand:
      properties:
        events:
          items:
            $ref: "#/components/schemas/BaseEvent"
          type: array
          uniqueItems: false
      type: object
    BatchEventCommandResult:
      properties:
        errors:
          items:
            $ref: "#/components/schemas/KeyValuePairBaseEventErrorResponse"
          type: array
          uniqueItems: false
      type: object
    BatchMetric:
      properties:
        values:
          items:
            $ref: "#/components/schemas/Metric"
          type: array
          uniqueItems: false
      type: object
    CreateRun:
      properties:
        cancelUri:
          type: string
        createdFrom:
          $ref: "#/components/schemas/CreatedFrom"
        dataContainerId:
          type: string
        description:
          type: string
        diagnosticsUri:
          type: string
        endTimeUtc:
          description: The end time of the run in UTC.
          format: date-time
          type: string
        heartbeatEnabled:
          type: boolean
        hidden:
          type: boolean
        name:
          type: string
        options:
          $ref: "#/components/schemas/RunOptions"
        parentRunId:
          description: The parent of the run if the run is hierarchical; otherwise, Null.
          type: string
        properties:
          additionalProperties:
            type: string
          type: object
        runDefinition:
          type: object
        runId:
          description: The identifier for the run. Run IDs must be less than 256 characters
            and contain only alphanumeric characters with dashes and
            underscores.
          type: string
        runType:
          type: string
        scriptName:
          type: string
        startTimeUtc:
          description: The start time of the run in UTC.
          format: date-time
          type: string
        status:
          description: The status of the run. The Status string value maps to the RunStatus
            Enum.
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
        target:
          type: string
      type: object
    CreatedBy:
      properties:
        userName:
          description: "A user's full name or a service principal's app ID.\r

            This is PII and should never be logged."
          type: string
        userObjectId:
          description: "A user or service principal's object ID.\r

            This is PII and should never be logged."
          type: string
        userTenantId:
          description: A user or service principal's tenant ID.
          type: string
      type: object
    CreatedFrom:
      properties:
        location:
          type: string
        locationType:
          enum:
            - ArtifactId
          type: string
          x-ms-enum:
            modelAsString: false
            name: CreatedFromLocationType
        type:
          enum:
            - Notebook
          type: string
          x-ms-enum:
            modelAsString: false
            name: CreatedFromType
      type: object
    DataPath:
      properties:
        dataStoreName:
          type: string
        relativePath:
          type: string
        sqlDataPath:
          $ref: "#/components/schemas/SqlDataPath"
      type: object
    DeleteTagsCommand:
      properties:
        tags:
          items:
            type: string
          type: array
          uniqueItems: false
      type: object
    ErrorDetails:
      description: The error details.
      properties:
        code:
          description: The error code.
          type: string
        message:
          description: The error message.
          type: string
        target:
          description: The target of the error (e.g., the name of the property in error).
          type: string
      type: object
    ErrorResponse:
      description: The error response.
      properties:
        correlation:
          additionalProperties:
            type: string
          description: Dictionary containing correlation details for the error.
          type: object
        environment:
          description: The hosting environment.
          type: string
        error:
          $ref: "#/components/schemas/RootError"
        location:
          description: The Azure region.
          type: string
        time:
          description: The time in UTC.
          format: date-time
          type: string
      type: object
    Experiment:
      properties:
        archivedTime:
          format: date-time
          type: string
        createdUtc:
          format: date-time
          type: string
        description:
          type: string
        experimentId:
          type: string
        latestCreatedRunCreatedUtc:
          format: date-time
          type: string
        latestCreatedRunId:
          type: string
        name:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    InnerErrorResponse:
      description: A nested structure of errors.
      properties:
        code:
          description: The error code.
          type: string
        innerError:
          $ref: "#/components/schemas/InnerErrorResponse"
      type: object
    KeyValuePairBaseEventErrorResponse:
      properties:
        key:
          $ref: "#/components/schemas/BaseEvent"
        value:
          $ref: "#/components/schemas/ErrorResponse"
      type: object
    Metric:
      properties:
        cells:
          items:
            additionalProperties:
              type: object
            type: object
          type: array
          uniqueItems: false
        createdUtc:
          format: date-time
          type: string
        dataContainerId:
          type: string
        dataLocation:
          type: string
        description:
          type: string
        label:
          type: string
        metricId:
          format: uuid
          type: string
        metricType:
          type: string
        name:
          type: string
        numCells:
          format: int32
          type: integer
        schema:
          $ref: "#/components/schemas/MetricSchema"
      type: object
    MetricSchema:
      properties:
        numProperties:
          format: int32
          type: integer
        properties:
          items:
            $ref: "#/components/schemas/MetricSchemaProperty"
          type: array
          uniqueItems: false
      type: object
    MetricSchemaProperty:
      properties:
        name:
          type: string
        propertyId:
          type: string
        type:
          type: string
      type: object
    ModifyExperiment:
      properties:
        archive:
          type: boolean
        description:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
      type: object
    PaginatedArtifactContentInformationList:
      description: A paginated list of ArtifactContentInformations.
      properties:
        continuationToken:
          description: The token used in retrieving the next page.  If null, there are no
            additional pages.
          type: string
        nextLink:
          description: The link to the next page constructed using the
            continuationToken.  If null, there are no additional pages.
          type: string
        value:
          description: An array of objects of type ArtifactContentInformation.
          items:
            $ref: "#/components/schemas/ArtifactContentInformation"
          type: array
          uniqueItems: false
      type: object
    PaginatedArtifactList:
      description: A paginated list of Artifacts.
      properties:
        continuationToken:
          description: The token used in retrieving the next page.  If null, there are no
            additional pages.
          type: string
        nextLink:
          description: The link to the next page constructed using the
            continuationToken.  If null, there are no additional pages.
          type: string
        value:
          description: An array of objects of type Artifact.
          items:
            $ref: "#/components/schemas/Artifact"
          type: array
          uniqueItems: false
      type: object
    PaginatedExperimentList:
      description: A paginated list of Experiments.
      properties:
        continuationToken:
          description: The token used in retrieving the next page.  If null, there are no
            additional pages.
          type: string
        nextLink:
          description: The link to the next page constructed using the
            continuationToken.  If null, there are no additional pages.
          type: string
        value:
          description: An array of objects of type Experiment.
          items:
            $ref: "#/components/schemas/Experiment"
          type: array
          uniqueItems: false
      type: object
    PaginatedRunList:
      description: A paginated list of Runs.
      properties:
        continuationToken:
          description: The token used in retrieving the next page.  If null, there are no
            additional pages.
          type: string
        nextLink:
          description: The link to the next page constructed using the
            continuationToken.  If null, there are no additional pages.
          type: string
        value:
          description: An array of objects of type Run.
          items:
            $ref: "#/components/schemas/Run"
          type: array
          uniqueItems: false
      type: object
    PaginatedRunMetricList:
      description: A paginated list of RunMetrics.
      properties:
        continuationToken:
          description: The token used in retrieving the next page.  If null, there are no
            additional pages.
          type: string
        nextLink:
          description: The link to the next page constructed using the
            continuationToken.  If null, there are no additional pages.
          type: string
        value:
          description: An array of objects of type RunMetric.
          items:
            $ref: "#/components/schemas/RunMetric"
          type: array
          uniqueItems: false
      type: object
    QueryParams:
      description: The set of supported filters.
      properties:
        continuationToken:
          description: The continuation token to use for getting the next set of resources.
          type: string
        filter:
          description: "Allows for filtering the collection of resources.\r

            The expression specified is evaluated for each resource
            in the collection, and only items where the expression evaluates to
            true are included in the response.\r

            See
            https://docs.microsoft.com/en-us/azure/search/query-odata-filter-or\
            derby-syntax for details on the expression syntax."
          type: string
        orderBy:
          description: "The comma separated list of resource properties to use for sorting
            the requested resources.\r

            Optionally, can be followed by either 'asc' or 'desc'"
          example: Color, Size desc
          type: string
        top:
          description: "The maximum number of items in the resource collection to be
            included in the result.\r

            If not specified, all items are returned."
          format: int32
          type: integer
      type: object
    RootError:
      description: The root error.
      properties:
        code:
          description: "The service-defined error code. Supported error codes:
            ServiceError, UserError, ValidationError, AzureStorageError,
            TransientError, RequestThrottled."
          type: string
        details:
          description: The related errors that occurred during the request.
          items:
            $ref: "#/components/schemas/ErrorDetails"
          type: array
          uniqueItems: false
        innerError:
          $ref: "#/components/schemas/InnerErrorResponse"
        message:
          description: A human-readable representation of the error.
          type: string
        target:
          description: The target of the error (e.g., the name of the property in error).
          type: string
      type: object
    Run:
      description: The definition of a Run.
      properties:
        cancelUri:
          type: string
        createdBy:
          $ref: "#/components/schemas/CreatedBy"
        createdFrom:
          $ref: "#/components/schemas/CreatedFrom"
        createdUtc:
          description: The time the run was created in UTC.
          format: date-time
          type: string
        dataContainerId:
          type: string
        description:
          type: string
        diagnosticsUri:
          type: string
        endTimeUtc:
          description: The end time of the run in UTC.
          format: date-time
          type: string
        error:
          $ref: "#/components/schemas/ErrorResponse"
        experimentId:
          description: The Id of the experiment that created this run.
          type: string
        heartbeatEnabled:
          type: boolean
        hidden:
          type: boolean
        name:
          type: string
        options:
          $ref: "#/components/schemas/RunOptions"
        parentRunId:
          description: The parent of the run if the run is hierarchical; otherwise, Null.
          type: string
        properties:
          additionalProperties:
            type: string
          type: object
        revision:
          format: int32
          type: integer
        rootRunId:
          type: string
        runDefinition:
          type: object
        runId:
          description: The identifier for the run. Run IDs must be less than 256 characters
            and contain only alphanumeric characters with dashes and
            underscores.
          type: string
        runNumber:
          format: int32
          type: integer
        runType:
          type: string
        scriptName:
          type: string
        startTimeUtc:
          description: The start time of the run in UTC.
          format: date-time
          type: string
        status:
          description: The status of the run. The Status string value maps to the RunStatus
            Enum.
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
        target:
          type: string
        token:
          description: A token used for authenticating a run.
          type: string
        tokenExpiryTimeUtc:
          description: The Token expiration time in UTC.
          format: date-time
          type: string
        userId:
          description: The Id of the user that created the run.
          type: string
        warnings:
          description: A list of warnings that occurred during the run.
          items:
            $ref: "#/components/schemas/RunDetailsWarning"
          type: array
          uniqueItems: false
      type: object
    RunDetails:
      description: The details of the run.
      properties:
        endTimeUtc:
          description: The end time of the run in UTC.
          format: date-time
          type: string
        error:
          $ref: "#/components/schemas/ErrorResponse"
        logFiles:
          additionalProperties:
            type: string
          type: object
        parentRunId:
          description: The parent of the run if the run is hierarchical.
          type: string
        properties:
          additionalProperties:
            type: string
          description: The properties dictionary for the run. Properties are immutable.
          type: object
        revision:
          format: int32
          type: integer
        runDefinition:
          description: The run definition specification.
          type: object
        runId:
          description: The identifier for the run.
          type: string
        startTimeUtc:
          description: The start time of the run in UTC.
          format: date-time
          type: string
        status:
          description: The status of the run. The Status string value maps to the RunStatus
            Enum.
          type: string
        tags:
          additionalProperties:
            type: string
          description: The tag dictionary for the run. Tags are mutable.
          type: object
        target:
          description: The name of the compute target where the run is executed.
          type: string
        warnings:
          description: A list of warnings that occurred during the run.
          items:
            $ref: "#/components/schemas/RunDetailsWarning"
          type: array
          uniqueItems: false
      type: object
    RunDetailsWarning:
      properties:
        message:
          type: string
        source:
          type: string
      type: object
    RunMetric:
      properties:
        cells:
          items:
            additionalProperties:
              type: object
            type: object
          type: array
          uniqueItems: false
        createdUtc:
          format: date-time
          type: string
        dataContainerId:
          type: string
        dataLocation:
          type: string
        description:
          type: string
        label:
          type: string
        metricId:
          format: uuid
          type: string
        metricType:
          type: string
        name:
          type: string
        numCells:
          format: int32
          type: integer
        runId:
          type: string
        schema:
          $ref: "#/components/schemas/MetricSchema"
      type: object
    RunOptions:
      properties:
        generateDataContainerIdIfNotSpecified:
          type: boolean
      type: object
    SqlDataPath:
      properties:
        sqlQuery:
          type: string
        sqlStoredProcedureName:
          type: string
        sqlStoredProcedureParams:
          items:
            $ref: "#/components/schemas/StoredProcedureParameter"
          type: array
          uniqueItems: false
        sqlTableName:
          type: string
      type: object
    StoredProcedureParameter:
      properties:
        name:
          type: string
        type:
          enum:
            - String
            - Int
            - Decimal
            - Guid
            - Boolean
            - Date
          type: string
          x-ms-enum:
            modelAsString: false
            name: StoredProcedureParameterType
        value:
          type: string
      type: object
