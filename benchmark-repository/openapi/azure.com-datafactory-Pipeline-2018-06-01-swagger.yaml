openapi: 3.0.0
info:
  title: DataFactoryManagementClient
  version: 2018-06-01
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/datafactory/resource-manager/Microsoft.DataFactory/stable/2018-06-01/entityTypes/Pipeline.json
      version: "2.0"
  x-preferred: true
  x-providerName: azure.com
  x-serviceName: datafactory-Pipeline
  x-tags:
    - Azure
    - Microsoft
paths: {}
servers:
  - url: https://azure.local
components:
  schemas:
    Activity:
      additionalProperties:
        type: object
      description: A pipeline activity.
      discriminator:
        propertyName: type
      properties:
        dependsOn:
          description: Activity depends on condition.
          items:
            $ref: "#/components/schemas/ActivityDependency"
          type: array
        description:
          description: Activity description.
          type: string
        name:
          description: Activity name.
          type: string
        type:
          description: Type of activity.
          type: string
        userProperties:
          description: Activity user properties.
          items:
            $ref: "#/components/schemas/UserProperty"
          type: array
      required:
        - name
        - type
      type: object
    ActivityDependency:
      additionalProperties:
        type: object
      description: Activity dependency information.
      properties:
        activity:
          description: Activity name.
          type: string
        dependencyConditions:
          description: Match-Condition for the dependency.
          items:
            enum:
              - Succeeded
              - Failed
              - Skipped
              - Completed
            type: string
            x-ms-enum:
              modelAsString: true
              name: DependencyCondition
          type: array
      required:
        - activity
        - dependencyConditions
      type: object
    ActivityPolicy:
      additionalProperties:
        type: object
      description: Execution policy for an activity.
      properties:
        retry:
          description: "Maximum ordinary retry attempts. Default is 0. Type: integer (or
            Expression with resultType integer), minimum: 0."
          type: object
        retryIntervalInSeconds:
          description: Interval between each retry attempt (in seconds). The default is 30
            sec.
          maximum: 86400
          minimum: 30
          type: integer
        secureInput:
          description: When set to true, Input from activity is considered as secure and
            will not be logged to monitoring.
          type: boolean
        secureOutput:
          description: When set to true, Output from activity is considered as secure and
            will not be logged to monitoring.
          type: boolean
        timeout:
          description: "Specifies the timeout for the activity to run. The default timeout
            is 7 days. Type: string (or Expression with resultType string),
            pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
          type: object
      type: object
    AmazonMWSSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Amazon Marketplace Web Service source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    AmazonRedshiftSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity source for Amazon Redshift Source.
      properties:
        query:
          description: "Database query. Type: string (or Expression with resultType
            string)."
          type: object
        redshiftUnloadSettings:
          $ref: "#/components/schemas/RedshiftUnloadSettings"
      type: object
    AmazonS3ReadSettings:
      allOf:
        - $ref: "#/components/schemas/StoreReadSettings"
      description: Azure data lake store read settings.
      properties:
        enablePartitionDiscovery:
          description: Indicates whether to enable partition discovery.
          type: boolean
        modifiedDatetimeEnd:
          description: "The end of file's modified datetime. Type: string (or Expression
            with resultType string)."
          type: object
        modifiedDatetimeStart:
          description: "The start of file's modified datetime. Type: string (or Expression
            with resultType string)."
          type: object
        prefix:
          description: "The prefix filter for the S3 object name. Type: string (or
            Expression with resultType string)."
          type: object
        recursive:
          description: "If true, files under the folder path will be read recursively.
            Default is true. Type: boolean (or Expression with resultType
            boolean)."
          type: object
        wildcardFileName:
          description: "AmazonS3 wildcardFileName. Type: string (or Expression with
            resultType string)."
          type: object
        wildcardFolderPath:
          description: "AmazonS3 wildcardFolderPath. Type: string (or Expression with
            resultType string)."
          type: object
      type: object
    AppendVariableActivity:
      allOf:
        - $ref: "#/components/schemas/ControlActivity"
      description: Append value for a Variable of type Array.
      properties:
        typeProperties:
          $ref: "#/components/schemas/AppendVariableActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: AppendVariable
    AppendVariableActivityTypeProperties:
      description: AppendVariable activity properties.
      properties:
        value:
          description: Value to be appended. Could be a static value or Expression
          type: object
        variableName:
          description: Name of the variable whose value needs to be appended to.
          type: string
    AvroSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Avro sink.
      properties:
        formatSettings:
          $ref: "#/components/schemas/AvroWriteSettings"
        storeSettings:
          $ref: "#/components/schemas/StoreWriteSettings"
      type: object
    AvroSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity Avro source.
      properties:
        storeSettings:
          $ref: "#/components/schemas/StoreReadSettings"
      type: object
    AvroWriteSettings:
      allOf:
        - $ref: "#/components/schemas/FormatWriteSettings"
      description: Avro write settings.
      properties:
        recordName:
          description: Top level record name in write result, which is required in AVRO
            spec.
          type: string
        recordNamespace:
          description: Record namespace in the write result.
          type: string
      type: object
    AzureBlobFSReadSettings:
      allOf:
        - $ref: "#/components/schemas/StoreReadSettings"
      description: Azure blobFS read settings.
      properties:
        enablePartitionDiscovery:
          description: Indicates whether to enable partition discovery.
          type: boolean
        modifiedDatetimeEnd:
          description: "The end of file's modified datetime. Type: string (or Expression
            with resultType string)."
          type: object
        modifiedDatetimeStart:
          description: "The start of file's modified datetime. Type: string (or Expression
            with resultType string)."
          type: object
        recursive:
          description: "If true, files under the folder path will be read recursively.
            Default is true. Type: boolean (or Expression with resultType
            boolean)."
          type: object
        wildcardFileName:
          description: "Azure blobFS wildcardFileName. Type: string (or Expression with
            resultType string)."
          type: object
        wildcardFolderPath:
          description: "Azure blobFS wildcardFolderPath. Type: string (or Expression with
            resultType string)."
          type: object
      type: object
    AzureBlobFSSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Azure Data Lake Storage Gen2 sink.
      properties:
        copyBehavior:
          description: The type of copy behavior for copy sink.
          type: object
      type: object
    AzureBlobFSSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity Azure BlobFS source.
      properties:
        recursive:
          description: "If true, files under the folder path will be read recursively.
            Default is true. Type: boolean (or Expression with resultType
            boolean)."
          type: object
        skipHeaderLineCount:
          description: "Number of header lines to skip from each blob. Type: integer (or
            Expression with resultType integer)."
          type: object
        treatEmptyAsNull:
          description: "Treat empty as null. Type: boolean (or Expression with resultType
            boolean)."
          type: object
      type: object
    AzureBlobFSWriteSettings:
      allOf:
        - $ref: "#/components/schemas/StoreWriteSettings"
      description: Azure blobFS write settings.
      properties:
        blockSizeInMB:
          description: "Indicates the block size(MB) when writing data to blob. Type:
            integer (or Expression with resultType integer)."
          type: object
      type: object
    AzureBlobStorageReadSettings:
      allOf:
        - $ref: "#/components/schemas/StoreReadSettings"
      description: Azure blob read settings.
      properties:
        enablePartitionDiscovery:
          description: Indicates whether to enable partition discovery.
          type: boolean
        modifiedDatetimeEnd:
          description: "The end of file's modified datetime. Type: string (or Expression
            with resultType string)."
          type: object
        modifiedDatetimeStart:
          description: "The start of file's modified datetime. Type: string (or Expression
            with resultType string)."
          type: object
        recursive:
          description: "If true, files under the folder path will be read recursively.
            Default is true. Type: boolean (or Expression with resultType
            boolean)."
          type: object
        wildcardFileName:
          description: "Azure blob wildcardFileName. Type: string (or Expression with
            resultType string)."
          type: object
        wildcardFolderPath:
          description: "Azure blob wildcardFolderPath. Type: string (or Expression with
            resultType string)."
          type: object
      type: object
    AzureBlobStorageWriteSettings:
      allOf:
        - $ref: "#/components/schemas/StoreWriteSettings"
      description: Azure blob write settings.
      properties:
        blockSizeInMB:
          description: "Indicates the block size(MB) when writing data to blob. Type:
            integer (or Expression with resultType integer)."
          type: object
      type: object
    AzureDataExplorerCommandActivity:
      allOf:
        - $ref: "#/components/schemas/ExecutionActivity"
      description: Azure Data Explorer command activity.
      properties:
        typeProperties:
          $ref: "#/components/schemas/AzureDataExplorerCommandActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: AzureDataExplorerCommand
    AzureDataExplorerCommandActivityTypeProperties:
      description: Azure Data Explorer command activity properties.
      properties:
        command:
          description: "A control command, according to the Azure Data Explorer command
            syntax. Type: string (or Expression with resultType string)."
          type: object
        commandTimeout:
          description: "Control command timeout. Type: string (or Expression with
            resultType string), pattern:
            ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))..)"
          type: object
      required:
        - command
    AzureDataExplorerSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Azure Data Explorer sink.
      properties:
        flushImmediately:
          description: "If set to true, any aggregation will be skipped. Default is false.
            Type: boolean."
          type: object
        ingestionMappingAsJson:
          description: "An explicit column mapping description provided in a json format.
            Type: string."
          type: object
        ingestionMappingName:
          description: "A name of a pre-created csv mapping that was defined on the target
            Kusto table. Type: string."
          type: object
      type: object
    AzureDataExplorerSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity Azure Data Explorer (Kusto) source.
      properties:
        noTruncation:
          description: The name of the Boolean option that controls whether truncation is
            applied to result-sets that go beyond a certain row-count limit.
          type: object
        query:
          description: "Database query. Should be a Kusto Query Language (KQL) query. Type:
            string (or Expression with resultType string)."
          type: object
        queryTimeout:
          description: "Query timeout. Type: string (or Expression with resultType string),
            pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9])).."
          type: object
      required:
        - query
      type: object
    AzureDataLakeStoreReadSettings:
      allOf:
        - $ref: "#/components/schemas/StoreReadSettings"
      description: Azure data lake store read settings.
      properties:
        enablePartitionDiscovery:
          description: Indicates whether to enable partition discovery.
          type: boolean
        modifiedDatetimeEnd:
          description: "The end of file's modified datetime. Type: string (or Expression
            with resultType string)."
          type: object
        modifiedDatetimeStart:
          description: "The start of file's modified datetime. Type: string (or Expression
            with resultType string)."
          type: object
        recursive:
          description: "If true, files under the folder path will be read recursively.
            Default is true. Type: boolean (or Expression with resultType
            boolean)."
          type: object
        wildcardFileName:
          description: "ADLS wildcardFileName. Type: string (or Expression with resultType
            string)."
          type: object
        wildcardFolderPath:
          description: "ADLS wildcardFolderPath. Type: string (or Expression with
            resultType string)."
          type: object
      type: object
    AzureDataLakeStoreSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Azure Data Lake Store sink.
      properties:
        copyBehavior:
          description: The type of copy behavior for copy sink.
          type: object
        enableAdlsSingleFileParallel:
          description: Single File Parallel.
          type: object
      type: object
    AzureDataLakeStoreSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity Azure Data Lake source.
      properties:
        recursive:
          description: "If true, files under the folder path will be read recursively.
            Default is true. Type: boolean (or Expression with resultType
            boolean)."
          type: object
      type: object
    AzureDataLakeStoreWriteSettings:
      allOf:
        - $ref: "#/components/schemas/StoreWriteSettings"
      description: Azure data lake store write settings.
      type: object
    AzureFileStorageReadSettings:
      allOf:
        - $ref: "#/components/schemas/StoreReadSettings"
      description: Azure File Storage read settings.
      properties:
        enablePartitionDiscovery:
          description: Indicates whether to enable partition discovery.
          type: boolean
        modifiedDatetimeEnd:
          description: "The end of file's modified datetime. Type: string (or Expression
            with resultType string)."
          type: object
        modifiedDatetimeStart:
          description: "The start of file's modified datetime. Type: string (or Expression
            with resultType string)."
          type: object
        recursive:
          description: "If true, files under the folder path will be read recursively.
            Default is true. Type: boolean (or Expression with resultType
            boolean)."
          type: object
        wildcardFileName:
          description: "Azure File Storage wildcardFileName. Type: string (or Expression
            with resultType string)."
          type: object
        wildcardFolderPath:
          description: "Azure File Storage wildcardFolderPath. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    AzureFunctionActivity:
      allOf:
        - $ref: "#/components/schemas/ExecutionActivity"
      description: Azure Function activity.
      properties:
        typeProperties:
          $ref: "#/components/schemas/AzureFunctionActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: AzureFunctionActivity
    AzureFunctionActivityMethod:
      description: The list of HTTP methods supported by a AzureFunctionActivity.
      enum:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
        - HEAD
        - TRACE
      type: string
      x-ms-enum:
        modelAsString: true
        name: AzureFunctionActivityMethod
    AzureFunctionActivityTypeProperties:
      description: Azure Function activity type properties.
      properties:
        body:
          description: "Represents the payload that will be sent to the endpoint. Required
            for POST/PUT method, not allowed for GET method Type: string (or
            Expression with resultType string)."
          type: object
        functionName:
          description: "Name of the Function that the Azure Function Activity will call.
            Type: string (or Expression with resultType string)"
          type: object
        headers:
          description: 'Represents the headers that will be sent to the request. For
            example, to set the language and type on a request: "headers" : {
            "Accept-Language": "en-us", "Content-Type": "application/json" }.
            Type: string (or Expression with resultType string).'
          type: object
        method:
          $ref: "#/components/schemas/AzureFunctionActivityMethod"
      required:
        - method
        - functionName
    AzureMLBatchExecutionActivity:
      allOf:
        - $ref: "#/components/schemas/ExecutionActivity"
      description: Azure ML Batch Execution activity.
      properties:
        typeProperties:
          $ref: "#/components/schemas/AzureMLBatchExecutionActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: AzureMLBatchExecution
    AzureMLBatchExecutionActivityTypeProperties:
      description: Azure ML Batch Execution activity properties.
      properties:
        globalParameters:
          additionalProperties:
            description: "Type: string (or Expression with resultType string)."
            type: object
          description: Key,Value pairs to be passed to the Azure ML Batch Execution Service
            endpoint. Keys must match the names of web service parameters
            defined in the published Azure ML web service. Values will be passed
            in the GlobalParameters property of the Azure ML batch execution
            request.
          type: object
        webServiceInputs:
          additionalProperties:
            $ref: "#/components/schemas/AzureMLWebServiceFile"
          description: Key,Value pairs, mapping the names of Azure ML endpoint's Web
            Service Inputs to AzureMLWebServiceFile objects specifying the input
            Blob locations.. This information will be passed in the
            WebServiceInputs property of the Azure ML batch execution request.
          type: object
        webServiceOutputs:
          additionalProperties:
            $ref: "#/components/schemas/AzureMLWebServiceFile"
          description: Key,Value pairs, mapping the names of Azure ML endpoint's Web
            Service Outputs to AzureMLWebServiceFile objects specifying the
            output Blob locations. This information will be passed in the
            WebServiceOutputs property of the Azure ML batch execution request.
          type: object
    AzureMLUpdateResourceActivity:
      allOf:
        - $ref: "#/components/schemas/ExecutionActivity"
      description: Azure ML Update Resource management activity.
      properties:
        typeProperties:
          $ref: "#/components/schemas/AzureMLUpdateResourceActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: AzureMLUpdateResource
    AzureMLUpdateResourceActivityTypeProperties:
      description: Azure ML Update Resource activity properties.
      properties:
        trainedModelFilePath:
          description: "The relative file path in trainedModelLinkedService to represent
            the .ilearner file that will be uploaded by the update
            operation.  Type: string (or Expression with resultType string)."
          type: object
        trainedModelLinkedServiceName:
          description: Linked service reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference LinkedService name.
              type: string
            type:
              description: Linked service reference type.
              enum:
                - LinkedServiceReference
              type: string
          required:
            - type
            - referenceName
        trainedModelName:
          description: "Name of the Trained Model module in the Web Service experiment to
            be updated. Type: string (or Expression with resultType string)."
          type: object
      required:
        - trainedModelName
        - trainedModelLinkedServiceName
        - trainedModelFilePath
    AzureMLWebServiceFile:
      description: Azure ML WebService Input/Output file
      properties:
        filePath:
          description: "The relative file path, including container name, in the Azure Blob
            Storage specified by the LinkedService. Type: string (or Expression
            with resultType string)."
          type: object
        linkedServiceName:
          description: Linked service reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference LinkedService name.
              type: string
            type:
              description: Linked service reference type.
              enum:
                - LinkedServiceReference
              type: string
          required:
            - type
            - referenceName
      required:
        - linkedServiceName
        - filePath
      type: object
    AzureMariaDBSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Azure MariaDB source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    AzureMySqlSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Azure MySql sink.
      properties:
        preCopyScript:
          description: "A query to execute before starting the copy. Type: string (or
            Expression with resultType string)."
          type: object
      type: object
    AzureMySqlSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Azure MySQL source.
      properties:
        query:
          description: "Database query. Type: string (or Expression with resultType
            string)."
          type: object
      type: object
    AzurePostgreSqlSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Azure PostgreSQL sink.
      properties:
        preCopyScript:
          description: "A query to execute before starting the copy. Type: string (or
            Expression with resultType string)."
          type: object
      type: object
    AzurePostgreSqlSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Azure PostgreSQL source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    AzureQueueSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Azure Queue sink.
      properties: {}
      type: object
    AzureSearchIndexSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Azure Search Index sink.
      properties:
        writeBehavior:
          description: Specify the write behavior when upserting documents into Azure
            Search Index.
          enum:
            - Merge
            - Upload
          type: string
          x-ms-enum:
            modelAsString: true
            name: AzureSearchIndexWriteBehaviorType
      type: object
    AzureSqlSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Azure SQL sink.
      properties:
        preCopyScript:
          description: "SQL pre-copy script. Type: string (or Expression with resultType
            string)."
          type: object
        sqlWriterStoredProcedureName:
          description: "SQL writer stored procedure name. Type: string (or Expression with
            resultType string)."
          type: object
        sqlWriterTableType:
          description: "SQL writer table type. Type: string (or Expression with resultType
            string)."
          type: object
        storedProcedureParameters:
          additionalProperties:
            $ref: "#/components/schemas/StoredProcedureParameter"
          description: SQL stored procedure parameters.
          type: object
        storedProcedureTableTypeParameterName:
          description: "The stored procedure parameter name of the table type. Type: string
            (or Expression with resultType string)."
          type: object
        tableOption:
          description: "The option to handle sink table, such as autoCreate. For now only
            'autoCreate' value is supported. Type: string (or Expression with
            resultType string)."
          type: object
      type: object
    AzureSqlSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Azure SQL source.
      properties:
        produceAdditionalTypes:
          description: Which additional types to produce.
          type: object
        sqlReaderQuery:
          description: "SQL reader query. Type: string (or Expression with resultType
            string)."
          type: object
        sqlReaderStoredProcedureName:
          description: "Name of the stored procedure for a SQL Database source. This cannot
            be used at the same time as SqlReaderQuery. Type: string (or
            Expression with resultType string)."
          type: object
        storedProcedureParameters:
          additionalProperties:
            $ref: "#/components/schemas/StoredProcedureParameter"
          description: 'Value and type setting for stored procedure parameters. Example:
            "{Parameter1: {value: "1", type: "int"}}".'
          type: object
      type: object
    AzureTableSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Azure Table sink.
      properties:
        azureTableDefaultPartitionKeyValue:
          description: "Azure Table default partition key value. Type: string (or
            Expression with resultType string)."
          type: object
        azureTableInsertType:
          description: "Azure Table insert type. Type: string (or Expression with
            resultType string)."
          type: object
        azureTablePartitionKeyName:
          description: "Azure Table partition key name. Type: string (or Expression with
            resultType string)."
          type: object
        azureTableRowKeyName:
          description: "Azure Table row key name. Type: string (or Expression with
            resultType string)."
          type: object
      type: object
    AzureTableSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Azure Table source.
      properties:
        azureTableSourceIgnoreTableNotFound:
          description: "Azure Table source ignore table not found. Type: boolean (or
            Expression with resultType boolean)."
          type: object
        azureTableSourceQuery:
          description: "Azure Table source query. Type: string (or Expression with
            resultType string)."
          type: object
      type: object
    BinarySink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Binary sink.
      properties:
        storeSettings:
          $ref: "#/components/schemas/StoreWriteSettings"
      type: object
    BinarySource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity Binary source.
      properties:
        storeSettings:
          $ref: "#/components/schemas/StoreReadSettings"
      type: object
    BlobSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Azure Blob sink.
      properties:
        blobWriterAddHeader:
          description: "Blob writer add header. Type: boolean (or Expression with
            resultType boolean)."
          type: object
        blobWriterDateTimeFormat:
          description: "Blob writer date time format. Type: string (or Expression with
            resultType string)."
          type: object
        blobWriterOverwriteFiles:
          description: "Blob writer overwrite files. Type: boolean (or Expression with
            resultType boolean)."
          type: object
        copyBehavior:
          description: The type of copy behavior for copy sink.
          type: object
      type: object
    BlobSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity Azure Blob source.
      properties:
        recursive:
          description: "If true, files under the folder path will be read recursively.
            Default is true. Type: boolean (or Expression with resultType
            boolean)."
          type: object
        skipHeaderLineCount:
          description: "Number of header lines to skip from each blob. Type: integer (or
            Expression with resultType integer)."
          type: object
        treatEmptyAsNull:
          description: "Treat empty as null. Type: boolean (or Expression with resultType
            boolean)."
          type: object
      type: object
    CassandraSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity source for a Cassandra database.
      properties:
        consistencyLevel:
          description: The consistency level specifies how many Cassandra servers must
            respond to a read request before returning data to the client
            application. Cassandra checks the specified number of Cassandra
            servers for data to satisfy the read request. Must be one of
            cassandraSourceReadConsistencyLevels. The default value is 'ONE'. It
            is case-insensitive.
          enum:
            - ALL
            - EACH_QUORUM
            - QUORUM
            - LOCAL_QUORUM
            - ONE
            - TWO
            - THREE
            - LOCAL_ONE
            - SERIAL
            - LOCAL_SERIAL
          type: string
          x-ms-enum:
            modelAsString: true
            name: CassandraSourceReadConsistencyLevels
        query:
          description: "Database query. Should be a SQL-92 query expression or Cassandra
            Query Language (CQL) command. Type: string (or Expression with
            resultType string)."
          type: object
      type: object
    CommonDataServiceForAppsSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Common Data Service for Apps sink.
      properties:
        alternateKeyName:
          description: "The logical name of the alternate key which will be used when
            upserting records. Type: string (or Expression with resultType
            string)."
          type: object
        ignoreNullValues:
          description: "The flag indicating whether to ignore null values from input
            dataset (except key fields) during write operation. Default is
            false. Type: boolean (or Expression with resultType boolean)."
          type: object
        writeBehavior:
          description: The write behavior for the operation.
          enum:
            - Upsert
          type: string
          x-ms-enum:
            modelAsString: true
            name: DynamicsSinkWriteBehavior
      required:
        - writeBehavior
      type: object
    CommonDataServiceForAppsSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity Common Data Service for Apps source.
      properties:
        query:
          description: "FetchXML is a proprietary query language that is used in Microsoft
            Common Data Service for Apps (online & on-premises). Type: string
            (or Expression with resultType string)."
          type: object
      type: object
    ConcurSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Concur Service source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    ControlActivity:
      allOf:
        - $ref: "#/components/schemas/Activity"
      description: Base class for all control activities like IfCondition, ForEach , Until.
      properties: {}
      x-ms-discriminator-value: Container
    CopyActivity:
      allOf:
        - $ref: "#/components/schemas/ExecutionActivity"
      description: Copy activity.
      properties:
        inputs:
          description: List of inputs for the activity.
          items:
            description: Dataset reference type.
            properties:
              parameters:
                additionalProperties:
                  type: object
                description: An object mapping parameter names to argument values.
                type: object
              referenceName:
                description: Reference dataset name.
                type: string
              type:
                description: Dataset reference type.
                enum:
                  - DatasetReference
                type: string
            required:
              - type
              - referenceName
          type: array
        outputs:
          description: List of outputs for the activity.
          items:
            description: Dataset reference type.
            properties:
              parameters:
                additionalProperties:
                  type: object
                description: An object mapping parameter names to argument values.
                type: object
              referenceName:
                description: Reference dataset name.
                type: string
              type:
                description: Dataset reference type.
                enum:
                  - DatasetReference
                type: string
            required:
              - type
              - referenceName
          type: array
        typeProperties:
          $ref: "#/components/schemas/CopyActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: Copy
    CopyActivityTypeProperties:
      description: Copy activity properties.
      properties:
        dataIntegrationUnits:
          description: "Maximum number of data integration units that can be used to
            perform this data movement. Type: integer (or Expression with
            resultType integer), minimum: 0."
          type: object
        enableSkipIncompatibleRow:
          description: "Whether to skip incompatible row. Default value is false. Type:
            boolean (or Expression with resultType boolean)."
          type: object
        enableStaging:
          description: "Specifies whether to copy data via an interim staging. Default
            value is false. Type: boolean (or Expression with resultType
            boolean)."
          type: object
        parallelCopies:
          description: "Maximum number of concurrent sessions opened on the source or sink
            to avoid overloading the data store. Type: integer (or Expression
            with resultType integer), minimum: 0."
          type: object
        preserve:
          description: Preserve rules.
          items:
            description: "Type: string (or Expression with resultType string)."
            type: object
          type: array
        preserveRules:
          description: Preserve Rules.
          items:
            description: "Type: string (or Expression with resultType string)."
            type: object
          type: array
        redirectIncompatibleRowSettings:
          $ref: "#/components/schemas/RedirectIncompatibleRowSettings"
        sink:
          $ref: "#/components/schemas/CopySink"
        source:
          $ref: "#/components/schemas/CopySource"
        stagingSettings:
          $ref: "#/components/schemas/StagingSettings"
        translator:
          description: Copy activity translator. If not specified, tabular translator is
            used.
          type: object
      required:
        - source
        - sink
    CopyBehaviorType:
      description: All available types of copy behavior.
      enum:
        - PreserveHierarchy
        - FlattenHierarchy
        - MergeFiles
      type: string
      x-ms-enum:
        modelAsString: true
        name: CopyBehaviorType
    CopySink:
      additionalProperties:
        type: object
      description: A copy activity sink.
      discriminator:
        propertyName: type
      properties:
        maxConcurrentConnections:
          description: "The maximum concurrent connection count for the sink data store.
            Type: integer (or Expression with resultType integer)."
          type: object
        sinkRetryCount:
          description: "Sink retry count. Type: integer (or Expression with resultType
            integer)."
          type: object
        sinkRetryWait:
          description: "Sink retry wait. Type: string (or Expression with resultType
            string), pattern:
            ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
          type: object
        type:
          description: Copy sink type.
          type: string
        writeBatchSize:
          description: "Write batch size. Type: integer (or Expression with resultType
            integer), minimum: 0."
          type: object
        writeBatchTimeout:
          description: "Write batch timeout. Type: string (or Expression with resultType
            string), pattern:
            ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
          type: object
      required:
        - type
      type: object
    CopySource:
      additionalProperties:
        type: object
      description: A copy activity source.
      discriminator:
        propertyName: type
      properties:
        maxConcurrentConnections:
          description: "The maximum concurrent connection count for the source data store.
            Type: integer (or Expression with resultType integer)."
          type: object
        sourceRetryCount:
          description: "Source retry count. Type: integer (or Expression with resultType
            integer)."
          type: object
        sourceRetryWait:
          description: "Source retry wait. Type: string (or Expression with resultType
            string), pattern:
            ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
          type: object
        type:
          description: Copy source type.
          type: string
      required:
        - type
      type: object
    CopyTranslator:
      additionalProperties:
        type: object
      description: A copy activity translator.
      discriminator:
        propertyName: type
      properties:
        type:
          description: Copy translator type.
          type: string
      required:
        - type
      type: object
    CosmosDbMongoDbApiSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity sink for a CosmosDB (MongoDB API) database.
      properties:
        writeBehavior:
          description: 'Specifies whether the document with same key to be overwritten
            (upsert) rather than throw exception (insert). The default value is
            "insert". Type: string (or Expression with resultType string). Type:
            string (or Expression with resultType string).'
          type: object
      type: object
    CosmosDbMongoDbApiSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity source for a CosmosDB (MongoDB API) database.
      properties:
        batchSize:
          description: "Specifies the number of documents to return in each batch of the
            response from MongoDB instance. In most cases, modifying the batch
            size will not affect the user or the application. This property's
            main purpose is to avoid hit the limitation of response size. Type:
            integer (or Expression with resultType integer)."
          type: object
        cursorMethods:
          $ref: "#/components/schemas/MongoDbCursorMethodsProperties"
        filter:
          description: "Specifies selection filter using query operators. To return all
            documents in a collection, omit this parameter or pass an empty
            document ({}). Type: string (or Expression with resultType string)."
          type: object
        queryTimeout:
          description: "Query timeout. Type: string (or Expression with resultType string),
            pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
          type: object
      type: object
    CosmosDbSqlApiSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Azure CosmosDB (SQL API) Collection sink.
      properties:
        writeBehavior:
          description: "Describes how to write data to Azure Cosmos DB. Type: string (or
            Expression with resultType string). Allowed values: insert and
            upsert."
          type: object
      type: object
    CosmosDbSqlApiSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity Azure CosmosDB (SQL API) Collection source.
      properties:
        pageSize:
          description: "Page size of the result. Type: integer (or Expression with
            resultType integer)."
          type: object
        preferredRegions:
          description: "Preferred regions. Type: array of strings (or Expression with
            resultType array of strings)."
          type: object
        query:
          description: "SQL API query. Type: string (or Expression with resultType string)."
          type: object
      type: object
    CouchbaseSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Couchbase server source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    CustomActivity:
      allOf:
        - $ref: "#/components/schemas/ExecutionActivity"
      description: Custom activity type.
      properties:
        typeProperties:
          $ref: "#/components/schemas/CustomActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: Custom
    CustomActivityReferenceObject:
      description: Reference objects for custom activity
      properties:
        datasets:
          description: Dataset references.
          items:
            description: Dataset reference type.
            properties:
              parameters:
                additionalProperties:
                  type: object
                description: An object mapping parameter names to argument values.
                type: object
              referenceName:
                description: Reference dataset name.
                type: string
              type:
                description: Dataset reference type.
                enum:
                  - DatasetReference
                type: string
            required:
              - type
              - referenceName
          type: array
        linkedServices:
          description: Linked service references.
          items:
            description: Linked service reference type.
            properties:
              parameters:
                additionalProperties:
                  type: object
                description: An object mapping parameter names to argument values.
                type: object
              referenceName:
                description: Reference LinkedService name.
                type: string
              type:
                description: Linked service reference type.
                enum:
                  - LinkedServiceReference
                type: string
            required:
              - type
              - referenceName
          type: array
    CustomActivityTypeProperties:
      description: Custom activity properties.
      properties:
        command:
          description: "Command for custom activity Type: string (or Expression with
            resultType string)."
          type: object
        extendedProperties:
          additionalProperties:
            description: "Type: string (or Expression with resultType string)."
            type: object
          description: User defined property bag. There is no restriction on the keys or
            values that can be used. The user specified custom activity has the
            full responsibility to consume and interpret the content defined.
          type: object
        folderPath:
          description: "Folder path for resource files Type: string (or Expression with
            resultType string)."
          type: object
        referenceObjects:
          $ref: "#/components/schemas/CustomActivityReferenceObject"
        resourceLinkedService:
          description: Linked service reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference LinkedService name.
              type: string
            type:
              description: Linked service reference type.
              enum:
                - LinkedServiceReference
              type: string
          required:
            - type
            - referenceName
        retentionTimeInDays:
          description: "The retention time for the files submitted for custom activity.
            Type: double (or Expression with resultType double)."
          type: object
      required:
        - command
    DataLakeAnalyticsUSQLActivity:
      allOf:
        - $ref: "#/components/schemas/ExecutionActivity"
      description: Data Lake Analytics U-SQL activity.
      properties:
        typeProperties:
          $ref: "#/components/schemas/DataLakeAnalyticsUSQLActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: DataLakeAnalyticsU-SQL
    DataLakeAnalyticsUSQLActivityTypeProperties:
      description: DataLakeAnalyticsU-SQL activity properties.
      properties:
        compilationMode:
          description: "Compilation mode of U-SQL. Must be one of these values : Semantic,
            Full and SingleBox. Type: string (or Expression with resultType
            string)."
          type: object
        degreeOfParallelism:
          description: "The maximum number of nodes simultaneously used to run the job.
            Default value is 1. Type: integer (or Expression with resultType
            integer), minimum: 1."
          type: object
        parameters:
          additionalProperties:
            description: "Type: string (or Expression with resultType string)."
            type: object
          description: Parameters for U-SQL job request.
          type: object
        priority:
          description: "Determines which jobs out of all that are queued should be selected
            to run first. The lower the number, the higher the priority. Default
            value is 1000. Type: integer (or Expression with resultType
            integer), minimum: 1."
          type: object
        runtimeVersion:
          description: "Runtime version of the U-SQL engine to use. Type: string (or
            Expression with resultType string)."
          type: object
        scriptLinkedService:
          description: Linked service reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference LinkedService name.
              type: string
            type:
              description: Linked service reference type.
              enum:
                - LinkedServiceReference
              type: string
          required:
            - type
            - referenceName
        scriptPath:
          description: "Case-sensitive path to folder that contains the U-SQL script. Type:
            string (or Expression with resultType string)."
          type: object
      required:
        - scriptPath
        - scriptLinkedService
    DatabricksNotebookActivity:
      allOf:
        - $ref: "#/components/schemas/ExecutionActivity"
      description: DatabricksNotebook activity.
      properties:
        typeProperties:
          $ref: "#/components/schemas/DatabricksNotebookActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: DatabricksNotebook
    DatabricksNotebookActivityTypeProperties:
      description: Databricks Notebook activity properties.
      properties:
        baseParameters:
          additionalProperties:
            description: "Type: string (or Expression with resultType string)."
            type: object
          description: Base parameters to be used for each run of this job.If the notebook
            takes a parameter that is not specified, the default value from the
            notebook will be used.
          type: object
        libraries:
          description: A list of libraries to be installed on the cluster that will execute
            the job.
          items:
            additionalProperties:
              type: object
            description: Databricks library definition.
            type: object
          type: array
        notebookPath:
          description: "The absolute path of the notebook to be run in the Databricks
            Workspace. This path must begin with a slash. Type: string (or
            Expression with resultType string)."
          type: object
      required:
        - notebookPath
    DatabricksSparkJarActivity:
      allOf:
        - $ref: "#/components/schemas/ExecutionActivity"
      description: DatabricksSparkJar activity.
      properties:
        typeProperties:
          $ref: "#/components/schemas/DatabricksSparkJarActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: DatabricksSparkJar
    DatabricksSparkJarActivityTypeProperties:
      description: Databricks SparkJar activity properties.
      properties:
        libraries:
          description: A list of libraries to be installed on the cluster that will execute
            the job.
          items:
            additionalProperties:
              type: object
            description: Databricks library definition.
            type: object
          type: array
        mainClassName:
          description: "The full name of the class containing the main method to be
            executed. This class must be contained in a JAR provided as a
            library. Type: string (or Expression with resultType string)."
          type: object
        parameters:
          description: Parameters that will be passed to the main method.
          items:
            description: "Type: string (or Expression with resultType string)."
            type: object
          type: array
      required:
        - mainClassName
    DatabricksSparkPythonActivity:
      allOf:
        - $ref: "#/components/schemas/ExecutionActivity"
      description: DatabricksSparkPython activity.
      properties:
        typeProperties:
          $ref: "#/components/schemas/DatabricksSparkPythonActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: DatabricksSparkPython
    DatabricksSparkPythonActivityTypeProperties:
      description: Databricks SparkPython activity properties.
      properties:
        libraries:
          description: A list of libraries to be installed on the cluster that will execute
            the job.
          items:
            additionalProperties:
              type: object
            description: Databricks library definition.
            type: object
          type: array
        parameters:
          description: Command line parameters that will be passed to the Python file.
          items:
            description: "Type: string (or Expression with resultType string)."
            type: object
          type: array
        pythonFile:
          description: "The URI of the Python file to be executed. DBFS paths are
            supported. Type: string (or Expression with resultType string)."
          type: object
      required:
        - pythonFile
    Db2Source:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity source for Db2 databases.
      properties:
        query:
          description: "Database query. Type: string (or Expression with resultType
            string)."
          type: object
      type: object
    DeleteActivity:
      allOf:
        - $ref: "#/components/schemas/ExecutionActivity"
      description: Delete activity.
      properties:
        typeProperties:
          $ref: "#/components/schemas/DeleteActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: Delete
    DeleteActivityTypeProperties:
      description: Delete activity properties.
      properties:
        dataset:
          description: Dataset reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference dataset name.
              type: string
            type:
              description: Dataset reference type.
              enum:
                - DatasetReference
              type: string
          required:
            - type
            - referenceName
        enableLogging:
          description: "Whether to record detailed logs of delete-activity execution.
            Default value is false. Type: boolean (or Expression with resultType
            boolean)."
          type: object
        logStorageSettings:
          $ref: "#/components/schemas/LogStorageSettings"
        maxConcurrentConnections:
          description: The max concurrent connections to connect data source at the same
            time.
          minimum: 1
          type: integer
        recursive:
          description: "If true, files or sub-folders under current folder path will be
            deleted recursively. Default is false. Type: boolean (or Expression
            with resultType boolean)."
          type: object
      required:
        - dataset
    DelimitedTextReadSettings:
      allOf:
        - $ref: "#/components/schemas/FormatReadSettings"
      description: Delimited text read settings.
      properties:
        skipLineCount:
          description: "Indicates the number of non-empty rows to skip when reading data
            from input files. Type: integer (or Expression with resultType
            integer)."
          type: object
      type: object
    DelimitedTextSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity DelimitedText sink.
      properties:
        formatSettings:
          $ref: "#/components/schemas/DelimitedTextWriteSettings"
        storeSettings:
          $ref: "#/components/schemas/StoreWriteSettings"
      type: object
    DelimitedTextSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity DelimitedText source.
      properties:
        formatSettings:
          $ref: "#/components/schemas/DelimitedTextReadSettings"
        storeSettings:
          $ref: "#/components/schemas/StoreReadSettings"
      type: object
    DelimitedTextWriteSettings:
      allOf:
        - $ref: "#/components/schemas/FormatWriteSettings"
      description: Delimited text write settings.
      properties:
        fileExtension:
          description: "The file extension used to create the files. Type: string (or
            Expression with resultType string)."
          type: object
        quoteAllText:
          description: "Indicates whether string values should always be enclosed with
            quotes. Type: boolean (or Expression with resultType boolean)."
          type: object
      required:
        - fileExtension
      type: object
    DistcpSettings:
      description: Distcp settings.
      properties:
        distcpOptions:
          description: "Specifies the Distcp options. Type: string (or Expression with
            resultType string)."
          type: object
        resourceManagerEndpoint:
          description: "Specifies the Yarn ResourceManager endpoint. Type: string (or
            Expression with resultType string)."
          type: object
        tempScriptPath:
          description: "Specifies an existing folder path which will be used to store temp
            Distcp command script. The script file is generated by ADF and will
            be removed after Copy job finished. Type: string (or Expression with
            resultType string)."
          type: object
      required:
        - resourceManagerEndpoint
        - tempScriptPath
      type: object
    DocumentDbCollectionSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Document Database Collection sink.
      properties:
        nestingSeparator:
          description: "Nested properties separator. Default is . (dot). Type: string (or
            Expression with resultType string)."
          type: object
        writeBehavior:
          description: "Describes how to write data to Azure Cosmos DB. Type: string (or
            Expression with resultType string). Allowed values: insert and
            upsert."
          type: object
      type: object
    DocumentDbCollectionSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity Document Database Collection source.
      properties:
        nestingSeparator:
          description: "Nested properties separator. Type: string (or Expression with
            resultType string)."
          type: object
        query:
          description: "Documents query. Type: string (or Expression with resultType
            string)."
          type: object
        queryTimeout:
          description: "Query timeout. Type: string (or Expression with resultType string),
            pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
          type: object
      type: object
    DrillSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Drill server source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    DynamicsAXSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Dynamics AX source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    DynamicsCrmSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Dynamics CRM sink.
      properties:
        alternateKeyName:
          description: "The logical name of the alternate key which will be used when
            upserting records. Type: string (or Expression with resultType
            string)."
          type: object
        ignoreNullValues:
          description: "The flag indicating whether to ignore null values from input
            dataset (except key fields) during write operation. Default is
            false. Type: boolean (or Expression with resultType boolean)."
          type: object
        writeBehavior:
          description: The write behavior for the operation.
          enum:
            - Upsert
          type: string
          x-ms-enum:
            modelAsString: true
            name: DynamicsSinkWriteBehavior
      required:
        - writeBehavior
      type: object
    DynamicsCrmSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity Dynamics CRM source.
      properties:
        query:
          description: "FetchXML is a proprietary query language that is used in Microsoft
            Dynamics CRM (online & on-premises). Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    DynamicsSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Dynamics sink.
      properties:
        alternateKeyName:
          description: "The logical name of the alternate key which will be used when
            upserting records. Type: string (or Expression with resultType
            string)."
          type: object
        ignoreNullValues:
          description: "The flag indicating whether ignore null values from input dataset
            (except key fields) during write operation. Default is false. Type:
            boolean (or Expression with resultType boolean)."
          type: object
        writeBehavior:
          description: The write behavior for the operation.
          enum:
            - Upsert
          type: string
          x-ms-enum:
            modelAsString: true
            name: DynamicsSinkWriteBehavior
      required:
        - writeBehavior
      type: object
    DynamicsSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity Dynamics source.
      properties:
        query:
          description: "FetchXML is a proprietary query language that is used in Microsoft
            Dynamics (online & on-premises). Type: string (or Expression with
            resultType string)."
          type: object
      type: object
    EloquaSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Eloqua server source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    ExecuteDataFlowActivity:
      allOf:
        - $ref: "#/components/schemas/ExecutionActivity"
      description: Execute data flow activity.
      properties:
        typeProperties:
          $ref: "#/components/schemas/ExecuteDataFlowActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: ExecuteDataFlow
    ExecuteDataFlowActivityTypeProperties:
      description: Execute data flow activity properties.
      properties:
        dataFlow:
          additionalProperties:
            type: object
          description: Data flow reference type.
          properties:
            datasetParameters:
              description: Reference data flow parameters from dataset.
              type: object
            referenceName:
              description: Reference data flow name.
              type: string
            type:
              description: Data flow reference type.
              enum:
                - DataFlowReference
              type: string
          required:
            - type
            - referenceName
        integrationRuntime:
          description: Integration runtime reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference integration runtime name.
              type: string
            type:
              description: Type of integration runtime.
              enum:
                - IntegrationRuntimeReference
              type: string
          required:
            - type
            - referenceName
        staging:
          description: Staging info for execute data flow activity.
          properties:
            folderPath:
              description: Folder path for staging blob.
              type: string
            linkedService:
              description: Linked service reference type.
              properties:
                parameters:
                  additionalProperties:
                    type: object
                  description: An object mapping parameter names to argument values.
                  type: object
                referenceName:
                  description: Reference LinkedService name.
                  type: string
                type:
                  description: Linked service reference type.
                  enum:
                    - LinkedServiceReference
                  type: string
              required:
                - type
                - referenceName
      required:
        - dataFlow
    ExecutePipelineActivity:
      allOf:
        - $ref: "#/components/schemas/ControlActivity"
      description: Execute pipeline activity.
      properties:
        typeProperties:
          $ref: "#/components/schemas/ExecutePipelineActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: ExecutePipeline
    ExecutePipelineActivityTypeProperties:
      description: Execute pipeline activity properties.
      properties:
        parameters:
          additionalProperties:
            type: object
          description: An object mapping parameter names to argument values.
          type: object
        pipeline:
          description: Pipeline reference type.
          properties:
            name:
              description: Reference name.
              type: string
            referenceName:
              description: Reference pipeline name.
              type: string
            type:
              description: Pipeline reference type.
              enum:
                - PipelineReference
              type: string
          required:
            - type
            - referenceName
        waitOnCompletion:
          description: Defines whether activity execution will wait for the dependent
            pipeline execution to finish. Default is false.
          type: boolean
      required:
        - pipeline
    ExecuteSSISPackageActivity:
      allOf:
        - $ref: "#/components/schemas/ExecutionActivity"
      description: Execute SSIS package activity.
      properties:
        typeProperties:
          $ref: "#/components/schemas/ExecuteSSISPackageActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: ExecuteSSISPackage
    ExecuteSSISPackageActivityTypeProperties:
      description: Execute SSIS package activity properties.
      properties:
        connectVia:
          description: Integration runtime reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference integration runtime name.
              type: string
            type:
              description: Type of integration runtime.
              enum:
                - IntegrationRuntimeReference
              type: string
          required:
            - type
            - referenceName
        environmentPath:
          description: "The environment path to execute the SSIS package. Type: string (or
            Expression with resultType string)."
          type: object
        executionCredential:
          $ref: "#/components/schemas/SSISExecutionCredential"
        logLocation:
          $ref: "#/components/schemas/SSISLogLocation"
        loggingLevel:
          description: "The logging level of SSIS package execution. Type: string (or
            Expression with resultType string)."
          type: object
        packageConnectionManagers:
          additionalProperties:
            $ref: "#/components/schemas/SSISConnectionManager"
          description: The package level connection managers to execute the SSIS package.
          type: object
        packageLocation:
          $ref: "#/components/schemas/SSISPackageLocation"
        packageParameters:
          additionalProperties:
            $ref: "#/components/schemas/SSISExecutionParameter"
          description: The package level parameters to execute the SSIS package.
          type: object
        projectConnectionManagers:
          additionalProperties:
            $ref: "#/components/schemas/SSISConnectionManager"
          description: The project level connection managers to execute the SSIS package.
          type: object
        projectParameters:
          additionalProperties:
            $ref: "#/components/schemas/SSISExecutionParameter"
          description: The project level parameters to execute the SSIS package.
          type: object
        propertyOverrides:
          additionalProperties:
            $ref: "#/components/schemas/SSISPropertyOverride"
          description: The property overrides to execute the SSIS package.
          type: object
        runtime:
          description: 'Specifies the runtime to execute SSIS package. The value should be
            "x86" or "x64". Type: string (or Expression with resultType
            string).'
          type: object
      required:
        - packageLocation
        - connectVia
    ExecutionActivity:
      allOf:
        - $ref: "#/components/schemas/Activity"
      description: Base class for all execution activities.
      properties:
        linkedServiceName:
          description: Linked service reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference LinkedService name.
              type: string
            type:
              description: Linked service reference type.
              enum:
                - LinkedServiceReference
              type: string
          required:
            - type
            - referenceName
        policy:
          $ref: "#/components/schemas/ActivityPolicy"
      x-ms-discriminator-value: Execution
    FileServerReadSettings:
      allOf:
        - $ref: "#/components/schemas/StoreReadSettings"
      description: File server read settings.
      properties:
        enablePartitionDiscovery:
          description: Indicates whether to enable partition discovery.
          type: boolean
        modifiedDatetimeEnd:
          description: "The end of file's modified datetime. Type: string (or Expression
            with resultType string)."
          type: object
        modifiedDatetimeStart:
          description: "The start of file's modified datetime. Type: string (or Expression
            with resultType string)."
          type: object
        recursive:
          description: "If true, files under the folder path will be read recursively.
            Default is true. Type: boolean (or Expression with resultType
            boolean)."
          type: object
        wildcardFileName:
          description: "FileServer wildcardFileName. Type: string (or Expression with
            resultType string)."
          type: object
        wildcardFolderPath:
          description: "FileServer wildcardFolderPath. Type: string (or Expression with
            resultType string)."
          type: object
      type: object
    FileServerWriteSettings:
      allOf:
        - $ref: "#/components/schemas/StoreWriteSettings"
      description: File server write settings.
      type: object
    FileSystemSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity file system sink.
      properties:
        copyBehavior:
          description: The type of copy behavior for copy sink.
          type: object
      type: object
    FileSystemSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity file system source.
      properties:
        recursive:
          description: "If true, files under the folder path will be read recursively.
            Default is true. Type: boolean (or Expression with resultType
            boolean)."
          type: object
      type: object
    FilterActivity:
      allOf:
        - $ref: "#/components/schemas/ControlActivity"
      description: Filter and return results from input array based on the conditions.
      properties:
        typeProperties:
          $ref: "#/components/schemas/FilterActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: Filter
    FilterActivityTypeProperties:
      description: Filter activity properties.
      properties:
        condition:
          description: Azure Data Factory expression definition.
          properties:
            type:
              description: Expression type.
              enum:
                - Expression
              type: string
            value:
              description: Expression value.
              type: string
          required:
            - type
            - value
          type: object
        items:
          description: Azure Data Factory expression definition.
          properties:
            type:
              description: Expression type.
              enum:
                - Expression
              type: string
            value:
              description: Expression value.
              type: string
          required:
            - type
            - value
          type: object
      required:
        - condition
        - items
    ForEachActivity:
      allOf:
        - $ref: "#/components/schemas/ControlActivity"
      description: This activity is used for iterating over a collection and execute given
        activities.
      properties:
        typeProperties:
          $ref: "#/components/schemas/ForEachActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: ForEach
    ForEachActivityTypeProperties:
      description: ForEach activity properties.
      properties:
        activities:
          description: List of activities to execute .
          items:
            $ref: "#/components/schemas/Activity"
          type: array
        batchCount:
          description: Batch count to be used for controlling the number of parallel
            execution (when isSequential is set to false).
          maximum: 50
          type: integer
        isSequential:
          description: Should the loop be executed in sequence or in parallel (max 50)
          type: boolean
        items:
          description: Azure Data Factory expression definition.
          properties:
            type:
              description: Expression type.
              enum:
                - Expression
              type: string
            value:
              description: Expression value.
              type: string
          required:
            - type
            - value
          type: object
      required:
        - items
        - activities
    FormatReadSettings:
      additionalProperties:
        type: object
      description: Format read settings.
      properties:
        type:
          description: The read setting type.
          type: string
      required:
        - type
      type: object
    FormatWriteSettings:
      additionalProperties:
        type: object
      description: Format write settings.
      properties:
        type:
          description: The write setting type.
          type: string
      required:
        - type
      type: object
    FtpReadSettings:
      allOf:
        - $ref: "#/components/schemas/StoreReadSettings"
      description: Ftp read settings.
      properties:
        recursive:
          description: "If true, files under the folder path will be read recursively.
            Default is true. Type: boolean (or Expression with resultType
            boolean)."
          type: object
        useBinaryTransfer:
          description: Specify whether to use binary transfer mode for FTP stores.
          type: boolean
        wildcardFileName:
          description: "Ftp wildcardFileName. Type: string (or Expression with resultType
            string)."
          type: object
        wildcardFolderPath:
          description: "Ftp wildcardFolderPath. Type: string (or Expression with resultType
            string)."
          type: object
      type: object
    GetMetadataActivity:
      allOf:
        - $ref: "#/components/schemas/ExecutionActivity"
      description: Activity to get metadata of dataset
      properties:
        typeProperties:
          $ref: "#/components/schemas/GetMetadataActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: GetMetadata
    GetMetadataActivityTypeProperties:
      description: GetMetadata activity properties.
      properties:
        dataset:
          description: Dataset reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference dataset name.
              type: string
            type:
              description: Dataset reference type.
              enum:
                - DatasetReference
              type: string
          required:
            - type
            - referenceName
        fieldList:
          description: Fields of metadata to get from dataset.
          items:
            description: "Type: string (or Expression with resultType string)."
            type: object
          type: array
      required:
        - dataset
    GoogleAdWordsSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Google AdWords service source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    GoogleBigQuerySource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Google BigQuery service source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    GoogleCloudStorageReadSettings:
      allOf:
        - $ref: "#/components/schemas/StoreReadSettings"
      description: Google Cloud Storage read settings.
      properties:
        enablePartitionDiscovery:
          description: Indicates whether to enable partition discovery.
          type: boolean
        modifiedDatetimeEnd:
          description: "The end of file's modified datetime. Type: string (or Expression
            with resultType string)."
          type: object
        modifiedDatetimeStart:
          description: "The start of file's modified datetime. Type: string (or Expression
            with resultType string)."
          type: object
        prefix:
          description: "The prefix filter for the Google Cloud Storage object name. Type:
            string (or Expression with resultType string)."
          type: object
        recursive:
          description: "If true, files under the folder path will be read recursively.
            Default is true. Type: boolean (or Expression with resultType
            boolean)."
          type: object
        wildcardFileName:
          description: "Google Cloud Storage wildcardFileName. Type: string (or Expression
            with resultType string)."
          type: object
        wildcardFolderPath:
          description: "Google Cloud Storage wildcardFolderPath. Type: string (or
            Expression with resultType string)."
          type: object
      type: object
    GreenplumSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Greenplum Database source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    HBaseSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity HBase server source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    HDInsightActivityDebugInfoOption:
      description: The HDInsightActivityDebugInfoOption settings to use.
      enum:
        - None
        - Always
        - Failure
      type: string
      x-ms-enum:
        modelAsString: true
        name: HDInsightActivityDebugInfoOption
    HDInsightHiveActivity:
      allOf:
        - $ref: "#/components/schemas/ExecutionActivity"
      description: HDInsight Hive activity type.
      properties:
        typeProperties:
          $ref: "#/components/schemas/HDInsightHiveActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: HDInsightHive
    HDInsightHiveActivityTypeProperties:
      description: HDInsight Hive activity properties.
      properties:
        arguments:
          description: User specified arguments to HDInsightActivity.
          items:
            description: "Type: string (or Expression with resultType string)."
            type: object
          type: array
        defines:
          additionalProperties:
            description: "Type: string (or Expression with resultType string)."
            type: object
          description: Allows user to specify defines for Hive job request.
          type: object
        getDebugInfo:
          $ref: "#/components/schemas/HDInsightActivityDebugInfoOption"
        queryTimeout:
          description: Query timeout value (in minutes).  Effective when the HDInsight
            cluster is with ESP (Enterprise Security Package)
          type: integer
        scriptLinkedService:
          description: Linked service reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference LinkedService name.
              type: string
            type:
              description: Linked service reference type.
              enum:
                - LinkedServiceReference
              type: string
          required:
            - type
            - referenceName
        scriptPath:
          description: "Script path. Type: string (or Expression with resultType string)."
          type: object
        storageLinkedServices:
          description: Storage linked service references.
          items:
            description: Linked service reference type.
            properties:
              parameters:
                additionalProperties:
                  type: object
                description: An object mapping parameter names to argument values.
                type: object
              referenceName:
                description: Reference LinkedService name.
                type: string
              type:
                description: Linked service reference type.
                enum:
                  - LinkedServiceReference
                type: string
            required:
              - type
              - referenceName
          type: array
        variables:
          description: User specified arguments under hivevar namespace.
          items:
            description: "Type: string (or Expression with resultType string)."
            type: object
          type: array
    HDInsightMapReduceActivity:
      allOf:
        - $ref: "#/components/schemas/ExecutionActivity"
      description: HDInsight MapReduce activity type.
      properties:
        typeProperties:
          $ref: "#/components/schemas/HDInsightMapReduceActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: HDInsightMapReduce
    HDInsightMapReduceActivityTypeProperties:
      description: HDInsight MapReduce activity properties.
      properties:
        arguments:
          description: User specified arguments to HDInsightActivity.
          items:
            description: "Type: string (or Expression with resultType string)."
            type: object
          type: array
        className:
          description: "Class name. Type: string (or Expression with resultType string)."
          type: object
        defines:
          additionalProperties:
            description: "Type: string (or Expression with resultType string)."
            type: object
          description: Allows user to specify defines for the MapReduce job request.
          type: object
        getDebugInfo:
          $ref: "#/components/schemas/HDInsightActivityDebugInfoOption"
        jarFilePath:
          description: "Jar path. Type: string (or Expression with resultType string)."
          type: object
        jarLibs:
          description: Jar libs.
          items:
            description: "Type: string (or Expression with resultType string)."
            type: object
          type: array
        jarLinkedService:
          description: Linked service reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference LinkedService name.
              type: string
            type:
              description: Linked service reference type.
              enum:
                - LinkedServiceReference
              type: string
          required:
            - type
            - referenceName
        storageLinkedServices:
          description: Storage linked service references.
          items:
            description: Linked service reference type.
            properties:
              parameters:
                additionalProperties:
                  type: object
                description: An object mapping parameter names to argument values.
                type: object
              referenceName:
                description: Reference LinkedService name.
                type: string
              type:
                description: Linked service reference type.
                enum:
                  - LinkedServiceReference
                type: string
            required:
              - type
              - referenceName
          type: array
      required:
        - className
        - jarFilePath
    HDInsightPigActivity:
      allOf:
        - $ref: "#/components/schemas/ExecutionActivity"
      description: HDInsight Pig activity type.
      properties:
        typeProperties:
          $ref: "#/components/schemas/HDInsightPigActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: HDInsightPig
    HDInsightPigActivityTypeProperties:
      description: HDInsight Pig activity properties.
      properties:
        arguments:
          description: User specified arguments to HDInsightActivity.
          items:
            description: "Type: string (or Expression with resultType string)."
            type: object
          type: array
        defines:
          additionalProperties:
            description: "Type: string (or Expression with resultType string)."
            type: object
          description: Allows user to specify defines for Pig job request.
          type: object
        getDebugInfo:
          $ref: "#/components/schemas/HDInsightActivityDebugInfoOption"
        scriptLinkedService:
          description: Linked service reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference LinkedService name.
              type: string
            type:
              description: Linked service reference type.
              enum:
                - LinkedServiceReference
              type: string
          required:
            - type
            - referenceName
        scriptPath:
          description: "Script path. Type: string (or Expression with resultType string)."
          type: object
        storageLinkedServices:
          description: Storage linked service references.
          items:
            description: Linked service reference type.
            properties:
              parameters:
                additionalProperties:
                  type: object
                description: An object mapping parameter names to argument values.
                type: object
              referenceName:
                description: Reference LinkedService name.
                type: string
              type:
                description: Linked service reference type.
                enum:
                  - LinkedServiceReference
                type: string
            required:
              - type
              - referenceName
          type: array
    HDInsightSparkActivity:
      allOf:
        - $ref: "#/components/schemas/ExecutionActivity"
      description: HDInsight Spark activity.
      properties:
        typeProperties:
          $ref: "#/components/schemas/HDInsightSparkActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: HDInsightSpark
    HDInsightSparkActivityTypeProperties:
      description: HDInsight spark activity properties.
      properties:
        arguments:
          description: The user-specified arguments to HDInsightSparkActivity.
          items:
            description: "Type: string (or Expression with resultType string)."
            type: object
          type: array
        className:
          description: The application's Java/Spark main class.
          type: string
        entryFilePath:
          description: "The relative path to the root folder of the code/package to be
            executed. Type: string (or Expression with resultType string)."
          type: object
        getDebugInfo:
          $ref: "#/components/schemas/HDInsightActivityDebugInfoOption"
        proxyUser:
          description: "The user to impersonate that will execute the job. Type: string (or
            Expression with resultType string)."
          type: object
        rootPath:
          description: "The root path in 'sparkJobLinkedService' for all the job’s files.
            Type: string (or Expression with resultType string)."
          type: object
        sparkConfig:
          additionalProperties:
            description: "Type: string (or Expression with resultType string)."
            type: object
          description: Spark configuration property.
          type: object
        sparkJobLinkedService:
          description: Linked service reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference LinkedService name.
              type: string
            type:
              description: Linked service reference type.
              enum:
                - LinkedServiceReference
              type: string
          required:
            - type
            - referenceName
      required:
        - rootPath
        - entryFilePath
    HDInsightStreamingActivity:
      allOf:
        - $ref: "#/components/schemas/ExecutionActivity"
      description: HDInsight streaming activity type.
      properties:
        typeProperties:
          $ref: "#/components/schemas/HDInsightStreamingActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: HDInsightStreaming
    HDInsightStreamingActivityTypeProperties:
      description: HDInsight streaming activity properties.
      properties:
        arguments:
          description: User specified arguments to HDInsightActivity.
          items:
            description: "Type: string (or Expression with resultType string)."
            type: object
          type: array
        combiner:
          description: "Combiner executable name. Type: string (or Expression with
            resultType string)."
          type: object
        commandEnvironment:
          description: Command line environment values.
          items:
            description: "Type: string (or Expression with resultType string)."
            type: object
          type: array
        defines:
          additionalProperties:
            description: "Type: string (or Expression with resultType string)."
            type: object
          description: Allows user to specify defines for streaming job request.
          type: object
        fileLinkedService:
          description: Linked service reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference LinkedService name.
              type: string
            type:
              description: Linked service reference type.
              enum:
                - LinkedServiceReference
              type: string
          required:
            - type
            - referenceName
        filePaths:
          description: Paths to streaming job files. Can be directories.
          items:
            description: "Type: string (or Expression with resultType string)."
            type: object
          type: array
        getDebugInfo:
          $ref: "#/components/schemas/HDInsightActivityDebugInfoOption"
        input:
          description: "Input blob path. Type: string (or Expression with resultType
            string)."
          type: object
        mapper:
          description: "Mapper executable name. Type: string (or Expression with resultType
            string)."
          type: object
        output:
          description: "Output blob path. Type: string (or Expression with resultType
            string)."
          type: object
        reducer:
          description: "Reducer executable name. Type: string (or Expression with
            resultType string)."
          type: object
        storageLinkedServices:
          description: Storage linked service references.
          items:
            description: Linked service reference type.
            properties:
              parameters:
                additionalProperties:
                  type: object
                description: An object mapping parameter names to argument values.
                type: object
              referenceName:
                description: Reference LinkedService name.
                type: string
              type:
                description: Linked service reference type.
                enum:
                  - LinkedServiceReference
                type: string
            required:
              - type
              - referenceName
          type: array
      required:
        - mapper
        - reducer
        - input
        - output
        - filePaths
    HdfsReadSettings:
      allOf:
        - $ref: "#/components/schemas/StoreReadSettings"
      description: HDFS read settings.
      properties:
        distcpSettings:
          $ref: "#/components/schemas/DistcpSettings"
        enablePartitionDiscovery:
          description: Indicates whether to enable partition discovery.
          type: boolean
        modifiedDatetimeEnd:
          description: "The end of file's modified datetime. Type: string (or Expression
            with resultType string)."
          type: object
        modifiedDatetimeStart:
          description: "The start of file's modified datetime. Type: string (or Expression
            with resultType string)."
          type: object
        recursive:
          description: "If true, files under the folder path will be read recursively.
            Default is true. Type: boolean (or Expression with resultType
            boolean)."
          type: object
        wildcardFileName:
          description: "HDFS wildcardFileName. Type: string (or Expression with resultType
            string)."
          type: object
        wildcardFolderPath:
          description: "HDFS wildcardFolderPath. Type: string (or Expression with
            resultType string)."
          type: object
      type: object
    HdfsSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity HDFS source.
      properties:
        distcpSettings:
          $ref: "#/components/schemas/DistcpSettings"
        recursive:
          description: "If true, files under the folder path will be read recursively.
            Default is true. Type: boolean (or Expression with resultType
            boolean)."
          type: object
      type: object
    HiveSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Hive Server source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    HttpReadSettings:
      allOf:
        - $ref: "#/components/schemas/StoreReadSettings"
      description: Sftp read settings.
      properties:
        additionalHeaders:
          description: "The additional HTTP headers in the request to the RESTful API.
            Type: string (or Expression with resultType string)."
          type: object
        requestBody:
          description: "The HTTP request body to the RESTful API if requestMethod is POST.
            Type: string (or Expression with resultType string)."
          type: object
        requestMethod:
          description: "The HTTP method used to call the RESTful API. The default is GET.
            Type: string (or Expression with resultType string)."
          type: object
        requestTimeout:
          description: Specifies the timeout for a HTTP client to get HTTP response from
            HTTP server.
          type: object
      type: object
    HttpSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity source for an HTTP file.
      properties:
        httpRequestTimeout:
          description: "Specifies the timeout for a HTTP client to get HTTP response from
            HTTP server. The default value is equivalent to
            System.Net.HttpWebRequest.Timeout. Type: string (or Expression with
            resultType string), pattern:
            ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
          type: object
      type: object
    HubspotSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Hubspot Service source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    IfConditionActivity:
      allOf:
        - $ref: "#/components/schemas/ControlActivity"
      description: This activity evaluates a boolean expression and executes either the
        activities under the ifTrueActivities property or the ifFalseActivities
        property depending on the result of the expression.
      properties:
        typeProperties:
          $ref: "#/components/schemas/IfConditionActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: IfCondition
    IfConditionActivityTypeProperties:
      description: IfCondition activity properties.
      properties:
        expression:
          description: Azure Data Factory expression definition.
          properties:
            type:
              description: Expression type.
              enum:
                - Expression
              type: string
            value:
              description: Expression value.
              type: string
          required:
            - type
            - value
          type: object
        ifFalseActivities:
          description: List of activities to execute if expression is evaluated to false.
            This is an optional property and if not provided, the activity will
            exit without any action.
          items:
            $ref: "#/components/schemas/Activity"
          type: array
        ifTrueActivities:
          description: List of activities to execute if expression is evaluated to true.
            This is an optional property and if not provided, the activity will
            exit without any action.
          items:
            $ref: "#/components/schemas/Activity"
          type: array
      required:
        - expression
    ImpalaSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Impala server source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    InformixSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Informix sink.
      properties:
        preCopyScript:
          description: "A query to execute before starting the copy. Type: string (or
            Expression with resultType string)."
          type: object
      type: object
    InformixSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity source for Informix.
      properties:
        query:
          description: "Database query. Type: string (or Expression with resultType
            string)."
          type: object
      type: object
    JiraSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Jira Service source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    JsonSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Json sink.
      properties:
        formatSettings:
          $ref: "#/components/schemas/JsonWriteSettings"
        storeSettings:
          $ref: "#/components/schemas/StoreWriteSettings"
      type: object
    JsonSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity Json source.
      properties:
        storeSettings:
          $ref: "#/components/schemas/StoreReadSettings"
      type: object
    JsonWriteSettings:
      allOf:
        - $ref: "#/components/schemas/FormatWriteSettings"
      description: Json write settings.
      properties:
        filePattern:
          description: File pattern of JSON. This setting controls the way a collection of
            JSON objects will be treated. The default value is 'setOfObjects'.
            It is case-sensitive.
          enum:
            - setOfObjects
            - arrayOfObjects
          type: string
          x-ms-enum:
            modelAsString: true
            name: JsonWriteFilePattern
      type: object
    LogStorageSettings:
      additionalProperties:
        type: object
      description: Log storage settings.
      properties:
        linkedServiceName:
          description: Linked service reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference LinkedService name.
              type: string
            type:
              description: Linked service reference type.
              enum:
                - LinkedServiceReference
              type: string
          required:
            - type
            - referenceName
        path:
          description: "The path to storage for storing detailed logs of activity
            execution. Type: string (or Expression with resultType string)."
          type: object
      required:
        - linkedServiceName
      type: object
    LookupActivity:
      allOf:
        - $ref: "#/components/schemas/ExecutionActivity"
      description: Lookup activity.
      properties:
        typeProperties:
          $ref: "#/components/schemas/LookupActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: Lookup
    LookupActivityTypeProperties:
      description: Lookup activity properties.
      properties:
        dataset:
          description: Dataset reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference dataset name.
              type: string
            type:
              description: Dataset reference type.
              enum:
                - DatasetReference
              type: string
          required:
            - type
            - referenceName
        firstRowOnly:
          description: "Whether to return first row or all rows. Default value is true.
            Type: boolean (or Expression with resultType boolean)."
          type: object
        source:
          $ref: "#/components/schemas/CopySource"
      required:
        - source
        - dataset
    MagentoSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Magento server source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    MariaDBSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity MariaDB server source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    MarketoSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Marketo server source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    MicrosoftAccessSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Microsoft Access sink.
      properties:
        preCopyScript:
          description: "A query to execute before starting the copy. Type: string (or
            Expression with resultType string)."
          type: object
      type: object
    MicrosoftAccessSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity source for Microsoft Access.
      properties:
        query:
          description: "Database query. Type: string (or Expression with resultType
            string)."
          type: object
      type: object
    MongoDbCursorMethodsProperties:
      additionalProperties:
        type: object
      description: Cursor methods for Mongodb query
      properties:
        limit:
          description: "Specifies the maximum number of documents the server returns.
            limit() is analogous to the LIMIT statement in a SQL database. Type:
            integer (or Expression with resultType integer)."
          type: object
        project:
          description: "Specifies the fields to return in the documents that match the
            query filter. To return all fields in the matching documents, omit
            this parameter. Type: string (or Expression with resultType
            string)."
          type: object
        skip:
          description: "Specifies the how many documents skipped and where MongoDB begins
            returning results. This approach may be useful in implementing
            paginated results. Type: integer (or Expression with resultType
            integer)."
          type: object
        sort:
          description: "Specifies the order in which the query returns matching documents.
            Type: string (or Expression with resultType string). Type: string
            (or Expression with resultType string)."
          type: object
      type: object
    MongoDbSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity source for a MongoDB database.
      properties:
        query:
          description: "Database query. Should be a SQL-92 query expression. Type: string
            (or Expression with resultType string)."
          type: object
      type: object
    MongoDbV2Source:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity source for a MongoDB database.
      properties:
        batchSize:
          description: "Specifies the number of documents to return in each batch of the
            response from MongoDB instance. In most cases, modifying the batch
            size will not affect the user or the application. This property's
            main purpose is to avoid hit the limitation of response size. Type:
            integer (or Expression with resultType integer)."
          type: object
        cursorMethods:
          $ref: "#/components/schemas/MongoDbCursorMethodsProperties"
        filter:
          description: "Specifies selection filter using query operators. To return all
            documents in a collection, omit this parameter or pass an empty
            document ({}). Type: string (or Expression with resultType string)."
          type: object
        queryTimeout:
          description: "Query timeout. Type: string (or Expression with resultType string),
            pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
          type: object
      type: object
    MySqlSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity source for MySQL databases.
      properties:
        query:
          description: "Database query. Type: string (or Expression with resultType
            string)."
          type: object
      type: object
    NetezzaPartitionSettings:
      description: The settings that will be leveraged for Netezza source partitioning.
      properties:
        partitionColumnName:
          description: "The name of the column in integer type that will be used for
            proceeding range partitioning. Type: string (or Expression with
            resultType string)."
          type: object
        partitionLowerBound:
          description: "The minimum value of column specified in partitionColumnName that
            will be used for proceeding range partitioning. Type: string (or
            Expression with resultType string)."
          type: object
        partitionUpperBound:
          description: "The maximum value of column specified in partitionColumnName that
            will be used for proceeding range partitioning. Type: string (or
            Expression with resultType string)."
          type: object
      type: object
    NetezzaSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Netezza source.
      properties:
        partitionOption:
          description: The partition mechanism that will be used for Netezza read in
            parallel.
          enum:
            - None
            - DataSlice
            - DynamicRange
          type: string
          x-ms-enum:
            modelAsString: true
            name: NetezzaPartitionOption
        partitionSettings:
          $ref: "#/components/schemas/NetezzaPartitionSettings"
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    ODataSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity source for OData source.
      properties:
        query:
          description: 'OData query. For example, "$top=1". Type: string (or Expression
            with resultType string).'
          type: object
      type: object
    OdbcSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity ODBC sink.
      properties:
        preCopyScript:
          description: "A query to execute before starting the copy. Type: string (or
            Expression with resultType string)."
          type: object
      type: object
    OdbcSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity source for ODBC databases.
      properties:
        query:
          description: "Database query. Type: string (or Expression with resultType
            string)."
          type: object
      type: object
    Office365Source:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity source for an Office 365 service.
      properties:
        allowedGroups:
          description: "The groups containing all the users. Type: array of strings (or
            Expression with resultType array of strings)."
          type: object
        dateFilterColumn:
          description: 'The Column to apply the <paramref name="StartTime"/> and <paramref
            name="EndTime"/>. Type: string (or Expression with resultType
            string).'
          type: object
        endTime:
          description: "End time of the requested range for this dataset. Type: string (or
            Expression with resultType string)."
          type: object
        outputColumns:
          description: 'The columns to be read out from the Office 365 table. Type: array
            of objects (or Expression with resultType array of objects).
            Example: [ { "name": "Id" }, { "name": "CreatedDateTime" } ]'
          type: object
        startTime:
          description: "Start time of the requested range for this dataset. Type: string
            (or Expression with resultType string)."
          type: object
        userScopeFilterUri:
          description: "The user scope uri. Type: string (or Expression with resultType
            string)."
          type: object
      type: object
    OraclePartitionSettings:
      description: The settings that will be leveraged for Oracle source partitioning.
      properties:
        partitionColumnName:
          description: "The name of the column in integer type that will be used for
            proceeding range partitioning. Type: string (or Expression with
            resultType string)."
          type: object
        partitionLowerBound:
          description: "The minimum value of column specified in partitionColumnName that
            will be used for proceeding range partitioning. Type: string (or
            Expression with resultType string)."
          type: object
        partitionNames:
          description: "Names of the physical partitions of Oracle table. "
          items:
            description: "Type: string (or Expression with resultType string)."
            type: object
          type: object
        partitionUpperBound:
          description: "The maximum value of column specified in partitionColumnName that
            will be used for proceeding range partitioning. Type: string (or
            Expression with resultType string)."
          type: object
      type: object
    OracleServiceCloudSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Oracle Service Cloud source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    OracleSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Oracle sink.
      properties:
        preCopyScript:
          description: "SQL pre-copy script. Type: string (or Expression with resultType
            string)."
          type: object
      type: object
    OracleSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity Oracle source.
      properties:
        oracleReaderQuery:
          description: "Oracle reader query. Type: string (or Expression with resultType
            string)."
          type: object
        partitionOption:
          description: The partition mechanism that will be used for Oracle read in
            parallel.
          enum:
            - None
            - PhysicalPartitionsOfTable
            - DynamicRange
          type: string
          x-ms-enum:
            modelAsString: true
            name: OraclePartitionOption
        partitionSettings:
          $ref: "#/components/schemas/OraclePartitionSettings"
        queryTimeout:
          description: "Query timeout. Type: string (or Expression with resultType string),
            pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
          type: object
      type: object
    OrcSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity ORC sink.
      properties:
        storeSettings:
          $ref: "#/components/schemas/StoreWriteSettings"
      type: object
    OrcSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity ORC source.
      properties:
        storeSettings:
          $ref: "#/components/schemas/StoreReadSettings"
      type: object
    ParquetSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Parquet sink.
      properties:
        storeSettings:
          $ref: "#/components/schemas/StoreWriteSettings"
      type: object
    ParquetSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity Parquet source.
      properties:
        storeSettings:
          $ref: "#/components/schemas/StoreReadSettings"
      type: object
    PaypalSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Paypal Service source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    PhoenixSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Phoenix server source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    Pipeline:
      description: A data factory pipeline.
      properties:
        activities:
          description: List of activities in pipeline.
          items:
            $ref: "#/components/schemas/Activity"
          type: array
        annotations:
          description: List of tags that can be used for describing the Pipeline.
          items:
            type: object
          type: array
        concurrency:
          description: The max number of concurrent runs for the pipeline.
          minimum: 1
          type: integer
        description:
          description: The description of the pipeline.
          type: string
        folder:
          description: The folder that this Pipeline is in. If not specified, Pipeline will
            appear at the root level.
          properties:
            name:
              description: The name of the folder that this Pipeline is in.
              type: string
          type: object
        parameters:
          additionalProperties:
            description: Definition of a single parameter for an entity.
            properties:
              defaultValue:
                description: Default value of parameter.
                type: object
              type:
                description: Parameter type.
                enum:
                  - Object
                  - String
                  - Int
                  - Float
                  - Bool
                  - Array
                  - SecureString
                type: string
                x-ms-enum:
                  modelAsString: true
                  name: ParameterType
            required:
              - type
            type: object
          description: Definition of all parameters for an entity.
          type: object
        runDimensions:
          additionalProperties:
            description: "Type: string (or Expression with resultType string)."
            type: object
          description: Dimensions emitted by Pipeline.
          type: object
        variables:
          additionalProperties:
            description: Definition of a single variable for a Pipeline.
            properties:
              defaultValue:
                description: Default value of variable.
                type: object
              type:
                description: Variable type.
                enum:
                  - String
                  - Bool
                  - Array
                type: string
                x-ms-enum:
                  modelAsString: true
                  name: VariableType
            required:
              - type
            type: object
          description: Definition of variable for a Pipeline.
          type: object
      type: object
    PolybaseSettings:
      additionalProperties:
        type: object
      description: PolyBase settings.
      properties:
        rejectSampleValue:
          description: "Determines the number of rows to attempt to retrieve before the
            PolyBase recalculates the percentage of rejected rows. Type: integer
            (or Expression with resultType integer), minimum: 0."
          type: object
        rejectType:
          $ref: "#/components/schemas/PolybaseSettingsRejectType"
        rejectValue:
          description: "Specifies the value or the percentage of rows that can be rejected
            before the query fails. Type: number (or Expression with resultType
            number), minimum: 0."
          type: object
        useTypeDefault:
          description: "Specifies how to handle missing values in delimited text files when
            PolyBase retrieves data from the text file. Type: boolean (or
            Expression with resultType boolean)."
          type: object
      type: object
    PolybaseSettingsRejectType:
      description: Indicates whether the RejectValue property is specified as a literal
        value or a percentage.
      enum:
        - value
        - percentage
      type: string
      x-ms-enum:
        modelAsString: true
        name: PolybaseSettingsRejectType
    PostgreSqlSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity source for PostgreSQL databases.
      properties:
        query:
          description: "Database query. Type: string (or Expression with resultType
            string)."
          type: object
      type: object
    PrestoSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Presto server source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    QuickBooksSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity QuickBooks server source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    RedirectIncompatibleRowSettings:
      additionalProperties:
        type: object
      description: Redirect incompatible row settings
      properties:
        linkedServiceName:
          description: "Name of the Azure Storage, Storage SAS, or Azure Data Lake Store
            linked service used for redirecting incompatible row. Must be
            specified if redirectIncompatibleRowSettings is specified. Type:
            string (or Expression with resultType string)."
          type: object
        path:
          description: "The path for storing the redirect incompatible row data. Type:
            string (or Expression with resultType string)."
          type: object
      required:
        - linkedServiceName
      type: object
    RedshiftUnloadSettings:
      description: The Amazon S3 settings needed for the interim Amazon S3 when copying
        from Amazon Redshift with unload. With this, data from Amazon Redshift
        source will be unloaded into S3 first and then copied into the targeted
        sink from the interim S3.
      properties:
        bucketName:
          description: "The bucket of the interim Amazon S3 which will be used to store the
            unloaded data from Amazon Redshift source. The bucket must be in the
            same region as the Amazon Redshift source. Type: string (or
            Expression with resultType string)."
          type: object
        s3LinkedServiceName:
          description: Linked service reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference LinkedService name.
              type: string
            type:
              description: Linked service reference type.
              enum:
                - LinkedServiceReference
              type: string
          required:
            - type
            - referenceName
      required:
        - s3LinkedServiceName
        - bucketName
      type: object
    RelationalSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity source for various relational databases.
      properties:
        query:
          description: "Database query. Type: string (or Expression with resultType
            string)."
          type: object
      type: object
    ResponsysSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Responsys source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    RestSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity Rest service source.
      properties:
        additionalHeaders:
          description: "The additional HTTP headers in the request to the RESTful API.
            Type: string (or Expression with resultType string)."
          type: object
        httpRequestTimeout:
          description: "The timeout (TimeSpan) to get an HTTP response. It is the timeout
            to get a response, not the timeout to read response data. Default
            value: 00:01:40. Type: string (or Expression with resultType
            string), pattern:
            ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
          type: object
        paginationRules:
          description: "The pagination rules to compose next page requests. Type: string
            (or Expression with resultType string)."
          type: object
        requestBody:
          description: "The HTTP request body to the RESTful API if requestMethod is POST.
            Type: string (or Expression with resultType string)."
          type: object
        requestInterval:
          description: "The time to await before sending next page request. "
          type: object
        requestMethod:
          description: "The HTTP method used to call the RESTful API. The default is GET.
            Type: string (or Expression with resultType string)."
          type: object
      type: object
    SSISAccessCredential:
      description: SSIS access credential.
      properties:
        domain:
          description: Domain for windows authentication.
          type: object
        password:
          allOf:
            - description: The base definition of a secret type.
              discriminator:
                propertyName: type
              properties:
                type:
                  description: Type of the secret.
                  type: string
              required:
                - type
              type: object
          description: Azure Data Factory secure string definition. The string value will
            be masked with asterisks '*' during Get or List API calls.
          properties:
            value:
              description: Value of secure string.
              type: string
          required:
            - value
          type: object
          x-ms-discriminator-value: SecureString
        userName:
          description: UseName for windows authentication.
          type: object
      required:
        - domain
        - userName
        - password
      type: object
    SSISConnectionManager:
      additionalProperties:
        $ref: "#/components/schemas/SSISExecutionParameter"
      description: SSIS Connection Manager.
      type: object
    SSISExecutionCredential:
      description: SSIS package execution credential.
      properties:
        domain:
          description: Domain for windows authentication.
          type: object
        password:
          allOf:
            - description: The base definition of a secret type.
              discriminator:
                propertyName: type
              properties:
                type:
                  description: Type of the secret.
                  type: string
              required:
                - type
              type: object
          description: Azure Data Factory secure string definition. The string value will
            be masked with asterisks '*' during Get or List API calls.
          properties:
            value:
              description: Value of secure string.
              type: string
          required:
            - value
          type: object
          x-ms-discriminator-value: SecureString
        userName:
          description: UseName for windows authentication.
          type: object
      required:
        - domain
        - userName
        - password
      type: object
    SSISExecutionParameter:
      description: SSIS execution parameter.
      properties:
        value:
          description: "SSIS package execution parameter value. Type: string (or Expression
            with resultType string)."
          type: object
      required:
        - value
      type: object
    SSISLogLocation:
      description: SSIS package execution log location
      properties:
        logPath:
          description: "The SSIS package execution log path. Type: string (or Expression
            with resultType string)."
          type: object
        type:
          description: The type of SSIS log location.
          enum:
            - File
          type: string
          x-ms-enum:
            modelAsString: true
            name: SsisLogLocationType
        typeProperties:
          $ref: "#/components/schemas/SSISLogLocationTypeProperties"
      required:
        - logPath
        - type
        - typeProperties
      type: object
    SSISLogLocationTypeProperties:
      description: SSIS package execution log location properties.
      properties:
        accessCredential:
          $ref: "#/components/schemas/SSISAccessCredential"
        logRefreshInterval:
          description: "Specifies the interval to refresh log. The default interval is 5
            minutes. Type: string (or Expression with resultType string),
            pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
          type: object
      type: object
    SSISPackageLocation:
      description: SSIS package location.
      properties:
        packagePath:
          description: "The SSIS package path. Type: string (or Expression with resultType
            string)."
          type: object
        type:
          description: The type of SSIS package location.
          enum:
            - SSISDB
            - File
          type: string
          x-ms-enum:
            modelAsString: true
            name: SsisPackageLocationType
        typeProperties:
          $ref: "#/components/schemas/SSISPackageLocationTypeProperties"
      required:
        - packagePath
      type: object
    SSISPackageLocationTypeProperties:
      description: SSIS package location properties.
      properties:
        accessCredential:
          $ref: "#/components/schemas/SSISAccessCredential"
        configurationPath:
          description: "The configuration file of the package execution. Type: string (or
            Expression with resultType string)."
          type: object
        packagePassword:
          allOf:
            - description: The base definition of a secret type.
              discriminator:
                propertyName: type
              properties:
                type:
                  description: Type of the secret.
                  type: string
              required:
                - type
              type: object
          description: Azure Data Factory secure string definition. The string value will
            be masked with asterisks '*' during Get or List API calls.
          properties:
            value:
              description: Value of secure string.
              type: string
          required:
            - value
          type: object
          x-ms-discriminator-value: SecureString
      type: object
    SSISPropertyOverride:
      description: SSIS property override.
      properties:
        isSensitive:
          description: Whether SSIS package property override value is sensitive data.
            Value will be encrypted in SSISDB if it is true
          type: boolean
        value:
          description: "SSIS package property override value. Type: string (or Expression
            with resultType string)."
          type: object
      required:
        - value
      type: object
    SalesforceMarketingCloudSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Salesforce Marketing Cloud source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    SalesforceServiceCloudSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Salesforce Service Cloud sink.
      properties:
        externalIdFieldName:
          description: "The name of the external ID field for upsert operation. Default
            value is 'Id' column. Type: string (or Expression with resultType
            string)."
          type: object
        ignoreNullValues:
          description: "The flag indicating whether or not to ignore null values from input
            dataset (except key fields) during write operation. Default value is
            false. If set it to true, it means ADF will leave the data in the
            destination object unchanged when doing upsert/update operation and
            insert defined default value when doing insert operation, versus ADF
            will update the data in the destination object to NULL when doing
            upsert/update operation and insert NULL value when doing insert
            operation. Type: boolean (or Expression with resultType boolean)."
          type: object
        writeBehavior:
          description: The write behavior for the operation. Default is Insert.
          enum:
            - Insert
            - Upsert
          type: string
          x-ms-enum:
            modelAsString: true
            name: SalesforceSinkWriteBehavior
      type: object
    SalesforceServiceCloudSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity Salesforce Service Cloud source.
      properties:
        query:
          description: "Database query. Type: string (or Expression with resultType
            string)."
          type: object
        readBehavior:
          description: The read behavior for the operation. Default is Query.
          enum:
            - Query
            - QueryAll
          type: string
          x-ms-enum:
            modelAsString: true
            name: SalesforceSourceReadBehavior
      type: object
    SalesforceSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Salesforce sink.
      properties:
        externalIdFieldName:
          description: "The name of the external ID field for upsert operation. Default
            value is 'Id' column. Type: string (or Expression with resultType
            string)."
          type: object
        ignoreNullValues:
          description: "The flag indicating whether or not to ignore null values from input
            dataset (except key fields) during write operation. Default value is
            false. If set it to true, it means ADF will leave the data in the
            destination object unchanged when doing upsert/update operation and
            insert defined default value when doing insert operation, versus ADF
            will update the data in the destination object to NULL when doing
            upsert/update operation and insert NULL value when doing insert
            operation. Type: boolean (or Expression with resultType boolean)."
          type: object
        writeBehavior:
          description: The write behavior for the operation. Default is Insert.
          enum:
            - Insert
            - Upsert
          type: string
          x-ms-enum:
            modelAsString: true
            name: SalesforceSinkWriteBehavior
      type: object
    SalesforceSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Salesforce source.
      properties:
        query:
          description: "Database query. Type: string (or Expression with resultType
            string)."
          type: object
        readBehavior:
          description: The read behavior for the operation. Default is Query.
          enum:
            - Query
            - QueryAll
          type: string
          x-ms-enum:
            modelAsString: true
            name: SalesforceSourceReadBehavior
      type: object
    SapBwSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity source for SapBW server via MDX.
      properties:
        query:
          description: "MDX query. Type: string (or Expression with resultType string)."
          type: object
      type: object
    SapCloudForCustomerSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity SAP Cloud for Customer sink.
      properties:
        writeBehavior:
          description: The write behavior for the operation. Default is 'Insert'.
          enum:
            - Insert
            - Update
          type: string
          x-ms-enum:
            modelAsString: true
            name: SapCloudForCustomerSinkWriteBehavior
      type: object
    SapCloudForCustomerSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity source for SAP Cloud for Customer source.
      properties:
        query:
          description: 'SAP Cloud for Customer OData query. For example, "$top=1". Type:
            string (or Expression with resultType string).'
          type: object
      type: object
    SapEccSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity source for SAP ECC source.
      properties:
        query:
          description: 'SAP ECC OData query. For example, "$top=1". Type: string (or
            Expression with resultType string).'
          type: object
      type: object
    SapHanaSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity source for SAP HANA source.
      properties:
        packetSize:
          description: "The packet size of data read from SAP HANA. Type: integer(or
            Expression with resultType integer)."
          type: object
        query:
          description: "SAP HANA Sql query. Type: string (or Expression with resultType
            string)."
          type: object
      type: object
    SapOpenHubSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity source for SAP Business Warehouse Open Hub Destination
        source.
      properties:
        baseRequestId:
          description: "The ID of request for delta loading. Once it is set, only data with
            requestId larger than the value of this property will be retrieved.
            The default value is 0. Type: integer (or Expression with resultType
            integer )."
          type: object
        excludeLastRequest:
          description: "Whether to exclude the records of the last request. The default
            value is true. Type: boolean (or Expression with resultType
            boolean)."
          type: object
      type: object
    SapTablePartitionSettings:
      description: The settings that will be leveraged for SAP table source partitioning.
      properties:
        maxPartitionsNumber:
          description: "The maximum value of partitions the table will be split into. Type:
            integer (or Expression with resultType string)."
          type: object
        partitionColumnName:
          description: "The name of the column that will be used for proceeding range
            partitioning. Type: string (or Expression with resultType string)."
          type: object
        partitionLowerBound:
          description: "The minimum value of column specified in partitionColumnName that
            will be used for proceeding range partitioning. Type: string (or
            Expression with resultType string)."
          type: object
        partitionUpperBound:
          description: "The maximum value of column specified in partitionColumnName that
            will be used for proceeding range partitioning. Type: string (or
            Expression with resultType string)."
          type: object
      type: object
    SapTableSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity source for SAP Table source.
      properties:
        batchSize:
          description: "Specifies the maximum number of rows that will be retrieved at a
            time when retrieving data from SAP Table. Type: integer (or
            Expression with resultType integer)."
          type: object
        customRfcReadTableFunctionModule:
          description: "Specifies the custom RFC function module that will be used to read
            data from SAP Table. Type: string (or Expression with resultType
            string)."
          type: object
        partitionOption:
          description: The partition mechanism that will be used for SAP table read in
            parallel.
          enum:
            - None
            - PartitionOnInt
            - PartitionOnCalendarYear
            - PartitionOnCalendarMonth
            - PartitionOnCalendarDate
            - PartitionOnTime
          type: string
          x-ms-enum:
            modelAsString: true
            name: SapTablePartitionOption
        partitionSettings:
          $ref: "#/components/schemas/SapTablePartitionSettings"
        rfcTableFields:
          description: "The fields of the SAP table that will be retrieved. For example,
            column0, column1. Type: string (or Expression with resultType
            string)."
          type: object
        rfcTableOptions:
          description: "The options for the filtering of the SAP Table. For example,
            COLUMN0 EQ SOME VALUE. Type: string (or Expression with resultType
            string)."
          type: object
        rowCount:
          description: "The number of rows to be retrieved. Type: integer(or Expression
            with resultType integer)."
          type: object
        rowSkips:
          description: "The number of rows that will be skipped. Type: integer (or
            Expression with resultType integer)."
          type: object
      type: object
    ServiceNowSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity ServiceNow server source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    SetVariableActivity:
      allOf:
        - $ref: "#/components/schemas/ControlActivity"
      description: Set value for a Variable.
      properties:
        typeProperties:
          $ref: "#/components/schemas/SetVariableActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: SetVariable
    SetVariableActivityTypeProperties:
      description: SetVariable activity properties.
      properties:
        value:
          description: Value to be set. Could be a static value or Expression
          type: object
        variableName:
          description: Name of the variable whose value needs to be set.
          type: string
    SftpReadSettings:
      allOf:
        - $ref: "#/components/schemas/StoreReadSettings"
      description: Sftp read settings.
      properties:
        modifiedDatetimeEnd:
          description: "The end of file's modified datetime. Type: string (or Expression
            with resultType string)."
          type: object
        modifiedDatetimeStart:
          description: "The start of file's modified datetime. Type: string (or Expression
            with resultType string)."
          type: object
        recursive:
          description: "If true, files under the folder path will be read recursively.
            Default is true. Type: boolean (or Expression with resultType
            boolean)."
          type: object
        wildcardFileName:
          description: "Sftp wildcardFileName. Type: string (or Expression with resultType
            string)."
          type: object
        wildcardFolderPath:
          description: "Sftp wildcardFolderPath. Type: string (or Expression with
            resultType string)."
          type: object
      type: object
    ShopifySource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Shopify Service source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    SparkSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Spark Server source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    SqlDWSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity SQL Data Warehouse sink.
      properties:
        allowPolyBase:
          description: "Indicates to use PolyBase to copy data into SQL Data Warehouse when
            applicable. Type: boolean (or Expression with resultType boolean)."
          type: object
        polyBaseSettings:
          $ref: "#/components/schemas/PolybaseSettings"
        preCopyScript:
          description: "SQL pre-copy script. Type: string (or Expression with resultType
            string)."
          type: object
        tableOption:
          description: "The option to handle sink table, such as autoCreate. For now only
            'autoCreate' value is supported. Type: string (or Expression with
            resultType string)."
          type: object
      type: object
    SqlDWSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity SQL Data Warehouse source.
      properties:
        sqlReaderQuery:
          description: "SQL Data Warehouse reader query. Type: string (or Expression with
            resultType string)."
          type: object
        sqlReaderStoredProcedureName:
          description: "Name of the stored procedure for a SQL Data Warehouse source. This
            cannot be used at the same time as SqlReaderQuery. Type: string (or
            Expression with resultType string)."
          type: object
        storedProcedureParameters:
          description: 'Value and type setting for stored procedure parameters. Example:
            "{Parameter1: {value: "1", type: "int"}}". Type: object (or
            Expression with resultType object), itemType:
            StoredProcedureParameter.'
          type: object
      type: object
    SqlMISink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity Azure SQL Managed Instance sink.
      properties:
        preCopyScript:
          description: "SQL pre-copy script. Type: string (or Expression with resultType
            string)."
          type: object
        sqlWriterStoredProcedureName:
          description: "SQL writer stored procedure name. Type: string (or Expression with
            resultType string)."
          type: object
        sqlWriterTableType:
          description: "SQL writer table type. Type: string (or Expression with resultType
            string)."
          type: object
        storedProcedureParameters:
          additionalProperties:
            $ref: "#/components/schemas/StoredProcedureParameter"
          description: SQL stored procedure parameters.
          type: object
        storedProcedureTableTypeParameterName:
          description: "The stored procedure parameter name of the table type. Type: string
            (or Expression with resultType string)."
          type: object
        tableOption:
          description: "The option to handle sink table, such as autoCreate. For now only
            'autoCreate' value is supported. Type: string (or Expression with
            resultType string)."
          type: object
      type: object
    SqlMISource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Azure SQL Managed Instance source.
      properties:
        produceAdditionalTypes:
          description: Which additional types to produce.
          type: object
        sqlReaderQuery:
          description: "SQL reader query. Type: string (or Expression with resultType
            string)."
          type: object
        sqlReaderStoredProcedureName:
          description: "Name of the stored procedure for a Azure SQL Managed Instance
            source. This cannot be used at the same time as SqlReaderQuery.
            Type: string (or Expression with resultType string)."
          type: object
        storedProcedureParameters:
          additionalProperties:
            $ref: "#/components/schemas/StoredProcedureParameter"
          description: 'Value and type setting for stored procedure parameters. Example:
            "{Parameter1: {value: "1", type: "int"}}".'
          type: object
      type: object
    SqlServerSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity SQL server sink.
      properties:
        preCopyScript:
          description: "SQL pre-copy script. Type: string (or Expression with resultType
            string)."
          type: object
        sqlWriterStoredProcedureName:
          description: "SQL writer stored procedure name. Type: string (or Expression with
            resultType string)."
          type: object
        sqlWriterTableType:
          description: "SQL writer table type. Type: string (or Expression with resultType
            string)."
          type: object
        storedProcedureParameters:
          additionalProperties:
            $ref: "#/components/schemas/StoredProcedureParameter"
          description: SQL stored procedure parameters.
          type: object
        storedProcedureTableTypeParameterName:
          description: "The stored procedure parameter name of the table type. Type: string
            (or Expression with resultType string)."
          type: object
        tableOption:
          description: "The option to handle sink table, such as autoCreate. For now only
            'autoCreate' value is supported. Type: string (or Expression with
            resultType string)."
          type: object
      type: object
    SqlServerSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity SQL server source.
      properties:
        produceAdditionalTypes:
          description: Which additional types to produce.
          type: object
        sqlReaderQuery:
          description: "SQL reader query. Type: string (or Expression with resultType
            string)."
          type: object
        sqlReaderStoredProcedureName:
          description: "Name of the stored procedure for a SQL Database source. This cannot
            be used at the same time as SqlReaderQuery. Type: string (or
            Expression with resultType string)."
          type: object
        storedProcedureParameters:
          additionalProperties:
            $ref: "#/components/schemas/StoredProcedureParameter"
          description: 'Value and type setting for stored procedure parameters. Example:
            "{Parameter1: {value: "1", type: "int"}}".'
          type: object
      type: object
    SqlServerStoredProcedureActivity:
      allOf:
        - $ref: "#/components/schemas/ExecutionActivity"
      description: SQL stored procedure activity type.
      properties:
        typeProperties:
          $ref: "#/components/schemas/SqlServerStoredProcedureActivityTypeProperties"
      required:
        - typeProperties
        - linkedServiceName
      x-ms-discriminator-value: SqlServerStoredProcedure
    SqlServerStoredProcedureActivityTypeProperties:
      description: SQL stored procedure activity properties.
      properties:
        storedProcedureName:
          description: "Stored procedure name. Type: string (or Expression with resultType
            string)."
          type: object
        storedProcedureParameters:
          additionalProperties:
            $ref: "#/components/schemas/StoredProcedureParameter"
          description: 'Value and type setting for stored procedure parameters. Example:
            "{Parameter1: {value: "1", type: "int"}}".'
          type: object
      required:
        - storedProcedureName
    SqlSink:
      allOf:
        - $ref: "#/components/schemas/CopySink"
      description: A copy activity SQL sink.
      properties:
        preCopyScript:
          description: "SQL pre-copy script. Type: string (or Expression with resultType
            string)."
          type: object
        sqlWriterStoredProcedureName:
          description: "SQL writer stored procedure name. Type: string (or Expression with
            resultType string)."
          type: object
        sqlWriterTableType:
          description: "SQL writer table type. Type: string (or Expression with resultType
            string)."
          type: object
        storedProcedureParameters:
          additionalProperties:
            $ref: "#/components/schemas/StoredProcedureParameter"
          description: SQL stored procedure parameters.
          type: object
        storedProcedureTableTypeParameterName:
          description: "The stored procedure parameter name of the table type. Type: string
            (or Expression with resultType string)."
          type: object
        tableOption:
          description: "The option to handle sink table, such as autoCreate. For now only
            'autoCreate' value is supported. Type: string (or Expression with
            resultType string)."
          type: object
      type: object
    SqlSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity SQL source.
      properties:
        sqlReaderQuery:
          description: "SQL reader query. Type: string (or Expression with resultType
            string)."
          type: object
        sqlReaderStoredProcedureName:
          description: "Name of the stored procedure for a SQL Database source. This cannot
            be used at the same time as SqlReaderQuery. Type: string (or
            Expression with resultType string)."
          type: object
        storedProcedureParameters:
          additionalProperties:
            $ref: "#/components/schemas/StoredProcedureParameter"
          description: 'Value and type setting for stored procedure parameters. Example:
            "{Parameter1: {value: "1", type: "int"}}".'
          type: object
      type: object
    SquareSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Square Service source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    StagingSettings:
      additionalProperties:
        type: object
      description: Staging settings.
      properties:
        enableCompression:
          description: "Specifies whether to use compression when copying data via an
            interim staging. Default value is false. Type: boolean (or
            Expression with resultType boolean)."
          type: object
        linkedServiceName:
          description: Linked service reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference LinkedService name.
              type: string
            type:
              description: Linked service reference type.
              enum:
                - LinkedServiceReference
              type: string
          required:
            - type
            - referenceName
        path:
          description: "The path to storage for storing the interim data. Type: string (or
            Expression with resultType string)."
          type: object
      required:
        - linkedServiceName
      type: object
    StoreReadSettings:
      additionalProperties:
        type: object
      description: Connector read setting.
      properties:
        maxConcurrentConnections:
          description: "The maximum concurrent connection count for the source data store.
            Type: integer (or Expression with resultType integer)."
          type: object
        type:
          description: The read setting type.
          type: string
      required:
        - type
      type: object
    StoreWriteSettings:
      additionalProperties:
        type: object
      description: Connector write settings.
      discriminator:
        propertyName: type
      properties:
        copyBehavior:
          description: The type of copy behavior for copy sink.
          type: object
        maxConcurrentConnections:
          description: "The maximum concurrent connection count for the source data store.
            Type: integer (or Expression with resultType integer)."
          type: object
        type:
          description: The write setting type.
          type: string
      required:
        - type
      type: object
    StoredProcedureParameter:
      description: SQL stored procedure parameter.
      properties:
        type:
          $ref: "#/components/schemas/StoredProcedureParameterType"
        value:
          description: "Stored procedure parameter value. Type: string (or Expression with
            resultType string)."
          type: object
      type: object
    StoredProcedureParameterType:
      description: Stored procedure parameter type.
      enum:
        - String
        - Int
        - Int64
        - Decimal
        - Guid
        - Boolean
        - Date
      type: string
      x-ms-enum:
        modelAsString: true
        name: StoredProcedureParameterType
    SybaseSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity source for Sybase databases.
      properties:
        query:
          description: "Database query. Type: string (or Expression with resultType
            string)."
          type: object
      type: object
    TabularSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: Copy activity sources of tabular type.
      properties:
        queryTimeout:
          description: "Query timeout. Type: string (or Expression with resultType string),
            pattern: ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
          type: object
      type: object
    TabularTranslator:
      allOf:
        - $ref: "#/components/schemas/CopyTranslator"
      description: A copy activity tabular translator.
      properties:
        collectionReference:
          description: "The JSON Path of the Nested Array that is going to do cross-apply.
            Type: object (or Expression with resultType object)."
          type: object
        columnMappings:
          description: 'Column mappings. Example: "UserId: MyUserId, Group: MyGroup, Name:
            MyName" Type: string (or Expression with resultType string). This
            property will be retired. Please use mappings property.'
          type: object
        mappings:
          description: 'Column mappings with logical types. Tabular->tabular example:
            [{"source":{"name":"CustomerName","type":"String"},"sink":{"name":"ClientName","type":"String"}},{"source":{"name":"CustomerAddress","type":"String"},"sink":{"name":"ClientAddress","type":"String"}}].  Hierarchical->tabular
            example:
            [{"source":{"path":"$.CustomerName","type":"String"},"sink":{"name":"ClientName","type":"String"}},{"source":{"path":"$.CustomerAddress","type":"String"},"sink":{"name":"ClientAddress","type":"String"}}].
            Type: object (or Expression with resultType object).'
          type: object
        schemaMapping:
          description: 'The schema mapping to map between tabular data and hierarchical
            data. Example: {"Column1": "$.Column1", "Column2":
            "$.Column2.Property1", "Column3": "$.Column2.Property2"}. Type:
            object (or Expression with resultType object). This property will be
            retired. Please use mappings property.'
          type: object
      type: object
    TeradataPartitionSettings:
      description: The settings that will be leveraged for teradata source partitioning.
      properties:
        partitionColumnName:
          description: "The name of the column that will be used for proceeding range or
            hash partitioning. Type: string (or Expression with resultType
            string)."
          type: object
        partitionLowerBound:
          description: "The minimum value of column specified in partitionColumnName that
            will be used for proceeding range partitioning. Type: string (or
            Expression with resultType string)."
          type: object
        partitionUpperBound:
          description: "The maximum value of column specified in partitionColumnName that
            will be used for proceeding range partitioning. Type: string (or
            Expression with resultType string)."
          type: object
      type: object
    TeradataSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Teradata source.
      properties:
        partitionOption:
          description: The partition mechanism that will be used for teradata read in
            parallel.
          enum:
            - None
            - Hash
            - DynamicRange
          type: string
          x-ms-enum:
            modelAsString: true
            name: TeradataPartitionOption
        partitionSettings:
          $ref: "#/components/schemas/TeradataPartitionSettings"
        query:
          description: "Teradata query. Type: string (or Expression with resultType
            string)."
          type: object
      type: object
    UntilActivity:
      allOf:
        - $ref: "#/components/schemas/ControlActivity"
      description: This activity executes inner activities until the specified boolean
        expression results to true or timeout is reached, whichever is earlier.
      properties:
        typeProperties:
          $ref: "#/components/schemas/UntilActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: Until
    UntilActivityTypeProperties:
      description: Until activity properties.
      properties:
        activities:
          description: List of activities to execute.
          items:
            $ref: "#/components/schemas/Activity"
          type: array
        expression:
          description: Azure Data Factory expression definition.
          properties:
            type:
              description: Expression type.
              enum:
                - Expression
              type: string
            value:
              description: Expression value.
              type: string
          required:
            - type
            - value
          type: object
        timeout:
          description: "Specifies the timeout for the activity to run. If there is no value
            specified, it takes the value of TimeSpan.FromDays(7) which is 1
            week as default. Type: string (or Expression with resultType
            string), pattern:
            ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9])). Type:
            string (or Expression with resultType string), pattern:
            ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
          type: object
      required:
        - expression
        - activities
    UserProperty:
      description: User property.
      properties:
        name:
          description: User property name.
          type: string
        value:
          description: "User property value. Type: string (or Expression with resultType
            string)."
          type: object
      required:
        - name
        - value
      type: object
    ValidationActivity:
      allOf:
        - $ref: "#/components/schemas/ControlActivity"
      description: This activity verifies that an external resource exists.
      properties:
        typeProperties:
          $ref: "#/components/schemas/ValidationActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: Validation
    ValidationActivityTypeProperties:
      description: Validation activity properties.
      properties:
        childItems:
          description: "Can be used if dataset points to a folder. If set to true, the
            folder must have at least one file. If set to false, the folder must
            be empty. Type: boolean (or Expression with resultType boolean)."
          type: object
        dataset:
          description: Dataset reference type.
          properties:
            parameters:
              additionalProperties:
                type: object
              description: An object mapping parameter names to argument values.
              type: object
            referenceName:
              description: Reference dataset name.
              type: string
            type:
              description: Dataset reference type.
              enum:
                - DatasetReference
              type: string
          required:
            - type
            - referenceName
        minimumSize:
          description: "Can be used if dataset points to a file. The file must be greater
            than or equal in size to the value specified. Type: integer (or
            Expression with resultType integer)."
          type: object
        sleep:
          description: "A delay in seconds between validation attempts. If no value is
            specified, 10 seconds will be used as the default. Type: integer (or
            Expression with resultType integer)."
          type: object
        timeout:
          description: "Specifies the timeout for the activity to run. If there is no value
            specified, it takes the value of TimeSpan.FromDays(7) which is 1
            week as default. Type: string (or Expression with resultType
            string), pattern:
            ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
          type: object
      required:
        - dataset
    VerticaSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Vertica source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    WaitActivity:
      allOf:
        - $ref: "#/components/schemas/ControlActivity"
      description: This activity suspends pipeline execution for the specified interval.
      properties:
        typeProperties:
          $ref: "#/components/schemas/WaitActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: Wait
    WaitActivityTypeProperties:
      description: Wait activity properties.
      properties:
        waitTimeInSeconds:
          description: Duration in seconds.
          type: integer
      required:
        - waitTimeInSeconds
    WebActivity:
      allOf:
        - $ref: "#/components/schemas/ExecutionActivity"
      description: Web activity.
      properties:
        typeProperties:
          $ref: "#/components/schemas/WebActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: WebActivity
    WebActivityAuthentication:
      description: Web activity authentication properties.
      properties:
        password:
          allOf:
            - description: The base definition of a secret type.
              discriminator:
                propertyName: type
              properties:
                type:
                  description: Type of the secret.
                  type: string
              required:
                - type
              type: object
          description: Azure Data Factory secure string definition. The string value will
            be masked with asterisks '*' during Get or List API calls.
          properties:
            value:
              description: Value of secure string.
              type: string
          required:
            - value
          type: object
          x-ms-discriminator-value: SecureString
        pfx:
          allOf:
            - description: The base definition of a secret type.
              discriminator:
                propertyName: type
              properties:
                type:
                  description: Type of the secret.
                  type: string
              required:
                - type
              type: object
          description: Azure Data Factory secure string definition. The string value will
            be masked with asterisks '*' during Get or List API calls.
          properties:
            value:
              description: Value of secure string.
              type: string
          required:
            - value
          type: object
          x-ms-discriminator-value: SecureString
        resource:
          description: Resource for which Azure Auth token will be requested when using MSI
            Authentication.
          type: string
        type:
          description: Web activity authentication (Basic/ClientCertificate/MSI)
          type: string
        username:
          description: Web activity authentication user name for basic authentication.
          type: string
      required:
        - type
    WebActivityMethod:
      description: The list of HTTP methods supported by a WebActivity.
      enum:
        - GET
        - POST
        - PUT
        - DELETE
      type: string
      x-ms-enum:
        modelAsString: true
        name: WebActivityMethod
    WebActivityTypeProperties:
      description: Web activity type properties.
      properties:
        authentication:
          $ref: "#/components/schemas/WebActivityAuthentication"
        body:
          description: "Represents the payload that will be sent to the endpoint. Required
            for POST/PUT method, not allowed for GET method Type: string (or
            Expression with resultType string)."
          type: object
        datasets:
          description: List of datasets passed to web endpoint.
          items:
            description: Dataset reference type.
            properties:
              parameters:
                additionalProperties:
                  type: object
                description: An object mapping parameter names to argument values.
                type: object
              referenceName:
                description: Reference dataset name.
                type: string
              type:
                description: Dataset reference type.
                enum:
                  - DatasetReference
                type: string
            required:
              - type
              - referenceName
          type: array
        headers:
          description: 'Represents the headers that will be sent to the request. For
            example, to set the language and type on a request: "headers" : {
            "Accept-Language": "en-us", "Content-Type": "application/json" }.
            Type: string (or Expression with resultType string).'
          type: object
        linkedServices:
          description: List of linked services passed to web endpoint.
          items:
            description: Linked service reference type.
            properties:
              parameters:
                additionalProperties:
                  type: object
                description: An object mapping parameter names to argument values.
                type: object
              referenceName:
                description: Reference LinkedService name.
                type: string
              type:
                description: Linked service reference type.
                enum:
                  - LinkedServiceReference
                type: string
            required:
              - type
              - referenceName
          type: array
        method:
          $ref: "#/components/schemas/WebActivityMethod"
        url:
          description: "Web activity target endpoint and path. Type: string (or Expression
            with resultType string)."
          type: object
      required:
        - method
        - url
    WebHookActivity:
      allOf:
        - $ref: "#/components/schemas/ControlActivity"
      description: WebHook activity.
      properties:
        typeProperties:
          $ref: "#/components/schemas/WebHookActivityTypeProperties"
      required:
        - typeProperties
      x-ms-discriminator-value: WebHook
    WebHookActivityMethod:
      description: The list of HTTP methods supported by a WebHook activity.
      enum:
        - POST
      type: string
      x-ms-enum:
        modelAsString: true
        name: WebHookActivityMethod
    WebHookActivityTypeProperties:
      description: WebHook activity type properties.
      properties:
        authentication:
          $ref: "#/components/schemas/WebActivityAuthentication"
        body:
          description: "Represents the payload that will be sent to the endpoint. Required
            for POST/PUT method, not allowed for GET method Type: string (or
            Expression with resultType string)."
          type: object
        headers:
          description: 'Represents the headers that will be sent to the request. For
            example, to set the language and type on a request: "headers" : {
            "Accept-Language": "en-us", "Content-Type": "application/json" }.
            Type: string (or Expression with resultType string).'
          type: object
        method:
          $ref: "#/components/schemas/WebHookActivityMethod"
        timeout:
          description: "The timeout within which the webhook should be called back. If
            there is no value specified, it defaults to 10 minutes. Type:
            string. Pattern:
            ((\\d+)\\.)?(\\d\\d):(60|([0-5][0-9])):(60|([0-5][0-9]))."
          type: string
        url:
          description: "WebHook activity target endpoint and path. Type: string (or
            Expression with resultType string)."
          type: object
      required:
        - method
        - url
    WebSource:
      allOf:
        - $ref: "#/components/schemas/CopySource"
      description: A copy activity source for web page table.
      properties: {}
      type: object
    XeroSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Xero Service source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
    ZohoSource:
      allOf:
        - $ref: "#/components/schemas/TabularSource"
      description: A copy activity Zoho server source.
      properties:
        query:
          description: "A query to retrieve data from source. Type: string (or Expression
            with resultType string)."
          type: object
      type: object
