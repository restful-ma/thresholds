openapi: 3.0.0
info:
  contact:
    email: techsupport@osisoft.com
    name: OSIsoft, LLC.
    url: https://techsupport.osisoft.com/
  description: Swagger Spec file that describes PI Web API
  license:
    name: Apache 2.0 License
    url: http://tempuri.org/license
  termsOfService: https://pisquare.osisoft.com/docs/DOC-1105
  title: PI Web API 2018 SP1 Swagger Spec
  version: 1.11.1.5383
  x-apisguru-categories:
    - enterprise
  x-logo:
    backgroundColor: "#FFFFFF"
    url: https://twitter.com/OSIsoft/profile_image?size=original
  x-origin:
    - format: swagger
      url: https://devdata.osisoft.com/piwebapi/help/specification
      version: "2.0"
  x-providerName: osisoft.com
paths:
  /:
    get:
      deprecated: false
      operationId: Home_Get
      responses:
        "200":
          description: Links to top level collections and system information.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Landing"
            text/json:
              schema:
                $ref: "#/components/schemas/Landing"
            text/html:
              schema:
                $ref: "#/components/schemas/Landing"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Landing"
      summary: Get top level links for this PI System Web API instance.
      tags:
        - Home
  /analyses:
    get:
      deprecated: false
      description: This method returns an Analysis based on the hierarchical path
        associated with it, and should be used when a path has been received
        from a separate part of the PI System for use in the PI Web API. Users
        should primarily search with the WebID when available.
      operationId: Analysis_GetByPath
      parameters:
        - description: The path to the Analysis.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified Analysis.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Analysis"
            text/json:
              schema:
                $ref: "#/components/schemas/Analysis"
            text/html:
              schema:
                $ref: "#/components/schemas/Analysis"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Analysis"
      summary: Retrieve an Analysis by path.
      tags:
        - Analysis
  /analyses/search:
    get:
      deprecated: false
      operationId: Analysis_GetAnalysesQuery
      parameters:
        - description: The ID of the asset database to use as the root of the query.
          in: query
          name: databaseWebId
          required: false
          schema:
            type: string
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: 'The query string is a list of filters used to perform an AFSearch
            for the analyses in the asset database. An example would be: "query=
            Name:=MyAnalysis1* Template:=AnalysisTemplate".'
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of analyses matching the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Analysis_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Analysis_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Analysis_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Analysis_"
      summary: Retrieve analyses based on the specified conditions. By default, returns
        all analyses.
      tags:
        - Analysis
  "/analyses/{webId}":
    delete:
      deprecated: false
      operationId: Analysis_Delete
      parameters:
        - description: The ID of the Analysis to delete.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The Analysis was deleted.
      summary: Delete an Analysis.
      tags:
        - Analysis
    get:
      deprecated: false
      operationId: Analysis_Get
      parameters:
        - description: The ID of the Analysis.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified Analysis.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Analysis"
            text/json:
              schema:
                $ref: "#/components/schemas/Analysis"
            text/html:
              schema:
                $ref: "#/components/schemas/Analysis"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Analysis"
      summary: Retrieve an Analysis.
      tags:
        - Analysis
    patch:
      deprecated: false
      operationId: Analysis_Update
      parameters:
        - description: The ID of the Analysis to update.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Analysis"
          text/json:
            schema:
              $ref: "#/components/schemas/Analysis"
        description: A partial Analysis containing the desired changes.
        required: true
      responses:
        "204":
          description: The Analysis was updated.
      summary: Update an Analysis.
      tags:
        - Analysis
  "/analyses/{webId}/categories":
    get:
      deprecated: false
      operationId: Analysis_GetCategories
      parameters:
        - description: The ID of the Analysis.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of categories.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_AnalysisCategory_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_AnalysisCategory_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_AnalysisCategory_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_AnalysisCategory_"
      summary: Get an Analysis' categories.
      tags:
        - Analysis
  "/analyses/{webId}/security":
    get:
      deprecated: false
      operationId: Analysis_GetSecurity
      parameters:
        - description: The ID of the Analysis for the security to be checked.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The user identity for the security information to be checked.
            Multiple security identities may be specified with multiple
            instances of the parameter. If the parameter is not specified, only
            the current user's security rights will be returned.
          in: query
          name: userIdentity
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Indicates if the security cache should be refreshed before getting
            security information. The default is 'false'.
          in: query
          name: forceRefresh
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Security rights.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
        "400":
          description: An invalid or local account is specified as the user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "401":
          description: Access denied for the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: Unsupported when using Anonymous authentication method.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "502":
          description: Failed to retrieve the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Get the security information of the specified security item associated
        with the Analysis for a specified user.
      tags:
        - Analysis
  "/analyses/{webId}/securityentries":
    get:
      deprecated: false
      operationId: Analysis_GetSecurityEntries
      parameters:
        - description: The ID of the analysis.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The name query string used for filtering security entries. The
            default is no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of security entries matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
      summary: Retrieve the security entries associated with the analysis based on the
        specified criteria. By default, all security entries for this analysis
        are returned.
      tags:
        - Analysis
    post:
      deprecated: false
      operationId: Analysis_CreateSecurityEntry
      parameters:
        - description: The ID of the analysis, where the security entry will be created.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry"
      responses:
        "201":
          description: The security entry was created. The response's Location header is a
            link to the security entry.
      summary: Create a security entry owned by the analysis.
      tags:
        - Analysis
  "/analyses/{webId}/securityentries/{name}":
    delete:
      deprecated: false
      operationId: Analysis_DeleteSecurityEntry
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the analysis, where the security entry will be deleted.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      responses:
        "204":
          description: The security entry was deleted.
      summary: Delete a security entry owned by the analysis.
      tags:
        - Analysis
    get:
      deprecated: false
      operationId: Analysis_GetSecurityEntryByName
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the analysis.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The security entry matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/html:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
        "404":
          description: The security entry with the specified name is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Retrieve the security entry associated with the analysis with the
        specified name.
      tags:
        - Analysis
    put:
      deprecated: false
      operationId: Analysis_UpdateSecurityEntry
      parameters:
        - description: The name of the security entry.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the analysis, where the security entry will be updated.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry2"
      responses:
        "204":
          description: The security entry was updated.
      summary: Update a security entry owned by the analysis.
      tags:
        - Analysis
  /analysiscategories:
    get:
      deprecated: false
      operationId: AnalysisCategory_GetByPath
      parameters:
        - description: The path to the target analysis category.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified analysis category.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalysisCategory"
            text/json:
              schema:
                $ref: "#/components/schemas/AnalysisCategory"
            text/html:
              schema:
                $ref: "#/components/schemas/AnalysisCategory"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/AnalysisCategory"
      summary: Retrieve an analysis category by path.
      tags:
        - AnalysisCategory
  "/analysiscategories/{webId}":
    delete:
      deprecated: false
      operationId: AnalysisCategory_Delete
      parameters:
        - description: The ID of the analysis category to delete.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The analysis category was deleted.
      summary: Delete an analysis category.
      tags:
        - AnalysisCategory
    get:
      deprecated: false
      operationId: AnalysisCategory_Get
      parameters:
        - description: The ID of the analysis category.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified analysis category.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalysisCategory"
            text/json:
              schema:
                $ref: "#/components/schemas/AnalysisCategory"
            text/html:
              schema:
                $ref: "#/components/schemas/AnalysisCategory"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/AnalysisCategory"
      summary: Retrieve an analysis category.
      tags:
        - AnalysisCategory
    patch:
      deprecated: false
      operationId: AnalysisCategory_Update
      parameters:
        - description: The ID of the analysis category to update.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnalysisCategory"
          text/json:
            schema:
              $ref: "#/components/schemas/AnalysisCategory"
        description: A partial analysis category containing the desired changes.
        required: true
      responses:
        "204":
          description: The analysis category was updated.
      summary: Update an analysis category by replacing items in its definition.
      tags:
        - AnalysisCategory
  "/analysiscategories/{webId}/security":
    get:
      deprecated: false
      operationId: AnalysisCategory_GetSecurity
      parameters:
        - description: The ID of the analysis category for the security to be checked.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The user identity for the security information to be checked.
            Multiple security identities may be specified with multiple
            instances of the parameter. If the parameter is not specified, only
            the current user's security rights will be returned.
          in: query
          name: userIdentity
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Indicates if the security cache should be refreshed before getting
            security information. The default is 'false'.
          in: query
          name: forceRefresh
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Security rights.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
        "400":
          description: An invalid or local account is specified as the user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "401":
          description: Access denied for the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: Unsupported when using Anonymous authentication method.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "502":
          description: Failed to retrieve the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Get the security information of the specified security item associated
        with the analysis category for a specified user.
      tags:
        - AnalysisCategory
  "/analysiscategories/{webId}/securityentries":
    get:
      deprecated: false
      operationId: AnalysisCategory_GetSecurityEntries
      parameters:
        - description: The ID of the analysis category.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The name query string used for filtering security entries. The
            default is no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of security entries matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
      summary: Retrieve the security entries associated with the analysis category
        based on the specified criteria. By default, all security entries for
        this analysis category are returned.
      tags:
        - AnalysisCategory
    post:
      deprecated: false
      operationId: AnalysisCategory_CreateSecurityEntry
      parameters:
        - description: The ID of the analysis category, where the security entry will be
            created.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry"
      responses:
        "201":
          description: The security entry was created. The response's Location header is a
            link to the security entry.
      summary: Create a security entry owned by the analysis category.
      tags:
        - AnalysisCategory
  "/analysiscategories/{webId}/securityentries/{name}":
    delete:
      deprecated: false
      operationId: AnalysisCategory_DeleteSecurityEntry
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the analysis category, where the security entry will be
            deleted.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      responses:
        "204":
          description: The security entry was deleted.
      summary: Delete a security entry owned by the analysis category.
      tags:
        - AnalysisCategory
    get:
      deprecated: false
      operationId: AnalysisCategory_GetSecurityEntryByName
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the analysis category.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The security entry matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/html:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
        "404":
          description: The security entry with the specified name is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Retrieve the security entry associated with the analysis category with
        the specified name.
      tags:
        - AnalysisCategory
    put:
      deprecated: false
      operationId: AnalysisCategory_UpdateSecurityEntry
      parameters:
        - description: The name of the security entry.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the analysis category, where the security entry will be
            updated.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry2"
      responses:
        "204":
          description: The security entry was updated.
      summary: Update a security entry owned by the analysis category.
      tags:
        - AnalysisCategory
  /analysisruleplugins:
    get:
      deprecated: false
      description: This method returns an Analysis Rule Plug-in based on the hierarchical
        path associated with it, and should be used when a path has been
        received from a separate part of the PI System for use in the PI Web
        API. Users should primarily search with the WebID when available.
      operationId: AnalysisRulePlugIn_GetByPath
      parameters:
        - description: The path to the Analysis Rule Plug-in.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified Analysis Rule Plug-in.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalysisRulePlugIn"
            text/json:
              schema:
                $ref: "#/components/schemas/AnalysisRulePlugIn"
            text/html:
              schema:
                $ref: "#/components/schemas/AnalysisRulePlugIn"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/AnalysisRulePlugIn"
      summary: Retrieve an Analysis Rule Plug-in by path.
      tags:
        - AnalysisRulePlugIn
  "/analysisruleplugins/{webId}":
    get:
      deprecated: false
      operationId: AnalysisRulePlugIn_Get
      parameters:
        - description: The ID of the Analysis Rule Plug-in.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified Analysis Rule Plug-in.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalysisRulePlugIn"
            text/json:
              schema:
                $ref: "#/components/schemas/AnalysisRulePlugIn"
            text/html:
              schema:
                $ref: "#/components/schemas/AnalysisRulePlugIn"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/AnalysisRulePlugIn"
      summary: Retrieve an Analysis Rule Plug-in.
      tags:
        - AnalysisRulePlugIn
  /analysisrules:
    get:
      deprecated: false
      description: This method returns an Analysis Rule based on the hierarchical path
        associated with it, and should be used when a path has been received
        from a separate part of the PI System for use in the PI Web API. Users
        should primarily search with the WebID when available.
      operationId: AnalysisRule_GetByPath
      parameters:
        - description: The path to the Analysis Rule.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The requested Analysis Rule.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalysisRule"
            text/json:
              schema:
                $ref: "#/components/schemas/AnalysisRule"
            text/html:
              schema:
                $ref: "#/components/schemas/AnalysisRule"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/AnalysisRule"
      summary: Retrieve an Analysis Rule by path.
      tags:
        - AnalysisRule
  "/analysisrules/{webId}":
    delete:
      deprecated: false
      operationId: AnalysisRule_Delete
      parameters:
        - description: The ID of the Analysis Rule.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The Analysis Rule was deleted.
      summary: Delete an Analysis Rule.
      tags:
        - AnalysisRule
    get:
      deprecated: false
      operationId: AnalysisRule_Get
      parameters:
        - description: The ID of the Analysis Rule.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The requested Analysis Rule.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalysisRule"
            text/json:
              schema:
                $ref: "#/components/schemas/AnalysisRule"
            text/html:
              schema:
                $ref: "#/components/schemas/AnalysisRule"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/AnalysisRule"
      summary: Retrieve an Analysis Rule.
      tags:
        - AnalysisRule
    patch:
      deprecated: false
      operationId: AnalysisRule_Update
      parameters:
        - description: The ID of the Analysis Rule.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnalysisRule"
          text/json:
            schema:
              $ref: "#/components/schemas/AnalysisRule"
        description: A partial Analysis Rule containing the desired changes.
        required: true
      responses:
        "204":
          description: The Analysis Rule was updated.
      summary: Update an Analysis Rule by replacing items in its definition.
      tags:
        - AnalysisRule
  "/analysisrules/{webId}/analysisrules":
    get:
      deprecated: false
      operationId: AnalysisRule_GetAnalysisRules
      parameters:
        - description: The ID of the parent Analysis Rule.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: The name query string used for finding Analysis Rules. The default
            is no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: Specifies if the search should include Analysis Rules nested further
            than the immediate children of the searchRoot. The default is
            'false'.
          in: query
          name: searchFullHierarchy
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The field or property of the object used to sort the returned
            collection. The default is 'Name'.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of child Analysis Rules.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_AnalysisRule_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_AnalysisRule_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_AnalysisRule_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_AnalysisRule_"
      summary: Get the child Analysis Rules of the Analysis Rule.
      tags:
        - AnalysisRule
    post:
      deprecated: false
      operationId: AnalysisRule_CreateAnalysisRule
      parameters:
        - description: The ID of the parent Analysis Rule, on which to create the child
            Analysis Rule.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnalysisRule"
          text/json:
            schema:
              $ref: "#/components/schemas/AnalysisRule"
        description: The definition of the new Analysis Rule.
        required: true
      responses:
        "201":
          description: The Analysis Rule was created. The response's Location header is a
            link to the created Analysis Rule.
      summary: Create a new Analysis Rule as a child of an existing Analysis Rule.
      tags:
        - AnalysisRule
  /analysistemplates:
    get:
      deprecated: false
      description: This method returns an analysis template based on the hierarchical path
        associated with it, and should be used when a path has been received
        from a separate part of the PI System for use in the PI Web API. Users
        should primarily search with the WebID when available.
      operationId: AnalysisTemplate_GetByPath
      parameters:
        - description: The path to the analysis template.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified analysis template.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalysisTemplate"
            text/json:
              schema:
                $ref: "#/components/schemas/AnalysisTemplate"
            text/html:
              schema:
                $ref: "#/components/schemas/AnalysisTemplate"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/AnalysisTemplate"
      summary: Retrieve an analysis template by path.
      tags:
        - AnalysisTemplate
    post:
      deprecated: false
      operationId: AnalysisTemplate_CreateFromAnalysis
      parameters:
        - description: The ID of the Analysis, on which the template is created.
          in: query
          name: analysisWebId
          required: true
          schema:
            type: string
        - description: The name for the created template, which must be unique within the
            database's AnalysisTemplate collection. If the name ends with an
            asterisk (*), then a unique name will be generated based on the
            supplied name. The default is the specified Analysis' name suffixed
            with an asterisk (*).
          in: query
          name: name
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "201":
          description: The Analysis Template was created. The response's Location header is
            a link to the created Analysis Template.
      summary: Create an Analysis template based upon a specified Analysis.
      tags:
        - AnalysisTemplate
  /analysistemplates/search:
    get:
      deprecated: false
      operationId: AnalysisTemplate_GetAnalysisTemplatesQuery
      parameters:
        - description: The ID of the asset database to use as the root of the query.
          in: query
          name: databaseWebId
          required: false
          schema:
            type: string
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: 'The query string is a list of filters used to perform an AFSearch
            for the analyses in the asset database. An example would be: "query=
            Name:=MyAnalysisTemplate1*".'
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of analysis templates matching the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_AnalysisTemplate_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_AnalysisTemplate_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_AnalysisTemplate_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_AnalysisTemplate_"
      summary: Retrieve analysis templates based on the specified conditions. By
        default, returns all analysis templates.
      tags:
        - AnalysisTemplate
  "/analysistemplates/{webId}":
    delete:
      deprecated: false
      description: Deleting an analysis template will delete any analysis which was created
        from it, unless the analysis is tied to a notification.
      operationId: AnalysisTemplate_Delete
      parameters:
        - description: The ID of the analysis template to update.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The analysis template was deleted.
      summary: Delete an analysis template.
      tags:
        - AnalysisTemplate
    get:
      deprecated: false
      operationId: AnalysisTemplate_Get
      parameters:
        - description: The ID of the analysis template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified analysis template.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalysisTemplate"
            text/json:
              schema:
                $ref: "#/components/schemas/AnalysisTemplate"
            text/html:
              schema:
                $ref: "#/components/schemas/AnalysisTemplate"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/AnalysisTemplate"
      summary: Retrieve an analysis template.
      tags:
        - AnalysisTemplate
    patch:
      deprecated: false
      operationId: AnalysisTemplate_Update
      parameters:
        - description: The ID of the analysis template to update.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnalysisTemplate"
          text/json:
            schema:
              $ref: "#/components/schemas/AnalysisTemplate"
        description: A partial analysis template containing the desired changes.
        required: true
      responses:
        "204":
          description: The analysis template was updated.
      summary: Update an analysis template by replacing items in its definition.
      tags:
        - AnalysisTemplate
  "/analysistemplates/{webId}/categories":
    get:
      deprecated: false
      operationId: AnalysisTemplate_GetCategories
      parameters:
        - description: The ID of the analysis template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of categories.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_AnalysisCategory_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_AnalysisCategory_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_AnalysisCategory_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_AnalysisCategory_"
      summary: Get an analysis template's categories.
      tags:
        - AnalysisTemplate
  "/analysistemplates/{webId}/security":
    get:
      deprecated: false
      operationId: AnalysisTemplate_GetSecurity
      parameters:
        - description: The ID of the analysis template for the security to be checked.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The user identity for the security information to be checked.
            Multiple security identities may be specified with multiple
            instances of the parameter. If the parameter is not specified, only
            the current user's security rights will be returned.
          in: query
          name: userIdentity
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Indicates if the security cache should be refreshed before getting
            security information. The default is 'false'.
          in: query
          name: forceRefresh
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Security rights.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
        "400":
          description: An invalid or local account is specified as the user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "401":
          description: Access denied for the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: Unsupported when using Anonymous authentication method.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "502":
          description: Failed to retrieve the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Get the security information of the specified security item associated
        with the analysis template for a specified user.
      tags:
        - AnalysisTemplate
  "/analysistemplates/{webId}/securityentries":
    get:
      deprecated: false
      operationId: AnalysisTemplate_GetSecurityEntries
      parameters:
        - description: The ID of the analysis template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The name query string used for filtering security entries. The
            default is no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of security entries matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
      summary: Retrieve the security entries associated with the analysis template
        based on the specified criteria. By default, all security entries for
        this analysis template are returned.
      tags:
        - AnalysisTemplate
    post:
      deprecated: false
      operationId: AnalysisTemplate_CreateSecurityEntry
      parameters:
        - description: The ID of the analysis template, where the security entry will be
            created.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry"
      responses:
        "201":
          description: The security entry was created. The response's Location header is a
            link to the security entry.
      summary: Create a security entry owned by the analysis template.
      tags:
        - AnalysisTemplate
  "/analysistemplates/{webId}/securityentries/{name}":
    delete:
      deprecated: false
      operationId: AnalysisTemplate_DeleteSecurityEntry
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the analysis template, where the security entry will be
            deleted.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      responses:
        "204":
          description: The security entry was deleted.
      summary: Delete a security entry owned by the analysis template.
      tags:
        - AnalysisTemplate
    get:
      deprecated: false
      operationId: AnalysisTemplate_GetSecurityEntryByName
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the analysis template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The security entry matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/html:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
        "404":
          description: The security entry with the specified name is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Retrieve the security entry associated with the analysis template with
        the specified name.
      tags:
        - AnalysisTemplate
    put:
      deprecated: false
      operationId: AnalysisTemplate_UpdateSecurityEntry
      parameters:
        - description: The name of the security entry.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the analysis template, where the security entry will be
            updated.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry2"
      responses:
        "204":
          description: The security entry was updated.
      summary: Update a security entry owned by the analysis template.
      tags:
        - AnalysisTemplate
  /assetdatabases:
    get:
      deprecated: false
      description: This method returns an asset database based on the hierarchical path
        associated with it, and should be used when a path has been received
        from a separate part of the PI System for use in the PI Web API. Users
        should primarily search with the WebID when available.
      operationId: AssetDatabase_GetByPath
      parameters:
        - description: The path to the database.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified database.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssetDatabase"
            text/json:
              schema:
                $ref: "#/components/schemas/AssetDatabase"
            text/html:
              schema:
                $ref: "#/components/schemas/AssetDatabase"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/AssetDatabase"
      summary: Retrieve an Asset Database by path.
      tags:
        - AssetDatabase
  "/assetdatabases/{webId}":
    delete:
      deprecated: false
      operationId: AssetDatabase_Delete
      parameters:
        - description: The ID of the database.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The database was deleted.
      summary: Delete an asset database.
      tags:
        - AssetDatabase
    get:
      deprecated: false
      operationId: AssetDatabase_Get
      parameters:
        - description: The ID of the database.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified database.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssetDatabase"
            text/json:
              schema:
                $ref: "#/components/schemas/AssetDatabase"
            text/html:
              schema:
                $ref: "#/components/schemas/AssetDatabase"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/AssetDatabase"
      summary: Retrieve an Asset Database.
      tags:
        - AssetDatabase
    patch:
      deprecated: false
      operationId: AssetDatabase_Update
      parameters:
        - description: The ID of the database.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssetDatabase"
          text/json:
            schema:
              $ref: "#/components/schemas/AssetDatabase"
        description: A partial database containing the desired changes.
        required: true
      responses:
        "204":
          description: The database was updated.
      summary: Update an asset database by replacing items in its definition.
      tags:
        - AssetDatabase
  "/assetdatabases/{webId}/analyses":
    get:
      deprecated: false
      description: Users can search for the analyses based on specific search parameters.
        If no parameters are specified in the search, the default values for
        each parameter will be used and will return the analyses that match the
        default search.
      operationId: AssetDatabase_FindAnalyses
      parameters:
        - description: The ID of the database to search for the analyses.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Specifies which of the object's properties are searched. Multiple
            search fields may be specified with multiple instances of the
            parameter. The default is 'Name'.
          in: query
          name: field
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: The query string used for finding analyses. The default is null.
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The field or property of the object used to sort the returned
            collection. The default is 'Name'.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of analyses matching the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Analysis_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Analysis_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Analysis_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Analysis_"
      summary: Retrieve analyses based on the specified conditions.
      tags:
        - AssetDatabase
  "/assetdatabases/{webId}/analysiscategories":
    get:
      deprecated: false
      operationId: AssetDatabase_GetAnalysisCategories
      parameters:
        - description: The ID of the database.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The analysis categories that exist in the database.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_AnalysisCategory_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_AnalysisCategory_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_AnalysisCategory_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_AnalysisCategory_"
      summary: Retrieve analysis categories for a given Asset Database.
      tags:
        - AssetDatabase
    post:
      deprecated: false
      operationId: AssetDatabase_CreateAnalysisCategory
      parameters:
        - description: The ID of the database in which to create the analysis category.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnalysisCategory"
          text/json:
            schema:
              $ref: "#/components/schemas/AnalysisCategory"
        description: The new analysis category definition.
        required: true
      responses:
        "201":
          description: The analysis category was created. The response's Location header is
            a link to the analysis category.
      summary: Create an analysis category at the Asset Database root.
      tags:
        - AssetDatabase
  "/assetdatabases/{webId}/analysistemplates":
    get:
      deprecated: false
      description: Users can search for the analysis templates based on specific search
        parameters. If no parameters are specified in the search, the default
        values for each parameter will be used and will return the templates
        that match the default search.
      operationId: AssetDatabase_GetAnalysisTemplates
      parameters:
        - description: The ID of the database to search.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Specifies which of the object's properties are searched. Multiple
            search fields may be specified with multiple instances of the
            parameter. The default is 'Name'.
          in: query
          name: field
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: The query string used for finding objects. The default is no query
            string.
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The field or property of the object used to sort the returned
            collection. The default is 'Name'.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of analysis templates matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_AnalysisTemplate_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_AnalysisTemplate_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_AnalysisTemplate_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_AnalysisTemplate_"
      summary: Retrieve analysis templates based on the specified criteria. By default,
        all analysis templates in the specified Asset Database are returned.
      tags:
        - AssetDatabase
    post:
      deprecated: false
      description: Analyses that are based on an analysis template will inherit
        characteristics defined in the template.
      operationId: AssetDatabase_CreateAnalysisTemplate
      parameters:
        - description: The ID of the database in which to create the analysis template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnalysisTemplate"
          text/json:
            schema:
              $ref: "#/components/schemas/AnalysisTemplate"
        description: The new analysis template definition.
        required: true
      responses:
        "201":
          description: The analysis template was created. The response's Location header is
            a link to the created template.
      summary: Create an analysis template at the Asset Database root.
      tags:
        - AssetDatabase
  "/assetdatabases/{webId}/attributecategories":
    get:
      deprecated: false
      operationId: AssetDatabase_GetAttributeCategories
      parameters:
        - description: The ID of the database.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The attribute categories that exist in the database.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_AttributeCategory_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_AttributeCategory_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_AttributeCategory_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_AttributeCategory_"
      summary: Retrieve attribute categories for a given Asset Database.
      tags:
        - AssetDatabase
    post:
      deprecated: false
      operationId: AssetDatabase_CreateAttributeCategory
      parameters:
        - description: The ID of the database in which to create the attribute category.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttributeCategory"
          text/json:
            schema:
              $ref: "#/components/schemas/AttributeCategory"
        description: The new attribute category definition.
        required: true
      responses:
        "201":
          description: The attribute category was created. The response's Location header
            is a link to the attribute category.
      summary: Create an attribute category at the Asset Database root.
      tags:
        - AssetDatabase
  "/assetdatabases/{webId}/elementattributes":
    get:
      deprecated: false
      operationId: AssetDatabase_FindElementAttributes
      parameters:
        - description: The ID of the asset database to use as the root of the search.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports DataReference to return attributes with data
            references. If this parameter is not specified, DataReference values
            are not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: Specify that returned attributes must have this category. The
            default is no filter.
          in: query
          name: attributeCategory
          required: false
          schema:
            type: string
        - description: The attribute description filter string used for finding objects.
            Only the first 440 characters of the description will be searched.
            For Asset Servers older than 2.7, a 400 status code (Bad Request)
            will be returned if this parameter is specified. The default is no
            filter.
          in: query
          name: attributeDescriptionFilter
          required: false
          schema:
            type: string
        - description: The attribute name filter string used for finding objects. The
            default is no filter.
          in: query
          name: attributeNameFilter
          required: false
          schema:
            type: string
        - description: Specify that returned attributes' value type must be this value
            type. The default is no filter.
          in: query
          name: attributeType
          required: false
          schema:
            type: string
        - description: Specify that the owner of the returned attributes must have this
            category. The default is no filter.
          in: query
          name: elementCategory
          required: false
          schema:
            type: string
        - description: The element description filter string used for finding objects. Only
            the first 440 characters of the description will be searched. For
            Asset Servers older than 2.7, a 400 status code (Bad Request) will
            be returned if this parameter is specified. The default is no
            filter.
          in: query
          name: elementDescriptionFilter
          required: false
          schema:
            type: string
        - description: The element name filter string used for finding objects. The default
            is no filter.
          in: query
          name: elementNameFilter
          required: false
          schema:
            type: string
        - description: Specify that the owner of the returned attributes must have this
            template or a template derived from this template. The default is no
            filter.
          in: query
          name: elementTemplate
          required: false
          schema:
            type: string
        - description: Specify that the element of the returned attributes must have this
            AFElementType. The default is no filter.
          in: query
          name: elementType
          required: false
          schema:
            type: string
        - description: The maximum number of objects to be returned (the page size). The
            default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: Specifies if the search should include objects nested further than
            immediate children of the given resource. The default is 'false'.
          in: query
          name: searchFullHierarchy
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The field or property of the object used to sort the returned
            collection. The default is 'Name'.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: a list of matching attributes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
      summary: Retrieves a list of element attributes matching the specified filters
        from the specified asset database.
      tags:
        - AssetDatabase
  "/assetdatabases/{webId}/elementcategories":
    get:
      deprecated: false
      operationId: AssetDatabase_GetElementCategories
      parameters:
        - description: The ID of the database.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The element categories that exist in the database.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_ElementCategory_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_ElementCategory_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_ElementCategory_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_ElementCategory_"
      summary: Retrieve element categories for a given Asset Database.
      tags:
        - AssetDatabase
    post:
      deprecated: false
      operationId: AssetDatabase_CreateElementCategory
      parameters:
        - description: The ID of the database in which to create the element category.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ElementCategory"
          text/json:
            schema:
              $ref: "#/components/schemas/ElementCategory"
        description: The new element category definition.
        required: true
      responses:
        "201":
          description: The element category was created. The response's Location header is
            a link to the element category.
      summary: Create an element category at the Asset Database root.
      tags:
        - AssetDatabase
  "/assetdatabases/{webId}/elements":
    get:
      deprecated: false
      description: Users can search for the elements based on specific search parameters.
        If no parameters are specified in the search, the default values for
        each parameter will be used and will return the elements that match the
        default search.
      operationId: AssetDatabase_GetElements
      parameters:
        - description: The ID of the database to use as the root of the search.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports Paths to return all paths to the element. If
            this parameter is not specified, paths are not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: Specify that returned elements must have this category. The default
            is no category filter.
          in: query
          name: categoryName
          required: false
          schema:
            type: string
        - description: Specify that returned elements must have this description. The
            default is no description filter.
          in: query
          name: descriptionFilter
          required: false
          schema:
            type: string
        - description: Specify that returned elements must have this type. The default type
            is 'Any'.
          in: query
          name: elementType
          required: false
          schema:
            type: string
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: The name query string used for finding objects. The default is no
            filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: Specifies if the search should include objects nested further than
            the immediate children of the searchRoot. The default is 'false'.
          in: query
          name: searchFullHierarchy
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The field or property of the object used to sort the returned
            collection. The default is 'Name'.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: Specify that returned elements must have this template or a template
            derived from this template. The default is no template filter.
          in: query
          name: templateName
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of elements matching the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Element_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Element_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Element_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Element_"
      summary: Retrieve elements based on the specified conditions. By default, this
        method selects immediate children of the specified asset database.
      tags:
        - AssetDatabase
    post:
      deprecated: false
      operationId: AssetDatabase_CreateElement
      parameters:
        - description: The ID of the asset database on which to create the element.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Element"
      responses:
        "201":
          description: The element was created. The response's Location header is a link to
            the element.
      summary: Create a child element.
      tags:
        - AssetDatabase
  "/assetdatabases/{webId}/elementtemplates":
    get:
      deprecated: false
      description: Users can search for the element and event frame template based on
        specific search parameters. If no parameters are specified in the
        search, the default values for each parameter will be used and will
        return the templates that match the default search.
      operationId: AssetDatabase_GetElementTemplates
      parameters:
        - description: The ID of the database to search.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Specifies which of the object's properties are searched. Multiple
            search fields may be specified with multiple instances of the
            parameter. The default is 'Name'.
          in: query
          name: field
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: The query string used for finding objects. The default is no query
            string.
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The field or property of the object used to sort the returned
            collection. The default is 'Name'.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of element templates matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_ElementTemplate_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_ElementTemplate_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_ElementTemplate_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_ElementTemplate_"
      summary: Retrieve element templates based on the specified criteria. Only
        templates of instance type "Element" and "EventFrame" are returned. By
        default, all element and event frame templates in the specified Asset
        Database are returned.
      tags:
        - AssetDatabase
    post:
      deprecated: false
      description: Elements and event frames that are based on an element template will
        inherit characteristics defined in the template.
      operationId: AssetDatabase_CreateElementTemplate
      parameters:
        - description: The ID of the database in which to create the element template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ElementTemplate"
          text/json:
            schema:
              $ref: "#/components/schemas/ElementTemplate"
        description: The new element template definition.
        required: true
      responses:
        "201":
          description: The element template was created. The response's Location header is
            a link to the created template.
      summary: Create a template at the Asset Database root. Specify InstanceType of
        "Element" or "EventFrame" to create element or event frame template
        respectively. Only these two types of templates can be created.
      tags:
        - AssetDatabase
  "/assetdatabases/{webId}/enumerationsets":
    get:
      deprecated: false
      operationId: AssetDatabase_GetEnumerationSets
      parameters:
        - description: The ID of the database.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified enumeration sets.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_EnumerationSet_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_EnumerationSet_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_EnumerationSet_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_EnumerationSet_"
      summary: Retrieve enumeration sets for given asset database.
      tags:
        - AssetDatabase
    post:
      deprecated: false
      operationId: AssetDatabase_CreateEnumerationSet
      parameters:
        - description: The ID of the database in which to create the enumeration set.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/EnumerationSet"
      responses:
        "201":
          description: The enumeration set was created. The response's Location header is a
            link to the created enumeration set.
      summary: Create an enumeration set at the Asset Database.
      tags:
        - AssetDatabase
  "/assetdatabases/{webId}/eventframeattributes":
    get:
      deprecated: false
      operationId: AssetDatabase_FindEventFrameAttributes
      parameters:
        - description: The ID of the asset database to use as the root of the search.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports DataReference to return attributes with data
            references. If this parameter is not specified, DataReference values
            are not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: Specify that returned attributes must have this category. The
            default is no filter.
          in: query
          name: attributeCategory
          required: false
          schema:
            type: string
        - description: The attribute description filter string used for finding objects.
            Only the first 440 characters of the description will be searched.
            For Asset Servers older than 2.7, a 400 status code (Bad Request)
            will be returned if this parameter is specified. The default is no
            filter.
          in: query
          name: attributeDescriptionFilter
          required: false
          schema:
            type: string
        - description: The attribute name filter string used for finding objects. The
            default is no filter.
          in: query
          name: attributeNameFilter
          required: false
          schema:
            type: string
        - description: Specify that returned attributes' value type must be this value
            type. The default is no filter.
          in: query
          name: attributeType
          required: false
          schema:
            type: string
        - description: A string representing the latest ending time for the event frames to
            be matched. The endTime must be greater than or equal to the
            startTime. The default is '*'.
          in: query
          name: endTime
          required: false
          schema:
            type: string
        - description: Specify that the owner of the returned attributes must have this
            category. The default is no filter.
          in: query
          name: eventFrameCategory
          required: false
          schema:
            type: string
        - description: The event frame description filter string used for finding objects.
            Only the first 440 characters of the description will be searched.
            For Asset Servers older than 2.7, a 400 status code (Bad Request)
            will be returned if this parameter is specified. The default is no
            filter.
          in: query
          name: eventFrameDescriptionFilter
          required: false
          schema:
            type: string
        - description: The event frame name filter string used for finding objects. The
            default is no filter.
          in: query
          name: eventFrameNameFilter
          required: false
          schema:
            type: string
        - description: Specify that the owner of the returned attributes must have this
            template or a template derived from this template. The default is no
            filter.
          in: query
          name: eventFrameTemplate
          required: false
          schema:
            type: string
        - description: The maximum number of objects to be returned (the page size). The
            default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: The name query string which must match the name of a referenced
            element. The default is no filter.
          in: query
          name: referencedElementNameFilter
          required: false
          schema:
            type: string
        - description: Specifies if the search should include objects nested further than
            immediate children of the given resource. The default is 'false'.
          in: query
          name: searchFullHierarchy
          required: false
          schema:
            type: boolean
        - description: Determines how the startTime and endTime parameters are treated when
            searching for event frames. The default is 'Overlapped'.
          in: query
          name: searchMode
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The field or property of the object used to sort the returned
            collection. The default is 'Name'.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: A string representing the earliest starting time for the event
            frames to be matched. startTime must be less than or equal to the
            endTime. The default is '*-8h'.
          in: query
          name: startTime
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: a list of matching attributes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
      summary: Retrieves a list of event frame attributes matching the specified
        filters from the specified asset database.
      tags:
        - AssetDatabase
  "/assetdatabases/{webId}/eventframes":
    get:
      deprecated: false
      operationId: AssetDatabase_GetEventFrames
      parameters:
        - description: The ID of the asset database to use as the root of the search.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Specify the returned event frames' canBeAcknowledged property. The
            default is no canBeAcknowledged filter.
          in: query
          name: canBeAcknowledged
          required: false
          schema:
            type: boolean
        - description: Specify that returned event frames must have this category. The
            default is no category filter.
          in: query
          name: categoryName
          required: false
          schema:
            type: string
        - description: The ending time for the search. The endTime must be greater than or
            equal to the startTime. The searchMode parameter will control
            whether the comparison will be performed against the event frame's
            startTime or endTime. The default is '*' if searchMode is not one of
            the 'Backward*' or 'Forward*' values.
          in: query
          name: endTime
          required: false
          schema:
            type: string
        - description: Specify the returned event frames' isAcknowledged property. The
            default no isAcknowledged filter.
          in: query
          name: isAcknowledged
          required: false
          schema:
            type: boolean
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: The name query string used for finding event frames. The default is
            no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: The name query string which must match the name of a referenced
            element. The default is no filter.
          in: query
          name: referencedElementNameFilter
          required: false
          schema:
            type: string
        - description: Specify that returned event frames must have an element in the event
            frame's referenced elements collection that derives from the
            template. Specify this parameter by name.
          in: query
          name: referencedElementTemplateName
          required: false
          schema:
            type: string
        - description: Specifies whether the search should include objects nested further
            than the immediate children of the search root. The default is
            'false'.
          in: query
          name: searchFullHierarchy
          required: false
          schema:
            type: boolean
        - description: Determines how the startTime and endTime parameters are treated when
            searching for event frame objects to be included in the returned
            collection. If this parameter is one of the 'Backward*' or
            'Forward*' values, none of endTime, sortField, or sortOrder may be
            specified. The default is 'Overlapped'.
          in: query
          name: searchMode
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Specify that returned event frames must have this severity. Multiple
            severity values may be specified with multiple instances of the
            parameter. The default is no severity filter.
          in: query
          name: severity
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: The field or property of the object used to sort the returned
            collection. The default is 'Name' if searchMode is not one of the
            'Backward*' or 'Forward*' values.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending' if searchMode is not one of the 'Backward*' or
            'Forward*' values.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: The starting time for the search. startTime must be less than or
            equal to the endTime. The searchMode parameter will control whether
            the comparison will be performed against the event frame's startTime
            or endTime. The default is '*-8h'.
          in: query
          name: startTime
          required: false
          schema:
            type: string
        - description: Specify that returned event frames must have this template or a
            template derived from this template. The default is no template
            filter. Specify this parameter by name.
          in: query
          name: templateName
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of event frames matching the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_EventFrame_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_EventFrame_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_EventFrame_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_EventFrame_"
      summary: Retrieve event frames based on the specified conditions. By default,
        returns all children of the specified root resource that have been
        active in the past 8 hours.
      tags:
        - AssetDatabase
    post:
      deprecated: false
      operationId: AssetDatabase_CreateEventFrame
      parameters:
        - description: The ID of the database on which to create the event frame.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/EventFrame"
      responses:
        "201":
          description: The event frame was created. The response's Location header is a
            link to the event frame.
      summary: Create an event frame.
      tags:
        - AssetDatabase
  "/assetdatabases/{webId}/export":
    get:
      deprecated: false
      operationId: AssetDatabase_Export
      parameters:
        - description: The ID of the database.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The latest ending time for AFEventFrame, AFTransfer, and AFCase
            objects that may be part of the export. The default is '*'.
          in: query
          name: endTime
          required: false
          schema:
            type: string
        - description: Indicates the type of export to perform. The default is
            'StrongReferences'. Multiple export modes may be specified by using
            multiple instances of exportMode.
          in: query
          name: exportMode
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: The earliest starting time for AFEventFrame, AFTransfer, and AFCase
            objects that may be part of the export. The default is '*-30d'.
          in: query
          name: startTime
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Database exported. The response body contains the serialized
            database.
      summary: Export the asset database.
      tags:
        - AssetDatabase
  "/assetdatabases/{webId}/import":
    post:
      deprecated: false
      operationId: AssetDatabase_Import
      parameters:
        - description: The ID of the asset database.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Indicates the type of import to perform. The default is 'AllowCreate
            | AllowUpdate | AutoCheckIn'. Multiple import modes may be specified
            by using multiple instances of importMode.
          in: query
          name: importMode
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Database imported.
      summary: Import an asset database.
      tags:
        - AssetDatabase
  "/assetdatabases/{webId}/referencedelements":
    delete:
      deprecated: false
      operationId: AssetDatabase_RemoveReferencedElement
      parameters:
        - description: The ID of the database which the referenced element will be removed
            from.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The ID of the referenced element. Multiple referenced elements may
            be specified with multiple instances of the parameter.
          in: query
          name: referencedElementWebId
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "204":
          description: The referenced element was successfully removed.
      summary: Remove a reference to an existing element from the specified database.
      tags:
        - AssetDatabase
    get:
      deprecated: false
      description: Users can search for the referenced elements based on specific search
        parameters. If no parameters are specified in the search, the default
        values for each parameter will be used and will return the elements that
        match the default search.
      operationId: AssetDatabase_GetReferencedElements
      parameters:
        - description: The ID of the resource to use as the root of the search.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports Paths to return all paths to the element. If
            this parameter is not specified, paths are not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: Specify that returned elements must have this category. The default
            is no category filter.
          in: query
          name: categoryName
          required: false
          schema:
            type: string
        - description: Specify that returned elements must have this description. The
            default is no description filter.
          in: query
          name: descriptionFilter
          required: false
          schema:
            type: string
        - description: Specify that returned elements must have this type. The default type
            is 'Any'.
          in: query
          name: elementType
          required: false
          schema:
            type: string
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: The name query string used for finding objects. The default is no
            filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The field or property of the object used to sort the returned
            collection. The default is 'Name'.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: Specify that returned elements must have this template or a template
            derived from this template. The default is no template filter.
          in: query
          name: templateName
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of referenced elements matching the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Element_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Element_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Element_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Element_"
      summary: Retrieve referenced elements based on the specified conditions. By
        default, this method selects all referenced elements at the root level
        of the asset database.
      tags:
        - AssetDatabase
    post:
      deprecated: false
      operationId: AssetDatabase_AddReferencedElement
      parameters:
        - description: The ID of the database which the referenced element will be added to.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The ID of the referenced element. Multiple referenced elements may
            be specified with multiple instances of the parameter.
          in: query
          name: referencedElementWebId
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: The name of the reference type between the parent and the referenced
            element. This must be a "strong" reference type. The default is
            "parent-child".
          in: query
          name: referenceType
          required: false
          schema:
            type: string
      responses:
        "204":
          description: The referenced element was successfully added.
        "409":
          description: The referenced element already exists in the collection.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Add a reference to an existing element to the specified database.
      tags:
        - AssetDatabase
  "/assetdatabases/{webId}/security":
    get:
      deprecated: false
      operationId: AssetDatabase_GetSecurity
      parameters:
        - description: The ID of the asset database for the security to be checked.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The security item of the desired security information to be
            returned. Multiple security items may be specified with multiple
            instances of the parameter. If the parameter is not specified, only
            'Default' security item of the security information will be
            returned.
          in: query
          name: securityItem
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: The user identity for the security information to be checked.
            Multiple security identities may be specified with multiple
            instances of the parameter. If the parameter is not specified, only
            the current user's security rights will be returned.
          in: query
          name: userIdentity
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Indicates if the security cache should be refreshed before getting
            security information. The default is 'false'.
          in: query
          name: forceRefresh
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Security rights.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
        "400":
          description: Unsupported security item; an invalid or local account is specified
            as the user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "401":
          description: Access denied for the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: Unsupported when using Anonymous authentication method.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "502":
          description: Failed to retrieve the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Get the security information of the specified security item associated
        with the asset database for a specified user.
      tags:
        - AssetDatabase
  "/assetdatabases/{webId}/securityentries":
    get:
      deprecated: false
      operationId: AssetDatabase_GetSecurityEntries
      parameters:
        - description: The ID of the asset database.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The name query string used for filtering security entries. The
            default is no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: The security item of the desired security entries information to be
            returned. If the parameter is not specified, security entries of the
            'Default' security item will be returned.
          in: query
          name: securityItem
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of security entries matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
      summary: Retrieve the security entries of the specified security item associated
        with the asset database based on the specified criteria. By default, all
        security entries for this asset database are returned.
      tags:
        - AssetDatabase
    post:
      deprecated: false
      operationId: AssetDatabase_CreateSecurityEntry
      parameters:
        - description: The ID of the asset database where the security entry will be
            created.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
        - description: The security item of the desired security entries to be created. If
            the parameter is not specified, security entries of the 'Default'
            security item will be created.
          in: query
          name: securityItem
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry"
      responses:
        "201":
          description: The security entry was created. The response's Location header is a
            link to the security entry.
      summary: Create a security entry owned by the asset database.
      tags:
        - AssetDatabase
  "/assetdatabases/{webId}/securityentries/{name}":
    delete:
      deprecated: false
      operationId: AssetDatabase_DeleteSecurityEntry
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the asset database where the security entry will be
            deleted.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
        - description: The security item of the desired security entries to be deleted. If
            the parameter is not specified, security entries of the 'Default'
            security item will be deleted.
          in: query
          name: securityItem
          required: false
          schema:
            type: string
      responses:
        "204":
          description: The security entry was deleted.
      summary: Delete a security entry owned by the asset database.
      tags:
        - AssetDatabase
    get:
      deprecated: false
      operationId: AssetDatabase_GetSecurityEntryByName
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the asset database.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The security item of the desired security entries information to be
            returned. If the parameter is not specified, security entries of the
            'Default' security item will be returned.
          in: query
          name: securityItem
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The security entry matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/html:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
        "404":
          description: The security entry with the specified name is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Retrieve the security entry of the specified security item associated
        with the asset database with the specified name.
      tags:
        - AssetDatabase
    put:
      deprecated: false
      operationId: AssetDatabase_UpdateSecurityEntry
      parameters:
        - description: The name of the security entry.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the asset database where the security entry will be
            updated.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
        - description: The security item of the desired security entries to be updated. If
            the parameter is not specified, security entries of the 'Default'
            security item will be updated.
          in: query
          name: securityItem
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry2"
      responses:
        "204":
          description: The security entry was updated.
      summary: Update a security entry owned by the asset database.
      tags:
        - AssetDatabase
  "/assetdatabases/{webId}/tablecategories":
    get:
      deprecated: false
      operationId: AssetDatabase_GetTableCategories
      parameters:
        - description: The ID of the database.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The table categories on the specified database.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_TableCategory_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_TableCategory_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_TableCategory_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_TableCategory_"
      summary: Retrieve table categories for a given Asset Database.
      tags:
        - AssetDatabase
    post:
      deprecated: false
      operationId: AssetDatabase_CreateTableCategory
      parameters:
        - description: The ID of the database in which to create the table category.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TableCategory"
          text/json:
            schema:
              $ref: "#/components/schemas/TableCategory"
        description: The new table category definition.
        required: true
      responses:
        "201":
          description: The table category was created. The response's Location header is a
            link to the table category.
      summary: Create a table category on the Asset Database.
      tags:
        - AssetDatabase
  "/assetdatabases/{webId}/tables":
    get:
      deprecated: false
      operationId: AssetDatabase_GetTables
      parameters:
        - description: The ID of the database.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The tables on the specified database.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Table_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Table_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Table_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Table_"
      summary: Retrieve tables for given Asset Database.
      tags:
        - AssetDatabase
    post:
      deprecated: false
      operationId: AssetDatabase_CreateTable
      parameters:
        - description: The ID of the database in which to create the table.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Table"
          text/json:
            schema:
              $ref: "#/components/schemas/Table"
        description: The new table definition.
        required: true
      responses:
        "201":
          description: The table was created. The response's Location header is a link to
            the created table.
      summary: Create a table on the Asset Database.
      tags:
        - AssetDatabase
  /assetservers:
    get:
      deprecated: false
      operationId: AssetServer_List
      parameters:
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of servers.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_AssetServer_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_AssetServer_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_AssetServer_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_AssetServer_"
      summary: Retrieve a list of all Asset Servers known to this service.
      tags:
        - AssetServer
  /assetservers#name:
    get:
      deprecated: false
      description: This method returns an asset server based on the name associated with
        it. Users should primarily search with the WebID when available.
      operationId: AssetServer_GetByName
      parameters:
        - description: The name of the server.
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The requested server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssetServer"
            text/json:
              schema:
                $ref: "#/components/schemas/AssetServer"
            text/html:
              schema:
                $ref: "#/components/schemas/AssetServer"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/AssetServer"
      summary: Retrieve an Asset Server by name.
      tags:
        - AssetServer
  /assetservers#path:
    get:
      deprecated: false
      description: This method returns an asset server based on the hierarchical path
        associated with it, and should be used when a path has been received
        from a separate part of the PI System for use in the PI Web API. Users
        should primarily search with the WebID when available.
      operationId: AssetServer_GetByPath
      parameters:
        - description: The path to the server.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The requested server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssetServer"
            text/json:
              schema:
                $ref: "#/components/schemas/AssetServer"
            text/html:
              schema:
                $ref: "#/components/schemas/AssetServer"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/AssetServer"
      summary: Retrieve an Asset Server by path.
      tags:
        - AssetServer
  "/assetservers/{webId}":
    get:
      deprecated: false
      operationId: AssetServer_Get
      parameters:
        - description: The ID of the server.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The requested server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssetServer"
            text/json:
              schema:
                $ref: "#/components/schemas/AssetServer"
            text/html:
              schema:
                $ref: "#/components/schemas/AssetServer"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/AssetServer"
      summary: Retrieve an Asset Server.
      tags:
        - AssetServer
  "/assetservers/{webId}/analysisruleplugins":
    get:
      deprecated: false
      operationId: AssetServer_GetAnalysisRulePlugIns
      parameters:
        - description: The ID of the asset server, where the Analysis Rule Plug-in's are
            installed.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of Analysis Rule Plug-in's.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_AnalysisRulePlugIn_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_AnalysisRulePlugIn_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_AnalysisRulePlugIn_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_AnalysisRulePlugIn_"
      summary: Retrieve a list of all Analysis Rule Plug-in's.
      tags:
        - AssetServer
  "/assetservers/{webId}/assetdatabases":
    get:
      deprecated: false
      operationId: AssetServer_GetDatabases
      parameters:
        - description: The ID of the server.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of databases.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_AssetDatabase_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_AssetDatabase_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_AssetDatabase_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_AssetDatabase_"
      summary: Retrieve a list of all Asset Databases on the specified Asset Server.
      tags:
        - AssetServer
    post:
      deprecated: false
      operationId: AssetServer_CreateAssetDatabase
      parameters:
        - description: The ID of the asset server on which to create the database.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssetDatabase"
          text/json:
            schema:
              $ref: "#/components/schemas/AssetDatabase"
        description: The new database definition.
        required: true
      responses:
        "201":
          description: The database was created. The response's Location header is a link
            to the database.
      summary: Create an asset database.
      tags:
        - AssetServer
  "/assetservers/{webId}/notificationcontacttemplates":
    get:
      deprecated: false
      operationId: AssetServer_GetNotificationContactTemplates
      parameters:
        - description: The ID of the server.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of notification contact templates.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_NotificationContactTemplate_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_NotificationContactTemplate_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_NotificationContactTemplate_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_NotificationContactTemplate_"
      summary: Retrieve a list of all notification contact templates on the specified
        Asset Server.
      tags:
        - AssetServer
    post:
      deprecated: false
      operationId: AssetServer_CreateNotificationContactTemplate
      parameters:
        - description: The ID of the asset server on which to create the notification
            contact template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationContactTemplate"
          text/json:
            schema:
              $ref: "#/components/schemas/NotificationContactTemplate"
        description: The new notification contact template definition.
        required: true
      responses:
        "201":
          description: The notification contact template was created. The response's
            Location header is a link to the notification contact template.
      summary: Create a notification contact template.
      tags:
        - AssetServer
  "/assetservers/{webId}/notificationplugins":
    get:
      deprecated: false
      operationId: AssetServer_GetNotificationPlugIns
      parameters:
        - description: The ID of the server.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of notification delivery channel plugins.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_NotificationPlugIn_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_NotificationPlugIn_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_NotificationPlugIn_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_NotificationPlugIn_"
      summary: Retrieve a list of all notification plugins on the specified Asset
        Server.
      tags:
        - AssetServer
  "/assetservers/{webId}/security":
    get:
      deprecated: false
      operationId: AssetServer_GetSecurity
      parameters:
        - description: The ID of the asset server for the security to be checked.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The security item of the desired security information to be
            returned. Multiple security items may be specified with multiple
            instances of the parameter. If the parameter is not specified, only
            'Default' security item of the security information will be
            returned.
          in: query
          name: securityItem
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: The user identity for the security information to be checked.
            Multiple security identities may be specified with multiple
            instances of the parameter. If the parameter is not specified, only
            the current user's security rights will be returned.
          in: query
          name: userIdentity
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Indicates if the security cache should be refreshed before getting
            security information. The default is 'false'.
          in: query
          name: forceRefresh
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Security rights.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
        "400":
          description: Unsupported security item; an invalid or local account is specified
            as the user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "401":
          description: Access denied for the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: Unsupported when using Anonymous authentication method.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "502":
          description: Failed to retrieve the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Get the security information of the specified security item associated
        with the asset server for a specified user.
      tags:
        - AssetServer
  "/assetservers/{webId}/securityentries":
    get:
      deprecated: false
      operationId: AssetServer_GetSecurityEntries
      parameters:
        - description: The ID of the asset server.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The name query string used for filtering security entries. The
            default is no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: The security item of the desired security entries information to be
            returned. If the parameter is not specified, security entries of the
            'Default' security item will be returned.
          in: query
          name: securityItem
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of security entries matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
      summary: Retrieve the security entries of the specified security item associated
        with the asset server based on the specified criteria. By default, all
        security entries for this asset server are returned.
      tags:
        - AssetServer
    post:
      deprecated: false
      operationId: AssetServer_CreateSecurityEntry
      parameters:
        - description: The ID of the asset server where the security entry will be created.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
        - description: The security item of the desired security entries to be created. If
            the parameter is not specified, security entries of the 'Default'
            security item will be created.
          in: query
          name: securityItem
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry"
      responses:
        "201":
          description: The security entry was created. The response's Location header is a
            link to the security entry.
      summary: Create a security entry owned by the asset server.
      tags:
        - AssetServer
  "/assetservers/{webId}/securityentries/{name}":
    delete:
      deprecated: false
      operationId: AssetServer_DeleteSecurityEntry
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the asset server where the security entry will be deleted.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
        - description: The security item of the desired security entries to be deleted. If
            the parameter is not specified, security entries of the 'Default'
            security item will be deleted.
          in: query
          name: securityItem
          required: false
          schema:
            type: string
      responses:
        "204":
          description: The security entry was deleted.
      summary: Delete a security entry owned by the asset server.
      tags:
        - AssetServer
    get:
      deprecated: false
      operationId: AssetServer_GetSecurityEntryByName
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the asset server.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The security item of the desired security entries information to be
            returned. If the parameter is not specified, security entries of the
            'Default' security item will be returned.
          in: query
          name: securityItem
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The security entry matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/html:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
        "404":
          description: The security entry with the specified name is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Retrieve the security entry of the specified security item associated
        with the asset server with the specified name.
      tags:
        - AssetServer
    put:
      deprecated: false
      operationId: AssetServer_UpdateSecurityEntry
      parameters:
        - description: The name of the security entry.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the asset server where the security entry will be updated.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
        - description: The security item of the desired security entries to be updated. If
            the parameter is not specified, security entries of the 'Default'
            security item will be updated.
          in: query
          name: securityItem
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry2"
      responses:
        "204":
          description: The security entry was updated.
      summary: Update a security entry owned by the asset server.
      tags:
        - AssetServer
  "/assetservers/{webId}/securityidentities":
    get:
      deprecated: false
      operationId: AssetServer_GetSecurityIdentities
      parameters:
        - description: The ID of the asset server to search.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Specifies which of the object's properties are searched. The default
            is 'Name'.
          in: query
          name: field
          required: false
          schema:
            type: string
        - description: The maximum number of objects to be returned. The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: The query string used for finding objects. The default is no query
            string.
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The field or property of the object used to sort the returned
            collection. The default is 'Name'.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of security identities matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityIdentity_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityIdentity_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityIdentity_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityIdentity_"
      summary: Retrieve security identities based on the specified criteria. By
        default, all security identities in the specified Asset Server are
        returned.
      tags:
        - AssetServer
    post:
      deprecated: false
      operationId: AssetServer_CreateSecurityIdentity
      parameters:
        - description: The ID of the asset server on which to create the security identity.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SecurityIdentity"
          text/json:
            schema:
              $ref: "#/components/schemas/SecurityIdentity"
        description: The new security identity definition.
        required: true
      responses:
        "201":
          description: The security identity was created. The response's Location header is
            a link to the security identity.
      summary: Create a security identity.
      tags:
        - AssetServer
  "/assetservers/{webId}/securityidentities#userIdentity":
    get:
      deprecated: false
      operationId: AssetServer_GetSecurityIdentitiesForUser
      parameters:
        - description: The ID of the server.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The user identity to search for.
          in: query
          name: userIdentity
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of security identities for the specified user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityIdentity_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityIdentity_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityIdentity_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityIdentity_"
        "400":
          description: Unsupported security item; an invalid or local account is specified
            as the user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "401":
          description: Access denied for the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "502":
          description: Failed to retrieve the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Retrieve security identities for a specific user.
      tags:
        - AssetServer
  "/assetservers/{webId}/securitymappings":
    get:
      deprecated: false
      operationId: AssetServer_GetSecurityMappings
      parameters:
        - description: The ID of the asset server to search.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Specifies which of the object's properties are searched. The default
            is 'Name'.
          in: query
          name: field
          required: false
          schema:
            type: string
        - description: The maximum number of objects to be returned. The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: The query string used for finding objects. The default is no query
            string.
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The field or property of the object used to sort the returned
            collection. The default is 'Name'.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of security mappings matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityMapping_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityMapping_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityMapping_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityMapping_"
      summary: Retrieve security mappings based on the specified criteria. By default,
        all security mappings in the specified Asset Server are returned.
      tags:
        - AssetServer
    post:
      deprecated: false
      operationId: AssetServer_CreateSecurityMapping
      parameters:
        - description: The ID of the asset server on which to create the security mapping.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SecurityMapping"
          text/json:
            schema:
              $ref: "#/components/schemas/SecurityMapping"
        description: The new security mapping definition.
        required: true
      responses:
        "201":
          description: The security mapping was created. The response's Location header is
            a link to the security mapping.
      summary: Create a security mapping.
      tags:
        - AssetServer
  "/assetservers/{webId}/timeruleplugins":
    get:
      deprecated: false
      operationId: AssetServer_GetTimeRulePlugIns
      parameters:
        - description: The ID of the asset server, where the Time Rule Plug-in's are
            installed.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of Time Rule Plug-in's.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_TimeRulePlugIn_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_TimeRulePlugIn_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_TimeRulePlugIn_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_TimeRulePlugIn_"
      summary: Retrieve a list of all Time Rule Plug-in's.
      tags:
        - AssetServer
  "/assetservers/{webId}/unitclasses":
    get:
      deprecated: false
      operationId: AssetServer_GetUnitClasses
      parameters:
        - description: The ID of the server.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of unit classes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_UnitClass_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_UnitClass_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_UnitClass_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_UnitClass_"
      summary: Retrieve a list of all unit classes on the specified Asset Server.
      tags:
        - AssetServer
    post:
      deprecated: false
      operationId: AssetServer_CreateUnitClass
      parameters:
        - description: The ID of the server.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnitClass"
          text/json:
            schema:
              $ref: "#/components/schemas/UnitClass"
        description: The new unit class definition.
        required: true
      responses:
        "201":
          description: The unit class was created. The response's Location header is a link
            to the unit class.
      summary: Create a unit class in the specified Asset Server.
      tags:
        - AssetServer
  /attributecategories:
    get:
      deprecated: false
      operationId: AttributeCategory_GetByPath
      parameters:
        - description: The path to the target attribute category.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified attribute category.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributeCategory"
            text/json:
              schema:
                $ref: "#/components/schemas/AttributeCategory"
            text/html:
              schema:
                $ref: "#/components/schemas/AttributeCategory"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/AttributeCategory"
      summary: Retrieve an attribute category by path.
      tags:
        - AttributeCategory
  "/attributecategories/{webId}":
    delete:
      deprecated: false
      operationId: AttributeCategory_Delete
      parameters:
        - description: The ID of the attribute category to delete.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The attribute category was deleted.
      summary: Delete an attribute category.
      tags:
        - AttributeCategory
    get:
      deprecated: false
      operationId: AttributeCategory_Get
      parameters:
        - description: The id of the attribute category.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified attribute category.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributeCategory"
            text/json:
              schema:
                $ref: "#/components/schemas/AttributeCategory"
            text/html:
              schema:
                $ref: "#/components/schemas/AttributeCategory"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/AttributeCategory"
      summary: Retrieve an attribute category.
      tags:
        - AttributeCategory
    patch:
      deprecated: false
      operationId: AttributeCategory_Update
      parameters:
        - description: The ID of the attribute category to update.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttributeCategory"
          text/json:
            schema:
              $ref: "#/components/schemas/AttributeCategory"
        description: A partial attribute category containing the desired changes.
        required: true
      responses:
        "204":
          description: The attribute category was updated.
      summary: Update an attribute category by replacing items in its definition.
      tags:
        - AttributeCategory
  "/attributecategories/{webId}/security":
    get:
      deprecated: false
      operationId: AttributeCategory_GetSecurity
      parameters:
        - description: The ID of the attribute category for the security to be checked.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The user identity for the security information to be checked.
            Multiple security identities may be specified with multiple
            instances of the parameter. If the parameter is not specified, only
            the current user's security rights will be returned.
          in: query
          name: userIdentity
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Indicates if the security cache should be refreshed before getting
            security information. The default is 'false'.
          in: query
          name: forceRefresh
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Security rights.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
        "400":
          description: An invalid or local account is specified as the user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "401":
          description: Access denied for the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: Unsupported when using Anonymous authentication method.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "502":
          description: Failed to retrieve the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Get the security information of the specified security item associated
        with the attribute category for a specified user.
      tags:
        - AttributeCategory
  "/attributecategories/{webId}/securityentries":
    get:
      deprecated: false
      operationId: AttributeCategory_GetSecurityEntries
      parameters:
        - description: The ID of the attribute category.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The name query string used for filtering security entries. The
            default is no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of security entries matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
      summary: Retrieve the security entries associated with the attribute category
        based on the specified criteria. By default, all security entries for
        this attribute category are returned.
      tags:
        - AttributeCategory
    post:
      deprecated: false
      operationId: AttributeCategory_CreateSecurityEntry
      parameters:
        - description: The ID of the attribute category where the security entry will be
            created.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry"
      responses:
        "201":
          description: The security entry was created. The response's Location header is a
            link to the security entry.
      summary: Create a security entry owned by the attribute category.
      tags:
        - AttributeCategory
  "/attributecategories/{webId}/securityentries/{name}":
    delete:
      deprecated: false
      operationId: AttributeCategory_DeleteSecurityEntry
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the attribute category where the security entry will be
            deleted.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      responses:
        "204":
          description: The security entry was deleted.
      summary: Delete a security entry owned by the attribute category.
      tags:
        - AttributeCategory
    get:
      deprecated: false
      operationId: AttributeCategory_GetSecurityEntryByName
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the attribute category.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The security entry matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/html:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
        "404":
          description: The security entry with the specified name is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Retrieve the security entry associated with the attribute category with
        the specified name.
      tags:
        - AttributeCategory
    put:
      deprecated: false
      operationId: AttributeCategory_UpdateSecurityEntry
      parameters:
        - description: The name of the security entry.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the attribute category where the security entry will be
            updated.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry2"
      responses:
        "204":
          description: The security entry was updated.
      summary: Update a security entry owned by the attribute category.
      tags:
        - AttributeCategory
  /attributes:
    get:
      deprecated: false
      description: This method returns an attribute based on the hierarchical path
        associated with it, and should be used when a path has been received
        from a separate part of the PI System for use in the PI Web API. Users
        should primarily search with the WebID when available.
      operationId: Attribute_GetByPath
      parameters:
        - description: The path to the attribute.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports DataReference to return attributes with data
            references. If this parameter is not specified, DataReference values
            are not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The requested attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Attribute"
            text/json:
              schema:
                $ref: "#/components/schemas/Attribute"
            text/html:
              schema:
                $ref: "#/components/schemas/Attribute"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Attribute"
      summary: Retrieve an attribute by path.
      tags:
        - Attribute
  /attributes/multiple:
    get:
      deprecated: false
      operationId: Attribute_GetMultiple
      parameters:
        - description: Specifies if the retrieval processes should be run in parallel on
            the server. This may improve the response time for large amounts of
            requested attributes. The default is 'false'.
          in: query
          name: asParallel
          required: false
          schema:
            type: boolean
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports DataReference to return attributes with data
            references. If this parameter is not specified, DataReference values
            are not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: The include mode for the return list. The default is 'All'.
          in: query
          name: includeMode
          required: false
          schema:
            type: string
        - description: The path of an attribute. Multiple attributes may be specified with
            multiple instances of the parameter.
          in: query
          name: path
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The ID of an attribute. Multiple attributes may be specified with
            multiple instances of the parameter.
          in: query
          name: webId
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The requested attributes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Item_Attribute_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Item_Attribute_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Item_Attribute_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Item_Attribute_"
        "207":
          description: Some or all items contain exceptions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Item_Attribute_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Item_Attribute_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Item_Attribute_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Item_Attribute_"
      summary: Retrieve multiple attributes by web id or path.
      tags:
        - Attribute
  /attributes/search:
    get:
      deprecated: false
      operationId: Attribute_GetAttributesQuery
      parameters:
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports DataReference to return attributes with data
            references. If this parameter is not specified, DataReference values
            are not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: The ID of the asset database to use as the root of the query.
          in: query
          name: databaseWebId
          required: false
          schema:
            type: string
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: "The query string is a list of filters used to perform an AFSearch
            for the attributes in the asset database. An example would be:
            \"query=Element:{ Name:='MyElement' } Type:=Int32\"."
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of attributes matching the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
      summary: Retrieve attributes based on the specified conditions. Returns
        attributes using the specified search query string.
      tags:
        - Attribute
  "/attributes/{webId}":
    delete:
      deprecated: false
      operationId: Attribute_Delete
      parameters:
        - description: The ID of the attribute.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The attribute was deleted.
      summary: Delete an attribute.
      tags:
        - Attribute
    get:
      deprecated: false
      operationId: Attribute_Get
      parameters:
        - description: The ID of the attribute.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports DataReference to return attributes with data
            references. If this parameter is not specified, DataReference values
            are not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The requested attribute.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Attribute"
            text/json:
              schema:
                $ref: "#/components/schemas/Attribute"
            text/html:
              schema:
                $ref: "#/components/schemas/Attribute"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Attribute"
      summary: Retrieve an attribute.
      tags:
        - Attribute
    patch:
      deprecated: false
      description: If an attribute is based on a template, the user must make sure to
        update the attribute appropriately so that it does not conflict with the
        template's design. Once a template is applied to an attribute, it can
        not be changed.
      operationId: Attribute_Update
      parameters:
        - description: The ID of the attribute.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Attribute"
          text/json:
            schema:
              $ref: "#/components/schemas/Attribute"
        description: A partial attribute containing the desired changes.
        required: true
      responses:
        "204":
          description: The attribute was updated.
      summary: Update an attribute by replacing items in its definition.
      tags:
        - Attribute
  "/attributes/{webId}/attributes":
    get:
      deprecated: false
      operationId: Attribute_GetAttributes
      parameters:
        - description: The ID of the parent attribute.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports DataReference to return attributes with data
            references. If this parameter is not specified, DataReference values
            are not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: Specify that returned attributes must have this category. The
            default is no category filter.
          in: query
          name: categoryName
          required: false
          schema:
            type: string
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: The name query string used for finding attributes. The default is no
            filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: Specifies if the search should include attributes nested further
            than the immediate attributes of the searchRoot. The default is
            'false'.
          in: query
          name: searchFullHierarchy
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Specified if the search should include attributes with the Excluded
            property set. The default is 'false'.
          in: query
          name: showExcluded
          required: false
          schema:
            type: boolean
        - description: Specified if the search should include attributes with the Hidden
            property set. The default is 'false'.
          in: query
          name: showHidden
          required: false
          schema:
            type: boolean
        - description: The field or property of the object used to sort the returned
            collection. The default is 'Name'.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: Specify that returned attributes must be members of this template.
            The default is no template filter.
          in: query
          name: templateName
          required: false
          schema:
            type: string
        - description: The name of the attribute trait. Multiple traits may be specified
            with multiple instances of the parameter.
          in: query
          name: trait
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: The category of the attribute traits. Multiple categories may be
            specified with multiple instances of the parameter. If the parameter
            is not specified, or if its value is "all", then all attribute
            traits of all categories will be returned.
          in: query
          name: traitCategory
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Specify that returned attributes' value type must be the given value
            type. The default is no value type filter.
          in: query
          name: valueType
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of child attributes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
      summary: Get the child attributes of the specified attribute.
      tags:
        - Attribute
    post:
      deprecated: false
      operationId: Attribute_CreateAttribute
      parameters:
        - description: The ID of the parent attribute on which to create the attribute.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Attribute"
      responses:
        "201":
          description: The attribute was created. The response's Location header is a link
            to the created attribute.
      summary: Create a new attribute as a child of the specified attribute.
      tags:
        - Attribute
  "/attributes/{webId}/categories":
    get:
      deprecated: false
      operationId: Attribute_GetCategories
      parameters:
        - description: The ID of the attribute.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of categories.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_AttributeCategory_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_AttributeCategory_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_AttributeCategory_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_AttributeCategory_"
      summary: Get an attribute's categories.
      tags:
        - Attribute
  "/attributes/{webId}/config":
    post:
      deprecated: false
      operationId: Attribute_CreateConfig
      parameters:
        - description: The ID of the attribute.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "201":
          description: The attribute's DataReference configuration was created or updated.
      summary: Create or update an attribute's DataReference configuration
        (Create/Update PI point for PI Point DataReference).
      tags:
        - Attribute
  "/attributes/{webId}/value":
    get:
      deprecated: false
      operationId: Attribute_GetValue
      parameters:
        - description: The ID of the attribute.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The attribute's value.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimedValue"
            text/json:
              schema:
                $ref: "#/components/schemas/TimedValue"
            text/html:
              schema:
                $ref: "#/components/schemas/TimedValue"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/TimedValue"
      summary: Get the attribute's value. This call is intended for use with attributes
        that have no data reference only. For attributes with a data reference,
        consult the documentation for Streams.
      tags:
        - Attribute
    put:
      deprecated: false
      description: Users must be aware of the value type that the attribute takes before
        changing the value. If a value entered by the user does not match the
        value type expressed in the attribute, it will not work or it will
        return an error. Users should also be careful of what the value type
        means, for instance, if a value type accepts strings and the user enters
        a number, the attribute will interpret it as a string of characters and
        not as the integer value that the user may have wanted.
      operationId: Attribute_SetValue
      parameters:
        - description: The ID of the attribute.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TimedValue"
          text/json:
            schema:
              $ref: "#/components/schemas/TimedValue"
        description: The value to write.
        required: true
      responses:
        "204":
          description: The value was set successfully.
      summary: Set the value of a configuration item attribute. For attributes with a
        data reference or non-configuration item attributes, consult the
        documentation for streams.
      tags:
        - Attribute
  /attributetemplates:
    get:
      deprecated: false
      description: This method returns an attribute template based on the hierarchical path
        associated with it, and should be used when a path has been received
        from a separate part of the PI System for use in the PI Web API. Users
        should primarily search with the WebID when available.
      operationId: AttributeTemplate_GetByPath
      parameters:
        - description: The path to the attribute template.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified attribute template.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributeTemplate"
            text/json:
              schema:
                $ref: "#/components/schemas/AttributeTemplate"
            text/html:
              schema:
                $ref: "#/components/schemas/AttributeTemplate"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/AttributeTemplate"
      summary: Retrieve an attribute template by path.
      tags:
        - AttributeTemplate
  "/attributetemplates/{webId}":
    delete:
      deprecated: false
      description: Deleting an attribute template will delete the attributes that were
        created based on the template
      operationId: AttributeTemplate_Delete
      parameters:
        - description: The ID of the attribute template.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The attribute template was deleted.
      summary: Delete an attribute template.
      tags:
        - AttributeTemplate
    get:
      deprecated: false
      operationId: AttributeTemplate_Get
      parameters:
        - description: The ID of the attribute template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified attribute template.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributeTemplate"
            text/json:
              schema:
                $ref: "#/components/schemas/AttributeTemplate"
            text/html:
              schema:
                $ref: "#/components/schemas/AttributeTemplate"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/AttributeTemplate"
      summary: Retrieve an attribute template.
      tags:
        - AttributeTemplate
    patch:
      deprecated: false
      description: Updating an attribute template will propagate changes to the attributes
        that were created based on the template
      operationId: AttributeTemplate_Update
      parameters:
        - description: The ID of the attribute template.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttributeTemplate"
          text/json:
            schema:
              $ref: "#/components/schemas/AttributeTemplate"
        description: A partial attribute template containing the desired changes.
        required: true
      responses:
        "204":
          description: The attribute template was updated.
      summary: Update an existing attribute template by replacing items in its
        definition.
      tags:
        - AttributeTemplate
  "/attributetemplates/{webId}/attributetemplates":
    get:
      deprecated: false
      operationId: AttributeTemplate_GetAttributeTemplates
      parameters:
        - description: The ID of the attribute template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of child attribute templates.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_AttributeTemplate_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_AttributeTemplate_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_AttributeTemplate_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_AttributeTemplate_"
      summary: Retrieve an attribute template's child attribute templates.
      tags:
        - AttributeTemplate
    post:
      deprecated: false
      operationId: AttributeTemplate_CreateAttributeTemplate
      parameters:
        - description: The ID of the parent attribute template on which to create the
            attribute template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/AttributeTemplate"
      responses:
        "201":
          description: The attribute template was created. The response's Location header
            is a link to the created resource.
      summary: Create an attribute template as a child of another attribute template.
      tags:
        - AttributeTemplate
  "/attributetemplates/{webId}/categories":
    get:
      deprecated: false
      operationId: AttributeTemplate_GetCategories
      parameters:
        - description: The ID of the attribute template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of categories.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_AttributeCategory_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_AttributeCategory_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_AttributeCategory_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_AttributeCategory_"
      summary: Get an attribute template's categories.
      tags:
        - AttributeTemplate
  /attributetraits:
    get:
      deprecated: false
      operationId: AttributeTrait_GetByCategory
      parameters:
        - description: The category of the attribute traits. Multiple categories may be
            specified with multiple instances of the parameter. If the parameter
            is not specified, or if its value is "all", then all attribute
            traits of all categories will be returned.
          in: query
          name: category
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of attribute traits.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_AttributeTrait_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_AttributeTrait_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_AttributeTrait_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_AttributeTrait_"
      summary: Retrieve all attribute traits of the specified category/categories.
      tags:
        - AttributeTrait
  "/attributetraits/{name}":
    get:
      deprecated: false
      operationId: AttributeTrait_Get
      parameters:
        - description: The name or abbreviation of the attribute trait.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The requested attribute trait.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributeTrait"
            text/json:
              schema:
                $ref: "#/components/schemas/AttributeTrait"
            text/html:
              schema:
                $ref: "#/components/schemas/AttributeTrait"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/AttributeTrait"
      summary: Retrieve an attribute trait.
      tags:
        - AttributeTrait
  /batch:
    post:
      deprecated: false
      operationId: Batch_Execute
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                $ref: "#/components/schemas/Request"
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: "#/components/schemas/Request"
              type: object
        description: The batch of requests.
        required: true
      responses:
        "207":
          description: A dictionary of response information corresponding to the batched
            requests.
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: "#/components/schemas/Response"
                type: object
            text/json:
              schema:
                additionalProperties:
                  $ref: "#/components/schemas/Response"
                type: object
            text/html:
              schema:
                additionalProperties:
                  $ref: "#/components/schemas/Response"
                type: object
            application/x-ms-application:
              schema:
                additionalProperties:
                  $ref: "#/components/schemas/Response"
                type: object
      summary: Execute a batch of requests against the service. As shown in the Sample
        Request, the input is a dictionary with IDs as keys and request objects
        as values. Each request object specifies the HTTP method and the
        resource and, optionally, the content and a list of parent IDs. The list
        of parent IDs specifies which other requests must complete before the
        given request will be executed. The example first creates an element,
        then gets the element by the response's Location header, then creates an
        attribute for the element. Note that the resource can be an absolute URL
        or a JsonPath that references the response to the parent request. The
        batch's response is a dictionary uses keys corresponding those provided
        in the request, with response objects containing a status code, response
        headers, and the response body. A request can alternatively specify a
        request template in place of a resource. In this case, a single JsonPath
        may select multiple tokens, and a separate subrequest will be made from
        the template for each token. The responses of these subrequests will
        returned as the content of a single outer response.
      tags:
        - Batch
  /calculation/intervals:
    get:
      deprecated: false
      operationId: Calculation_GetAtIntervals
      parameters:
        - description: A string containing the expression to be evaluated. The syntax for
            the expression generally follows the Performance Equation syntax as
            described in the PI Server documentation, with the exception that
            expressions which target AF objects use attribute names in place of
            tag names in the equation.
          in: query
          name: expression
          required: true
          schema:
            type: string
        - description: An optional end time. The default is '*' for element attributes and
            points. For event frame attributes, the default is the event frame's
            end time, or '*' if that is not set. Note that if endTime is earlier
            than startTime, the resulting values will be in time-descending
            order.
          in: query
          name: endTime
          required: false
          schema:
            type: string
        - description: A time span specifies how often the filter expression is evaluated
            when computing the summary for an interval.
          in: query
          name: sampleInterval
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: An optional start time. The default is '*-1d' for element attributes
            and points. For event frame attributes, the default is the event
            frame's start time, or '*-1d' if that is not set.
          in: query
          name: startTime
          required: false
          schema:
            type: string
        - description: The ID of the target object of the expression. A target object can
            be a Data Server, a database, an element, an event frame or an
            attribute. References to attributes or points are based on the
            target. If this parameter is not provided, the target object is set
            to null.
          in: query
          name: webId
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The calculated values.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimedValues"
            text/json:
              schema:
                $ref: "#/components/schemas/TimedValues"
            text/html:
              schema:
                $ref: "#/components/schemas/TimedValues"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/TimedValues"
        "409":
          description: The targeted object does not support the calculation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Returns results of evaluating the expression over the time range from
        the start time to the end time at a defined interval.
      tags:
        - Calculation
  /calculation/recorded:
    get:
      deprecated: false
      operationId: Calculation_GetAtRecorded
      parameters:
        - description: A string containing the expression to be evaluated. The syntax for
            the expression generally follows the Performance Equation syntax as
            described in the PI Server documentation, with the exception that
            expressions which target AF objects use attribute names in place of
            tag names in the equation.
          in: query
          name: expression
          required: true
          schema:
            type: string
        - description: An optional end time. The default is '*' for element attributes and
            points. For event frame attributes, the default is the event frame's
            end time, or '*' if that is not set. Note that if endTime is earlier
            than startTime, the resulting values will be in time-descending
            order.
          in: query
          name: endTime
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: An optional start time. The default is '*-1d' for element attributes
            and points. For event frame attributes, the default is the event
            frame's start time, or '*-1d' if that is not set.
          in: query
          name: startTime
          required: false
          schema:
            type: string
        - description: The ID of the target object of the expression. A target object can
            be a Data Server, a database, an element, an event frame or an
            attribute. References to attributes or points are based on the
            target. If this parameter is not provided, the target object is set
            to null.
          in: query
          name: webId
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The calculated values.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimedValues"
            text/json:
              schema:
                $ref: "#/components/schemas/TimedValues"
            text/html:
              schema:
                $ref: "#/components/schemas/TimedValues"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/TimedValues"
        "409":
          description: The targeted object does not support the calculation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Returns the result of evaluating the expression at each point in time
        over the time range from the start time to the end time where a recorded
        value exists for a member of the expression.
      tags:
        - Calculation
  /calculation/summary:
    get:
      deprecated: false
      operationId: Calculation_GetSummary
      parameters:
        - description: A string containing the expression to be evaluated. The syntax for
            the expression generally follows the Performance Equation syntax as
            described in the PI Server documentation, with the exception that
            expressions which target AF objects use attribute names in place of
            tag names in the equation.
          in: query
          name: expression
          required: true
          schema:
            type: string
        - description: Specifies the method of evaluating the data over the time range. The
            default is 'TimeWeighted'.
          in: query
          name: calculationBasis
          required: false
          schema:
            type: string
        - description: An optional end time. The default is '*' for element attributes and
            points. For event frame attributes, the default is the event frame's
            end time, or '*' if that is not set. Note that if endTime is earlier
            than startTime, the resulting values will be in time-descending
            order.
          in: query
          name: endTime
          required: false
          schema:
            type: string
        - description: A time span specifies how often the filter expression is evaluated
            when computing the summary for an interval, if the sampleType is
            'Interval'.
          in: query
          name: sampleInterval
          required: false
          schema:
            type: string
        - description: A flag which specifies one or more summaries to compute for each
            interval over the time range. The default is
            'ExpressionRecordedValues'.
          in: query
          name: sampleType
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: An optional start time. The default is '*-1d' for element attributes
            and points. For event frame attributes, the default is the event
            frame's start time, or '*-1d' if that is not set.
          in: query
          name: startTime
          required: false
          schema:
            type: string
        - description: The duration of each summary interval.
          in: query
          name: summaryDuration
          required: false
          schema:
            type: string
        - description: Specifies the kinds of summaries to produce over the range. The
            default is 'Total'. Multiple summary types may be specified by using
            multiple instances of summaryType.
          in: query
          name: summaryType
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Specifies how to calculate the timestamp for each interval. The
            default is 'Auto'.
          in: query
          name: timeType
          required: false
          schema:
            type: string
        - description: The ID of the target object of the expression. A target object can
            be a Data Server, a database, an element, an event frame or an
            attribute. References to attributes or points are based on the
            target. If this parameter is not provided, the target object is set
            to null.
          in: query
          name: webId
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The calculated values.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SummaryValue_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SummaryValue_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SummaryValue_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SummaryValue_"
        "409":
          description: The targeted object does not support the calculation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Returns the result of evaluating the expression over the time range from
        the start time to the end time. The time range is first divided into a
        number of summary intervals. Then the calculation is performed for the
        specified summaries over each interval.
      tags:
        - Calculation
  /calculation/times:
    get:
      deprecated: false
      operationId: Calculation_GetAtTimes
      parameters:
        - description: A string containing the expression to be evaluated. The syntax for
            the expression generally follows the Performance Equation syntax as
            described in the PI Server documentation, with the exception that
            expressions which target AF objects use attribute names in place of
            tag names in the equation.
          in: query
          name: expression
          required: true
          schema:
            type: string
        - description: A list of timestamps at which to calculate the expression.
          in: query
          name: time
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: The ID of the target object of the expression. A target object can
            be a Data Server, a database, an element, an event frame or an
            attribute. References to attributes or points are based on the
            target. If this parameter is not provided, the target object is set
            to null.
          in: query
          name: webId
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The calculated values.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimedValues"
            text/json:
              schema:
                $ref: "#/components/schemas/TimedValues"
            text/html:
              schema:
                $ref: "#/components/schemas/TimedValues"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/TimedValues"
        "409":
          description: The targeted object does not support the calculation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Returns the result of evaluating the expression at the specified
        timestamps.
      tags:
        - Calculation
  /channels/instances:
    get:
      deprecated: false
      operationId: Channel_Instances
      responses:
        "200":
          description: A list of currently running channel instances.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_ChannelInstance_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_ChannelInstance_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_ChannelInstance_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_ChannelInstance_"
      summary: Retrieves a list of currently running channel instances.
      tags:
        - Channel
  /dataservers:
    get:
      deprecated: false
      description: This method returns a list of all available known Data Servers that the
        user can connect to. Even though a server may be returned in the list,
        the user may not have permission to access it.
      operationId: DataServer_List
      parameters:
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of all known servers.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_DataServer_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_DataServer_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_DataServer_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_DataServer_"
      summary: Retrieve a list of Data Servers known to this service.
      tags:
        - DataServer
  /dataservers#name:
    get:
      deprecated: false
      description: This method returns a data server based on the name. Users should
        primarily search with the WebID when available.
      operationId: DataServer_GetByName
      parameters:
        - description: The name of the server.
          in: query
          name: name
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The requested server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataServer"
            text/json:
              schema:
                $ref: "#/components/schemas/DataServer"
            text/html:
              schema:
                $ref: "#/components/schemas/DataServer"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/DataServer"
      summary: Retrieve a Data Server by name.
      tags:
        - DataServer
  /dataservers#path:
    get:
      deprecated: false
      description: This method returns a data server based on the hierarchical path
        associated with it, and should be used when a path has been received
        from a separate part of the PI System for use in the PI Web API. Users
        should primarily search with the WebID when available.
      operationId: DataServer_GetByPath
      parameters:
        - description: The path to the server. Note that the path supplied to this method
            must be of the form '\\servername'.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The requested server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataServer"
            text/json:
              schema:
                $ref: "#/components/schemas/DataServer"
            text/html:
              schema:
                $ref: "#/components/schemas/DataServer"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/DataServer"
      summary: Retrieve a Data Server by path.
      tags:
        - DataServer
  "/dataservers/{webId}":
    get:
      deprecated: false
      operationId: DataServer_Get
      parameters:
        - description: The ID of the server.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The requested server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataServer"
            text/json:
              schema:
                $ref: "#/components/schemas/DataServer"
            text/html:
              schema:
                $ref: "#/components/schemas/DataServer"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/DataServer"
      summary: Retrieve a Data Server.
      tags:
        - DataServer
  "/dataservers/{webId}/enumerationsets":
    get:
      deprecated: false
      operationId: DataServer_GetEnumerationSets
      parameters:
        - description: The ID of the server.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified enumeration sets.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_EnumerationSet_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_EnumerationSet_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_EnumerationSet_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_EnumerationSet_"
      summary: Retrieve enumeration sets for given Data Server.
      tags:
        - DataServer
    post:
      deprecated: false
      operationId: DataServer_CreateEnumerationSet
      parameters:
        - description: The ID of the server on which to create the enumeration set.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/EnumerationSet"
      responses:
        "201":
          description: The enumeration was created. The response's Location header is a
            link to the created enumeration set.
      summary: Create an enumeration set on the Data Server.
      tags:
        - DataServer
  "/dataservers/{webId}/license":
    get:
      deprecated: false
      operationId: DataServer_GetLicense
      parameters:
        - description: The ID of the server.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The case-sensitive name of the module.
          in: query
          name: module
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified license.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataServerLicense"
            text/json:
              schema:
                $ref: "#/components/schemas/DataServerLicense"
            text/html:
              schema:
                $ref: "#/components/schemas/DataServerLicense"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/DataServerLicense"
        "404":
          description: No license with the specified module name existed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Retrieves the specified license for the given Data Server. The fields of
        the response object are string representations of the numerical values
        reported by the Data Server, with "Infinity" representing a license
        field with no limit.
      tags:
        - DataServer
  "/dataservers/{webId}/points":
    get:
      deprecated: false
      description: Users can search for the data servers based on specific search
        parameters. If no parameters are specified in the search, the default
        values for each parameter will be used and will return the data servers
        that match the default search.
      operationId: DataServer_GetPoints
      parameters:
        - description: The ID of the server.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: A query string for filtering by point name. The default is no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is '0'.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of matching points.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Point_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Point_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Point_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Point_"
      summary: Retrieve a list of points on a specified Data Server.
      tags:
        - DataServer
    post:
      deprecated: false
      operationId: DataServer_CreatePoint
      parameters:
        - description: The ID of the server.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Point"
          text/json:
            schema:
              $ref: "#/components/schemas/Point"
        description: The new point definition.
        required: true
      responses:
        "201":
          description: The point was created. The response's Location header is a link to
            the point.
      summary: Create a point in the specified Data Server.
      tags:
        - DataServer
  /elementcategories:
    get:
      deprecated: false
      operationId: ElementCategory_GetByPath
      parameters:
        - description: The path to the target element category.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified element category.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ElementCategory"
            text/json:
              schema:
                $ref: "#/components/schemas/ElementCategory"
            text/html:
              schema:
                $ref: "#/components/schemas/ElementCategory"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/ElementCategory"
      summary: Retrieve an element category by path.
      tags:
        - ElementCategory
  "/elementcategories/{webId}":
    delete:
      deprecated: false
      operationId: ElementCategory_Delete
      parameters:
        - description: The ID of the element category to delete.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The element category was deleted.
      summary: Delete an element category.
      tags:
        - ElementCategory
    get:
      deprecated: false
      operationId: ElementCategory_Get
      parameters:
        - description: The id of the element category.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified element category.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ElementCategory"
            text/json:
              schema:
                $ref: "#/components/schemas/ElementCategory"
            text/html:
              schema:
                $ref: "#/components/schemas/ElementCategory"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/ElementCategory"
      summary: Retrieve an element category.
      tags:
        - ElementCategory
    patch:
      deprecated: false
      operationId: ElementCategory_Update
      parameters:
        - description: The ID of the element category to update.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ElementCategory"
          text/json:
            schema:
              $ref: "#/components/schemas/ElementCategory"
        description: A partial element category containing the desired changes.
        required: true
      responses:
        "204":
          description: The element category was updated.
      summary: Update an element category by replacing items in its definition.
      tags:
        - ElementCategory
  "/elementcategories/{webId}/security":
    get:
      deprecated: false
      operationId: ElementCategory_GetSecurity
      parameters:
        - description: The ID of the element category for the security to be checked.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The user identity for the security information to be checked.
            Multiple security identities may be specified with multiple
            instances of the parameter. If the parameter is not specified, only
            the current user's security rights will be returned.
          in: query
          name: userIdentity
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Indicates if the security cache should be refreshed before getting
            security information. The default is 'false'.
          in: query
          name: forceRefresh
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Security rights.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
        "400":
          description: An invalid or local account is specified as the user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "401":
          description: Access denied for the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: Unsupported when using Anonymous authentication method.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "502":
          description: Failed to retrieve the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Get the security information of the specified security item associated
        with the element category for a specified user.
      tags:
        - ElementCategory
  "/elementcategories/{webId}/securityentries":
    get:
      deprecated: false
      operationId: ElementCategory_GetSecurityEntries
      parameters:
        - description: The ID of the element category.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The name query string used for filtering security entries. The
            default is no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of security entries matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
      summary: Retrieve the security entries associated with the element category based
        on the specified criteria. By default, all security entries for this
        element category are returned.
      tags:
        - ElementCategory
    post:
      deprecated: false
      operationId: ElementCategory_CreateSecurityEntry
      parameters:
        - description: The ID of the element category where the security entry will be
            created.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry"
      responses:
        "201":
          description: The security entry was created. The response's Location header is a
            link to the security entry.
      summary: Create a security entry owned by the element category.
      tags:
        - ElementCategory
  "/elementcategories/{webId}/securityentries/{name}":
    delete:
      deprecated: false
      operationId: ElementCategory_DeleteSecurityEntry
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the element category where the security entry will be
            deleted.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      responses:
        "204":
          description: The security entry was deleted.
      summary: Delete a security entry owned by the element category.
      tags:
        - ElementCategory
    get:
      deprecated: false
      operationId: ElementCategory_GetSecurityEntryByName
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the element category.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The security entry matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/html:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
        "404":
          description: The security entry with the specified name is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Retrieve the security entry associated with the element category with
        the specified name.
      tags:
        - ElementCategory
    put:
      deprecated: false
      operationId: ElementCategory_UpdateSecurityEntry
      parameters:
        - description: The name of the security entry.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the element category where the security entry will be
            updated.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry2"
      responses:
        "204":
          description: The security entry was updated.
      summary: Update a security entry owned by the element category.
      tags:
        - ElementCategory
  /elements:
    get:
      deprecated: false
      description: This method returns an element based on the hierarchical path associated
        with it, and should be used when a path has been received from a
        separate part of the PI System for use in the PI Web API. Users should
        primarily search with the WebID when available.
      operationId: Element_GetByPath
      parameters:
        - description: The path to the element.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports Paths to return all paths to the element. If
            this parameter is not specified, paths are not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified element.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Element"
            text/json:
              schema:
                $ref: "#/components/schemas/Element"
            text/html:
              schema:
                $ref: "#/components/schemas/Element"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Element"
      summary: Retrieve an element by path.
      tags:
        - Element
  /elements/multiple:
    get:
      deprecated: false
      operationId: Element_GetMultiple
      parameters:
        - description: Specifies if the retrieval processes should be run in parallel on
            the server. This may improve the response time for large amounts of
            requested attributes. The default is 'false'.
          in: query
          name: asParallel
          required: false
          schema:
            type: boolean
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports Paths to return all paths to the element. If
            this parameter is not specified, paths are not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: The include mode for the return list. The default is 'All'.
          in: query
          name: includeMode
          required: false
          schema:
            type: string
        - description: The path of an element. Multiple elements may be specified with
            multiple instances of the parameter.
          in: query
          name: path
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The ID of an element. Multiple elements may be specified with
            multiple instances of the parameter.
          in: query
          name: webId
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The requested elements
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Item_Element_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Item_Element_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Item_Element_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Item_Element_"
        "207":
          description: Some or all items contain exceptions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Item_Element_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Item_Element_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Item_Element_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Item_Element_"
      summary: Retrieve multiple elements by web id or path.
      tags:
        - Element
  /elements/search:
    get:
      deprecated: false
      operationId: Element_GetElementsQuery
      parameters:
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports Paths to return all paths to the element. If
            this parameter is not specified, paths are not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: The ID of the asset database to use as the root of the query.
          in: query
          name: databaseWebId
          required: false
          schema:
            type: string
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: 'The query string is a list of filters used to perform an AFSearch
            for the elements in the asset database. An example would be:
            "query=Name:=MyElement* Template:=ElementTemplate".'
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to retrieve the relative the version of an
            object. A value of null or AFTime.MaxValue initializes the query
            date so the latest versions of sub-objects are retrieved. The value
            may be an AFTime, DateTime, PITime, String, or numeric. An integer
            numeric represents the number of ticks (100-nanosecond intervals)
            since January 1, 0001. A floating point numeric represents the
            number of seconds since January 1, 1970 UTC. A String is interpreted
            as local time, unless it contains a time zone indicator such as a
            trailing "Z" or "GMT".
          in: query
          name: queryDate
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of elements matching the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Element_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Element_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Element_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Element_"
      summary: Retrieve elements based on the specified conditions. By default, returns
        all the elements.
      tags:
        - Element
  /elements/searchbyattribute:
    post:
      deprecated: false
      operationId: Element_CreateSearchByAttribute
      parameters:
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports Paths to return all paths to the element. If
            this parameter is not specified, paths are not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: If false, the response content will contain the first page of the
            search results. If true, the response content will be empty. The
            default is false.
          in: query
          name: noResults
          required: false
          schema:
            type: boolean
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SearchByAttribute"
      responses:
        "201":
          description: The link is stored in the response's "Location" header. The response
            content is the first page of the search result by the default
            parameters.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Element_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Element_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Element_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Element_"
        "400":
          description: Empty or invalid request content.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "413":
          description: Request content is too large.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Create a link for a "Search Elements By Attribute Value" operation,
        whose queries are specified in the request content. The SearchRoot is
        specified by the Web Id of the root Element. If the SearchRoot is not
        specified, then the search starts at the Asset Database. ElementTemplate
        must be provided as the Web ID of the ElementTemplate, which are used to
        create the Elements. All the attributes in the queries must be defined
        as AttributeTemplates on the ElementTemplate. An array of attribute
        value queries are ANDed together to find the desired Element objects. At
        least one value query must be specified. There are limitations on
        SearchOperators.
      tags:
        - Element
  "/elements/searchbyattribute/{searchId}":
    get:
      deprecated: false
      operationId: Element_ExecuteSearchByAttribute
      parameters:
        - description: The encoded search Id of the "Search Elements By Attribute Value"
            operation.
          in: path
          name: searchId
          required: true
          schema:
            type: string
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports Paths to return all paths to the element. If
            this parameter is not specified, paths are not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: Specify that the owner of the returned attributes must have this
            category. For Asset Servers older than 2.7, a 400 status code (Bad
            Request) will be returned if this parameter is specified. The
            default is no filter.
          in: query
          name: categoryName
          required: false
          schema:
            type: string
        - description: The element description filter string used for finding objects. Only
            the first 440 characters of the description will be searched. For
            Asset Servers older than 2.7, a 400 status code (Bad Request) will
            be returned if this parameter is specified. The default is no
            filter.
          in: query
          name: descriptionFilter
          required: false
          schema:
            type: string
        - description: The maximum number of objects to be returned. The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: The name query string used for finding objects. The default is no
            filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: Specifies if the search should include objects nested further than
            the immediate children of the searchRoot. The default is 'false'.
          in: query
          name: searchFullHierarchy
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The field or property of the object used to sort the returned
            collection. The default is 'Name'.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: a list of matching Elements.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Element_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Element_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Element_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Element_"
        "400":
          description: Invalid search Id or search parameters.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Execute a "Search Elements By Attribute Value" operation.
      tags:
        - Element
  "/elements/{webId}":
    delete:
      deprecated: false
      operationId: Element_Delete
      parameters:
        - description: The ID of the element.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The element was deleted.
      summary: Delete an element.
      tags:
        - Element
    get:
      deprecated: false
      operationId: Element_Get
      parameters:
        - description: The ID of the element.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports Paths to return all paths to the element. If
            this parameter is not specified, paths are not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified element.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Element"
            text/json:
              schema:
                $ref: "#/components/schemas/Element"
            text/html:
              schema:
                $ref: "#/components/schemas/Element"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Element"
      summary: Retrieve an element.
      tags:
        - Element
    patch:
      deprecated: false
      operationId: Element_Update
      parameters:
        - description: The ID of the element.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Element"
          text/json:
            schema:
              $ref: "#/components/schemas/Element"
        description: A partial element containing the desired changes.
        required: true
      responses:
        "204":
          description: The element was updated.
      summary: Update an element by replacing items in its definition.
      tags:
        - Element
  "/elements/{webId}/analyses":
    get:
      deprecated: false
      description: Users can search for the analyses based on specific search parameters.
        If no parameters are specified in the search, the default values for
        each parameter will be used and will return the analyses that match the
        default search.
      operationId: Element_GetAnalyses
      parameters:
        - description: The ID of the element, which is the Target of the analyses.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The field or property of the object used to sort the returned
            collection. The default is 'Name'.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of analyses matching the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Analysis_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Analysis_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Analysis_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Analysis_"
      summary: Retrieve analyses based on the specified conditions.
      tags:
        - Element
    post:
      deprecated: false
      operationId: Element_CreateAnalysis
      parameters:
        - description: The ID of the element on which to create the Analysis.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Analysis"
          text/json:
            schema:
              $ref: "#/components/schemas/Analysis"
        description: The new Analysis definition.
        required: true
      responses:
        "201":
          description: The Analysis was created. The response's Location header is a link
            to the Analysis.
      summary: Create an Analysis.
      tags:
        - Element
  "/elements/{webId}/attributes":
    get:
      deprecated: false
      operationId: Element_GetAttributes
      parameters:
        - description: The ID of the element.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports DataReference to return attributes with data
            references. If this parameter is not specified, DataReference values
            are not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: Specify that returned attributes must have this category. The
            default is no category filter.
          in: query
          name: categoryName
          required: false
          schema:
            type: string
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: The name query string used for finding attributes. The default is no
            filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: Specifies if the search should include attributes nested further
            than the immediate attributes of the searchRoot. The default is
            'false'.
          in: query
          name: searchFullHierarchy
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Specified if the search should include attributes with the Excluded
            property set. The default is 'false'.
          in: query
          name: showExcluded
          required: false
          schema:
            type: boolean
        - description: Specified if the search should include attributes with the Hidden
            property set. The default is 'false'.
          in: query
          name: showHidden
          required: false
          schema:
            type: boolean
        - description: The field or property of the object used to sort the returned
            collection. The default is 'Name'.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: Specify that returned attributes must be members of this template.
            The default is no template filter.
          in: query
          name: templateName
          required: false
          schema:
            type: string
        - description: The name of the attribute trait. Multiple traits may be specified
            with multiple instances of the parameter.
          in: query
          name: trait
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: The category of the attribute traits. Multiple categories may be
            specified with multiple instances of the parameter. If the parameter
            is not specified, or if its value is "all", then all attribute
            traits of all categories will be returned.
          in: query
          name: traitCategory
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Specify that returned attributes' value type must be the given value
            type. The default is no value type filter.
          in: query
          name: valueType
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of child attributes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
      summary: Get the attributes of the specified element.
      tags:
        - Element
    post:
      deprecated: false
      operationId: Element_CreateAttribute
      parameters:
        - description: The ID of the element on which to create the attribute.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Attribute"
      responses:
        "201":
          description: The attribute was created. The response's Location header is a link
            to the created attribute.
      summary: Create a new attribute of the specified element.
      tags:
        - Element
  "/elements/{webId}/categories":
    get:
      deprecated: false
      operationId: Element_GetCategories
      parameters:
        - description: The ID of the element.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of categories.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_ElementCategory_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_ElementCategory_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_ElementCategory_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_ElementCategory_"
      summary: Get an element's categories.
      tags:
        - Element
  "/elements/{webId}/config":
    post:
      deprecated: false
      operationId: Element_CreateConfig
      parameters:
        - description: The ID of the element.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If true, includes the child elements of the specified element.
          in: query
          name: includeChildElements
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Process log of operations. Operations completed with no errors.
        "207":
          description: Process log of operations. Operations completed with errors.
      summary: Executes the create configuration function of the data references found
        within the attributes of the element, and optionally, its children.
      tags:
        - Element
  "/elements/{webId}/elementattributes":
    get:
      deprecated: false
      operationId: Element_FindElementAttributes
      parameters:
        - description: The ID of the element to use as the root of the search.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports DataReference to return attributes with data
            references. If this parameter is not specified, DataReference values
            are not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: Specify that returned attributes must have this category. The
            default is no filter.
          in: query
          name: attributeCategory
          required: false
          schema:
            type: string
        - description: The attribute description filter string used for finding objects.
            Only the first 440 characters of the description will be searched.
            For Asset Servers older than 2.7, a 400 status code (Bad Request)
            will be returned if this parameter is specified. The default is no
            filter.
          in: query
          name: attributeDescriptionFilter
          required: false
          schema:
            type: string
        - description: The attribute name filter string used for finding objects. The
            default is no filter.
          in: query
          name: attributeNameFilter
          required: false
          schema:
            type: string
        - description: Specify that returned attributes' value type must be this value
            type. The default is no filter.
          in: query
          name: attributeType
          required: false
          schema:
            type: string
        - description: Specify that the owner of the returned attributes must have this
            category. The default is no filter.
          in: query
          name: elementCategory
          required: false
          schema:
            type: string
        - description: The element description filter string used for finding objects. Only
            the first 440 characters of the description will be searched. For
            Asset Servers older than 2.7, a 400 status code (Bad Request) will
            be returned if this parameter is specified. The default is no
            filter.
          in: query
          name: elementDescriptionFilter
          required: false
          schema:
            type: string
        - description: The element name filter string used for finding objects. The default
            is no filter.
          in: query
          name: elementNameFilter
          required: false
          schema:
            type: string
        - description: Specify that the owner of the returned attributes must have this
            template or a template derived from this template. The default is no
            filter.
          in: query
          name: elementTemplate
          required: false
          schema:
            type: string
        - description: Specify that the element of the returned attributes must have this
            AFElementType. The default is no filter.
          in: query
          name: elementType
          required: false
          schema:
            type: string
        - description: The maximum number of objects to be returned (the page size). The
            default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: Specifies if the search should include objects nested further than
            immediate children of the given resource. The default is 'false'.
          in: query
          name: searchFullHierarchy
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The field or property of the object used to sort the returned
            collection. The default is 'Name'.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: a list of matching attributes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
      summary: Retrieves a list of element attributes matching the specified filters
        from the specified element.
      tags:
        - Element
  "/elements/{webId}/elements":
    get:
      deprecated: false
      description: Users can search for the elements based on specific search parameters.
        If no parameters are specified in the search, the default values for
        each parameter will be used and will return the elements that match the
        default search.
      operationId: Element_GetElements
      parameters:
        - description: The ID of the element to use as the root of the search.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports Paths to return all paths to the element. If
            this parameter is not specified, paths are not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: Specify that returned elements must have this category. The default
            is no category filter.
          in: query
          name: categoryName
          required: false
          schema:
            type: string
        - description: Specify that returned elements must have this description. The
            default is no description filter.
          in: query
          name: descriptionFilter
          required: false
          schema:
            type: string
        - description: Specify that returned elements must have this type. The default type
            is 'Any'.
          in: query
          name: elementType
          required: false
          schema:
            type: string
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: The name query string used for finding objects. The default is no
            filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: Specifies if the search should include objects nested further than
            the immediate children of the searchRoot. The default is 'false'.
          in: query
          name: searchFullHierarchy
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The field or property of the object used to sort the returned
            collection. The default is 'Name'.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: Specify that returned elements must have this template or a template
            derived from this template. The default is no template filter.
          in: query
          name: templateName
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of elements matching the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Element_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Element_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Element_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Element_"
      summary: Retrieve elements based on the specified conditions. By default, this
        method selects immediate children of the specified element.
      tags:
        - Element
    post:
      deprecated: false
      operationId: Element_CreateElement
      parameters:
        - description: The ID of the parent element on which to create the element.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Element"
      responses:
        "201":
          description: The element was created. The response's Location header is a link to
            the element.
      summary: Create a child element.
      tags:
        - Element
  "/elements/{webId}/eventframes":
    get:
      deprecated: false
      operationId: Element_GetEventFrames
      parameters:
        - description: The ID of the element whose related event frames are sought.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Specify the returned event frames' canBeAcknowledged property. The
            default is no canBeAcknowledged filter.
          in: query
          name: canBeAcknowledged
          required: false
          schema:
            type: boolean
        - description: Specify that returned event frames must have this category. The
            default is no category filter.
          in: query
          name: categoryName
          required: false
          schema:
            type: string
        - description: The ending time for the search. The endTime must be greater than or
            equal to the startTime. The searchMode parameter will control
            whether the comparison will be performed against the event frame's
            startTime or endTime. The default is '*' if searchMode is not one of
            the 'Backward*' or 'Forward*' values.
          in: query
          name: endTime
          required: false
          schema:
            type: string
        - description: Specify the returned event frames' isAcknowledged property. The
            default no isAcknowledged filter.
          in: query
          name: isAcknowledged
          required: false
          schema:
            type: boolean
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: The name query string used for finding event frames. The default is
            no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: Determines how the startTime and endTime parameters are treated when
            searching for event frame objects to be included in the returned
            collection. If this parameter is one of the 'Backward*' or
            'Forward*' values, none of endTime, sortField, or sortOrder may be
            specified. The default is 'Overlapped'.
          in: query
          name: searchMode
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Specify that returned event frames must have this severity. Multiple
            severity values may be specified with multiple instances of the
            parameter. The default is no severity filter.
          in: query
          name: severity
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: The field or property of the object used to sort the returned
            collection. The default is 'Name' if searchMode is not one of the
            'Backward*' or 'Forward*' values.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending' if searchMode is not one of the 'Backward*' or
            'Forward*' values.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: The starting time for the search. startTime must be less than or
            equal to the endTime. The searchMode parameter will control whether
            the comparison will be performed against the event frame's startTime
            or endTime. The default is '*-8h'.
          in: query
          name: startTime
          required: false
          schema:
            type: string
        - description: Specify that returned event frames must have this template or a
            template derived from this template. The default is no template
            filter. Specify this parameter by name.
          in: query
          name: templateName
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of event frames matching the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_EventFrame_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_EventFrame_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_EventFrame_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_EventFrame_"
      summary: Retrieve event frames that reference this element based on the specified
        conditions. By default, returns all event frames that reference this
        element that have been active in the past 8 hours.
      tags:
        - Element
  "/elements/{webId}/notificationrules":
    get:
      deprecated: false
      operationId: Element_GetNotificationRules
      parameters:
        - description: The ID of the resource to use as the root of the search.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of notification rules.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_NotificationRule_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_NotificationRule_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_NotificationRule_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_NotificationRule_"
      summary: Retrieve notification rules for an element
      tags:
        - Element
    post:
      deprecated: false
      operationId: Element_CreateNotificationRule
      parameters:
        - description: The ID of the element on which to create the notification rule.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationRule"
          text/json:
            schema:
              $ref: "#/components/schemas/NotificationRule"
        description: The new notification rule.
        required: true
      responses:
        "201":
          description: The notification rule was created. The response's Location header is
            a link to the notification rule.
      summary: Create a notification rule.
      tags:
        - Element
  "/elements/{webId}/paths":
    get:
      deprecated: false
      description: This method will return paths with the primary path at the first index.
        If there is no primary path, then null will be at the first index. If
        relative path is specified but does not exist, null will be returned at
        the first index.
      operationId: Element_GetPaths
      parameters:
        - description: The ID of the element.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The full path in ShortName format to the parent object that the
            returned paths should be relative. For example,
            "\\Server1\Database2" would return all the paths to the element
            relative to the database. A path of
            "\\Server1\Database2\RootElement" would return all paths to the
            element relative to "RootElement". If null, then all the full paths
            to the element will be returned.
          in: query
          name: relativePath
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of the full or relative paths to this element.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_string_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_string_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_string_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_string_"
      summary: Get a list of the full or relative paths to this element.
      tags:
        - Element
  "/elements/{webId}/referencedelements":
    delete:
      deprecated: false
      operationId: Element_RemoveReferencedElement
      parameters:
        - description: The ID of the element which the referenced element will be removed
            from.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The ID of the referenced element. Multiple referenced elements may
            be specified with multiple instances of the parameter.
          in: query
          name: referencedElementWebId
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        "204":
          description: The referenced element was successfully removed.
      summary: Remove a reference to an existing element from the child elements
        collection.
      tags:
        - Element
    get:
      deprecated: false
      description: Users can search for the referenced elements based on specific search
        parameters. If no parameters are specified in the search, the default
        values for each parameter will be used and will return the elements that
        match the default search.
      operationId: Element_GetReferencedElements
      parameters:
        - description: The ID of the resource to use as the root of the search.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports Paths to return all paths to the element. If
            this parameter is not specified, paths are not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: Specify that returned elements must have this category. The default
            is no category filter.
          in: query
          name: categoryName
          required: false
          schema:
            type: string
        - description: Specify that returned elements must have this description. The
            default is no description filter.
          in: query
          name: descriptionFilter
          required: false
          schema:
            type: string
        - description: Specify that returned elements must have this type. The default type
            is 'Any'.
          in: query
          name: elementType
          required: false
          schema:
            type: string
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: The name query string used for finding objects. The default is no
            filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The field or property of the object used to sort the returned
            collection. The default is 'Name'.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: Specify that returned elements must have this template or a template
            derived from this template. The default is no template filter.
          in: query
          name: templateName
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of referenced elements matching the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Element_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Element_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Element_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Element_"
      summary: Retrieve referenced elements based on the specified conditions. By
        default, this method selects all referenced elements of the current
        resource.
      tags:
        - Element
    post:
      deprecated: false
      operationId: Element_AddReferencedElement
      parameters:
        - description: The ID of the element which the referenced element will be added to.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The ID of the referenced element. Multiple referenced elements may
            be specified with multiple instances of the parameter.
          in: query
          name: referencedElementWebId
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: The name of the reference type between the parent and the referenced
            element. The default is "parent-child".
          in: query
          name: referenceType
          required: false
          schema:
            type: string
      responses:
        "204":
          description: The referenced element was successfully added.
        "409":
          description: The referenced element already exists in the collection.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Add a reference to an existing element to the child elements collection.
      tags:
        - Element
  "/elements/{webId}/security":
    get:
      deprecated: false
      operationId: Element_GetSecurity
      parameters:
        - description: The ID of the element for the security to be checked.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The user identity for the security information to be checked.
            Multiple security identities may be specified with multiple
            instances of the parameter. If the parameter is not specified, only
            the current user's security rights will be returned.
          in: query
          name: userIdentity
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Indicates if the security cache should be refreshed before getting
            security information. The default is 'false'.
          in: query
          name: forceRefresh
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Security rights.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
        "400":
          description: An invalid or local account is specified as the user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "401":
          description: Access denied for the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: Unsupported when using Anonymous authentication method.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "502":
          description: Failed to retrieve the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Get the security information of the specified security item associated
        with the element for a specified user.
      tags:
        - Element
  "/elements/{webId}/securityentries":
    get:
      deprecated: false
      operationId: Element_GetSecurityEntries
      parameters:
        - description: The ID of the element.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The name query string used for filtering security entries. The
            default is no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of security entries matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
      summary: Retrieve the security entries associated with the element based on the
        specified criteria. By default, all security entries for this element
        are returned.
      tags:
        - Element
    post:
      deprecated: false
      operationId: Element_CreateSecurityEntry
      parameters:
        - description: The ID of the element where the security entry will be created.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry"
      responses:
        "201":
          description: The security entry was created. The response's Location header is a
            link to the security entry.
      summary: Create a security entry owned by the element.
      tags:
        - Element
  "/elements/{webId}/securityentries/{name}":
    delete:
      deprecated: false
      operationId: Element_DeleteSecurityEntry
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the element where the security entry will be deleted.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      responses:
        "204":
          description: The security entry was deleted.
      summary: Delete a security entry owned by the element.
      tags:
        - Element
    get:
      deprecated: false
      operationId: Element_GetSecurityEntryByName
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the element.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The security entry matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/html:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
        "404":
          description: The security entry with the specified name is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Retrieve the security entry associated with the element with the
        specified name.
      tags:
        - Element
    put:
      deprecated: false
      operationId: Element_UpdateSecurityEntry
      parameters:
        - description: The name of the security entry.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the element where the security entry will be updated.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry2"
      responses:
        "204":
          description: The security entry was updated.
      summary: Update a security entry owned by the element.
      tags:
        - Element
  /elementtemplates:
    get:
      deprecated: false
      description: This method returns an element template based on the hierarchical path
        associated with it, and should be used when a path has been received
        from a separate part of the PI System for use in the PI Web API. Users
        should primarily search with the WebID when available.
      operationId: ElementTemplate_GetByPath
      parameters:
        - description: The path to the element template.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified element template.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ElementTemplate"
            text/json:
              schema:
                $ref: "#/components/schemas/ElementTemplate"
            text/html:
              schema:
                $ref: "#/components/schemas/ElementTemplate"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/ElementTemplate"
      summary: Retrieve an element template by path.
      tags:
        - ElementTemplate
  "/elementtemplates/{webId}":
    delete:
      deprecated: false
      description: Deleting an element template will delete all associated templated data
        from elements which were created from it.
      operationId: ElementTemplate_Delete
      parameters:
        - description: The ID of the element template to update.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The element template was deleted.
      summary: Delete an element template.
      tags:
        - ElementTemplate
    get:
      deprecated: false
      operationId: ElementTemplate_Get
      parameters:
        - description: The ID of the element template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified element template.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ElementTemplate"
            text/json:
              schema:
                $ref: "#/components/schemas/ElementTemplate"
            text/html:
              schema:
                $ref: "#/components/schemas/ElementTemplate"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/ElementTemplate"
      summary: Retrieve an element template.
      tags:
        - ElementTemplate
    patch:
      deprecated: false
      description: Updating the InstanceType property of an element template will not
        affect any elements that have already been created from this template;
        it will only affect any future elements created from this template. All
        other changes will be propagated to elements based on this template.
      operationId: ElementTemplate_Update
      parameters:
        - description: The ID of the element template to update.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ElementTemplate"
          text/json:
            schema:
              $ref: "#/components/schemas/ElementTemplate"
        description: A partial element template containing the desired changes.
        required: true
      responses:
        "204":
          description: The element template was updated.
      summary: Update an element template by replacing items in its definition.
      tags:
        - ElementTemplate
  "/elementtemplates/{webId}/analysistemplates":
    get:
      deprecated: false
      operationId: ElementTemplate_GetAnalysisTemplates
      parameters:
        - description: The ID of the element template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of analysis templates for the specified element template.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_AnalysisTemplate_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_AnalysisTemplate_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_AnalysisTemplate_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_AnalysisTemplate_"
      summary: Get analysis templates for an element template.
      tags:
        - ElementTemplate
  "/elementtemplates/{webId}/attributetemplates":
    get:
      deprecated: false
      description: If 'showInherited' and 'showDescendants' are 'true', it returns all the
        attribute templates from current element template and the base
        template.  If 'showInherited' is 'false', it returns all the attribute
        templates from the current element template.
      operationId: ElementTemplate_GetAttributeTemplates
      parameters:
        - description: The ID of the element template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: When 'true', a Depth First traversal will be performed; this starts
            at the root and explores as far as possible along each branch before
            backtracking. When 'false', a Breadth First traversal will be
            performed; this starts at the tree root and explores the neighbor
            nodes first, then moves onto the next level of neighbors. The
            default is 'false' (Breadth First).
          in: query
          name: depthFirstTraverse
          required: false
          schema:
            type: boolean
        - description: The maximum number of objects to be returned. The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Specifies if the result should include all descendant attribute
            templates from the current element template, even indirect ones. The
            default is 'false'.
          in: query
          name: showDescendants
          required: false
          schema:
            type: boolean
        - description: Specifies if the result should include attribute templates inherited
            from base element templates. The default is 'false'.
          in: query
          name: showInherited
          required: false
          schema:
            type: boolean
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of attribute templates for the specified element template.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_AttributeTemplate_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_AttributeTemplate_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_AttributeTemplate_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_AttributeTemplate_"
      summary: Get child attribute templates for an element template.
      tags:
        - ElementTemplate
    post:
      deprecated: false
      operationId: ElementTemplate_CreateAttributeTemplate
      parameters:
        - description: The ID of the element template on which to create the attribute
            template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/AttributeTemplate"
      responses:
        "201":
          description: The attribute template was created. The response's Location header
            is a link to the created resource.
      summary: Create an attribute template.
      tags:
        - ElementTemplate
  "/elementtemplates/{webId}/baseelementtemplates":
    get:
      deprecated: false
      description: The root template will be returned first, followed by successive
        templates in the inheritance chain.
      operationId: ElementTemplate_GetBaseElementTemplates
      parameters:
        - description: The ID of the element template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The maximum number of objects to be returned. The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of base element templates for the specified element template.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_ElementTemplate_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_ElementTemplate_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_ElementTemplate_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_ElementTemplate_"
      summary: Get base element templates for an element template.
      tags:
        - ElementTemplate
  "/elementtemplates/{webId}/categories":
    get:
      deprecated: false
      operationId: ElementTemplate_GetCategories
      parameters:
        - description: The ID of the element template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Specifies if the result should include categories inherited from
            base element templates. The default is 'false'.
          in: query
          name: showInherited
          required: false
          schema:
            type: boolean
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of categories.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_ElementCategory_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_ElementCategory_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_ElementCategory_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_ElementCategory_"
      summary: Get an element template's categories.
      tags:
        - ElementTemplate
  "/elementtemplates/{webId}/derivedelementtemplates":
    get:
      deprecated: false
      operationId: ElementTemplate_GetDerivedElementTemplates
      parameters:
        - description: The ID of the element template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The maximum number of objects to be returned. The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Specifies if the result should include all descendant element
            templates from the current element template, even indirect ones. The
            default is 'false'.
          in: query
          name: showDescendants
          required: false
          schema:
            type: boolean
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of derived element templates for the specified element
            template.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_ElementTemplate_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_ElementTemplate_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_ElementTemplate_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_ElementTemplate_"
      summary: Get derived element templates for an element template.
      tags:
        - ElementTemplate
  "/elementtemplates/{webId}/notificationruletemplates":
    get:
      deprecated: false
      operationId: ElementTemplate_GetNotificationRuleTemplates
      parameters:
        - description: The ID of the element template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of notification rule templates.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_NotificationRuleTemplate_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_NotificationRuleTemplate_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_NotificationRuleTemplate_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_NotificationRuleTemplate_"
      summary: Get notification rule templates for an element template
      tags:
        - ElementTemplate
    post:
      deprecated: false
      operationId: ElementTemplate_CreateNotificationRuleTemplate
      parameters:
        - description: The ID of the element on which to create the notification rule
            template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationRuleTemplate"
          text/json:
            schema:
              $ref: "#/components/schemas/NotificationRuleTemplate"
        description: The new notification rule template.
        required: true
      responses:
        "201":
          description: The notification rule template was created. The response's Location
            header is a link to the notification rule template.
      summary: Create a notification rule template.
      tags:
        - ElementTemplate
  "/elementtemplates/{webId}/security":
    get:
      deprecated: false
      operationId: ElementTemplate_GetSecurity
      parameters:
        - description: The ID of the element template for the security to be checked.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The user identity for the security information to be checked.
            Multiple security identities may be specified with multiple
            instances of the parameter. If the parameter is not specified, only
            the current user's security rights will be returned.
          in: query
          name: userIdentity
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Indicates if the security cache should be refreshed before getting
            security information. The default is 'false'.
          in: query
          name: forceRefresh
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Security rights.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
        "400":
          description: An invalid or local account is specified as the user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "401":
          description: Access denied for the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: Unsupported when using Anonymous authentication method.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "502":
          description: Failed to retrieve the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Get the security information of the specified security item associated
        with the element template for a specified user.
      tags:
        - ElementTemplate
  "/elementtemplates/{webId}/securityentries":
    get:
      deprecated: false
      operationId: ElementTemplate_GetSecurityEntries
      parameters:
        - description: The ID of the element template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The name query string used for filtering security entries. The
            default is no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of security entries matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
      summary: Retrieve the security entries associated with the element template based
        on the specified criteria. By default, all security entries for this
        element template are returned.
      tags:
        - ElementTemplate
    post:
      deprecated: false
      operationId: ElementTemplate_CreateSecurityEntry
      parameters:
        - description: The ID of the element template where the security entry will be
            created.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry"
      responses:
        "201":
          description: The security entry was created. The response's Location header is a
            link to the security entry.
      summary: Create a security entry owned by the element template.
      tags:
        - ElementTemplate
  "/elementtemplates/{webId}/securityentries/{name}":
    delete:
      deprecated: false
      operationId: ElementTemplate_DeleteSecurityEntry
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the element template where the security entry will be
            deleted.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      responses:
        "204":
          description: The security entry was deleted.
      summary: Delete a security entry owned by the element template.
      tags:
        - ElementTemplate
    get:
      deprecated: false
      operationId: ElementTemplate_GetSecurityEntryByName
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the element template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The security entry matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
        "404":
          description: The security entry with the specified name is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Retrieve the security entry associated with the element template with
        the specified name.
      tags:
        - ElementTemplate
    put:
      deprecated: false
      operationId: ElementTemplate_UpdateSecurityEntry
      parameters:
        - description: The name of the security entry.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the element template where the security entry will be
            updated.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry2"
      responses:
        "204":
          description: The security entry was updated.
      summary: Update a security entry owned by the element template.
      tags:
        - ElementTemplate
  /enumerationsets:
    get:
      deprecated: false
      description: This method returns an enumeration set based on the hierarchical path
        associated with it, and should be used when a path has been received
        from a separate part of the PI System for use in the PI Web API. Users
        should primarily search with the WebID when available.
      operationId: EnumerationSet_GetByPath
      parameters:
        - description: The path to the target enumeration set.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified enumeration set.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnumerationSet"
            text/json:
              schema:
                $ref: "#/components/schemas/EnumerationSet"
            text/html:
              schema:
                $ref: "#/components/schemas/EnumerationSet"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/EnumerationSet"
      summary: Retrieve an enumeration set by path.
      tags:
        - EnumerationSet
  "/enumerationsets/{webId}":
    delete:
      deprecated: false
      operationId: EnumerationSet_Delete
      parameters:
        - description: The ID of the enumeration set to delete.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The enumeration set was deleted.
      summary: Delete an enumeration set.
      tags:
        - EnumerationSet
    get:
      deprecated: false
      operationId: EnumerationSet_Get
      parameters:
        - description: The ID of the enumeration set.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified enumeration sets.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnumerationSet"
            text/json:
              schema:
                $ref: "#/components/schemas/EnumerationSet"
            text/html:
              schema:
                $ref: "#/components/schemas/EnumerationSet"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/EnumerationSet"
      summary: Retrieve an enumeration set.
      tags:
        - EnumerationSet
    patch:
      deprecated: false
      operationId: EnumerationSet_Update
      parameters:
        - description: The ID of the enumeration set to update.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnumerationSet"
          text/json:
            schema:
              $ref: "#/components/schemas/EnumerationSet"
        description: A partial enumeration set containing the desired changes.
        required: true
      responses:
        "204":
          description: The enumeration set was updated.
      summary: Update an enumeration set by replacing items in its definition.
      tags:
        - EnumerationSet
  "/enumerationsets/{webId}/enumerationvalues":
    get:
      deprecated: false
      operationId: EnumerationSet_GetValues
      parameters:
        - description: The ID of the enumeration set.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified enumeration set's values
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_EnumerationValue_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_EnumerationValue_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_EnumerationValue_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_EnumerationValue_"
      summary: Retrieve an enumeration set's values.
      tags:
        - EnumerationSet
    post:
      deprecated: false
      operationId: EnumerationSet_CreateValue
      parameters:
        - description: The ID of the enumeration set on which to create the enumeration
            value.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnumerationValue"
          text/json:
            schema:
              $ref: "#/components/schemas/EnumerationValue"
        description: The new enumeration value definition.
        required: true
      responses:
        "201":
          description: The enumeration value was created. The response's Location header is
            a link to the enumeration value.
      summary: Create an enumeration value for a enumeration set.
      tags:
        - EnumerationSet
  "/enumerationsets/{webId}/security":
    get:
      deprecated: false
      operationId: EnumerationSet_GetSecurity
      parameters:
        - description: The ID of the enumeration set for the security to be checked.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The user identity for the security information to be checked.
            Multiple security identities may be specified with multiple
            instances of the parameter. If the parameter is not specified, only
            the current user's security rights will be returned.
          in: query
          name: userIdentity
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Indicates if the security cache should be refreshed before getting
            security information. The default is 'false'.
          in: query
          name: forceRefresh
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Security rights.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
        "400":
          description: An invalid or local account is specified as the user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "401":
          description: Access denied for the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: Unsupported when using Anonymous authentication method.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "502":
          description: Failed to retrieve the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Get the security information of the specified security item associated
        with the enumeration set for a specified user.
      tags:
        - EnumerationSet
  "/enumerationsets/{webId}/securityentries":
    get:
      deprecated: false
      operationId: EnumerationSet_GetSecurityEntries
      parameters:
        - description: The ID of the enumeration set.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The name query string used for filtering security entries. The
            default is no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of security entries matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
      summary: Retrieve the security entries associated with the enumeration set based
        on the specified criteria. By default, all security entries for this
        enumeration set are returned.
      tags:
        - EnumerationSet
    post:
      deprecated: false
      operationId: EnumerationSet_CreateSecurityEntry
      parameters:
        - description: The ID of the enumeration set where the security entry will be
            created.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry"
      responses:
        "201":
          description: The security entry was created. The response's Location header is a
            link to the security entry.
      summary: Create a security entry owned by the enumeration set.
      tags:
        - EnumerationSet
  "/enumerationsets/{webId}/securityentries/{name}":
    delete:
      deprecated: false
      operationId: EnumerationSet_DeleteSecurityEntry
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the enumeration set where the security entry will be
            deleted.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      responses:
        "204":
          description: The security entry was deleted.
      summary: Delete a security entry owned by the enumeration set.
      tags:
        - EnumerationSet
    get:
      deprecated: false
      operationId: EnumerationSet_GetSecurityEntryByName
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the enumeration set.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The security entry matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/html:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
        "404":
          description: The security entry with the specified name is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Retrieve the security entry associated with the enumeration set with the
        specified name.
      tags:
        - EnumerationSet
    put:
      deprecated: false
      operationId: EnumerationSet_UpdateSecurityEntry
      parameters:
        - description: The name of the security entry.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the enumeration set where the security entry will be
            updated.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry2"
      responses:
        "204":
          description: The security entry was updated.
      summary: Update a security entry owned by the enumeration set.
      tags:
        - EnumerationSet
  /enumerationvalues:
    get:
      deprecated: false
      description: This method returns a enumeration value based on the hierarchical path
        associated with it, and should be used when a path has been received
        from a separate part of the PI System for use in the PI Web API. Users
        should primarily search with the WebID when available.
      operationId: EnumerationValue_GetByPath
      parameters:
        - description: The path to the target enumeration value.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified enumeration set.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnumerationValue"
            text/json:
              schema:
                $ref: "#/components/schemas/EnumerationValue"
            text/html:
              schema:
                $ref: "#/components/schemas/EnumerationValue"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/EnumerationValue"
      summary: Retrieve an enumeration value by path.
      tags:
        - EnumerationValue
  "/enumerationvalues/{webId}":
    delete:
      deprecated: false
      description: Deleting a value will remove it from the enumeration set along with any
        value references within the PI Web API system.
      operationId: EnumerationValue_DeleteEnumerationValue
      parameters:
        - description: The ID of the enumeration value.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The enumeration value was deleted.
      summary: Delete an enumeration value from an enumeration set.
      tags:
        - EnumerationValue
    get:
      deprecated: false
      operationId: EnumerationValue_Get
      parameters:
        - description: The ID of the enumeration value.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified enumeration value mapping
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnumerationValue"
            text/json:
              schema:
                $ref: "#/components/schemas/EnumerationValue"
            text/html:
              schema:
                $ref: "#/components/schemas/EnumerationValue"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/EnumerationValue"
      summary: Retrieve an enumeration value mapping
      tags:
        - EnumerationValue
    patch:
      deprecated: false
      operationId: EnumerationValue_UpdateEnumerationValue
      parameters:
        - description: The ID of the enumeration value to update.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnumerationValue"
          text/json:
            schema:
              $ref: "#/components/schemas/EnumerationValue"
        description: A partial enumeration value containing the desired changes.
        required: true
      responses:
        "204":
          description: The enumeration set was updated.
      summary: Update an enumeration value by replacing items in its definition.
      tags:
        - EnumerationValue
  /eventframes:
    get:
      deprecated: false
      description: This method returns an event frame based on the hierarchical path
        associated with it, and should be used when a path has been received
        from a separate part of the PI System for use in the PI Web API. Users
        should primarily search with the WebID when available.
      operationId: EventFrame_GetByPath
      parameters:
        - description: The path to the event frame.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified event frame.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventFrame"
            text/json:
              schema:
                $ref: "#/components/schemas/EventFrame"
            text/html:
              schema:
                $ref: "#/components/schemas/EventFrame"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/EventFrame"
      summary: Retrieve an event frame by path.
      tags:
        - EventFrame
  /eventframes/multiple:
    get:
      deprecated: false
      operationId: EventFrame_GetMultiple
      parameters:
        - description: Specifies if the retrieval processes should be run in parallel on
            the server. This may improve the response time for large amounts of
            requested attributes. The default is 'false'.
          in: query
          name: asParallel
          required: false
          schema:
            type: boolean
        - description: The include mode for the return list. The default is 'All'.
          in: query
          name: includeMode
          required: false
          schema:
            type: string
        - description: The path of an event frame. Multiple event frames may be specified
            with multiple instances of the parameter.
          in: query
          name: path
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The ID of an event frame. Multiple event frames may be specified
            with multiple instances of the parameter.
          in: query
          name: webId
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The requested event frames
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Item_EventFrame_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Item_EventFrame_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Item_EventFrame_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Item_EventFrame_"
        "207":
          description: Some or all items contain exceptions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Item_EventFrame_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Item_EventFrame_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Item_EventFrame_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Item_EventFrame_"
      summary: Retrieve multiple event frames by web ids or paths.
      tags:
        - EventFrame
  /eventframes/search:
    get:
      deprecated: false
      operationId: EventFrame_GetEventFramesQuery
      parameters:
        - description: The ID of the asset database to use as the root of the query.
          in: query
          name: databaseWebId
          required: false
          schema:
            type: string
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: 'The query string is a list of filters used to perform an AFSearch
            for the eventframes in the asset database. An example would be:
            "query=Name:=MyEventFrame* Category:=MyCategory
            Template:=EFTemplate".'
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of event frames matching the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_EventFrame_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_EventFrame_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_EventFrame_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_EventFrame_"
      summary: Retrieve event frames based on the specified conditions. Returns event
        frames using the specified search query string.
      tags:
        - EventFrame
  /eventframes/searchbyattribute:
    post:
      deprecated: false
      operationId: EventFrame_CreateSearchByAttribute
      parameters:
        - description: If false, the response content will contain the first page of the
            search results. If true, the response content will be empty. The
            default is false.
          in: query
          name: noResults
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SearchByAttribute"
      responses:
        "201":
          description: The link is stored in the response's "Location" header. The response
            content is the first page of the search result by the default
            parameters.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_EventFrame_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_EventFrame_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_EventFrame_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_EventFrame_"
        "400":
          description: Empty or invalid request content.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "413":
          description: Request content is too large.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Create a link for a "Search EventFrames By Attribute Value" operation,
        whose queries are specified in the request content. The SearchRoot is
        specified by the Web Id of the root EventFrame. If the SearchRoot is not
        specified, then the search starts at the Asset Database. ElementTemplate
        must be provided as the Web ID of the ElementTemplate, which are used to
        create the EventFrames. All the attributes in the queries must be
        defined as AttributeTemplates on the ElementTemplate. An array of
        attribute value queries are ANDed together to find the desired Element
        objects. At least one value query must be specified. There are
        limitations on SearchOperators.
      tags:
        - EventFrame
  "/eventframes/searchbyattribute/{searchId}":
    get:
      deprecated: false
      operationId: EventFrame_ExecuteSearchByAttribute
      parameters:
        - description: The encoded search Id of the "Search EventFrames By Attribute Value"
            operation.
          in: path
          name: searchId
          required: true
          schema:
            type: string
        - description: Specify the returned event frames' canBeAcknowledged property. The
            default is no canBeAcknowledged filter.
          in: query
          name: canBeAcknowledged
          required: false
          schema:
            type: boolean
        - description: The ending time for the search. endTime must be greater than or
            equal to the startTime. The searchMode parameter will control
            whether the comparison will be performed against the event frame's
            startTime or endTime. The default is '*'.
          in: query
          name: endTime
          required: false
          schema:
            type: string
        - description: Specify the returned event frames' isAcknowledged property. The
            default no isAcknowledged filter.
          in: query
          name: isAcknowledged
          required: false
          schema:
            type: boolean
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: The name query string used for finding event frames. The default is
            no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: The name query string which must match the name of a referenced
            element. The default is no filter.
          in: query
          name: referencedElementNameFilter
          required: false
          schema:
            type: string
        - description: Specifies whether the search should include objects nested further
            than the immediate children of the search root. The default is
            'false'.
          in: query
          name: searchFullHierarchy
          required: false
          schema:
            type: boolean
        - description: Determines how the startTime and endTime parameters are treated when
            searching for event frame objects to be included in the returned
            collection. The default is 'Overlapped'.
          in: query
          name: searchMode
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Specify that returned event frames must have this severity. Multiple
            severity values may be specified with multiple instances of the
            parameter. The default is no severity filter.
          in: query
          name: severity
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: The field or property of the object used to sort the returned
            collection. The default is 'Name'.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: The starting time for the search. startTime must be less than or
            equal to the endTime. The searchMode parameter will control whether
            the comparison will be performed against the event frame's startTime
            or endTime. The default is '*-8h'.
          in: query
          name: startTime
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: a list of matching EventFrames.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_EventFrame_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_EventFrame_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_EventFrame_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_EventFrame_"
        "400":
          description: Invalid search Id or search parameters.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Execute a "Search EventFrames By Attribute Value" operation.
      tags:
        - EventFrame
  "/eventframes/{webId}":
    delete:
      deprecated: false
      operationId: EventFrame_Delete
      parameters:
        - description: The ID of the event frame to delete.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The event frame was deleted.
      summary: Delete an event frame.
      tags:
        - EventFrame
    get:
      deprecated: false
      operationId: EventFrame_Get
      parameters:
        - description: The ID of the event frame.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified event frame.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventFrame"
            text/json:
              schema:
                $ref: "#/components/schemas/EventFrame"
            text/html:
              schema:
                $ref: "#/components/schemas/EventFrame"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/EventFrame"
      summary: Retrieve an event frame.
      tags:
        - EventFrame
    patch:
      deprecated: false
      operationId: EventFrame_Update
      parameters:
        - description: The ID of the event frame to update.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventFrame"
          text/json:
            schema:
              $ref: "#/components/schemas/EventFrame"
        description: A partial event frame containing the desired changes.
        required: true
      responses:
        "204":
          description: The event frame was updated.
      summary: Update an event frame by replacing items in its definition.
      tags:
        - EventFrame
  "/eventframes/{webId}/acknowledge":
    patch:
      deprecated: false
      operationId: EventFrame_Acknowledge
      parameters:
        - description: The ID of the event frame.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The event frame has been acknowledged.
      summary: Calls the EventFrame's Acknowledge method.
      tags:
        - EventFrame
  "/eventframes/{webId}/annotations":
    get:
      deprecated: false
      operationId: EventFrame_GetAnnotations
      parameters:
        - description: The ID of the owner event frame.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of annotations.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Annotation_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Annotation_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Annotation_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Annotation_"
      summary: Get an event frame's annotations.
      tags:
        - EventFrame
    post:
      deprecated: false
      operationId: EventFrame_CreateAnnotation
      parameters:
        - description: The ID of the owner event frame on which to create the annotation.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Annotation"
          text/json:
            schema:
              $ref: "#/components/schemas/Annotation"
        description: The new annotation definition.
        required: true
      responses:
        "201":
          description: The annotation was created. The response's Location header is a link
            to the annotation.
      summary: Create an annotation on an event frame.
      tags:
        - EventFrame
  "/eventframes/{webId}/annotations/{id}":
    delete:
      deprecated: false
      operationId: EventFrame_DeleteAnnotation
      parameters:
        - description: The Annotation identifier of the annotation to be deleted.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The ID of the owner event frame of the annotation to delete.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The annotation was deleted.
      summary: Delete an annotation on an event frame. If the annotation has attached
        media, the attached media will also be deleted.
      tags:
        - EventFrame
    get:
      deprecated: false
      operationId: EventFrame_GetAnnotationById
      parameters:
        - description: The Annotation identifier of the specific annotation.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The ID of the owner event frame.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The requested annotation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Annotation"
            text/json:
              schema:
                $ref: "#/components/schemas/Annotation"
            text/html:
              schema:
                $ref: "#/components/schemas/Annotation"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Annotation"
      summary: Get a specific annotation on an event frame.
      tags:
        - EventFrame
    patch:
      deprecated: false
      operationId: EventFrame_UpdateAnnotation
      parameters:
        - description: The Annotation identifier of the annotation to be updated.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The ID of the owner event frame of the annotation to update.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Annotation"
          text/json:
            schema:
              $ref: "#/components/schemas/Annotation"
        description: A partial annotation containing the desired changes.
        required: true
      responses:
        "204":
          description: The annotation was updated.
      summary: Update an annotation on an event frame by replacing items in its
        definition.
      tags:
        - EventFrame
  "/eventframes/{webId}/annotations/{id}/attachment/media":
    delete:
      deprecated: false
      operationId: EventFrame_DeleteAnnotationAttachmentMediaById
      parameters:
        - description: The Annotation identifier of the annotation to delete the attached
            media of.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The ID of the owner event frame of the annotation to delete the
            attached media of.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The attached media was deleted.
        "404":
          description: The specified annotation did not have any attached media to delete.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Delete attached media from an annotation on an event frame.
      tags:
        - EventFrame
  "/eventframes/{webId}/annotations/{id}/attachment/media/metadata":
    get:
      deprecated: false
      operationId: EventFrame_GetAnnotationAttachmentMediaMetadataById
      parameters:
        - description: The Annotation identifier of the specific annotation.
          in: path
          name: id
          required: true
          schema:
            type: string
        - description: The ID of the owner event frame.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The requested metadata.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MediaMetadata"
            text/json:
              schema:
                $ref: "#/components/schemas/MediaMetadata"
            text/html:
              schema:
                $ref: "#/components/schemas/MediaMetadata"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/MediaMetadata"
        "400":
          description: The supplied Web ID could not be parsed, or the request was somehow
            otherwise invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "404":
          description: The specified Event Frame did not exist, the specified annotation
            was not found, or the annotation did not have attached media.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Gets the metadata of the media attached to the specified annotation.
      tags:
        - EventFrame
  "/eventframes/{webId}/attributes":
    get:
      deprecated: false
      operationId: EventFrame_GetAttributes
      parameters:
        - description: The ID of the event frame.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports DataReference to return attributes with data
            references. If this parameter is not specified, DataReference values
            are not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: Specify that returned attributes must have this category. The
            default is no category filter.
          in: query
          name: categoryName
          required: false
          schema:
            type: string
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: The name query string used for finding attributes. The default is no
            filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: Specifies if the search should include attributes nested further
            than the immediate attributes of the searchRoot. The default is
            'false'.
          in: query
          name: searchFullHierarchy
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Specified if the search should include attributes with the Excluded
            property set. The default is 'false'.
          in: query
          name: showExcluded
          required: false
          schema:
            type: boolean
        - description: Specified if the search should include attributes with the Hidden
            property set. The default is 'false'.
          in: query
          name: showHidden
          required: false
          schema:
            type: boolean
        - description: The field or property of the object used to sort the returned
            collection. The default is 'Name'.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: Specify that returned attributes must be members of this template.
            The default is no template filter.
          in: query
          name: templateName
          required: false
          schema:
            type: string
        - description: The name of the attribute trait. Multiple traits may be specified
            with multiple instances of the parameter.
          in: query
          name: trait
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: The category of the attribute traits. Multiple categories may be
            specified with multiple instances of the parameter. If the parameter
            is not specified, or if its value is "all", then all attribute
            traits of all categories will be returned.
          in: query
          name: traitCategory
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Specify that returned attributes' value type must be the given value
            type. The default is no value type filter.
          in: query
          name: valueType
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of child attributes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
      summary: Get the attributes of the specified event frame.
      tags:
        - EventFrame
    post:
      deprecated: false
      operationId: EventFrame_CreateAttribute
      parameters:
        - description: The ID of the event frame on which to create the attribute.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Attribute"
      responses:
        "201":
          description: The attribute was created. The response's Location header is a link
            to the created attribute.
      summary: Create a new attribute of the specified event frame.
      tags:
        - EventFrame
  "/eventframes/{webId}/attributes/capture":
    post:
      deprecated: false
      operationId: EventFrame_CaptureValues
      parameters:
        - description: The ID of the event frame.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The event frame attribute's values were captured.
      summary: Calls the EventFrame's CaptureValues method.
      tags:
        - EventFrame
  "/eventframes/{webId}/categories":
    get:
      deprecated: false
      operationId: EventFrame_GetCategories
      parameters:
        - description: The ID of the event frame.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of categories.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_ElementCategory_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_ElementCategory_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_ElementCategory_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_ElementCategory_"
      summary: Get an event frame's categories.
      tags:
        - EventFrame
  "/eventframes/{webId}/config":
    post:
      deprecated: false
      operationId: EventFrame_CreateConfig
      parameters:
        - description: The ID of the event frame.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If true, includes the child event frames of the specified event
            frame.
          in: query
          name: includeChildElements
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Process log of operations. Operations completed with no errors.
        "207":
          description: Process log of operations. Operations completed with errors.
      summary: Executes the create configuration function of the data references found
        within the attributes of the event frame, and optionally, its children.
      tags:
        - EventFrame
  "/eventframes/{webId}/eventframeattributes":
    get:
      deprecated: false
      operationId: EventFrame_FindEventFrameAttributes
      parameters:
        - description: The ID of the event frame to use as the root of the search.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports DataReference to return attributes with data
            references. If this parameter is not specified, DataReference values
            are not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: Specify that returned attributes must have this category. The
            default is no filter.
          in: query
          name: attributeCategory
          required: false
          schema:
            type: string
        - description: The attribute description filter string used for finding objects.
            Only the first 440 characters of the description will be searched.
            For Asset Servers older than 2.7, a 400 status code (Bad Request)
            will be returned if this parameter is specified. The default is no
            filter.
          in: query
          name: attributeDescriptionFilter
          required: false
          schema:
            type: string
        - description: The attribute name filter string used for finding objects. The
            default is no filter.
          in: query
          name: attributeNameFilter
          required: false
          schema:
            type: string
        - description: Specify that returned attributes' value type must be this value
            type. The default is no filter.
          in: query
          name: attributeType
          required: false
          schema:
            type: string
        - description: A string representing the latest ending time for the event frames to
            be matched. The endTime must be greater than or equal to the
            startTime. The default is '*'.
          in: query
          name: endTime
          required: false
          schema:
            type: string
        - description: Specify that the owner of the returned attributes must have this
            category. The default is no filter.
          in: query
          name: eventFrameCategory
          required: false
          schema:
            type: string
        - description: The event frame description filter string used for finding objects.
            Only the first 440 characters of the description will be searched.
            For Asset Servers older than 2.7, a 400 status code (Bad Request)
            will be returned if this parameter is specified. The default is no
            filter.
          in: query
          name: eventFrameDescriptionFilter
          required: false
          schema:
            type: string
        - description: The event frame name filter string used for finding objects. The
            default is no filter.
          in: query
          name: eventFrameNameFilter
          required: false
          schema:
            type: string
        - description: Specify that the owner of the returned attributes must have this
            template or a template derived from this template. The default is no
            filter.
          in: query
          name: eventFrameTemplate
          required: false
          schema:
            type: string
        - description: The maximum number of objects to be returned (the page size). The
            default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: The name query string which must match the name of a referenced
            element. The default is no filter.
          in: query
          name: referencedElementNameFilter
          required: false
          schema:
            type: string
        - description: Specifies if the search should include objects nested further than
            immediate children of the given resource. The default is 'false'.
          in: query
          name: searchFullHierarchy
          required: false
          schema:
            type: boolean
        - description: Determines how the startTime and endTime parameters are treated when
            searching for event frames. The default is 'Overlapped'.
          in: query
          name: searchMode
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The field or property of the object used to sort the returned
            collection. The default is 'Name'.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: A string representing the earliest starting time for the event
            frames to be matched. startTime must be less than or equal to the
            endTime. The default is '*-8h'.
          in: query
          name: startTime
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: a list of matching attributes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Attribute_"
      summary: Retrieves a list of event frame attributes matching the specified
        filters from the specified event frame.
      tags:
        - EventFrame
  "/eventframes/{webId}/eventframes":
    get:
      deprecated: false
      operationId: EventFrame_GetEventFrames
      parameters:
        - description: The ID of the event frame to use as the root of the search.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Specify the returned event frames' canBeAcknowledged property. The
            default is no canBeAcknowledged filter.
          in: query
          name: canBeAcknowledged
          required: false
          schema:
            type: boolean
        - description: Specify that returned event frames must have this category. The
            default is no category filter.
          in: query
          name: categoryName
          required: false
          schema:
            type: string
        - description: The ending time for the search. The endTime must be greater than or
            equal to the startTime. The searchMode parameter will control
            whether the comparison will be performed against the event frame's
            startTime or endTime. The default is '*' if searchMode is not one of
            the 'Backward*' or 'Forward*' values.
          in: query
          name: endTime
          required: false
          schema:
            type: string
        - description: Specify the returned event frames' isAcknowledged property. The
            default no isAcknowledged filter.
          in: query
          name: isAcknowledged
          required: false
          schema:
            type: boolean
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: The name query string used for finding event frames. The default is
            no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: The name query string which must match the name of a referenced
            element. The default is no filter.
          in: query
          name: referencedElementNameFilter
          required: false
          schema:
            type: string
        - description: Specify that returned event frames must have an element in the event
            frame's referenced elements collection that derives from the
            template. Specify this parameter by name.
          in: query
          name: referencedElementTemplateName
          required: false
          schema:
            type: string
        - description: Specifies whether the search should include objects nested further
            than the immediate children of the search root. The default is
            'false'.
          in: query
          name: searchFullHierarchy
          required: false
          schema:
            type: boolean
        - description: Determines how the startTime and endTime parameters are treated when
            searching for event frame objects to be included in the returned
            collection. If this parameter is one of the 'Backward*' or
            'Forward*' values, none of endTime, sortField, or sortOrder may be
            specified. The default is 'Overlapped'.
          in: query
          name: searchMode
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Specify that returned event frames must have this severity. Multiple
            severity values may be specified with multiple instances of the
            parameter. The default is no severity filter.
          in: query
          name: severity
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: The field or property of the object used to sort the returned
            collection. The default is 'Name' if searchMode is not one of the
            'Backward*' or 'Forward*' values.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending' if searchMode is not one of the 'Backward*' or
            'Forward*' values.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: The starting time for the search. startTime must be less than or
            equal to the endTime. The searchMode parameter will control whether
            the comparison will be performed against the event frame's startTime
            or endTime. The default is '*-8h'.
          in: query
          name: startTime
          required: false
          schema:
            type: string
        - description: Specify that returned event frames must have this template or a
            template derived from this template. The default is no template
            filter. Specify this parameter by name.
          in: query
          name: templateName
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of event frames matching the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_EventFrame_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_EventFrame_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_EventFrame_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_EventFrame_"
      summary: Retrieve event frames based on the specified conditions. By default,
        returns all children of the specified root event frame that have been
        active in the past 8 hours.
      tags:
        - EventFrame
    post:
      deprecated: false
      operationId: EventFrame_CreateEventFrame
      parameters:
        - description: The ID of the parent event frame on which to create the event frame.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/EventFrame"
      responses:
        "201":
          description: The event frame was created. The response's Location header is a
            link to the event frame.
      summary: Create an event frame as a child of the specified event frame.
      tags:
        - EventFrame
  "/eventframes/{webId}/referencedelements":
    get:
      deprecated: false
      operationId: EventFrame_GetReferencedElements
      parameters:
        - description: The ID of the event frame whose referenced elements should be
            retrieved.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports Paths to return all paths to the element. If
            this parameter is not specified, paths are not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of referenced elements.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Element_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Element_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Element_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Element_"
      summary: Retrieve the event frame's referenced elements.
      tags:
        - EventFrame
  "/eventframes/{webId}/security":
    get:
      deprecated: false
      operationId: EventFrame_GetSecurity
      parameters:
        - description: The ID of the event frame for the security to be checked.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The user identity for the security information to be checked.
            Multiple security identities may be specified with multiple
            instances of the parameter. If the parameter is not specified, only
            the current user's security rights will be returned.
          in: query
          name: userIdentity
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Indicates if the security cache should be refreshed before getting
            security information. The default is 'false'.
          in: query
          name: forceRefresh
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Security rights.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
        "400":
          description: An invalid or local account is specified as the user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "401":
          description: Access denied for the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: Unsupported when using Anonymous authentication method.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "502":
          description: Failed to retrieve the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Get the security information of the specified security item associated
        with the event frame for a specified user.
      tags:
        - EventFrame
  "/eventframes/{webId}/securityentries":
    get:
      deprecated: false
      operationId: EventFrame_GetSecurityEntries
      parameters:
        - description: The ID of the event frame.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The name query string used for filtering security entries. The
            default is no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of security entries matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
      summary: Retrieve the security entries associated with the event frame based on
        the specified criteria. By default, all security entries for this event
        frame are returned.
      tags:
        - EventFrame
    post:
      deprecated: false
      operationId: EventFrame_CreateSecurityEntry
      parameters:
        - description: The ID of the event frame where the security entry will be created.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry"
      responses:
        "201":
          description: The security entry was created. The response's Location header is a
            link to the security entry.
      summary: Create a security entry owned by the event frame.
      tags:
        - EventFrame
  "/eventframes/{webId}/securityentries/{name}":
    delete:
      deprecated: false
      operationId: EventFrame_DeleteSecurityEntry
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the event frame where the security entry will be deleted.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      responses:
        "204":
          description: The security entry was deleted.
      summary: Delete a security entry owned by the event frame.
      tags:
        - EventFrame
    get:
      deprecated: false
      operationId: EventFrame_GetSecurityEntryByName
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the event frame.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The security entry matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/html:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
        "404":
          description: The security entry with the specified name is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Retrieve the security entry associated with the event frame with the
        specified name.
      tags:
        - EventFrame
    put:
      deprecated: false
      operationId: EventFrame_UpdateSecurityEntry
      parameters:
        - description: The name of the security entry.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the event frame where the security entry will be updated.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry2"
      responses:
        "204":
          description: The security entry was updated.
      summary: Update a security entry owned by the event frame.
      tags:
        - EventFrame
  /notificationcontacttemplates:
    get:
      deprecated: false
      operationId: NotificationContactTemplate_GetByPath
      parameters:
        - description: The path to the notification contact template.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified notification contact template.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationContactTemplate"
            text/json:
              schema:
                $ref: "#/components/schemas/NotificationContactTemplate"
            text/html:
              schema:
                $ref: "#/components/schemas/NotificationContactTemplate"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/NotificationContactTemplate"
      summary: Retrieve a notification contact template by path.
      tags:
        - NotificationContactTemplate
  /notificationcontacttemplates/search:
    get:
      deprecated: false
      operationId: NotificationContactTemplate_GetNotificationContactTemplatesQuery
      parameters:
        - description: The ID of the asset server to use as the root of the query.
          in: query
          name: assetServerWebId
          required: false
          schema:
            type: string
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: "The query string is a list of filters used to perform an AFSearch
            for the Notification Contact Templates in the asset database. An
            example would be: \"query=Name:='MyNotificationContactTemplate'\"."
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of notification contact templates matching the specified
            conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_NotificationContactTemplate_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_NotificationContactTemplate_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_NotificationContactTemplate_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_NotificationContactTemplate_"
      summary: Retrieve notification contact templates based on the specified
        conditions. Returns notification contact templates using the specified
        search query string.
      tags:
        - NotificationContactTemplate
  "/notificationcontacttemplates/{webId}":
    delete:
      deprecated: false
      operationId: NotificationContactTemplate_Delete
      parameters:
        - description: The ID of the notification contact template to be deleted.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The notification contact template was deleted.
      summary: Delete a notification contact template.
      tags:
        - NotificationContactTemplate
    get:
      deprecated: false
      operationId: NotificationContactTemplate_Get
      parameters:
        - description: The ID of the notification contact template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified notification contact template.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationContactTemplate"
            text/json:
              schema:
                $ref: "#/components/schemas/NotificationContactTemplate"
            text/html:
              schema:
                $ref: "#/components/schemas/NotificationContactTemplate"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/NotificationContactTemplate"
      summary: Retrieve a notification contact template.
      tags:
        - NotificationContactTemplate
    patch:
      deprecated: false
      operationId: NotificationContactTemplate_Update
      parameters:
        - description: The ID of the notification contact template to update.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationContactTemplate"
          text/json:
            schema:
              $ref: "#/components/schemas/NotificationContactTemplate"
        description: A partial notification contact template containing the desired changes.
        required: true
      responses:
        "204":
          description: The notification contact template was updated.
      summary: Update a notification contact template by replacing items in its
        definition.
      tags:
        - NotificationContactTemplate
  "/notificationcontacttemplates/{webId}/notificationcontacttemplates":
    get:
      deprecated: false
      operationId: NotificationContactTemplate_GetNotificationContactTemplates
      parameters:
        - description: The ID of the notification contact template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of notification contact templates.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationContactTemplate"
            text/json:
              schema:
                $ref: "#/components/schemas/NotificationContactTemplate"
            text/html:
              schema:
                $ref: "#/components/schemas/NotificationContactTemplate"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/NotificationContactTemplate"
      summary: Retrieve notification contact template's child templates.
      tags:
        - NotificationContactTemplate
  "/notificationcontacttemplates/{webId}/security":
    get:
      deprecated: false
      operationId: NotificationContactTemplate_GetSecurity
      parameters:
        - description: The ID of the notification contact template for the security to be
            checked.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The user identity for the security information to be checked.
            Multiple security identities may be specified with multiple
            instances of the parameter. If the parameter is not specified, only
            the current user's security rights will be returned.
          in: query
          name: userIdentity
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Indicates if the security cache should be refreshed before getting
            security information. The default is 'false'.
          in: query
          name: forceRefresh
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Security rights.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
        "400":
          description: An invalid or local account is specified as the user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "401":
          description: Access denied for the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: Unsupported when using Anonymous authentication method.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "502":
          description: Failed to retrieve the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Get the security information of the specified security item associated
        with the notification contact template for a specified user.
      tags:
        - NotificationContactTemplate
  "/notificationcontacttemplates/{webId}/securityentries":
    get:
      deprecated: false
      operationId: NotificationContactTemplate_GetSecurityEntries
      parameters:
        - description: The ID of the notification contact template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The name query string used for filtering security entries. The
            default is no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of security entries matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
      summary: Retrieve the security entries associated with the notification contact
        template based on the specified criteria. By default, all security
        entries for this notification contact template are returned.
      tags:
        - NotificationContactTemplate
    post:
      deprecated: false
      operationId: NotificationContactTemplate_CreateSecurityEntry
      parameters:
        - description: The ID of the notification contact template, where the security
            entry will be created.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry"
      responses:
        "201":
          description: The security entry was created. The response's Location header is a
            link to the security entry.
      summary: Create a security entry owned by the notification contact template.
      tags:
        - NotificationContactTemplate
  "/notificationcontacttemplates/{webId}/securityentries/{name}":
    delete:
      deprecated: false
      operationId: NotificationContactTemplate_DeleteSecurityEntry
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the notification contact template, where the security
            entry will be deleted.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      responses:
        "204":
          description: The security entry was deleted.
      summary: Delete a security entry owned by the notification contact template.
      tags:
        - NotificationContactTemplate
    get:
      deprecated: false
      operationId: NotificationContactTemplate_GetSecurityEntryByName
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the notification contact template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The security entry matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/html:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
        "404":
          description: The security entry with the specified name is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Retrieve the security entry associated with the notification contact
        template with the specified name.
      tags:
        - NotificationContactTemplate
    put:
      deprecated: false
      operationId: NotificationContactTemplate_UpdateSecurityEntry
      parameters:
        - description: The name of the security entry.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the notification contact template, where the security
            entry will be updated.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry2"
      responses:
        "204":
          description: The security entry was updated.
      summary: Update a security entry owned by the notification contact template.
      tags:
        - NotificationContactTemplate
  /notificationplugIns:
    get:
      deprecated: false
      description: This method returns a notification plugin based on the hierarchical path
        associated with it, and should be used when a path has been received
        from a separate part of the PI System for use in the PI Web API. Users
        should primarily search with the WebID when available.
      operationId: NotificationPlugIn_GetByPath
      parameters:
        - description: The path to the notification plugin.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified notification plugin.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationPlugIn"
            text/json:
              schema:
                $ref: "#/components/schemas/NotificationPlugIn"
            text/html:
              schema:
                $ref: "#/components/schemas/NotificationPlugIn"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/NotificationPlugIn"
      summary: Retrieve a notification plugin by path.
      tags:
        - NotificationPlugIn
  "/notificationplugins/{webId}":
    get:
      deprecated: false
      operationId: NotificationPlugIn_Get
      parameters:
        - description: The ID of the notification plugin.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified notification plugin.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationPlugIn"
            text/json:
              schema:
                $ref: "#/components/schemas/NotificationPlugIn"
            text/html:
              schema:
                $ref: "#/components/schemas/NotificationPlugIn"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/NotificationPlugIn"
      summary: Retrieve a notification plugin.
      tags:
        - NotificationPlugIn
  /notificationrules:
    get:
      deprecated: false
      description: This method returns a Notification Rule based on the hierarchical path
        associated with it, and should be used when a path has been received
        from a separate part of the PI System for use in the PI Web API. Users
        should primarily search with the WebID when available.
      operationId: NotificationRule_GetByPath
      parameters:
        - description: The path to the notification rule.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified notification rule.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationRule"
            text/json:
              schema:
                $ref: "#/components/schemas/NotificationRule"
            text/html:
              schema:
                $ref: "#/components/schemas/NotificationRule"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/NotificationRule"
      summary: Retrieve a notification rule by path.
      tags:
        - NotificationRule
  /notificationrules/search:
    get:
      deprecated: false
      operationId: NotificationRule_GetNotificationRulesQuery
      parameters:
        - description: The ID of the asset database to use as the root of the query.
          in: query
          name: databaseWebId
          required: false
          schema:
            type: string
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: 'The query string is a list of filters used to perform an AFSearch
            for the Notification rules in the asset database. An example would
            be: "query=Name:=MyNotificationRule* Template:=NoteRuleTemplate".'
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of notification rules matching the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_NotificationRule_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_NotificationRule_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_NotificationRule_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_NotificationRule_"
      summary: Retrieve notification rules based on the specified conditions. Returns
        notification rules using the specified search query string.
      tags:
        - NotificationRule
  "/notificationrules/{webId}":
    delete:
      deprecated: false
      operationId: NotificationRule_Delete
      parameters:
        - description: The ID of the notification rule.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The notification rule was deleted.
      summary: Delete a notification rule.
      tags:
        - NotificationRule
    get:
      deprecated: false
      operationId: NotificationRule_Get
      parameters:
        - description: The ID of the resource to use as the root of the search.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A notification rule
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationRule"
            text/json:
              schema:
                $ref: "#/components/schemas/NotificationRule"
            text/html:
              schema:
                $ref: "#/components/schemas/NotificationRule"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/NotificationRule"
      summary: Retrieve a notification rule.
      tags:
        - NotificationRule
    patch:
      deprecated: false
      operationId: NotificationRule_Update
      parameters:
        - description: The ID of the notification rule to update.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationRule"
          text/json:
            schema:
              $ref: "#/components/schemas/NotificationRule"
        description: A partial notification rule containing the desired changes.
        required: true
      responses:
        "204":
          description: The notification rule was updated.
      summary: Update a notification rule by replacing items in its definition.
      tags:
        - NotificationRule
  "/notificationrules/{webId}/notificationrulesubscribers":
    get:
      deprecated: false
      operationId: NotificationRule_GetNotificationRuleSubscribers
      parameters:
        - description: The ID of the resource to use as the root of the search.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of notification rule subscribers.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_NotificationRuleSubscriber_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_NotificationRuleSubscriber_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_NotificationRuleSubscriber_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_NotificationRuleSubscriber_"
      summary: Retrieve notification rule subscribers.
      tags:
        - NotificationRule
    post:
      deprecated: false
      operationId: NotificationRule_CreateNotificationRuleSubscriber
      parameters:
        - description: The ID of the notification rule on which to create the notification
            rule subscriber.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/NotificationRuleSubscriber"
      responses:
        "201":
          description: The notification rule subscriber was created. The response's
            Location header is a link to the notification rule subscriber.
      summary: Create a notification rule subscriber.
      tags:
        - NotificationRule
  "/notificationrules/{webId}/security":
    get:
      deprecated: false
      operationId: NotificationRule_GetSecurity
      parameters:
        - description: The ID of the notification rule for the security to be checked.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The user identity for the security information to be checked.
            Multiple security identities may be specified with multiple
            instances of the parameter. If the parameter is not specified, only
            the current user's security rights will be returned.
          in: query
          name: userIdentity
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Indicates if the security cache should be refreshed before getting
            security information. The default is 'false'.
          in: query
          name: forceRefresh
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Security rights.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
        "400":
          description: An invalid or local account is specified as the user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "401":
          description: Access denied for the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: Unsupported when using Anonymous authentication method.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "502":
          description: Failed to retrieve the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Get the security information of the specified security item associated
        with the notification rule for a specified user.
      tags:
        - NotificationRule
  "/notificationrules/{webId}/securityentries":
    get:
      deprecated: false
      operationId: NotificationRule_GetSecurityEntries
      parameters:
        - description: The ID of the notification rule.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The name query string used for filtering security entries. The
            default is no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of security entries matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
      summary: Retrieve the security entries associated with the notification rule
        based on the specified criteria. By default, all security entries for
        this notification rule are returned.
      tags:
        - NotificationRule
    post:
      deprecated: false
      operationId: NotificationRule_CreateSecurityEntry
      parameters:
        - description: The ID of the notification rule, where the security entry will be
            created.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry"
      responses:
        "201":
          description: The security entry was created. The response's Location header is a
            link to the security entry.
      summary: Create a security entry owned by the notification rule.
      tags:
        - NotificationRule
  "/notificationrules/{webId}/securityentries/{name}":
    delete:
      deprecated: false
      operationId: NotificationRule_DeleteSecurityEntry
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the notification rule, where the security entry will be
            deleted.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      responses:
        "204":
          description: The security entry was deleted.
      summary: Delete a security entry owned by the notification rule.
      tags:
        - NotificationRule
    get:
      deprecated: false
      operationId: NotificationRule_GetSecurityEntryByName
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the notification rule.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The security entry matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/html:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
        "404":
          description: The security entry with the specified name is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Retrieve the security entry associated with the notification rule with
        the specified name.
      tags:
        - NotificationRule
    put:
      deprecated: false
      operationId: NotificationRule_UpdateSecurityEntry
      parameters:
        - description: The name of the security entry.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the notification rule, where the security entry will be
            updated.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry2"
      responses:
        "204":
          description: The security entry was updated.
      summary: Update a security entry owned by the notification rule.
      tags:
        - NotificationRule
  /notificationrulesubscribers:
    get:
      deprecated: false
      description: This method returns a Notification Rule Subscriber based on the
        hierarchical path associated with it, and should be used when a path has
        been received from a separate part of the PI System for use in the PI
        Web API. Users should primarily search with the WebID when available.
      operationId: NotificationRuleSubscriber_GetByPath
      parameters:
        - description: The path to the notification rule subscriber.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified notification rule subscriber.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationRuleSubscriber"
            text/json:
              schema:
                $ref: "#/components/schemas/NotificationRuleSubscriber"
            text/html:
              schema:
                $ref: "#/components/schemas/NotificationRuleSubscriber"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/NotificationRuleSubscriber"
      summary: Retrieve a notification rule subscriber by path.
      tags:
        - NotificationRuleSubscriber
  "/notificationrulesubscribers/{webId}":
    delete:
      deprecated: false
      operationId: NotificationRuleSubscriber_Delete
      parameters:
        - description: The ID of the notification rule subscriber.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The notification rule subscriber was deleted.
      summary: Delete a notification rule subscriber.
      tags:
        - NotificationRuleSubscriber
    get:
      deprecated: false
      operationId: NotificationRuleSubscriber_Get
      parameters:
        - description: The ID of the resource to use as the root of the search.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A notification rule subscriber
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationRuleSubscriber"
            text/json:
              schema:
                $ref: "#/components/schemas/NotificationRuleSubscriber"
            text/html:
              schema:
                $ref: "#/components/schemas/NotificationRuleSubscriber"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/NotificationRuleSubscriber"
      summary: Retrieve a notification rule subscriber.
      tags:
        - NotificationRuleSubscriber
    patch:
      deprecated: false
      operationId: NotificationRuleSubscriber_Update
      parameters:
        - description: The ID of the notification rule subscriber.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationRuleSubscriber"
          text/json:
            schema:
              $ref: "#/components/schemas/NotificationRuleSubscriber"
        description: A partial notification rule subscriber containing the desired changes.
        required: true
      responses:
        "204":
          description: The notification rule subscriber was updated.
      summary: Update a notification rule subscriber.
      tags:
        - NotificationRuleSubscriber
  "/notificationrulesubscribers/{webId}/notificationrulesubscribers":
    get:
      deprecated: false
      operationId: NotificationRuleSubscriber_GetNotificationRuleSubscribers
      parameters:
        - description: The ID of the resource to use as the root of the search.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of notification rules subscribers.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_NotificationRuleSubscriber_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_NotificationRuleSubscriber_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_NotificationRuleSubscriber_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_NotificationRuleSubscriber_"
      summary: Retrieve notification rule subscriber subscribers.
      tags:
        - NotificationRuleSubscriber
  /notificationruletemplates:
    get:
      deprecated: false
      description: This method returns a Notification Rule Template based on the
        hierarchical path associated with it, and should be used when a path has
        been received from a separate part of the PI System for use in the PI
        Web API. Users should primarily search with the WebID when available.
      operationId: NotificationRuleTemplate_GetByPath
      parameters:
        - description: The path to the notification rule template.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified notification rule template.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationRuleTemplate"
            text/json:
              schema:
                $ref: "#/components/schemas/NotificationRuleTemplate"
            text/html:
              schema:
                $ref: "#/components/schemas/NotificationRuleTemplate"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/NotificationRuleTemplate"
      summary: Retrieve a notification rule template by path.
      tags:
        - NotificationRuleTemplate
  /notificationruletemplates/search:
    get:
      deprecated: false
      operationId: NotificationRuleTemplate_GetNotificationRuleTemplatesQuery
      parameters:
        - description: The ID of the asset database to use as the root of the query.
          in: query
          name: databaseWebId
          required: false
          schema:
            type: string
        - description: The maximum number of objects to be returned per call (page size).
            The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: "The query string is a list of filters used to perform an AFSearch
            for the Notification rule templates in the asset database. An
            example would be: \"query=NotificationRuleTemplate:{
            Name:='MyNotificationRuleTemplate' } Type:=Int32\"."
          in: query
          name: query
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The starting index (zero based) of the items to be returned. The
            default is 0.
          in: query
          name: startIndex
          required: false
          schema:
            type: integer
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of notification rule templates matching the specified
            conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_NotificationRuleTemplate_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_NotificationRuleTemplate_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_NotificationRuleTemplate_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_NotificationRuleTemplate_"
      summary: Retrieve Notification rule templates based on the specified conditions.
        Returns Notification rule templates using the specified search query
        string.
      tags:
        - NotificationRuleTemplate
  "/notificationruletemplates/{webId}":
    delete:
      deprecated: false
      operationId: NotificationRuleTemplate_Delete
      parameters:
        - description: The ID of the notification rule template.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The notification rule template was deleted.
      summary: Delete a notification rule template.
      tags:
        - NotificationRuleTemplate
    get:
      deprecated: false
      operationId: NotificationRuleTemplate_Get
      parameters:
        - description: The ID of the notification rule template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified notification rule template.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationRuleTemplate"
            text/json:
              schema:
                $ref: "#/components/schemas/NotificationRuleTemplate"
            text/html:
              schema:
                $ref: "#/components/schemas/NotificationRuleTemplate"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/NotificationRuleTemplate"
      summary: Get the specified notification rule template.
      tags:
        - NotificationRuleTemplate
    patch:
      deprecated: false
      operationId: NotificationRuleTemplate_Update
      parameters:
        - description: The ID of the notification rule template to update.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationRuleTemplate"
          text/json:
            schema:
              $ref: "#/components/schemas/NotificationRuleTemplate"
        description: A partial notification rule template containing the desired changes.
        required: true
      responses:
        "204":
          description: The notification rule template was updated.
      summary: Update a notification rule template by replacing items in its definition.
      tags:
        - NotificationRuleTemplate
  "/notificationruletemplates/{webId}/notificationrulesubscribers":
    get:
      deprecated: false
      operationId: NotificationRuleTemplate_GetNotificationRuleTemplateSubscribers
      parameters:
        - description: The ID of the resource to use as the root of the search.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of notification rule template subscribers.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_NotificationRuleSubscriber_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_NotificationRuleSubscriber_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_NotificationRuleSubscriber_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_NotificationRuleSubscriber_"
      summary: Retrieve notification rule template subscribers.
      tags:
        - NotificationRuleTemplate
    post:
      deprecated: false
      operationId: NotificationRuleTemplate_CreateNotificationRuleTemplateSubscriber
      parameters:
        - description: The ID of the notification rule template on which to create the
            notification rule subscriber.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/NotificationRuleSubscriber"
      responses:
        "201":
          description: The notification rule subscriber was created. The response's
            Location header is a link to the notification rule subscriber.
      summary: Create a notification rule subscriber.
      tags:
        - NotificationRuleTemplate
  "/notificationruletemplates/{webId}/security":
    get:
      deprecated: false
      operationId: NotificationRuleTemplate_GetSecurity
      parameters:
        - description: The ID of the notification rule template for the security to be
            checked.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The user identity for the security information to be checked.
            Multiple security identities may be specified with multiple
            instances of the parameter. If the parameter is not specified, only
            the current user's security rights will be returned.
          in: query
          name: userIdentity
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Indicates if the security cache should be refreshed before getting
            security information. The default is 'false'.
          in: query
          name: forceRefresh
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Security rights.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
        "400":
          description: An invalid or local account is specified as the user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "401":
          description: Access denied for the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: Unsupported when using Anonymous authentication method.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "502":
          description: Failed to retrieve the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Get the security information of the specified security item associated
        with the notification rule template for a specified user.
      tags:
        - NotificationRuleTemplate
  "/notificationruletemplates/{webId}/securityentries":
    get:
      deprecated: false
      operationId: NotificationRuleTemplate_GetSecurityEntries
      parameters:
        - description: The ID of the notification rule template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The name query string used for filtering security entries. The
            default is no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of security entries matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
      summary: Retrieve the security entries associated with the notification rule
        template based on the specified criteria. By default, all security
        entries for this notification rule template are returned.
      tags:
        - NotificationRuleTemplate
    post:
      deprecated: false
      operationId: NotificationRuleTemplate_CreateSecurityEntry
      parameters:
        - description: The ID of the notification rule template, where the security entry
            will be created.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry"
      responses:
        "201":
          description: The security entry was created. The response's Location header is a
            link to the security entry.
      summary: Create a security entry owned by the notification rule template.
      tags:
        - NotificationRuleTemplate
  "/notificationruletemplates/{webId}/securityentries/{name}":
    delete:
      deprecated: false
      operationId: NotificationRuleTemplate_DeleteSecurityEntry
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the notification rule template, where the security entry
            will be deleted.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      responses:
        "204":
          description: The security entry was deleted.
      summary: Delete a security entry owned by the notification rule template.
      tags:
        - NotificationRuleTemplate
    get:
      deprecated: false
      operationId: NotificationRuleTemplate_GetSecurityEntryByName
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the notification rule template.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The security entry matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/html:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
        "404":
          description: The security entry with the specified name is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Retrieve the security entry associated with the notification rule
        template with the specified name.
      tags:
        - NotificationRuleTemplate
    put:
      deprecated: false
      operationId: NotificationRuleTemplate_UpdateSecurityEntry
      parameters:
        - description: The name of the security entry.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the notification rule template, where the security entry
            will be updated.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry2"
      responses:
        "204":
          description: The security entry was updated.
      summary: Update a security entry owned by the notification rule template.
      tags:
        - NotificationRuleTemplate
  /points:
    get:
      deprecated: false
      description: This method returns a PI Point based on the hierarchical path associated
        with it, and should be used when a path has been received from a
        separate part of the PI System for use in the PI Web API. Users should
        primarily search with the WebID when available.
      operationId: Point_GetByPath
      parameters:
        - description: The path to the point.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified point.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Point"
            text/json:
              schema:
                $ref: "#/components/schemas/Point"
            text/html:
              schema:
                $ref: "#/components/schemas/Point"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Point"
      summary: Get a point by path.
      tags:
        - Point
  /points/multiple:
    get:
      deprecated: false
      operationId: Point_GetMultiple
      parameters:
        - description: Specifies if the retrieval processes should be run in parallel on
            the server. This may improve the response time for large amounts of
            requested points. The default is 'false'.
          in: query
          name: asParallel
          required: false
          schema:
            type: boolean
        - description: The include mode for the return list. The default is 'All'.
          in: query
          name: includeMode
          required: false
          schema:
            type: string
        - description: The path of a point. Multiple points may be specified with multiple
            instances of the parameter.
          in: query
          name: path
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The ID of a point. Multiple points may be specified with multiple
            instances of the parameter.
          in: query
          name: webId
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The requested points
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Item_Point_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Item_Point_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Item_Point_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Item_Point_"
        "207":
          description: Some or all items contain exceptions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Item_Point_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Item_Point_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Item_Point_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Item_Point_"
      summary: Retrieve multiple points by web id or path.
      tags:
        - Point
  "/points/{webId}":
    delete:
      deprecated: false
      operationId: Point_Delete
      parameters:
        - description: The ID of the point.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The point was deleted.
      summary: Delete a point.
      tags:
        - Point
    get:
      deprecated: false
      operationId: Point_Get
      parameters:
        - description: The ID of the point.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified point.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Point"
            text/json:
              schema:
                $ref: "#/components/schemas/Point"
            text/html:
              schema:
                $ref: "#/components/schemas/Point"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Point"
      summary: Get a point.
      tags:
        - Point
    patch:
      deprecated: false
      operationId: Point_Update
      parameters:
        - description: The ID of the point.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Point"
          text/json:
            schema:
              $ref: "#/components/schemas/Point"
        description: A partial point containing the desired changes.
        required: true
      responses:
        "204":
          description: The point was updated.
      summary: "Update a point. The only PI Point attributes that can be updated
        include: Name, Descriptor, EngineeringUnits, Step, and DisplayDigits.
        Other PI Point attributes cannot be updated through PI Web API."
      tags:
        - Point
  "/points/{webId}/attributes":
    get:
      deprecated: false
      operationId: Point_GetAttributes
      parameters:
        - description: The ID of the point.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The name of a point attribute to be returned. Multiple attributes
            may be specified with multiple instances of the parameter.
          in: query
          name: name
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: The filter to the names of the list of point attributes to be
            returned. The default is no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of point attributes based on the specified names and name
            filter.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_PointAttribute_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_PointAttribute_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_PointAttribute_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_PointAttribute_"
        "400":
          description: Some or all of the point attribute names could not be found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Get point attributes.
      tags:
        - Point
  "/points/{webId}/attributes/{name}":
    get:
      deprecated: false
      operationId: Point_GetAttributeByName
      parameters:
        - description: The name of the attribute.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the point.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A point attribute specified by its name.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PointAttribute"
            text/json:
              schema:
                $ref: "#/components/schemas/PointAttribute"
            text/html:
              schema:
                $ref: "#/components/schemas/PointAttribute"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/PointAttribute"
      summary: Get a point attribute by name.
      tags:
        - Point
  /securityidentities:
    get:
      deprecated: false
      description: This method returns a security identity based on the path associated
        with it, and should be used when a path has been received from a
        separate part of the PI System for use in the PI Web API. Users should
        primarily search with the WebID when available.
      operationId: SecurityIdentity_GetByPath
      parameters:
        - description: The path to the security identity.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified security identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityIdentity"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityIdentity"
            text/html:
              schema:
                $ref: "#/components/schemas/SecurityIdentity"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/SecurityIdentity"
      summary: Retrieve a security identity by path.
      tags:
        - SecurityIdentity
  "/securityidentities/{webId}":
    delete:
      deprecated: false
      operationId: SecurityIdentity_Delete
      parameters:
        - description: The ID of the security identity.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The security identity was deleted.
      summary: Delete a security identity.
      tags:
        - SecurityIdentity
    get:
      deprecated: false
      operationId: SecurityIdentity_Get
      parameters:
        - description: The ID of the security identity.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified security identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityIdentity"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityIdentity"
            text/html:
              schema:
                $ref: "#/components/schemas/SecurityIdentity"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/SecurityIdentity"
      summary: Retrieve a security identity.
      tags:
        - SecurityIdentity
    patch:
      deprecated: false
      operationId: SecurityIdentity_Update
      parameters:
        - description: The ID of the security identity.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SecurityIdentity"
          text/json:
            schema:
              $ref: "#/components/schemas/SecurityIdentity"
        description: A partial security identity containing the desired changes.
        required: true
      responses:
        "204":
          description: The security identity was updated.
      summary: Update a security identity by replacing items in its definition.
      tags:
        - SecurityIdentity
  "/securityidentities/{webId}/security":
    get:
      deprecated: false
      operationId: SecurityIdentity_GetSecurity
      parameters:
        - description: The ID of the security identity for the security to be checked.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The user identity for the security information to be checked.
            Multiple security identities may be specified with multiple
            instances of the parameter. If the parameter is not specified, only
            the current user's security rights will be returned.
          in: query
          name: userIdentity
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Indicates if the security cache should be refreshed before getting
            security information. The default is 'false'.
          in: query
          name: forceRefresh
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Security rights.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
        "400":
          description: An invalid or local account is specified as the user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "401":
          description: Access denied for the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: Unsupported when using Anonymous authentication method.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "502":
          description: Failed to retrieve the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Get the security information of the specified security item associated
        with the security identity for a specified user.
      tags:
        - SecurityIdentity
  "/securityidentities/{webId}/securityentries":
    get:
      deprecated: false
      operationId: SecurityIdentity_GetSecurityEntries
      parameters:
        - description: The ID of the security identity.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The name query string used for filtering security entries. The
            default is no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of security entries matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
      summary: Retrieve the security entries associated with the security identity
        based on the specified criteria. By default, all security entries for
        this security identity are returned.
      tags:
        - SecurityIdentity
  "/securityidentities/{webId}/securityentries/{name}":
    get:
      deprecated: false
      operationId: SecurityIdentity_GetSecurityEntryByName
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the security identity.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The security entry matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/html:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
        "404":
          description: The security entry with the specified name is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Retrieve the security entry associated with the security identity with
        the specified name.
      tags:
        - SecurityIdentity
  "/securityidentities/{webId}/securitymappings":
    get:
      deprecated: false
      operationId: SecurityIdentity_GetSecurityMappings
      parameters:
        - description: The ID of the security identity.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of security mappings for the specified security identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityMapping_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityMapping_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityMapping_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityMapping_"
      summary: Get security mappings for the specified security identity.
      tags:
        - SecurityIdentity
  /securitymappings:
    get:
      deprecated: false
      description: This method returns a security mapping based on the path associated with
        it, and should be used when a path has been received from a separate
        part of the PI System for use in the PI Web API. Users should primarily
        search with the WebID when available.
      operationId: SecurityMapping_GetByPath
      parameters:
        - description: The path to the security mapping.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified security mapping.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityMapping"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityMapping"
            text/html:
              schema:
                $ref: "#/components/schemas/SecurityMapping"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/SecurityMapping"
      summary: Retrieve a security mapping by path.
      tags:
        - SecurityMapping
  "/securitymappings/{webId}":
    delete:
      deprecated: false
      operationId: SecurityMapping_Delete
      parameters:
        - description: The ID of the security mapping.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The security mapping was deleted.
      summary: Delete a security mapping.
      tags:
        - SecurityMapping
    get:
      deprecated: false
      operationId: SecurityMapping_Get
      parameters:
        - description: The ID of the security mapping.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified security mapping.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityMapping"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityMapping"
            text/html:
              schema:
                $ref: "#/components/schemas/SecurityMapping"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/SecurityMapping"
      summary: Retrieve a security mapping.
      tags:
        - SecurityMapping
    patch:
      deprecated: false
      operationId: SecurityMapping_Update
      parameters:
        - description: The ID of the security mapping.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SecurityMapping"
          text/json:
            schema:
              $ref: "#/components/schemas/SecurityMapping"
        description: A partial security mapping containing the desired changes.
        required: true
      responses:
        "204":
          description: The security mapping was updated.
      summary: Update a security mapping by replacing items in its definition.
      tags:
        - SecurityMapping
  "/securitymappings/{webId}/security":
    get:
      deprecated: false
      operationId: SecurityMapping_GetSecurity
      parameters:
        - description: The ID of the security mapping for the security to be checked.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The user identity for the security information to be checked.
            Multiple security identities may be specified with multiple
            instances of the parameter. If the parameter is not specified, only
            the current user's security rights will be returned.
          in: query
          name: userIdentity
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Indicates if the security cache should be refreshed before getting
            security information. The default is 'false'.
          in: query
          name: forceRefresh
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Security rights.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
        "400":
          description: An invalid or local account is specified as the user mapping.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "401":
          description: Access denied for the specified user mapping.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: Unsupported when using Anonymous authentication method.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "502":
          description: Failed to retrieve the specified user mapping.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Get the security information of the specified security item associated
        with the security mapping for a specified user.
      tags:
        - SecurityMapping
  "/securitymappings/{webId}/securityentries":
    get:
      deprecated: false
      operationId: SecurityMapping_GetSecurityEntries
      parameters:
        - description: The ID of the security mapping.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The name query string used for filtering security entries. The
            default is no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of security entries matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
      summary: Retrieve the security entries associated with the security mapping based
        on the specified criteria. By default, all security entries for this
        security mapping are returned.
      tags:
        - SecurityMapping
  "/securitymappings/{webId}/securityentries/{name}":
    get:
      deprecated: false
      operationId: SecurityMapping_GetSecurityEntryByName
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the security mapping.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The security entry matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/html:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
        "404":
          description: The security entry with the specified name is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Retrieve the security entry associated with the security mapping with
        the specified name.
      tags:
        - SecurityMapping
  "/streams/updates/{marker}":
    get:
      deprecated: false
      description: The supplied marker will identify the set of stream updates to retrieve.
        For a 200 response, the returned location header will contain the url
        for retrieving the stream updates.
      operationId: Stream_RetrieveStreamUpdate
      parameters:
        - description: Identifier of stream source and current position
          in: path
          name: marker
          required: true
          schema:
            type: string
        - description: The name or abbreviation of the desired units of measure for the
            returned value, as found in the UOM database associated with the
            attribute. If not specified for an attribute, the attribute's
            default unit of measure is used. If the underlying stream is a
            point, this value may not be specified, as points are not associated
            with a unit of measure.
          in: query
          name: desiredUnits
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The stream updates have been successfully retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StreamUpdatesRetrieve"
            text/json:
              schema:
                $ref: "#/components/schemas/StreamUpdatesRetrieve"
            text/html:
              schema:
                $ref: "#/components/schemas/StreamUpdatesRetrieve"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/StreamUpdatesRetrieve"
        "404":
          description: Cache not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: Invalid marker supplied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Receive stream updates
      tags:
        - Stream
  "/streams/{webId}/channel":
    get:
      deprecated: false
      operationId: Stream_GetChannel
      parameters:
        - description: The ID of the stream.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: HeartbeatRate is an integer multiple of the Polling Interval. It
            specifies the rate at which a client will receive an empty message
            if there are no data updates. It can be used to check that the
            connection is still alive. Zero/negative values correspond to no
            heartbeat. By default, no empty messages will be sent to the user.
          in: query
          name: heartbeatRate
          required: false
          schema:
            type: integer
        - description: Specified if the channel should send a message with the current
            value of the stream after the connection is opened. The default is
            'false'.
          in: query
          name: includeInitialValues
          required: false
          schema:
            type: boolean
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "101":
          description: Switches to the Web Socket protocol.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
      summary: Opens a channel that will send messages about any value changes for the
        specified stream.
      tags:
        - Stream
  "/streams/{webId}/end":
    get:
      deprecated: false
      operationId: Stream_GetEnd
      parameters:
        - description: The ID of the stream.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The name or abbreviation of the desired units of measure for the
            returned value, as found in the UOM database associated with the
            attribute. If not specified for an attribute, the attribute's
            default unit of measure is used. If the underlying stream is a
            point, this value may not be specified, as points are not associated
            with a unit of measure.
          in: query
          name: desiredUnits
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The value at the specified time value.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimedValue"
            text/json:
              schema:
                $ref: "#/components/schemas/TimedValue"
            text/html:
              schema:
                $ref: "#/components/schemas/TimedValue"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/TimedValue"
      summary: Returns the end-of-stream value of the stream.
      tags:
        - Stream
  "/streams/{webId}/interpolated":
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors' property
        indicates PI Web API encountered a handled error during the transfer of
        the response stream.
      operationId: Stream_GetInterpolated
      parameters:
        - description: The ID of the stream.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The name or abbreviation of the desired units of measure for the
            returned value, as found in the UOM database associated with the
            attribute. If not specified for an attribute, the attribute's
            default unit of measure is used. If the underlying stream is a
            point, this value may not be specified, as points are not associated
            with a unit of measure.
          in: query
          name: desiredUnits
          required: false
          schema:
            type: string
        - description: An optional end time. The default is '*' for element attributes and
            points. For event frame attributes, the default is the event frame's
            end time, or '*' if that is not set. Note that if endTime is earlier
            than startTime, the resulting values will be in time-descending
            order.
          in: query
          name: endTime
          required: false
          schema:
            type: string
        - description: An optional string containing a filter expression. Expression
            variables are relative to the data point. Use '.' to reference the
            containing attribute. If the attribute does not support filtering,
            the filter will be ignored. The default is no filtering.
          in: query
          name: filterExpression
          required: false
          schema:
            type: string
        - description: Specify 'true' to indicate that values which fail the filter
            criteria are present in the returned data at the times where they
            occurred with a value set to a 'Filtered' enumeration value with bad
            status. Repeated consecutive failures are omitted.
          in: query
          name: includeFilteredValues
          required: false
          schema:
            type: boolean
        - description: The sampling interval, in AFTimeSpan format.
          in: query
          name: interval
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: An optional start time. The default is '*-1d' for element attributes
            and points. For event frame attributes, the default is the event
            frame's start time, or '*-1d' if that is not set.
          in: query
          name: startTime
          required: false
          schema:
            type: string
        - description: An optional start time anchor, in AFTime format. When specified,
            interpolated data retrieval will use the sync time as the origin for
            calculating the interval times.
          in: query
          name: syncTime
          required: false
          schema:
            type: string
        - description: An optional string specifying the boundary type to use when applying
            a syncTime. The allowed values are 'Inside' and 'Outside'. The
            default is 'Inside'.
          in: query
          name: syncTimeBoundaryType
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either places, the PI Web
            API server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The values that meet the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimedValues"
            text/json:
              schema:
                $ref: "#/components/schemas/TimedValues"
            text/html:
              schema:
                $ref: "#/components/schemas/TimedValues"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/TimedValues"
        "400":
          description: The request was malformed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: The data reference does not support this method, or the supplied
            filter expression is unsupported, or the desired units of measure
            are incompatible.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Retrieves interpolated values over the specified time range at the
        specified sampling interval.
      tags:
        - Stream
  "/streams/{webId}/interpolatedattimes":
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors' property
        indicates PI Web API encountered a handled error during the transfer of
        the response stream.
      operationId: Stream_GetInterpolatedAtTimes
      parameters:
        - description: The ID of the stream.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The timestamp at which to retrieve an interpolated value. Multiple
            timestamps may be specified with multiple instances of the
            parameter.
          in: query
          name: time
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: The name or abbreviation of the desired units of measure for the
            returned value, as found in the UOM database associated with the
            attribute. If not specified for an attribute, the attribute's
            default unit of measure is used. If the underlying stream is a
            point, this value may not be specified, as points are not associated
            with a unit of measure.
          in: query
          name: desiredUnits
          required: false
          schema:
            type: string
        - description: An optional string containing a filter expression. Expression
            variables are relative to the data point. Use '.' to reference the
            containing attribute. If the attribute does not support filtering,
            the filter will be ignored. The default is no filtering.
          in: query
          name: filterExpression
          required: false
          schema:
            type: string
        - description: Specify 'true' to indicate that values which fail the filter
            criteria are present in the returned data at the times where they
            occurred with a value set to a 'Filtered' enumeration value with bad
            status. Repeated consecutive failures are omitted.
          in: query
          name: includeFilteredValues
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either places, the PI Web
            API server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The values that meet the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimedValues"
            text/json:
              schema:
                $ref: "#/components/schemas/TimedValues"
            text/html:
              schema:
                $ref: "#/components/schemas/TimedValues"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/TimedValues"
        "400":
          description: The request was malformed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: The data reference does not support this method, or the supplied
            filter expression is unsupported, or the desired units of measure
            are incompatible.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Retrieves interpolated values over the specified time range at the
        specified sampling interval.
      tags:
        - Stream
  "/streams/{webId}/plot":
    get:
      deprecated: false
      description: For each interval, the data available is examined and significant values
        are returned. Each interval can produce up to 5 values if they are
        unique, the first value in the interval, the last value, the highest
        value, the lowest value and at most one exceptional point (bad status or
        digital state). Any time series value in the response that contains an
        'Errors' property indicates PI Web API encountered a handled error
        during the transfer of the response stream.
      operationId: Stream_GetPlot
      parameters:
        - description: The ID of the stream.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The name or abbreviation of the desired units of measure for the
            returned value, as found in the UOM database associated with the
            attribute. If not specified for an attribute, the attribute's
            default unit of measure is used. If the underlying stream is a
            point, this value may not be specified, as points are not associated
            with a unit of measure.
          in: query
          name: desiredUnits
          required: false
          schema:
            type: string
        - description: An optional end time. The default is '*' for element attributes and
            points. For event frame attributes, the default is the event frame's
            end time, or '*' if that is not set. Note that if endTime is earlier
            than startTime, the resulting values will be in time-descending
            order.
          in: query
          name: endTime
          required: false
          schema:
            type: string
        - description: The number of intervals to plot over. Typically, this would be the
            number of horizontal pixels in the trend. The default is '24'. For
            each interval, the data available is examined and significant values
            are returned. Each interval can produce up to 5 values if they are
            unique, the first value in the interval, the last value, the highest
            value, the lowest value and at most one exceptional point (bad
            status or digital state).
          in: query
          name: intervals
          required: false
          schema:
            type: integer
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: An optional start time. The default is '*-1d' for element attributes
            and points. For event frame attributes, the default is the event
            frame's start time, or '*-1d' if that is not set.
          in: query
          name: startTime
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either places, the PI Web
            API server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The values that meet the specified conditions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimedValues"
            text/json:
              schema:
                $ref: "#/components/schemas/TimedValues"
            text/html:
              schema:
                $ref: "#/components/schemas/TimedValues"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/TimedValues"
        "400":
          description: The request was malformed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: The data reference does not support this method, or the desired
            units of measure are incompatible.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Retrieves values over the specified time range suitable for plotting
        over the number of intervals (typically represents pixels).
      tags:
        - Stream
  "/streams/{webId}/recorded":
    get:
      deprecated: false
      description: Returned times are affected by the specified boundary type. If no values
        are found for the time range and conditions specified then the HTTP
        response will be success, with a body containing an empty array of
        Items. When specifying true for the includeFilteredValues parameter,
        consecutive filtered events are not returned. The first value that would
        be filtered out is returned with its time and the enumeration value
        "Filtered". The next value in the collection will be the next compressed
        value in the specified direction that passes the filter criteria - if
        any. When both boundaryType and a filterExpression are specified, the
        events returned for the boundary condition specified are passed through
        the filter. If the includeFilteredValues parameter is true, the boundary
        values will be reported at the proper timestamps with the enumeration
        value "Filtered" when the filter conditions are not met at the boundary
        time. If the includeFilteredValues parameter is false for this case, no
        event is returned for the boundary time. Any time series value in the
        response that contains an 'Errors' property indicates PI Web API
        encountered a handled error during the transfer of the response
        stream.   If only recorded values with annotations are desired, the
        filterExpression parameter should include the filter IsSet('.', "a").
      operationId: Stream_GetRecorded
      parameters:
        - description: The ID of the stream.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports Annotations to return events with annotation
            values. If this parameter is not specified, annotation values are
            not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: An optional value that determines how the times and values of the
            returned end points are determined. The default is 'Inside'.
          in: query
          name: boundaryType
          required: false
          schema:
            type: string
        - description: The name or abbreviation of the desired units of measure for the
            returned value, as found in the UOM database associated with the
            attribute. If not specified for an attribute, the attribute's
            default unit of measure is used. If the underlying stream is a
            point, this value may not be specified, as points are not associated
            with a unit of measure.
          in: query
          name: desiredUnits
          required: false
          schema:
            type: string
        - description: An optional end time. The default is '*' for element attributes and
            points. For event frame attributes, the default is the event frame's
            end time, or '*' if that is not set. Note that if endTime is earlier
            than startTime, the resulting values will be in time-descending
            order.
          in: query
          name: endTime
          required: false
          schema:
            type: string
        - description: An optional string containing a filter expression. Expression
            variables are relative to the data point. Use '.' to reference the
            containing attribute. The default is no filtering.
          in: query
          name: filterExpression
          required: false
          schema:
            type: string
        - description: Specify 'true' to indicate that values which fail the filter
            criteria are present in the returned data at the times where they
            occurred with a value set to a 'Filtered' enumeration value with bad
            status. Repeated consecutive failures are omitted.
          in: query
          name: includeFilteredValues
          required: false
          schema:
            type: boolean
        - description: The maximum number of values to be returned. The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: An optional start time. The default is '*-1d' for element attributes
            and points. For event frame attributes, the default is the event
            frame's start time, or '*-1d' if that is not set.
          in: query
          name: startTime
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either places, the PI Web
            API server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The values that meet the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtendedTimedValues"
            text/json:
              schema:
                $ref: "#/components/schemas/ExtendedTimedValues"
            text/html:
              schema:
                $ref: "#/components/schemas/ExtendedTimedValues"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/ExtendedTimedValues"
        "400":
          description: The request was malformed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: The data reference does not support the method, or the supplied
            filter expression is unsupported, or the desired units of measure
            are incompatible, or an unsupported association was specified.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Returns a list of compressed values for the requested time range from
        the source provider.
      tags:
        - Stream
    post:
      deprecated: false
      operationId: Stream_UpdateValues
      parameters:
        - description: The ID of the stream.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The desired AFBufferOption. The default is 'BufferIfPossible'.
          in: query
          name: bufferOption
          required: false
          schema:
            type: string
        - description: The desired AFUpdateOption. The default is 'Replace'.
          in: query
          name: updateOption
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/TimedValue"
              type: array
          text/json:
            schema:
              items:
                $ref: "#/components/schemas/TimedValue"
              type: array
        description: The values to add or update.
        required: true
      responses:
        "204":
          description: All updates executed successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Substatus_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Substatus_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Substatus_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Substatus_"
        "207":
          description: The operation was a partial success. The response body contains
            substatuses and errors in the same order as the supplied values.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Substatus_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Substatus_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Substatus_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Substatus_"
        "409":
          description: The data reference does not support this operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Updates multiple values for the specified stream.
      tags:
        - Stream
  "/streams/{webId}/recordedattime":
    get:
      deprecated: false
      description: If only recorded values with annotations are desired, the
        filterExpression parameter should include the filter IsSet('.', "a").
      operationId: Stream_GetRecordedAtTime
      parameters:
        - description: The ID of the stream.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The timestamp at which the value is desired.
          in: query
          name: time
          required: true
          schema:
            type: string
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports Annotations to return events with annotation
            values. If this parameter is not specified, annotation values are
            not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: The name or abbreviation of the desired units of measure for the
            returned value, as found in the UOM database associated with the
            attribute. If not specified for an attribute, the attribute's
            default unit of measure is used. If the underlying stream is a
            point, this value may not be specified, as points are not associated
            with a unit of measure.
          in: query
          name: desiredUnits
          required: false
          schema:
            type: string
        - description: An optional value that determines the value to return when a value
            doesn't exist at the exact time specified. The default is 'Auto'.
          in: query
          name: retrievalMode
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either places, the PI Web
            API server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The value that meet the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtendedTimedValue"
            text/json:
              schema:
                $ref: "#/components/schemas/ExtendedTimedValue"
            text/html:
              schema:
                $ref: "#/components/schemas/ExtendedTimedValue"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/ExtendedTimedValue"
        "400":
          description: The request was malformed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: The data reference does not support the method, or the desired units
            of measure are incompatible.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Returns a single recorded value based on the passed time and retrieval
        mode from the stream.
      tags:
        - Stream
  "/streams/{webId}/recordedattimes":
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors' property
        indicates PI Web API encountered a handled error during the transfer of
        the response stream.   If only recorded values with annotations are
        desired, the filterExpression parameter should include the filter
        IsSet('.', "a").
      operationId: Stream_GetRecordedAtTimes
      parameters:
        - description: The ID of the stream.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The timestamp at which to retrieve a recorded value. Multiple
            timestamps may be specified with multiple instances of the
            parameter.
          in: query
          name: time
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Associated values to return in the response, separated by semicolons
            (;). This call supports Annotations to return events with annotation
            values. If this parameter is not specified, annotation values are
            not returned.
          in: query
          name: associations
          required: false
          schema:
            type: string
        - description: The name or abbreviation of the desired units of measure for the
            returned value, as found in the UOM database associated with the
            attribute. If not specified for an attribute, the attribute's
            default unit of measure is used. If the underlying stream is a
            point, this value may not be specified, as points are not associated
            with a unit of measure.
          in: query
          name: desiredUnits
          required: false
          schema:
            type: string
        - description: An optional value that determines the value to return when a value
            doesn't exist at the exact time specified. The default is 'Auto'.
          in: query
          name: retrievalMode
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either places, the PI Web
            API server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The values that meet the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtendedTimedValues"
            text/json:
              schema:
                $ref: "#/components/schemas/ExtendedTimedValues"
            text/html:
              schema:
                $ref: "#/components/schemas/ExtendedTimedValues"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/ExtendedTimedValues"
        "400":
          description: The request was malformed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: The data reference does not support this method, or the desired
            units of measure are incompatible.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Retrieves recorded values at the specified times.
      tags:
        - Stream
  "/streams/{webId}/summary":
    get:
      deprecated: false
      description: Count is the only summary type supported on non-numeric streams.
        Requesting a summary for any other type will generate an error.
        Time-weighted totals are computed by integrating the rate tag values
        over the requested time range. If some of the data are bad in the time
        range, the calculated total is divided by the fraction of the time
        period for which there are good values. This approach is equivalent to
        assuming that during the period of bad data, the tag takes on the
        average values for the entire calculation time range. The PercentGood
        summary may be used to determine if the calculation results are suitable
        for the application's purposes. For time-weighted totals, if the time
        unit rate of the stream cannot be determined, then the value will be
        totaled assuming a unit of "per day" and no unit of measure will be
        assigned to the value. If the measured time component of the tag is not
        based on a day, the user of the data must convert the totalized value to
        the correct units.
      operationId: Stream_GetSummary
      parameters:
        - description: The ID of the stream.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Specifies the method of evaluating the data over the time range. The
            default is 'TimeWeighted'.
          in: query
          name: calculationBasis
          required: false
          schema:
            type: string
        - description: An optional end time. The default is '*' for element attributes and
            points. For event frame attributes, the default is the event frame's
            end time, or '*' if that is not set. Note that if endTime is earlier
            than startTime, the resulting values will be in time-descending
            order.
          in: query
          name: endTime
          required: false
          schema:
            type: string
        - description: A string containing a filter expression. Expression variables are
            relative to the attribute. Use '.' to reference the containing
            attribute.
          in: query
          name: filterExpression
          required: false
          schema:
            type: string
        - description: When the sampleType is Interval, sampleInterval specifies how often
            the filter expression is evaluated when computing the summary for an
            interval.
          in: query
          name: sampleInterval
          required: false
          schema:
            type: string
        - description: Defines the evaluation of an expression over a time range. The
            default is 'ExpressionRecordedValues'.
          in: query
          name: sampleType
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: An optional start time. The default is '*-1d' for element attributes
            and points. For event frame attributes, the default is the event
            frame's start time, or '*-1d' if that is not set.
          in: query
          name: startTime
          required: false
          schema:
            type: string
        - description: The duration of each summary interval. If specified in hours,
            minutes, seconds, or milliseconds, the summary durations will be
            evenly spaced UTC time intervals. Longer interval types are
            interpreted using wall clock rules and are time zone dependent.
          in: query
          name: summaryDuration
          required: false
          schema:
            type: string
        - description: Specifies the kinds of summaries to produce over the range. The
            default is 'Total'. Multiple summary types may be specified by using
            multiple instances of summaryType.
          in: query
          name: summaryType
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Specifies how to calculate the timestamp for each interval. The
            default is 'Auto'.
          in: query
          name: timeType
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either places, the PI Web
            API server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The summaries that meet the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SummaryValue_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SummaryValue_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SummaryValue_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SummaryValue_"
        "409":
          description: The data reference does not support this method.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Returns a summary over the specified time range for the stream.
      tags:
        - Stream
  "/streams/{webId}/updates":
    post:
      deprecated: false
      description: The supplied webId will register for stream updates. For a 201 or 204
        response, the returned location header will contain the url for
        retrieving the next set of stream updates.
      operationId: Stream_RegisterStreamUpdate
      parameters:
        - description: The ID of the stream.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful registration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StreamUpdatesRegister"
            text/json:
              schema:
                $ref: "#/components/schemas/StreamUpdatesRegister"
            text/html:
              schema:
                $ref: "#/components/schemas/StreamUpdatesRegister"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/StreamUpdatesRegister"
        "400":
          description: Invalid webId
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: WebId represents a static attribute
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Register for stream updates
      tags:
        - Stream
  "/streams/{webId}/value":
    get:
      deprecated: false
      operationId: Stream_GetValue
      parameters:
        - description: The ID of the stream.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The name or abbreviation of the desired units of measure for the
            returned value, as found in the UOM database associated with the
            attribute. If not specified for an attribute, the attribute's
            default unit of measure is used. If the underlying stream is a
            point, this value may not be specified, as points are not associated
            with a unit of measure.
          in: query
          name: desiredUnits
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: An optional time. The default time context is determined from the
            owning object - for example, the time range of the event frame or
            transfer which holds this attribute. Otherwise, the implementation
            of the Data Reference determines the meaning of no context. For
            Points or simply configured PI Point Data References, this means the
            snapshot value of the PI Point on the Data Server.
          in: query
          name: time
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either places, the PI Web
            API server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The value at the specified time value.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimedValue"
            text/json:
              schema:
                $ref: "#/components/schemas/TimedValue"
            text/html:
              schema:
                $ref: "#/components/schemas/TimedValue"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/TimedValue"
        "409":
          description: The data reference does not support the method, or the desired units
            of measure are incompatible.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Returns the value of the stream at the specified time. By default, this
        is usually the current value.
      tags:
        - Stream
    post:
      deprecated: false
      operationId: Stream_UpdateValue
      parameters:
        - description: The ID of the stream.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The desired AFBufferOption. The default is 'BufferIfPossible'.
          in: query
          name: bufferOption
          required: false
          schema:
            type: string
        - description: The desired AFUpdateOption. The default is 'Replace'. This parameter
            is ignored if the attribute is a configuration item.
          in: query
          name: updateOption
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TimedValue"
          text/json:
            schema:
              $ref: "#/components/schemas/TimedValue"
        description: The value to add or update.
        required: true
      responses:
        "202":
          description: The value was accepted for a potential buffered update. The
            response's Location header is a link that can be used to examine the
            result.
        "204":
          description: The update operation was successfully applied. The response's
            Location header is a link that can be used to examine the result.
        "400":
          description: The request was malformed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: The attribute or data reference does not support this operation, or
            the specified units are incompatible.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Updates a value for the specified stream.
      tags:
        - Stream
  /streamsets/channel:
    get:
      deprecated: false
      operationId: StreamSet_GetChannelAdHoc
      parameters:
        - description: The ID of a stream. Multiple streams may be specified with multiple
            instances of the parameter.
          in: query
          name: webId
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Specifies the maximum number of consecutive empty messages that can
            be elapsed with no new data updates from the PI System, after which
            the client receives an empty payload. It helps to check if the
            connection is still alive. Zero/negative values correspond to no
            heartbeat, and the default value is no heartbeat.
          in: query
          name: heartbeatRate
          required: false
          schema:
            type: integer
        - description: Specified if the channel should send a message with the current
            values of all the streams after the connection is opened. The
            default is 'false'.
          in: query
          name: includeInitialValues
          required: false
          schema:
            type: boolean
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "101":
          description: Switches to the Web Socket protocol.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
      summary: Opens a channel that will send messages about any value changes for the
        specified streams.
      tags:
        - StreamSet
  /streamsets/end:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors' property
        indicates PI Web API encountered a handled error during the transfer of
        the response stream.
      operationId: StreamSet_GetEndAdHoc
      parameters:
        - description: The ID of a stream. Multiple streams may be specified with multiple
            instances of the parameter.
          in: query
          name: webId
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The field or property of the object used to sort the returned
            collection. For better performance, by default no sorting is
            applied. 'Name' is the only supported field by which to sort.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: End of stream values of the streams that meet the specified
            conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
      summary: Returns End Of Stream values for attributes of the specified streams
      tags:
        - StreamSet
  /streamsets/interpolated:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors' property
        indicates PI Web API encountered a handled error during the transfer of
        the response stream.
      operationId: StreamSet_GetInterpolatedAdHoc
      parameters:
        - description: The ID of a stream. Multiple streams may be specified with multiple
            instances of the parameter.
          in: query
          name: webId
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: An optional end time. The default is '*'. Note that if endTime is
            earlier than startTime, the resulting values will be in
            time-descending order.
          in: query
          name: endTime
          required: false
          schema:
            type: string
        - description: An optional string containing a filter expression. Expression
            variables are relative to the data point. Use '.' to reference the
            containing attribute. If the attribute does not support filtering,
            the filter will be ignored. The default is no filtering.
          in: query
          name: filterExpression
          required: false
          schema:
            type: string
        - description: Specify 'true' to indicate that values which fail the filter
            criteria are present in the returned data at the times where they
            occurred with a value set to a 'Filtered' enumeration value with bad
            status. Repeated consecutive failures are omitted.
          in: query
          name: includeFilteredValues
          required: false
          schema:
            type: boolean
        - description: The sampling interval, in AFTimeSpan format.
          in: query
          name: interval
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The field or property of the object used to sort the returned
            collection. For better performance, by default no sorting is
            applied. 'Name' is the only supported field by which to sort.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: An optional start time. The default is '*-1d'.
          in: query
          name: startTime
          required: false
          schema:
            type: string
        - description: An optional start time anchor, in AFTime format. When specified,
            interpolated data retrieval will use the sync time as the origin for
            calculating the interval times.
          in: query
          name: syncTime
          required: false
          schema:
            type: string
        - description: An optional string specifying the boundary type to use when applying
            a syncTime. The allowed values are 'Inside' and 'Outside'. The
            default is 'Inside'.
          in: query
          name: syncTimeBoundaryType
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either places, the PI Web
            API server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Interpolated values of the streams that meet the specified
            conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
      summary: Returns interpolated values of the specified streams over the specified
        time range at the specified sampling interval.
      tags:
        - StreamSet
  /streamsets/interpolatedattimes:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors' property
        indicates PI Web API encountered a handled error during the transfer of
        the response stream.
      operationId: StreamSet_GetInterpolatedAtTimesAdHoc
      parameters:
        - description: The timestamp at which to retrieve a interpolated value. Multiple
            timestamps may be specified with multiple instances of the
            parameter.
          in: query
          name: time
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: The ID of a stream. Multiple streams may be specified with multiple
            instances of the parameter.
          in: query
          name: webId
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: An optional string containing a filter expression. Expression
            variables are relative to the data point. Use '.' to reference the
            containing attribute. If the attribute does not support filtering,
            the filter will be ignored. The default is no filtering.
          in: query
          name: filterExpression
          required: false
          schema:
            type: string
        - description: Specify 'true' to indicate that values which fail the filter
            criteria are present in the returned data at the times where they
            occurred with a value set to a 'Filtered' enumeration value with bad
            status. Repeated consecutive failures are omitted.
          in: query
          name: includeFilteredValues
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either places, the PI Web
            API server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Interpolated values of the streams that meet the specified
            conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
        "400":
          description: The request was malformed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "502":
          description: The request was cancelled.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Returns interpolated values of the specified streams at the specified
        times.
      tags:
        - StreamSet
  /streamsets/joined:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors' property
        indicates PI Web API encountered a handled error during the transfer of
        the response stream. The first stream in the response is always the
        X-Axis.
      operationId: StreamSet_GetJoined
      parameters:
        - description: The ID of the base stream which is used for retrieving the recorded
            values.
          in: query
          name: baseWebId
          required: true
          schema:
            type: string
        - description: The ID of a stream whose values will be joined on the times with the
            values of the base stream. Multiple streams may be specified with
            multiple instances of the parameter.
          in: query
          name: subordinateWebId
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: An optional value that determines how the times and values of the
            returned end points are determined. The default is 'Inside'.
          in: query
          name: boundaryType
          required: false
          schema:
            type: string
        - description: An optional end time. The default is '*' for element attributes and
            points. For event frame attributes, the default is the event frame's
            end time, or '*' if that is not set. Note that if endTime is earlier
            than startTime, the resulting values will be in time-descending
            order.
          in: query
          name: endTime
          required: false
          schema:
            type: string
        - description: An optional string containing a filter expression. Expression
            variables are relative to the data point. Use '.' to reference the
            containing attribute. The default is no filtering.
          in: query
          name: filterExpression
          required: false
          schema:
            type: string
        - description: Specify 'true' to indicate that values which fail the filter
            criteria are present in the returned data at the times where they
            occurred with a value set to a 'Filtered' enumeration value with bad
            status. Repeated consecutive failures are omitted.
          in: query
          name: includeFilteredValues
          required: false
          schema:
            type: boolean
        - description: The maximum number of values to be returned. The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: An optional start time. The default is '*-1d' for element attributes
            and points. For event frame attributes, the default is the event
            frame's start time, or '*-1d' if that is not set.
          in: query
          name: startTime
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either place, the PI Web API
            server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Recorded values of the streams that meet the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
        "409":
          description: Unsupported operation on the given AF object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Returns the base stream's recorded values and subordinate streams'
        interpolated values at times matching the recorded values' timestamps.
      tags:
        - StreamSet
  /streamsets/plot:
    get:
      deprecated: false
      description: For each interval, the data available is examined and significant values
        are returned. Each interval can produce up to 5 values if they are
        unique, the first value in the interval, the last value, the highest
        value, the lowest value and at most one exceptional point (bad status or
        digital state). Any time series value in the response that contains an
        'Errors' property indicates PI Web API encountered a handled error
        during the transfer of the response stream.
      operationId: StreamSet_GetPlotAdHoc
      parameters:
        - description: The ID of a stream. Multiple streams may be specified with multiple
            instances of the parameter.
          in: query
          name: webId
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: An optional end time. The default is '*'. Note that if endTime is
            earlier than startTime, the resulting values will be in
            time-descending order.
          in: query
          name: endTime
          required: false
          schema:
            type: string
        - description: The number of intervals to plot over. Typically, this would be the
            number of horizontal pixels in the trend. The default is '24'. For
            each interval, the data available is examined and significant values
            are returned. Each interval can produce up to 5 values if they are
            unique, the first value in the interval, the last value, the highest
            value, the lowest value and at most one exceptional point (bad
            status or digital state).
          in: query
          name: intervals
          required: false
          schema:
            type: integer
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The field or property of the object used to sort the returned
            collection. For better performance, by default no sorting is
            applied. 'Name' is the only supported field by which to sort.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: An optional start time. The default is '*-1d'.
          in: query
          name: startTime
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either places, the PI Web
            API server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Plot values of the streams that meet the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
        "409":
          description: Unsupported operation on the given AF object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Returns values of attributes for the specified streams over the
        specified time range suitable for plotting over the number of intervals
        (typically represents pixels).
      tags:
        - StreamSet
  /streamsets/recorded:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors' property
        indicates PI Web API encountered a handled error during the transfer of
        the response stream.
      operationId: StreamSet_GetRecordedAdHoc
      parameters:
        - description: The ID of a stream. Multiple streams may be specified with multiple
            instances of the parameter.
          in: query
          name: webId
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: An optional value that determines how the times and values of the
            returned end points are determined. The default is 'Inside'.
          in: query
          name: boundaryType
          required: false
          schema:
            type: string
        - description: An optional end time. The default is '*'. Note that if endTime is
            earlier than startTime, the resulting values will be in
            time-descending order.
          in: query
          name: endTime
          required: false
          schema:
            type: string
        - description: An optional string containing a filter expression. Expression
            variables are relative to the data point. Use '.' to reference the
            containing attribute. The default is no filtering.
          in: query
          name: filterExpression
          required: false
          schema:
            type: string
        - description: Specify 'true' to indicate that values which fail the filter
            criteria are present in the returned data at the times where they
            occurred with a value set to a 'Filtered' enumeration value with bad
            status. Repeated consecutive failures are omitted.
          in: query
          name: includeFilteredValues
          required: false
          schema:
            type: boolean
        - description: The maximum number of values to be returned. The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The field or property of the object used to sort the returned
            collection. For better performance, by default no sorting is
            applied. 'Name' is the only supported field by which to sort.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: An optional start time. The default is '*-1d'.
          in: query
          name: startTime
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either places, the PI Web
            API server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Recorded values of the streams that meet the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
        "409":
          description: Unsupported operation on the given AF object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Returns recorded values of the specified streams.
      tags:
        - StreamSet
    post:
      deprecated: false
      operationId: StreamSet_UpdateValuesAdHoc
      parameters:
        - description: The desired AFBufferOption. The default is 'BufferIfPossible'.
          in: query
          name: bufferOption
          required: false
          schema:
            type: string
        - description: The desired AFUpdateOption. The default is 'Replace'.
          in: query
          name: updateOption
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/StreamValuesArray"
      responses:
        "200":
          description: All updates executed successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Items_Substatus_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Items_Substatus_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Items_Substatus_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Items_Substatus_"
        "207":
          description: The operation was a partial success. The response body contains
            substatuses and errors in the same order as the supplied values.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Items_Substatus_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Items_Substatus_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Items_Substatus_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Items_Substatus_"
        "409":
          description: Unsupported operation on the given AF object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Updates multiple values for the specified streams.
      tags:
        - StreamSet
  /streamsets/recordedattime:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors' property
        indicates PI Web API encountered a handled error during the transfer of
        the response stream.
      operationId: StreamSet_GetRecordedAtTimeAdHoc
      parameters:
        - description: The timestamp at which the values are desired.
          in: query
          name: time
          required: true
          schema:
            type: string
        - description: The ID of a stream. Multiple streams may be specified with multiple
            instances of the parameter.
          in: query
          name: webId
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: An optional value that determines the values to return when values
            don't exist at the exact time specified. The default is 'Auto'.
          in: query
          name: retrievalMode
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either places, the PI Web
            API server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Recorded values of the streams that meet the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
        "409":
          description: Unsupported operation on the given AF object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Returns recorded values based on the passed time and retrieval mode.
      tags:
        - StreamSet
  /streamsets/recordedattimes:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors' property
        indicates PI Web API encountered a handled error during the transfer of
        the response stream.
      operationId: StreamSet_GetRecordedAtTimesAdHoc
      parameters:
        - description: The timestamp at which to retrieve a recorded value. Multiple
            timestamps may be specified with multiple instances of the
            parameter.
          in: query
          name: time
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: The ID of a stream. Multiple streams may be specified with multiple
            instances of the parameter.
          in: query
          name: webId
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: An optional value that determines the values to return when values
            don't exist at the exact time specified. The default is 'Auto'.
          in: query
          name: retrievalMode
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either places, the PI Web
            API server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Recorded values of the streams that meet the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
        "400":
          description: The request was malformed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "502":
          description: The request was cancelled.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Returns recorded values of the specified streams at the specified times.
      tags:
        - StreamSet
  /streamsets/summary:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors' property
        indicates PI Web API encountered a handled error during the transfer of
        the response stream.
      operationId: StreamSet_GetSummariesAdHoc
      parameters:
        - description: The ID of a stream. Multiple streams may be specified with multiple
            instances of the parameter.
          in: query
          name: webId
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Specifies the method of evaluating the data over the time range. The
            default is 'TimeWeighted'.
          in: query
          name: calculationBasis
          required: false
          schema:
            type: string
        - description: An optional end time. The default is '*'. Note that if endTime is
            earlier than startTime, the resulting values will be in
            time-descending order.
          in: query
          name: endTime
          required: false
          schema:
            type: string
        - description: A string containing a filter expression. Expression variables are
            relative to the attribute. Use '.' to reference the containing
            attribute. The default is no filtering.
          in: query
          name: filterExpression
          required: false
          schema:
            type: string
        - description: A time span specifies how often the filter expression is evaluated
            when computing the summary for an interval, if the sampleType is
            'Interval'.
          in: query
          name: sampleInterval
          required: false
          schema:
            type: string
        - description: A flag which specifies one or more summaries to compute for each
            interval over the time range. The default is
            'ExpressionRecordedValues'.
          in: query
          name: sampleType
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: An optional start time. The default is '*-1d'.
          in: query
          name: startTime
          required: false
          schema:
            type: string
        - description: The duration of each summary interval.
          in: query
          name: summaryDuration
          required: false
          schema:
            type: string
        - description: Specifies the kinds of summaries to produce over the range. The
            default is 'Total'. Multiple summary types may be specified by using
            multiple instances of summaryType.
          in: query
          name: summaryType
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Specifies how to calculate the timestamp for each interval. The
            default is 'Auto'.
          in: query
          name: timeType
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either places, the PI Web
            API server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Summary values of the streams that meet the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_StreamSummaries_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_StreamSummaries_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_StreamSummaries_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_StreamSummaries_"
        "409":
          description: Unsupported operation on the given AF object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Returns summary values of the specified streams.
      tags:
        - StreamSet
  /streamsets/updates:
    get:
      deprecated: false
      description: The supplied markers will identify the set of stream updates to
        retrieve. For a 200 response, the returned location header will contain
        the url for retrieving the stream updates.
      operationId: StreamSet_RetrieveStreamSetUpdates
      parameters:
        - description: Identifier of stream source and current position. Multiple markers
            may be specified with multiple instances of the parameter.
          in: query
          name: marker
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The stream updates have been successfully retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_StreamUpdatesRetrieve_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_StreamUpdatesRetrieve_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_StreamUpdatesRetrieve_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_StreamUpdatesRetrieve_"
      summary: Receive stream updates
      tags:
        - StreamSet
    post:
      deprecated: false
      description: The supplied webIds will register for stream updates. For a 200
        response, the returned location header will contain the url for
        retrieving the next set of stream updates.
      operationId: StreamSet_RegisterStreamSetUpdates
      parameters:
        - description: The ID of a stream. Multiple streams may be specified with multiple
            instances of the parameter.
          in: query
          name: webId
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Successful Registration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_StreamUpdatesRegister_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_StreamUpdatesRegister_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_StreamUpdatesRegister_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_StreamUpdatesRegister_"
        "400":
          description: Any webID supplied is invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: Any webID supplied is a static attribute
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Register for stream updates
      tags:
        - StreamSet
  /streamsets/value:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors' property
        indicates PI Web API encountered a handled error during the transfer of
        the response stream.
      operationId: StreamSet_GetValuesAdHoc
      parameters:
        - description: The ID of a stream. Multiple streams may be specified with multiple
            instances of the parameter.
          in: query
          name: webId
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: The field or property of the object used to sort the returned
            collection. For better performance, by default no sorting is
            applied. 'Name' is the only supported field by which to sort.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: An AF time string, which is used as the time context to get stream
            values if it is provided. By default, it is not specified, and the
            default time context of the AF object will be used.
          in: query
          name: time
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either places, the PI Web
            API server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Summary values of the streams that meet the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
        "409":
          description: Unsupported operation on the given AF object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Returns values of the specified streams.
      tags:
        - StreamSet
    post:
      deprecated: false
      operationId: StreamSet_UpdateValueAdHoc
      parameters:
        - description: The desired AFBufferOption. The default is 'BufferIfPossible'.
          in: query
          name: bufferOption
          required: false
          schema:
            type: string
        - description: The desired AFUpdateOption. The default is 'Replace'.
          in: query
          name: updateOption
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/StreamValueArray"
      responses:
        "200":
          description: All updates executed successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Substatus_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Substatus_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Substatus_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Substatus_"
        "207":
          description: The operation was a partial success. The response body contains
            substatuses and errors in the same order as the supplied values.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Substatus_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Substatus_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Substatus_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Substatus_"
        "409":
          description: Unsupported operation on the given AF object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Updates a single value for the specified streams.
      tags:
        - StreamSet
  "/streamsets/{webId}/channel":
    get:
      deprecated: false
      operationId: StreamSet_GetChannel
      parameters:
        - description: The ID of an Element, Event Frame or Attribute, which is the base
            element or parent of all the stream attributes.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Specify that included attributes must have this category. The
            default is no category filter.
          in: query
          name: categoryName
          required: false
          schema:
            type: string
        - description: Specifies the maximum number of consecutive empty messages that can
            be elapsed with no new data updates from the PI System, after which
            the client receives an empty payload. It helps to check if the
            connection is still alive. Zero/negative values correspond to no
            heartbeat, and the default value is no heartbeat.
          in: query
          name: heartbeatRate
          required: false
          schema:
            type: integer
        - description: Specified if the channel should send a message with the current
            values of all the streams after the connection is opened. The
            default is 'false'.
          in: query
          name: includeInitialValues
          required: false
          schema:
            type: boolean
        - description: The name query string used for filtering attributes. The default is
            no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: Specifies if the search should include attributes nested further
            than the immediate attributes of the searchRoot. The default is
            'false'.
          in: query
          name: searchFullHierarchy
          required: false
          schema:
            type: boolean
        - description: Specified if the search should include attributes with the Excluded
            property set. The default is 'false'.
          in: query
          name: showExcluded
          required: false
          schema:
            type: boolean
        - description: Specified if the search should include attributes with the Hidden
            property set. The default is 'false'.
          in: query
          name: showHidden
          required: false
          schema:
            type: boolean
        - description: Specify that included attributes must be members of this template.
            The default is no template filter.
          in: query
          name: templateName
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "101":
          description: Switches to the Web Socket protocol.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
        "409":
          description: Unsupported operation on the given AF object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Opens a channel that will send messages about any value changes for the
        attributes of an Element, Event Frame, or Attribute.
      tags:
        - StreamSet
  "/streamsets/{webId}/end":
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors' property
        indicates PI Web API encountered a handled error during the transfer of
        the response stream.
      operationId: StreamSet_GetEnd
      parameters:
        - description: The ID of an Element, Event Frame or Attribute, which is the base
            element or parent of all the stream attributes.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Specify that included attributes must have this category. The
            default is no category filter.
          in: query
          name: categoryName
          required: false
          schema:
            type: string
        - description: The name query string used for filtering attributes. The default is
            no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: Specifies if the search should include attributes nested further
            than the immediate attributes of the searchRoot. The default is
            'false'.
          in: query
          name: searchFullHierarchy
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Specified if the search should include attributes with the Excluded
            property set. The default is 'false'.
          in: query
          name: showExcluded
          required: false
          schema:
            type: boolean
        - description: Specified if the search should include attributes with the Hidden
            property set. The default is 'false'.
          in: query
          name: showHidden
          required: false
          schema:
            type: boolean
        - description: The field or property of the object used to sort the returned
            collection. For better performance, by default no sorting is
            applied. 'Name' is the only supported field by which to sort.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: Specify that included attributes must be members of this template.
            The default is no template filter.
          in: query
          name: templateName
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Summary values of the streams that meet the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
        "409":
          description: Unsupported operation on the given AF object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Returns End of stream values of the attributes for an Element, Event
        Frame or Attribute
      tags:
        - StreamSet
  "/streamsets/{webId}/interpolated":
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors' property
        indicates PI Web API encountered a handled error during the transfer of
        the response stream.
      operationId: StreamSet_GetInterpolated
      parameters:
        - description: The ID of an element, event frame or attribute, which is the base
            element or parent of all the stream attributes.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Specify that included attributes must have this category. The
            default is no category filter.
          in: query
          name: categoryName
          required: false
          schema:
            type: string
        - description: An optional end time. The default is '*' for element attributes and
            points. For event frame attributes, the default is the event frame's
            end time, or '*' if that is not set. Note that if endTime is earlier
            than startTime, the resulting values will be in time-descending
            order.
          in: query
          name: endTime
          required: false
          schema:
            type: string
        - description: An optional string containing a filter expression. Expression
            variables are relative to the data point. Use '.' to reference the
            containing attribute. If the attribute does not support filtering,
            the filter will be ignored. The default is no filtering.
          in: query
          name: filterExpression
          required: false
          schema:
            type: string
        - description: Specify 'true' to indicate that values which fail the filter
            criteria are present in the returned data at the times where they
            occurred with a value set to a 'Filtered' enumeration value with bad
            status. Repeated consecutive failures are omitted.
          in: query
          name: includeFilteredValues
          required: false
          schema:
            type: boolean
        - description: The sampling interval, in AFTimeSpan format.
          in: query
          name: interval
          required: false
          schema:
            type: string
        - description: The name query string used for filtering attributes. The default is
            no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: Specifies if the search should include attributes nested further
            than the immediate attributes of the searchRoot. The default is
            'false'.
          in: query
          name: searchFullHierarchy
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Specified if the search should include attributes with the Excluded
            property set. The default is 'false'.
          in: query
          name: showExcluded
          required: false
          schema:
            type: boolean
        - description: Specified if the search should include attributes with the Hidden
            property set. The default is 'false'.
          in: query
          name: showHidden
          required: false
          schema:
            type: boolean
        - description: The field or property of the object used to sort the returned
            collection. For better performance, by default no sorting is
            applied. 'Name' is the only supported field by which to sort.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: An optional start time. The default is '*-1d' for element attributes
            and points. For event frame attributes, the default is the event
            frame's start time, or '*-1d' if that is not set.
          in: query
          name: startTime
          required: false
          schema:
            type: string
        - description: An optional start time anchor, in AFTime format. When specified,
            interpolated data retrieval will use the sync time as the origin for
            calculating the interval times.
          in: query
          name: syncTime
          required: false
          schema:
            type: string
        - description: An optional string specifying the boundary type to use when applying
            a syncTime. The allowed values are 'Inside' and 'Outside'. The
            default is 'Inside'.
          in: query
          name: syncTimeBoundaryType
          required: false
          schema:
            type: string
        - description: Specify that included attributes must be members of this template.
            The default is no template filter.
          in: query
          name: templateName
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either places, the PI Web
            API server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Interpolated values of the streams that meet the specified
            conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
      summary: Returns interpolated values of attributes for an element, event frame or
        attribute over the specified time range at the specified sampling
        interval.
      tags:
        - StreamSet
  "/streamsets/{webId}/interpolatedattimes":
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors' property
        indicates PI Web API encountered a handled error during the transfer of
        the response stream.
      operationId: StreamSet_GetInterpolatedAtTimes
      parameters:
        - description: The ID of an element, event frame or attribute, which is the base
            element or parent of all the stream attributes.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The timestamp at which to retrieve a interpolated value. Multiple
            timestamps may be specified with multiple instances of the
            parameter.
          in: query
          name: time
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Specify that included attributes must have this category. The
            default is no category filter.
          in: query
          name: categoryName
          required: false
          schema:
            type: string
        - description: An optional string containing a filter expression. Expression
            variables are relative to the data point. Use '.' to reference the
            containing attribute. If the attribute does not support filtering,
            the filter will be ignored. The default is no filtering.
          in: query
          name: filterExpression
          required: false
          schema:
            type: string
        - description: Specify 'true' to indicate that values which fail the filter
            criteria are present in the returned data at the times where they
            occurred with a value set to a 'Filtered' enumeration value with bad
            status. Repeated consecutive failures are omitted.
          in: query
          name: includeFilteredValues
          required: false
          schema:
            type: boolean
        - description: The name query string used for filtering attributes. The default is
            no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: Specifies if the search should include attributes nested further
            than the immediate attributes of the searchRoot. The default is
            'false'.
          in: query
          name: searchFullHierarchy
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Specified if the search should include attributes with the Excluded
            property set. The default is 'false'.
          in: query
          name: showExcluded
          required: false
          schema:
            type: boolean
        - description: Specified if the search should include attributes with the Hidden
            property set. The default is 'false'.
          in: query
          name: showHidden
          required: false
          schema:
            type: boolean
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: Specify that included attributes must be members of this template.
            The default is no template filter.
          in: query
          name: templateName
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either places, the PI Web
            API server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Interpolated values of the streams that meet the specified
            conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
        "400":
          description: The request was malformed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "502":
          description: The request was cancelled.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Returns interpolated values of attributes for an element, event frame or
        attribute at the specified times.
      tags:
        - StreamSet
  "/streamsets/{webId}/plot":
    get:
      deprecated: false
      description: For each interval, the data available is examined and significant values
        are returned. Each interval can produce up to 5 values if they are
        unique, the first value in the interval, the last value, the highest
        value, the lowest value and at most one exceptional point (bad status or
        digital state). Any time series value in the response that contains an
        'Errors' property indicates PI Web API encountered a handled error
        during the transfer of the response stream.
      operationId: StreamSet_GetPlot
      parameters:
        - description: The ID of an element, event frame or attribute, which is the base
            element or parent of all the stream attributes.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Specify that included attributes must have this category. The
            default is no category filter.
          in: query
          name: categoryName
          required: false
          schema:
            type: string
        - description: An optional end time. The default is '*' for element attributes and
            points. For event frame attributes, the default is the event frame's
            end time, or '*' if that is not set. Note that if endTime is earlier
            than startTime, the resulting values will be in time-descending
            order.
          in: query
          name: endTime
          required: false
          schema:
            type: string
        - description: The number of intervals to plot over. Typically, this would be the
            number of horizontal pixels in the trend. The default is '24'. For
            each interval, the data available is examined and significant values
            are returned. Each interval can produce up to 5 values if they are
            unique, the first value in the interval, the last value, the highest
            value, the lowest value and at most one exceptional point (bad
            status or digital state).
          in: query
          name: intervals
          required: false
          schema:
            type: integer
        - description: The name query string used for filtering attributes. The default is
            no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: Specifies if the search should include attributes nested further
            than the immediate attributes of the searchRoot. The default is
            'false'.
          in: query
          name: searchFullHierarchy
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Specified if the search should include attributes with the Excluded
            property set. The default is 'false'.
          in: query
          name: showExcluded
          required: false
          schema:
            type: boolean
        - description: Specified if the search should include attributes with the Hidden
            property set. The default is 'false'.
          in: query
          name: showHidden
          required: false
          schema:
            type: boolean
        - description: The field or property of the object used to sort the returned
            collection. For better performance, by default no sorting is
            applied. 'Name' is the only supported field by which to sort.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: An optional start time. The default is '*-1d' for element attributes
            and points. For event frame attributes, the default is the event
            frame's start time, or '*-1d' if that is not set.
          in: query
          name: startTime
          required: false
          schema:
            type: string
        - description: Specify that included attributes must be members of this template.
            The default is no template filter.
          in: query
          name: templateName
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either places, the PI Web
            API server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Plot values of the streams that meet the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
        "409":
          description: Unsupported operation on the given AF object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Returns values of attributes for an element, event frame or attribute
        over the specified time range suitable for plotting over the number of
        intervals (typically represents pixels).
      tags:
        - StreamSet
  "/streamsets/{webId}/recorded":
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors' property
        indicates PI Web API encountered a handled error during the transfer of
        the response stream.
      operationId: StreamSet_GetRecorded
      parameters:
        - description: The ID of an element, event frame or attribute, which is the base
            element or parent of all the stream attributes.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: An optional value that determines how the times and values of the
            returned end points are determined. The default is 'Inside'.
          in: query
          name: boundaryType
          required: false
          schema:
            type: string
        - description: Specify that included attributes must have this category. The
            default is no category filter.
          in: query
          name: categoryName
          required: false
          schema:
            type: string
        - description: An optional end time. The default is '*' for element attributes and
            points. For event frame attributes, the default is the event frame's
            end time, or '*' if that is not set. Note that if endTime is earlier
            than startTime, the resulting values will be in time-descending
            order.
          in: query
          name: endTime
          required: false
          schema:
            type: string
        - description: An optional string containing a filter expression. Expression
            variables are relative to the data point. Use '.' to reference the
            containing attribute. The default is no filtering.
          in: query
          name: filterExpression
          required: false
          schema:
            type: string
        - description: Specify 'true' to indicate that values which fail the filter
            criteria are present in the returned data at the times where they
            occurred with a value set to a 'Filtered' enumeration value with bad
            status. Repeated consecutive failures are omitted.
          in: query
          name: includeFilteredValues
          required: false
          schema:
            type: boolean
        - description: The maximum number of values to be returned. The default is 1000.
          in: query
          name: maxCount
          required: false
          schema:
            type: integer
        - description: The name query string used for filtering attributes. The default is
            no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: Specifies if the search should include attributes nested further
            than the immediate attributes of the searchRoot. The default is
            'false'.
          in: query
          name: searchFullHierarchy
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Specified if the search should include attributes with the Excluded
            property set. The default is 'false'.
          in: query
          name: showExcluded
          required: false
          schema:
            type: boolean
        - description: Specified if the search should include attributes with the Hidden
            property set. The default is 'false'.
          in: query
          name: showHidden
          required: false
          schema:
            type: boolean
        - description: The field or property of the object used to sort the returned
            collection. For better performance, by default no sorting is
            applied. 'Name' is the only supported field by which to sort.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: An optional start time. The default is '*-1d' for element attributes
            and points. For event frame attributes, the default is the event
            frame's start time, or '*-1d' if that is not set.
          in: query
          name: startTime
          required: false
          schema:
            type: string
        - description: Specify that included attributes must be members of this template.
            The default is no template filter.
          in: query
          name: templateName
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either places, the PI Web
            API server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Recorded values of the streams that meet the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
        "409":
          description: Unsupported operation on the given AF object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Returns recorded values of the attributes for an element, event frame,
        or attribute.
      tags:
        - StreamSet
    post:
      deprecated: false
      operationId: StreamSet_UpdateValues
      parameters:
        - description: The ID of the parent element, event frame, or attribute. Attributes
            specified in the body must be descendants of the specified object.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The desired AFBufferOption. The default is 'BufferIfPossible'.
          in: query
          name: bufferOption
          required: false
          schema:
            type: string
        - description: The desired AFUpdateOption. The default is 'Replace'.
          in: query
          name: updateOption
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/StreamValuesArray"
      responses:
        "200":
          description: All updates executed successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Items_Substatus_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Items_Substatus_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Items_Substatus_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Items_Substatus_"
        "207":
          description: The operation was a partial success. The response body contains
            substatuses and errors in the same order as the supplied values.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Items_Substatus_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Items_Substatus_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Items_Substatus_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Items_Substatus_"
        "409":
          description: Unsupported operation on the given AF object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Updates multiple values for the specified streams.
      tags:
        - StreamSet
  "/streamsets/{webId}/recordedattime":
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors' property
        indicates PI Web API encountered a handled error during the transfer of
        the response stream.
      operationId: StreamSet_GetRecordedAtTime
      parameters:
        - description: The ID of an element, event frame or attribute, which is the base
            element or parent of all the stream attributes.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The timestamp at which the values are desired.
          in: query
          name: time
          required: true
          schema:
            type: string
        - description: Specify that included attributes must have this category. The
            default is no category filter.
          in: query
          name: categoryName
          required: false
          schema:
            type: string
        - description: The name query string used for filtering attributes. The default is
            no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: An optional value that determines the values to return when values
            don't exist at the exact time specified. The default is 'Auto'.
          in: query
          name: retrievalMode
          required: false
          schema:
            type: string
        - description: Specifies if the search should include attributes nested further
            than the immediate attributes of the searchRoot. The default is
            'false'.
          in: query
          name: searchFullHierarchy
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Specified if the search should include attributes with the Excluded
            property set. The default is 'false'.
          in: query
          name: showExcluded
          required: false
          schema:
            type: boolean
        - description: Specified if the search should include attributes with the Hidden
            property set. The default is 'false'.
          in: query
          name: showHidden
          required: false
          schema:
            type: boolean
        - description: Specify that included attributes must be members of this template.
            The default is no template filter.
          in: query
          name: templateName
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either places, the PI Web
            API server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Recorded values of the streams that meet the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
        "409":
          description: Unsupported operation on the given AF object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Returns recorded values of the attributes for an element, event frame,
        or attribute.
      tags:
        - StreamSet
  "/streamsets/{webId}/recordedattimes":
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors' property
        indicates PI Web API encountered a handled error during the transfer of
        the response stream.
      operationId: StreamSet_GetRecordedAtTimes
      parameters:
        - description: The ID of an element, event frame or attribute, which is the base
            element or parent of all the stream attributes.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The timestamp at which to retrieve a recorded value. Multiple
            timestamps may be specified with multiple instances of the
            parameter.
          in: query
          name: time
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Specify that included attributes must have this category. The
            default is no category filter.
          in: query
          name: categoryName
          required: false
          schema:
            type: string
        - description: The name query string used for filtering attributes. The default is
            no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: An optional value that determines the values to return when values
            don't exist at the exact time specified. The default is 'Auto'.
          in: query
          name: retrievalMode
          required: false
          schema:
            type: string
        - description: Specifies if the search should include attributes nested further
            than the immediate attributes of the searchRoot. The default is
            'false'.
          in: query
          name: searchFullHierarchy
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Specified if the search should include attributes with the Excluded
            property set. The default is 'false'.
          in: query
          name: showExcluded
          required: false
          schema:
            type: boolean
        - description: Specified if the search should include attributes with the Hidden
            property set. The default is 'false'.
          in: query
          name: showHidden
          required: false
          schema:
            type: boolean
        - description: The order that the returned collection is sorted. The default is
            'Ascending'.
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: Specify that included attributes must be members of this template.
            The default is no template filter.
          in: query
          name: templateName
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either places, the PI Web
            API server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Recorded values of the streams that meet the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_StreamValues_"
        "400":
          description: The request was malformed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "502":
          description: The request was cancelled.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Returns recorded values of attributes for an element, event frame or
        attribute at the specified times.
      tags:
        - StreamSet
  "/streamsets/{webId}/summary":
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors' property
        indicates PI Web API encountered a handled error during the transfer of
        the response stream.
      operationId: StreamSet_GetSummaries
      parameters:
        - description: The ID of an element, event frame or attribute, which is the base
            element or parent of all the stream attributes.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Specifies the method of evaluating the data over the time range. The
            default is 'TimeWeighted'.
          in: query
          name: calculationBasis
          required: false
          schema:
            type: string
        - description: Specify that included attributes must have this category. The
            default is no category filter.
          in: query
          name: categoryName
          required: false
          schema:
            type: string
        - description: An optional end time. The default is '*' for element attributes and
            points. For event frame attributes, the default is the event frame's
            end time, or '*' if that is not set. Note that if endTime is earlier
            than startTime, the resulting values will be in time-descending
            order.
          in: query
          name: endTime
          required: false
          schema:
            type: string
        - description: A string containing a filter expression. Expression variables are
            relative to the attribute. Use '.' to reference the containing
            attribute. The default is no filtering.
          in: query
          name: filterExpression
          required: false
          schema:
            type: string
        - description: The name query string used for filtering attributes. The default is
            no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: A time span specifies how often the filter expression is evaluated
            when computing the summary for an interval, if the sampleType is
            'Interval'.
          in: query
          name: sampleInterval
          required: false
          schema:
            type: string
        - description: A flag which specifies one or more summaries to compute for each
            interval over the time range. The default is
            'ExpressionRecordedValues'.
          in: query
          name: sampleType
          required: false
          schema:
            type: string
        - description: Specifies if the search should include attributes nested further
            than the immediate attributes of the searchRoot. The default is
            'false'.
          in: query
          name: searchFullHierarchy
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Specified if the search should include attributes with the Excluded
            property set. The default is 'false'.
          in: query
          name: showExcluded
          required: false
          schema:
            type: boolean
        - description: Specified if the search should include attributes with the Hidden
            property set. The default is 'false'.
          in: query
          name: showHidden
          required: false
          schema:
            type: boolean
        - description: An optional start time. The default is '*-1d' for element attributes
            and points. For event frame attributes, the default is the event
            frame's start time, or '*-1d' if that is not set.
          in: query
          name: startTime
          required: false
          schema:
            type: string
        - description: The duration of each summary interval.
          in: query
          name: summaryDuration
          required: false
          schema:
            type: string
        - description: Specifies the kinds of summaries to produce over the range. The
            default is 'Total'. Multiple summary types may be specified by using
            multiple instances of summaryType.
          in: query
          name: summaryType
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Specify that included attributes must be members of this template.
            The default is no template filter.
          in: query
          name: templateName
          required: false
          schema:
            type: string
        - description: Specifies how to calculate the timestamp for each interval. The
            default is 'Auto'.
          in: query
          name: timeType
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either places, the PI Web
            API server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Summary values of the streams that meet the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_StreamSummaries_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_StreamSummaries_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_StreamSummaries_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_StreamSummaries_"
        "409":
          description: Unsupported operation on the given AF object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Returns summary values of the attributes for an element, event frame or
        attribute.
      tags:
        - StreamSet
  "/streamsets/{webId}/value":
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors' property
        indicates PI Web API encountered a handled error during the transfer of
        the response stream.
      operationId: StreamSet_GetValues
      parameters:
        - description: The ID of an Element, Event Frame or Attribute, which is the base
            element or parent of all the stream attributes.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Specify that included attributes must have this category. The
            default is no category filter.
          in: query
          name: categoryName
          required: false
          schema:
            type: string
        - description: The name query string used for filtering attributes. The default is
            no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: Specifies if the search should include attributes nested further
            than the immediate attributes of the searchRoot. The default is
            'false'.
          in: query
          name: searchFullHierarchy
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Specified if the search should include attributes with the Excluded
            property set. The default is 'false'.
          in: query
          name: showExcluded
          required: false
          schema:
            type: boolean
        - description: Specified if the search should include attributes with the Hidden
            property set. The default is 'false'.
          in: query
          name: showHidden
          required: false
          schema:
            type: boolean
        - description: The field or property of the object used to sort the returned
            collection. For better performance, by default no sorting is
            applied. 'Name' is the only supported field by which to sort.
          in: query
          name: sortField
          required: false
          schema:
            type: string
        - description: The order that the returned collection is sorted. The default is
            'Ascending'
          in: query
          name: sortOrder
          required: false
          schema:
            type: string
        - description: Specify that included attributes must be members of this template.
            The default is no template filter.
          in: query
          name: templateName
          required: false
          schema:
            type: string
        - description: An AF time string, which is used as the time context to get stream
            values if it is provided. By default, it is not specified, and the
            default time context of the AF object will be used.
          in: query
          name: time
          required: false
          schema:
            type: string
        - description: The time zone in which the time string will be interpreted. This
            parameter will be ignored if a time zone is specified in the time
            string. If no time zone is specified in either places, the PI Web
            API server time zone will be used.
          in: query
          name: timeZone
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Summary values of the streams that meet the specified conditions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_StreamValue_"
        "409":
          description: Unsupported operation on the given AF object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Returns values of the attributes for an Element, Event Frame or
        Attribute at the specified time.
      tags:
        - StreamSet
    post:
      deprecated: false
      operationId: StreamSet_UpdateValue
      parameters:
        - description: The ID of the parent element, event frame, or attribute. Attributes
            specified in the body must be descendants of the specified object.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The desired AFBufferOption. The default is 'BufferIfPossible'.
          in: query
          name: bufferOption
          required: false
          schema:
            type: string
        - description: The desired AFUpdateOption. The default is 'Replace'.
          in: query
          name: updateOption
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/StreamValueArray"
      responses:
        "200":
          description: All updates executed successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Substatus_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Substatus_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Substatus_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Substatus_"
        "207":
          description: The operation was a partial success. The response body contains
            substatuses and errors in the same order as the supplied values.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_Substatus_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_Substatus_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_Substatus_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_Substatus_"
        "409":
          description: Unsupported operation on the given AF object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Updates a single value for the specified streams.
      tags:
        - StreamSet
  /system:
    get:
      deprecated: false
      operationId: System_Landing
      responses:
        "200":
          description: Links to top level collections and system information.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemLanding"
            text/json:
              schema:
                $ref: "#/components/schemas/SystemLanding"
            text/html:
              schema:
                $ref: "#/components/schemas/SystemLanding"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/SystemLanding"
      summary: Get system links for this PI System Web API instance.
      tags:
        - System
  /system/cacheinstances:
    get:
      deprecated: false
      operationId: System_CacheInstances
      responses:
        "200":
          description: Cache instance information.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_CacheInstance_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_CacheInstance_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_CacheInstance_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_CacheInstance_"
      summary: Get AF cache instances currently in use by the system. These are caches
        from which user requests are serviced. The number of instances depends
        on the number of users connected to the service, the service's
        authentication method, and the cache instance configuration.
      tags:
        - System
  /system/configuration:
    get:
      deprecated: false
      operationId: Configuration_List
      responses:
        "200":
          description: The current system configuration.
          content:
            application/json:
              schema:
                additionalProperties:
                  type: object
                type: object
            text/json:
              schema:
                additionalProperties:
                  type: object
                type: object
            text/html:
              schema:
                additionalProperties:
                  type: object
                type: object
            application/x-ms-application:
              schema:
                additionalProperties:
                  type: object
                type: object
      summary: Get the current system configuration.
      tags:
        - Configuration
  "/system/configuration/{key}":
    delete:
      deprecated: false
      operationId: Configuration_Delete
      parameters:
        - description: The key of the configuration item to remove.
          in: path
          name: key
          required: true
          schema:
            type: string
      responses:
        "202":
          description: The change has been accepted, and will take effect when the service
            can cleanly restart.
        "404":
          description: The configuration item does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "500":
          description: An internal error is preventing deletion of the configuration item.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Delete a configuration item.
      tags:
        - Configuration
    get:
      deprecated: false
      description: The response content may vary based on the configuration item's data
        type.
      operationId: Configuration_Get
      parameters:
        - description: The key of the configuration item.
          in: path
          name: key
          required: true
          schema:
            type: string
      responses:
        "200":
          description: The value of the configuration item.
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/x-ms-application:
              schema:
                type: object
        "404":
          description: The configuration item does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Get the value of a configuration item.
      tags:
        - Configuration
  /system/status:
    get:
      deprecated: false
      operationId: System_Status
      responses:
        "200":
          description: System Status.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemStatus"
            text/json:
              schema:
                $ref: "#/components/schemas/SystemStatus"
            text/html:
              schema:
                $ref: "#/components/schemas/SystemStatus"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/SystemStatus"
      summary: Get information about this PI Web API instance. Examples of information
        returned include the system uptime, the number of cache instances for
        this PI System Web API instance, and the system run state.
      tags:
        - System
  /system/userinfo:
    get:
      deprecated: false
      operationId: System_UserInfo
      responses:
        "200":
          description: Information about the current user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfo"
            text/json:
              schema:
                $ref: "#/components/schemas/UserInfo"
            text/html:
              schema:
                $ref: "#/components/schemas/UserInfo"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/UserInfo"
        "204":
          description: No identity is present.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfo"
            text/json:
              schema:
                $ref: "#/components/schemas/UserInfo"
            text/html:
              schema:
                $ref: "#/components/schemas/UserInfo"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/UserInfo"
      summary: Get information about the Windows identity used to fulfill the request.
        This depends on the service's authentication method and the credentials
        passed by the client. The impersonation level of the Windows identity is
        included.
      tags:
        - System
  /system/versions:
    get:
      deprecated: false
      operationId: System_Versions
      responses:
        "200":
          description: A dictionary of assembly name-version information pairs.
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: "#/components/schemas/Version"
                type: object
            text/json:
              schema:
                additionalProperties:
                  $ref: "#/components/schemas/Version"
                type: object
            text/html:
              schema:
                additionalProperties:
                  $ref: "#/components/schemas/Version"
                type: object
            application/x-ms-application:
              schema:
                additionalProperties:
                  $ref: "#/components/schemas/Version"
                type: object
      summary: Get the current versions of the PI Web API instance and all external
        plugins.
      tags:
        - System
  /tablecategories:
    get:
      deprecated: false
      description: This method returns a Table Category based on the hierarchical path
        associated with it, and should be used when a path has been received
        from a separate part of the PI System for use in the PI Web API. Users
        should primarily search with the WebID when available.
      operationId: TableCategory_GetByPath
      parameters:
        - description: The path to the target table category.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified table category.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TableCategory"
            text/json:
              schema:
                $ref: "#/components/schemas/TableCategory"
            text/html:
              schema:
                $ref: "#/components/schemas/TableCategory"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/TableCategory"
      summary: Retrieve a table category by path.
      tags:
        - TableCategory
  "/tablecategories/{webId}":
    delete:
      deprecated: false
      operationId: TableCategory_Delete
      parameters:
        - description: The ID of the table category to delete.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The table category was deleted.
      summary: Delete a table category.
      tags:
        - TableCategory
    get:
      deprecated: false
      operationId: TableCategory_Get
      parameters:
        - description: The id of the table category.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified table category.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TableCategory"
            text/json:
              schema:
                $ref: "#/components/schemas/TableCategory"
            text/html:
              schema:
                $ref: "#/components/schemas/TableCategory"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/TableCategory"
      summary: Retrieve a table category.
      tags:
        - TableCategory
    patch:
      deprecated: false
      operationId: TableCategory_Update
      parameters:
        - description: The ID of the table category to update.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TableCategory"
          text/json:
            schema:
              $ref: "#/components/schemas/TableCategory"
        description: A partial table category containing the desired changes.
        required: true
      responses:
        "204":
          description: The table category was updated.
      summary: Update a table category by replacing items in its definition.
      tags:
        - TableCategory
  "/tablecategories/{webId}/security":
    get:
      deprecated: false
      operationId: TableCategory_GetSecurity
      parameters:
        - description: The ID of the table category for the security to be checked.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The user identity for the security information to be checked.
            Multiple security identities may be specified with multiple
            instances of the parameter. If the parameter is not specified, only
            the current user's security rights will be returned.
          in: query
          name: userIdentity
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Indicates if the security cache should be refreshed before getting
            security information. The default is 'false'.
          in: query
          name: forceRefresh
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Security rights.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
        "400":
          description: An invalid or local account is specified as the user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "401":
          description: Access denied for the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: Unsupported when using Anonymous authentication method.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "502":
          description: Failed to retrieve the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Get the security information of the specified security item associated
        with the table category for a specified user.
      tags:
        - TableCategory
  "/tablecategories/{webId}/securityentries":
    get:
      deprecated: false
      operationId: TableCategory_GetSecurityEntries
      parameters:
        - description: The ID of the table category.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The name query string used for filtering security entries. The
            default is no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of security entries matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
      summary: Retrieve the security entries associated with the table category based
        on the specified criteria. By default, all security entries for this
        table category are returned.
      tags:
        - TableCategory
    post:
      deprecated: false
      operationId: TableCategory_CreateSecurityEntry
      parameters:
        - description: The ID of the table category where the security entry will be
            created.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry"
      responses:
        "201":
          description: The security entry was created. The response's Location header is a
            link to the security entry.
      summary: Create a security entry owned by the table category.
      tags:
        - TableCategory
  "/tablecategories/{webId}/securityentries/{name}":
    delete:
      deprecated: false
      operationId: TableCategory_DeleteSecurityEntry
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the table category where the security entry will be
            deleted.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      responses:
        "204":
          description: The security entry was deleted.
      summary: Delete a security entry owned by the table category.
      tags:
        - TableCategory
    get:
      deprecated: false
      operationId: TableCategory_GetSecurityEntryByName
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the table category.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The security entry matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/html:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
        "404":
          description: The security entry with the specified name is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Retrieve the security entry associated with the table category with the
        specified name.
      tags:
        - TableCategory
    put:
      deprecated: false
      operationId: TableCategory_UpdateSecurityEntry
      parameters:
        - description: The name of the security entry.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the table category where the security entry will be
            updated.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry2"
      responses:
        "204":
          description: The security entry was updated.
      summary: Update a security entry owned by the table category.
      tags:
        - TableCategory
  /tables:
    get:
      deprecated: false
      operationId: Table_GetByPath
      parameters:
        - description: The path to the table.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified table.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Table"
            text/json:
              schema:
                $ref: "#/components/schemas/Table"
            text/html:
              schema:
                $ref: "#/components/schemas/Table"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Table"
      summary: Retrieve a table by path.
      tags:
        - Table
  "/tables/{webId}":
    delete:
      deprecated: false
      operationId: Table_Delete
      parameters:
        - description: The ID of the table to delete.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The table was deleted.
      summary: Delete a table.
      tags:
        - Table
    get:
      deprecated: false
      operationId: Table_Get
      parameters:
        - description: The ID of the table.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified table.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Table"
            text/json:
              schema:
                $ref: "#/components/schemas/Table"
            text/html:
              schema:
                $ref: "#/components/schemas/Table"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Table"
      summary: Retrieve a table.
      tags:
        - Table
    patch:
      deprecated: false
      operationId: Table_Update
      parameters:
        - description: The ID of the table to update.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Table"
          text/json:
            schema:
              $ref: "#/components/schemas/Table"
        description: A partial table containing the desired changes.
        required: true
      responses:
        "204":
          description: The table was updated.
      summary: Update a table by replacing items in its definition.
      tags:
        - Table
  "/tables/{webId}/categories":
    get:
      deprecated: false
      operationId: Table_GetCategories
      parameters:
        - description: The ID of the table.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of categories.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_TableCategory_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_TableCategory_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_TableCategory_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_TableCategory_"
      summary: Get a table's categories.
      tags:
        - Table
  "/tables/{webId}/data":
    get:
      deprecated: false
      operationId: Table_GetData
      parameters:
        - description: The ID of the table.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The data for the specified table.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TableData"
            text/json:
              schema:
                $ref: "#/components/schemas/TableData"
            text/html:
              schema:
                $ref: "#/components/schemas/TableData"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/TableData"
      summary: Get the table's data.
      tags:
        - Table
    put:
      deprecated: false
      operationId: Table_UpdateData
      parameters:
        - description: The ID of the table on which to update the data.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TableData"
          text/json:
            schema:
              $ref: "#/components/schemas/TableData"
        description: The new table data definition.
        required: true
      responses:
        "201":
          description: The table data was updated.
      summary: Update the table's data.
      tags:
        - Table
  "/tables/{webId}/security":
    get:
      deprecated: false
      operationId: Table_GetSecurity
      parameters:
        - description: The ID of the table for the security to be checked.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The user identity for the security information to be checked.
            Multiple security identities may be specified with multiple
            instances of the parameter. If the parameter is not specified, only
            the current user's security rights will be returned.
          in: query
          name: userIdentity
          required: true
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: Indicates if the security cache should be refreshed before getting
            security information. The default is 'false'.
          in: query
          name: forceRefresh
          required: false
          schema:
            type: boolean
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Security rights.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityRights_"
        "400":
          description: An invalid or local account is specified as the user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "401":
          description: Access denied for the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "409":
          description: Unsupported when using Anonymous authentication method.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
        "502":
          description: Failed to retrieve the specified user identity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Get the security information of the specified security item associated
        with the table for a specified user.
      tags:
        - Table
  "/tables/{webId}/securityentries":
    get:
      deprecated: false
      operationId: Table_GetSecurityEntries
      parameters:
        - description: The ID of the table.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: The name query string used for filtering security entries. The
            default is no filter.
          in: query
          name: nameFilter
          required: false
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: A list of security entries matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/json:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            text/html:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items_SecurityEntry_"
      summary: Retrieve the security entries associated with the table based on the
        specified criteria. By default, all security entries for this table are
        returned.
      tags:
        - Table
    post:
      deprecated: false
      operationId: Table_CreateSecurityEntry
      parameters:
        - description: The ID of the table where the security entry will be created.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry"
      responses:
        "201":
          description: The security entry was created. The response's Location header is a
            link to the security entry.
      summary: Create a security entry owned by the table.
      tags:
        - Table
  "/tables/{webId}/securityentries/{name}":
    delete:
      deprecated: false
      operationId: Table_DeleteSecurityEntry
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the table where the security entry will be deleted.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      responses:
        "204":
          description: The security entry was deleted.
      summary: Delete a security entry owned by the table.
      tags:
        - Table
    get:
      deprecated: false
      operationId: Table_GetSecurityEntryByName
      parameters:
        - description: The name of the security entry. For every backslash character (\) in
            the security entry name, replace with asterisk (*). As an example,
            use domain*username instead of domain\username.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the table.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The security entry matching the specified condition.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/json:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            text/html:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/SecurityEntry"
        "404":
          description: The security entry with the specified name is not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/json:
              schema:
                $ref: "#/components/schemas/Errors"
            text/html:
              schema:
                $ref: "#/components/schemas/Errors"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Errors"
      summary: Retrieve the security entry associated with the table with the specified
        name.
      tags:
        - Table
    put:
      deprecated: false
      operationId: Table_UpdateSecurityEntry
      parameters:
        - description: The name of the security entry.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The ID of the table where the security entry will be updated.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: If false, the new access permissions are only applied to the
            associated object. If true, the access permissions of children with
            any parent-child reference types will change when the permissions on
            the primary parent change.
          in: query
          name: applyToChildren
          required: false
          schema:
            type: boolean
      requestBody:
        $ref: "#/components/requestBodies/SecurityEntry2"
      responses:
        "204":
          description: The security entry was updated.
      summary: Update a security entry owned by the table.
      tags:
        - Table
  /timeruleplugins:
    get:
      deprecated: false
      description: This method returns a Time Rule Plug-in based on the hierarchical path
        associated with it, and should be used when a path has been received
        from a separate part of the PI System for use in the PI Web API. Users
        should primarily search with the WebID when available.
      operationId: TimeRulePlugIn_GetByPath
      parameters:
        - description: The path to the Time Rule Plug-in.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified Time Rule Plug-in.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimeRulePlugIn"
            text/json:
              schema:
                $ref: "#/components/schemas/TimeRulePlugIn"
            text/html:
              schema:
                $ref: "#/components/schemas/TimeRulePlugIn"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/TimeRulePlugIn"
      summary: Retrieve a Time Rule Plug-in by path.
      tags:
        - TimeRulePlugIn
  "/timeruleplugins/{webId}":
    get:
      deprecated: false
      operationId: TimeRulePlugIn_Get
      parameters:
        - description: The ID of the Time Rule Plug-in.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified Time Rule Plug-in.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimeRulePlugIn"
            text/json:
              schema:
                $ref: "#/components/schemas/TimeRulePlugIn"
            text/html:
              schema:
                $ref: "#/components/schemas/TimeRulePlugIn"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/TimeRulePlugIn"
      summary: Retrieve a Time Rule Plug-in.
      tags:
        - TimeRulePlugIn
  /timerules:
    get:
      deprecated: false
      description: This method returns a Time Rule based on the hierarchical path
        associated with it, and should be used when a path has been received
        from a separate part of the PI System for use in the PI Web API. Users
        should primarily search with the WebID when available.
      operationId: TimeRule_GetByPath
      parameters:
        - description: The path to the Time Rule.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The requested Time Rule.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimeRule"
            text/json:
              schema:
                $ref: "#/components/schemas/TimeRule"
            text/html:
              schema:
                $ref: "#/components/schemas/TimeRule"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/TimeRule"
      summary: Retrieve a Time Rule by path.
      tags:
        - TimeRule
  "/timerules/{webId}":
    delete:
      deprecated: false
      operationId: TimeRule_Delete
      parameters:
        - description: The ID of the Time Rule.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The Time Rule was deleted.
      summary: Delete a Time Rule.
      tags:
        - TimeRule
    get:
      deprecated: false
      operationId: TimeRule_Get
      parameters:
        - description: The ID of the Time Rule.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The requested Time Rule.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimeRule"
            text/json:
              schema:
                $ref: "#/components/schemas/TimeRule"
            text/html:
              schema:
                $ref: "#/components/schemas/TimeRule"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/TimeRule"
      summary: Retrieve a Time Rule.
      tags:
        - TimeRule
    patch:
      deprecated: false
      operationId: TimeRule_Update
      parameters:
        - description: The ID of the Time Rule.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TimeRule"
          text/json:
            schema:
              $ref: "#/components/schemas/TimeRule"
        description: A partial Time Rule containing the desired changes.
        required: true
      responses:
        "204":
          description: The Time Rule was updated.
      summary: Update a Time Rule by replacing items in its definition.
      tags:
        - TimeRule
  /unitclasses:
    get:
      deprecated: false
      operationId: UnitClass_GetByPath
      parameters:
        - description: The path to the unit class.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified unit class.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnitClass"
            text/json:
              schema:
                $ref: "#/components/schemas/UnitClass"
            text/html:
              schema:
                $ref: "#/components/schemas/UnitClass"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/UnitClass"
      summary: Retrieve a unit class by path.
      tags:
        - UnitClass
  "/unitclasses/{webId}":
    delete:
      deprecated: false
      operationId: UnitClass_Delete
      parameters:
        - description: The ID of the unit class.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The unit class was deleted.
      summary: Delete a unit class.
      tags:
        - UnitClass
    get:
      deprecated: false
      operationId: UnitClass_Get
      parameters:
        - description: The ID of the unit class.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified unit class.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnitClass"
            text/json:
              schema:
                $ref: "#/components/schemas/UnitClass"
            text/html:
              schema:
                $ref: "#/components/schemas/UnitClass"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/UnitClass"
      summary: Retrieve a unit class.
      tags:
        - UnitClass
    patch:
      deprecated: false
      operationId: UnitClass_Update
      parameters:
        - description: The ID of the unit class.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnitClass"
          text/json:
            schema:
              $ref: "#/components/schemas/UnitClass"
        description: A partial unit class containing the desired changes.
        required: true
      responses:
        "204":
          description: The unit class was updated.
      summary: Update a unit class.
      tags:
        - UnitClass
  "/unitclasses/{webId}/canonicalunit":
    get:
      deprecated: false
      operationId: UnitClass_GetCanonicalUnit
      parameters:
        - description: The ID of unit class.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: the canonical unit of the specified unit class.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unit"
            text/json:
              schema:
                $ref: "#/components/schemas/Unit"
            text/html:
              schema:
                $ref: "#/components/schemas/Unit"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Unit"
      summary: Get the canonical unit of a unit class.
      tags:
        - UnitClass
  "/unitclasses/{webId}/units":
    get:
      deprecated: false
      operationId: UnitClass_GetUnits
      parameters:
        - description: The ID of unit class.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The list of units in the unit class.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unit"
            text/json:
              schema:
                $ref: "#/components/schemas/Unit"
            text/html:
              schema:
                $ref: "#/components/schemas/Unit"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Unit"
      summary: Get a list of all units belonging to the unit class.
      tags:
        - UnitClass
    post:
      deprecated: false
      operationId: UnitClass_CreateUnit
      parameters:
        - description: The ID of the server.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Unit"
          text/json:
            schema:
              $ref: "#/components/schemas/Unit"
        description: The new unit definition.
        required: true
      responses:
        "201":
          description: The unit was created. The response's Location header is a link to
            the unit.
      summary: Create a unit in the specified Unit Class.
      tags:
        - UnitClass
  /units:
    get:
      deprecated: false
      operationId: Unit_GetByPath
      parameters:
        - description: The path to the unit.
          in: query
          name: path
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified unit.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unit"
            text/json:
              schema:
                $ref: "#/components/schemas/Unit"
            text/html:
              schema:
                $ref: "#/components/schemas/Unit"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Unit"
      summary: Retrieve a unit by path.
      tags:
        - Unit
  "/units/{webId}":
    delete:
      deprecated: false
      operationId: Unit_Delete
      parameters:
        - description: The ID of the unit.
          in: path
          name: webId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: The unit was deleted.
      summary: Delete a unit.
      tags:
        - Unit
    get:
      deprecated: false
      operationId: Unit_Get
      parameters:
        - description: The ID of the unit.
          in: path
          name: webId
          required: true
          schema:
            type: string
        - description: List of fields to be returned in the response, separated by
            semicolons (;). If this parameter is not specified, all available
            fields will be returned.
          in: query
          name: selectedFields
          required: false
          schema:
            type: string
        - description: Optional parameter. Used to specify the type of WebID. Useful for
            URL brevity and other special cases. Default is the value of the
            configuration item "WebIDType".
          in: query
          name: webIdType
          required: false
          schema:
            type: string
      responses:
        "200":
          description: The specified unit.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Unit"
            text/json:
              schema:
                $ref: "#/components/schemas/Unit"
            text/html:
              schema:
                $ref: "#/components/schemas/Unit"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Unit"
      summary: Retrieve a unit.
      tags:
        - Unit
    patch:
      deprecated: false
      operationId: Unit_Update
      parameters:
        - description: The ID of the unit.
          in: path
          name: webId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Unit"
          text/json:
            schema:
              $ref: "#/components/schemas/Unit"
        description: A partial unit containing the desired changes.
        required: true
      responses:
        "204":
          description: The unit was updated.
      summary: Update a unit.
      tags:
        - Unit
servers:
  - url: https://devdata.osisoft.com/piwebapi
components:
  requestBodies:
    NotificationRuleSubscriber:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotificationRuleSubscriber"
        text/json:
          schema:
            $ref: "#/components/schemas/NotificationRuleSubscriber"
      description: The new notification rule subscriber definition.
      required: true
    SecurityEntry:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SecurityEntry"
        text/json:
          schema:
            $ref: "#/components/schemas/SecurityEntry"
      description: The new security entry definition. The full list of allow and deny
        rights must be supplied.
      required: true
    SecurityEntry2:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SecurityEntry"
        text/json:
          schema:
            $ref: "#/components/schemas/SecurityEntry"
      description: The new security entry definition. The full list of allow and deny
        rights must be supplied or they will be removed.
      required: true
    Element:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Element"
        text/json:
          schema:
            $ref: "#/components/schemas/Element"
      description: The new element definition.
      required: true
    StreamValueArray:
      content:
        application/json:
          schema:
            items:
              $ref: "#/components/schemas/StreamValue"
            type: array
        text/json:
          schema:
            items:
              $ref: "#/components/schemas/StreamValue"
            type: array
      description: The values to add or update.
      required: true
    EnumerationSet:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EnumerationSet"
        text/json:
          schema:
            $ref: "#/components/schemas/EnumerationSet"
      description: The new enumeration set definition.
      required: true
    EventFrame:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EventFrame"
        text/json:
          schema:
            $ref: "#/components/schemas/EventFrame"
      description: The new event frame definition.
      required: true
    Attribute:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Attribute"
        text/json:
          schema:
            $ref: "#/components/schemas/Attribute"
      description: The definition of the new attribute.
      required: true
    AttributeTemplate:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AttributeTemplate"
        text/json:
          schema:
            $ref: "#/components/schemas/AttributeTemplate"
      description: The attribute template definition.
      required: true
    SearchByAttribute:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SearchByAttribute"
        text/json:
          schema:
            $ref: "#/components/schemas/SearchByAttribute"
      description: The query of search by attribute.
      required: true
    StreamValuesArray:
      content:
        application/json:
          schema:
            items:
              $ref: "#/components/schemas/StreamValues"
            type: array
        text/json:
          schema:
            items:
              $ref: "#/components/schemas/StreamValues"
            type: array
      description: The values to add or update.
      required: true
  schemas:
    Ambiguous:
      properties:
        Reason:
          example: The requested resource has multiple representations.
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    Analysis:
      properties:
        AnalysisRulePlugInName:
          example: PerformanceEquation
          type: string
        AutoCreated:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        CategoryNames:
          example:
            - MyAnalysisCategory
          items:
            type: string
          type: array
        Description:
          example: ""
          type: string
        GroupId:
          example: 0
          format: int32
          type: integer
        HasNotification:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        HasTarget:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        HasTemplate:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Id:
          example: 11853358-94bf-11e7-8443-00155d84c200
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        IsConfigured:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        IsTimeRuleDefinedByTemplate:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/AnalysisLinks"
        MaximumQueueSize:
          example: 0
          format: int32
          type: integer
        Name:
          example: MyAnalysis
          type: string
          x-required-post: true
        OutputTime:
          example: ""
          type: string
        Path:
          example: \\MyAssetServer\MyDatabase\MyElement\Analyses[MyAnalysis]
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Priority:
          example: High
          type: string
        PublishResults:
          example: false
          type: boolean
        Status:
          example: Disabled
          type: string
        TargetWebId:
          example: I1ETDqD5loBNH0erqeqJodtALAjFPVfUpY-02A8uioGDSgIg
          format: webid
          type: string
          x-disallow-post: true
        TemplateName:
          example: ""
          type: string
        TimeRulePlugInName:
          example: Periodic
          type: string
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1XsDqD5loBNH0erqeqJodtALAWDOFEb-U5xGEQwAVXYTCAA
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    AnalysisCategory:
      properties:
        Description:
          example: Relative energy use per ton of process feed.
          type: string
        Id:
          example: f9364aa2-0e4a-4854-9b85-35900a4d4c0f
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/AnalysisCategoryLinks"
        Name:
          example: CategoryName
          type: string
          x-required-post: true
        Path:
          example: \\MyAssetServer\Database\CategoriesAnalysis[CategoryName]
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1XCDqD5loBNH0erqeqJodtALAoko2-UoOVEibhTWQCk1MDw
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    AnalysisCategoryLinks:
      properties:
        Database:
          type: string
          x-link-optional: false
          x-link-path: assetdatabases/{webId}
        Security:
          type: string
          x-link-optional: false
          x-link-path: analysiscategories/{webId}/security
        SecurityEntries:
          type: string
          x-link-optional: false
          x-link-path: analysiscategories/{webId}/securityentries
        Self:
          type: string
          x-link-optional: false
          x-link-path: analysiscategories/{webId}
      type: object
    AnalysisLinks:
      properties:
        AnalysisRule:
          type: string
          x-link-optional: true
          x-link-path: analysisrules/{webId}
        AnalysisRulePlugIn:
          type: string
          x-link-optional: true
          x-link-path: analysisruleplugins/{webId}
        Categories:
          type: string
          x-link-optional: false
          x-link-path: analyses/{webId}/categories
        Database:
          type: string
          x-link-optional: true
          x-link-path: assetdatabases/{webId}
        Security:
          type: string
          x-link-optional: false
          x-link-path: analyses/{webId}/security
        SecurityEntries:
          type: string
          x-link-optional: false
          x-link-path: analyses/{webId}/securityentries
        Self:
          type: string
          x-link-optional: false
          x-link-path: analyses/{webId}
        Target:
          type: string
          x-link-optional: true
          x-link-path: elements/{webId}
        Template:
          type: string
          x-link-optional: true
          x-link-path: analysistemplates/{webId}
        TimeRule:
          type: string
          x-link-optional: true
          x-link-path: timerules/{webId}
        TimeRulePlugIn:
          type: string
          x-link-optional: true
          x-link-path: timeruleplugins/{webId}
      type: object
    AnalysisRule:
      properties:
        ConfigString:
          example: a := TagVal('sinusoid'); b := Pow(a, 2); c := a + b;
          type: string
        Description:
          example: Runs a performance equation.
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        DisplayString:
          example: a := TagVal('sinusoid'); b := Pow(a, 2); c := a + b;
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        EditorType:
          example: OSIsoft.AF.Analysis.AnalysisRule.PEAnalysisRuleEditor
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        HasChildren:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Id:
          example: ca9d257f-94c2-11e7-8443-00155d84c200
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        IsConfigured:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        IsInitializing:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/AnalysisRuleLinks"
        Name:
          example: PerformanceEquation
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Path:
          example: \\MyAssetServer\MyDatabase\MyElement\Analyses[MyAnalysis]\AnalysisRule
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        PlugInName:
          example: PerformanceEquation
          type: string
          x-disallow-patch: true
          x-required-post: true
        SupportedBehaviors:
          example:
            - SupportsRunningCase
            - SupportStatePassing
            - OutputCorrectAfterSkipping
          items:
            type: string
          type: array
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        VariableMapping:
          example: b||Attribute1;c||Attribute2
          type: string
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1XRXDqD5loBNH0erqeqJodtALAfyWdysKU5xGEQwAVXYTCAAfyWdysKU5xGEQwAVXYTCAA
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    AnalysisRuleLinks:
      properties:
        Analysis:
          type: string
          x-link-optional: true
          x-link-path: analyses/{webId}
        AnalysisRules:
          type: string
          x-link-optional: false
          x-link-path: analysisrules/{webId}/analysisrules
        AnalysisTemplate:
          type: string
          x-link-optional: true
          x-link-path: analysistemplates/{webId}
        Parent:
          type: string
          x-link-optional: true
          x-link-path: analysisrules/{webId}
        PlugIn:
          type: string
          x-link-optional: true
          x-link-path: analysisruleplugins/{webId}
        Self:
          type: string
          x-link-optional: false
          x-link-path: analysisrules/{webId}
      type: object
    AnalysisRulePlugIn:
      properties:
        AssemblyFileName:
          example: OSIsoft.AF.Analysis.AnalysisRule.Imbalance.dll
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        AssemblyID:
          example: 1acd00c2-79d0-4818-a03c-0616c4513750
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        AssemblyLoadProperties:
          example:
            - None
          items:
            type: string
          type: array
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        AssemblyTime:
          example: 2016-05-25T14:01:07Z
          format: date-time
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        CompatibilityVersion:
          example: 2
          format: int32
          type: integer
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Description:
          example: Calculates simple material imbalances on nodes of a model.
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Id:
          example: 9a2a6c05-6f61-467a-854a-16dbfb9d8c03
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        IsBrowsable:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        IsNonEditableConfig:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/AnalysisRulePlugInLinks"
        LoadedAssemblyTime:
          example: 1970-01-01T00:00:00Z
          format: date-time
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        LoadedVersion:
          example: ""
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Name:
          example: Imbalance
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Path:
          example: \\MyAssetServer\PlugInsAnalysisRule[Imbalance]
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Version:
          example: 2.8.5.7552
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1XPDqD5loBNH0erqeqJodtALABWwqmmFvekaFShbb-52MAw
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    AnalysisRulePlugInLinks:
      properties:
        AssetServer:
          type: string
          x-link-optional: false
          x-link-path: assetservers/{webId}
        Self:
          type: string
          x-link-optional: false
          x-link-path: analysisruleplugins/{webId}
      type: object
    AnalysisTemplate:
      properties:
        AnalysisRulePlugInName:
          example: PerformanceEquation
          type: string
        CategoryNames:
          example:
            - MyAnalysisCategory
          items:
            type: string
          type: array
        CreateEnabled:
          example: true
          type: boolean
        Description:
          example: ""
          type: string
        GroupId:
          example: 0
          format: int32
          type: integer
        HasNotificationTemplate:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        HasTarget:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Id:
          example: 612d9811-3f06-4e27-989c-42e5e5c00b88
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/AnalysisTemplateLinks"
        Name:
          example: MyAnalysisTemplate
          type: string
          x-required-post: true
        OutputTime:
          example: ""
          type: string
        Path:
          example: \\MyAssetServer\MyDatabase\AnalysisTemplates[MyAnalysisTemplate]
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        TargetName:
          example: MyElementTemplate
          type: string
        TimeRulePlugInName:
          example: Periodic
          type: string
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1XTG_auSSsvuECG8ad_p8b25QEZgtYQY_J06YnELl5cALiA
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    AnalysisTemplateLinks:
      properties:
        AnalysisRule:
          type: string
          x-link-optional: true
          x-link-path: analysisrules/{webId}
        AnalysisRulePlugIn:
          type: string
          x-link-optional: true
          x-link-path: analysisruleplugins/{webId}
        Categories:
          type: string
          x-link-optional: false
          x-link-path: analysistemplates/{webId}/categories
        Database:
          type: string
          x-link-optional: false
          x-link-path: assetdatabases/{webId}
        Security:
          type: string
          x-link-optional: false
          x-link-path: analysistemplates/{webId}/security
        SecurityEntries:
          type: string
          x-link-optional: false
          x-link-path: analysistemplates/{webId}/securityentries
        Self:
          type: string
          x-link-optional: false
          x-link-path: analysistemplates/{webId}
        Target:
          type: string
          x-link-optional: true
          x-link-path: elementtemplates/{webId}
        TimeRule:
          type: string
          x-link-optional: true
          x-link-path: timerules/{webId}
        TimeRulePlugIn:
          type: string
          x-link-optional: true
          x-link-path: timeruleplugins/{webId}
      type: object
    Annotation:
      properties:
        CreationDate:
          example: 2016-06-21T14:45:50.2988321Z
          format: date-time
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Creator:
          example: MyDomain\UserA
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Description:
          example: Signifies a spike in temperature.
          type: string
        Errors:
          items:
            $ref: "#/components/schemas/PropertyError"
          type: array
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Id:
          example: 512B6616-CE39-4F70-9048-8C6A025FB592
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/AnnotationLinks"
        Modifier:
          example: MyDomain\UserA
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        ModifyDate:
          example: 2016-06-21T14:45:50.2988321Z
          format: date-time
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Name:
          example: Temperature Annotation
          type: string
          x-required-post: true
        Value:
          example: The temperature spiked because of a malfunction with a unit in our
            west plant.
          type: object
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    AnnotationLinks:
      properties:
        MediaData:
          type: string
          x-link-optional: true
          x-link-path: eventframes/{webId}/annotations/{id}/attachment/media/mediadata
        MediaMetadata:
          type: string
          x-link-optional: true
          x-link-path: eventframes/{webId}/annotations/{id}/attachment/media/metadata
        Owner:
          type: string
          x-link-optional: false
        Self:
          type: string
          x-link-optional: false
      type: object
    AssetDatabase:
      properties:
        Description:
          example: PI BI Project Asset Model
          type: string
        ExtendedProperties:
          additionalProperties:
            $ref: "#/components/schemas/Value"
          type: object
        Id:
          example: a3a5ebaa-37ae-42dc-9d1e-b6bb7ec98bd2
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/AssetDatabaseLinks"
        Name:
          example: MyDatabase
          type: string
          x-required-post: true
        Path:
          example: \\MyAssetServer\MyDatabase
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1RDDqD5loBNH0erqeqJodtALAquulo6433EKdHra7fsmL0g
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    AssetDatabaseLinks:
      properties:
        AnalysisCategories:
          type: string
          x-link-optional: false
          x-link-path: assetdatabases/{webId}/analysiscategories
        AnalysisTemplates:
          type: string
          x-link-optional: false
          x-link-path: assetdatabases/{webId}/analysistemplates
        AssetServer:
          type: string
          x-link-optional: false
          x-link-path: assetservers/{webId}
        AttributeCategories:
          type: string
          x-link-optional: false
          x-link-path: assetdatabases/{webId}/attributecategories
        ElementCategories:
          type: string
          x-link-optional: false
          x-link-path: assetdatabases/{webId}/elementcategories
        ElementTemplates:
          type: string
          x-link-optional: false
          x-link-path: assetdatabases/{webId}/elementtemplates
        Elements:
          type: string
          x-link-optional: false
          x-link-path: assetdatabases/{webId}/elements
        EnumerationSets:
          type: string
          x-link-optional: false
          x-link-path: assetdatabases/{webId}/enumerationsets
        EventFrames:
          type: string
          x-link-optional: false
          x-link-path: assetdatabases/{webId}/eventframes
        Security:
          type: string
          x-link-optional: false
          x-link-path: assetdatabases/{webId}/security
        SecurityEntries:
          type: string
          x-link-optional: false
          x-link-path: assetdatabases/{webId}/securityentries
        Self:
          type: string
          x-link-optional: false
          x-link-path: assetdatabases/{webId}
        TableCategories:
          type: string
          x-link-optional: false
          x-link-path: assetdatabases/{webId}/tablecategories
        Tables:
          type: string
          x-link-optional: false
          x-link-path: assetdatabases/{webId}/tables
      type: object
    AssetServer:
      properties:
        Description:
          example: Sample Description
          type: string
        ExtendedProperties:
          additionalProperties:
            $ref: "#/components/schemas/Value"
          type: object
        Id:
          example: 96f9a00e-4d80-471f-aba9-ea89a1db402c
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        IsConnected:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/AssetServerLinks"
        Name:
          example: MyAssetServer
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Path:
          example: \\MyAssetServer
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        ServerTime:
          example: 2014-07-22T14:00:00Z
          format: date-time
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        ServerVersion:
          example: 2.5.0.5039
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1RSDqD5loBNH0erqeqJodtALA
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    AssetServerLinks:
      properties:
        AnalysisRulePlugIns:
          type: string
          x-link-optional: false
          x-link-path: assetservers/{webId}/analysisruleplugins
        Databases:
          type: string
          x-link-optional: false
          x-link-path: assetservers/{webId}/assetdatabases
        NotificationContactTemplates:
          type: string
          x-link-optional: false
          x-link-path: assetservers/{webId}/notificationcontacttemplates
        NotificationPlugIns:
          type: string
          x-link-optional: false
          x-link-path: assetservers/{webId}/notificationplugins
        Security:
          type: string
          x-link-optional: false
          x-link-path: assetservers/{webId}/security
        SecurityEntries:
          type: string
          x-link-optional: false
          x-link-path: assetservers/{webId}/securityentries
        SecurityIdentities:
          type: string
          x-link-optional: false
          x-link-path: assetservers/{webId}/securityidentities
        SecurityMappings:
          type: string
          x-link-optional: false
          x-link-path: assetservers/{webId}/securitymappings
        Self:
          type: string
          x-link-optional: false
          x-link-path: assetservers/{webId}
        TimeRulePlugIns:
          type: string
          x-link-optional: false
          x-link-path: assetservers/{webId}/timeruleplugins
        UnitClasses:
          type: string
          x-link-optional: false
          x-link-path: assetservers/{webId}/unitclasses
      type: object
    Attribute:
      properties:
        CategoryNames:
          example:
            - Energy Savings Targets
          items:
            type: string
          type: array
        ConfigString:
          example: SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID] =
            '%Element%'
          type: string
        DataReference:
          $ref: "#/components/schemas/DataReference"
        DataReferencePlugIn:
          example: Table Lookup
          type: string
        DefaultUnitsName:
          example: liter
          type: string
        DefaultUnitsNameAbbreviation:
          example: L
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Description:
          example: 2008 Water Use
          type: string
        DisplayDigits:
          example: -5
          type: integer
        HasChildren:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Id:
          example: 75de231b-b591-49b1-b138-e725a77165c2
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        IsConfigurationItem:
          example: false
          type: boolean
        IsExcluded:
          example: false
          type: boolean
          x-disallow-post: true
        IsHidden:
          example: false
          type: boolean
        IsManualDataEntry:
          example: false
          type: boolean
        Links:
          $ref: "#/components/schemas/AttributeLinks"
        Name:
          example: Water
          type: string
          x-required-post: true
        Path:
          example: \\MyAssetServer\MyDatabase\CityName\EngineeringProcess\Equipment\MachineName|Water(2008)
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Paths:
          example:
            - \\MyAssetServer\MyDatabase\MyElement|MyAttribute
            - \\MyAssetServer\MyDatabase\ReferencingElement\MyElement|MyAttribute
          items:
            type: string
          type: array
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Span:
          example: 100
          type: number
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Step:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        TraitName:
          example: LimitLoLo
          type: string
        Type:
          example: Int32
          type: string
        TypeQualifier:
          example: ""
          type: string
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Zero:
          example: 0
          type: number
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    AttributeCategory:
      properties:
        Description:
          example: Relative energy use per ton of process feed.
          type: string
        Id:
          example: 0520f4a1-4454-4fdc-b476-4d371ea6b59e
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/AttributeCategoryLinks"
        Name:
          example: CategoryName
          type: string
          x-required-post: true
        Path:
          example: \\MyAssetServer\Database\CategoriesAttribute[CategoryName]
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1ACDqD5loBNH0erqeqJodtALAofQgBVRE3E-0dk03Hqa1ng
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    AttributeCategoryLinks:
      properties:
        Database:
          type: string
          x-link-optional: false
          x-link-path: assetdatabases/{webId}
        Security:
          type: string
          x-link-optional: false
          x-link-path: attributecategories/{webId}/security
        SecurityEntries:
          type: string
          x-link-optional: false
          x-link-path: attributecategories/{webId}/securityentries
        Self:
          type: string
          x-link-optional: false
          x-link-path: attributecategories/{webId}
      type: object
    AttributeLinks:
      properties:
        Attributes:
          type: string
          x-link-optional: false
          x-link-path: attributes/{webId}/attributes
        Categories:
          type: string
          x-link-optional: false
          x-link-path: attributes/{webId}/categories
        Element:
          type: string
          x-link-optional: true
          x-link-path: elements/{webId}
        EndValue:
          type: string
          x-link-optional: false
          x-link-path: streams/{webId}/end
        EnumerationSet:
          type: string
          x-link-optional: true
          x-link-path: enumerationsets/{webId}
        EnumerationValues:
          type: string
          x-link-optional: true
          x-link-path: enumerationsets/{webId}/enumerationvalues
        EventFrame:
          type: string
          x-link-optional: true
          x-link-path: eventframes/{webId}
        InterpolatedData:
          type: string
          x-link-optional: false
          x-link-path: streams/{webId}/interpolated
        Parent:
          type: string
          x-link-optional: true
          x-link-path: attributes/{webId}
        PlotData:
          type: string
          x-link-optional: false
          x-link-path: streams/{webId}/plot
        Point:
          type: string
          x-link-optional: true
          x-link-path: points/{webId}
        RecordedData:
          type: string
          x-link-optional: false
          x-link-path: streams/{webId}/recorded
        Self:
          type: string
          x-link-optional: false
          x-link-path: attributes/{webId}
        SummaryData:
          type: string
          x-link-optional: false
          x-link-path: streams/{webId}/summary
        Template:
          type: string
          x-link-optional: true
          x-link-path: attributetemplates/{webId}
        Trait:
          type: string
          x-link-optional: true
          x-link-path: attributetraits/{name}
        Value:
          type: string
          x-link-optional: false
      type: object
    AttributeTemplate:
      properties:
        CategoryNames:
          example:
            - Energy Savings Targets
          items:
            type: string
          type: array
        ConfigString:
          example: SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID] =
            '%Element%'
          type: string
        DataReferencePlugIn:
          example: Table Lookup
          type: string
        DefaultUnitsName:
          example: liter
          type: string
        DefaultUnitsNameAbbreviation:
          example: L
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        DefaultValue:
          example: 0
          type: object
        Description:
          example: 2008 Water Use
          type: string
        HasChildren:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Id:
          example: 23d027b5-5dd5-41c5-80f1-f8b5c9ff4356
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        IsConfigurationItem:
          example: false
          type: boolean
        IsExcluded:
          example: false
          type: boolean
        IsHidden:
          example: false
          type: boolean
        IsManualDataEntry:
          example: false
          type: boolean
        Links:
          $ref: "#/components/schemas/AttributeTemplateLinks"
        Name:
          example: Water(2008)
          type: string
          x-required-post: true
        Path:
          example: \\MyAssetServer\MyDatabase\ElementTemplates[MachineName]|Water(2008)
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        TraitName:
          example: LimitLoLo
          type: string
        Type:
          example: Int32
          type: string
        TypeQualifier:
          example: ""
          type: string
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1ATEG_auSSsvuECG8ad_p8b25QQkxqWDwIWU6zC4vmgpd4kgtSfQI9VdxUGA8fi1yf9DVg
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    AttributeTemplateLinks:
      properties:
        AttributeTemplates:
          type: string
          x-link-optional: false
          x-link-path: attributetemplates/{webId}/attributetemplates
        Categories:
          type: string
          x-link-optional: false
          x-link-path: attributetemplates/{webId}/categories
        ElementTemplate:
          type: string
          x-link-optional: false
          x-link-path: elementtemplates/{webId}
        Parent:
          type: string
          x-link-optional: true
          x-link-path: attributetemplates/{webId}
        Self:
          type: string
          x-link-optional: false
          x-link-path: attributetemplates/{webId}
        Trait:
          type: string
          x-link-optional: true
          x-link-path: attributetraits/{name}
      type: object
    AttributeTrait:
      properties:
        Abbreviation:
          example: LoLo
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        AllowChildAttributes:
          example: "false"
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        AllowDuplicates:
          example: "false"
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        IsAllowedOnRootAttribute:
          example: "false"
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        IsTypeInherited:
          example: "true"
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        IsUOMInherited:
          example: "true"
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/AttributeTraitLinks"
        Name:
          example: LimitLoLo
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        RequireNumeric:
          example: "true"
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        RequireString:
          example: "false"
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    AttributeTraitLinks:
      properties:
        Self:
          type: string
          x-link-optional: false
          x-link-path: attributetraits/{name}
      type: object
    CacheInstance:
      properties:
        Id:
          example: 8a5033c9-b77f-431c-9820-c9f538d80dc6
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        LastRefreshTime:
          example: 2014-07-20T14:08:00Z
          format: date-time
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        ScheduledExpirationTime:
          example: 2014-07-20T23:08:00Z
          format: date-time
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        User:
          example: MyDomain\Username
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
        WillRefreshAfter:
          example: 2014-07-20T18:08:00Z
          format: date-time
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    ChannelInstance:
      properties:
        Id:
          type: string
        LastMessageSentTime:
          type: string
        SentMessageCount:
          type: integer
        StartTime:
          type: string
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    DataPipeEvent:
      properties:
        Action:
          example: Add
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Annotated:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Errors:
          items:
            $ref: "#/components/schemas/PropertyError"
          type: array
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Good:
          example: true
          type: boolean
        PreviousEventAction:
          example: PreviousEventArchived
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Questionable:
          example: false
          type: boolean
        Substituted:
          example: false
          type: boolean
          x-disallow-post: true
        Timestamp:
          example: 2014-07-22T14:00:00Z
          format: date-time
          type: string
        UnitsAbbreviation:
          example: m
          type: string
        Value:
          example: 12.3
          type: object
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    DataReference:
      properties:
        PIPoint:
          $ref: "#/components/schemas/PIPointDataReference"
        Type:
          example: PI Point
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    DataServer:
      properties:
        Id:
          example: 85bb49d6-f101-4807-baf9-57c2fbd33000
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        IsConnected:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/DataServerLinks"
        Name:
          example: MyPIServer
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Path:
          example: \\PIServer[MyPIServer]
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        ServerTime:
          example: 2014-07-22T14:00:00Z
          format: date-time
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        ServerVersion:
          example: 3.4.390.18
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1DS1km7hQHxB0i6-VfC-9MwAA
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    DataServerLicense:
      properties:
        AmountLeft:
          example: "85675"
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        AmountUsed:
          example: "1325"
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/DataServerLicenseLinks"
        Name:
          example: Component.Module
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        TotalAmount:
          example: "10000"
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    DataServerLicenseLinks:
      properties:
        Parent:
          type: string
          x-link-optional: false
          x-link-path: dataservers/{webId}
        Self:
          type: string
          x-link-optional: false
          x-link-path: dataservers/{webId}/license
      type: object
    DataServerLinks:
      properties:
        EnumerationSets:
          type: string
          x-link-optional: false
          x-link-path: dataservers/{webId}/enumerationsets
        Points:
          type: string
          x-link-optional: false
          x-link-path: dataservers/{webId}/points
        Self:
          type: string
          x-link-optional: false
          x-link-path: dataservers/{webId}
      type: object
    DeliveryChannelPlugInLinks:
      properties:
        AssetServer:
          type: string
          x-link-optional: false
          x-link-path: assetservers/{webId}
        Self:
          type: string
          x-link-optional: false
          x-link-path: notificationplugins/{webId}
      type: object
    Element:
      properties:
        CategoryNames:
          example:
            - Equipment Assets
          items:
            type: string
          type: array
        Description:
          example: Manufacturing Equipment MachineName
          type: string
        Errors:
          items:
            $ref: "#/components/schemas/PropertyError"
          type: array
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        ExtendedProperties:
          additionalProperties:
            $ref: "#/components/schemas/Value"
          type: object
        HasChildren:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Id:
          example: cbb28260-853d-11e4-80c5-00155d844304
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/ElementLinks"
        Name:
          example: MachineName
          type: string
          x-required-post: true
        Path:
          example: \\MyAssetServer\MyDatabase\CityName\EngineeringProcess\Equipment\MachineName
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Paths:
          items:
            type: string
          type: array
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        TemplateName:
          example: MachineName
          type: string
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    ElementCategory:
      properties:
        Description:
          example: Relative energy use per ton of process feed.
          type: string
        Id:
          example: 3051f943-7e4d-4241-ab9c-450a84c80450
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/ElementCategoryLinks"
        Name:
          example: CategoryName
          type: string
          x-required-post: true
        Path:
          example: \\MyAssetServer\Database\CategoriesElement[CategoryName]
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1ECDqD5loBNH0erqeqJodtALAQ_lRME1-QUKrnEUKhMgEUA
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    ElementCategoryLinks:
      properties:
        Database:
          type: string
          x-link-optional: false
          x-link-path: assetdatabases/{webId}
        Security:
          type: string
          x-link-optional: false
          x-link-path: elementcategories/{webId}/security
        SecurityEntries:
          type: string
          x-link-optional: false
          x-link-path: elementcategories/{webId}/securityentries
        Self:
          type: string
          x-link-optional: false
          x-link-path: elementcategories/{webId}
      type: object
    ElementLinks:
      properties:
        Analyses:
          type: string
          x-link-optional: false
          x-link-path: elements/{webId}/analyses
        Attributes:
          type: string
          x-link-optional: false
          x-link-path: elements/{webId}/attributes
        Categories:
          type: string
          x-link-optional: false
          x-link-path: elements/{webId}/categories
        Database:
          type: string
          x-link-optional: false
          x-link-path: assetdatabases/{webId}
        DefaultAttribute:
          type: string
          x-link-optional: true
          x-link-path: attributes/{webId}
        Elements:
          type: string
          x-link-optional: false
          x-link-path: elements/{webId}/elements
        EndValue:
          type: string
          x-link-optional: false
          x-link-path: streamsets/{webId}/end
        EventFrames:
          type: string
          x-link-optional: false
          x-link-path: elements/{webId}/eventframes
        InterpolatedData:
          type: string
          x-link-optional: false
          x-link-path: streamsets/{webId}/interpolated
        NotificationRules:
          type: string
          x-link-optional: false
          x-link-path: elements/{webId}/notificationrules
        Parent:
          type: string
          x-link-optional: true
          x-link-path: elements/{webId}
        PlotData:
          type: string
          x-link-optional: false
          x-link-path: streamsets/{webId}/plot
        RecordedData:
          type: string
          x-link-optional: false
          x-link-path: streamsets/{webId}/recorded
        Security:
          type: string
          x-link-optional: false
          x-link-path: elements/{webId}/security
        SecurityEntries:
          type: string
          x-link-optional: false
          x-link-path: elements/{webId}/securityentries
        Self:
          type: string
          x-link-optional: false
          x-link-path: elements/{webId}
        SummaryData:
          type: string
          x-link-optional: false
          x-link-path: streamsets/{webId}/summary
        Template:
          type: string
          x-link-optional: true
          x-link-path: elementtemplates/{webId}
        Value:
          type: string
          x-link-optional: false
          x-link-path: streamsets/{webId}/value
      type: object
    ElementTemplate:
      properties:
        AllowElementToExtend:
          example: false
          type: boolean
        BaseTemplate:
          example: Equipment
          type: string
        CanBeAcknowledged:
          example: false
          type: boolean
        CategoryNames:
          example:
            - Equipment Assets
          items:
            type: string
          type: array
        Description:
          example: Manufacturing Machine MachineName
          type: string
        ExtendedProperties:
          additionalProperties:
            $ref: "#/components/schemas/Value"
          type: object
        Id:
          example: a7989492-b2ab-4d90-8abb-4c8284353dd6
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        InstanceType:
          example: Element
          type: string
        Links:
          $ref: "#/components/schemas/ElementTemplateLinks"
        Name:
          example: MachineName
          type: string
          x-required-post: true
        NamingPattern:
          example: "%TEMPLATE%"
          type: string
        Path:
          example: \\MyAssetServer\MyDatabase\ElementTemplates[Boiler]
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Severity:
          example: None
          type: string
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1ETDqD5loBNH0erqeqJodtALAkpSYp6uykE2Ku0yChDU91g
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    ElementTemplateLinks:
      properties:
        AnalysisTemplates:
          type: string
          x-link-optional: false
          x-link-path: elementtemplates/{webId}/analysistemplates
        AttributeTemplates:
          type: string
          x-link-optional: false
          x-link-path: elementtemplates/{webId}/attributetemplates
        BaseTemplate:
          type: string
          x-link-optional: true
          x-link-path: elementtemplates/{webId}
        BaseTemplates:
          type: string
          x-link-optional: false
          x-link-path: elementtemplates/{webId}/baseelementtemplates
        Categories:
          type: string
          x-link-optional: false
          x-link-path: elementtemplates/{webId}/categories
        Database:
          type: string
          x-link-optional: false
          x-link-path: assetdatabases/{webId}
        DefaultAttribute:
          type: string
          x-link-optional: true
          x-link-path: attributetemplates/{webId}
        DerivedTemplates:
          type: string
          x-link-optional: false
          x-link-path: elementtemplates/{webId}/derivedelementtemplates
        NotificationRuleTemplates:
          type: string
          x-link-optional: false
          x-link-path: elementtemplates/{webId}/notificationruletemplates
        Security:
          type: string
          x-link-optional: false
          x-link-path: elementtemplates/{webId}/security
        SecurityEntries:
          type: string
          x-link-optional: false
          x-link-path: elementtemplates/{webId}/securityentries
        Self:
          type: string
          x-link-optional: false
          x-link-path: elementtemplates/{webId}
      type: object
    EnumerationSet:
      properties:
        Description:
          example: Model numbers by brand of vehicle
          type: string
        Id:
          example: 8e77fc4f-ac91-4029-81d6-fb66bd01d431
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/EnumerationSetLinks"
        Name:
          example: Model Number
          type: string
          x-required-post: true
        Path:
          example: \\MyAssetServer\MyDatabase\EnumerationSets[Model Number]
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        SerializeDescription:
          type: boolean
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1MSRDqD5loBNH0erqeqJodtALAT_x3jpGsKUCB1vtmvQHUMQ
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    EnumerationSetLinks:
      properties:
        DataServer:
          type: string
          x-link-optional: true
          x-link-path: dataservers/{webId}
        Database:
          type: string
          x-link-optional: true
          x-link-path: assetdatabases/{webId}
        Security:
          type: string
          x-link-optional: false
          x-link-path: enumerationsets/{webId}/security
        SecurityEntries:
          type: string
          x-link-optional: false
          x-link-path: enumerationsets/{webId}/securityentries
        Self:
          type: string
          x-link-optional: false
          x-link-path: enumerationsets/{webId}
        Values:
          type: string
          x-link-optional: false
          x-link-path: enumerationsets/{webId}/enumerationvalues
      type: object
    EnumerationValue:
      properties:
        Description:
          example: Model Number of CarBrand
          type: string
        Id:
          example: 982a8694-6fe9-4cb3-a011-09d278649eef
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/EnumerationValueLinks"
        Name:
          example: CarBrand|Model3
          type: string
          x-required-post: true
        Parent:
          example: CarBrand
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Path:
          example: \\MyAssetServer\MyDatabase\EnumerationSets[Model
            Number]\CarBrand|Model3
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        SerializeDescription:
          type: boolean
        SerializeId:
          type: boolean
        SerializeLinks:
          type: boolean
        SerializePath:
          type: boolean
        SerializeWebId:
          type: boolean
        Value:
          example: 2005
          format: int32
          type: integer
          x-required-post: true
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1MVRDqD5loBNH0erqeqJodtALAT_x3jpGsKUCB1vtmvQHUMQlIYqmOlvs0ygEQnSeGSe7w
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    EnumerationValueLinks:
      properties:
        EnumerationSet:
          type: string
          x-link-optional: false
          x-link-path: enumerationsets/{webId}
        Parent:
          type: string
          x-link-optional: true
          x-link-path: enumerationvalues/{webId}
        Self:
          type: string
          x-link-optional: false
          x-link-path: enumerationvalues/{webId}
      type: object
    Errors:
      properties:
        Errors:
          example:
            - An error has occurred.
          items:
            type: string
          type: array
      type: object
    EventFrame:
      properties:
        AcknowledgedBy:
          example: MyDomain\UserA
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        AcknowledgedDate:
          example: 2014-07-30T11:04:23Z
          format: date-time
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        AreValuesCaptured:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        CanBeAcknowledged:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        CategoryNames:
          example:
            - Processing Plant
          items:
            type: string
          type: array
        Description:
          example: Event Frame of Past Week
          type: string
        EndTime:
          example: 2014-07-25T14:45:29Z
          format: date-time
          type: string
        ExtendedProperties:
          additionalProperties:
            $ref: "#/components/schemas/Value"
          type: object
        HasChildren:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Id:
          example: 96f9a00e-4d80-471f-0000-00000004b002
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        IsAcknowledged:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        IsAnnotated:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        IsLocked:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/EventFrameLinks"
        Name:
          example: EF20140725-001
          type: string
          x-required-post: true
        Path:
          example: \\MyAssetServer\MyDatabase\EventFrames[EF20140725-001]
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        RefElementWebIds:
          example:
            - I1EmDqD5loBNH0erqeqJodtALAaqQoQHk26BGgMQAVXYR0Ag
          items:
            type: string
          type: array
        Security:
          $ref: "#/components/schemas/Security"
        Severity:
          example: None
          type: string
        StartTime:
          example: 2014-07-18T14:45:29Z
          format: date-time
          type: string
        TemplateName:
          example: Template
          type: string
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1FmDqD5loBNH0erqeqJodtALADqD5loBNH0cAAAAAAASwAg
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    EventFrameLinks:
      properties:
        Annotations:
          type: string
          x-link-optional: true
          x-link-path: eventframes/{webId}/annotations
        Attributes:
          type: string
          x-link-optional: false
          x-link-path: eventframes/{webId}/attributes
        Categories:
          type: string
          x-link-optional: false
          x-link-path: eventframes/{webId}/categories
        Database:
          type: string
          x-link-optional: false
          x-link-path: assetdatabases/{webId}
        DefaultAttribute:
          type: string
          x-link-optional: true
          x-link-path: attributes/{webId}
        EndValue:
          type: string
          x-link-optional: false
          x-link-path: streamsets/{webId}/end
        EventFrames:
          type: string
          x-link-optional: false
          x-link-path: eventframes/{webId}/eventframes
        InterpolatedData:
          type: string
          x-link-optional: false
          x-link-path: streamsets/{webId}/interpolated
        Parent:
          type: string
          x-link-optional: true
          x-link-path: eventframes/{webId}
        PlotData:
          type: string
          x-link-optional: false
          x-link-path: streamsets/{webId}/plot
        PrimaryReferencedElement:
          type: string
          x-link-optional: true
          x-link-path: elements/{webId}
        RecordedData:
          type: string
          x-link-optional: false
          x-link-path: streamsets/{webId}/recorded
        ReferencedElements:
          type: string
          x-link-optional: false
          x-link-path: eventframes/{webId}/referencedelements
        Security:
          type: string
          x-link-optional: false
          x-link-path: eventframes/{webId}/security
        SecurityEntries:
          type: string
          x-link-optional: false
          x-link-path: eventframes/{webId}/securityentries
        Self:
          type: string
          x-link-optional: false
          x-link-path: eventframes/{webId}
        SummaryData:
          type: string
          x-link-optional: false
          x-link-path: streamsets/{webId}/summary
        Template:
          type: string
          x-link-optional: true
          x-link-path: elementtemplates/{webId}
        Value:
          type: string
          x-link-optional: false
          x-link-path: streamsets/{webId}/value
      type: object
    ExtendedTimedValue:
      properties:
        Annotated:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Annotations:
          items:
            $ref: "#/components/schemas/StreamAnnotation"
          type: array
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Errors:
          items:
            $ref: "#/components/schemas/PropertyError"
          type: array
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Good:
          example: true
          type: boolean
        Questionable:
          example: false
          type: boolean
        Substituted:
          example: false
          type: boolean
          x-disallow-post: true
        Timestamp:
          example: 2014-07-22T14:00:00Z
          format: date-time
          type: string
        UnitsAbbreviation:
          example: m
          type: string
        Value:
          example: 12.3
          type: object
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    ExtendedTimedValues:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/ExtendedTimedValue"
          type: array
          x-required-post: true
        UnitsAbbreviation:
          type: string
          x-disallow-post: true
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    Landing:
      properties:
        Links:
          $ref: "#/components/schemas/LandingLinks"
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    LandingLinks:
      properties:
        AssetServers:
          type: string
          x-link-optional: false
          x-link-path: assetservers
        DataServers:
          type: string
          x-link-optional: false
          x-link-path: dataservers
        Search:
          type: string
          x-link-optional: false
          x-link-path: search
        Self:
          type: string
          x-link-optional: false
          x-link-path: ""
        System:
          type: string
          x-link-optional: false
          x-link-path: system
      type: object
    MediaMetadata:
      properties:
        Author:
          example: DOMAIN\username
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        ChangeDate:
          example: 2014-07-22T14:00:00Z
          format: date-time
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Description:
          example: The description attached to this media.
          type: string
        Links:
          $ref: "#/components/schemas/MediaMetadataLinks"
        Name:
          example: ExampleFile.txt
          type: string
        Size:
          example: 86753098675309
          type: number
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    MediaMetadataLinks:
      properties:
        MediaData:
          type: string
          x-link-optional: false
        Owner:
          type: string
          x-link-optional: false
        Self:
          type: string
          x-link-optional: false
      type: object
    NotificationContactTemplate:
      properties:
        Available:
          example: true
          type: boolean
        ConfigString:
          example: ""
          type: string
        ContactType:
          example: Individual
          type: string
        Description:
          example: ""
          type: string
        EscalationTimeout:
          example: PT3S
          format: Duration
          type: string
        HasChildren:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Id:
          example: cbb28260-853d-11e4-80c5-00155d844304
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/NotificationContactTemplateLinks"
        MaximumRetries:
          example: 5
          type: integer
        MinimumAcknowledgements:
          example: 2
          type: integer
        Name:
          example: Plant Manager
          type: string
          x-required-post: true
        NotifyWhenInstanceEnded:
          example: true
          type: boolean
        Path:
          example: \\MyAssetServer\NotificationContactTemplates[Plant Manager]
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        PlugInName:
          example: ""
          type: string
        RetryInterval:
          example: PT5S
          format: Duration
          type: string
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1NCEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    NotificationContactTemplateLinks:
      properties:
        AssetServer:
          type: string
          x-link-optional: false
          x-link-path: assetservers/{webId}
        NotificationContactTemplates:
          type: string
          x-link-optional: false
          x-link-path: notificationcontacttemplates/{webId}/notificationcontacttemplates
        NotificationPlugIn:
          type: string
          x-link-optional: true
          x-link-path: notificationplugins/{webId}
        Security:
          type: string
          x-link-optional: false
          x-link-path: notificationcontacttemplates/{webId}/security
        SecurityEntries:
          type: string
          x-link-optional: false
          x-link-path: notificationcontacttemplates/{webId}/securityentries
        Self:
          type: string
          x-link-optional: false
          x-link-path: notificationcontacttemplates/{webId}
      type: object
    NotificationPlugIn:
      properties:
        AssemblyFileName:
          example: OSIsoft.AF.Notification.DeliveryChannel.WebService.dll
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        AssemblyID:
          example: 0b450496-63f6-4207-b4c5-2c1c73ca897a
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        AssemblyLoadProperties:
          example:
            - NET4
            - SDK_NET4
          items:
            type: string
          type: array
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        AssemblyTime:
          example: 2016-05-25T14:01:07Z
          format: date-time
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        CompatibilityVersion:
          example: 2
          format: int32
          type: integer
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Description:
          example: Delivery channel for calling a web service
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Id:
          example: 145c35d6-f4d7-41d9-86ae-08e5098d3a96
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        IsBrowsable:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        IsNonEditableConfig:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/DeliveryChannelPlugInLinks"
        LoadedAssemblyTime:
          example: 1970-01-01T00:00:00Z
          format: date-time
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        LoadedVersion:
          example: ""
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Name:
          example: WebService
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Path:
          example: \\MyAssetServer\PlugInsDeliveryChannel[WebService]
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Version:
          example: 2.10.0.8516
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: F1DCDqD5loBNH0erqeqJodtALA1jVcFNf02UGGrgjlCY06lgUkVTVFVOSVRcUExVR0lOU0RFTElWRVJZQ0hBTk5FTFtXRUJTRVJWSUNFXQ
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    NotificationRule:
      properties:
        AutoCreated:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        CategoryNames:
          example:
            - Equipment Assets
          items:
            type: string
          type: array
        Criteria:
          example: "Name: EventFrameCriteriaName"
          type: string
        Description:
          example: Manufacturing Equipment MachineName
          type: string
        Id:
          example: e9a984d0-f47c-11e7-8454-00155d029708
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        MultiTriggerEventOption:
          example: HighestSeverity
          type: string
        Name:
          example: MachineName
          type: string
          x-required-post: true
        NonrepetitionInterval:
          example: PT3S
          format: Duration
          type: string
        Path:
          example: \\MyAssetServer\MyDatabase\CityName\EngineeringProcess\Equipment\MachineName\NotificationRules[RuleName]
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        ResendInterval:
          example: PT5S
          format: Duration
          type: string
        Status:
          example: Disabled
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        TemplateName:
          example: MachineName Notification Rule
          type: string
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1NRDqD5loBNH0erqeqJodtALA5bYfWno26BGgMQAVXYR0Ag
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    NotificationRuleSubscriber:
      properties:
        ConfigString:
          example: ToEmail=mike@testemail.com
          type: string
        ContactTemplateName:
          example: Plant Manager
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-required-post: true
        ContactType:
          example: Individual
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        DeliveryFormatName:
          example: DeliveryFormat
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Description:
          example: Manufacturing Machine MachineName subscription
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        EscalationTimeout:
          example: PT3S
          format: Duration
          type: string
        Id:
          example: e9a984d0-f47c-11e7-8454-00155d029708
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        MaximumRetries:
          example: "3"
          type: integer
        Name:
          example: NotificationSubscriptionRuleName
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        NotifyOption:
          example: EventStart
          type: string
        Path:
          example: \\MyAssetServer\MyDatabase\NotificationRules[NotificationSubscriptionRuleName]
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        PlugInName:
          example: Email
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        RetryInterval:
          example: PT3S
          format: Duration
          type: string
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1NSLDqD5loBNH0erqeqJodtALA5bYfWno26BGgMQAVXYR0AgPUJJXNlEW1w78rnCXDmcDA
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    NotificationRuleTemplate:
      properties:
        CategoryNames:
          example:
            - MachineNameAlerts
          items:
            type: string
          type: array
        Criteria:
          example: "Name: EventFrameCriteriaName"
          type: string
        Description:
          example: Description entered by the user
          type: string
        Id:
          example: e9a984d0-f47c-11e7-8454-00155d029708
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        MultiTriggerEventOption:
          example: HighestSeverity
          type: string
        Name:
          example: MachineName
          type: string
          x-required-post: true
        NonrepetitionInterval:
          example: PT3S
          format: Duration
          type: string
        Path:
          example: \\MyAssetServer\MyDatabase\CityName\ElementTemplates[Template3]\NotificationRuleTemplates[Notification
            Rule Template]
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        ResendInterval:
          example: PT5S
          format: Duration
          type: string
        Status:
          example: Functioning
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        TemplateName:
          example: MachineName Notification Rule Template
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1NTDqD5loBNH0erqeqJodtALAtdcX5JH_5xGEKAAVXTSaAg
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    PIPointDataReference:
      properties:
        Descriptor:
          example: 12 Hour Sine Wave
          type: string
        DigitalSetName:
          example: ""
          type: string
          x-disallow-patch: true
        DisplayDigits:
          example: -5
          type: integer
        EngineeringUnits:
          example: ""
          type: string
        Future:
          example: false
          type: boolean
          x-disallow-patch: true
        Id:
          example: 82
          format: int32
          type: integer
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Name:
          example: PointName
          type: string
          x-required-post: true
        Path:
          example: \\MyPIServer\PointName
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        PointClass:
          example: classic
          type: string
          x-disallow-patch: true
          x-required-post: true
        PointType:
          example: Float32
          type: string
          x-disallow-patch: true
          x-required-post: true
        Span:
          example: 100
          type: number
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Step:
          example: false
          type: boolean
        WebId:
          example: I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Zero:
          example: 0
          type: number
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    PaginationLinks:
      properties:
        First:
          type: string
          x-link-optional: true
        Last:
          type: string
          x-link-optional: true
        Next:
          type: string
          x-link-optional: true
        Previous:
          type: string
          x-link-optional: true
      type: object
    Point:
      properties:
        Descriptor:
          example: 12 Hour Sine Wave
          type: string
        DigitalSetName:
          example: ""
          type: string
          x-disallow-patch: true
        DisplayDigits:
          example: -5
          type: integer
        EngineeringUnits:
          example: ""
          type: string
        Future:
          example: false
          type: boolean
          x-disallow-patch: true
        Id:
          example: 82
          format: int32
          type: integer
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/PointLinks"
        Name:
          example: PointName
          type: string
          x-required-post: true
        Path:
          example: \\MyPIServer\PointName
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        PointClass:
          example: classic
          type: string
          x-disallow-patch: true
          x-required-post: true
        PointType:
          example: Float32
          type: string
          x-disallow-patch: true
          x-required-post: true
        Span:
          example: 100
          type: number
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Step:
          example: false
          type: boolean
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Zero:
          example: 0
          type: number
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    PointAttribute:
      properties:
        Links:
          $ref: "#/components/schemas/PointAttributeLinks"
        Name:
          example: typicalvalue
          type: string
          x-required-put: true
        Value:
          example: 50
          type: object
          x-required-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    PointAttributeLinks:
      properties:
        Point:
          type: string
          x-link-optional: false
          x-link-path: points/{webId}
        Self:
          type: string
          x-link-optional: false
          x-link-path: points/{webId}/attributes/{name}
      type: object
    PointLinks:
      properties:
        Attributes:
          type: string
          x-link-optional: false
          x-link-path: points/{webId}/attributes
        DataServer:
          type: string
          x-link-optional: false
          x-link-path: dataservers/{webId}
        EndValue:
          type: string
          x-link-optional: false
          x-link-path: streams/{webId}/end
        InterpolatedData:
          type: string
          x-link-optional: false
          x-link-path: streams/{webId}/interpolated
        PlotData:
          type: string
          x-link-optional: false
          x-link-path: streams/{webId}/plot
        RecordedData:
          type: string
          x-link-optional: false
          x-link-path: streams/{webId}/recorded
        Self:
          type: string
          x-link-optional: false
          x-link-path: points/{webId}
        SummaryData:
          type: string
          x-link-optional: false
          x-link-path: streams/{webId}/summary
        Value:
          type: string
          x-link-optional: false
          x-link-path: streams/{webId}/value
      type: object
    PropertyError:
      properties:
        FieldName:
          example: Value
          type: string
        Message:
          example:
            - An error has occurred.
          items:
            type: string
          type: array
      type: object
    Request:
      properties:
        Content:
          type: string
        Headers:
          additionalProperties:
            type: string
          type: object
        Method:
          example: GET
          type: string
          x-required-post: true
        Parameters:
          items:
            type: string
          type: array
        ParentIds:
          items:
            type: string
          type: array
        RequestTemplate:
          $ref: "#/components/schemas/RequestTemplate"
        Resource:
          type: string
      type: object
    RequestTemplate:
      properties:
        Resource:
          type: string
          x-required-post: true
      type: object
    Response:
      properties:
        Content:
          type: object
        Headers:
          additionalProperties:
            type: string
          type: object
        Status:
          enum:
            - 100
            - 101
            - 200
            - 201
            - 202
            - 203
            - 204
            - 205
            - 206
            - 207
            - 300
            - 301
            - 302
            - 303
            - 304
            - 305
            - 306
            - 307
            - 400
            - 401
            - 402
            - 403
            - 404
            - 405
            - 406
            - 407
            - 408
            - 409
            - 410
            - 411
            - 412
            - 413
            - 414
            - 415
            - 416
            - 417
            - 426
            - 500
            - 501
            - 502
            - 503
            - 504
            - 505
          example: 200
          format: int32
          type: integer
      type: object
    SearchByAttribute:
      properties:
        ElementTemplate:
          example: I1ETDqD5loBNH0erqeqJodtALAjFPVfUpY-02A8uioGDSgIg
          format: webid
          type: string
        SearchRoot:
          example: I1RDDqD5loBNH0erqeqJodtALA8fbgUnyQW02v-gLGIxumSg
          format: webid
          type: string
        ValueQueries:
          items:
            $ref: "#/components/schemas/ValueQuery"
          type: array
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    Security:
      properties:
        CanAnnotate:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        CanDelete:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        CanExecute:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        CanRead:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        CanReadData:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        CanSubscribe:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        CanSubscribeOthers:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        CanWrite:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        CanWriteData:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        HasAdmin:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Rights:
          example:
            - Read
            - WriteData
          items:
            type: string
          type: array
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    SecurityEntry:
      properties:
        AllowRights:
          example:
            - Read
            - ReadData
          items:
            type: string
          type: array
        DenyRights:
          example:
            - Write
            - Execute
            - Admin
          items:
            type: string
          type: array
        Links:
          $ref: "#/components/schemas/SecurityEntryLinks"
        Name:
          example: domain\user1
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        SecurityIdentityName:
          example: domain\user1
          type: string
          x-disallow-put: true
          x-required-post: true
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    SecurityEntryLinks:
      properties:
        SecurableObject:
          type: string
          x-link-optional: false
        SecurityIdentity:
          type: string
          x-link-optional: false
          x-link-path: securityidentities/{webId}
        Self:
          type: string
          x-link-optional: false
      type: object
    SecurityIdentity:
      properties:
        Description:
          example: ""
          type: string
        Id:
          example: f3a5ee49-1838-4aa2-9d79-e16294523db7
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        IsEnabled:
          example: true
          type: boolean
        Links:
          $ref: "#/components/schemas/SecurityIdentityLinks"
        Name:
          example: MySecurityIdentity
          type: string
          x-required-post: true
        Path:
          example: \\MyAssetServer\SecurityIdentities[MySecurityIdentity]
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1SIDqD5loBNH0erqeqJodtALASe6l8zgYokqdeeFilFI9tw
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    SecurityIdentityLinks:
      properties:
        AssetServer:
          type: string
          x-link-optional: false
          x-link-path: assetservers/{webId}
        Security:
          type: string
          x-link-optional: false
          x-link-path: securityidentities/{webId}/security
        SecurityEntries:
          type: string
          x-link-optional: false
          x-link-path: securityidentities/{webId}/securityentries
        SecurityMappings:
          type: string
          x-link-optional: false
          x-link-path: securityidentities/{webId}/securitymappings
        Self:
          type: string
          x-link-optional: false
          x-link-path: securityidentities/{webId}
      type: object
    SecurityMapping:
      properties:
        Account:
          example: domain\user
          type: string
          x-disallow-patch: true
          x-required-post: true
        Description:
          example: ""
          type: string
        Id:
          example: ac14ef82-19c0-4a07-96a7-d1fb0b84c05d
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/SecurityMappingLinks"
        Name:
          example: MySecurityMapping
          type: string
        Path:
          example: \\MyAssetServer\SecurityMappings[MySecurityMapping]
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        SecurityIdentityWebId:
          example: I1SIEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          type: string
          x-required-post: true
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1SMDqD5loBNH0erqeqJodtALAgu8UrMAZB0qWp9H7C4TAXQ
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    SecurityMappingLinks:
      properties:
        AssetServer:
          type: string
          x-link-optional: false
          x-link-path: assetservers/{webId}
        Security:
          type: string
          x-link-optional: false
          x-link-path: securitymappings/{webId}/security
        SecurityEntries:
          type: string
          x-link-optional: false
          x-link-path: securitymappings/{webId}/securityentries
        SecurityIdentity:
          type: string
          x-link-optional: false
          x-link-path: securityidentities/{webId}
        Self:
          type: string
          x-link-optional: false
          x-link-path: securitymappings/{webId}
      type: object
    SecurityRights:
      properties:
        CanAnnotate:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        CanDelete:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        CanExecute:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        CanRead:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        CanReadData:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        CanSubscribe:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        CanSubscribeOthers:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        CanWrite:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        CanWriteData:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        HasAdmin:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/SecurityRightsLinks"
        OwnerWebId:
          example: I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA
          type: string
        Rights:
          example:
            - Read
            - WriteData
          items:
            type: string
          type: array
        SecurityItem:
          example: Default
          type: string
        UserIdentity:
          example: domain\user
          type: string
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    SecurityRightsLinks:
      properties:
        Owner:
          type: string
          x-link-optional: false
        Self:
          type: string
          x-link-optional: false
      type: object
    StreamAnnotation:
      properties:
        CreationDate:
          example: 2016-06-21T14:45:50.2988321Z
          format: date-time
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Creator:
          example: MyDomain\UserA
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Description:
          example: Signifies a spike in temperature.
          type: string
        Errors:
          items:
            $ref: "#/components/schemas/PropertyError"
          type: array
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Id:
          example: 512B6616-CE39-4F70-9048-8C6A025FB592
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Modifier:
          example: MyDomain\UserA
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        ModifyDate:
          example: 2016-06-21T14:45:50.2988321Z
          format: date-time
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Name:
          example: Temperature Annotation
          type: string
          x-required-post: true
        Value:
          example: The temperature spiked because of a malfunction with a unit in our
            west plant.
          type: object
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    StreamSummaries:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/SummaryValue"
          type: array
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/StreamSummariesLinks"
        Name:
          example: Water
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Path:
          example: \\MyAssetServer\MyDatabase\MyElement|Water
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    StreamSummariesLinks:
      properties:
        Source:
          type: string
          x-link-optional: false
      type: object
    StreamUpdatesRegister:
      properties:
        Exception:
          $ref: "#/components/schemas/Errors"
        LatestMarker:
          example: 0cbbec466f3a42288c8c47112f54b852_12
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Source:
          example: I1AbEDqD5loBNH0erqeqJodtALA9iLxz4m_5RGAxgAVXYUACw_yrS377vX0uZVHTgkanusw
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        SourceName:
          example: Water
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        SourcePath:
          example: \\MyAssetServer\MyDatabase\MyElement|Water
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Status:
          example: Succeeded
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    StreamUpdatesRetrieve:
      properties:
        Events:
          items:
            $ref: "#/components/schemas/DataPipeEvent"
          type: array
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Exception:
          $ref: "#/components/schemas/Errors"
        LatestMarker:
          example: 0cbbec466f3a42288c8c47112f54b852_12
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        RequestedMarker:
          example: 0cbbec466f3a42288c8c47112f54b852_0
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Source:
          example: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        SourceName:
          example: Water
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        SourcePath:
          example: \\MyAssetServer\MyDatabase\MyElement|Water
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Status:
          example: Created
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    StreamValue:
      properties:
        Links:
          $ref: "#/components/schemas/StreamValueLinks"
        Name:
          example: Water
          type: string
          x-disallow-post: true
        Path:
          example: \\MyAssetServer\MyDatabase\MyElement|Water
          format: path
          type: string
          x-disallow-post: true
        Value:
          $ref: "#/components/schemas/TimedValue"
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          format: webid
          type: string
          x-required-post: true
      type: object
    StreamValueLinks:
      properties:
        Source:
          type: string
          x-link-optional: false
      type: object
    StreamValues:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/TimedValue"
          type: array
          x-required-post: true
        Links:
          $ref: "#/components/schemas/StreamValuesLinks"
        Name:
          example: Water
          type: string
          x-disallow-post: true
        Path:
          example: \\MyAssetServer\MyDatabase\MyElement|Water
          format: path
          type: string
          x-disallow-post: true
        UnitsAbbreviation:
          example: m
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          format: webid
          type: string
          x-required-post: true
      type: object
    StreamValuesLinks:
      properties:
        Source:
          type: string
          x-link-optional: false
      type: object
    Substatus:
      properties:
        Message:
          type: string
        Substatus:
          enum:
            - 100
            - 101
            - 200
            - 201
            - 202
            - 203
            - 204
            - 205
            - 206
            - 207
            - 300
            - 301
            - 302
            - 303
            - 304
            - 305
            - 306
            - 307
            - 400
            - 401
            - 402
            - 403
            - 404
            - 405
            - 406
            - 407
            - 408
            - 409
            - 410
            - 411
            - 412
            - 413
            - 414
            - 415
            - 416
            - 417
            - 426
            - 500
            - 501
            - 502
            - 503
            - 504
            - 505
          example: "200"
          format: int32
          type: integer
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    SummaryValue:
      properties:
        Type:
          example: Total
          type: string
        Value:
          $ref: "#/components/schemas/TimedValue"
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    SystemLanding:
      properties:
        Links:
          $ref: "#/components/schemas/SystemLandingLinks"
        ProductTitle:
          example: PI Web API 2016 R2
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        ProductVersion:
          example: 1.8.0.201
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    SystemLandingLinks:
      properties:
        CacheInstances:
          type: string
          x-link-optional: false
          x-link-path: system/cacheinstances
        Configuration:
          type: string
          x-link-optional: false
          x-link-path: system/configuration
        Self:
          type: string
          x-link-optional: false
          x-link-path: system
        Status:
          type: string
          x-link-optional: false
          x-link-path: system/status
        UserInfo:
          type: string
          x-link-optional: false
          x-link-path: system/userinfo
        Versions:
          type: string
          x-link-optional: false
          x-link-path: system/versions
      type: object
    SystemStatus:
      properties:
        CacheInstances:
          example: 0
          format: int32
          type: integer
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        ServerTime:
          example: 2014-07-22T14:00:00Z
          format: date-time
          type: string
        State:
          example: Running
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        UpTimeInMinutes:
          example: 32345.6
          format: double
          type: number
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    Table:
      properties:
        CategoryNames:
          example:
            - Table Category
          items:
            type: string
          type: array
        ConvertToLocalTime:
          example: "false"
          type: boolean
        Description:
          example: Table of car info.
          type: string
        Id:
          example: 5ff8ba98-89ce-479a-b29e-ddd057096a5f
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/TableLinks"
        Name:
          example: CarInfo
          type: string
          x-required-post: true
        Path:
          example: \\MyAssetServer\MyDatabase\Tables[CarInfo]
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        TimeZone:
          example: Eastern Standard Time
          type: string
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1BlDqD5loBNH0erqeqJodtALAmLr4X86Jmkeynt3QVwlqXw
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    TableCategory:
      properties:
        Description:
          example: Relative energy use per ton of process feed.
          type: string
        Id:
          example: 89c70cc2-5221-4e77-873f-894a3ea61e7d
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/TableCategoryLinks"
        Name:
          example: CategoryName
          type: string
          x-required-post: true
        Path:
          example: \\MyAssetServer\Database\CategoriesTable[CategoryName]
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1BCDqD5loBNH0erqeqJodtALAwgzHiSFSd06HP4lKPqYefQ
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    TableCategoryLinks:
      properties:
        Database:
          type: string
          x-link-optional: false
          x-link-path: assetdatabases/{webId}
        Security:
          type: string
          x-link-optional: false
          x-link-path: tablecategories/{webId}/security
        SecurityEntries:
          type: string
          x-link-optional: false
          x-link-path: tablecategories/{webId}/securityentries
        Self:
          type: string
          x-link-optional: false
          x-link-path: tablecategories/{webId}
      type: object
    TableData:
      properties:
        Columns:
          additionalProperties:
            type: string
          type: object
          x-required-put: true
        Rows:
          items:
            additionalProperties:
              type: object
            type: object
          type: array
          x-required-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    TableLinks:
      properties:
        Categories:
          type: string
          x-link-optional: false
          x-link-path: tables/{webId}/categories
        Data:
          type: string
          x-link-optional: false
          x-link-path: tables/{webId}/data
        Database:
          type: string
          x-link-optional: false
          x-link-path: assetdatabases/{webId}
        Security:
          type: string
          x-link-optional: false
          x-link-path: tables/{webId}/security
        SecurityEntries:
          type: string
          x-link-optional: false
          x-link-path: tables/{webId}/securityentries
        Self:
          type: string
          x-link-optional: false
          x-link-path: tables/{webId}
      type: object
    TimeRule:
      properties:
        ConfigString:
          example: Frequency=300
          type: string
        ConfigStringStored:
          example: ""
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Description:
          example: Creates regular periodic time periods.
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        DisplayString:
          example: Frequency=300
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        EditorType:
          example: OSIsoft.AF.Time.TimeRule.PeriodicConfig
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Id:
          example: 1514eb44-94c5-11e7-8443-00155d84c200
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        IsConfigured:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        IsInitializing:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/TimeRuleLinks"
        MergeDuplicatedItems:
          example: false
          type: boolean
        Name:
          example: Periodic
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Path:
          example: \\MyAssetServer\MyDatabase\MyElement\Analyses[MyAnalysis]\TimeRule
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        PlugInName:
          example: Periodic
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1TRXDqD5loBNH0erqeqJodtALAROsUFcWU5xGEQwAVXYTCAAROsUFcWU5xGEQwAVXYTCAA
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    TimeRuleLinks:
      properties:
        Analysis:
          type: string
          x-link-optional: true
          x-link-path: analyses/{webId}
        AnalysisTemplate:
          type: string
          x-link-optional: true
          x-link-path: analysistemplates/{webId}
        PlugIn:
          type: string
          x-link-optional: true
          x-link-path: timeruleplugins/{webId}
        Self:
          type: string
          x-link-optional: false
          x-link-path: timerules/{webId}
      type: object
    TimeRulePlugIn:
      properties:
        AssemblyFileName:
          example: OSIsoft.AF.Time.TimeRule.Periodic.dll
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        AssemblyID:
          example: 7a635b27-3c3c-4a5f-bba9-01f06e9e525b
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        AssemblyLoadProperties:
          example:
            - None
          items:
            type: string
          type: array
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        AssemblyTime:
          example: 2016-05-25T14:01:07Z
          format: date-time
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        CompatibilityVersion:
          example: 2
          format: int32
          type: integer
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Description:
          example: Creates regular periodic time periods.
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Id:
          example: d655f414-9655-4ad6-a615-182fa38200c1
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        IsBrowsable:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        IsNonEditableConfig:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/TimeRulePlugInLinks"
        LoadedAssemblyTime:
          example: 1970-01-01T00:00:00Z
          format: date-time
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        LoadedVersion:
          example: ""
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Name:
          example: Periodic
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Path:
          example: \\MyAssetServer\PlugInsTimeRule[Periodic]
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Version:
          example: 2.8.5.7552
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1TPDqD5loBNH0erqeqJodtALAFPRV1lWW1kqmFRgvo4IAwQ
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    TimeRulePlugInLinks:
      properties:
        AssetServer:
          type: string
          x-link-optional: false
          x-link-path: assetservers/{webId}
        Self:
          type: string
          x-link-optional: false
          x-link-path: timeruleplugins/{webId}
      type: object
    TimedValue:
      properties:
        Annotated:
          example: false
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Errors:
          items:
            $ref: "#/components/schemas/PropertyError"
          type: array
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Good:
          example: true
          type: boolean
        Questionable:
          example: false
          type: boolean
        Substituted:
          example: false
          type: boolean
          x-disallow-post: true
        Timestamp:
          example: 2014-07-22T14:00:00Z
          format: date-time
          type: string
        UnitsAbbreviation:
          example: m
          type: string
        Value:
          example: 12.3
          type: object
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    TimedValues:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/TimedValue"
          type: array
          x-required-post: true
        UnitsAbbreviation:
          type: string
          x-disallow-post: true
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    Unit:
      properties:
        Abbreviation:
          example: Hz
          type: string
          x-required-post: true
        Description:
          example: Hertz Unit
          type: string
        Factor:
          example: 1
          format: double
          type: number
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Id:
          example: 8121ac8e-3ce2-4794-95e3-1783d5d6f4fc
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/UnitLinks"
        Name:
          example: Hertz
          type: string
          x-required-post: true
        Offset:
          example: 0
          format: double
          type: number
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Path:
          example: \\MyAssetServer\UOMDatabase\Hertz
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        ReferenceFactor:
          example: 1
          format: double
          type: number
        ReferenceOffset:
          example: 0
          format: double
          type: number
        ReferenceUnitAbbreviation:
          example: ""
          type: string
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1UtDqD5loBNH0erqeqJodtALAjqwhgeI8lEeV4xeD1db0_A
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    UnitClass:
      properties:
        CanonicalUnitAbbreviation:
          example: W
          type: string
          x-required-post: true
        CanonicalUnitName:
          example: watt
          type: string
          x-required-post: true
        Description:
          example: Power Unit Class
          type: string
        Id:
          example: f925b94d-6efc-4b94-a50d-0015c391f249
          format: uuid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Links:
          $ref: "#/components/schemas/UnitClassLinks"
        Name:
          example: Power
          type: string
          x-required-post: true
        Path:
          example: \\MyAssetServer\UOMDatabase\UOMClasses[Power]
          format: path
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
        WebId:
          example: I1UCDqD5loBNH0erqeqJodtALATbkl-fxulEulDQAVw5HySQ
          format: webid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
      type: object
    UnitClassLinks:
      properties:
        AssetServer:
          type: string
          x-link-optional: false
          x-link-path: assetservers/{webId}
        CanonicalUnit:
          type: string
          x-link-optional: false
          x-link-path: unitclasses/{webId}/canonicalunit
        Self:
          type: string
          x-link-optional: false
          x-link-path: unitclasses/{webId}
        Units:
          type: string
          x-link-optional: false
          x-link-path: unitclasses/{webId}/units
      type: object
    UnitLinks:
      properties:
        Class:
          type: string
          x-link-optional: false
          x-link-path: unitclasses/{webId}
        ReferenceUnit:
          type: string
          x-link-optional: true
          x-link-path: units/{webId}
        Self:
          type: string
          x-link-optional: false
          x-link-path: units/{webId}
      type: object
    UserInfo:
      properties:
        IdentityType:
          example: WindowsIdentity
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        ImpersonationLevel:
          example: None
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        IsAuthenticated:
          example: true
          type: boolean
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        Name:
          example: MyDomain\Username
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        SID:
          example: S-1-5-21-2083424470-1893017325-1469799231-71366
          format: sid
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    Value:
      properties:
        Exception:
          $ref: "#/components/schemas/Errors"
        Value:
          example: 12.3
          type: object
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    ValueQuery:
      properties:
        AttributeName:
          example: Pressure
          type: string
        AttributeUOM:
          example: pound-force per square inch
          type: string
        AttributeValue:
          example: 12.3
          type: object
        SearchOperator:
          example: LessThan
          type: string
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    Version:
      properties:
        Build:
          example: "201"
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        FullVersion:
          example: 1.10.0.201
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        MajorMinorRevision:
          example: 1.10.0
          type: string
          x-disallow-patch: true
          x-disallow-post: true
          x-disallow-put: true
        WebException:
          $ref: "#/components/schemas/WebException"
      type: object
    WebException:
      properties:
        Errors:
          example:
            - An error has occurred.
          items:
            type: string
          type: array
        StatusCode:
          enum:
            - 100
            - 101
            - 200
            - 201
            - 202
            - 203
            - 204
            - 205
            - 206
            - 207
            - 300
            - 301
            - 302
            - 303
            - 304
            - 305
            - 306
            - 307
            - 400
            - 401
            - 402
            - 403
            - 404
            - 405
            - 406
            - 407
            - 408
            - 409
            - 410
            - 411
            - 412
            - 413
            - 414
            - 415
            - 416
            - 417
            - 426
            - 500
            - 501
            - 502
            - 503
            - 504
            - 505
          example: 500
          format: int32
          type: integer
      type: object
    Item_Attribute_:
      properties:
        Exception:
          $ref: "#/components/schemas/Errors"
        Identifier:
          example: \\server\path
          type: string
        IdentifierType:
          example: Path
          type: string
        Object:
          $ref: "#/components/schemas/Attribute"
      type: object
    Item_Element_:
      properties:
        Exception:
          $ref: "#/components/schemas/Errors"
        Identifier:
          example: \\server\path
          type: string
        IdentifierType:
          example: Path
          type: string
        Object:
          $ref: "#/components/schemas/Element"
      type: object
    Item_EventFrame_:
      properties:
        Exception:
          $ref: "#/components/schemas/Errors"
        Identifier:
          example: \\server\path
          type: string
        IdentifierType:
          example: Path
          type: string
        Object:
          $ref: "#/components/schemas/EventFrame"
      type: object
    Item_Point_:
      properties:
        Exception:
          $ref: "#/components/schemas/Errors"
        Identifier:
          example: \\server\path
          type: string
        IdentifierType:
          example: Path
          type: string
        Object:
          $ref: "#/components/schemas/Point"
      type: object
    Items_AnalysisCategory_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/AnalysisCategory"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_AnalysisRulePlugIn_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/AnalysisRulePlugIn"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_AnalysisRule_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/AnalysisRule"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_AnalysisTemplate_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/AnalysisTemplate"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_Analysis_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/Analysis"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_Annotation_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/Annotation"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_AssetDatabase_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/AssetDatabase"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_AssetServer_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/AssetServer"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_AttributeCategory_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/AttributeCategory"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_AttributeTemplate_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/AttributeTemplate"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_AttributeTrait_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/AttributeTrait"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_Attribute_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/Attribute"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_CacheInstance_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/CacheInstance"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_ChannelInstance_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/ChannelInstance"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_DataServer_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/DataServer"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_ElementCategory_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/ElementCategory"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_ElementTemplate_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/ElementTemplate"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_Element_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/Element"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_EnumerationSet_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/EnumerationSet"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_EnumerationValue_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/EnumerationValue"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_EventFrame_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/EventFrame"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_Item_Attribute_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/Item_Attribute_"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_Item_Element_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/Item_Element_"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_Item_EventFrame_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/Item_EventFrame_"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_Item_Point_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/Item_Point_"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_Items_Substatus_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/Items_Substatus_"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_NotificationContactTemplate_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/NotificationContactTemplate"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_NotificationPlugIn_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/NotificationPlugIn"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_NotificationRuleSubscriber_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/NotificationRuleSubscriber"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_NotificationRuleTemplate_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/NotificationRuleTemplate"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_NotificationRule_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/NotificationRule"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_PointAttribute_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/PointAttribute"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_Point_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/Point"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_SecurityEntry_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/SecurityEntry"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_SecurityIdentity_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/SecurityIdentity"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_SecurityMapping_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/SecurityMapping"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_SecurityRights_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/SecurityRights"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_StreamSummaries_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/StreamSummaries"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_StreamUpdatesRegister_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/StreamUpdatesRegister"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_StreamUpdatesRetrieve_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/StreamUpdatesRetrieve"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_StreamValue_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/StreamValue"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_StreamValues_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/StreamValues"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_Substatus_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/Substatus"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_SummaryValue_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/SummaryValue"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_TableCategory_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/TableCategory"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_Table_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/Table"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_TimeRulePlugIn_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/TimeRulePlugIn"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_UnitClass_:
      properties:
        Items:
          items:
            $ref: "#/components/schemas/UnitClass"
          type: array
        Links:
          $ref: "#/components/schemas/PaginationLinks"
      type: object
    Items_string_:
      properties:
        Items:
          items:
            type: string
          type: array
      type: object
