openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Policy Troubleshooter
  version: v1beta
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://policytroubleshooter.googleapis.com/$discovery/rest?version=v1beta
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: policytroubleshooter
externalDocs:
  url: https://cloud.google.com/iam/
tags:
  - name: iam
paths:
  /v1beta/iam:troubleshoot:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Perform a check on whether a member is granted a permission
        on a resource and how that grant/deny is determined accordinga
        to the resource's effective IAM policy interpretation.
      operationId: policytroubleshooter.iam.troubleshoot
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudPolicytroubleshooterV1betaTrou\
                bleshootIamPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GoogleCloudPolicytroubleshooterV1betaTr\
                  oubleshootIamPolicyResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - iam
servers:
  - url: https://policytroubleshooter.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
  schemas:
    GoogleCloudPolicytroubleshooterV1betaAccessTuple:
      description: |-
        AccessTuple defines information required for checking an access attempt.
        In other words, this is the tuple given to `CheckAccess`.
      properties:
        fullResourceName:
          description: >-
            Required. A full resource name according to

            https://cloud.google.com/apis/design/resource_names. This is the full

            resource name of the resource that access is checked against.
          type: string
        permission:
          description: >-
            Required. The Cloud IAM permission under which defines the kind of
            access

            being explained. Example: "resourcemanager.projects.get" would explain

            if and why the principal has the resourcemanager.projects.get permission

            on the resource specified in full_resource_name declared in this structure.

            See https://cloud.google.com/iam/docs/testing-permissions
          type: string
        principal:
          description: >-
            Required. The principal on behalf of who the access is explained
            for.

            The format is one of the principal's email addresses associated with

            its gaia account. It must be an account that can appear as an actor.

            For example groups are not supported. Currently, service accounts, users

            are supported.
          type: string
      type: object
    GoogleCloudPolicytroubleshooterV1betaBindingExplanation:
      description: Binding Explanation.
      properties:
        access:
          description: "REQUIRED: Access decision for this binding."
          enum:
            - ACCESS_STATE_UNSPECIFIED
            - GRANTED
            - NOT_GRANTED
            - UNKNOWN_CONDITIONAL
            - UNKNOWN_INFO_DENIED
          type: string
        condition:
          $ref: "#/components/schemas/GoogleTypeExpr"
        memberships:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudPolicytroubleshooterV1betaBindin\
              gExplanationAnnotatedMembership"
          description: |-
            For each member in the binding, provides information
            whether or not the principal from the request is included
            in the member by which the CheckResult is keyed.
            May indicate that the caller has no access to this information.
            example key: 'group:cloud-iam-assist-eng@google.com'
            example value '{NOT_GRANTED, HIGH}
          type: object
        relevance:
          description: >-
            Bubbles up role_permission level relavance to BindingExplanation
            object.

            If role permission is NORMAL, then binding relevance is NORMAL.

            If role permission is HIGH, then binding relevance is HIGH.
          enum:
            - HEURISTIC_RELEVANCE_UNSPECIFIED
            - NORMAL
            - HIGH
          type: string
        role:
          description: |-
            The role that this binding grants in the policy.
            for example "roles/compute.serviceAgent"
          type: string
        rolePermission:
          description: Whether the role of this binding contains the checked permission
          enum:
            - ROLE_PERMISSION_UNSPECIFIED
            - ROLE_PERMISSION_INCLUDED
            - ROLE_PERMISSION_NOT_INCLUDED
            - ROLE_PERMISSION_UNKNOWN_INFO_DENIED
          type: string
        rolePermissionRelevance:
          enum:
            - HEURISTIC_RELEVANCE_UNSPECIFIED
            - NORMAL
            - HIGH
          type: string
      type: object
    GoogleCloudPolicytroubleshooterV1betaBindingExplanationAnnotatedMembership:
      properties:
        membership:
          enum:
            - MEMBERSHIP_UNSPECIFIED
            - MEMBERSHIP_INCLUDED
            - MEMBERSHIP_NOT_INCLUDED
            - MEMBERSHIP_UNKNOWN_INFO_DENIED
            - MEMBERSHIP_UNKNOWN_UNSUPPORTED
          type: string
        relevance:
          enum:
            - HEURISTIC_RELEVANCE_UNSPECIFIED
            - NORMAL
            - HIGH
          type: string
      type: object
    GoogleCloudPolicytroubleshooterV1betaExplainedPolicy:
      description: |-
        An explained IAM policy combines the raw policy in the context
        of the resource which it is attached to along with detailed
        evaluation on the evaluation parameters provided through the request.
      properties:
        access:
          description: Access decision for this section of the resource's effective policy.
          enum:
            - ACCESS_STATE_UNSPECIFIED
            - GRANTED
            - NOT_GRANTED
            - UNKNOWN_CONDITIONAL
            - UNKNOWN_INFO_DENIED
          type: string
        bindingExplanations:
          description: |-
            Detailed binding evaluation explanations provide information
            about how each binding contributes to the principal's
            access or the lack thereof.
          items:
            $ref: "#/components/schemas/GoogleCloudPolicytroubleshooterV1betaBindin\
              gExplanation"
          type: array
        fullResourceName:
          description: Resource that this section of the effective policy attaches to.
          type: string
        policy:
          $ref: "#/components/schemas/GoogleIamV1Policy"
        relevance:
          description: Relevance of this Policy.
          enum:
            - HEURISTIC_RELEVANCE_UNSPECIFIED
            - NORMAL
            - HIGH
          type: string
      type: object
    GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyRequest:
      description: TroubleshootIamPolicyRequest is used in TroubleshootIamPolicy
      properties:
        accessTuple:
          $ref: "#/components/schemas/GoogleCloudPolicytroubleshooterV1betaAccessTu\
            ple"
      type: object
    GoogleCloudPolicytroubleshooterV1betaTroubleshootIamPolicyResponse:
      description: TroubleshootIamPolicyResponse is used in TroubleshootIamPolicy.
      properties:
        access:
          description: |-
            Reflects whether the probed access was granted, denied
            or ultimately could not be decided from the caller's point of view.
          enum:
            - ACCESS_STATE_UNSPECIFIED
            - GRANTED
            - NOT_GRANTED
            - UNKNOWN_CONDITIONAL
            - UNKNOWN_INFO_DENIED
          type: string
        explainedPolicies:
          description: |-
            List of explained policies.
            Each explanation corresponds to one policy along the ancestry path.
          items:
            $ref: "#/components/schemas/GoogleCloudPolicytroubleshooterV1betaExplai\
              nedPolicy"
          type: array
      type: object
    GoogleIamV1AuditConfig:
      description: >-
        Specifies the audit configuration for a service.

        The configuration determines which permission types are logged, and what

        identities, if any, are exempted from logging.

        An AuditConfig must have one or more AuditLogConfigs.


        If there are AuditConfigs for both `allServices` and a specific service,

        the union of the two AuditConfigs is used for that service: the log_types

        specified in each AuditConfig are enabled, and the exempted_members in each

        AuditLogConfig are exempted.


        Example Policy with multiple AuditConfigs:

            {
              "audit_configs": [
                {
                  "service": "allServices"
                  "audit_log_configs": [
                    {
                      "log_type": "DATA_READ",
                      "exempted_members": [
                        "user:jose@example.com"
                      ]
                    },
                    {
                      "log_type": "DATA_WRITE",
                    },
                    {
                      "log_type": "ADMIN_READ",
                    }
                  ]
                },
                {
                  "service": "sampleservice.googleapis.com"
                  "audit_log_configs": [
                    {
                      "log_type": "DATA_READ",
                    },
                    {
                      "log_type": "DATA_WRITE",
                      "exempted_members": [
                        "user:aliya@example.com"
                      ]
                    }
                  ]
                }
              ]
            }

        For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ

        logging. It also exempts jose@example.com from DATA_READ logging, and

        aliya@example.com from DATA_WRITE logging.
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: "#/components/schemas/GoogleIamV1AuditLogConfig"
          type: array
        service:
          description: |-
            Specifies a service that will be enabled for audit logging.
            For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
      type: object
    GoogleIamV1AuditLogConfig:
      description: |-
        Provides the configuration for logging a type of permissions.
        Example:

            {
              "audit_log_configs": [
                {
                  "log_type": "DATA_READ",
                  "exempted_members": [
                    "user:jose@example.com"
                  ]
                },
                {
                  "log_type": "DATA_WRITE",
                }
              ]
            }

        This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        jose@example.com from DATA_READ logging.
      properties:
        exemptedMembers:
          description: |-
            Specifies the identities that do not cause logging for this type of
            permission.
            Follows the same format of Binding.members.
          items:
            type: string
          type: array
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
      type: object
    GoogleIamV1Binding:
      description: Associates `members` with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/GoogleTypeExpr"
        members:
          description: >+
            Specifies the identities requesting access for a Cloud Platform
            resource.

            `members` can have the following values:


            * `allUsers`: A special identifier that represents anyone who is
               on the internet; with or without a Google account.

            * `allAuthenticatedUsers`: A special identifier that represents anyone
               who is authenticated with a Google account or a service account.

            * `user:{emailid}`: An email address that represents a specific Google
               account. For example, `alice@example.com` .


            * `serviceAccount:{emailid}`: An email address that represents a service
               account. For example, `my-other-app@appspot.gserviceaccount.com`.

            * `group:{emailid}`: An email address that represents a Google group.
               For example, `admins@example.com`.


            * `domain:{domain}`: The G Suite domain (primary) that represents all the
               users of that domain. For example, `google.com` or `example.com`.

          items:
            type: string
          type: array
        role:
          description: |-
            Role that is assigned to `members`.
            For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          type: string
      type: object
    GoogleIamV1Policy:
      description: >-
        Defines an Identity and Access Management (IAM) policy. It is used to

        specify access control policies for Cloud Platform resources.



        A `Policy` consists of a list of `bindings`. A `binding` binds a list of

        `members` to a `role`, where the members can be user accounts, Google groups,

        Google domains, and service accounts. A `role` is a named list of permissions

        defined by IAM.


        **JSON Example**

            {
              "bindings": [
                {
                  "role": "roles/owner",
                  "members": [
                    "user:mike@example.com",
                    "group:admins@example.com",
                    "domain:google.com",
                    "serviceAccount:my-other-app@appspot.gserviceaccount.com"
                  ]
                },
                {
                  "role": "roles/viewer",
                  "members": ["user:sean@example.com"]
                }
              ]
            }

        **YAML Example**

            bindings:
            - members:
              - user:mike@example.com
              - group:admins@example.com
              - domain:google.com
              - serviceAccount:my-other-app@appspot.gserviceaccount.com
              role: roles/owner
            - members:
              - user:sean@example.com
              role: roles/viewer


        For a description of IAM and its features, see the

        [IAM developer's guide](https://cloud.google.com/iam/docs).
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: "#/components/schemas/GoogleIamV1AuditConfig"
          type: array
        bindings:
          description: |-
            Associates a list of `members` to a `role`.
            `bindings` with no members will result in an error.
          items:
            $ref: "#/components/schemas/GoogleIamV1Binding"
          type: array
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help

            prevent simultaneous updates of a policy from overwriting each other.

            It is strongly suggested that systems make use of the `etag` in the

            read-modify-write cycle to perform policy updates in order to avoid race

            conditions: An `etag` is returned in the response to `getIamPolicy`, and

            systems are expected to put that etag in the request to `setIamPolicy` to

            ensure that their change will be applied to the same version of the policy.


            If no `etag` is provided in the call to `setIamPolicy`, then the existing

            policy is overwritten.
          format: byte
          type: string
        version:
          description: >-
            Specifies the format of the policy.


            Valid values are 0, 1, and 3. Requests specifying an invalid value will be

            rejected.


            Policies with any conditional bindings must specify version 3. Policies

            without any conditional bindings may specify any valid value or leave the

            field unset.
          format: int32
          type: integer
      type: object
    GoogleTypeExpr:
      description: |-
        Represents an expression text. Example:

            title: "User account presence"
            description: "Determines whether the request has a user account"
            expression: "size(request.user) > 0"
      properties:
        description:
          description: >-
            An optional description of the expression. This is a longer text
            which

            describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: |-
            Textual representation of an expression in
            Common Expression Language syntax.

            The application context of the containing message determines which
            well-known feature set of CEL is supported.
          type: string
        location:
          description: >-
            An optional string indicating the location of the expression for
            error

            reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: |-
            An optional title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
      type: object
