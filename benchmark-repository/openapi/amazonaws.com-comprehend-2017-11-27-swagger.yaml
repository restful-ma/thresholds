openapi: 3.0.0
info:
  version: 2017-11-27
  x-release: v4
  title: Amazon Comprehend
  description: Amazon Comprehend is an AWS service for gaining insight into the content of
    documents. Use these actions to determine the topics contained in your
    documents, the topics they discuss, the predominant sentiment expressed in
    them, the predominant language used, and more.
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: comprehend
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/comprehend-2017-11-27.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/comprehend/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=Comprehend_20171127.BatchDetectDominantLanguage:
    post:
      operationId: BatchDetectDominantLanguage
      description: 'Determines the dominant language of the input text for a batch of
        documents. For a list of languages that Amazon Comprehend can detect,
        see <a
        href="https://docs.aws.amazon.com/comprehend/latest/dg/how-languages.html">Amazon
        Comprehend Supported Languages</a>. '
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchDetectDominantLanguageResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TextSizeLimitExceededException"
        "482":
          description: BatchSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchSizeLimitExceededException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.BatchDetectDominantLanguage
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDetectDominantLanguageRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.BatchDetectEntities:
    post:
      operationId: BatchDetectEntities
      description: "Inspects the text of a batch of documents for named entities and
        returns information about them. For more information about named
        entities, see <a>how-entities</a> "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchDetectEntitiesResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TextSizeLimitExceededException"
        "482":
          description: UnsupportedLanguageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedLanguageException"
        "483":
          description: BatchSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchSizeLimitExceededException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.BatchDetectEntities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDetectEntitiesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.BatchDetectKeyPhrases:
    post:
      operationId: BatchDetectKeyPhrases
      description: Detects the key noun phrases found in a batch of documents.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchDetectKeyPhrasesResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TextSizeLimitExceededException"
        "482":
          description: UnsupportedLanguageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedLanguageException"
        "483":
          description: BatchSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchSizeLimitExceededException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.BatchDetectKeyPhrases
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDetectKeyPhrasesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.BatchDetectSentiment:
    post:
      operationId: BatchDetectSentiment
      description: Inspects a batch of documents and returns an inference of the prevailing
        sentiment, <code>POSITIVE</code>, <code>NEUTRAL</code>,
        <code>MIXED</code>, or <code>NEGATIVE</code>, in each one.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchDetectSentimentResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TextSizeLimitExceededException"
        "482":
          description: UnsupportedLanguageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedLanguageException"
        "483":
          description: BatchSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchSizeLimitExceededException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.BatchDetectSentiment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDetectSentimentRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.BatchDetectSyntax:
    post:
      operationId: BatchDetectSyntax
      description: Inspects the text of a batch of documents for the syntax and part of
        speech of the words in the document and returns information about them.
        For more information, see <a>how-syntax</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchDetectSyntaxResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TextSizeLimitExceededException"
        "482":
          description: UnsupportedLanguageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedLanguageException"
        "483":
          description: BatchSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchSizeLimitExceededException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.BatchDetectSyntax
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDetectSyntaxRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.CreateDocumentClassifier:
    post:
      operationId: CreateDocumentClassifier
      description: Creates a new document classifier that you can use to categorize
        documents. To create a classifier you provide a set of training
        documents that labeled with the categories that you want to use. After
        the classifier is trained you can use it to categorize a set of labeled
        documents into the categories. For more information, see
        <a>how-document-classification</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDocumentClassifierResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "482":
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "483":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "484":
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceededException"
        "485":
          description: UnsupportedLanguageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedLanguageException"
        "486":
          description: KmsKeyValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KmsKeyValidationException"
        "487":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.CreateDocumentClassifier
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDocumentClassifierRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.CreateEntityRecognizer:
    post:
      operationId: CreateEntityRecognizer
      description: "Creates an entity recognizer using submitted files. After your
        <code>CreateEntityRecognizer</code> request is submitted, you can check
        job status using the API. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateEntityRecognizerResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "482":
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "483":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "484":
          description: ResourceLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceLimitExceededException"
        "485":
          description: UnsupportedLanguageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedLanguageException"
        "486":
          description: KmsKeyValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KmsKeyValidationException"
        "487":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.CreateEntityRecognizer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEntityRecognizerRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.DeleteDocumentClassifier:
    post:
      operationId: DeleteDocumentClassifier
      description: <p>Deletes a previously created document classifier</p> <p>Only those
        classifiers that are in terminated states (IN_ERROR, TRAINED) will be
        deleted. If an active inference job is using the model, a
        <code>ResourceInUseException</code> will be returned.</p> <p>This is an
        asynchronous action that puts the classifier into a DELETING state, and
        it is then removed by a background job. Once removed, the classifier
        disappears from your account and is no longer available for use. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDocumentClassifierResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
        "484":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DeleteDocumentClassifier
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDocumentClassifierRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.DeleteEntityRecognizer:
    post:
      operationId: DeleteEntityRecognizer
      description: <p>Deletes an entity recognizer.</p> <p>Only those recognizers that are
        in terminated states (IN_ERROR, TRAINED) will be deleted. If an active
        inference job is using the model, a <code>ResourceInUseException</code>
        will be returned.</p> <p>This is an asynchronous action that puts the
        recognizer into a DELETING state, and it is then removed by a background
        job. Once removed, the recognizer disappears from your account and is no
        longer available for use. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteEntityRecognizerResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
        "484":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DeleteEntityRecognizer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteEntityRecognizerRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.DescribeDocumentClassificationJob:
    post:
      operationId: DescribeDocumentClassificationJob
      description: Gets the properties associated with a document classification job. Use
        this operation to get the status of a classification job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDocumentClassificationJobRespon\
                  se"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DescribeDocumentClassificationJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeDocumentClassificationJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.DescribeDocumentClassifier:
    post:
      operationId: DescribeDocumentClassifier
      description: Gets the properties associated with a document classifier.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDocumentClassifierResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DescribeDocumentClassifier
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeDocumentClassifierRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.DescribeDominantLanguageDetectionJob:
    post:
      operationId: DescribeDominantLanguageDetectionJob
      description: Gets the properties associated with a dominant language detection job.
        Use this operation to get the status of a detection job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDominantLanguageDetectionJobRes\
                  ponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobNotFoundException"
        "482":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DescribeDominantLanguageDetectionJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeDominantLanguageDetectionJobReque\
                st"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.DescribeEntitiesDetectionJob:
    post:
      operationId: DescribeEntitiesDetectionJob
      description: Gets the properties associated with an entities detection job. Use this
        operation to get the status of a detection job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeEntitiesDetectionJobResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobNotFoundException"
        "482":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DescribeEntitiesDetectionJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeEntitiesDetectionJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.DescribeEntityRecognizer:
    post:
      operationId: DescribeEntityRecognizer
      description: Provides details about an entity recognizer including status, S3 buckets
        containing training data, recognizer metadata, metrics, and so on.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeEntityRecognizerResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DescribeEntityRecognizer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeEntityRecognizerRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.DescribeKeyPhrasesDetectionJob:
    post:
      operationId: DescribeKeyPhrasesDetectionJob
      description: Gets the properties associated with a key phrases detection job. Use
        this operation to get the status of a detection job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeKeyPhrasesDetectionJobResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobNotFoundException"
        "482":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DescribeKeyPhrasesDetectionJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeKeyPhrasesDetectionJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.DescribeSentimentDetectionJob:
    post:
      operationId: DescribeSentimentDetectionJob
      description: Gets the properties associated with a sentiment detection job. Use this
        operation to get the status of a detection job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeSentimentDetectionJobResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobNotFoundException"
        "482":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DescribeSentimentDetectionJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeSentimentDetectionJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.DescribeTopicsDetectionJob:
    post:
      operationId: DescribeTopicsDetectionJob
      description: Gets the properties associated with a topic detection job. Use this
        operation to get the status of a detection job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTopicsDetectionJobResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobNotFoundException"
        "482":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DescribeTopicsDetectionJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeTopicsDetectionJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.DetectDominantLanguage:
    post:
      operationId: DetectDominantLanguage
      description: 'Determines the dominant language of the input text. For a list of
        languages that Amazon Comprehend can detect, see <a
        href="https://docs.aws.amazon.com/comprehend/latest/dg/how-languages.html">Amazon
        Comprehend Supported Languages</a>. '
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DetectDominantLanguageResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TextSizeLimitExceededException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DetectDominantLanguage
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DetectDominantLanguageRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.DetectEntities:
    post:
      operationId: DetectEntities
      description: "Inspects text for named entities, and returns information about them.
        For more information, about named entities, see <a>how-entities</a>. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DetectEntitiesResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TextSizeLimitExceededException"
        "482":
          description: UnsupportedLanguageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedLanguageException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DetectEntities
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DetectEntitiesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.DetectKeyPhrases:
    post:
      operationId: DetectKeyPhrases
      description: "Detects the key noun phrases found in the text. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DetectKeyPhrasesResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TextSizeLimitExceededException"
        "482":
          description: UnsupportedLanguageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedLanguageException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DetectKeyPhrases
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DetectKeyPhrasesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.DetectSentiment:
    post:
      operationId: DetectSentiment
      description: "Inspects text and returns an inference of the prevailing sentiment
        (<code>POSITIVE</code>, <code>NEUTRAL</code>, <code>MIXED</code>, or
        <code>NEGATIVE</code>). "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DetectSentimentResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TextSizeLimitExceededException"
        "482":
          description: UnsupportedLanguageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedLanguageException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DetectSentiment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DetectSentimentRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.DetectSyntax:
    post:
      operationId: DetectSyntax
      description: Inspects text for syntax and the part of speech of words in the
        document. For more information, <a>how-syntax</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DetectSyntaxResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TextSizeLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TextSizeLimitExceededException"
        "482":
          description: UnsupportedLanguageException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedLanguageException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.DetectSyntax
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DetectSyntaxRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.ListDocumentClassificationJobs:
    post:
      operationId: ListDocumentClassificationJobs
      description: Gets a list of the documentation classification jobs that you have
        submitted.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDocumentClassificationJobsResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: InvalidFilterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilterException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.ListDocumentClassificationJobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListDocumentClassificationJobsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.ListDocumentClassifiers:
    post:
      operationId: ListDocumentClassifiers
      description: Gets a list of the document classifiers that you have created.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDocumentClassifiersResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: InvalidFilterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilterException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.ListDocumentClassifiers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListDocumentClassifiersRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.ListDominantLanguageDetectionJobs:
    post:
      operationId: ListDominantLanguageDetectionJobs
      description: Gets a list of the dominant language detection jobs that you have
        submitted.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDominantLanguageDetectionJobsRespon\
                  se"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: InvalidFilterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilterException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.ListDominantLanguageDetectionJobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListDominantLanguageDetectionJobsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.ListEntitiesDetectionJobs:
    post:
      operationId: ListEntitiesDetectionJobs
      description: Gets a list of the entity detection jobs that you have submitted.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEntitiesDetectionJobsResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: InvalidFilterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilterException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.ListEntitiesDetectionJobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListEntitiesDetectionJobsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.ListEntityRecognizers:
    post:
      operationId: ListEntityRecognizers
      description: <p>Gets a list of the properties of all entity recognizers that you
        created, including recognizers currently in training. Allows you to
        filter the list of recognizers based on criteria such as status and
        submission time. This call returns up to 500 entity recognizers in the
        list, with a default number of 100 recognizers in the list.</p> <p>The
        results of this list are not in any particular order. Please get the
        list and sort locally if needed.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEntityRecognizersResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: InvalidFilterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilterException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.ListEntityRecognizers
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListEntityRecognizersRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.ListKeyPhrasesDetectionJobs:
    post:
      operationId: ListKeyPhrasesDetectionJobs
      description: Get a list of key phrase detection jobs that you have submitted.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListKeyPhrasesDetectionJobsResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: InvalidFilterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilterException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.ListKeyPhrasesDetectionJobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListKeyPhrasesDetectionJobsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.ListSentimentDetectionJobs:
    post:
      operationId: ListSentimentDetectionJobs
      description: Gets a list of sentiment detection jobs that you have submitted.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSentimentDetectionJobsResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: InvalidFilterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilterException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.ListSentimentDetectionJobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListSentimentDetectionJobsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: "Lists all tags associated with a given Amazon Comprehend resource. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.ListTagsForResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagsForResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.ListTopicsDetectionJobs:
    post:
      operationId: ListTopicsDetectionJobs
      description: Gets a list of the topic detection jobs that you have submitted.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTopicsDetectionJobsResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: InvalidFilterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFilterException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.ListTopicsDetectionJobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTopicsDetectionJobsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.StartDocumentClassificationJob:
    post:
      operationId: StartDocumentClassificationJob
      description: Starts an asynchronous document classification job. Use the operation to
        track the progress of the job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartDocumentClassificationJobResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
        "484":
          description: KmsKeyValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KmsKeyValidationException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StartDocumentClassificationJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartDocumentClassificationJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.StartDominantLanguageDetectionJob:
    post:
      operationId: StartDominantLanguageDetectionJob
      description: Starts an asynchronous dominant language detection job for a collection
        of documents. Use the operation to track the status of a job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartDominantLanguageDetectionJobRespon\
                  se"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: KmsKeyValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KmsKeyValidationException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StartDominantLanguageDetectionJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartDominantLanguageDetectionJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.StartEntitiesDetectionJob:
    post:
      operationId: StartEntitiesDetectionJob
      description: <p>Starts an asynchronous entity detection job for a collection of
        documents. Use the operation to track the status of a job.</p> <p>This
        API can be used for either standard entity detection or custom entity
        recognition. In order to be used for custom entity recognition, the
        optional <code>EntityRecognizerArn</code> must be used in order to
        provide access to the recognizer being used to detect the custom
        entity.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartEntitiesDetectionJobResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
        "484":
          description: KmsKeyValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KmsKeyValidationException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StartEntitiesDetectionJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartEntitiesDetectionJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.StartKeyPhrasesDetectionJob:
    post:
      operationId: StartKeyPhrasesDetectionJob
      description: Starts an asynchronous key phrase detection job for a collection of
        documents. Use the operation to track the status of a job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartKeyPhrasesDetectionJobResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: KmsKeyValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KmsKeyValidationException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StartKeyPhrasesDetectionJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartKeyPhrasesDetectionJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.StartSentimentDetectionJob:
    post:
      operationId: StartSentimentDetectionJob
      description: Starts an asynchronous sentiment detection job for a collection of
        documents. use the operation to track the status of a job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartSentimentDetectionJobResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: KmsKeyValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KmsKeyValidationException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StartSentimentDetectionJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartSentimentDetectionJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.StartTopicsDetectionJob:
    post:
      operationId: StartTopicsDetectionJob
      description: Starts an asynchronous topic detection job. Use the
        <code>DescribeTopicDetectionJob</code> operation to track the status of
        a job.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartTopicsDetectionJobResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: KmsKeyValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KmsKeyValidationException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StartTopicsDetectionJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartTopicsDetectionJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.StopDominantLanguageDetectionJob:
    post:
      operationId: StopDominantLanguageDetectionJob
      description: <p>Stops a dominant language detection job in progress.</p> <p>If the
        job state is <code>IN_PROGRESS</code> the job is marked for termination
        and put into the <code>STOP_REQUESTED</code> state. If the job completes
        before it can be stopped, it is put into the <code>COMPLETED</code>
        state; otherwise the job is stopped and put into the
        <code>STOPPED</code> state.</p> <p>If the job is in the
        <code>COMPLETED</code> or <code>FAILED</code> state when you call the
        <code>StopDominantLanguageDetectionJob</code> operation, the operation
        returns a 400 Internal Request Exception. </p> <p>When a job is stopped,
        any documents already processed are written to the output location.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopDominantLanguageDetectionJobResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StopDominantLanguageDetectionJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopDominantLanguageDetectionJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.StopEntitiesDetectionJob:
    post:
      operationId: StopEntitiesDetectionJob
      description: <p>Stops an entities detection job in progress.</p> <p>If the job state
        is <code>IN_PROGRESS</code> the job is marked for termination and put
        into the <code>STOP_REQUESTED</code> state. If the job completes before
        it can be stopped, it is put into the <code>COMPLETED</code> state;
        otherwise the job is stopped and put into the <code>STOPPED</code>
        state.</p> <p>If the job is in the <code>COMPLETED</code> or
        <code>FAILED</code> state when you call the
        <code>StopDominantLanguageDetectionJob</code> operation, the operation
        returns a 400 Internal Request Exception. </p> <p>When a job is stopped,
        any documents already processed are written to the output location.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopEntitiesDetectionJobResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StopEntitiesDetectionJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopEntitiesDetectionJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.StopKeyPhrasesDetectionJob:
    post:
      operationId: StopKeyPhrasesDetectionJob
      description: <p>Stops a key phrases detection job in progress.</p> <p>If the job
        state is <code>IN_PROGRESS</code> the job is marked for termination and
        put into the <code>STOP_REQUESTED</code> state. If the job completes
        before it can be stopped, it is put into the <code>COMPLETED</code>
        state; otherwise the job is stopped and put into the
        <code>STOPPED</code> state.</p> <p>If the job is in the
        <code>COMPLETED</code> or <code>FAILED</code> state when you call the
        <code>StopDominantLanguageDetectionJob</code> operation, the operation
        returns a 400 Internal Request Exception. </p> <p>When a job is stopped,
        any documents already processed are written to the output location.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopKeyPhrasesDetectionJobResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StopKeyPhrasesDetectionJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopKeyPhrasesDetectionJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.StopSentimentDetectionJob:
    post:
      operationId: StopSentimentDetectionJob
      description: <p>Stops a sentiment detection job in progress.</p> <p>If the job state
        is <code>IN_PROGRESS</code> the job is marked for termination and put
        into the <code>STOP_REQUESTED</code> state. If the job completes before
        it can be stopped, it is put into the <code>COMPLETED</code> state;
        otherwise the job is be stopped and put into the <code>STOPPED</code>
        state.</p> <p>If the job is in the <code>COMPLETED</code> or
        <code>FAILED</code> state when you call the
        <code>StopDominantLanguageDetectionJob</code> operation, the operation
        returns a 400 Internal Request Exception. </p> <p>When a job is stopped,
        any documents already processed are written to the output location.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopSentimentDetectionJobResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: JobNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StopSentimentDetectionJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopSentimentDetectionJobRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.StopTrainingDocumentClassifier:
    post:
      operationId: StopTrainingDocumentClassifier
      description: <p>Stops a document classifier training job while in progress.</p> <p>If
        the training job state is <code>TRAINING</code>, the job is marked for
        termination and put into the <code>STOP_REQUESTED</code> state. If the
        training job completes before it can be stopped, it is put into the
        <code>TRAINED</code>; otherwise the training job is stopped and put into
        the <code>STOPPED</code> state and the service sends back an HTTP 200
        response with an empty HTTP body. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopTrainingDocumentClassifierResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StopTrainingDocumentClassifier
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopTrainingDocumentClassifierRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.StopTrainingEntityRecognizer:
    post:
      operationId: StopTrainingEntityRecognizer
      description: <p>Stops an entity recognizer training job while in progress.</p> <p>If
        the training job state is <code>TRAINING</code>, the job is marked for
        termination and put into the <code>STOP_REQUESTED</code> state. If the
        training job completes before it can be stopped, it is put into the
        <code>TRAINED</code>; otherwise the training job is stopped and putted
        into the <code>STOPPED</code> state and the service sends back an HTTP
        200 response with an empty HTTP body.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopTrainingEntityRecognizerResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.StopTrainingEntityRecognizer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopTrainingEntityRecognizerRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.TagResource:
    post:
      operationId: TagResource
      description: 'Associates a specific tag with an Amazon Comprehend resource. A tag is
        a key-value pair that adds as a metadata to a resource used by Amazon
        Comprehend. For example, a tag with "Sales" as the key might be added to
        a resource to indicate its use by the sales department. '
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.TagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=Comprehend_20171127.UntagResource:
    post:
      operationId: UntagResource
      description: "Removes a specific tag associated with an Amazon Comprehend resource. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: TooManyTagKeysException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTagKeysException"
        "481":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "482":
          description: ConcurrentModificationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentModificationException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - Comprehend_20171127.UntagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UntagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://comprehend.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Comprehend multi-region endpoint
  - url: https://comprehend.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon Comprehend multi-region endpoint
  - url: http://comprehend.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Comprehend endpoint for China (Beijing) and China (Ningxia)
  - url: https://comprehend.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon Comprehend endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    BatchDetectDominantLanguageResponse:
      type: object
      required:
        - ResultList
        - ErrorList
      properties:
        ResultList:
          $ref: "#/components/schemas/ListOfDetectDominantLanguageResult"
        ErrorList:
          $ref: "#/components/schemas/BatchItemErrorList"
    BatchDetectDominantLanguageRequest:
      type: object
      required:
        - TextList
      properties:
        TextList:
          $ref: "#/components/schemas/StringList"
    InvalidRequestException: {}
    TextSizeLimitExceededException: {}
    BatchSizeLimitExceededException: {}
    InternalServerException: {}
    BatchDetectEntitiesResponse:
      type: object
      required:
        - ResultList
        - ErrorList
      properties:
        ResultList:
          $ref: "#/components/schemas/ListOfDetectEntitiesResult"
        ErrorList:
          $ref: "#/components/schemas/BatchItemErrorList"
    BatchDetectEntitiesRequest:
      type: object
      required:
        - TextList
        - LanguageCode
      properties:
        TextList:
          $ref: "#/components/schemas/StringList"
        LanguageCode:
          $ref: "#/components/schemas/LanguageCode"
    UnsupportedLanguageException: {}
    BatchDetectKeyPhrasesResponse:
      type: object
      required:
        - ResultList
        - ErrorList
      properties:
        ResultList:
          $ref: "#/components/schemas/ListOfDetectKeyPhrasesResult"
        ErrorList:
          $ref: "#/components/schemas/BatchItemErrorList"
    BatchDetectKeyPhrasesRequest:
      type: object
      required:
        - TextList
        - LanguageCode
      properties:
        TextList:
          $ref: "#/components/schemas/StringList"
        LanguageCode:
          $ref: "#/components/schemas/LanguageCode"
    BatchDetectSentimentResponse:
      type: object
      required:
        - ResultList
        - ErrorList
      properties:
        ResultList:
          $ref: "#/components/schemas/ListOfDetectSentimentResult"
        ErrorList:
          $ref: "#/components/schemas/BatchItemErrorList"
    BatchDetectSentimentRequest:
      type: object
      required:
        - TextList
        - LanguageCode
      properties:
        TextList:
          $ref: "#/components/schemas/StringList"
        LanguageCode:
          $ref: "#/components/schemas/LanguageCode"
    BatchDetectSyntaxResponse:
      type: object
      required:
        - ResultList
        - ErrorList
      properties:
        ResultList:
          $ref: "#/components/schemas/ListOfDetectSyntaxResult"
        ErrorList:
          $ref: "#/components/schemas/BatchItemErrorList"
    BatchDetectSyntaxRequest:
      type: object
      required:
        - TextList
        - LanguageCode
      properties:
        TextList:
          $ref: "#/components/schemas/StringList"
        LanguageCode:
          $ref: "#/components/schemas/SyntaxLanguageCode"
    CreateDocumentClassifierResponse:
      type: object
      properties:
        DocumentClassifierArn:
          $ref: "#/components/schemas/DocumentClassifierArn"
    CreateDocumentClassifierRequest:
      type: object
      required:
        - DocumentClassifierName
        - DataAccessRoleArn
        - InputDataConfig
        - LanguageCode
      properties:
        DocumentClassifierName:
          $ref: "#/components/schemas/ComprehendArnName"
        DataAccessRoleArn:
          $ref: "#/components/schemas/IamRoleArn"
        Tags:
          $ref: "#/components/schemas/TagList"
        InputDataConfig:
          $ref: "#/components/schemas/DocumentClassifierInputDataConfig"
        OutputDataConfig:
          $ref: "#/components/schemas/DocumentClassifierOutputDataConfig"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestTokenString"
        LanguageCode:
          $ref: "#/components/schemas/LanguageCode"
        VolumeKmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
    ResourceInUseException: {}
    TooManyTagsException: {}
    TooManyRequestsException: {}
    ResourceLimitExceededException: {}
    KmsKeyValidationException: {}
    CreateEntityRecognizerResponse:
      type: object
      properties:
        EntityRecognizerArn:
          $ref: "#/components/schemas/EntityRecognizerArn"
    CreateEntityRecognizerRequest:
      type: object
      required:
        - RecognizerName
        - DataAccessRoleArn
        - InputDataConfig
        - LanguageCode
      properties:
        RecognizerName:
          $ref: "#/components/schemas/ComprehendArnName"
        DataAccessRoleArn:
          $ref: "#/components/schemas/IamRoleArn"
        Tags:
          $ref: "#/components/schemas/TagList"
        InputDataConfig:
          $ref: "#/components/schemas/EntityRecognizerInputDataConfig"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestTokenString"
        LanguageCode:
          $ref: "#/components/schemas/LanguageCode"
        VolumeKmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
    DeleteDocumentClassifierResponse:
      type: object
      properties: {}
    DeleteDocumentClassifierRequest:
      type: object
      required:
        - DocumentClassifierArn
      properties:
        DocumentClassifierArn:
          $ref: "#/components/schemas/DocumentClassifierArn"
    ResourceNotFoundException: {}
    ResourceUnavailableException: {}
    DeleteEntityRecognizerResponse:
      type: object
      properties: {}
    DeleteEntityRecognizerRequest:
      type: object
      required:
        - EntityRecognizerArn
      properties:
        EntityRecognizerArn:
          $ref: "#/components/schemas/EntityRecognizerArn"
    DescribeDocumentClassificationJobResponse:
      type: object
      properties:
        DocumentClassificationJobProperties:
          $ref: "#/components/schemas/DocumentClassificationJobProperties"
    DescribeDocumentClassificationJobRequest:
      type: object
      required:
        - JobId
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
    JobNotFoundException: {}
    DescribeDocumentClassifierResponse:
      type: object
      properties:
        DocumentClassifierProperties:
          $ref: "#/components/schemas/DocumentClassifierProperties"
    DescribeDocumentClassifierRequest:
      type: object
      required:
        - DocumentClassifierArn
      properties:
        DocumentClassifierArn:
          $ref: "#/components/schemas/DocumentClassifierArn"
    DescribeDominantLanguageDetectionJobResponse:
      type: object
      properties:
        DominantLanguageDetectionJobProperties:
          $ref: "#/components/schemas/DominantLanguageDetectionJobProperties"
    DescribeDominantLanguageDetectionJobRequest:
      type: object
      required:
        - JobId
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
    DescribeEntitiesDetectionJobResponse:
      type: object
      properties:
        EntitiesDetectionJobProperties:
          $ref: "#/components/schemas/EntitiesDetectionJobProperties"
    DescribeEntitiesDetectionJobRequest:
      type: object
      required:
        - JobId
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
    DescribeEntityRecognizerResponse:
      type: object
      properties:
        EntityRecognizerProperties:
          $ref: "#/components/schemas/EntityRecognizerProperties"
    DescribeEntityRecognizerRequest:
      type: object
      required:
        - EntityRecognizerArn
      properties:
        EntityRecognizerArn:
          $ref: "#/components/schemas/EntityRecognizerArn"
    DescribeKeyPhrasesDetectionJobResponse:
      type: object
      properties:
        KeyPhrasesDetectionJobProperties:
          $ref: "#/components/schemas/KeyPhrasesDetectionJobProperties"
    DescribeKeyPhrasesDetectionJobRequest:
      type: object
      required:
        - JobId
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
    DescribeSentimentDetectionJobResponse:
      type: object
      properties:
        SentimentDetectionJobProperties:
          $ref: "#/components/schemas/SentimentDetectionJobProperties"
    DescribeSentimentDetectionJobRequest:
      type: object
      required:
        - JobId
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
    DescribeTopicsDetectionJobResponse:
      type: object
      properties:
        TopicsDetectionJobProperties:
          $ref: "#/components/schemas/TopicsDetectionJobProperties"
    DescribeTopicsDetectionJobRequest:
      type: object
      required:
        - JobId
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
    DetectDominantLanguageResponse:
      type: object
      properties:
        Languages:
          $ref: "#/components/schemas/ListOfDominantLanguages"
    DetectDominantLanguageRequest:
      type: object
      required:
        - Text
      properties:
        Text:
          $ref: "#/components/schemas/String"
    DetectEntitiesResponse:
      type: object
      properties:
        Entities:
          $ref: "#/components/schemas/ListOfEntities"
    DetectEntitiesRequest:
      type: object
      required:
        - Text
        - LanguageCode
      properties:
        Text:
          $ref: "#/components/schemas/String"
        LanguageCode:
          $ref: "#/components/schemas/LanguageCode"
    DetectKeyPhrasesResponse:
      type: object
      properties:
        KeyPhrases:
          $ref: "#/components/schemas/ListOfKeyPhrases"
    DetectKeyPhrasesRequest:
      type: object
      required:
        - Text
        - LanguageCode
      properties:
        Text:
          $ref: "#/components/schemas/String"
        LanguageCode:
          $ref: "#/components/schemas/LanguageCode"
    DetectSentimentResponse:
      type: object
      properties:
        Sentiment:
          $ref: "#/components/schemas/SentimentType"
        SentimentScore:
          $ref: "#/components/schemas/SentimentScore"
    DetectSentimentRequest:
      type: object
      required:
        - Text
        - LanguageCode
      properties:
        Text:
          $ref: "#/components/schemas/String"
        LanguageCode:
          $ref: "#/components/schemas/LanguageCode"
    DetectSyntaxResponse:
      type: object
      properties:
        SyntaxTokens:
          $ref: "#/components/schemas/ListOfSyntaxTokens"
    DetectSyntaxRequest:
      type: object
      required:
        - Text
        - LanguageCode
      properties:
        Text:
          $ref: "#/components/schemas/String"
        LanguageCode:
          $ref: "#/components/schemas/SyntaxLanguageCode"
    ListDocumentClassificationJobsResponse:
      type: object
      properties:
        DocumentClassificationJobPropertiesList:
          $ref: "#/components/schemas/DocumentClassificationJobPropertiesList"
        NextToken:
          $ref: "#/components/schemas/String"
    ListDocumentClassificationJobsRequest:
      type: object
      properties:
        Filter:
          $ref: "#/components/schemas/DocumentClassificationJobFilter"
        NextToken:
          $ref: "#/components/schemas/String"
        MaxResults:
          $ref: "#/components/schemas/MaxResultsInteger"
    InvalidFilterException: {}
    ListDocumentClassifiersResponse:
      type: object
      properties:
        DocumentClassifierPropertiesList:
          $ref: "#/components/schemas/DocumentClassifierPropertiesList"
        NextToken:
          $ref: "#/components/schemas/String"
    ListDocumentClassifiersRequest:
      type: object
      properties:
        Filter:
          $ref: "#/components/schemas/DocumentClassifierFilter"
        NextToken:
          $ref: "#/components/schemas/String"
        MaxResults:
          $ref: "#/components/schemas/MaxResultsInteger"
    ListDominantLanguageDetectionJobsResponse:
      type: object
      properties:
        DominantLanguageDetectionJobPropertiesList:
          $ref: "#/components/schemas/DominantLanguageDetectionJobPropertiesList"
        NextToken:
          $ref: "#/components/schemas/String"
    ListDominantLanguageDetectionJobsRequest:
      type: object
      properties:
        Filter:
          $ref: "#/components/schemas/DominantLanguageDetectionJobFilter"
        NextToken:
          $ref: "#/components/schemas/String"
        MaxResults:
          $ref: "#/components/schemas/MaxResultsInteger"
    ListEntitiesDetectionJobsResponse:
      type: object
      properties:
        EntitiesDetectionJobPropertiesList:
          $ref: "#/components/schemas/EntitiesDetectionJobPropertiesList"
        NextToken:
          $ref: "#/components/schemas/String"
    ListEntitiesDetectionJobsRequest:
      type: object
      properties:
        Filter:
          $ref: "#/components/schemas/EntitiesDetectionJobFilter"
        NextToken:
          $ref: "#/components/schemas/String"
        MaxResults:
          $ref: "#/components/schemas/MaxResultsInteger"
    ListEntityRecognizersResponse:
      type: object
      properties:
        EntityRecognizerPropertiesList:
          $ref: "#/components/schemas/EntityRecognizerPropertiesList"
        NextToken:
          $ref: "#/components/schemas/String"
    ListEntityRecognizersRequest:
      type: object
      properties:
        Filter:
          $ref: "#/components/schemas/EntityRecognizerFilter"
        NextToken:
          $ref: "#/components/schemas/String"
        MaxResults:
          $ref: "#/components/schemas/MaxResultsInteger"
    ListKeyPhrasesDetectionJobsResponse:
      type: object
      properties:
        KeyPhrasesDetectionJobPropertiesList:
          $ref: "#/components/schemas/KeyPhrasesDetectionJobPropertiesList"
        NextToken:
          $ref: "#/components/schemas/String"
    ListKeyPhrasesDetectionJobsRequest:
      type: object
      properties:
        Filter:
          $ref: "#/components/schemas/KeyPhrasesDetectionJobFilter"
        NextToken:
          $ref: "#/components/schemas/String"
        MaxResults:
          $ref: "#/components/schemas/MaxResultsInteger"
    ListSentimentDetectionJobsResponse:
      type: object
      properties:
        SentimentDetectionJobPropertiesList:
          $ref: "#/components/schemas/SentimentDetectionJobPropertiesList"
        NextToken:
          $ref: "#/components/schemas/String"
    ListSentimentDetectionJobsRequest:
      type: object
      properties:
        Filter:
          $ref: "#/components/schemas/SentimentDetectionJobFilter"
        NextToken:
          $ref: "#/components/schemas/String"
        MaxResults:
          $ref: "#/components/schemas/MaxResultsInteger"
    ListTagsForResourceResponse:
      type: object
      properties:
        ResourceArn:
          $ref: "#/components/schemas/ComprehendArn"
        Tags:
          $ref: "#/components/schemas/TagList"
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceArn
      properties:
        ResourceArn:
          $ref: "#/components/schemas/ComprehendArn"
    ListTopicsDetectionJobsResponse:
      type: object
      properties:
        TopicsDetectionJobPropertiesList:
          $ref: "#/components/schemas/TopicsDetectionJobPropertiesList"
        NextToken:
          $ref: "#/components/schemas/String"
    ListTopicsDetectionJobsRequest:
      type: object
      properties:
        Filter:
          $ref: "#/components/schemas/TopicsDetectionJobFilter"
        NextToken:
          $ref: "#/components/schemas/String"
        MaxResults:
          $ref: "#/components/schemas/MaxResultsInteger"
    StartDocumentClassificationJobResponse:
      type: object
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
        JobStatus:
          $ref: "#/components/schemas/JobStatus"
    StartDocumentClassificationJobRequest:
      type: object
      required:
        - DocumentClassifierArn
        - InputDataConfig
        - OutputDataConfig
        - DataAccessRoleArn
      properties:
        JobName:
          $ref: "#/components/schemas/JobName"
        DocumentClassifierArn:
          $ref: "#/components/schemas/DocumentClassifierArn"
        InputDataConfig:
          $ref: "#/components/schemas/InputDataConfig"
        OutputDataConfig:
          $ref: "#/components/schemas/OutputDataConfig"
        DataAccessRoleArn:
          $ref: "#/components/schemas/IamRoleArn"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestTokenString"
        VolumeKmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
    StartDominantLanguageDetectionJobResponse:
      type: object
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
        JobStatus:
          $ref: "#/components/schemas/JobStatus"
    StartDominantLanguageDetectionJobRequest:
      type: object
      required:
        - InputDataConfig
        - OutputDataConfig
        - DataAccessRoleArn
      properties:
        InputDataConfig:
          $ref: "#/components/schemas/InputDataConfig"
        OutputDataConfig:
          $ref: "#/components/schemas/OutputDataConfig"
        DataAccessRoleArn:
          $ref: "#/components/schemas/IamRoleArn"
        JobName:
          $ref: "#/components/schemas/JobName"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestTokenString"
        VolumeKmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
    StartEntitiesDetectionJobResponse:
      type: object
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
        JobStatus:
          $ref: "#/components/schemas/JobStatus"
    StartEntitiesDetectionJobRequest:
      type: object
      required:
        - InputDataConfig
        - OutputDataConfig
        - DataAccessRoleArn
        - LanguageCode
      properties:
        InputDataConfig:
          $ref: "#/components/schemas/InputDataConfig"
        OutputDataConfig:
          $ref: "#/components/schemas/OutputDataConfig"
        DataAccessRoleArn:
          $ref: "#/components/schemas/IamRoleArn"
        JobName:
          $ref: "#/components/schemas/JobName"
        EntityRecognizerArn:
          $ref: "#/components/schemas/EntityRecognizerArn"
        LanguageCode:
          $ref: "#/components/schemas/LanguageCode"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestTokenString"
        VolumeKmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
    StartKeyPhrasesDetectionJobResponse:
      type: object
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
        JobStatus:
          $ref: "#/components/schemas/JobStatus"
    StartKeyPhrasesDetectionJobRequest:
      type: object
      required:
        - InputDataConfig
        - OutputDataConfig
        - DataAccessRoleArn
        - LanguageCode
      properties:
        InputDataConfig:
          $ref: "#/components/schemas/InputDataConfig"
        OutputDataConfig:
          $ref: "#/components/schemas/OutputDataConfig"
        DataAccessRoleArn:
          $ref: "#/components/schemas/IamRoleArn"
        JobName:
          $ref: "#/components/schemas/JobName"
        LanguageCode:
          $ref: "#/components/schemas/LanguageCode"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestTokenString"
        VolumeKmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
    StartSentimentDetectionJobResponse:
      type: object
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
        JobStatus:
          $ref: "#/components/schemas/JobStatus"
    StartSentimentDetectionJobRequest:
      type: object
      required:
        - InputDataConfig
        - OutputDataConfig
        - DataAccessRoleArn
        - LanguageCode
      properties:
        InputDataConfig:
          $ref: "#/components/schemas/InputDataConfig"
        OutputDataConfig:
          $ref: "#/components/schemas/OutputDataConfig"
        DataAccessRoleArn:
          $ref: "#/components/schemas/IamRoleArn"
        JobName:
          $ref: "#/components/schemas/JobName"
        LanguageCode:
          $ref: "#/components/schemas/LanguageCode"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestTokenString"
        VolumeKmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
    StartTopicsDetectionJobResponse:
      type: object
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
        JobStatus:
          $ref: "#/components/schemas/JobStatus"
    StartTopicsDetectionJobRequest:
      type: object
      required:
        - InputDataConfig
        - OutputDataConfig
        - DataAccessRoleArn
      properties:
        InputDataConfig:
          $ref: "#/components/schemas/InputDataConfig"
        OutputDataConfig:
          $ref: "#/components/schemas/OutputDataConfig"
        DataAccessRoleArn:
          $ref: "#/components/schemas/IamRoleArn"
        JobName:
          $ref: "#/components/schemas/JobName"
        NumberOfTopics:
          $ref: "#/components/schemas/NumberOfTopicsInteger"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestTokenString"
        VolumeKmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
    StopDominantLanguageDetectionJobResponse:
      type: object
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
        JobStatus:
          $ref: "#/components/schemas/JobStatus"
    StopDominantLanguageDetectionJobRequest:
      type: object
      required:
        - JobId
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
    StopEntitiesDetectionJobResponse:
      type: object
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
        JobStatus:
          $ref: "#/components/schemas/JobStatus"
    StopEntitiesDetectionJobRequest:
      type: object
      required:
        - JobId
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
    StopKeyPhrasesDetectionJobResponse:
      type: object
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
        JobStatus:
          $ref: "#/components/schemas/JobStatus"
    StopKeyPhrasesDetectionJobRequest:
      type: object
      required:
        - JobId
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
    StopSentimentDetectionJobResponse:
      type: object
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
        JobStatus:
          $ref: "#/components/schemas/JobStatus"
    StopSentimentDetectionJobRequest:
      type: object
      required:
        - JobId
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
    StopTrainingDocumentClassifierResponse:
      type: object
      properties: {}
    StopTrainingDocumentClassifierRequest:
      type: object
      required:
        - DocumentClassifierArn
      properties:
        DocumentClassifierArn:
          $ref: "#/components/schemas/DocumentClassifierArn"
    StopTrainingEntityRecognizerResponse:
      type: object
      properties: {}
    StopTrainingEntityRecognizerRequest:
      type: object
      required:
        - EntityRecognizerArn
      properties:
        EntityRecognizerArn:
          $ref: "#/components/schemas/EntityRecognizerArn"
    TagResourceResponse:
      type: object
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - ResourceArn
        - Tags
      properties:
        ResourceArn:
          $ref: "#/components/schemas/ComprehendArn"
        Tags:
          $ref: "#/components/schemas/TagList"
    ConcurrentModificationException: {}
    UntagResourceResponse:
      type: object
      properties: {}
    UntagResourceRequest:
      type: object
      required:
        - ResourceArn
        - TagKeys
      properties:
        ResourceArn:
          $ref: "#/components/schemas/ComprehendArn"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
    TooManyTagKeysException: {}
    AnyLengthString:
      type: string
    Integer:
      type: integer
    ListOfDominantLanguages:
      type: array
      items:
        $ref: "#/components/schemas/DominantLanguage"
    BatchDetectDominantLanguageItemResult:
      type: object
      properties:
        Index:
          $ref: "#/components/schemas/Integer"
        Languages:
          $ref: "#/components/schemas/ListOfDominantLanguages"
      description: The result of calling the operation. The operation returns one object
        for each document that is successfully processed by the operation.
    StringList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    ListOfDetectDominantLanguageResult:
      type: array
      items:
        $ref: "#/components/schemas/BatchDetectDominantLanguageItemResult"
    BatchItemErrorList:
      type: array
      items:
        $ref: "#/components/schemas/BatchItemError"
    ListOfEntities:
      type: array
      items:
        $ref: "#/components/schemas/Entity"
    BatchDetectEntitiesItemResult:
      type: object
      properties:
        Index:
          $ref: "#/components/schemas/Integer"
        Entities:
          $ref: "#/components/schemas/ListOfEntities"
      description: The result of calling the operation. The operation returns one object
        for each document that is successfully processed by the operation.
    LanguageCode:
      type: string
      enum:
        - en
        - es
        - fr
        - de
        - it
        - pt
    ListOfDetectEntitiesResult:
      type: array
      items:
        $ref: "#/components/schemas/BatchDetectEntitiesItemResult"
    ListOfKeyPhrases:
      type: array
      items:
        $ref: "#/components/schemas/KeyPhrase"
    BatchDetectKeyPhrasesItemResult:
      type: object
      properties:
        Index:
          $ref: "#/components/schemas/Integer"
        KeyPhrases:
          $ref: "#/components/schemas/ListOfKeyPhrases"
      description: The result of calling the operation. The operation returns one object
        for each document that is successfully processed by the operation.
    ListOfDetectKeyPhrasesResult:
      type: array
      items:
        $ref: "#/components/schemas/BatchDetectKeyPhrasesItemResult"
    SentimentType:
      type: string
      enum:
        - POSITIVE
        - NEGATIVE
        - NEUTRAL
        - MIXED
    SentimentScore:
      type: object
      properties:
        Positive:
          $ref: "#/components/schemas/Float"
        Negative:
          $ref: "#/components/schemas/Float"
        Neutral:
          $ref: "#/components/schemas/Float"
        Mixed:
          $ref: "#/components/schemas/Float"
      description: Describes the level of confidence that Amazon Comprehend has in the
        accuracy of its detection of sentiments.
    BatchDetectSentimentItemResult:
      type: object
      properties:
        Index:
          $ref: "#/components/schemas/Integer"
        Sentiment:
          $ref: "#/components/schemas/SentimentType"
        SentimentScore:
          $ref: "#/components/schemas/SentimentScore"
      description: The result of calling the operation. The operation returns one object
        for each document that is successfully processed by the operation.
    ListOfDetectSentimentResult:
      type: array
      items:
        $ref: "#/components/schemas/BatchDetectSentimentItemResult"
    ListOfSyntaxTokens:
      type: array
      items:
        $ref: "#/components/schemas/SyntaxToken"
    BatchDetectSyntaxItemResult:
      type: object
      properties:
        Index:
          $ref: "#/components/schemas/Integer"
        SyntaxTokens:
          $ref: "#/components/schemas/ListOfSyntaxTokens"
      description: The result of calling the operation. The operation returns one object
        that is successfully processed by the operation.
    SyntaxLanguageCode:
      type: string
      enum:
        - en
        - es
        - fr
        - de
        - it
        - pt
    ListOfDetectSyntaxResult:
      type: array
      items:
        $ref: "#/components/schemas/BatchDetectSyntaxItemResult"
    String:
      type: string
      minLength: 1
    BatchItemError:
      type: object
      properties:
        Index:
          $ref: "#/components/schemas/Integer"
        ErrorCode:
          $ref: "#/components/schemas/String"
        ErrorMessage:
          $ref: "#/components/schemas/String"
      description: Describes an error that occurred while processing a document in a batch.
        The operation returns on <code>BatchItemError</code> object for each
        document that contained an error.
    Double:
      type: number
      format: double
    ClassifierEvaluationMetrics:
      type: object
      properties:
        Accuracy:
          $ref: "#/components/schemas/Double"
        Precision:
          $ref: "#/components/schemas/Double"
        Recall:
          $ref: "#/components/schemas/Double"
        F1Score:
          $ref: "#/components/schemas/Double"
      description: Describes the result metrics for the test data associated with an
        documentation classifier.
    ClassifierMetadata:
      type: object
      properties:
        NumberOfLabels:
          $ref: "#/components/schemas/Integer"
        NumberOfTrainedDocuments:
          $ref: "#/components/schemas/Integer"
        NumberOfTestDocuments:
          $ref: "#/components/schemas/Integer"
        EvaluationMetrics:
          $ref: "#/components/schemas/ClassifierEvaluationMetrics"
      description: Provides information about a document classifier.
    ClientRequestTokenString:
      type: string
      pattern: ^[a-zA-Z0-9-]+$
      minLength: 1
      maxLength: 64
    ComprehendArn:
      type: string
      pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:[a-zA-Z0-9-]{1,64}/[a-zA-Z0-9](-*[a-zA-Z0-9])*
      maxLength: 256
    ComprehendArnName:
      type: string
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
      maxLength: 63
    IamRoleArn:
      type: string
      pattern: arn:aws(-[^:]+)?:iam::[0-9]{12}:role/.+
      minLength: 20
      maxLength: 2048
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    DocumentClassifierInputDataConfig:
      type: object
      required:
        - S3Uri
      properties:
        S3Uri:
          $ref: "#/components/schemas/S3Uri"
      description: <p>The input properties for training a document classifier. </p> <p>For
        more information on how the input file is formatted, see
        <a>how-document-classification-training-data</a>. </p>
    DocumentClassifierOutputDataConfig:
      type: object
      properties:
        S3Uri:
          $ref: "#/components/schemas/S3Uri"
        KmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
      description: "Provides output results configuration parameters for custom classifier
        jobs. "
    KmsKeyId:
      type: string
      maxLength: 2048
    VpcConfig:
      type: object
      required:
        - SecurityGroupIds
        - Subnets
      properties:
        SecurityGroupIds:
          $ref: "#/components/schemas/SecurityGroupIds"
        Subnets:
          $ref: "#/components/schemas/Subnets"
      description: ' Configuration parameters for an optional private Virtual Private Cloud
        (VPC) containing the resources you are using for the job. For For more
        information, see <a
        href="https://docs.aws.amazon.com/vpc/latest/userguide/what-is-amazon-vpc.html">Amazon
        VPC</a>. '
    DocumentClassifierArn:
      type: string
      pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:document-classifier/[a-zA-Z0-9](-*[a-zA-Z0-9])*
      maxLength: 256
    EntityRecognizerInputDataConfig:
      type: object
      required:
        - EntityTypes
        - Documents
      properties:
        EntityTypes:
          $ref: "#/components/schemas/EntityTypesList"
        Documents:
          $ref: "#/components/schemas/EntityRecognizerDocuments"
        Annotations:
          $ref: "#/components/schemas/EntityRecognizerAnnotations"
        EntityList:
          $ref: "#/components/schemas/EntityRecognizerEntityList"
      description: Specifies the format and location of the input data.
    EntityRecognizerArn:
      type: string
      pattern: arn:aws(-[^:]+)?:comprehend:[a-zA-Z0-9-]*:[0-9]{12}:entity-recognizer/[a-zA-Z0-9](-*[a-zA-Z0-9])*
      maxLength: 256
    JobId:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
      minLength: 1
      maxLength: 32
    DocumentClassificationJobProperties:
      type: object
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
        JobName:
          $ref: "#/components/schemas/JobName"
        JobStatus:
          $ref: "#/components/schemas/JobStatus"
        Message:
          $ref: "#/components/schemas/AnyLengthString"
        SubmitTime:
          $ref: "#/components/schemas/Timestamp"
        EndTime:
          $ref: "#/components/schemas/Timestamp"
        DocumentClassifierArn:
          $ref: "#/components/schemas/DocumentClassifierArn"
        InputDataConfig:
          $ref: "#/components/schemas/InputDataConfig"
        OutputDataConfig:
          $ref: "#/components/schemas/OutputDataConfig"
        DataAccessRoleArn:
          $ref: "#/components/schemas/IamRoleArn"
        VolumeKmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
      description: Provides information about a document classification job.
    DocumentClassifierProperties:
      type: object
      properties:
        DocumentClassifierArn:
          $ref: "#/components/schemas/DocumentClassifierArn"
        LanguageCode:
          $ref: "#/components/schemas/LanguageCode"
        Status:
          $ref: "#/components/schemas/ModelStatus"
        Message:
          $ref: "#/components/schemas/AnyLengthString"
        SubmitTime:
          $ref: "#/components/schemas/Timestamp"
        EndTime:
          $ref: "#/components/schemas/Timestamp"
        TrainingStartTime:
          $ref: "#/components/schemas/Timestamp"
        TrainingEndTime:
          $ref: "#/components/schemas/Timestamp"
        InputDataConfig:
          $ref: "#/components/schemas/DocumentClassifierInputDataConfig"
        OutputDataConfig:
          $ref: "#/components/schemas/DocumentClassifierOutputDataConfig"
        ClassifierMetadata:
          $ref: "#/components/schemas/ClassifierMetadata"
        DataAccessRoleArn:
          $ref: "#/components/schemas/IamRoleArn"
        VolumeKmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
      description: Provides information about a document classifier.
    DominantLanguageDetectionJobProperties:
      type: object
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
        JobName:
          $ref: "#/components/schemas/JobName"
        JobStatus:
          $ref: "#/components/schemas/JobStatus"
        Message:
          $ref: "#/components/schemas/AnyLengthString"
        SubmitTime:
          $ref: "#/components/schemas/Timestamp"
        EndTime:
          $ref: "#/components/schemas/Timestamp"
        InputDataConfig:
          $ref: "#/components/schemas/InputDataConfig"
        OutputDataConfig:
          $ref: "#/components/schemas/OutputDataConfig"
        DataAccessRoleArn:
          $ref: "#/components/schemas/IamRoleArn"
        VolumeKmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
      description: Provides information about a dominant language detection job.
    EntitiesDetectionJobProperties:
      type: object
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
        JobName:
          $ref: "#/components/schemas/JobName"
        JobStatus:
          $ref: "#/components/schemas/JobStatus"
        Message:
          $ref: "#/components/schemas/AnyLengthString"
        SubmitTime:
          $ref: "#/components/schemas/Timestamp"
        EndTime:
          $ref: "#/components/schemas/Timestamp"
        EntityRecognizerArn:
          $ref: "#/components/schemas/EntityRecognizerArn"
        InputDataConfig:
          $ref: "#/components/schemas/InputDataConfig"
        OutputDataConfig:
          $ref: "#/components/schemas/OutputDataConfig"
        LanguageCode:
          $ref: "#/components/schemas/LanguageCode"
        DataAccessRoleArn:
          $ref: "#/components/schemas/IamRoleArn"
        VolumeKmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
      description: Provides information about an entities detection job.
    EntityRecognizerProperties:
      type: object
      properties:
        EntityRecognizerArn:
          $ref: "#/components/schemas/EntityRecognizerArn"
        LanguageCode:
          $ref: "#/components/schemas/LanguageCode"
        Status:
          $ref: "#/components/schemas/ModelStatus"
        Message:
          $ref: "#/components/schemas/AnyLengthString"
        SubmitTime:
          $ref: "#/components/schemas/Timestamp"
        EndTime:
          $ref: "#/components/schemas/Timestamp"
        TrainingStartTime:
          $ref: "#/components/schemas/Timestamp"
        TrainingEndTime:
          $ref: "#/components/schemas/Timestamp"
        InputDataConfig:
          $ref: "#/components/schemas/EntityRecognizerInputDataConfig"
        RecognizerMetadata:
          $ref: "#/components/schemas/EntityRecognizerMetadata"
        DataAccessRoleArn:
          $ref: "#/components/schemas/IamRoleArn"
        VolumeKmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
      description: Describes information about an entity recognizer.
    KeyPhrasesDetectionJobProperties:
      type: object
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
        JobName:
          $ref: "#/components/schemas/JobName"
        JobStatus:
          $ref: "#/components/schemas/JobStatus"
        Message:
          $ref: "#/components/schemas/AnyLengthString"
        SubmitTime:
          $ref: "#/components/schemas/Timestamp"
        EndTime:
          $ref: "#/components/schemas/Timestamp"
        InputDataConfig:
          $ref: "#/components/schemas/InputDataConfig"
        OutputDataConfig:
          $ref: "#/components/schemas/OutputDataConfig"
        LanguageCode:
          $ref: "#/components/schemas/LanguageCode"
        DataAccessRoleArn:
          $ref: "#/components/schemas/IamRoleArn"
        VolumeKmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
      description: Provides information about a key phrases detection job.
    SentimentDetectionJobProperties:
      type: object
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
        JobName:
          $ref: "#/components/schemas/JobName"
        JobStatus:
          $ref: "#/components/schemas/JobStatus"
        Message:
          $ref: "#/components/schemas/AnyLengthString"
        SubmitTime:
          $ref: "#/components/schemas/Timestamp"
        EndTime:
          $ref: "#/components/schemas/Timestamp"
        InputDataConfig:
          $ref: "#/components/schemas/InputDataConfig"
        OutputDataConfig:
          $ref: "#/components/schemas/OutputDataConfig"
        LanguageCode:
          $ref: "#/components/schemas/LanguageCode"
        DataAccessRoleArn:
          $ref: "#/components/schemas/IamRoleArn"
        VolumeKmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
      description: Provides information about a sentiment detection job.
    TopicsDetectionJobProperties:
      type: object
      properties:
        JobId:
          $ref: "#/components/schemas/JobId"
        JobName:
          $ref: "#/components/schemas/JobName"
        JobStatus:
          $ref: "#/components/schemas/JobStatus"
        Message:
          $ref: "#/components/schemas/AnyLengthString"
        SubmitTime:
          $ref: "#/components/schemas/Timestamp"
        EndTime:
          $ref: "#/components/schemas/Timestamp"
        InputDataConfig:
          $ref: "#/components/schemas/InputDataConfig"
        OutputDataConfig:
          $ref: "#/components/schemas/OutputDataConfig"
        NumberOfTopics:
          $ref: "#/components/schemas/Integer"
        DataAccessRoleArn:
          $ref: "#/components/schemas/IamRoleArn"
        VolumeKmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
        VpcConfig:
          $ref: "#/components/schemas/VpcConfig"
      description: Provides information about a topic detection job.
    JobName:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-%@]*)$
      minLength: 1
      maxLength: 256
    JobStatus:
      type: string
      enum:
        - SUBMITTED
        - IN_PROGRESS
        - COMPLETED
        - FAILED
        - STOP_REQUESTED
        - STOPPED
    Timestamp:
      type: string
      format: date-time
    DocumentClassificationJobFilter:
      type: object
      properties:
        JobName:
          $ref: "#/components/schemas/JobName"
        JobStatus:
          $ref: "#/components/schemas/JobStatus"
        SubmitTimeBefore:
          $ref: "#/components/schemas/Timestamp"
        SubmitTimeAfter:
          $ref: "#/components/schemas/Timestamp"
      description: Provides information for filtering a list of document classification
        jobs. For more information, see the operation. You can provide only one
        filter parameter in each request.
    InputDataConfig:
      type: object
      required:
        - S3Uri
      properties:
        S3Uri:
          $ref: "#/components/schemas/S3Uri"
        InputFormat:
          $ref: "#/components/schemas/InputFormat"
      description: The input properties for a topic detection job.
    OutputDataConfig:
      type: object
      required:
        - S3Uri
      properties:
        S3Uri:
          $ref: "#/components/schemas/S3Uri"
        KmsKeyId:
          $ref: "#/components/schemas/KmsKeyId"
      description: <p>Provides configuration parameters for the output of topic detection
        jobs.</p> <p/>
    DocumentClassificationJobPropertiesList:
      type: array
      items:
        $ref: "#/components/schemas/DocumentClassificationJobProperties"
    ModelStatus:
      type: string
      enum:
        - SUBMITTED
        - TRAINING
        - DELETING
        - STOP_REQUESTED
        - STOPPED
        - IN_ERROR
        - TRAINED
    DocumentClassifierFilter:
      type: object
      properties:
        Status:
          $ref: "#/components/schemas/ModelStatus"
        SubmitTimeBefore:
          $ref: "#/components/schemas/Timestamp"
        SubmitTimeAfter:
          $ref: "#/components/schemas/Timestamp"
      description: Provides information for filtering a list of document classifiers. You
        can only specify one filtering parameter in a request. For more
        information, see the operation.
    S3Uri:
      type: string
      pattern: s3://[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9](/.*)?
      maxLength: 1024
    DocumentClassifierPropertiesList:
      type: array
      items:
        $ref: "#/components/schemas/DocumentClassifierProperties"
    Float:
      type: number
      format: float
    DominantLanguage:
      type: object
      properties:
        LanguageCode:
          $ref: "#/components/schemas/String"
        Score:
          $ref: "#/components/schemas/Float"
      description: Returns the code for the dominant language in the input text and the
        level of confidence that Amazon Comprehend has in the accuracy of the
        detection.
    DominantLanguageDetectionJobFilter:
      type: object
      properties:
        JobName:
          $ref: "#/components/schemas/JobName"
        JobStatus:
          $ref: "#/components/schemas/JobStatus"
        SubmitTimeBefore:
          $ref: "#/components/schemas/Timestamp"
        SubmitTimeAfter:
          $ref: "#/components/schemas/Timestamp"
      description: Provides information for filtering a list of dominant language detection
        jobs. For more information, see the operation.
    DominantLanguageDetectionJobPropertiesList:
      type: array
      items:
        $ref: "#/components/schemas/DominantLanguageDetectionJobProperties"
    EntitiesDetectionJobFilter:
      type: object
      properties:
        JobName:
          $ref: "#/components/schemas/JobName"
        JobStatus:
          $ref: "#/components/schemas/JobStatus"
        SubmitTimeBefore:
          $ref: "#/components/schemas/Timestamp"
        SubmitTimeAfter:
          $ref: "#/components/schemas/Timestamp"
      description: Provides information for filtering a list of dominant language detection
        jobs. For more information, see the operation.
    EntitiesDetectionJobPropertiesList:
      type: array
      items:
        $ref: "#/components/schemas/EntitiesDetectionJobProperties"
    EntityType:
      type: string
      enum:
        - PERSON
        - LOCATION
        - ORGANIZATION
        - COMMERCIAL_ITEM
        - EVENT
        - DATE
        - QUANTITY
        - TITLE
        - OTHER
    Entity:
      type: object
      properties:
        Score:
          $ref: "#/components/schemas/Float"
        Type:
          $ref: "#/components/schemas/EntityType"
        Text:
          $ref: "#/components/schemas/String"
        BeginOffset:
          $ref: "#/components/schemas/Integer"
        EndOffset:
          $ref: "#/components/schemas/Integer"
      description: <p>Provides information about an entity. </p> <p> </p>
    EntityRecognizerAnnotations:
      type: object
      required:
        - S3Uri
      properties:
        S3Uri:
          $ref: "#/components/schemas/S3Uri"
      description: Describes the annotations associated with a entity recognizer.
    EntityRecognizerDocuments:
      type: object
      required:
        - S3Uri
      properties:
        S3Uri:
          $ref: "#/components/schemas/S3Uri"
      description: Describes the training documents submitted with an entity recognizer.
    EntityRecognizerEntityList:
      type: object
      required:
        - S3Uri
      properties:
        S3Uri:
          $ref: "#/components/schemas/S3Uri"
      description: Describes the entity recognizer submitted with an entity recognizer.
    EntityRecognizerEvaluationMetrics:
      type: object
      properties:
        Precision:
          $ref: "#/components/schemas/Double"
        Recall:
          $ref: "#/components/schemas/Double"
        F1Score:
          $ref: "#/components/schemas/Double"
      description: "Detailed information about the accuracy of an entity recognizer. "
    EntityRecognizerFilter:
      type: object
      properties:
        Status:
          $ref: "#/components/schemas/ModelStatus"
        SubmitTimeBefore:
          $ref: "#/components/schemas/Timestamp"
        SubmitTimeAfter:
          $ref: "#/components/schemas/Timestamp"
      description: Provides information for filtering a list of entity recognizers. You can
        only specify one filtering parameter in a request. For more information,
        see the operation./&gt;
    EntityTypesList:
      type: array
      items:
        $ref: "#/components/schemas/EntityTypesListItem"
    EntityRecognizerMetadataEntityTypesList:
      type: array
      items:
        $ref: "#/components/schemas/EntityRecognizerMetadataEntityTypesListItem"
    EntityRecognizerMetadata:
      type: object
      properties:
        NumberOfTrainedDocuments:
          $ref: "#/components/schemas/Integer"
        NumberOfTestDocuments:
          $ref: "#/components/schemas/Integer"
        EvaluationMetrics:
          $ref: "#/components/schemas/EntityRecognizerEvaluationMetrics"
        EntityTypes:
          $ref: "#/components/schemas/EntityRecognizerMetadataEntityTypesList"
      description: Detailed information about an entity recognizer.
    EntityRecognizerMetadataEntityTypesListItem:
      type: object
      properties:
        Type:
          $ref: "#/components/schemas/AnyLengthString"
        EvaluationMetrics:
          $ref: "#/components/schemas/EntityTypesEvaluationMetrics"
        NumberOfTrainMentions:
          $ref: "#/components/schemas/Integer"
      description: Individual item from the list of entity types in the metadata of an
        entity recognizer.
    EntityTypesEvaluationMetrics:
      type: object
      properties:
        Precision:
          $ref: "#/components/schemas/Double"
        Recall:
          $ref: "#/components/schemas/Double"
        F1Score:
          $ref: "#/components/schemas/Double"
      description: "Detailed information about the accuracy of an entity recognizer for a
        specific entity type. "
    EntityRecognizerPropertiesList:
      type: array
      items:
        $ref: "#/components/schemas/EntityRecognizerProperties"
    EntityTypeName:
      type: string
      pattern: "[_A-Z0-9]+"
      maxLength: 64
    EntityTypesListItem:
      type: object
      required:
        - Type
      properties:
        Type:
          $ref: "#/components/schemas/EntityTypeName"
      description: Information about an individual item on a list of entity types.
    InputFormat:
      type: string
      enum:
        - ONE_DOC_PER_FILE
        - ONE_DOC_PER_LINE
    KeyPhrase:
      type: object
      properties:
        Score:
          $ref: "#/components/schemas/Float"
        Text:
          $ref: "#/components/schemas/String"
        BeginOffset:
          $ref: "#/components/schemas/Integer"
        EndOffset:
          $ref: "#/components/schemas/Integer"
      description: Describes a key noun phrase.
    KeyPhrasesDetectionJobFilter:
      type: object
      properties:
        JobName:
          $ref: "#/components/schemas/JobName"
        JobStatus:
          $ref: "#/components/schemas/JobStatus"
        SubmitTimeBefore:
          $ref: "#/components/schemas/Timestamp"
        SubmitTimeAfter:
          $ref: "#/components/schemas/Timestamp"
      description: Provides information for filtering a list of dominant language detection
        jobs. For more information, see the operation.
    KeyPhrasesDetectionJobPropertiesList:
      type: array
      items:
        $ref: "#/components/schemas/KeyPhrasesDetectionJobProperties"
    MaxResultsInteger:
      type: integer
      minimum: 1
      maximum: 500
    SyntaxToken:
      type: object
      properties:
        TokenId:
          $ref: "#/components/schemas/Integer"
        Text:
          $ref: "#/components/schemas/String"
        BeginOffset:
          $ref: "#/components/schemas/Integer"
        EndOffset:
          $ref: "#/components/schemas/Integer"
        PartOfSpeech:
          $ref: "#/components/schemas/PartOfSpeechTag"
      description: Represents a work in the input text that was recognized and assigned a
        part of speech. There is one syntax token record for each word in the
        source text.
    SentimentDetectionJobFilter:
      type: object
      properties:
        JobName:
          $ref: "#/components/schemas/JobName"
        JobStatus:
          $ref: "#/components/schemas/JobStatus"
        SubmitTimeBefore:
          $ref: "#/components/schemas/Timestamp"
        SubmitTimeAfter:
          $ref: "#/components/schemas/Timestamp"
      description: Provides information for filtering a list of dominant language detection
        jobs. For more information, see the operation.
    SentimentDetectionJobPropertiesList:
      type: array
      items:
        $ref: "#/components/schemas/SentimentDetectionJobProperties"
    TopicsDetectionJobFilter:
      type: object
      properties:
        JobName:
          $ref: "#/components/schemas/JobName"
        JobStatus:
          $ref: "#/components/schemas/JobStatus"
        SubmitTimeBefore:
          $ref: "#/components/schemas/Timestamp"
        SubmitTimeAfter:
          $ref: "#/components/schemas/Timestamp"
      description: Provides information for filtering topic detection jobs. For more
        information, see .
    TopicsDetectionJobPropertiesList:
      type: array
      items:
        $ref: "#/components/schemas/TopicsDetectionJobProperties"
    NumberOfTopicsInteger:
      type: integer
      minimum: 1
      maximum: 100
    PartOfSpeechTagType:
      type: string
      enum:
        - ADJ
        - ADP
        - ADV
        - AUX
        - CONJ
        - CCONJ
        - DET
        - INTJ
        - NOUN
        - NUM
        - O
        - PART
        - PRON
        - PROPN
        - PUNCT
        - SCONJ
        - SYM
        - VERB
    PartOfSpeechTag:
      type: object
      properties:
        Tag:
          $ref: "#/components/schemas/PartOfSpeechTagType"
        Score:
          $ref: "#/components/schemas/Float"
      description: Identifies the part of speech represented by the token and gives the
        confidence that Amazon Comprehend has that the part of speech was
        correctly identified. For more information about the parts of speech
        that Amazon Comprehend can identify, see <a>how-syntax</a>.
    SecurityGroupId:
      type: string
      pattern: "[-0-9a-zA-Z]+"
      minLength: 1
      maxLength: 32
    SecurityGroupIds:
      type: array
      items:
        $ref: "#/components/schemas/SecurityGroupId"
      minItems: 1
      maxItems: 5
    SubnetId:
      type: string
      pattern: "[-0-9a-zA-Z]+"
      minLength: 1
      maxLength: 32
    Subnets:
      type: array
      items:
        $ref: "#/components/schemas/SubnetId"
      minItems: 1
      maxItems: 16
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - Key
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
        Value:
          $ref: "#/components/schemas/TagValue"
      description: "A key-value pair that adds as a metadata to a resource used by Amazon
        Comprehend. For example, a tag with the key-value pair
        ‘Department’:’Sales’ might be added to a resource to indicate its use by
        a particular department. "
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
