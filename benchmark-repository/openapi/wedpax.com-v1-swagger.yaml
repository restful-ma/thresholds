openapi: 3.0.0
info:
  title: Wedpax
  version: v1
  x-apisguru-categories:
    - social
  x-origin:
    - format: swagger
      url: http://api.wedpax.com/swagger/v1/swagger.json
      version: "2.0"
  x-providerName: wedpax.com
paths:
  /api/ServiceQuery/Get:
    get:
      parameters:
        - in: query
          name: CurrentPage
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: PageSize
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: Sorting.PropertyName
          required: false
          schema:
            type: string
        - in: query
          name: Sorting.OrderByDescending
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/PagedResultDto_WeddingVendorDto_"
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResultDto_WeddingVendorDto_"
            text/json:
              schema:
                $ref: "#/components/schemas/PagedResultDto_WeddingVendorDto_"
      tags:
        - ServiceQuery
  /api/ServiceQuery/Search:
    get:
      operationId: Search
      parameters:
        - in: query
          name: City
          required: false
          schema:
            type: string
        - in: query
          name: CatgoryId
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: PageNumber
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/ServiceListModel"
                type: array
                uniqueItems: false
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ServiceListModel"
                type: array
                uniqueItems: false
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ServiceListModel"
                type: array
                uniqueItems: false
      tags:
        - ServiceQuery
  /api/ServiceQuery/UserService:
    get:
      operationId: UserService
      parameters:
        - in: query
          name: serviceId
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/UpdateWeddingVendorDto"
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateWeddingVendorDto"
            text/json:
              schema:
                $ref: "#/components/schemas/UpdateWeddingVendorDto"
      tags:
        - ServiceQuery
  /api/ServiceQuery/UserServices:
    get:
      operationId: UserServices
      parameters:
        - in: query
          name: userId
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/UserServicesDto"
                type: array
                uniqueItems: false
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/UserServicesDto"
                type: array
                uniqueItems: false
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/UserServicesDto"
                type: array
                uniqueItems: false
      tags:
        - ServiceQuery
  /api/TokenAuth/Authenticate:
    post:
      operationId: Authenticate
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/AuthenticateModel"
          application/json:
            schema:
              $ref: "#/components/schemas/AuthenticateModel"
          text/json:
            schema:
              $ref: "#/components/schemas/AuthenticateModel"
          application/*+json:
            schema:
              $ref: "#/components/schemas/AuthenticateModel"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/AuthenticateResultModel"
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticateResultModel"
            text/json:
              schema:
                $ref: "#/components/schemas/AuthenticateResultModel"
      tags:
        - TokenAuth
  /api/TokenAuth/ExternalAuthenticate:
    post:
      operationId: ExternalAuthenticate
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ExternalAuthenticateModel"
          application/json:
            schema:
              $ref: "#/components/schemas/ExternalAuthenticateModel"
          text/json:
            schema:
              $ref: "#/components/schemas/ExternalAuthenticateModel"
          application/*+json:
            schema:
              $ref: "#/components/schemas/ExternalAuthenticateModel"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ExternalAuthenticateResultModel"
            application/json:
              schema:
                $ref: "#/components/schemas/ExternalAuthenticateResultModel"
            text/json:
              schema:
                $ref: "#/components/schemas/ExternalAuthenticateResultModel"
      tags:
        - TokenAuth
  /api/TokenAuth/GetExternalAuthenticationProviders:
    get:
      operationId: GetExternalAuthenticationProviders
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/ExternalLoginProviderInfoModel"
                type: array
                uniqueItems: false
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ExternalLoginProviderInfoModel"
                type: array
                uniqueItems: false
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ExternalLoginProviderInfoModel"
                type: array
                uniqueItems: false
      tags:
        - TokenAuth
  /api/TokenAuth/Login:
    post:
      operationId: Login
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/LoginModel"
          application/json:
            schema:
              $ref: "#/components/schemas/LoginModel"
          text/json:
            schema:
              $ref: "#/components/schemas/LoginModel"
          application/*+json:
            schema:
              $ref: "#/components/schemas/LoginModel"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/AuthenticateResultModel"
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticateResultModel"
            text/json:
              schema:
                $ref: "#/components/schemas/AuthenticateResultModel"
      tags:
        - TokenAuth
  /api/TokenAuth/RefreshToken:
    get:
      operationId: RefreshToken
      parameters:
        - in: query
          name: userName
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/AuthenticateResultModel"
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticateResultModel"
            text/json:
              schema:
                $ref: "#/components/schemas/AuthenticateResultModel"
      tags:
        - TokenAuth
  /api/services/app/Account/IsTenantAvailable:
    post:
      operationId: IsTenantAvailable
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/IsTenantAvailableInput"
          application/json:
            schema:
              $ref: "#/components/schemas/IsTenantAvailableInput"
          text/json:
            schema:
              $ref: "#/components/schemas/IsTenantAvailableInput"
          application/*+json:
            schema:
              $ref: "#/components/schemas/IsTenantAvailableInput"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/IsTenantAvailableOutput"
            application/json:
              schema:
                $ref: "#/components/schemas/IsTenantAvailableOutput"
            text/json:
              schema:
                $ref: "#/components/schemas/IsTenantAvailableOutput"
      tags:
        - Account
  /api/services/app/Account/Register:
    post:
      operationId: Register
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/RegisterInput"
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterInput"
          text/json:
            schema:
              $ref: "#/components/schemas/RegisterInput"
          application/*+json:
            schema:
              $ref: "#/components/schemas/RegisterInput"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/RegisterOutput"
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterOutput"
            text/json:
              schema:
                $ref: "#/components/schemas/RegisterOutput"
      tags:
        - Account
  /api/services/app/AddressServices/Create:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/GeoDetailsCreateDto"
          application/json:
            schema:
              $ref: "#/components/schemas/GeoDetailsCreateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/GeoDetailsCreateDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/GeoDetailsCreateDto"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/GeoDetailsDto"
            application/json:
              schema:
                $ref: "#/components/schemas/GeoDetailsDto"
            text/json:
              schema:
                $ref: "#/components/schemas/GeoDetailsDto"
      tags:
        - AddressServices
  /api/services/app/AddressServices/Delete:
    delete:
      parameters:
        - in: query
          name: Id
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
      tags:
        - AddressServices
  /api/services/app/AddressServices/Get:
    get:
      parameters:
        - in: query
          name: Id
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/GeoDetailsDto"
            application/json:
              schema:
                $ref: "#/components/schemas/GeoDetailsDto"
            text/json:
              schema:
                $ref: "#/components/schemas/GeoDetailsDto"
      tags:
        - AddressServices
  /api/services/app/AddressServices/GetAll:
    get:
      parameters:
        - in: query
          name: Sorting
          required: false
          schema:
            type: string
        - in: query
          name: SkipCount
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 2147483647
        - in: query
          name: MaxResultCount
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/PagedResultDto_GeoDetailsDto_"
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResultDto_GeoDetailsDto_"
            text/json:
              schema:
                $ref: "#/components/schemas/PagedResultDto_GeoDetailsDto_"
      tags:
        - AddressServices
  /api/services/app/AddressServices/GetCities:
    get:
      operationId: GetCities
      parameters:
        - in: query
          name: provinceId
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/CityDto"
                type: array
                uniqueItems: false
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CityDto"
                type: array
                uniqueItems: false
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/CityDto"
                type: array
                uniqueItems: false
      tags:
        - AddressServices
  /api/services/app/AddressServices/GetProvince:
    get:
      operationId: GetProvince
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/ProvinceDto"
                type: array
                uniqueItems: false
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProvinceDto"
                type: array
                uniqueItems: false
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ProvinceDto"
                type: array
                uniqueItems: false
      tags:
        - AddressServices
  /api/services/app/AddressServices/Update:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/GeoDetailsUpdateDto"
          application/json:
            schema:
              $ref: "#/components/schemas/GeoDetailsUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/GeoDetailsUpdateDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/GeoDetailsUpdateDto"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/GeoDetailsDto"
            application/json:
              schema:
                $ref: "#/components/schemas/GeoDetailsDto"
            text/json:
              schema:
                $ref: "#/components/schemas/GeoDetailsDto"
      tags:
        - AddressServices
  /api/services/app/CategoryService/Create:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ServiceCategroyCreateDto"
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceCategroyCreateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ServiceCategroyCreateDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/ServiceCategroyCreateDto"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ServiceCategoryDto"
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceCategoryDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ServiceCategoryDto"
      tags:
        - CategoryService
  /api/services/app/CategoryService/Delete:
    delete:
      parameters:
        - in: query
          name: Id
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      tags:
        - CategoryService
  /api/services/app/CategoryService/Get:
    get:
      parameters:
        - in: query
          name: Id
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ServiceCategoryDto"
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceCategoryDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ServiceCategoryDto"
      tags:
        - CategoryService
  /api/services/app/CategoryService/GetAll:
    get:
      parameters:
        - in: query
          name: TotalCount
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: Items
          required: false
          explode: true
          schema:
            type: array
            items: {}
            uniqueItems: false
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/PagedResultDto_ServiceCategoryDto_"
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResultDto_ServiceCategoryDto_"
            text/json:
              schema:
                $ref: "#/components/schemas/PagedResultDto_ServiceCategoryDto_"
      tags:
        - CategoryService
  /api/services/app/CategoryService/GetById:
    get:
      operationId: GetById
      parameters:
        - in: query
          name: id
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ServiceCategory"
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceCategory"
            text/json:
              schema:
                $ref: "#/components/schemas/ServiceCategory"
      tags:
        - CategoryService
  /api/services/app/CategoryService/GetByName:
    get:
      operationId: GetByName
      parameters:
        - in: query
          name: title
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ServiceCategoryDto"
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceCategoryDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ServiceCategoryDto"
      tags:
        - CategoryService
  /api/services/app/CategoryService/GetCategories:
    get:
      operationId: GetCategories
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/ServiceCategoryDto"
                type: array
                uniqueItems: false
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ServiceCategoryDto"
                type: array
                uniqueItems: false
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ServiceCategoryDto"
                type: array
                uniqueItems: false
      tags:
        - CategoryService
  /api/services/app/CategoryService/Update:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ServiceCategoryUpdateDto"
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceCategoryUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ServiceCategoryUpdateDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/ServiceCategoryUpdateDto"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ServiceCategoryDto"
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceCategoryDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ServiceCategoryDto"
      tags:
        - CategoryService
  /api/services/app/Configuration/ChangeUiTheme:
    post:
      operationId: ChangeUiTheme
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ChangeUiThemeInput"
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeUiThemeInput"
          text/json:
            schema:
              $ref: "#/components/schemas/ChangeUiThemeInput"
          application/*+json:
            schema:
              $ref: "#/components/schemas/ChangeUiThemeInput"
      responses:
        "200":
          description: Success
      tags:
        - Configuration
  /api/services/app/Role/Create:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/CreateRoleDto"
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRoleDto"
          text/json:
            schema:
              $ref: "#/components/schemas/CreateRoleDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/CreateRoleDto"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/RoleDto"
            application/json:
              schema:
                $ref: "#/components/schemas/RoleDto"
            text/json:
              schema:
                $ref: "#/components/schemas/RoleDto"
      tags:
        - Role
  /api/services/app/Role/Delete:
    delete:
      parameters:
        - in: query
          name: Id
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      tags:
        - Role
  /api/services/app/Role/Get:
    get:
      parameters:
        - in: query
          name: Id
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/RoleDto"
            application/json:
              schema:
                $ref: "#/components/schemas/RoleDto"
            text/json:
              schema:
                $ref: "#/components/schemas/RoleDto"
      tags:
        - Role
  /api/services/app/Role/GetAll:
    get:
      parameters:
        - in: query
          name: Keyword
          required: false
          schema:
            type: string
        - in: query
          name: SkipCount
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 2147483647
        - in: query
          name: MaxResultCount
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/PagedResultDto_RoleDto_"
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResultDto_RoleDto_"
            text/json:
              schema:
                $ref: "#/components/schemas/PagedResultDto_RoleDto_"
      tags:
        - Role
  /api/services/app/Role/GetAllPermissions:
    get:
      operationId: GetAllPermissions
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ListResultDto_PermissionDto_"
            application/json:
              schema:
                $ref: "#/components/schemas/ListResultDto_PermissionDto_"
            text/json:
              schema:
                $ref: "#/components/schemas/ListResultDto_PermissionDto_"
      tags:
        - Role
  /api/services/app/Role/GetRoleForEdit:
    get:
      operationId: GetRoleForEdit
      parameters:
        - in: query
          name: Id
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/GetRoleForEditOutput"
            application/json:
              schema:
                $ref: "#/components/schemas/GetRoleForEditOutput"
            text/json:
              schema:
                $ref: "#/components/schemas/GetRoleForEditOutput"
      tags:
        - Role
  /api/services/app/Role/GetRolesAsync:
    get:
      operationId: GetRolesAsync
      parameters:
        - in: query
          name: Permission
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ListResultDto_RoleListDto_"
            application/json:
              schema:
                $ref: "#/components/schemas/ListResultDto_RoleListDto_"
            text/json:
              schema:
                $ref: "#/components/schemas/ListResultDto_RoleListDto_"
      tags:
        - Role
  /api/services/app/Role/Update:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/RoleDto"
          application/json:
            schema:
              $ref: "#/components/schemas/RoleDto"
          text/json:
            schema:
              $ref: "#/components/schemas/RoleDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/RoleDto"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/RoleDto"
            application/json:
              schema:
                $ref: "#/components/schemas/RoleDto"
            text/json:
              schema:
                $ref: "#/components/schemas/RoleDto"
      tags:
        - Role
  /api/services/app/ServiceFacilityService/Create:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ServiceFacilityCreateDto"
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceFacilityCreateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ServiceFacilityCreateDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/ServiceFacilityCreateDto"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ServiceFacilityDto"
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFacilityDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ServiceFacilityDto"
      tags:
        - ServiceFacilityService
  /api/services/app/ServiceFacilityService/Delete:
    delete:
      parameters:
        - in: query
          name: Id
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      tags:
        - ServiceFacilityService
  /api/services/app/ServiceFacilityService/Get:
    get:
      parameters:
        - in: query
          name: Id
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ServiceFacilityDto"
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFacilityDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ServiceFacilityDto"
      tags:
        - ServiceFacilityService
  /api/services/app/ServiceFacilityService/GetAll:
    get:
      parameters:
        - in: query
          name: input
          required: false
          explode: true
          schema:
            type: array
            items: {}
            uniqueItems: false
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/PagedResultDto_ServiceFacilityDto_"
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResultDto_ServiceFacilityDto_"
            text/json:
              schema:
                $ref: "#/components/schemas/PagedResultDto_ServiceFacilityDto_"
      tags:
        - ServiceFacilityService
  /api/services/app/ServiceFacilityService/GetFacilities:
    get:
      operationId: GetFacilities
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/ServiceFacilityDto"
                type: array
                uniqueItems: false
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ServiceFacilityDto"
                type: array
                uniqueItems: false
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ServiceFacilityDto"
                type: array
                uniqueItems: false
      tags:
        - ServiceFacilityService
  /api/services/app/ServiceFacilityService/GetServiceFacility:
    get:
      operationId: GetServiceFacility
      parameters:
        - in: query
          name: facilities
          required: false
          explode: true
          schema:
            type: array
            items:
              format: int32
              type: integer
            uniqueItems: false
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                items:
                  $ref: "#/components/schemas/ServiceFacilityDto"
                type: array
                uniqueItems: false
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ServiceFacilityDto"
                type: array
                uniqueItems: false
            text/json:
              schema:
                items:
                  $ref: "#/components/schemas/ServiceFacilityDto"
                type: array
                uniqueItems: false
      tags:
        - ServiceFacilityService
  /api/services/app/ServiceFacilityService/Update:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ServiceFacilityUpdateDto"
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceFacilityUpdateDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ServiceFacilityUpdateDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/ServiceFacilityUpdateDto"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ServiceFacilityDto"
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceFacilityDto"
            text/json:
              schema:
                $ref: "#/components/schemas/ServiceFacilityDto"
      tags:
        - ServiceFacilityService
  /api/services/app/Session/GetCurrentLoginInformations:
    get:
      operationId: GetCurrentLoginInformations
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/GetCurrentLoginInformationsOutput"
            application/json:
              schema:
                $ref: "#/components/schemas/GetCurrentLoginInformationsOutput"
            text/json:
              schema:
                $ref: "#/components/schemas/GetCurrentLoginInformationsOutput"
      tags:
        - Session
  /api/services/app/Tenant/Create:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/CreateTenantDto"
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTenantDto"
          text/json:
            schema:
              $ref: "#/components/schemas/CreateTenantDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/CreateTenantDto"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/TenantDto"
            application/json:
              schema:
                $ref: "#/components/schemas/TenantDto"
            text/json:
              schema:
                $ref: "#/components/schemas/TenantDto"
      tags:
        - Tenant
  /api/services/app/Tenant/Delete:
    delete:
      parameters:
        - in: query
          name: Id
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
      tags:
        - Tenant
  /api/services/app/Tenant/Get:
    get:
      parameters:
        - in: query
          name: Id
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/TenantDto"
            application/json:
              schema:
                $ref: "#/components/schemas/TenantDto"
            text/json:
              schema:
                $ref: "#/components/schemas/TenantDto"
      tags:
        - Tenant
  /api/services/app/Tenant/GetAll:
    get:
      parameters:
        - in: query
          name: Keyword
          required: false
          schema:
            type: string
        - in: query
          name: IsActive
          required: false
          schema:
            type: boolean
        - in: query
          name: SkipCount
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 2147483647
        - in: query
          name: MaxResultCount
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/PagedResultDto_TenantDto_"
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResultDto_TenantDto_"
            text/json:
              schema:
                $ref: "#/components/schemas/PagedResultDto_TenantDto_"
      tags:
        - Tenant
  /api/services/app/Tenant/Update:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/TenantDto"
          application/json:
            schema:
              $ref: "#/components/schemas/TenantDto"
          text/json:
            schema:
              $ref: "#/components/schemas/TenantDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/TenantDto"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/TenantDto"
            application/json:
              schema:
                $ref: "#/components/schemas/TenantDto"
            text/json:
              schema:
                $ref: "#/components/schemas/TenantDto"
      tags:
        - Tenant
  /api/services/app/User/AddManagerToUserRoles:
    post:
      operationId: AddManagerToUserRoles
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/User"
          application/json:
            schema:
              $ref: "#/components/schemas/User"
          text/json:
            schema:
              $ref: "#/components/schemas/User"
          application/*+json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Success
      tags:
        - User
  /api/services/app/User/ChangeLanguage:
    post:
      operationId: ChangeLanguage
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ChangeUserLanguageDto"
          application/json:
            schema:
              $ref: "#/components/schemas/ChangeUserLanguageDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ChangeUserLanguageDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/ChangeUserLanguageDto"
      responses:
        "200":
          description: Success
      tags:
        - User
  /api/services/app/User/ChangePassword:
    post:
      operationId: ChangePassword
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ChangePasswordDto"
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePasswordDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ChangePasswordDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/ChangePasswordDto"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
      tags:
        - User
  /api/services/app/User/ConfrimCode:
    post:
      operationId: ConfrimCode
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ConfirmCodeDto"
          application/json:
            schema:
              $ref: "#/components/schemas/ConfirmCodeDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ConfirmCodeDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/ConfirmCodeDto"
      responses:
        "200":
          description: Success
      tags:
        - User
  /api/services/app/User/Create:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/CreateUserDto"
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserDto"
          text/json:
            schema:
              $ref: "#/components/schemas/CreateUserDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/CreateUserDto"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/UserDto"
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"
            text/json:
              schema:
                $ref: "#/components/schemas/UserDto"
      tags:
        - User
  /api/services/app/User/Delete:
    delete:
      parameters:
        - in: query
          name: Id
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
      tags:
        - User
  /api/services/app/User/Get:
    get:
      parameters:
        - in: query
          name: Id
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/UserDto"
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"
            text/json:
              schema:
                $ref: "#/components/schemas/UserDto"
      tags:
        - User
  /api/services/app/User/GetAll:
    get:
      parameters:
        - in: query
          name: Keyword
          required: false
          schema:
            type: string
        - in: query
          name: IsActive
          required: false
          schema:
            type: boolean
        - in: query
          name: SkipCount
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 2147483647
        - in: query
          name: MaxResultCount
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/PagedResultDto_UserDto_"
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResultDto_UserDto_"
            text/json:
              schema:
                $ref: "#/components/schemas/PagedResultDto_UserDto_"
      tags:
        - User
  /api/services/app/User/GetRoles:
    get:
      operationId: GetRoles
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/ListResultDto_RoleDto_"
            application/json:
              schema:
                $ref: "#/components/schemas/ListResultDto_RoleDto_"
            text/json:
              schema:
                $ref: "#/components/schemas/ListResultDto_RoleDto_"
      tags:
        - User
  /api/services/app/User/GetToEntity:
    get:
      operationId: GetToEntity
      parameters:
        - in: query
          name: userId
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/User"
            application/json:
              schema:
                $ref: "#/components/schemas/User"
            text/json:
              schema:
                $ref: "#/components/schemas/User"
      tags:
        - User
  /api/services/app/User/ProhibitPermission:
    post:
      operationId: ProhibitPermission
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ProhibitPermissionInput"
          application/json:
            schema:
              $ref: "#/components/schemas/ProhibitPermissionInput"
          text/json:
            schema:
              $ref: "#/components/schemas/ProhibitPermissionInput"
          application/*+json:
            schema:
              $ref: "#/components/schemas/ProhibitPermissionInput"
      responses:
        "200":
          description: Success
      tags:
        - User
  /api/services/app/User/ResetPassword:
    post:
      operationId: ResetPassword
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/ResetPasswordDto"
          application/json:
            schema:
              $ref: "#/components/schemas/ResetPasswordDto"
          text/json:
            schema:
              $ref: "#/components/schemas/ResetPasswordDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/ResetPasswordDto"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
      tags:
        - User
  /api/services/app/User/Update:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/UserDto"
          application/json:
            schema:
              $ref: "#/components/schemas/UserDto"
          text/json:
            schema:
              $ref: "#/components/schemas/UserDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/UserDto"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/UserDto"
            application/json:
              schema:
                $ref: "#/components/schemas/UserDto"
            text/json:
              schema:
                $ref: "#/components/schemas/UserDto"
      tags:
        - User
  /api/services/app/WeddingVendorServices/Create:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/CreateWeddingVendorDto"
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWeddingVendorDto"
          text/json:
            schema:
              $ref: "#/components/schemas/CreateWeddingVendorDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/CreateWeddingVendorDto"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/WeddingVendorDto"
            application/json:
              schema:
                $ref: "#/components/schemas/WeddingVendorDto"
            text/json:
              schema:
                $ref: "#/components/schemas/WeddingVendorDto"
      tags:
        - WeddingVendorServices
  /api/services/app/WeddingVendorServices/Delete:
    delete:
      parameters:
        - in: query
          name: Id
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
      tags:
        - WeddingVendorServices
  /api/services/app/WeddingVendorServices/Get:
    get:
      parameters:
        - in: query
          name: Id
          required: false
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/WeddingVendorDto"
            application/json:
              schema:
                $ref: "#/components/schemas/WeddingVendorDto"
            text/json:
              schema:
                $ref: "#/components/schemas/WeddingVendorDto"
      tags:
        - WeddingVendorServices
  /api/services/app/WeddingVendorServices/GetAll:
    get:
      parameters:
        - in: query
          name: Sorting
          required: false
          schema:
            type: string
        - in: query
          name: SkipCount
          required: false
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 2147483647
        - in: query
          name: MaxResultCount
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/PagedResultDto_WeddingVendorDto_"
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResultDto_WeddingVendorDto_"
            text/json:
              schema:
                $ref: "#/components/schemas/PagedResultDto_WeddingVendorDto_"
      tags:
        - WeddingVendorServices
  /api/services/app/WeddingVendorServices/Update:
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: "#/components/schemas/UpdateWeddingVendorDto"
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWeddingVendorDto"
          text/json:
            schema:
              $ref: "#/components/schemas/UpdateWeddingVendorDto"
          application/*+json:
            schema:
              $ref: "#/components/schemas/UpdateWeddingVendorDto"
      responses:
        "200":
          description: Success
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/WeddingVendorDto"
            application/json:
              schema:
                $ref: "#/components/schemas/WeddingVendorDto"
            text/json:
              schema:
                $ref: "#/components/schemas/WeddingVendorDto"
      tags:
        - WeddingVendorServices
servers:
  - url: http://api.wedpax.com
components:
  securitySchemes:
    bearerAuth:
      description: 'JWT Authorization header using the Bearer scheme. Example:
        "Authorization: Bearer {token}"'
      in: header
      name: Authorization
      type: apiKey
  schemas:
    ApplicationInfoDto:
      properties:
        features:
          additionalProperties:
            type: boolean
          type: object
        releaseDate:
          format: date-time
          type: string
        version:
          type: string
      type: object
    AuthenticateModel:
      properties:
        password:
          maxLength: 32
          minLength: 0
          type: string
        rememberClient:
          type: boolean
        userNameOrEmailAddress:
          maxLength: 256
          minLength: 0
          type: string
      required:
        - userNameOrEmailAddress
        - password
      type: object
    AuthenticateResultModel:
      properties:
        accessToken:
          type: string
        encryptedAccessToken:
          type: string
        expireInSeconds:
          format: int32
          type: integer
        roles:
          items:
            type: string
          type: array
          uniqueItems: false
        userId:
          format: int64
          type: integer
      type: object
    BaseServices:
      properties:
        capacity:
          format: int32
          type: integer
        category:
          $ref: "#/components/schemas/ServiceCategory"
        categoryId:
          format: int32
          type: integer
        creationTime:
          format: date-time
          type: string
        description:
          minLength: 20
          type: string
        geoDetails:
          $ref: "#/components/schemas/GeoDetails"
        id:
          format: int64
          type: integer
        images:
          items:
            $ref: "#/components/schemas/ServiceImages"
          type: array
          uniqueItems: false
        mainImage:
          type: string
        phone:
          type: string
        status:
          type: boolean
        title:
          type: string
        user:
          $ref: "#/components/schemas/User"
      required:
        - description
        - user
        - categoryId
        - images
        - category
      type: object
    ChangePasswordDto:
      properties:
        currentPassword:
          type: string
        newPassword:
          type: string
      required:
        - currentPassword
        - newPassword
      type: object
    ChangeUiThemeInput:
      properties:
        theme:
          maxLength: 32
          minLength: 0
          type: string
      required:
        - theme
      type: object
    ChangeUserLanguageDto:
      properties:
        languageName:
          type: string
      required:
        - languageName
      type: object
    CityDto:
      properties:
        id:
          format: int32
          type: integer
        title:
          type: string
      type: object
    ConfirmCodeDto:
      properties:
        code:
          format: int32
          type: integer
        userName:
          type: string
      required:
        - userName
        - code
      type: object
    CreateRoleDto:
      properties:
        description:
          maxLength: 5000
          minLength: 0
          type: string
        displayName:
          maxLength: 64
          minLength: 0
          type: string
        grantedPermissions:
          items:
            type: string
          type: array
          uniqueItems: false
        name:
          maxLength: 32
          minLength: 0
          type: string
        normalizedName:
          type: string
      required:
        - name
        - displayName
      type: object
    CreateTenantDto:
      properties:
        adminEmailAddress:
          maxLength: 256
          minLength: 0
          type: string
        connectionString:
          maxLength: 1024
          minLength: 0
          type: string
        isActive:
          type: boolean
        name:
          maxLength: 128
          minLength: 0
          type: string
        tenancyName:
          maxLength: 64
          minLength: 0
          pattern: ^[a-zA-Z][a-zA-Z0-9_-]{1,}$
          type: string
      required:
        - tenancyName
        - name
        - adminEmailAddress
      type: object
    CreateUserDto:
      properties:
        userName:
          maxLength: 256
          minLength: 0
          type: string
      required:
        - userName
      type: object
    CreateWeddingVendorDto:
      properties:
        base64Images:
          items:
            $ref: "#/components/schemas/ImageData"
          type: array
          uniqueItems: false
        capacity:
          format: int32
          type: integer
        categoryId:
          format: int32
          type: integer
        description:
          minLength: 20
          type: string
        lat:
          format: double
          type: number
        lng:
          format: double
          type: number
        mainImage:
          type: string
        phone:
          type: string
        serviceFacilities:
          items:
            format: int32
            type: integer
          type: array
          uniqueItems: false
        title:
          maxLength: 60
          minLength: 3
          type: string
        userId:
          format: int64
          type: integer
      required:
        - title
        - description
        - categoryId
      type: object
    ExternalAuthenticateModel:
      properties:
        authProvider:
          maxLength: 128
          minLength: 0
          type: string
        providerAccessCode:
          type: string
        providerKey:
          maxLength: 256
          minLength: 0
          type: string
      required:
        - authProvider
        - providerKey
        - providerAccessCode
      type: object
    ExternalAuthenticateResultModel:
      properties:
        accessToken:
          type: string
        encryptedAccessToken:
          type: string
        expireInSeconds:
          format: int32
          type: integer
        waitingForActivation:
          type: boolean
      type: object
    ExternalLoginProviderInfoModel:
      properties:
        clientId:
          type: string
        name:
          type: string
      type: object
    FlatPermissionDto:
      properties:
        description:
          type: string
        displayName:
          type: string
        name:
          type: string
      type: object
    GeoDetails:
      properties:
        address:
          type: string
        baseServices:
          $ref: "#/components/schemas/BaseServices"
        city:
          type: string
        country:
          type: string
        creationTime:
          format: date-time
          type: string
        district:
          type: string
        id:
          format: int64
          type: integer
        lat:
          format: double
          type: number
        lng:
          format: double
          type: number
        locality:
          type: string
        place:
          type: string
        province:
          type: string
        serviceId:
          format: int64
          type: integer
      type: object
    GeoDetailsCreateDto:
      properties:
        lat:
          format: double
          type: number
        lng:
          format: double
          type: number
        phone:
          type: string
        serviceId:
          format: int64
          type: integer
      required:
        - serviceId
        - lat
        - lng
        - phone
      type: object
    GeoDetailsDto:
      properties:
        address:
          type: string
        area:
          type: string
        city:
          type: string
        country:
          type: string
        district:
          type: string
        id:
          format: int64
          type: integer
      type: object
    GeoDetailsUpdateDto:
      properties:
        id:
          format: int64
          type: integer
        lat:
          format: double
          type: number
        lng:
          format: double
          type: number
        phone:
          type: string
        serviceId:
          format: int64
          type: integer
      required:
        - serviceId
        - lat
        - lng
        - phone
      type: object
    GetCurrentLoginInformationsOutput:
      properties:
        application:
          $ref: "#/components/schemas/ApplicationInfoDto"
        tenant:
          $ref: "#/components/schemas/TenantLoginInfoDto"
        user:
          $ref: "#/components/schemas/UserLoginInfoDto"
      type: object
    GetRoleForEditOutput:
      properties:
        grantedPermissionNames:
          items:
            type: string
          type: array
          uniqueItems: false
        permissions:
          items:
            $ref: "#/components/schemas/FlatPermissionDto"
          type: array
          uniqueItems: false
        role:
          $ref: "#/components/schemas/RoleEditDto"
      type: object
    ImageData:
      properties:
        content:
          type: string
        fileType:
          type: string
        id:
          type: string
        isMain:
          type: boolean
      type: object
    IsTenantAvailableInput:
      properties:
        tenancyName:
          maxLength: 64
          minLength: 0
          type: string
      required:
        - tenancyName
      type: object
    IsTenantAvailableOutput:
      properties:
        state:
          enum:
            - 1
            - 2
            - 3
          format: int32
          type: integer
        tenantId:
          format: int32
          type: integer
      type: object
    LoginModel:
      properties:
        mobileNumber:
          maxLength: 11
          minLength: 0
          type: string
        password:
          type: string
      required:
        - mobileNumber
      type: object
    PermissionDto:
      properties:
        description:
          type: string
        displayName:
          type: string
        id:
          format: int64
          type: integer
        name:
          type: string
      type: object
    ProhibitPermissionInput:
      properties:
        permissionName:
          type: string
        userId:
          format: int64
          type: integer
      type: object
    ProvinceDto:
      properties:
        id:
          format: int32
          type: integer
        title:
          type: string
      type: object
    RegisterInput:
      properties:
        userName:
          maxLength: 256
          minLength: 0
          type: string
      required:
        - userName
      type: object
    RegisterOutput:
      properties:
        canLogin:
          type: boolean
      type: object
    ResetPasswordDto:
      properties:
        adminPassword:
          type: string
        newPassword:
          type: string
        userId:
          format: int64
          type: integer
      required:
        - adminPassword
        - userId
        - newPassword
      type: object
    RoleDto:
      properties:
        description:
          maxLength: 5000
          minLength: 0
          type: string
        displayName:
          maxLength: 64
          minLength: 0
          type: string
        grantedPermissions:
          items:
            type: string
          type: array
          uniqueItems: false
        id:
          format: int32
          type: integer
        name:
          maxLength: 32
          minLength: 0
          type: string
        normalizedName:
          type: string
      required:
        - name
        - displayName
      type: object
    RoleEditDto:
      properties:
        description:
          maxLength: 5000
          minLength: 0
          type: string
        displayName:
          maxLength: 64
          minLength: 0
          type: string
        id:
          format: int32
          type: integer
        isStatic:
          type: boolean
        name:
          maxLength: 32
          minLength: 0
          type: string
      required:
        - name
        - displayName
      type: object
    RoleListDto:
      properties:
        creationTime:
          format: date-time
          type: string
        displayName:
          type: string
        id:
          format: int32
          type: integer
        isDefault:
          type: boolean
        isStatic:
          type: boolean
        name:
          type: string
      type: object
    ServiceCategory:
      properties:
        baseServices:
          items:
            $ref: "#/components/schemas/BaseServices"
          type: array
          uniqueItems: false
        children:
          items:
            $ref: "#/components/schemas/ServiceCategory"
          type: array
          uniqueItems: false
        creationTime:
          format: date-time
          type: string
        icon:
          type: string
        id:
          format: int32
          type: integer
        parentId:
          format: int32
          type: integer
        title:
          type: string
      required:
        - title
      type: object
    ServiceCategoryDto:
      properties:
        children:
          items:
            $ref: "#/components/schemas/ServiceCategoryDto"
          type: array
          uniqueItems: false
        icon:
          type: string
        id:
          format: int32
          type: integer
        parentId:
          format: int32
          type: integer
        title:
          type: string
      required:
        - title
      type: object
    ServiceCategoryUpdateDto:
      properties:
        children:
          items:
            $ref: "#/components/schemas/ServiceCategoryDto"
          type: array
          uniqueItems: false
        icon:
          type: string
        id:
          format: int32
          type: integer
        parent:
          $ref: "#/components/schemas/ServiceCategoryDto"
        parentId:
          format: int32
          type: integer
        title:
          type: string
      required:
        - title
      type: object
    ServiceCategroyCreateDto:
      properties:
        icon:
          type: string
        id:
          format: int32
          type: integer
        parent:
          $ref: "#/components/schemas/ServiceCategoryDto"
        parentId:
          format: int32
          type: integer
        title:
          type: string
      required:
        - title
      type: object
    ServiceFacilityCreateDto:
      properties:
        icon:
          type: string
        title:
          type: string
      required:
        - title
      type: object
    ServiceFacilityDto:
      properties:
        icon:
          type: string
        id:
          format: int32
          type: integer
        title:
          type: string
      type: object
    ServiceFacilityUpdateDto:
      properties:
        icon:
          type: string
        id:
          format: int32
          type: integer
        title:
          type: string
      type: object
    ServiceImages:
      properties:
        alt:
          type: string
        baseServices:
          $ref: "#/components/schemas/BaseServices"
        creationTime:
          format: date-time
          type: string
        id:
          format: int64
          type: integer
        isMain:
          type: boolean
        serviceId:
          format: int64
          type: integer
        state:
          type: boolean
        thumbUrl:
          type: string
        title:
          type: string
        url:
          type: string
      required:
        - url
        - thumbUrl
        - title
        - alt
      type: object
    ServiceListModel:
      properties:
        address:
          type: string
        capacity:
          format: int32
          type: integer
        facilityDtos:
          items:
            $ref: "#/components/schemas/ServiceFacilityDto"
          type: array
          uniqueItems: false
        id:
          format: int64
          type: integer
        images:
          items:
            type: string
          type: array
          uniqueItems: false
        priceType:
          enum:
            - 1
            - 2
            - 3
            - 4
          format: int32
          type: integer
        rate:
          format: int32
          type: integer
        title:
          type: string
      type: object
    Setting:
      properties:
        creationTime:
          format: date-time
          type: string
        creatorUserId:
          format: int64
          type: integer
        id:
          format: int64
          type: integer
        lastModificationTime:
          format: date-time
          type: string
        lastModifierUserId:
          format: int64
          type: integer
        name:
          maxLength: 256
          minLength: 0
          type: string
        tenantId:
          format: int32
          type: integer
        userId:
          format: int64
          type: integer
        value:
          maxLength: 2000
          minLength: 0
          type: string
      required:
        - name
      type: object
    TenantDto:
      properties:
        id:
          format: int32
          type: integer
        isActive:
          type: boolean
        name:
          maxLength: 128
          minLength: 0
          type: string
        tenancyName:
          maxLength: 64
          minLength: 0
          pattern: ^[a-zA-Z][a-zA-Z0-9_-]{1,}$
          type: string
      required:
        - tenancyName
        - name
      type: object
    TenantLoginInfoDto:
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        tenancyName:
          type: string
      type: object
    UpdateWeddingVendorDto:
      properties:
        base64Images:
          items:
            $ref: "#/components/schemas/ImageData"
          type: array
          uniqueItems: false
        capacity:
          format: int32
          type: integer
        categoryId:
          format: int32
          type: integer
        description:
          minLength: 20
          type: string
        facilityDtos:
          items:
            $ref: "#/components/schemas/ServiceFacilityDto"
          type: array
          uniqueItems: false
        id:
          format: int64
          type: integer
        lat:
          format: double
          type: number
        lng:
          format: double
          type: number
        mainImage:
          type: string
        phone:
          type: string
        title:
          maxLength: 60
          minLength: 3
          type: string
        userId:
          format: int64
          type: integer
      required:
        - title
        - description
        - categoryId
      type: object
    User:
      properties:
        accessFailedCount:
          format: int32
          type: integer
        authenticationSource:
          maxLength: 64
          minLength: 0
          type: string
        claims:
          items:
            $ref: "#/components/schemas/UserClaim"
          type: array
          uniqueItems: false
        code:
          format: int32
          type: integer
        concurrencyStamp:
          maxLength: 128
          minLength: 0
          type: string
        creationTime:
          format: date-time
          type: string
        creatorUser:
          $ref: "#/components/schemas/User"
        creatorUserId:
          format: int64
          type: integer
        deleterUser:
          $ref: "#/components/schemas/User"
        deleterUserId:
          format: int64
          type: integer
        deletionTime:
          format: date-time
          type: string
        emailAddress:
          maxLength: 256
          minLength: 0
          type: string
        emailConfirmationCode:
          maxLength: 328
          minLength: 0
          type: string
        expireTime:
          format: date-time
          type: string
        fullName:
          readOnly: true
          type: string
        id:
          format: int64
          type: integer
        isActive:
          type: boolean
        isDeleted:
          type: boolean
        isEmailConfirmed:
          type: boolean
        isLockoutEnabled:
          type: boolean
        isPhoneNumberConfirmed:
          type: boolean
        isTwoFactorEnabled:
          type: boolean
        lastModificationTime:
          format: date-time
          type: string
        lastModifierUser:
          $ref: "#/components/schemas/User"
        lastModifierUserId:
          format: int64
          type: integer
        lockoutEndDateUtc:
          format: date-time
          type: string
        logins:
          items:
            $ref: "#/components/schemas/UserLogin"
          type: array
          uniqueItems: false
        name:
          maxLength: 64
          minLength: 0
          type: string
        normalizedEmailAddress:
          maxLength: 256
          minLength: 0
          type: string
        normalizedUserName:
          maxLength: 256
          minLength: 0
          type: string
        password:
          maxLength: 128
          minLength: 0
          type: string
        passwordResetCode:
          maxLength: 328
          minLength: 0
          type: string
        permissions:
          items:
            $ref: "#/components/schemas/UserPermissionSetting"
          type: array
          uniqueItems: false
        phoneNumber:
          maxLength: 32
          minLength: 0
          type: string
        roles:
          items:
            $ref: "#/components/schemas/UserRole"
          type: array
          uniqueItems: false
        securityStamp:
          maxLength: 128
          minLength: 0
          type: string
        settings:
          items:
            $ref: "#/components/schemas/Setting"
          type: array
          uniqueItems: false
        surname:
          maxLength: 64
          minLength: 0
          type: string
        tenantId:
          format: int32
          type: integer
        tokens:
          items:
            $ref: "#/components/schemas/UserToken"
          type: array
          uniqueItems: false
        userName:
          maxLength: 256
          minLength: 0
          type: string
      required:
        - normalizedUserName
        - normalizedEmailAddress
        - userName
        - emailAddress
        - name
        - surname
        - password
      type: object
    UserClaim:
      properties:
        claimType:
          maxLength: 256
          minLength: 0
          type: string
        claimValue:
          type: string
        creationTime:
          format: date-time
          type: string
        creatorUserId:
          format: int64
          type: integer
        id:
          format: int64
          type: integer
        tenantId:
          format: int32
          type: integer
        userId:
          format: int64
          type: integer
      type: object
    UserDto:
      properties:
        code:
          format: int32
          type: integer
        creationTime:
          format: date-time
          type: string
        emailAddress:
          maxLength: 256
          minLength: 0
          type: string
        expireTime:
          format: date-time
          type: string
        fullName:
          type: string
        id:
          format: int64
          type: integer
        isActive:
          type: boolean
        isExist:
          type: boolean
        lastLoginTime:
          format: date-time
          type: string
        name:
          maxLength: 64
          minLength: 0
          type: string
        roleNames:
          items:
            type: string
          type: array
          uniqueItems: false
        surname:
          maxLength: 64
          minLength: 0
          type: string
        userName:
          maxLength: 256
          minLength: 0
          type: string
      required:
        - userName
        - name
        - surname
        - emailAddress
      type: object
    UserLogin:
      properties:
        id:
          format: int64
          type: integer
        loginProvider:
          maxLength: 128
          minLength: 0
          type: string
        providerKey:
          maxLength: 256
          minLength: 0
          type: string
        tenantId:
          format: int32
          type: integer
        userId:
          format: int64
          type: integer
      required:
        - loginProvider
        - providerKey
      type: object
    UserLoginInfoDto:
      properties:
        emailAddress:
          type: string
        id:
          format: int64
          type: integer
        name:
          type: string
        surname:
          type: string
        userName:
          type: string
      type: object
    UserPermissionSetting:
      properties:
        creationTime:
          format: date-time
          type: string
        creatorUserId:
          format: int64
          type: integer
        id:
          format: int64
          type: integer
        isGranted:
          type: boolean
        name:
          maxLength: 128
          minLength: 0
          type: string
        tenantId:
          format: int32
          type: integer
        userId:
          format: int64
          type: integer
      required:
        - name
      type: object
    UserRole:
      properties:
        creationTime:
          format: date-time
          type: string
        creatorUserId:
          format: int64
          type: integer
        id:
          format: int64
          type: integer
        roleId:
          format: int32
          type: integer
        tenantId:
          format: int32
          type: integer
        userId:
          format: int64
          type: integer
      type: object
    UserServicesDto:
      properties:
        mainImage:
          type: string
        serviceId:
          format: int64
          type: integer
        status:
          type: boolean
        title:
          type: string
      type: object
    UserToken:
      properties:
        expireDate:
          format: date-time
          type: string
        id:
          format: int64
          type: integer
        loginProvider:
          maxLength: 128
          minLength: 0
          type: string
        name:
          maxLength: 128
          minLength: 0
          type: string
        tenantId:
          format: int32
          type: integer
        userId:
          format: int64
          type: integer
        value:
          maxLength: 512
          minLength: 0
          type: string
      type: object
    WeddingVendorDto:
      properties:
        categoryId:
          format: int32
          type: integer
        creationTime:
          format: date-time
          type: string
        description:
          type: string
        id:
          format: int64
          type: integer
        mainImage:
          type: string
        title:
          type: string
        userDto:
          $ref: "#/components/schemas/UserDto"
      type: object
    ListResultDto_PermissionDto_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/PermissionDto"
          type: array
          uniqueItems: false
      type: object
    ListResultDto_RoleDto_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/RoleDto"
          type: array
          uniqueItems: false
      type: object
    ListResultDto_RoleListDto_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/RoleListDto"
          type: array
          uniqueItems: false
      type: object
    PagedResultDto_GeoDetailsDto_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/GeoDetailsDto"
          type: array
          uniqueItems: false
        totalCount:
          format: int32
          type: integer
      type: object
    PagedResultDto_RoleDto_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/RoleDto"
          type: array
          uniqueItems: false
        totalCount:
          format: int32
          type: integer
      type: object
    PagedResultDto_ServiceCategoryDto_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/ServiceCategoryDto"
          type: array
          uniqueItems: false
        totalCount:
          format: int32
          type: integer
      type: object
    PagedResultDto_ServiceFacilityDto_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/ServiceFacilityDto"
          type: array
          uniqueItems: false
        totalCount:
          format: int32
          type: integer
      type: object
    PagedResultDto_TenantDto_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/TenantDto"
          type: array
          uniqueItems: false
        totalCount:
          format: int32
          type: integer
      type: object
    PagedResultDto_UserDto_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/UserDto"
          type: array
          uniqueItems: false
        totalCount:
          format: int32
          type: integer
      type: object
    PagedResultDto_WeddingVendorDto_:
      properties:
        items:
          items:
            $ref: "#/components/schemas/WeddingVendorDto"
          type: array
          uniqueItems: false
        totalCount:
          format: int32
          type: integer
      type: object
