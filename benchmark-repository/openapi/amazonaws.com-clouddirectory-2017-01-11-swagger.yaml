openapi: 3.0.0
info:
  version: 2017-01-11
  x-release: v4
  title: Amazon CloudDirectory
  description: <fullname>Amazon Cloud Directory</fullname> <p>Amazon Cloud Directory is a
    component of the AWS Directory Service that simplifies the development and
    management of cloud-scale web, mobile, and IoT applications. This guide
    describes the Cloud Directory operations that you can call programmatically
    and includes detailed information on data types and errors. For information
    about Cloud Directory features, see <a
    href="https://aws.amazon.com/directoryservice/">AWS Directory Service</a>
    and the <a
    href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/what_is_cloud_directory.html">Amazon
    Cloud Directory Developer Guide</a>.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: clouddirectory
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/clouddirectory-2017-01-11.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/clouddirectory/
security:
  - hmac: []
paths:
  /amazonclouddirectory/2017-01-11/object/facets#x-amz-data-partition:
    put:
      operationId: AddFacetToObject
      description: Adds a new <a>Facet</a> to an object. An object can have more than one
        facet applied on it.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddFacetToObjectResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "488":
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetValidationException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the
            <a>Directory</a> where the object resides. For more information, see
            <a>arns</a>.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - SchemaFacet
                - ObjectReference
              properties:
                SchemaFacet:
                  description: A facet.
                  type: object
                  properties:
                    SchemaArn:
                      $ref: "#/components/schemas/Arn"
                    FacetName:
                      $ref: "#/components/schemas/FacetName"
                ObjectAttributeList:
                  description: Attributes on the facet that you are adding to the object.
                  type: array
                  items:
                    $ref: "#/components/schemas/AttributeKeyAndValue"
                ObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: "#/components/schemas/SelectorObjectReference"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/schema/apply#x-amz-data-partition:
    put:
      operationId: ApplySchema
      description: Copies the input published schema, at the specified version, into the
        <a>Directory</a> with the same name and version as that of the published
        schema.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplySchemaResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: SchemaAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemaAlreadyExistsException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "488":
          description: InvalidAttachmentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAttachmentException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the
            <a>Directory</a> into which the schema is copied. For more
            information, see <a>arns</a>.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - PublishedSchemaArn
              properties:
                PublishedSchemaArn:
                  description: Published schema Amazon Resource Name (ARN) that needs to be
                    copied. For more information, see <a>arns</a>.
                  type: string
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/object/attach#x-amz-data-partition:
    put:
      operationId: AttachObject
      description: <p>Attaches an existing object to another object. An object can be
        accessed in two ways:</p> <ol> <li> <p>Using the path</p> </li> <li>
        <p>Using <code>ObjectIdentifier</code> </p> </li> </ol>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttachObjectResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "488":
          description: LinkNameAlreadyInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LinkNameAlreadyInUseException"
        "489":
          description: InvalidAttachmentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAttachmentException"
        "490":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "491":
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetValidationException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: Amazon Resource Name (ARN) that is associated with the
            <a>Directory</a> where both objects reside. For more information,
            see <a>arns</a>.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - ParentReference
                - ChildReference
                - LinkName
              properties:
                ParentReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: "#/components/schemas/SelectorObjectReference"
                ChildReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: "#/components/schemas/SelectorObjectReference"
                LinkName:
                  description: The link name with which the child object is attached to the
                    parent.
                  type: string
                  pattern: "[^\\/\\[\\]\\(\\):\\{\\}#@!?\\s\\\\;]+"
                  minLength: 1
                  maxLength: 64
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/policy/attach#x-amz-data-partition:
    put:
      operationId: AttachPolicy
      description: Attaches a policy object to a regular object. An object can have a
        limited number of attached policies.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttachPolicyResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "488":
          description: NotPolicyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotPolicyException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the
            <a>Directory</a> where both objects reside. For more information,
            see <a>arns</a>.
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/AttachPolicyBody"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/index/attach#x-amz-data-partition:
    put:
      operationId: AttachToIndex
      description: Attaches the specified object to the specified index.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttachToIndexResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: InvalidAttachmentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAttachmentException"
        "488":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "489":
          description: LinkNameAlreadyInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LinkNameAlreadyInUseException"
        "490":
          description: IndexedAttributeMissingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IndexedAttributeMissingException"
        "491":
          description: NotIndexException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotIndexException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) of the directory where the object and
            index exist.
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/AttachToIndexBody"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/typedlink/attach#x-amz-data-partition:
    put:
      operationId: AttachTypedLink
      description: Attaches a typed link to a specified source and target object. For more
        information, see <a
        href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed
        Links</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttachTypedLinkResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "488":
          description: InvalidAttachmentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAttachmentException"
        "489":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "490":
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetValidationException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) of the directory where you want to
            attach the typed link.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - SourceObjectReference
                - TargetObjectReference
                - TypedLinkFacet
                - Attributes
              properties:
                SourceObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: "#/components/schemas/SelectorObjectReference"
                TargetObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: "#/components/schemas/SelectorObjectReference"
                TypedLinkFacet:
                  description: Identifies the schema Amazon Resource Name (ARN) and facet
                    name for the typed link.
                  type: object
                  properties:
                    SchemaArn:
                      $ref: "#/components/schemas/Arn"
                    TypedLinkName:
                      $ref: "#/components/schemas/TypedLinkName"
                Attributes:
                  description: A set of attributes that are associated with the typed link.
                  type: array
                  items:
                    $ref: "#/components/schemas/AttributeNameAndValue"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/batchread#x-amz-data-partition:
    post:
      operationId: BatchRead
      description: "Performs all the read operations in a batch. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchReadResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the
            <a>Directory</a>. For more information, see <a>arns</a>.
          schema:
            type: string
        - name: x-amz-consistency-level
          in: header
          required: false
          description: Represents the manner and timing in which the successful write or
            update of an object is reflected in a subsequent read operation of
            that same object.
          schema:
            type: string
            enum:
              - SERIALIZABLE
              - EVENTUAL
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Operations
              properties:
                Operations:
                  description: A list of operations that are part of the batch.
                  type: array
                  items:
                    $ref: "#/components/schemas/BatchReadOperation"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/batchwrite#x-amz-data-partition:
    put:
      operationId: BatchWrite
      description: Performs all the write operations in a batch. Either all the operations
        succeed or none.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchWriteResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: BatchWriteException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchWriteException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the
            <a>Directory</a>. For more information, see <a>arns</a>.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Operations
              properties:
                Operations:
                  description: A list of operations that are part of the batch.
                  type: array
                  items:
                    $ref: "#/components/schemas/BatchWriteOperation"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/directory/create#x-amz-data-partition:
    put:
      operationId: CreateDirectory
      description: <p>Creates a <a>Directory</a> by copying the published schema into the
        directory. A directory cannot be created without a schema.</p> <p>You
        can also quickly create a directory using a managed schema, called the
        <code>QuickStartSchema</code>. For more information, see <a
        href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_managed.html">Managed
        Schema</a> in the <i>Amazon Cloud Directory Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDirectoryResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryAlreadyExistsException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) of the published schema that will be
            copied into the data <a>Directory</a>. For more information, see
            <a>arns</a>.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The name of the <a>Directory</a>. Should be unique per
                    account, per region.
                  type: string
                  pattern: ^[a-zA-Z0-9._-]*$
                  minLength: 1
                  maxLength: 64
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/facet/create#x-amz-data-partition:
    put:
      operationId: CreateFacet
      description: Creates a new <a>Facet</a> in a schema. Facet creation is allowed only
        in development or applied schemas.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateFacetResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "487":
          description: FacetAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetAlreadyExistsException"
        "488":
          description: InvalidRuleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRuleException"
        "489":
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetValidationException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The schema ARN in which the new <a>Facet</a> will be created. For
            more information, see <a>arns</a>.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The name of the <a>Facet</a>, which is unique for a given
                    schema.
                  type: string
                  pattern: ^[a-zA-Z0-9._-]*$
                  minLength: 1
                  maxLength: 64
                Attributes:
                  description: The attributes that are associated with the <a>Facet</a>.
                  type: array
                  items:
                    $ref: "#/components/schemas/FacetAttribute"
                ObjectType:
                  description: '<p>Specifies whether a given object created from this facet
                    is of type node, leaf node, policy or index.</p> <ul> <li>
                    <p>Node: Can have multiple children but one parent.</p>
                    </li> </ul> <ul> <li> <p>Leaf node: Cannot have children but
                    can have multiple parents.</p> </li> </ul> <ul> <li>
                    <p>Policy: Allows you to store a policy document and policy
                    type. For more information, see <a
                    href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies">Policies</a>.</p>
                    </li> </ul> <ul> <li> <p>Index: Can be created with the
                    Index API.</p> </li> </ul>'
                  type: string
                  enum:
                    - NODE
                    - LEAF_NODE
                    - POLICY
                    - INDEX
                FacetStyle:
                  description: There are two different styles that you can define on any
                    given facet, <code>Static</code> and <code>Dynamic</code>.
                    For static facets, all attributes must be defined in the
                    schema. For dynamic facets, attributes can be defined during
                    data plane operations.
                  type: string
                  enum:
                    - STATIC
                    - DYNAMIC
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/index#x-amz-data-partition:
    put:
      operationId: CreateIndex
      description: Creates an index object. See <a
        href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/indexing_search.html">Indexing
        and search</a> for more information.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateIndexResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "488":
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetValidationException"
        "489":
          description: LinkNameAlreadyInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LinkNameAlreadyInUseException"
        "490":
          description: UnsupportedIndexTypeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedIndexTypeException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the directory where the index should be created.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - OrderedIndexedAttributeList
                - IsUnique
              properties:
                OrderedIndexedAttributeList:
                  description: Specifies the attributes that should be indexed on.
                    Currently only a single attribute is supported.
                  type: array
                  items:
                    $ref: "#/components/schemas/AttributeKey"
                IsUnique:
                  description: Indicates whether the attribute that is being indexed has
                    unique values or not.
                  type: boolean
                ParentReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: "#/components/schemas/SelectorObjectReference"
                LinkName:
                  description: The name of the link between the parent object and the index
                    object.
                  type: string
                  pattern: "[^\\/\\[\\]\\(\\):\\{\\}#@!?\\s\\\\;]+"
                  minLength: 1
                  maxLength: 64
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/object#x-amz-data-partition:
    put:
      operationId: CreateObject
      description: "Creates an object in a <a>Directory</a>. Additionally attaches the
        object to a parent, if a parent reference and <code>LinkName</code> is
        specified. An object is simply a collection of <a>Facet</a> attributes.
        You can also use this API call to create a policy object, if the facet
        from which you create the object is a policy facet. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateObjectResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "488":
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetValidationException"
        "489":
          description: LinkNameAlreadyInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LinkNameAlreadyInUseException"
        "490":
          description: UnsupportedIndexTypeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedIndexTypeException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the
            <a>Directory</a> in which the object will be created. For more
            information, see <a>arns</a>.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - SchemaFacets
              properties:
                SchemaFacets:
                  description: A list of schema facets to be associated with the object. Do
                    not provide minor version components. See <a>SchemaFacet</a>
                    for details.
                  type: array
                  items:
                    $ref: "#/components/schemas/SchemaFacet"
                ObjectAttributeList:
                  description: The attribute map whose attribute ARN contains the key and
                    attribute value as the map value.
                  type: array
                  items:
                    $ref: "#/components/schemas/AttributeKeyAndValue"
                ParentReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: "#/components/schemas/SelectorObjectReference"
                LinkName:
                  description: The name of link that is used to attach this object to a
                    parent.
                  type: string
                  pattern: "[^\\/\\[\\]\\(\\):\\{\\}#@!?\\s\\\\;]+"
                  minLength: 1
                  maxLength: 64
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/schema/create:
    put:
      operationId: CreateSchema
      description: <p>Creates a new schema in a development state. A schema can exist in
        three phases:</p> <ul> <li> <p> <i>Development:</i> This is a mutable
        phase of the schema. All new schemas are in the development phase. Once
        the schema is finalized, it can be published.</p> </li> <li> <p>
        <i>Published:</i> Published schemas are immutable and have a version
        associated with them.</p> </li> <li> <p> <i>Applied:</i> Applied schemas
        are mutable in a way that allows you to add new schema facets. You can
        also add new, nonrequired attributes to existing schema facets. You can
        apply only published schemas to directories. </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateSchemaResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: SchemaAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemaAlreadyExistsException"
        "487":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The name that is associated with the schema. This is unique
                    to each account and in each region.
                  type: string
                  pattern: ^[a-zA-Z0-9._-]*$
                  minLength: 1
                  maxLength: 32
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/typedlink/facet/create#x-amz-data-partition:
    put:
      operationId: CreateTypedLinkFacet
      description: Creates a <a>TypedLinkFacet</a>. For more information, see <a
        href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed
        Links</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTypedLinkFacetResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "487":
          description: FacetAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetAlreadyExistsException"
        "488":
          description: InvalidRuleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRuleException"
        "489":
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetValidationException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the schema.
            For more information, see <a>arns</a>.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Facet
              properties:
                Facet:
                  description: Defines the typed links structure and its attributes. To
                    create a typed link facet, use the
                    <a>CreateTypedLinkFacet</a> API.
                  type: object
                  properties:
                    Name:
                      $ref: "#/components/schemas/TypedLinkName"
                    Attributes:
                      $ref: "#/components/schemas/TypedLinkAttributeDefinitionList"
                    IdentityAttributeOrder:
                      $ref: "#/components/schemas/AttributeNameList"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/directory#x-amz-data-partition:
    put:
      operationId: DeleteDirectory
      description: Deletes a directory. Only disabled directories can be deleted. A deleted
        directory cannot be undone. Exercise extreme caution when deleting
        directories.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDirectoryResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: DirectoryNotDisabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotDisabledException"
        "482":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryDeletedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryDeletedException"
        "487":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "488":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the directory to delete.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/facet/delete#x-amz-data-partition:
    put:
      operationId: DeleteFacet
      description: Deletes a given <a>Facet</a>. All attributes and <a>Rule</a>s that are
        associated with the facet will be deleted. Only development schema
        facets are allowed deletion.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteFacetResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "487":
          description: FacetNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetNotFoundException"
        "488":
          description: FacetInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetInUseException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the
            <a>Facet</a>. For more information, see <a>arns</a>.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The name of the facet to delete.
                  type: string
                  pattern: ^[a-zA-Z0-9._-]*$
                  minLength: 1
                  maxLength: 64
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/object/delete#x-amz-data-partition:
    put:
      operationId: DeleteObject
      description: Deletes an object and its associated attributes. Only objects with no
        children and no parents can be deleted. The maximum number of attributes
        that can be deleted during an object deletion is 30. For more
        information, see <a
        href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html">Amazon
        Cloud Directory Limits</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteObjectResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "488":
          description: ObjectNotDetachedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectNotDetachedException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the
            <a>Directory</a> where the object resides. For more information, see
            <a>arns</a>.
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/DeleteObjectBody"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/schema#x-amz-data-partition:
    put:
      operationId: DeleteSchema
      description: "Deletes a given schema. Schemas in a development and published state
        can only be deleted. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSchemaResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "487":
          description: StillContainsLinksException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StillContainsLinksException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) of the development schema. For more
            information, see <a>arns</a>.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/typedlink/facet/delete#x-amz-data-partition:
    put:
      operationId: DeleteTypedLinkFacet
      description: Deletes a <a>TypedLinkFacet</a>. For more information, see <a
        href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed
        Links</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteTypedLinkFacetResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "487":
          description: FacetNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetNotFoundException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the schema.
            For more information, see <a>arns</a>.
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/DeleteTypedLinkFacetBody"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/index/detach#x-amz-data-partition:
    put:
      operationId: DetachFromIndex
      description: Detaches the specified object from the specified index.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DetachFromIndexResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "488":
          description: ObjectAlreadyDetachedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectAlreadyDetachedException"
        "489":
          description: NotIndexException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotIndexException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) of the directory the index and object
            exist in.
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/AttachToIndexBody"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/object/detach#x-amz-data-partition:
    put:
      operationId: DetachObject
      description: Detaches a given object from the parent object. The object that is to be
        detached from the parent is specified by the link name.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DetachObjectResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "488":
          description: NotNodeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotNodeException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the
            <a>Directory</a> where objects reside. For more information, see
            <a>arns</a>.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - ParentReference
                - LinkName
              properties:
                ParentReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: "#/components/schemas/SelectorObjectReference"
                LinkName:
                  description: The link name associated with the object that needs to be
                    detached.
                  type: string
                  pattern: "[^\\/\\[\\]\\(\\):\\{\\}#@!?\\s\\\\;]+"
                  minLength: 1
                  maxLength: 64
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/policy/detach#x-amz-data-partition:
    put:
      operationId: DetachPolicy
      description: Detaches a policy from an object.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DetachPolicyResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "488":
          description: NotPolicyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotPolicyException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the
            <a>Directory</a> where both objects reside. For more information,
            see <a>arns</a>.
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/AttachPolicyBody"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/typedlink/detach#x-amz-data-partition:
    put:
      operationId: DetachTypedLink
      description: Detaches a typed link from a specified source and target object. For
        more information, see <a
        href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed
        Links</a>.
      responses:
        "200":
          description: Success
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "488":
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetValidationException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) of the directory where you want to
            detach the typed link.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - TypedLinkSpecifier
              properties:
                TypedLinkSpecifier:
                  description: Contains all the information that is used to uniquely
                    identify a typed link. The parameters discussed in this
                    topic are used to uniquely specify the typed link being
                    operated on. The <a>AttachTypedLink</a> API returns a typed
                    link specifier while the <a>DetachTypedLink</a> API accepts
                    one as input. Similarly, the <a>ListIncomingTypedLinks</a>
                    and <a>ListOutgoingTypedLinks</a> API operations provide
                    typed link specifiers as output. You can also construct a
                    typed link specifier from scratch.
                  type: object
                  properties:
                    TypedLinkFacet:
                      $ref: "#/components/schemas/TypedLinkSchemaAndFacetName"
                    SourceObjectReference:
                      $ref: "#/components/schemas/ObjectReference"
                    TargetObjectReference:
                      $ref: "#/components/schemas/ObjectReference"
                    IdentityAttributeValues:
                      $ref: "#/components/schemas/AttributeNameAndValueList"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/directory/disable#x-amz-data-partition:
    put:
      operationId: DisableDirectory
      description: Disables the specified directory. Disabled directories cannot be read or
        written to. Only enabled directories can be disabled. Disabled
        directories may be reenabled.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisableDirectoryResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: DirectoryDeletedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryDeletedException"
        "482":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "487":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the directory to disable.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/directory/enable#x-amz-data-partition:
    put:
      operationId: EnableDirectory
      description: Enables the specified directory. Only disabled directories can be
        enabled. Once enabled, the directory can then be read and written to.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnableDirectoryResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: DirectoryDeletedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryDeletedException"
        "482":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "487":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the directory to enable.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/schema/getappliedschema:
    post:
      operationId: GetAppliedSchemaVersion
      description: Returns current applied schema version ARN, including the minor version
        in use.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAppliedSchemaVersionResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - SchemaArn
              properties:
                SchemaArn:
                  description: The ARN of the applied schema.
                  type: string
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/directory/get#x-amz-data-partition:
    post:
      operationId: GetDirectory
      description: Retrieves metadata about a directory.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDirectoryResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the directory.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/facet#x-amz-data-partition:
    post:
      operationId: GetFacet
      description: Gets details of the <a>Facet</a>, such as facet name, attributes,
        <a>Rule</a>s, or <code>ObjectType</code>. You can call this on all kinds
        of schema facets -- published, development, or applied.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetFacetResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "487":
          description: FacetNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetNotFoundException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the
            <a>Facet</a>. For more information, see <a>arns</a>.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The name of the facet to retrieve.
                  type: string
                  pattern: ^[a-zA-Z0-9._-]*$
                  minLength: 1
                  maxLength: 64
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    put:
      operationId: UpdateFacet
      description: <p>Does the following:</p> <ol> <li> <p>Adds new
        <code>Attributes</code>, <code>Rules</code>, or
        <code>ObjectTypes</code>.</p> </li> <li> <p>Updates existing
        <code>Attributes</code>, <code>Rules</code>, or
        <code>ObjectTypes</code>.</p> </li> <li> <p>Deletes existing
        <code>Attributes</code>, <code>Rules</code>, or
        <code>ObjectTypes</code>.</p> </li> </ol>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateFacetResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: InvalidFacetUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFacetUpdateException"
        "487":
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetValidationException"
        "488":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "489":
          description: FacetNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetNotFoundException"
        "490":
          description: InvalidRuleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRuleException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the
            <a>Facet</a>. For more information, see <a>arns</a>.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The name of the facet.
                  type: string
                  pattern: ^[a-zA-Z0-9._-]*$
                  minLength: 1
                  maxLength: 64
                AttributeUpdates:
                  description: "List of attributes that need to be updated in a given
                    schema <a>Facet</a>. Each attribute is followed by
                    <code>AttributeAction</code>, which specifies the type of
                    update operation to perform. "
                  type: array
                  items:
                    $ref: "#/components/schemas/FacetAttributeUpdate"
                ObjectType:
                  description: The object type that is associated with the facet. See
                    <a>CreateFacetRequest$ObjectType</a> for more details.
                  type: string
                  enum:
                    - NODE
                    - LEAF_NODE
                    - POLICY
                    - INDEX
        required: true
  /amazonclouddirectory/2017-01-11/typedlink/attributes/get#x-amz-data-partition:
    post:
      operationId: GetLinkAttributes
      description: Retrieves attributes that are associated with a typed link.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLinkAttributesResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "488":
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetValidationException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the Directory
            where the typed link resides. For more information, see <a>arns</a>
            or <a
            href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed
            Links</a>.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - TypedLinkSpecifier
                - AttributeNames
              properties:
                TypedLinkSpecifier:
                  description: Contains all the information that is used to uniquely
                    identify a typed link. The parameters discussed in this
                    topic are used to uniquely specify the typed link being
                    operated on. The <a>AttachTypedLink</a> API returns a typed
                    link specifier while the <a>DetachTypedLink</a> API accepts
                    one as input. Similarly, the <a>ListIncomingTypedLinks</a>
                    and <a>ListOutgoingTypedLinks</a> API operations provide
                    typed link specifiers as output. You can also construct a
                    typed link specifier from scratch.
                  type: object
                  properties:
                    TypedLinkFacet:
                      $ref: "#/components/schemas/TypedLinkSchemaAndFacetName"
                    SourceObjectReference:
                      $ref: "#/components/schemas/ObjectReference"
                    TargetObjectReference:
                      $ref: "#/components/schemas/ObjectReference"
                    IdentityAttributeValues:
                      $ref: "#/components/schemas/AttributeNameAndValueList"
                AttributeNames:
                  description: A list of attribute names whose values will be retrieved.
                  type: array
                  items:
                    $ref: "#/components/schemas/AttributeName"
                ConsistencyLevel:
                  description: The consistency level at which to retrieve the attributes on
                    a typed link.
                  type: string
                  enum:
                    - SERIALIZABLE
                    - EVENTUAL
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/object/attributes/get#x-amz-data-partition:
    post:
      operationId: GetObjectAttributes
      description: Retrieves attributes within a facet that are associated with an object.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetObjectAttributesResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "488":
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetValidationException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the
            <a>Directory</a> where the object resides.
          schema:
            type: string
        - name: x-amz-consistency-level
          in: header
          required: false
          description: The consistency level at which to retrieve the attributes on an
            object.
          schema:
            type: string
            enum:
              - SERIALIZABLE
              - EVENTUAL
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - ObjectReference
                - SchemaFacet
                - AttributeNames
              properties:
                ObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: "#/components/schemas/SelectorObjectReference"
                SchemaFacet:
                  description: A facet.
                  type: object
                  properties:
                    SchemaArn:
                      $ref: "#/components/schemas/Arn"
                    FacetName:
                      $ref: "#/components/schemas/FacetName"
                AttributeNames:
                  description: List of attribute names whose values will be retrieved.
                  type: array
                  items:
                    $ref: "#/components/schemas/AttributeName"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/object/information#x-amz-data-partition:
    post:
      operationId: GetObjectInformation
      description: Retrieves metadata about an object.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetObjectInformationResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the directory being retrieved.
          schema:
            type: string
        - name: x-amz-consistency-level
          in: header
          required: false
          description: The consistency level at which to retrieve the object information.
          schema:
            type: string
            enum:
              - SERIALIZABLE
              - EVENTUAL
      requestBody:
        $ref: "#/components/requestBodies/DeleteObjectBody"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/schema/json#x-amz-data-partition:
    post:
      operationId: GetSchemaAsJson
      description: Retrieves a JSON representation of the schema. See <a
        href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_jsonformat.html#schemas_json">JSON
        Schema Format</a> for more information.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSchemaAsJsonResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "487":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the schema to retrieve.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    put:
      operationId: PutSchemaFromJson
      description: Allows a schema to be updated using JSON upload. Only available for
        development schemas. See <a
        href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_jsonformat.html#schemas_json">JSON
        Schema Format</a> for more information.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutSchemaFromJsonResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: InvalidSchemaDocException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidSchemaDocException"
        "487":
          description: InvalidRuleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRuleException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the schema to update.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Document
              properties:
                Document:
                  description: The replacement JSON schema.
                  type: string
        required: true
  /amazonclouddirectory/2017-01-11/typedlink/facet/get#x-amz-data-partition:
    post:
      operationId: GetTypedLinkFacetInformation
      description: Returns the identity attribute order for a specific
        <a>TypedLinkFacet</a>. For more information, see <a
        href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed
        Links</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTypedLinkFacetInformationResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "487":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "488":
          description: FacetNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetNotFoundException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the schema.
            For more information, see <a>arns</a>.
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/DeleteTypedLinkFacetBody"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/schema/applied:
    post:
      operationId: ListAppliedSchemaArns
      description: Lists schema major versions applied to a directory. If
        <code>SchemaArn</code> is provided, lists the minor version.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAppliedSchemaArnsResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "487":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - DirectoryArn
              properties:
                DirectoryArn:
                  description: The ARN of the directory you are listing.
                  type: string
                SchemaArn:
                  description: The response for <code>ListAppliedSchemaArns</code> when
                    this parameter is used will list all minor version ARNs for
                    a major version.
                  type: string
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of results to retrieve.
                  type: integer
                  minimum: 1
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/object/indices#x-amz-data-partition:
    post:
      operationId: ListAttachedIndices
      description: Lists indices attached to the specified object.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAttachedIndicesResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the directory.
          schema:
            type: string
        - name: x-amz-consistency-level
          in: header
          required: false
          description: The consistency level to use for this operation.
          schema:
            type: string
            enum:
              - SERIALIZABLE
              - EVENTUAL
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - TargetReference
              properties:
                TargetReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: "#/components/schemas/SelectorObjectReference"
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of results to retrieve.
                  type: integer
                  minimum: 1
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/schema/development:
    post:
      operationId: ListDevelopmentSchemaArns
      description: Retrieves each Amazon Resource Name (ARN) of schemas in the development
        state.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDevelopmentSchemaArnsResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "487":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ListDevelopmentSchemaArnsBody"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/directory/list:
    post:
      operationId: ListDirectories
      description: Lists directories created within an account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDirectoriesResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of results to retrieve.
                  type: integer
                  minimum: 1
                state:
                  description: The state of the directories in the list. Can be either
                    Enabled, Disabled, or Deleted.
                  type: string
                  enum:
                    - ENABLED
                    - DISABLED
                    - DELETED
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/facet/attributes#x-amz-data-partition:
    post:
      operationId: ListFacetAttributes
      description: Retrieves attributes attached to the facet.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListFacetAttributesResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "487":
          description: FacetNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetNotFoundException"
        "488":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the schema where the facet resides.
          schema:
            type: string
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The name of the facet whose attributes will be retrieved.
                  type: string
                  pattern: ^[a-zA-Z0-9._-]*$
                  minLength: 1
                  maxLength: 64
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of results to retrieve.
                  type: integer
                  minimum: 1
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/facet/list#x-amz-data-partition:
    post:
      operationId: ListFacetNames
      description: Retrieves the names of facets that exist in a schema.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListFacetNamesResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "487":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) to retrieve facet names from.
          schema:
            type: string
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ListDevelopmentSchemaArnsBody"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/typedlink/incoming#x-amz-data-partition:
    post:
      operationId: ListIncomingTypedLinks
      description: Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a>
        information for an object. It also supports filtering by typed link
        facet and identity attributes. For more information, see <a
        href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed
        Links</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListIncomingTypedLinksResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "488":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "489":
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetValidationException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) of the directory where you want to
            list the typed links.
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ListIncomingTypedLinksBody"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/index/targets#x-amz-data-partition:
    post:
      operationId: ListIndex
      description: Lists objects attached to the specified index.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListIndexResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetValidationException"
        "484":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "485":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "486":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "487":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "488":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "489":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "490":
          description: NotIndexException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotIndexException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the directory that the index exists in.
          schema:
            type: string
        - name: x-amz-consistency-level
          in: header
          required: false
          description: The consistency level to execute the request at.
          schema:
            type: string
            enum:
              - SERIALIZABLE
              - EVENTUAL
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - IndexReference
              properties:
                RangesOnIndexedValues:
                  description: Specifies the ranges of indexed values that you want to
                    query.
                  type: array
                  items:
                    $ref: "#/components/schemas/ObjectAttributeRange"
                IndexReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: "#/components/schemas/SelectorObjectReference"
                MaxResults:
                  description: The maximum number of objects in a single page to retrieve
                    from the index during a request. For more information, see
                    <a
                    href="http://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html">Amazon
                    Cloud Directory Limits</a>.
                  type: integer
                  minimum: 1
                NextToken:
                  description: The pagination token.
                  type: string
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/schema/managed:
    post:
      operationId: ListManagedSchemaArns
      description: Lists the major version families of each managed schema. If a major
        version ARN is provided as SchemaArn, the minor version revisions in
        that family are listed instead.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListManagedSchemaArnsResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                SchemaArn:
                  description: The response for ListManagedSchemaArns. When this parameter
                    is used, all minor version ARNs for a major version are
                    listed.
                  type: string
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of results to retrieve.
                  type: integer
                  minimum: 1
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/object/attributes#x-amz-data-partition:
    post:
      operationId: ListObjectAttributes
      description: "Lists all attributes that are associated with an object. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListObjectAttributesResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "488":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "489":
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetValidationException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the
            <a>Directory</a> where the object resides. For more information, see
            <a>arns</a>.
          schema:
            type: string
        - name: x-amz-consistency-level
          in: header
          required: false
          description: Represents the manner and timing in which the successful write or
            update of an object is reflected in a subsequent read operation of
            that same object.
          schema:
            type: string
            enum:
              - SERIALIZABLE
              - EVENTUAL
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - ObjectReference
              properties:
                ObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: "#/components/schemas/SelectorObjectReference"
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of items to be retrieved in a single
                    call. This is an approximate number.
                  type: integer
                  minimum: 1
                FacetFilter:
                  description: A facet.
                  type: object
                  properties:
                    SchemaArn:
                      $ref: "#/components/schemas/Arn"
                    FacetName:
                      $ref: "#/components/schemas/FacetName"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/object/children#x-amz-data-partition:
    post:
      operationId: ListObjectChildren
      description: Returns a paginated list of child objects that are associated with a
        given object.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListObjectChildrenResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "488":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "489":
          description: NotNodeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotNodeException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the
            <a>Directory</a> where the object resides. For more information, see
            <a>arns</a>.
          schema:
            type: string
        - name: x-amz-consistency-level
          in: header
          required: false
          description: Represents the manner and timing in which the successful write or
            update of an object is reflected in a subsequent read operation of
            that same object.
          schema:
            type: string
            enum:
              - SERIALIZABLE
              - EVENTUAL
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ListObjectChildrenBody"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/object/parentpaths#x-amz-data-partition:
    post:
      operationId: ListObjectParentPaths
      description: <p>Retrieves all available parent paths for any object type such as
        node, leaf node, policy node, and index node objects. For more
        information about objects, see <a
        href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directorystructure.html">Directory
        Structure</a>.</p> <p>Use this API to evaluate all parents for an
        object. The call returns all objects from the root of the directory up
        to the requested object. The API returns the number of paths based on
        user-defined <code>MaxResults</code>, in case there are multiple paths
        to the parent. The order of the paths and nodes returned is consistent
        among multiple API calls unless the objects are deleted or moved. Paths
        not leading to the directory root are ignored from the target
        object.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListObjectParentPathsResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "488":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the directory to which the parent path applies.
          schema:
            type: string
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ListObjectChildrenBody"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/object/parent#x-amz-data-partition:
    post:
      operationId: ListObjectParents
      description: Lists parent objects that are associated with a given object in
        pagination fashion.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListObjectParentsResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "488":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "489":
          description: CannotListParentOfRootException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CannotListParentOfRootException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the
            <a>Directory</a> where the object resides. For more information, see
            <a>arns</a>.
          schema:
            type: string
        - name: x-amz-consistency-level
          in: header
          required: false
          description: Represents the manner and timing in which the successful write or
            update of an object is reflected in a subsequent read operation of
            that same object.
          schema:
            type: string
            enum:
              - SERIALIZABLE
              - EVENTUAL
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - ObjectReference
              properties:
                ObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: "#/components/schemas/SelectorObjectReference"
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of items to be retrieved in a single
                    call. This is an approximate number.
                  type: integer
                  minimum: 1
                IncludeAllLinksToEachParent:
                  description: When set to True, returns all
                    <a>ListObjectParentsResponse$ParentLinks</a>. There could be
                    multiple links between a parent-child pair.
                  type: boolean
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/object/policy#x-amz-data-partition:
    post:
      operationId: ListObjectPolicies
      description: Returns policies attached to an object in pagination fashion.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListObjectPoliciesResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "488":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the
            <a>Directory</a> where objects reside. For more information, see
            <a>arns</a>.
          schema:
            type: string
        - name: x-amz-consistency-level
          in: header
          required: false
          description: Represents the manner and timing in which the successful write or
            update of an object is reflected in a subsequent read operation of
            that same object.
          schema:
            type: string
            enum:
              - SERIALIZABLE
              - EVENTUAL
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ListObjectChildrenBody"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/typedlink/outgoing#x-amz-data-partition:
    post:
      operationId: ListOutgoingTypedLinks
      description: Returns a paginated list of all the outgoing <a>TypedLinkSpecifier</a>
        information for an object. It also supports filtering by typed link
        facet and identity attributes. For more information, see <a
        href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed
        Links</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOutgoingTypedLinksResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "488":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "489":
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetValidationException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) of the directory where you want to
            list the typed links.
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ListIncomingTypedLinksBody"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/policy/attachment#x-amz-data-partition:
    post:
      operationId: ListPolicyAttachments
      description: Returns all of the <code>ObjectIdentifiers</code> to which a given
        policy is attached.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPolicyAttachmentsResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "488":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "489":
          description: NotPolicyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotPolicyException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the
            <a>Directory</a> where objects reside. For more information, see
            <a>arns</a>.
          schema:
            type: string
        - name: x-amz-consistency-level
          in: header
          required: false
          description: Represents the manner and timing in which the successful write or
            update of an object is reflected in a subsequent read operation of
            that same object.
          schema:
            type: string
            enum:
              - SERIALIZABLE
              - EVENTUAL
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - PolicyReference
              properties:
                PolicyReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: "#/components/schemas/SelectorObjectReference"
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of items to be retrieved in a single
                    call. This is an approximate number.
                  type: integer
                  minimum: 1
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/schema/published:
    post:
      operationId: ListPublishedSchemaArns
      description: Lists the major version families of each published schema. If a major
        version ARN is provided as <code>SchemaArn</code>, the minor version
        revisions in that family are listed instead.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPublishedSchemaArnsResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "487":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                SchemaArn:
                  description: The response for <code>ListPublishedSchemaArns</code> when
                    this parameter is used will list all minor version ARNs for
                    a major version.
                  type: string
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of results to retrieve.
                  type: integer
                  minimum: 1
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/tags:
    post:
      operationId: ListTagsForResource
      description: Returns tags for a resource. Tagging is currently supported only for
        directories with a limit of 50 tags per directory. All 50 tags are
        returned for a given directory with this API call.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "487":
          description: InvalidTaggingRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTaggingRequestException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - ResourceArn
              properties:
                ResourceArn:
                  description: The Amazon Resource Name (ARN) of the resource. Tagging is
                    only supported for directories.
                  type: string
                NextToken:
                  description: The pagination token. This is for future use. Currently
                    pagination is not supported for tagging.
                  type: string
                MaxResults:
                  description: The <code>MaxResults</code> parameter sets the maximum
                    number of results returned in a single page. This is for
                    future use and is not supported currently.
                  type: integer
                  minimum: 50
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/typedlink/facet/attributes#x-amz-data-partition:
    post:
      operationId: ListTypedLinkFacetAttributes
      description: Returns a paginated list of all attribute definitions for a particular
        <a>TypedLinkFacet</a>. For more information, see <a
        href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed
        Links</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTypedLinkFacetAttributesResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "487":
          description: FacetNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetNotFoundException"
        "488":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the schema.
            For more information, see <a>arns</a>.
          schema:
            type: string
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The unique name of the typed link facet.
                  type: string
                  pattern: ^[a-zA-Z0-9._-]*$
                NextToken:
                  description: The pagination token.
                  type: string
                MaxResults:
                  description: The maximum number of results to retrieve.
                  type: integer
                  minimum: 1
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/typedlink/facet/list#x-amz-data-partition:
    post:
      operationId: ListTypedLinkFacetNames
      description: Returns a paginated list of <code>TypedLink</code> facet names for a
        particular schema. For more information, see <a
        href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed
        Links</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTypedLinkFacetNamesResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "487":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the schema.
            For more information, see <a>arns</a>.
          schema:
            type: string
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ListDevelopmentSchemaArnsBody"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/policy/lookup#x-amz-data-partition:
    post:
      operationId: LookupPolicy
      description: Lists all policies from the root of the <a>Directory</a> to the object
        specified. If there are no policies present, an empty list is returned.
        If policies are present, and if some objects don't have the policies
        attached, it returns the <code>ObjectIdentifier</code> for such objects.
        If policies are present, it returns <code>ObjectIdentifier</code>,
        <code>policyId</code>, and <code>policyType</code>. Paths that don't
        lead to the root from the target object are ignored. For more
        information, see <a
        href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies">Policies</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LookupPolicyResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "488":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the
            <a>Directory</a>. For more information, see <a>arns</a>.
          schema:
            type: string
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - ObjectReference
              properties:
                ObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: "#/components/schemas/SelectorObjectReference"
                NextToken:
                  description: The token to request the next page of results.
                  type: string
                MaxResults:
                  description: The maximum number of items to be retrieved in a single
                    call. This is an approximate number.
                  type: integer
                  minimum: 1
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/schema/publish#x-amz-data-partition:
    put:
      operationId: PublishSchema
      description: Publishes a development schema with a major version and a recommended
        minor version.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublishSchemaResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "487":
          description: SchemaAlreadyPublishedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemaAlreadyPublishedException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the
            development schema. For more information, see <a>arns</a>.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Version
              properties:
                Version:
                  description: The major version under which the schema will be published.
                    Schemas have both a major and minor version associated with
                    them.
                  type: string
                  pattern: ^[a-zA-Z0-9._-]*$
                  minLength: 1
                  maxLength: 10
                MinorVersion:
                  description: The minor version under which the schema will be published.
                    This parameter is recommended. Schemas have both a major and
                    minor version associated with them.
                  type: string
                  pattern: ^[a-zA-Z0-9._-]*$
                  minLength: 1
                  maxLength: 10
                Name:
                  description: The new name under which the schema will be published. If
                    this is not provided, the development schema is considered.
                  type: string
                  pattern: ^[a-zA-Z0-9._-]*$
                  minLength: 1
                  maxLength: 32
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/object/facets/delete#x-amz-data-partition:
    put:
      operationId: RemoveFacetFromObject
      description: Removes the specified facet from the specified object.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemoveFacetFromObjectResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "488":
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetValidationException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The ARN of the directory in which the object resides.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - SchemaFacet
                - ObjectReference
              properties:
                SchemaFacet:
                  description: A facet.
                  type: object
                  properties:
                    SchemaArn:
                      $ref: "#/components/schemas/Arn"
                    FacetName:
                      $ref: "#/components/schemas/FacetName"
                ObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: "#/components/schemas/SelectorObjectReference"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/tags/add:
    put:
      operationId: TagResource
      description: An API operation for adding tags to a resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "487":
          description: InvalidTaggingRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTaggingRequestException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - ResourceArn
                - Tags
              properties:
                ResourceArn:
                  description: The Amazon Resource Name (ARN) of the resource. Tagging is
                    only supported for directories.
                  type: string
                Tags:
                  description: A list of tag key-value pairs.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/tags/remove:
    put:
      operationId: UntagResource
      description: An API operation for removing tags from a resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "487":
          description: InvalidTaggingRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTaggingRequestException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - ResourceArn
                - TagKeys
              properties:
                ResourceArn:
                  description: The Amazon Resource Name (ARN) of the resource. Tagging is
                    only supported for directories.
                  type: string
                TagKeys:
                  description: Keys of the tag that need to be removed from the resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/TagKey"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/typedlink/attributes/update#x-amz-data-partition:
    post:
      operationId: UpdateLinkAttributes
      description: Updates a given typed link’s attributes. Attributes to be updated must
        not contribute to the typed link’s identity, as defined by its
        <code>IdentityAttributeOrder</code>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateLinkAttributesResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "488":
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetValidationException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the Directory
            where the updated typed link resides. For more information, see
            <a>arns</a> or <a
            href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed
            Links</a>.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - TypedLinkSpecifier
                - AttributeUpdates
              properties:
                TypedLinkSpecifier:
                  description: Contains all the information that is used to uniquely
                    identify a typed link. The parameters discussed in this
                    topic are used to uniquely specify the typed link being
                    operated on. The <a>AttachTypedLink</a> API returns a typed
                    link specifier while the <a>DetachTypedLink</a> API accepts
                    one as input. Similarly, the <a>ListIncomingTypedLinks</a>
                    and <a>ListOutgoingTypedLinks</a> API operations provide
                    typed link specifiers as output. You can also construct a
                    typed link specifier from scratch.
                  type: object
                  properties:
                    TypedLinkFacet:
                      $ref: "#/components/schemas/TypedLinkSchemaAndFacetName"
                    SourceObjectReference:
                      $ref: "#/components/schemas/ObjectReference"
                    TargetObjectReference:
                      $ref: "#/components/schemas/ObjectReference"
                    IdentityAttributeValues:
                      $ref: "#/components/schemas/AttributeNameAndValueList"
                AttributeUpdates:
                  description: The attributes update structure.
                  type: array
                  items:
                    $ref: "#/components/schemas/LinkAttributeUpdate"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/object/update#x-amz-data-partition:
    put:
      operationId: UpdateObjectAttributes
      description: Updates a given object's attributes.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateObjectAttributesResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: DirectoryNotEnabledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectoryNotEnabledException"
        "487":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "488":
          description: LinkNameAlreadyInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LinkNameAlreadyInUseException"
        "489":
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetValidationException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the
            <a>Directory</a> where the object resides. For more information, see
            <a>arns</a>.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - ObjectReference
                - AttributeUpdates
              properties:
                ObjectReference:
                  description: The reference that identifies an object.
                  type: object
                  properties:
                    Selector:
                      $ref: "#/components/schemas/SelectorObjectReference"
                AttributeUpdates:
                  description: The attributes update structure.
                  type: array
                  items:
                    $ref: "#/components/schemas/ObjectAttributeUpdate"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/schema/update#x-amz-data-partition:
    put:
      operationId: UpdateSchema
      description: Updates the schema name with a new name. Only development schema names
        can be updated.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateSchemaResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) of the development schema. For more
            information, see <a>arns</a>.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The name of the schema.
                  type: string
                  pattern: ^[a-zA-Z0-9._-]*$
                  minLength: 1
                  maxLength: 32
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/typedlink/facet#x-amz-data-partition:
    put:
      operationId: UpdateTypedLinkFacet
      description: Updates a <a>TypedLinkFacet</a>. For more information, see <a
        href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed
        Links</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateTypedLinkFacetResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: FacetValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetValidationException"
        "487":
          description: InvalidFacetUpdateException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidFacetUpdateException"
        "488":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "489":
          description: FacetNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FacetNotFoundException"
        "490":
          description: InvalidRuleException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRuleException"
      parameters:
        - name: x-amz-data-partition
          in: header
          required: true
          description: The Amazon Resource Name (ARN) that is associated with the schema.
            For more information, see <a>arns</a>.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - AttributeUpdates
                - IdentityAttributeOrder
              properties:
                Name:
                  description: The unique name of the typed link facet.
                  type: string
                  pattern: ^[a-zA-Z0-9._-]*$
                AttributeUpdates:
                  description: Attributes update structure.
                  type: array
                  items:
                    $ref: "#/components/schemas/TypedLinkFacetAttributeUpdate"
                IdentityAttributeOrder:
                  description: The order of identity attributes for the facet, from most
                    significant to least significant. The ability to filter
                    typed links considers the order that the attributes are
                    defined on the typed link facet. When providing ranges to a
                    typed link selection, any inexact ranges must be specified
                    at the end. Any attributes that do not have a range
                    specified are presumed to match the entire range. Filters
                    are interpreted in the order of the attributes on the typed
                    link facet, not the order in which they are supplied to any
                    API calls. For more information about identity attributes,
                    see <a
                    href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink">Typed
                    Links</a>.
                  type: array
                  items:
                    $ref: "#/components/schemas/AttributeName"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/schema/upgradeapplied:
    put:
      operationId: UpgradeAppliedSchema
      description: "Upgrades a single directory in-place using the
        <code>PublishedSchemaArn</code> with schema updates found in
        <code>MinorVersion</code>. Backwards-compatible minor version upgrades
        are instantaneously available for readers on all objects in the
        directory. Note: This is a synchronous API call and upgrades only one
        schema on a given directory per call. To upgrade multiple directories
        from one schema, you would need to call this API on each directory."
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpgradeAppliedSchemaResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: IncompatibleSchemaException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleSchemaException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "487":
          description: InvalidAttachmentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAttachmentException"
        "488":
          description: SchemaAlreadyExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemaAlreadyExistsException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - PublishedSchemaArn
                - DirectoryArn
              properties:
                PublishedSchemaArn:
                  description: The revision of the published schema to upgrade the
                    directory to.
                  type: string
                DirectoryArn:
                  description: The ARN for the directory to which the upgraded schema will
                    be applied.
                  type: string
                DryRun:
                  description: Used for testing whether the major version schemas are
                    backward compatible or not. If schema compatibility fails,
                    an exception would be thrown else the call would succeed but
                    no changes will be saved. This parameter is optional.
                  type: boolean
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /amazonclouddirectory/2017-01-11/schema/upgradepublished:
    put:
      operationId: UpgradePublishedSchema
      description: Upgrades a published schema under a new minor version revision using the
        current contents of <code>DevelopmentSchemaArn</code>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpgradePublishedSchemaResponse"
        "480":
          description: InternalServiceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceException"
        "481":
          description: InvalidArnException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArnException"
        "482":
          description: RetryableConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryableConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: IncompatibleSchemaException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncompatibleSchemaException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "487":
          description: InvalidAttachmentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAttachmentException"
        "488":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - DevelopmentSchemaArn
                - PublishedSchemaArn
                - MinorVersion
              properties:
                DevelopmentSchemaArn:
                  description: The ARN of the development schema with the changes used for
                    the upgrade.
                  type: string
                PublishedSchemaArn:
                  description: The ARN of the published schema to be upgraded.
                  type: string
                MinorVersion:
                  description: Identifies the minor version of the published schema that
                    will be created. This parameter is NOT optional.
                  type: string
                  pattern: ^[a-zA-Z0-9._-]*$
                  minLength: 1
                  maxLength: 10
                DryRun:
                  description: Used for testing whether the Development schema provided is
                    backwards compatible, or not, with the publish schema
                    provided by the user to be upgraded. If schema compatibility
                    fails, an exception would be thrown else the call would
                    succeed. This parameter is optional and defaults to false.
                  type: boolean
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://clouddirectory.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon CloudDirectory multi-region endpoint
  - url: https://clouddirectory.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon CloudDirectory multi-region endpoint
  - url: http://clouddirectory.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon CloudDirectory endpoint for China (Beijing) and China (Ningxia)
  - url: https://clouddirectory.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon CloudDirectory endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  requestBodies:
    ListIncomingTypedLinksBody:
      content:
        application/json:
          schema:
            type: object
            required:
              - ObjectReference
              - FilterTypedLink
            properties:
              ObjectReference:
                description: The reference that identifies an object.
                type: object
                properties:
                  Selector:
                    $ref: "#/components/schemas/SelectorObjectReference"
              FilterAttributeRanges:
                description: Provides range filters for multiple attributes. When providing
                  ranges to typed link selection, any inexact ranges must be
                  specified at the end. Any attributes that do not have a range
                  specified are presumed to match the entire range.
                type: array
                items:
                  $ref: "#/components/schemas/TypedLinkAttributeRange"
              FilterTypedLink:
                description: Identifies the schema Amazon Resource Name (ARN) and facet
                  name for the typed link.
                type: object
                properties:
                  SchemaArn:
                    $ref: "#/components/schemas/Arn"
                  TypedLinkName:
                    $ref: "#/components/schemas/TypedLinkName"
              NextToken:
                description: The pagination token.
                type: string
              MaxResults:
                description: The maximum number of results to retrieve.
                type: integer
                minimum: 1
              ConsistencyLevel:
                description: The consistency level to execute the request at.
                type: string
                enum:
                  - SERIALIZABLE
                  - EVENTUAL
      required: true
    ListObjectChildrenBody:
      content:
        application/json:
          schema:
            type: object
            required:
              - ObjectReference
            properties:
              ObjectReference:
                description: The reference that identifies an object.
                type: object
                properties:
                  Selector:
                    $ref: "#/components/schemas/SelectorObjectReference"
              NextToken:
                description: The pagination token.
                type: string
              MaxResults:
                description: The maximum number of items to be retrieved in a single call.
                  This is an approximate number.
                type: integer
                minimum: 1
      required: true
    AttachToIndexBody:
      content:
        application/json:
          schema:
            type: object
            required:
              - IndexReference
              - TargetReference
            properties:
              IndexReference:
                description: The reference that identifies an object.
                type: object
                properties:
                  Selector:
                    $ref: "#/components/schemas/SelectorObjectReference"
              TargetReference:
                description: The reference that identifies an object.
                type: object
                properties:
                  Selector:
                    $ref: "#/components/schemas/SelectorObjectReference"
      required: true
    ListDevelopmentSchemaArnsBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              NextToken:
                description: The pagination token.
                type: string
              MaxResults:
                description: The maximum number of results to retrieve.
                type: integer
                minimum: 1
      required: true
    DeleteObjectBody:
      content:
        application/json:
          schema:
            type: object
            required:
              - ObjectReference
            properties:
              ObjectReference:
                description: The reference that identifies an object.
                type: object
                properties:
                  Selector:
                    $ref: "#/components/schemas/SelectorObjectReference"
      required: true
    AttachPolicyBody:
      content:
        application/json:
          schema:
            type: object
            required:
              - PolicyReference
              - ObjectReference
            properties:
              PolicyReference:
                description: The reference that identifies an object.
                type: object
                properties:
                  Selector:
                    $ref: "#/components/schemas/SelectorObjectReference"
              ObjectReference:
                description: The reference that identifies an object.
                type: object
                properties:
                  Selector:
                    $ref: "#/components/schemas/SelectorObjectReference"
      required: true
    DeleteTypedLinkFacetBody:
      content:
        application/json:
          schema:
            type: object
            required:
              - Name
            properties:
              Name:
                description: The unique name of the typed link facet.
                type: string
                pattern: ^[a-zA-Z0-9._-]*$
      required: true
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AddFacetToObjectResponse:
      type: object
      properties: {}
    Arn:
      type: string
    FacetName:
      type: string
      pattern: ^[a-zA-Z0-9._-]*$
      minLength: 1
      maxLength: 64
    AttributeKeyAndValue:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          $ref: "#/components/schemas/AttributeKey"
        Value:
          $ref: "#/components/schemas/TypedAttributeValue"
      description: The combination of an attribute key and an attribute value.
    SelectorObjectReference:
      type: string
    InternalServiceException: {}
    InvalidArnException: {}
    RetryableConflictException: {}
    ValidationException: {}
    LimitExceededException: {}
    AccessDeniedException: {}
    DirectoryNotEnabledException: {}
    ResourceNotFoundException: {}
    FacetValidationException: {}
    ApplySchemaResponse:
      type: object
      properties:
        AppliedSchemaArn:
          $ref: "#/components/schemas/Arn"
        DirectoryArn:
          $ref: "#/components/schemas/Arn"
    SchemaAlreadyExistsException: {}
    InvalidAttachmentException: {}
    AttachObjectResponse:
      type: object
      properties:
        AttachedObjectIdentifier:
          $ref: "#/components/schemas/ObjectIdentifier"
    LinkNameAlreadyInUseException: {}
    AttachPolicyResponse:
      type: object
      properties: {}
    NotPolicyException: {}
    AttachToIndexResponse:
      type: object
      properties:
        AttachedObjectIdentifier:
          $ref: "#/components/schemas/ObjectIdentifier"
    IndexedAttributeMissingException: {}
    NotIndexException: {}
    AttachTypedLinkResponse:
      type: object
      properties:
        TypedLinkSpecifier:
          $ref: "#/components/schemas/TypedLinkSpecifier"
    TypedLinkName:
      type: string
      pattern: ^[a-zA-Z0-9._-]*$
    AttributeNameAndValue:
      type: object
      required:
        - AttributeName
        - Value
      properties:
        AttributeName:
          $ref: "#/components/schemas/AttributeName"
        Value:
          $ref: "#/components/schemas/TypedAttributeValue"
      description: Identifies the attribute name and value for a typed link.
    BatchReadResponse:
      type: object
      properties:
        Responses:
          $ref: "#/components/schemas/BatchReadOperationResponseList"
    BatchReadOperation:
      type: object
      properties:
        ListObjectAttributes:
          $ref: "#/components/schemas/BatchListObjectAttributes"
        ListObjectChildren:
          $ref: "#/components/schemas/BatchListObjectChildren"
        ListAttachedIndices:
          $ref: "#/components/schemas/BatchListAttachedIndices"
        ListObjectParentPaths:
          $ref: "#/components/schemas/BatchListObjectParentPaths"
        GetObjectInformation:
          $ref: "#/components/schemas/BatchGetObjectInformation"
        GetObjectAttributes:
          $ref: "#/components/schemas/BatchGetObjectAttributes"
        ListObjectParents:
          $ref: "#/components/schemas/BatchListObjectParents"
        ListObjectPolicies:
          $ref: "#/components/schemas/BatchListObjectPolicies"
        ListPolicyAttachments:
          $ref: "#/components/schemas/BatchListPolicyAttachments"
        LookupPolicy:
          $ref: "#/components/schemas/BatchLookupPolicy"
        ListIndex:
          $ref: "#/components/schemas/BatchListIndex"
        ListOutgoingTypedLinks:
          $ref: "#/components/schemas/BatchListOutgoingTypedLinks"
        ListIncomingTypedLinks:
          $ref: "#/components/schemas/BatchListIncomingTypedLinks"
        GetLinkAttributes:
          $ref: "#/components/schemas/BatchGetLinkAttributes"
      description: Represents the output of a <code>BatchRead</code> operation.
    BatchWriteResponse:
      type: object
      properties:
        Responses:
          $ref: "#/components/schemas/BatchWriteOperationResponseList"
    BatchWriteOperation:
      type: object
      properties:
        CreateObject:
          $ref: "#/components/schemas/BatchCreateObject"
        AttachObject:
          $ref: "#/components/schemas/BatchAttachObject"
        DetachObject:
          $ref: "#/components/schemas/BatchDetachObject"
        UpdateObjectAttributes:
          $ref: "#/components/schemas/BatchUpdateObjectAttributes"
        DeleteObject:
          $ref: "#/components/schemas/BatchDeleteObject"
        AddFacetToObject:
          $ref: "#/components/schemas/BatchAddFacetToObject"
        RemoveFacetFromObject:
          $ref: "#/components/schemas/BatchRemoveFacetFromObject"
        AttachPolicy:
          $ref: "#/components/schemas/BatchAttachPolicy"
        DetachPolicy:
          $ref: "#/components/schemas/BatchDetachPolicy"
        CreateIndex:
          $ref: "#/components/schemas/BatchCreateIndex"
        AttachToIndex:
          $ref: "#/components/schemas/BatchAttachToIndex"
        DetachFromIndex:
          $ref: "#/components/schemas/BatchDetachFromIndex"
        AttachTypedLink:
          $ref: "#/components/schemas/BatchAttachTypedLink"
        DetachTypedLink:
          $ref: "#/components/schemas/BatchDetachTypedLink"
        UpdateLinkAttributes:
          $ref: "#/components/schemas/BatchUpdateLinkAttributes"
      description: "Represents the output of a <code>BatchWrite</code> operation. "
    BatchWriteException: {}
    CreateDirectoryResponse:
      type: object
      required:
        - DirectoryArn
        - Name
        - ObjectIdentifier
        - AppliedSchemaArn
      properties:
        DirectoryArn:
          $ref: "#/components/schemas/DirectoryArn"
        Name:
          $ref: "#/components/schemas/DirectoryName"
        ObjectIdentifier:
          $ref: "#/components/schemas/ObjectIdentifier"
        AppliedSchemaArn:
          $ref: "#/components/schemas/Arn"
    DirectoryAlreadyExistsException: {}
    CreateFacetResponse:
      type: object
      properties: {}
    FacetAttribute:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/AttributeName"
        AttributeDefinition:
          $ref: "#/components/schemas/FacetAttributeDefinition"
        AttributeReference:
          $ref: "#/components/schemas/FacetAttributeReference"
        RequiredBehavior:
          $ref: "#/components/schemas/RequiredAttributeBehavior"
      description: An attribute that is associated with the <a>Facet</a>.
    FacetAlreadyExistsException: {}
    InvalidRuleException: {}
    CreateIndexResponse:
      type: object
      properties:
        ObjectIdentifier:
          $ref: "#/components/schemas/ObjectIdentifier"
    AttributeKey:
      type: object
      required:
        - SchemaArn
        - FacetName
        - Name
      properties:
        SchemaArn:
          $ref: "#/components/schemas/Arn"
        FacetName:
          $ref: "#/components/schemas/FacetName"
        Name:
          $ref: "#/components/schemas/AttributeName"
      description: A unique identifier for an attribute.
    UnsupportedIndexTypeException: {}
    CreateObjectResponse:
      type: object
      properties:
        ObjectIdentifier:
          $ref: "#/components/schemas/ObjectIdentifier"
    SchemaFacet:
      type: object
      properties:
        SchemaArn:
          $ref: "#/components/schemas/Arn"
        FacetName:
          $ref: "#/components/schemas/FacetName"
      description: A facet.
    CreateSchemaResponse:
      type: object
      properties:
        SchemaArn:
          $ref: "#/components/schemas/Arn"
    CreateTypedLinkFacetResponse:
      type: object
      properties: {}
    TypedLinkAttributeDefinitionList:
      type: array
      items:
        $ref: "#/components/schemas/TypedLinkAttributeDefinition"
    AttributeNameList:
      type: array
      items:
        $ref: "#/components/schemas/AttributeName"
    DeleteDirectoryResponse:
      type: object
      required:
        - DirectoryArn
      properties:
        DirectoryArn:
          $ref: "#/components/schemas/Arn"
    DirectoryNotDisabledException: {}
    DirectoryDeletedException: {}
    DeleteFacetResponse:
      type: object
      properties: {}
    FacetNotFoundException: {}
    FacetInUseException: {}
    DeleteObjectResponse:
      type: object
      properties: {}
    ObjectNotDetachedException: {}
    DeleteSchemaResponse:
      type: object
      properties:
        SchemaArn:
          $ref: "#/components/schemas/Arn"
    StillContainsLinksException: {}
    DeleteTypedLinkFacetResponse:
      type: object
      properties: {}
    DetachFromIndexResponse:
      type: object
      properties:
        DetachedObjectIdentifier:
          $ref: "#/components/schemas/ObjectIdentifier"
    ObjectAlreadyDetachedException: {}
    DetachObjectResponse:
      type: object
      properties:
        DetachedObjectIdentifier:
          $ref: "#/components/schemas/ObjectIdentifier"
    NotNodeException: {}
    DetachPolicyResponse:
      type: object
      properties: {}
    TypedLinkSchemaAndFacetName:
      type: object
      required:
        - SchemaArn
        - TypedLinkName
      properties:
        SchemaArn:
          $ref: "#/components/schemas/Arn"
        TypedLinkName:
          $ref: "#/components/schemas/TypedLinkName"
      description: Identifies the schema Amazon Resource Name (ARN) and facet name for the
        typed link.
    ObjectReference:
      type: object
      properties:
        Selector:
          $ref: "#/components/schemas/SelectorObjectReference"
      description: The reference that identifies an object.
    AttributeNameAndValueList:
      type: array
      items:
        $ref: "#/components/schemas/AttributeNameAndValue"
    DisableDirectoryResponse:
      type: object
      required:
        - DirectoryArn
      properties:
        DirectoryArn:
          $ref: "#/components/schemas/Arn"
    EnableDirectoryResponse:
      type: object
      required:
        - DirectoryArn
      properties:
        DirectoryArn:
          $ref: "#/components/schemas/Arn"
    GetAppliedSchemaVersionResponse:
      type: object
      properties:
        AppliedSchemaArn:
          $ref: "#/components/schemas/Arn"
    GetDirectoryResponse:
      type: object
      required:
        - Directory
      properties:
        Directory:
          $ref: "#/components/schemas/Directory"
    GetFacetResponse:
      type: object
      properties:
        Facet:
          $ref: "#/components/schemas/Facet"
    GetLinkAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: "#/components/schemas/AttributeKeyAndValueList"
    AttributeName:
      type: string
      pattern: ^[a-zA-Z0-9._:-]*$
      minLength: 1
      maxLength: 230
    GetObjectAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: "#/components/schemas/AttributeKeyAndValueList"
    GetObjectInformationResponse:
      type: object
      properties:
        SchemaFacets:
          $ref: "#/components/schemas/SchemaFacetList"
        ObjectIdentifier:
          $ref: "#/components/schemas/ObjectIdentifier"
    GetSchemaAsJsonResponse:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/SchemaName"
        Document:
          $ref: "#/components/schemas/SchemaJsonDocument"
    GetTypedLinkFacetInformationResponse:
      type: object
      properties:
        IdentityAttributeOrder:
          $ref: "#/components/schemas/AttributeNameList"
    InvalidNextTokenException: {}
    ListAppliedSchemaArnsResponse:
      type: object
      properties:
        SchemaArns:
          $ref: "#/components/schemas/Arns"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListAttachedIndicesResponse:
      type: object
      properties:
        IndexAttachments:
          $ref: "#/components/schemas/IndexAttachmentList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListDevelopmentSchemaArnsResponse:
      type: object
      properties:
        SchemaArns:
          $ref: "#/components/schemas/Arns"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListDirectoriesResponse:
      type: object
      required:
        - Directories
      properties:
        Directories:
          $ref: "#/components/schemas/DirectoryList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListFacetAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: "#/components/schemas/FacetAttributeList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListFacetNamesResponse:
      type: object
      properties:
        FacetNames:
          $ref: "#/components/schemas/FacetNameList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListIncomingTypedLinksResponse:
      type: object
      properties:
        LinkSpecifiers:
          $ref: "#/components/schemas/TypedLinkSpecifierList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    TypedLinkAttributeRange:
      type: object
      required:
        - Range
      properties:
        AttributeName:
          $ref: "#/components/schemas/AttributeName"
        Range:
          $ref: "#/components/schemas/TypedAttributeValueRange"
      description: Identifies the range of attributes that are used by a specified filter.
    ListIndexResponse:
      type: object
      properties:
        IndexAttachments:
          $ref: "#/components/schemas/IndexAttachmentList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ObjectAttributeRange:
      type: object
      properties:
        AttributeKey:
          $ref: "#/components/schemas/AttributeKey"
        Range:
          $ref: "#/components/schemas/TypedAttributeValueRange"
      description: A range of attributes.
    ListManagedSchemaArnsResponse:
      type: object
      properties:
        SchemaArns:
          $ref: "#/components/schemas/Arns"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListObjectAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: "#/components/schemas/AttributeKeyAndValueList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListObjectChildrenResponse:
      type: object
      properties:
        Children:
          $ref: "#/components/schemas/LinkNameToObjectIdentifierMap"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListObjectParentPathsResponse:
      type: object
      properties:
        PathToObjectIdentifiersList:
          $ref: "#/components/schemas/PathToObjectIdentifiersList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListObjectParentsResponse:
      type: object
      properties:
        Parents:
          $ref: "#/components/schemas/ObjectIdentifierToLinkNameMap"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        ParentLinks:
          $ref: "#/components/schemas/ObjectIdentifierAndLinkNameList"
    CannotListParentOfRootException: {}
    ListObjectPoliciesResponse:
      type: object
      properties:
        AttachedPolicyIds:
          $ref: "#/components/schemas/ObjectIdentifierList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListOutgoingTypedLinksResponse:
      type: object
      properties:
        TypedLinkSpecifiers:
          $ref: "#/components/schemas/TypedLinkSpecifierList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListPolicyAttachmentsResponse:
      type: object
      properties:
        ObjectIdentifiers:
          $ref: "#/components/schemas/ObjectIdentifierList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListPublishedSchemaArnsResponse:
      type: object
      properties:
        SchemaArns:
          $ref: "#/components/schemas/Arns"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          $ref: "#/components/schemas/TagList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    InvalidTaggingRequestException: {}
    ListTypedLinkFacetAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: "#/components/schemas/TypedLinkAttributeDefinitionList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListTypedLinkFacetNamesResponse:
      type: object
      properties:
        FacetNames:
          $ref: "#/components/schemas/TypedLinkNameList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    LookupPolicyResponse:
      type: object
      properties:
        PolicyToPathList:
          $ref: "#/components/schemas/PolicyToPathList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    PublishSchemaResponse:
      type: object
      properties:
        PublishedSchemaArn:
          $ref: "#/components/schemas/Arn"
    SchemaAlreadyPublishedException: {}
    PutSchemaFromJsonResponse:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/Arn"
    InvalidSchemaDocException: {}
    RemoveFacetFromObjectResponse:
      type: object
      properties: {}
    TagResourceResponse:
      type: object
      properties: {}
    Tag:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
        Value:
          $ref: "#/components/schemas/TagValue"
      description: The tag structure that contains a tag key and value.
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
    UpdateFacetResponse:
      type: object
      properties: {}
    FacetAttributeUpdate:
      type: object
      properties:
        Attribute:
          $ref: "#/components/schemas/FacetAttribute"
        Action:
          $ref: "#/components/schemas/UpdateActionType"
      description: A structure that contains information used to update an attribute.
    InvalidFacetUpdateException: {}
    UpdateLinkAttributesResponse:
      type: object
      properties: {}
    LinkAttributeUpdate:
      type: object
      properties:
        AttributeKey:
          $ref: "#/components/schemas/AttributeKey"
        AttributeAction:
          $ref: "#/components/schemas/LinkAttributeAction"
      description: Structure that contains attribute update information.
    UpdateObjectAttributesResponse:
      type: object
      properties:
        ObjectIdentifier:
          $ref: "#/components/schemas/ObjectIdentifier"
    ObjectAttributeUpdate:
      type: object
      properties:
        ObjectAttributeKey:
          $ref: "#/components/schemas/AttributeKey"
        ObjectAttributeAction:
          $ref: "#/components/schemas/ObjectAttributeAction"
      description: Structure that contains attribute update information.
    UpdateSchemaResponse:
      type: object
      properties:
        SchemaArn:
          $ref: "#/components/schemas/Arn"
    UpdateTypedLinkFacetResponse:
      type: object
      properties: {}
    TypedLinkFacetAttributeUpdate:
      type: object
      required:
        - Attribute
        - Action
      properties:
        Attribute:
          $ref: "#/components/schemas/TypedLinkAttributeDefinition"
        Action:
          $ref: "#/components/schemas/UpdateActionType"
      description: A typed link facet attribute update.
    UpgradeAppliedSchemaResponse:
      type: object
      properties:
        UpgradedSchemaArn:
          $ref: "#/components/schemas/Arn"
        DirectoryArn:
          $ref: "#/components/schemas/Arn"
    IncompatibleSchemaException: {}
    UpgradePublishedSchemaResponse:
      type: object
      properties:
        UpgradedSchemaArn:
          $ref: "#/components/schemas/Arn"
    AttributeKeyAndValueList:
      type: array
      items:
        $ref: "#/components/schemas/AttributeKeyAndValue"
    AddFacetToObjectRequest:
      type: object
      required:
        - SchemaFacet
        - ObjectReference
      properties:
        SchemaFacet:
          $ref: "#/components/schemas/SchemaFacet"
        ObjectAttributeList:
          $ref: "#/components/schemas/AttributeKeyAndValueList"
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
    ApplySchemaRequest:
      type: object
      required:
        - PublishedSchemaArn
      properties:
        PublishedSchemaArn:
          $ref: "#/components/schemas/Arn"
    Arns:
      type: array
      items:
        $ref: "#/components/schemas/Arn"
    LinkName:
      type: string
      pattern: "[^\\/\\[\\]\\(\\):\\{\\}#@!?\\s\\\\;]+"
      minLength: 1
      maxLength: 64
    AttachObjectRequest:
      type: object
      required:
        - ParentReference
        - ChildReference
        - LinkName
      properties:
        ParentReference:
          $ref: "#/components/schemas/ObjectReference"
        ChildReference:
          $ref: "#/components/schemas/ObjectReference"
        LinkName:
          $ref: "#/components/schemas/LinkName"
    ObjectIdentifier:
      type: string
    AttachPolicyRequest:
      type: object
      required:
        - PolicyReference
        - ObjectReference
      properties:
        PolicyReference:
          $ref: "#/components/schemas/ObjectReference"
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
    AttachToIndexRequest:
      type: object
      required:
        - IndexReference
        - TargetReference
      properties:
        IndexReference:
          $ref: "#/components/schemas/ObjectReference"
        TargetReference:
          $ref: "#/components/schemas/ObjectReference"
    AttachTypedLinkRequest:
      type: object
      required:
        - SourceObjectReference
        - TargetObjectReference
        - TypedLinkFacet
        - Attributes
      properties:
        SourceObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        TargetObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        TypedLinkFacet:
          $ref: "#/components/schemas/TypedLinkSchemaAndFacetName"
        Attributes:
          $ref: "#/components/schemas/AttributeNameAndValueList"
    TypedLinkSpecifier:
      type: object
      required:
        - TypedLinkFacet
        - SourceObjectReference
        - TargetObjectReference
        - IdentityAttributeValues
      properties:
        TypedLinkFacet:
          $ref: "#/components/schemas/TypedLinkSchemaAndFacetName"
        SourceObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        TargetObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        IdentityAttributeValues:
          $ref: "#/components/schemas/AttributeNameAndValueList"
      description: Contains all the information that is used to uniquely identify a typed
        link. The parameters discussed in this topic are used to uniquely
        specify the typed link being operated on. The <a>AttachTypedLink</a> API
        returns a typed link specifier while the <a>DetachTypedLink</a> API
        accepts one as input. Similarly, the <a>ListIncomingTypedLinks</a> and
        <a>ListOutgoingTypedLinks</a> API operations provide typed link
        specifiers as output. You can also construct a typed link specifier from
        scratch.
    TypedAttributeValue:
      type: object
      properties:
        StringValue:
          $ref: "#/components/schemas/StringAttributeValue"
        BinaryValue:
          $ref: "#/components/schemas/BinaryAttributeValue"
        BooleanValue:
          $ref: "#/components/schemas/BooleanAttributeValue"
        NumberValue:
          $ref: "#/components/schemas/NumberAttributeValue"
        DatetimeValue:
          $ref: "#/components/schemas/DatetimeAttributeValue"
      description: Represents the data for a typed attribute. You can set one, and only
        one, of the elements. Each attribute in an item is a name-value pair.
        Attributes have a single value.
    AttributeKeyList:
      type: array
      items:
        $ref: "#/components/schemas/AttributeKey"
    BatchAddFacetToObject:
      type: object
      required:
        - SchemaFacet
        - ObjectAttributeList
        - ObjectReference
      properties:
        SchemaFacet:
          $ref: "#/components/schemas/SchemaFacet"
        ObjectAttributeList:
          $ref: "#/components/schemas/AttributeKeyAndValueList"
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
      description: Represents the output of a batch add facet to object operation.
    BatchAddFacetToObjectResponse:
      type: object
      properties: {}
      description: The result of a batch add facet to object operation.
    BatchAttachObject:
      type: object
      required:
        - ParentReference
        - ChildReference
        - LinkName
      properties:
        ParentReference:
          $ref: "#/components/schemas/ObjectReference"
        ChildReference:
          $ref: "#/components/schemas/ObjectReference"
        LinkName:
          $ref: "#/components/schemas/LinkName"
      description: Represents the output of an <a>AttachObject</a> operation.
    BatchAttachObjectResponse:
      type: object
      properties:
        attachedObjectIdentifier:
          $ref: "#/components/schemas/ObjectIdentifier"
      description: Represents the output batch <a>AttachObject</a> response operation.
    BatchAttachPolicy:
      type: object
      required:
        - PolicyReference
        - ObjectReference
      properties:
        PolicyReference:
          $ref: "#/components/schemas/ObjectReference"
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
      description: Attaches a policy object to a regular object inside a <a>BatchRead</a>
        operation. For more information, see <a>AttachPolicy</a> and
        <a>BatchReadRequest$Operations</a>.
    BatchAttachPolicyResponse:
      type: object
      properties: {}
      description: Represents the output of an <a>AttachPolicy</a> response operation.
    BatchAttachToIndex:
      type: object
      required:
        - IndexReference
        - TargetReference
      properties:
        IndexReference:
          $ref: "#/components/schemas/ObjectReference"
        TargetReference:
          $ref: "#/components/schemas/ObjectReference"
      description: Attaches the specified object to the specified index inside a
        <a>BatchRead</a> operation. For more information, see
        <a>AttachToIndex</a> and <a>BatchReadRequest$Operations</a>.
    BatchAttachToIndexResponse:
      type: object
      properties:
        AttachedObjectIdentifier:
          $ref: "#/components/schemas/ObjectIdentifier"
      description: Represents the output of a <a>AttachToIndex</a> response operation.
    BatchAttachTypedLink:
      type: object
      required:
        - SourceObjectReference
        - TargetObjectReference
        - TypedLinkFacet
        - Attributes
      properties:
        SourceObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        TargetObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        TypedLinkFacet:
          $ref: "#/components/schemas/TypedLinkSchemaAndFacetName"
        Attributes:
          $ref: "#/components/schemas/AttributeNameAndValueList"
      description: Attaches a typed link to a specified source and target object inside a
        <a>BatchRead</a> operation. For more information, see
        <a>AttachTypedLink</a> and <a>BatchReadRequest$Operations</a>.
    BatchAttachTypedLinkResponse:
      type: object
      properties:
        TypedLinkSpecifier:
          $ref: "#/components/schemas/TypedLinkSpecifier"
      description: Represents the output of a <a>AttachTypedLink</a> response operation.
    Bool:
      type: boolean
    BatchReferenceName:
      type: string
    BatchCreateIndex:
      type: object
      required:
        - OrderedIndexedAttributeList
        - IsUnique
      properties:
        OrderedIndexedAttributeList:
          $ref: "#/components/schemas/AttributeKeyList"
        IsUnique:
          $ref: "#/components/schemas/Bool"
        ParentReference:
          $ref: "#/components/schemas/ObjectReference"
        LinkName:
          $ref: "#/components/schemas/LinkName"
        BatchReferenceName:
          $ref: "#/components/schemas/BatchReferenceName"
      description: Creates an index object inside of a <a>BatchRead</a> operation. For more
        information, see <a>CreateIndex</a> and
        <a>BatchReadRequest$Operations</a>.
    BatchCreateIndexResponse:
      type: object
      properties:
        ObjectIdentifier:
          $ref: "#/components/schemas/ObjectIdentifier"
      description: Represents the output of a <a>CreateIndex</a> response operation.
    SchemaFacetList:
      type: array
      items:
        $ref: "#/components/schemas/SchemaFacet"
    BatchCreateObject:
      type: object
      required:
        - SchemaFacet
        - ObjectAttributeList
      properties:
        SchemaFacet:
          $ref: "#/components/schemas/SchemaFacetList"
        ObjectAttributeList:
          $ref: "#/components/schemas/AttributeKeyAndValueList"
        ParentReference:
          $ref: "#/components/schemas/ObjectReference"
        LinkName:
          $ref: "#/components/schemas/LinkName"
        BatchReferenceName:
          $ref: "#/components/schemas/BatchReferenceName"
      description: Represents the output of a <a>CreateObject</a> operation.
    BatchCreateObjectResponse:
      type: object
      properties:
        ObjectIdentifier:
          $ref: "#/components/schemas/ObjectIdentifier"
      description: Represents the output of a <a>CreateObject</a> response operation.
    BatchDeleteObject:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
      description: Represents the output of a <a>DeleteObject</a> operation.
    BatchDeleteObjectResponse:
      type: object
      properties: {}
      description: Represents the output of a <a>DeleteObject</a> response operation.
    BatchDetachFromIndex:
      type: object
      required:
        - IndexReference
        - TargetReference
      properties:
        IndexReference:
          $ref: "#/components/schemas/ObjectReference"
        TargetReference:
          $ref: "#/components/schemas/ObjectReference"
      description: Detaches the specified object from the specified index inside a
        <a>BatchRead</a> operation. For more information, see
        <a>DetachFromIndex</a> and <a>BatchReadRequest$Operations</a>.
    BatchDetachFromIndexResponse:
      type: object
      properties:
        DetachedObjectIdentifier:
          $ref: "#/components/schemas/ObjectIdentifier"
      description: Represents the output of a <a>DetachFromIndex</a> response operation.
    BatchDetachObject:
      type: object
      required:
        - ParentReference
        - LinkName
      properties:
        ParentReference:
          $ref: "#/components/schemas/ObjectReference"
        LinkName:
          $ref: "#/components/schemas/LinkName"
        BatchReferenceName:
          $ref: "#/components/schemas/BatchReferenceName"
      description: Represents the output of a <a>DetachObject</a> operation.
    BatchDetachObjectResponse:
      type: object
      properties:
        detachedObjectIdentifier:
          $ref: "#/components/schemas/ObjectIdentifier"
      description: Represents the output of a <a>DetachObject</a> response operation.
    BatchDetachPolicy:
      type: object
      required:
        - PolicyReference
        - ObjectReference
      properties:
        PolicyReference:
          $ref: "#/components/schemas/ObjectReference"
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
      description: Detaches the specified policy from the specified directory inside a
        <a>BatchWrite</a> operation. For more information, see
        <a>DetachPolicy</a> and <a>BatchWriteRequest$Operations</a>.
    BatchDetachPolicyResponse:
      type: object
      properties: {}
      description: Represents the output of a <a>DetachPolicy</a> response operation.
    BatchDetachTypedLink:
      type: object
      required:
        - TypedLinkSpecifier
      properties:
        TypedLinkSpecifier:
          $ref: "#/components/schemas/TypedLinkSpecifier"
      description: Detaches a typed link from a specified source and target object inside a
        <a>BatchRead</a> operation. For more information, see
        <a>DetachTypedLink</a> and <a>BatchReadRequest$Operations</a>.
    BatchDetachTypedLinkResponse:
      type: object
      properties: {}
      description: Represents the output of a <a>DetachTypedLink</a> response operation.
    BatchGetLinkAttributes:
      type: object
      required:
        - TypedLinkSpecifier
        - AttributeNames
      properties:
        TypedLinkSpecifier:
          $ref: "#/components/schemas/TypedLinkSpecifier"
        AttributeNames:
          $ref: "#/components/schemas/AttributeNameList"
      description: Retrieves attributes that are associated with a typed link inside a
        <a>BatchRead</a> operation. For more information, see
        <a>GetLinkAttributes</a> and <a>BatchReadRequest$Operations</a>.
    BatchGetLinkAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: "#/components/schemas/AttributeKeyAndValueList"
      description: Represents the output of a <a>GetLinkAttributes</a> response operation.
    BatchGetObjectAttributes:
      type: object
      required:
        - ObjectReference
        - SchemaFacet
        - AttributeNames
      properties:
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        SchemaFacet:
          $ref: "#/components/schemas/SchemaFacet"
        AttributeNames:
          $ref: "#/components/schemas/AttributeNameList"
      description: Retrieves attributes within a facet that are associated with an object
        inside an <a>BatchRead</a> operation. For more information, see
        <a>GetObjectAttributes</a> and <a>BatchReadRequest$Operations</a>.
    BatchGetObjectAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: "#/components/schemas/AttributeKeyAndValueList"
      description: Represents the output of a <a>GetObjectAttributes</a> response operation.
    BatchGetObjectInformation:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
      description: Retrieves metadata about an object inside a <a>BatchRead</a> operation.
        For more information, see <a>GetObjectInformation</a> and
        <a>BatchReadRequest$Operations</a>.
    BatchGetObjectInformationResponse:
      type: object
      properties:
        SchemaFacets:
          $ref: "#/components/schemas/SchemaFacetList"
        ObjectIdentifier:
          $ref: "#/components/schemas/ObjectIdentifier"
      description: Represents the output of a <a>GetObjectInformation</a> response
        operation.
    NextToken:
      type: string
    NumberResults:
      type: integer
      minimum: 1
    BatchListAttachedIndices:
      type: object
      required:
        - TargetReference
      properties:
        TargetReference:
          $ref: "#/components/schemas/ObjectReference"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
      description: Lists indices attached to an object inside a <a>BatchRead</a> operation.
        For more information, see <a>ListAttachedIndices</a> and
        <a>BatchReadRequest$Operations</a>.
    IndexAttachmentList:
      type: array
      items:
        $ref: "#/components/schemas/IndexAttachment"
    BatchListAttachedIndicesResponse:
      type: object
      properties:
        IndexAttachments:
          $ref: "#/components/schemas/IndexAttachmentList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the output of a <a>ListAttachedIndices</a> response operation.
    TypedLinkAttributeRangeList:
      type: array
      items:
        $ref: "#/components/schemas/TypedLinkAttributeRange"
    BatchListIncomingTypedLinks:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        FilterAttributeRanges:
          $ref: "#/components/schemas/TypedLinkAttributeRangeList"
        FilterTypedLink:
          $ref: "#/components/schemas/TypedLinkSchemaAndFacetName"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
      description: Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a>
        information for an object inside a <a>BatchRead</a> operation. For more
        information, see <a>ListIncomingTypedLinks</a> and
        <a>BatchReadRequest$Operations</a>.
    TypedLinkSpecifierList:
      type: array
      items:
        $ref: "#/components/schemas/TypedLinkSpecifier"
    BatchListIncomingTypedLinksResponse:
      type: object
      properties:
        LinkSpecifiers:
          $ref: "#/components/schemas/TypedLinkSpecifierList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the output of a <a>ListIncomingTypedLinks</a> response
        operation.
    ObjectAttributeRangeList:
      type: array
      items:
        $ref: "#/components/schemas/ObjectAttributeRange"
    BatchListIndex:
      type: object
      required:
        - IndexReference
      properties:
        RangesOnIndexedValues:
          $ref: "#/components/schemas/ObjectAttributeRangeList"
        IndexReference:
          $ref: "#/components/schemas/ObjectReference"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Lists objects attached to the specified index inside a <a>BatchRead</a>
        operation. For more information, see <a>ListIndex</a> and
        <a>BatchReadRequest$Operations</a>.
    BatchListIndexResponse:
      type: object
      properties:
        IndexAttachments:
          $ref: "#/components/schemas/IndexAttachmentList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the output of a <a>ListIndex</a> response operation.
    BatchListObjectAttributes:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
        FacetFilter:
          $ref: "#/components/schemas/SchemaFacet"
      description: Represents the output of a <a>ListObjectAttributes</a> operation.
    BatchListObjectAttributesResponse:
      type: object
      properties:
        Attributes:
          $ref: "#/components/schemas/AttributeKeyAndValueList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the output of a <a>ListObjectAttributes</a> response
        operation.
    BatchListObjectChildren:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
      description: Represents the output of a <a>ListObjectChildren</a> operation.
    LinkNameToObjectIdentifierMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/ObjectIdentifier"
    BatchListObjectChildrenResponse:
      type: object
      properties:
        Children:
          $ref: "#/components/schemas/LinkNameToObjectIdentifierMap"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the output of a <a>ListObjectChildren</a> response operation.
    BatchListObjectParentPaths:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
      description: Retrieves all available parent paths for any object type such as node,
        leaf node, policy node, and index node objects inside a <a>BatchRead</a>
        operation. For more information, see <a>ListObjectParentPaths</a> and
        <a>BatchReadRequest$Operations</a>.
    PathToObjectIdentifiersList:
      type: array
      items:
        $ref: "#/components/schemas/PathToObjectIdentifiers"
    BatchListObjectParentPathsResponse:
      type: object
      properties:
        PathToObjectIdentifiersList:
          $ref: "#/components/schemas/PathToObjectIdentifiersList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the output of a <a>ListObjectParentPaths</a> response
        operation.
    BatchListObjectParents:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
    ObjectIdentifierAndLinkNameList:
      type: array
      items:
        $ref: "#/components/schemas/ObjectIdentifierAndLinkNameTuple"
    BatchListObjectParentsResponse:
      type: object
      properties:
        ParentLinks:
          $ref: "#/components/schemas/ObjectIdentifierAndLinkNameList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    BatchListObjectPolicies:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
      description: Returns policies attached to an object in pagination fashion inside a
        <a>BatchRead</a> operation. For more information, see
        <a>ListObjectPolicies</a> and <a>BatchReadRequest$Operations</a>.
    ObjectIdentifierList:
      type: array
      items:
        $ref: "#/components/schemas/ObjectIdentifier"
    BatchListObjectPoliciesResponse:
      type: object
      properties:
        AttachedPolicyIds:
          $ref: "#/components/schemas/ObjectIdentifierList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the output of a <a>ListObjectPolicies</a> response operation.
    BatchListOutgoingTypedLinks:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        FilterAttributeRanges:
          $ref: "#/components/schemas/TypedLinkAttributeRangeList"
        FilterTypedLink:
          $ref: "#/components/schemas/TypedLinkSchemaAndFacetName"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
      description: Returns a paginated list of all the outgoing <a>TypedLinkSpecifier</a>
        information for an object inside a <a>BatchRead</a> operation. For more
        information, see <a>ListOutgoingTypedLinks</a> and
        <a>BatchReadRequest$Operations</a>.
    BatchListOutgoingTypedLinksResponse:
      type: object
      properties:
        TypedLinkSpecifiers:
          $ref: "#/components/schemas/TypedLinkSpecifierList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the output of a <a>ListOutgoingTypedLinks</a> response
        operation.
    BatchListPolicyAttachments:
      type: object
      required:
        - PolicyReference
      properties:
        PolicyReference:
          $ref: "#/components/schemas/ObjectReference"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
      description: Returns all of the <code>ObjectIdentifiers</code> to which a given
        policy is attached inside a <a>BatchRead</a> operation. For more
        information, see <a>ListPolicyAttachments</a> and
        <a>BatchReadRequest$Operations</a>.
    BatchListPolicyAttachmentsResponse:
      type: object
      properties:
        ObjectIdentifiers:
          $ref: "#/components/schemas/ObjectIdentifierList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the output of a <a>ListPolicyAttachments</a> response
        operation.
    BatchLookupPolicy:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
      description: Lists all policies from the root of the Directory to the object
        specified inside a <a>BatchRead</a> operation. For more information, see
        <a>LookupPolicy</a> and <a>BatchReadRequest$Operations</a>.
    PolicyToPathList:
      type: array
      items:
        $ref: "#/components/schemas/PolicyToPath"
    BatchLookupPolicyResponse:
      type: object
      properties:
        PolicyToPathList:
          $ref: "#/components/schemas/PolicyToPathList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Represents the output of a <a>LookupPolicy</a> response operation.
    BatchReadExceptionType:
      type: string
      enum:
        - ValidationException
        - InvalidArnException
        - ResourceNotFoundException
        - InvalidNextTokenException
        - AccessDeniedException
        - NotNodeException
        - FacetValidationException
        - CannotListParentOfRootException
        - NotIndexException
        - NotPolicyException
        - DirectoryNotEnabledException
        - LimitExceededException
        - InternalServiceException
    ExceptionMessage:
      type: string
    BatchReadException:
      type: object
      properties:
        Type:
          $ref: "#/components/schemas/BatchReadExceptionType"
        Message:
          $ref: "#/components/schemas/ExceptionMessage"
      description: The batch read exception structure, which contains the exception type
        and message.
    BatchReadOperationList:
      type: array
      items:
        $ref: "#/components/schemas/BatchReadOperation"
    BatchReadSuccessfulResponse:
      type: object
      properties:
        ListObjectAttributes:
          $ref: "#/components/schemas/BatchListObjectAttributesResponse"
        ListObjectChildren:
          $ref: "#/components/schemas/BatchListObjectChildrenResponse"
        GetObjectInformation:
          $ref: "#/components/schemas/BatchGetObjectInformationResponse"
        GetObjectAttributes:
          $ref: "#/components/schemas/BatchGetObjectAttributesResponse"
        ListAttachedIndices:
          $ref: "#/components/schemas/BatchListAttachedIndicesResponse"
        ListObjectParentPaths:
          $ref: "#/components/schemas/BatchListObjectParentPathsResponse"
        ListObjectPolicies:
          $ref: "#/components/schemas/BatchListObjectPoliciesResponse"
        ListPolicyAttachments:
          $ref: "#/components/schemas/BatchListPolicyAttachmentsResponse"
        LookupPolicy:
          $ref: "#/components/schemas/BatchLookupPolicyResponse"
        ListIndex:
          $ref: "#/components/schemas/BatchListIndexResponse"
        ListOutgoingTypedLinks:
          $ref: "#/components/schemas/BatchListOutgoingTypedLinksResponse"
        ListIncomingTypedLinks:
          $ref: "#/components/schemas/BatchListIncomingTypedLinksResponse"
        GetLinkAttributes:
          $ref: "#/components/schemas/BatchGetLinkAttributesResponse"
        ListObjectParents:
          $ref: "#/components/schemas/BatchListObjectParentsResponse"
      description: Represents the output of a <code>BatchRead</code> success response
        operation.
    BatchReadOperationResponse:
      type: object
      properties:
        SuccessfulResponse:
          $ref: "#/components/schemas/BatchReadSuccessfulResponse"
        ExceptionResponse:
          $ref: "#/components/schemas/BatchReadException"
      description: Represents the output of a <code>BatchRead</code> response operation.
    BatchReadOperationResponseList:
      type: array
      items:
        $ref: "#/components/schemas/BatchReadOperationResponse"
    ConsistencyLevel:
      type: string
      enum:
        - SERIALIZABLE
        - EVENTUAL
    BatchReadRequest:
      type: object
      required:
        - Operations
      properties:
        Operations:
          $ref: "#/components/schemas/BatchReadOperationList"
    BatchRemoveFacetFromObject:
      type: object
      required:
        - SchemaFacet
        - ObjectReference
      properties:
        SchemaFacet:
          $ref: "#/components/schemas/SchemaFacet"
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
      description: A batch operation to remove a facet from an object.
    BatchRemoveFacetFromObjectResponse:
      type: object
      properties: {}
      description: An empty result that represents success.
    LinkAttributeUpdateList:
      type: array
      items:
        $ref: "#/components/schemas/LinkAttributeUpdate"
    BatchUpdateLinkAttributes:
      type: object
      required:
        - TypedLinkSpecifier
        - AttributeUpdates
      properties:
        TypedLinkSpecifier:
          $ref: "#/components/schemas/TypedLinkSpecifier"
        AttributeUpdates:
          $ref: "#/components/schemas/LinkAttributeUpdateList"
      description: Updates a given typed link’s attributes inside a <a>BatchRead</a>
        operation. Attributes to be updated must not contribute to the typed
        link’s identity, as defined by its <code>IdentityAttributeOrder</code>.
        For more information, see <a>UpdateLinkAttributes</a> and
        <a>BatchReadRequest$Operations</a>.
    BatchUpdateLinkAttributesResponse:
      type: object
      properties: {}
      description: Represents the output of a <a>UpdateLinkAttributes</a> response
        operation.
    ObjectAttributeUpdateList:
      type: array
      items:
        $ref: "#/components/schemas/ObjectAttributeUpdate"
    BatchUpdateObjectAttributes:
      type: object
      required:
        - ObjectReference
        - AttributeUpdates
      properties:
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        AttributeUpdates:
          $ref: "#/components/schemas/ObjectAttributeUpdateList"
      description: "Represents the output of a <code>BatchUpdate</code> operation. "
    BatchUpdateObjectAttributesResponse:
      type: object
      properties:
        ObjectIdentifier:
          $ref: "#/components/schemas/ObjectIdentifier"
      description: Represents the output of a <code>BatchUpdate</code> response operation.
    BatchWriteOperationList:
      type: array
      items:
        $ref: "#/components/schemas/BatchWriteOperation"
    BatchWriteOperationResponse:
      type: object
      properties:
        CreateObject:
          $ref: "#/components/schemas/BatchCreateObjectResponse"
        AttachObject:
          $ref: "#/components/schemas/BatchAttachObjectResponse"
        DetachObject:
          $ref: "#/components/schemas/BatchDetachObjectResponse"
        UpdateObjectAttributes:
          $ref: "#/components/schemas/BatchUpdateObjectAttributesResponse"
        DeleteObject:
          $ref: "#/components/schemas/BatchDeleteObjectResponse"
        AddFacetToObject:
          $ref: "#/components/schemas/BatchAddFacetToObjectResponse"
        RemoveFacetFromObject:
          $ref: "#/components/schemas/BatchRemoveFacetFromObjectResponse"
        AttachPolicy:
          $ref: "#/components/schemas/BatchAttachPolicyResponse"
        DetachPolicy:
          $ref: "#/components/schemas/BatchDetachPolicyResponse"
        CreateIndex:
          $ref: "#/components/schemas/BatchCreateIndexResponse"
        AttachToIndex:
          $ref: "#/components/schemas/BatchAttachToIndexResponse"
        DetachFromIndex:
          $ref: "#/components/schemas/BatchDetachFromIndexResponse"
        AttachTypedLink:
          $ref: "#/components/schemas/BatchAttachTypedLinkResponse"
        DetachTypedLink:
          $ref: "#/components/schemas/BatchDetachTypedLinkResponse"
        UpdateLinkAttributes:
          $ref: "#/components/schemas/BatchUpdateLinkAttributesResponse"
      description: Represents the output of a <code>BatchWrite</code> response operation.
    BatchWriteOperationResponseList:
      type: array
      items:
        $ref: "#/components/schemas/BatchWriteOperationResponse"
    BatchWriteRequest:
      type: object
      required:
        - Operations
      properties:
        Operations:
          $ref: "#/components/schemas/BatchWriteOperationList"
    BinaryAttributeValue:
      type: string
    BooleanAttributeValue:
      type: boolean
    DirectoryName:
      type: string
      pattern: ^[a-zA-Z0-9._-]*$
      minLength: 1
      maxLength: 64
    CreateDirectoryRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/DirectoryName"
    DirectoryArn:
      type: string
    FacetAttributeList:
      type: array
      items:
        $ref: "#/components/schemas/FacetAttribute"
    ObjectType:
      type: string
      enum:
        - NODE
        - LEAF_NODE
        - POLICY
        - INDEX
    FacetStyle:
      type: string
      enum:
        - STATIC
        - DYNAMIC
    CreateFacetRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/FacetName"
        Attributes:
          $ref: "#/components/schemas/FacetAttributeList"
        ObjectType:
          $ref: "#/components/schemas/ObjectType"
        FacetStyle:
          $ref: "#/components/schemas/FacetStyle"
    CreateIndexRequest:
      type: object
      required:
        - OrderedIndexedAttributeList
        - IsUnique
      properties:
        OrderedIndexedAttributeList:
          $ref: "#/components/schemas/AttributeKeyList"
        IsUnique:
          $ref: "#/components/schemas/Bool"
        ParentReference:
          $ref: "#/components/schemas/ObjectReference"
        LinkName:
          $ref: "#/components/schemas/LinkName"
    CreateObjectRequest:
      type: object
      required:
        - SchemaFacets
      properties:
        SchemaFacets:
          $ref: "#/components/schemas/SchemaFacetList"
        ObjectAttributeList:
          $ref: "#/components/schemas/AttributeKeyAndValueList"
        ParentReference:
          $ref: "#/components/schemas/ObjectReference"
        LinkName:
          $ref: "#/components/schemas/LinkName"
    SchemaName:
      type: string
      pattern: ^[a-zA-Z0-9._-]*$
      minLength: 1
      maxLength: 32
    CreateSchemaRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/SchemaName"
    TypedLinkFacet:
      type: object
      required:
        - Name
        - Attributes
        - IdentityAttributeOrder
      properties:
        Name:
          $ref: "#/components/schemas/TypedLinkName"
        Attributes:
          $ref: "#/components/schemas/TypedLinkAttributeDefinitionList"
        IdentityAttributeOrder:
          $ref: "#/components/schemas/AttributeNameList"
      description: Defines the typed links structure and its attributes. To create a typed
        link facet, use the <a>CreateTypedLinkFacet</a> API.
    CreateTypedLinkFacetRequest:
      type: object
      required:
        - Facet
      properties:
        Facet:
          $ref: "#/components/schemas/TypedLinkFacet"
    Date:
      type: string
      format: date-time
    DatetimeAttributeValue:
      type: string
      format: date-time
    DeleteDirectoryRequest:
      type: object
      properties: {}
    DeleteFacetRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/FacetName"
    DeleteObjectRequest:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
    DeleteSchemaRequest:
      type: object
      properties: {}
    DeleteTypedLinkFacetRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/TypedLinkName"
    DetachFromIndexRequest:
      type: object
      required:
        - IndexReference
        - TargetReference
      properties:
        IndexReference:
          $ref: "#/components/schemas/ObjectReference"
        TargetReference:
          $ref: "#/components/schemas/ObjectReference"
    DetachObjectRequest:
      type: object
      required:
        - ParentReference
        - LinkName
      properties:
        ParentReference:
          $ref: "#/components/schemas/ObjectReference"
        LinkName:
          $ref: "#/components/schemas/LinkName"
    DetachPolicyRequest:
      type: object
      required:
        - PolicyReference
        - ObjectReference
      properties:
        PolicyReference:
          $ref: "#/components/schemas/ObjectReference"
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
    DetachTypedLinkRequest:
      type: object
      required:
        - TypedLinkSpecifier
      properties:
        TypedLinkSpecifier:
          $ref: "#/components/schemas/TypedLinkSpecifier"
    DirectoryState:
      type: string
      enum:
        - ENABLED
        - DISABLED
        - DELETED
    Directory:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/DirectoryName"
        DirectoryArn:
          $ref: "#/components/schemas/DirectoryArn"
        State:
          $ref: "#/components/schemas/DirectoryState"
        CreationDateTime:
          $ref: "#/components/schemas/Date"
      description: Directory structure that includes the directory name and directory ARN.
    DirectoryList:
      type: array
      items:
        $ref: "#/components/schemas/Directory"
    DisableDirectoryRequest:
      type: object
      properties: {}
    EnableDirectoryRequest:
      type: object
      properties: {}
    Facet:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/FacetName"
        ObjectType:
          $ref: "#/components/schemas/ObjectType"
        FacetStyle:
          $ref: "#/components/schemas/FacetStyle"
      description: A structure that contains <code>Name</code>, <code>ARN</code>,
        <code>Attributes</code>, <code> <a>Rule</a>s</code>, and
        <code>ObjectTypes</code>. See <a
        href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_whatarefacets.html">Facets</a>
        for more information.
    FacetAttributeDefinition:
      type: object
      required:
        - Type
      properties:
        Type:
          $ref: "#/components/schemas/FacetAttributeType"
        DefaultValue:
          $ref: "#/components/schemas/TypedAttributeValue"
        IsImmutable:
          $ref: "#/components/schemas/Bool"
        Rules:
          $ref: "#/components/schemas/RuleMap"
      description: A facet attribute definition. See <a
        href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_attributereferences.html">Attribute
        References</a> for more information.
    FacetAttributeReference:
      type: object
      required:
        - TargetFacetName
        - TargetAttributeName
      properties:
        TargetFacetName:
          $ref: "#/components/schemas/FacetName"
        TargetAttributeName:
          $ref: "#/components/schemas/AttributeName"
      description: The facet attribute reference that specifies the attribute definition
        that contains the attribute facet name and attribute name.
    RequiredAttributeBehavior:
      type: string
      enum:
        - REQUIRED_ALWAYS
        - NOT_REQUIRED
    FacetAttributeType:
      type: string
      enum:
        - STRING
        - BINARY
        - BOOLEAN
        - NUMBER
        - DATETIME
        - VARIANT
    RuleMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/Rule"
    UpdateActionType:
      type: string
      enum:
        - CREATE_OR_UPDATE
        - DELETE
    FacetAttributeUpdateList:
      type: array
      items:
        $ref: "#/components/schemas/FacetAttributeUpdate"
    FacetNameList:
      type: array
      items:
        $ref: "#/components/schemas/FacetName"
    GetAppliedSchemaVersionRequest:
      type: object
      required:
        - SchemaArn
      properties:
        SchemaArn:
          $ref: "#/components/schemas/Arn"
    GetDirectoryRequest:
      type: object
      properties: {}
    GetFacetRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/FacetName"
    GetLinkAttributesRequest:
      type: object
      required:
        - TypedLinkSpecifier
        - AttributeNames
      properties:
        TypedLinkSpecifier:
          $ref: "#/components/schemas/TypedLinkSpecifier"
        AttributeNames:
          $ref: "#/components/schemas/AttributeNameList"
        ConsistencyLevel:
          $ref: "#/components/schemas/ConsistencyLevel"
    GetObjectAttributesRequest:
      type: object
      required:
        - ObjectReference
        - SchemaFacet
        - AttributeNames
      properties:
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        SchemaFacet:
          $ref: "#/components/schemas/SchemaFacet"
        AttributeNames:
          $ref: "#/components/schemas/AttributeNameList"
    GetObjectInformationRequest:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
    GetSchemaAsJsonRequest:
      type: object
      properties: {}
    SchemaJsonDocument:
      type: string
    GetTypedLinkFacetInformationRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/TypedLinkName"
    IndexAttachment:
      type: object
      properties:
        IndexedAttributes:
          $ref: "#/components/schemas/AttributeKeyAndValueList"
        ObjectIdentifier:
          $ref: "#/components/schemas/ObjectIdentifier"
      description: Represents an index and an attached object.
    LinkAttributeAction:
      type: object
      properties:
        AttributeActionType:
          $ref: "#/components/schemas/UpdateActionType"
        AttributeUpdateValue:
          $ref: "#/components/schemas/TypedAttributeValue"
      description: The action to take on a typed link attribute value. Updates are only
        supported for attributes which don’t contribute to link identity.
    ListAppliedSchemaArnsRequest:
      type: object
      required:
        - DirectoryArn
      properties:
        DirectoryArn:
          $ref: "#/components/schemas/Arn"
        SchemaArn:
          $ref: "#/components/schemas/Arn"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
    ListAttachedIndicesRequest:
      type: object
      required:
        - TargetReference
      properties:
        TargetReference:
          $ref: "#/components/schemas/ObjectReference"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
    ListDevelopmentSchemaArnsRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
    ListDirectoriesRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
        state:
          $ref: "#/components/schemas/DirectoryState"
    ListFacetAttributesRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/FacetName"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
    ListFacetNamesRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
    ListIncomingTypedLinksRequest:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        FilterAttributeRanges:
          $ref: "#/components/schemas/TypedLinkAttributeRangeList"
        FilterTypedLink:
          $ref: "#/components/schemas/TypedLinkSchemaAndFacetName"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
        ConsistencyLevel:
          $ref: "#/components/schemas/ConsistencyLevel"
    ListIndexRequest:
      type: object
      required:
        - IndexReference
      properties:
        RangesOnIndexedValues:
          $ref: "#/components/schemas/ObjectAttributeRangeList"
        IndexReference:
          $ref: "#/components/schemas/ObjectReference"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListManagedSchemaArnsRequest:
      type: object
      properties:
        SchemaArn:
          $ref: "#/components/schemas/Arn"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
    ListObjectAttributesRequest:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
        FacetFilter:
          $ref: "#/components/schemas/SchemaFacet"
    ListObjectChildrenRequest:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
    ListObjectParentPathsRequest:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
    ListObjectParentsRequest:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
        IncludeAllLinksToEachParent:
          $ref: "#/components/schemas/Bool"
    ObjectIdentifierToLinkNameMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/LinkName"
    ListObjectPoliciesRequest:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
    ListOutgoingTypedLinksRequest:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        FilterAttributeRanges:
          $ref: "#/components/schemas/TypedLinkAttributeRangeList"
        FilterTypedLink:
          $ref: "#/components/schemas/TypedLinkSchemaAndFacetName"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
        ConsistencyLevel:
          $ref: "#/components/schemas/ConsistencyLevel"
    ListPolicyAttachmentsRequest:
      type: object
      required:
        - PolicyReference
      properties:
        PolicyReference:
          $ref: "#/components/schemas/ObjectReference"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
    ListPublishedSchemaArnsRequest:
      type: object
      properties:
        SchemaArn:
          $ref: "#/components/schemas/Arn"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
    TagsNumberResults:
      type: integer
      minimum: 50
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceArn
      properties:
        ResourceArn:
          $ref: "#/components/schemas/Arn"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/TagsNumberResults"
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    ListTypedLinkFacetAttributesRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/TypedLinkName"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
    ListTypedLinkFacetNamesRequest:
      type: object
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
    TypedLinkNameList:
      type: array
      items:
        $ref: "#/components/schemas/TypedLinkName"
    LookupPolicyRequest:
      type: object
      required:
        - ObjectReference
      properties:
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/NumberResults"
    NumberAttributeValue:
      type: string
    ObjectAttributeAction:
      type: object
      properties:
        ObjectAttributeActionType:
          $ref: "#/components/schemas/UpdateActionType"
        ObjectAttributeUpdateValue:
          $ref: "#/components/schemas/TypedAttributeValue"
      description: The action to take on the object attribute.
    TypedAttributeValueRange:
      type: object
      required:
        - StartMode
        - EndMode
      properties:
        StartMode:
          $ref: "#/components/schemas/RangeMode"
        StartValue:
          $ref: "#/components/schemas/TypedAttributeValue"
        EndMode:
          $ref: "#/components/schemas/RangeMode"
        EndValue:
          $ref: "#/components/schemas/TypedAttributeValue"
      description: A range of attribute values. For more information, see <a
        href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_range_filters.html">Range
        Filters</a>.
    ObjectIdentifierAndLinkNameTuple:
      type: object
      properties:
        ObjectIdentifier:
          $ref: "#/components/schemas/ObjectIdentifier"
        LinkName:
          $ref: "#/components/schemas/LinkName"
      description: A pair of ObjectIdentifier and LinkName.
    PathString:
      type: string
    PathToObjectIdentifiers:
      type: object
      properties:
        Path:
          $ref: "#/components/schemas/PathString"
        ObjectIdentifiers:
          $ref: "#/components/schemas/ObjectIdentifierList"
      description: Returns the path to the <code>ObjectIdentifiers</code> that is
        associated with the directory.
    PolicyType:
      type: string
    PolicyAttachment:
      type: object
      properties:
        PolicyId:
          $ref: "#/components/schemas/ObjectIdentifier"
        ObjectIdentifier:
          $ref: "#/components/schemas/ObjectIdentifier"
        PolicyType:
          $ref: "#/components/schemas/PolicyType"
      description: Contains the <code>PolicyType</code>, <code>PolicyId</code>, and the
        <code>ObjectIdentifier</code> to which it is attached. For more
        information, see <a
        href="https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directory.html#key_concepts_policies">Policies</a>.
    PolicyAttachmentList:
      type: array
      items:
        $ref: "#/components/schemas/PolicyAttachment"
    PolicyToPath:
      type: object
      properties:
        Path:
          $ref: "#/components/schemas/PathString"
        Policies:
          $ref: "#/components/schemas/PolicyAttachmentList"
      description: Used when a regular object exists in a <a>Directory</a> and you want to
        find all of the policies that are associated with that object and the
        parent to that object.
    Version:
      type: string
      pattern: ^[a-zA-Z0-9._-]*$
      minLength: 1
      maxLength: 10
    PublishSchemaRequest:
      type: object
      required:
        - Version
      properties:
        Version:
          $ref: "#/components/schemas/Version"
        MinorVersion:
          $ref: "#/components/schemas/Version"
        Name:
          $ref: "#/components/schemas/SchemaName"
    PutSchemaFromJsonRequest:
      type: object
      required:
        - Document
      properties:
        Document:
          $ref: "#/components/schemas/SchemaJsonDocument"
    RangeMode:
      type: string
      enum:
        - FIRST
        - LAST
        - LAST_BEFORE_MISSING_VALUES
        - INCLUSIVE
        - EXCLUSIVE
    RemoveFacetFromObjectRequest:
      type: object
      required:
        - SchemaFacet
        - ObjectReference
      properties:
        SchemaFacet:
          $ref: "#/components/schemas/SchemaFacet"
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
    RuleType:
      type: string
      enum:
        - BINARY_LENGTH
        - NUMBER_COMPARISON
        - STRING_FROM_SET
        - STRING_LENGTH
    RuleParameterMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/RuleParameterValue"
    Rule:
      type: object
      properties:
        Type:
          $ref: "#/components/schemas/RuleType"
        Parameters:
          $ref: "#/components/schemas/RuleParameterMap"
      description: Contains an Amazon Resource Name (ARN) and parameters that are
        associated with the rule.
    RuleKey:
      type: string
      pattern: ^[a-zA-Z0-9._-]*$
      minLength: 1
      maxLength: 64
    RuleParameterKey:
      type: string
    RuleParameterValue:
      type: string
    StringAttributeValue:
      type: string
    TagValue:
      type: string
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
    TagResourceRequest:
      type: object
      required:
        - ResourceArn
        - Tags
      properties:
        ResourceArn:
          $ref: "#/components/schemas/Arn"
        Tags:
          $ref: "#/components/schemas/TagList"
    TypedLinkAttributeDefinition:
      type: object
      required:
        - Name
        - Type
        - RequiredBehavior
      properties:
        Name:
          $ref: "#/components/schemas/AttributeName"
        Type:
          $ref: "#/components/schemas/FacetAttributeType"
        DefaultValue:
          $ref: "#/components/schemas/TypedAttributeValue"
        IsImmutable:
          $ref: "#/components/schemas/Bool"
        Rules:
          $ref: "#/components/schemas/RuleMap"
        RequiredBehavior:
          $ref: "#/components/schemas/RequiredAttributeBehavior"
      description: A typed link attribute definition.
    TypedLinkFacetAttributeUpdateList:
      type: array
      items:
        $ref: "#/components/schemas/TypedLinkFacetAttributeUpdate"
    UntagResourceRequest:
      type: object
      required:
        - ResourceArn
        - TagKeys
      properties:
        ResourceArn:
          $ref: "#/components/schemas/Arn"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
    UpdateFacetRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/FacetName"
        AttributeUpdates:
          $ref: "#/components/schemas/FacetAttributeUpdateList"
        ObjectType:
          $ref: "#/components/schemas/ObjectType"
    UpdateLinkAttributesRequest:
      type: object
      required:
        - TypedLinkSpecifier
        - AttributeUpdates
      properties:
        TypedLinkSpecifier:
          $ref: "#/components/schemas/TypedLinkSpecifier"
        AttributeUpdates:
          $ref: "#/components/schemas/LinkAttributeUpdateList"
    UpdateObjectAttributesRequest:
      type: object
      required:
        - ObjectReference
        - AttributeUpdates
      properties:
        ObjectReference:
          $ref: "#/components/schemas/ObjectReference"
        AttributeUpdates:
          $ref: "#/components/schemas/ObjectAttributeUpdateList"
    UpdateSchemaRequest:
      type: object
      required:
        - Name
      properties:
        Name:
          $ref: "#/components/schemas/SchemaName"
    UpdateTypedLinkFacetRequest:
      type: object
      required:
        - Name
        - AttributeUpdates
        - IdentityAttributeOrder
      properties:
        Name:
          $ref: "#/components/schemas/TypedLinkName"
        AttributeUpdates:
          $ref: "#/components/schemas/TypedLinkFacetAttributeUpdateList"
        IdentityAttributeOrder:
          $ref: "#/components/schemas/AttributeNameList"
    UpgradeAppliedSchemaRequest:
      type: object
      required:
        - PublishedSchemaArn
        - DirectoryArn
      properties:
        PublishedSchemaArn:
          $ref: "#/components/schemas/Arn"
        DirectoryArn:
          $ref: "#/components/schemas/Arn"
        DryRun:
          $ref: "#/components/schemas/Bool"
    UpgradePublishedSchemaRequest:
      type: object
      required:
        - DevelopmentSchemaArn
        - PublishedSchemaArn
        - MinorVersion
      properties:
        DevelopmentSchemaArn:
          $ref: "#/components/schemas/Arn"
        PublishedSchemaArn:
          $ref: "#/components/schemas/Arn"
        MinorVersion:
          $ref: "#/components/schemas/Version"
        DryRun:
          $ref: "#/components/schemas/Bool"
