openapi: 3.0.0
info:
  version: 2017-11-27
  x-release: v4
  title: AWS Resource Groups
  description: <fullname>AWS Resource Groups</fullname> <p>AWS Resource Groups lets you
    organize AWS resources such as Amazon EC2 instances, Amazon Relational
    Database Service databases, and Amazon S3 buckets into groups using criteria
    that you define as tags. A resource group is a collection of resources that
    match the resource types specified in a query, and share one or more tags or
    portions of tags. You can create a group of resources based on their roles
    in your cloud infrastructure, lifecycle stages, regions, application layers,
    or virtually any criteria. Resource groups enable you to automate management
    tasks, such as those in AWS Systems Manager Automation documents, on
    tag-related resources in AWS Systems Manager. Groups of tagged resources
    also let you quickly view a custom console in AWS Systems Manager that shows
    AWS Config compliance and other monitoring data about member resources.</p>
    <p>To create a resource group, build a resource query, and specify tags that
    identify the criteria that members of the group have in common. Tags are
    key-value pairs.</p> <p>For more information about Resource Groups, see the
    <a href="https://docs.aws.amazon.com/ARG/latest/userguide/welcome.html">AWS
    Resource Groups User Guide</a>.</p> <p>AWS Resource Groups uses a
    REST-compliant API that you can use to perform the following types of
    operations.</p> <ul> <li> <p>Create, Read, Update, and Delete (CRUD)
    operations on resource groups and resource query entities</p> </li> <li>
    <p>Applying, editing, and removing tags from resource groups</p> </li> <li>
    <p>Resolving resource group member ARNs so they can be returned as search
    results</p> </li> <li> <p>Getting data about resources that are members of a
    group</p> </li> <li> <p>Searching AWS resources based on a resource
    query</p> </li> </ul>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: resource-groups
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/resource-groups-2017-11-27.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/resource-groups/
security:
  - hmac: []
paths:
  /groups:
    post:
      operationId: CreateGroup
      description: Creates a group with a specified name, description, and resource query.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateGroupOutput"
        "480":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "481":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "482":
          description: MethodNotAllowedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MethodNotAllowedException"
        "483":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "484":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - ResourceQuery
              properties:
                Name:
                  description: The name of the group, which is the identifier of the group
                    in other operations. A resource group name cannot be updated
                    after it is created. A resource group name can have a
                    maximum of 128 characters, including letters, numbers,
                    hyphens, dots, and underscores. The name cannot start with
                    <code>AWS</code> or <code>aws</code>; these are reserved. A
                    resource group name must be unique within your account.
                  type: string
                  pattern: "[a-zA-Z0-9_\\.-]+"
                  minLength: 1
                  maxLength: 128
                Description:
                  description: The description of the resource group. Descriptions can have
                    a maximum of 511 characters, including letters, numbers,
                    hyphens, underscores, punctuation, and spaces.
                  type: string
                  pattern: "[\\sa-zA-Z0-9_\\.-]*"
                  maxLength: 512
                ResourceQuery:
                  description: The query that is used to define a resource group or a
                    search for resources.
                  type: object
                  properties:
                    Type:
                      $ref: "#/components/schemas/QueryType"
                    Query:
                      $ref: "#/components/schemas/Query"
                Tags:
                  description: The tags to add to the group. A tag is a string-to-string
                    map of key-value pairs. Tag keys can have a maximum
                    character length of 128 characters, and tag values can have
                    a maximum length of 256 characters.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/groups/{GroupName}":
    delete:
      operationId: DeleteGroup
      description: Deletes a specified resource group. Deleting a resource group does not
        delete resources that are members of the group; it only deletes the
        group structure.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteGroupOutput"
        "480":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "481":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: MethodNotAllowedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MethodNotAllowedException"
        "484":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
      parameters:
        - name: GroupName
          in: path
          required: true
          description: The name of the resource group to delete.
          schema:
            type: string
            minLength: 1
            maxLength: 128
            pattern: "[a-zA-Z0-9_\\.-]+"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetGroup
      description: Returns information about a specified resource group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetGroupOutput"
        "480":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "481":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: MethodNotAllowedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MethodNotAllowedException"
        "484":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
      parameters:
        - name: GroupName
          in: path
          required: true
          description: The name of the resource group.
          schema:
            type: string
            minLength: 1
            maxLength: 128
            pattern: "[a-zA-Z0-9_\\.-]+"
    put:
      operationId: UpdateGroup
      description: Updates an existing group with a new or changed description. You cannot
        update the name of a resource group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateGroupOutput"
        "480":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "481":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: MethodNotAllowedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MethodNotAllowedException"
        "484":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
      parameters:
        - name: GroupName
          in: path
          required: true
          description: The name of the resource group for which you want to update its
            description.
          schema:
            type: string
            minLength: 1
            maxLength: 128
            pattern: "[a-zA-Z0-9_\\.-]+"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  description: The description of the resource group. Descriptions can have
                    a maximum of 511 characters, including letters, numbers,
                    hyphens, underscores, punctuation, and spaces.
                  type: string
                  pattern: "[\\sa-zA-Z0-9_\\.-]*"
                  maxLength: 512
        required: true
  "/groups/{GroupName}/query":
    get:
      operationId: GetGroupQuery
      description: Returns the resource query associated with the specified resource group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetGroupQueryOutput"
        "480":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "481":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: MethodNotAllowedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MethodNotAllowedException"
        "484":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
      parameters:
        - name: GroupName
          in: path
          required: true
          description: The name of the resource group.
          schema:
            type: string
            minLength: 1
            maxLength: 128
            pattern: "[a-zA-Z0-9_\\.-]+"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    put:
      operationId: UpdateGroupQuery
      description: Updates the resource query of a group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateGroupQueryOutput"
        "480":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "481":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: MethodNotAllowedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MethodNotAllowedException"
        "484":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
      parameters:
        - name: GroupName
          in: path
          required: true
          description: The name of the resource group for which you want to edit the query.
          schema:
            type: string
            minLength: 1
            maxLength: 128
            pattern: "[a-zA-Z0-9_\\.-]+"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - ResourceQuery
              properties:
                ResourceQuery:
                  description: The query that is used to define a resource group or a
                    search for resources.
                  type: object
                  properties:
                    Type:
                      $ref: "#/components/schemas/QueryType"
                    Query:
                      $ref: "#/components/schemas/Query"
        required: true
  "/resources/{Arn}/tags":
    get:
      operationId: GetTags
      description: Returns a list of tags that are associated with a resource group,
        specified by an ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTagsOutput"
        "480":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "481":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: MethodNotAllowedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MethodNotAllowedException"
        "484":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
      parameters:
        - name: Arn
          in: path
          required: true
          description: The ARN of the resource group for which you want a list of tags. The
            resource must exist within the account you are using.
          schema:
            type: string
            minLength: 12
            maxLength: 1600
            pattern: arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}-[a-z]+-\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\.-]{1,128}
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    put:
      operationId: Tag
      description: Adds tags to a resource group with the specified ARN. Existing tags on a
        resource group are not changed if they are not specified in the request
        parameters.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagOutput"
        "480":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "481":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: MethodNotAllowedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MethodNotAllowedException"
        "484":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
      parameters:
        - name: Arn
          in: path
          required: true
          description: The ARN of the resource to which to add tags.
          schema:
            type: string
            minLength: 12
            maxLength: 1600
            pattern: arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}-[a-z]+-\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\.-]{1,128}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: The tags to add to the specified resource. A tag is a
                    string-to-string map of key-value pairs. Tag keys can have a
                    maximum character length of 128 characters, and tag values
                    can have a maximum length of 256 characters.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
        required: true
    patch:
      operationId: Untag
      description: Deletes specified tags from a specified resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagOutput"
        "480":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "481":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "482":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "483":
          description: MethodNotAllowedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MethodNotAllowedException"
        "484":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
      parameters:
        - name: Arn
          in: path
          required: true
          description: The ARN of the resource from which to remove tags.
          schema:
            type: string
            minLength: 12
            maxLength: 1600
            pattern: arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}-[a-z]+-\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\.-]{1,128}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - Keys
              properties:
                Keys:
                  description: The keys of the tags to be removed.
                  type: array
                  items:
                    $ref: "#/components/schemas/TagKey"
        required: true
  "/groups/{GroupName}/resource-identifiers-list":
    post:
      operationId: ListGroupResources
      description: Returns a list of ARNs of resources that are members of a specified
        resource group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGroupResourcesOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "482":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "483":
          description: NotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundException"
        "484":
          description: MethodNotAllowedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MethodNotAllowedException"
        "485":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "486":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
      parameters:
        - name: GroupName
          in: path
          required: true
          description: The name of the resource group.
          schema:
            type: string
            minLength: 1
            maxLength: 128
            pattern: "[a-zA-Z0-9_\\.-]+"
        - name: maxResults
          in: query
          required: false
          description: The maximum number of group member ARNs that are returned in a
            single call by ListGroupResources, in paginated output. By default,
            this number is 50.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: nextToken
          in: query
          required: false
          description: The NextToken value that is returned in a paginated
            ListGroupResources request. To get the next page of results, run the
            call again, add the NextToken parameter, and specify the NextToken
            value.
          schema:
            type: string
            minLength: 0
            maxLength: 8192
            pattern: ^[a-zA-Z0-9+/]*={0,2}$
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  description: <p>Filters, formatted as ResourceFilter objects, that you
                    want to apply to a ListGroupResources operation.</p> <ul>
                    <li> <p> <code>resource-type</code> - Filter resources by
                    their type. Specify up to five resource types in the format
                    AWS::ServiceCode::ResourceType. For example,
                    AWS::EC2::Instance, or AWS::S3::Bucket.</p> </li> </ul>
                  type: array
                  items:
                    $ref: "#/components/schemas/ResourceFilter"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /groups-list:
    post:
      operationId: ListGroups
      description: Returns a list of existing resource groups in your account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGroupsOutput"
        "480":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "481":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "482":
          description: MethodNotAllowedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MethodNotAllowedException"
        "483":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "484":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of resource group results that are returned by
            ListGroups in paginated output. By default, this number is 50.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: nextToken
          in: query
          required: false
          description: The NextToken value that is returned in a paginated
            <code>ListGroups</code> request. To get the next page of results,
            run the call again, add the NextToken parameter, and specify the
            NextToken value.
          schema:
            type: string
            minLength: 0
            maxLength: 8192
            pattern: ^[a-zA-Z0-9+/]*={0,2}$
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  description: <p>Filters, formatted as GroupFilter objects, that you want
                    to apply to a ListGroups operation.</p> <ul> <li> <p>
                    <code>resource-type</code> - Filter groups by resource type.
                    Specify up to five resource types in the format
                    AWS::ServiceCode::ResourceType. For example,
                    AWS::EC2::Instance, or AWS::S3::Bucket.</p> </li> </ul>
                  type: array
                  items:
                    $ref: "#/components/schemas/GroupFilter"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /resources/search:
    post:
      operationId: SearchResources
      description: Returns a list of AWS resource identifiers that matches a specified
        query. The query uses the same format as a resource query in a
        CreateGroup or UpdateGroupQuery operation.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResourcesOutput"
        "480":
          description: UnauthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedException"
        "481":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
        "482":
          description: ForbiddenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ForbiddenException"
        "483":
          description: MethodNotAllowedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MethodNotAllowedException"
        "484":
          description: TooManyRequestsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
      parameters:
        - name: MaxResults
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: NextToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - ResourceQuery
              properties:
                ResourceQuery:
                  description: The query that is used to define a resource group or a
                    search for resources.
                  type: object
                  properties:
                    Type:
                      $ref: "#/components/schemas/QueryType"
                    Query:
                      $ref: "#/components/schemas/Query"
                MaxResults:
                  description: The maximum number of group member ARNs returned by
                    <code>SearchResources</code> in paginated output. By
                    default, this number is 50.
                  type: integer
                  minimum: 1
                  maximum: 50
                NextToken:
                  description: The NextToken value that is returned in a paginated
                    <code>SearchResources</code> request. To get the next page
                    of results, run the call again, add the NextToken parameter,
                    and specify the NextToken value.
                  type: string
                  pattern: ^[a-zA-Z0-9+/]*={0,2}$
                  minLength: 0
                  maxLength: 8192
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://resource-groups.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Resource Groups multi-region endpoint
  - url: https://resource-groups.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Resource Groups multi-region endpoint
  - url: http://resource-groups.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Resource Groups endpoint for China (Beijing) and China (Ningxia)
  - url: https://resource-groups.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Resource Groups endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateGroupOutput:
      type: object
      properties:
        Group:
          $ref: "#/components/schemas/Group"
        ResourceQuery:
          $ref: "#/components/schemas/ResourceQuery"
        Tags:
          $ref: "#/components/schemas/Tags"
    QueryType:
      type: string
      enum:
        - TAG_FILTERS_1_0
        - CLOUDFORMATION_STACK_1_0
      pattern: ^\w+$
      minLength: 1
      maxLength: 128
    Query:
      type: string
      pattern: "[\\s\\S]*"
      maxLength: 4096
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 256
    BadRequestException: {}
    ForbiddenException: {}
    MethodNotAllowedException: {}
    TooManyRequestsException: {}
    InternalServerErrorException: {}
    DeleteGroupOutput:
      type: object
      properties:
        Group:
          $ref: "#/components/schemas/Group"
    NotFoundException: {}
    GetGroupOutput:
      type: object
      properties:
        Group:
          $ref: "#/components/schemas/Group"
    GetGroupQueryOutput:
      type: object
      properties:
        GroupQuery:
          $ref: "#/components/schemas/GroupQuery"
    GetTagsOutput:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/GroupArn"
        Tags:
          $ref: "#/components/schemas/Tags"
    ListGroupResourcesOutput:
      type: object
      properties:
        ResourceIdentifiers:
          $ref: "#/components/schemas/ResourceIdentifierList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        QueryErrors:
          $ref: "#/components/schemas/QueryErrorList"
    ResourceFilter:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          $ref: "#/components/schemas/ResourceFilterName"
        Values:
          $ref: "#/components/schemas/ResourceFilterValues"
      description: A filter name and value pair that is used to obtain more specific
        results from a list of resources.
    UnauthorizedException: {}
    ListGroupsOutput:
      type: object
      properties:
        GroupIdentifiers:
          $ref: "#/components/schemas/GroupIdentifierList"
        Groups:
          $ref: "#/components/schemas/GroupList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    GroupFilter:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          $ref: "#/components/schemas/GroupFilterName"
        Values:
          $ref: "#/components/schemas/GroupFilterValues"
      description: A filter name and value pair that is used to obtain more specific
        results from a list of groups.
    SearchResourcesOutput:
      type: object
      properties:
        ResourceIdentifiers:
          $ref: "#/components/schemas/ResourceIdentifierList"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        QueryErrors:
          $ref: "#/components/schemas/QueryErrorList"
    TagOutput:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/GroupArn"
        Tags:
          $ref: "#/components/schemas/Tags"
    UntagOutput:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/GroupArn"
        Keys:
          $ref: "#/components/schemas/TagKeyList"
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    UpdateGroupOutput:
      type: object
      properties:
        Group:
          $ref: "#/components/schemas/Group"
    UpdateGroupQueryOutput:
      type: object
      properties:
        GroupQuery:
          $ref: "#/components/schemas/GroupQuery"
    GroupName:
      type: string
      pattern: "[a-zA-Z0-9_\\.-]+"
      minLength: 1
      maxLength: 128
    GroupDescription:
      type: string
      pattern: "[\\sa-zA-Z0-9_\\.-]*"
      maxLength: 512
    ResourceQuery:
      type: object
      required:
        - Type
        - Query
      properties:
        Type:
          $ref: "#/components/schemas/QueryType"
        Query:
          $ref: "#/components/schemas/Query"
      description: The query that is used to define a resource group or a search for
        resources.
    Tags:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/TagValue"
    CreateGroupInput:
      type: object
      required:
        - Name
        - ResourceQuery
      properties:
        Name:
          $ref: "#/components/schemas/GroupName"
        Description:
          $ref: "#/components/schemas/GroupDescription"
        ResourceQuery:
          $ref: "#/components/schemas/ResourceQuery"
        Tags:
          $ref: "#/components/schemas/Tags"
    Group:
      type: object
      required:
        - GroupArn
        - Name
      properties:
        GroupArn:
          $ref: "#/components/schemas/GroupArn"
        Name:
          $ref: "#/components/schemas/GroupName"
        Description:
          $ref: "#/components/schemas/GroupDescription"
      description: A resource group.
    DeleteGroupInput:
      type: object
      properties: {}
    GetGroupInput:
      type: object
      properties: {}
    GetGroupQueryInput:
      type: object
      properties: {}
    GroupQuery:
      type: object
      required:
        - GroupName
        - ResourceQuery
      properties:
        GroupName:
          $ref: "#/components/schemas/GroupName"
        ResourceQuery:
          $ref: "#/components/schemas/ResourceQuery"
      description: The underlying resource query of a resource group. Resources that match
        query results are part of the group.
    GroupArn:
      type: string
      pattern: arn:aws(-[a-z]+)*:resource-groups:[a-z]{2}-[a-z]+-\d{1}:[0-9]{12}:group/[a-zA-Z0-9_\.-]{1,128}
      minLength: 12
      maxLength: 1600
    GetTagsInput:
      type: object
      properties: {}
    GroupFilterName:
      type: string
      enum:
        - resource-type
    GroupFilterValues:
      type: array
      items:
        $ref: "#/components/schemas/GroupFilterValue"
      minItems: 1
      maxItems: 5
    GroupFilterList:
      type: array
      items:
        $ref: "#/components/schemas/GroupFilter"
    GroupFilterValue:
      type: string
      pattern: AWS::(AllSupported|[a-zA-Z0-9]+::[a-zA-Z0-9]+)
      minLength: 1
      maxLength: 128
    GroupIdentifier:
      type: object
      properties:
        GroupName:
          $ref: "#/components/schemas/GroupName"
        GroupArn:
          $ref: "#/components/schemas/GroupArn"
      description: The ARN and group name of a group.
    GroupIdentifierList:
      type: array
      items:
        $ref: "#/components/schemas/GroupIdentifier"
    GroupList:
      type: array
      items:
        $ref: "#/components/schemas/Group"
    ResourceFilterList:
      type: array
      items:
        $ref: "#/components/schemas/ResourceFilter"
    MaxResults:
      type: integer
      minimum: 1
      maximum: 50
    NextToken:
      type: string
      pattern: ^[a-zA-Z0-9+/]*={0,2}$
      minLength: 0
      maxLength: 8192
    ListGroupResourcesInput:
      type: object
      properties:
        Filters:
          $ref: "#/components/schemas/ResourceFilterList"
    ResourceIdentifierList:
      type: array
      items:
        $ref: "#/components/schemas/ResourceIdentifier"
    QueryErrorList:
      type: array
      items:
        $ref: "#/components/schemas/QueryError"
    ListGroupsInput:
      type: object
      properties:
        Filters:
          $ref: "#/components/schemas/GroupFilterList"
    QueryErrorCode:
      type: string
      enum:
        - CLOUDFORMATION_STACK_INACTIVE
        - CLOUDFORMATION_STACK_NOT_EXISTING
    QueryErrorMessage:
      type: string
    QueryError:
      type: object
      properties:
        ErrorCode:
          $ref: "#/components/schemas/QueryErrorCode"
        Message:
          $ref: "#/components/schemas/QueryErrorMessage"
      description: A two-part error structure that can occur in
        <code>ListGroupResources</code> or <code>SearchResources</code>
        operations on CloudFormation stack-based queries. The error occurs if
        the CloudFormation stack on which the query is based either does not
        exist, or has a status that renders the stack inactive. A
        <code>QueryError</code> occurrence does not necessarily mean that AWS
        Resource Groups could not complete the operation, but the resulting
        group might have no member resources.
    ResourceArn:
      type: string
      pattern: arn:aws(-[a-z]+)*:[a-z0-9\-]*:([a-z]{2}-[a-z]+-\d{1})?:([0-9]{12})?:.+
    ResourceFilterName:
      type: string
      enum:
        - resource-type
    ResourceFilterValues:
      type: array
      items:
        $ref: "#/components/schemas/ResourceFilterValue"
      minItems: 1
      maxItems: 5
    ResourceFilterValue:
      type: string
      pattern: AWS::[a-zA-Z0-9]+::[a-zA-Z0-9]+
      minLength: 1
      maxLength: 128
    ResourceType:
      type: string
      pattern: AWS::[a-zA-Z0-9]+::\w+
    ResourceIdentifier:
      type: object
      properties:
        ResourceArn:
          $ref: "#/components/schemas/ResourceArn"
        ResourceType:
          $ref: "#/components/schemas/ResourceType"
      description: The ARN of a resource, and its resource type.
    SearchResourcesInput:
      type: object
      required:
        - ResourceQuery
      properties:
        ResourceQuery:
          $ref: "#/components/schemas/ResourceQuery"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        NextToken:
          $ref: "#/components/schemas/NextToken"
    TagInput:
      type: object
      required:
        - Tags
      properties:
        Tags:
          $ref: "#/components/schemas/Tags"
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
    UntagInput:
      type: object
      required:
        - Keys
      properties:
        Keys:
          $ref: "#/components/schemas/TagKeyList"
    UpdateGroupInput:
      type: object
      properties:
        Description:
          $ref: "#/components/schemas/GroupDescription"
    UpdateGroupQueryInput:
      type: object
      required:
        - ResourceQuery
      properties:
        ResourceQuery:
          $ref: "#/components/schemas/ResourceQuery"
