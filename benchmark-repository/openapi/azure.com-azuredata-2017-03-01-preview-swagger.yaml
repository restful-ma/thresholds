openapi: 3.0.0
info:
  description: The AzureData management API provides a RESTful set of web APIs to manage
    Azure Data Resources. For example, register, delete and retrieve a SQL
    Server, SQL Server registration.
  title: AzureDataManagementClient
  version: 2017-03-01-preview
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/azuredata/resource-manager/Microsoft.AzureData/preview/2017-03-01-preview/azuredata.json
      version: "2.0"
  x-providerName: azure.com
  x-serviceName: azuredata
  x-tags:
    - Azure
    - Microsoft
paths:
  /providers/Microsoft.AzureData/operations:
    get:
      description: Lists all of the available SQL Server Registration API operations.
      operationId: Operations_List
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved operations.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationListResult"
              examples:
                Lists all of the available SQL Server Registration API operations.:
                  $ref: "#/components/examples/Lists_all_of_the_available_SQL_Serve\
                    r_Registration_API_operations."
        default:
          description: >-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was given to parameter.

             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.

             * 400 RPGenericUser - User Failure when calling other Resource Provider.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 ArgumentNotInRange - Argument '{0}' not in range.

             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward

             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 404 OperationIdNotFound - Operation id could not be found.

             * 404 OperationTypeNotFound - Operation Type not found.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SqlExtensionNotInstalled - SQL extension not installed.

             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 500 RPGenericSystem - System Failure when calling other Resource Provider.

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.
      tags:
        - Operations
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.AzureData/sqlServerRegistrations":
    get:
      description: Gets all SQL Server registrations in a subscription.
      operationId: SqlServerRegistrations_List
      parameters:
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved all SQL Server registrations in the
            subscription.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SqlServerRegistrationListResult"
              examples:
                Gets all SQL Server registrations in a subscription.:
                  $ref: "#/components/examples/Gets_all_SQL_Server_registrations_in\
                    _a_subscription."
        default:
          description: >-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was given to parameter.

             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.

             * 404 ResourceNotFound - The requested resource was not found.
      tags:
        - SqlServerRegistrations
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureData/sqlServerRegistrations":
    get:
      description: Gets all SQL Server registrations in a resource group.
      operationId: SqlServerRegistrations_ListByResourceGroup
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved all SQL Server registrations in the resource
            group.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SqlServerRegistrationListResult"
              examples:
                Gets all SQL Server registrations in a resource group.:
                  $ref: "#/components/examples/Gets_all_SQL_Server_registrations_in\
                    _a_resource_group."
        default:
          description: "*** Error Responses: ***"
      tags:
        - SqlServerRegistrations
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureData/sqlServerRegistrations/{sqlServerRegistrationName}":
    delete:
      description: Deletes a SQL Server registration.
      operationId: SqlServerRegistrations_Delete
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - description: Name of the SQL Server registration.
          in: path
          name: sqlServerRegistrationName
          required: true
          schema:
            type: string
          examples:
            Deletes a SQL Server registration.:
              value: testsqlregistration
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully deleted the SQL Server registration.
        "204":
          description: The specified SQL Server registration does not exist.
        default:
          description: >-
            *** Error Responses: ***

             * 400 RPGenericUser - User Failure when calling other Resource Provider.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 ArgumentNotInRange - Argument '{0}' not in range.

             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward

             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.

             * 400 InvalidParameterValue - An invalid value was given to parameter.

             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.

             * 400 TinaGroupUpdateFailVmAttached - SQL Server registration cannot be updated as it has attached a SQL Server.

             * 400 InvalidSqlImageOffer - Provided SQL image offer is invalid.

             * 400 InvalidSqlSku - Provided SQL sku is invalid.

             * 400 OuPathAndDomainMismatch - OU path is not within the domain provided.

             * 400 InvalidAccountNameFormat - Account name format is invalid.

             * 400 CloudWitnessUnsupported - For Windows Server 2012R2 setup cloud witness is not allowed.

             * 400 FileShareWitnessDisAllowed - For Windows Server 2016 and beyond setup, file share witness is not allowed.

             * 400 InvalidStorageAccountUrl - Invalid storage account url.

             * 400 TinaGroupNameTooLong - SQL Server registration name cannot exceed 15 characters.

             * 400 InvalidTinaGroupName - Invalid SQL Server registration name.

             * 400 TinaGroupNotEmpty - SQL Server registration is not empty.

             * 400 TinaGroupUpdateNotAllowed - Update to SQL Server registration is not allowed.

             * 403 AccessDenied - Access denied.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 404 OperationIdNotFound - Operation id could not be found.

             * 404 OperationTypeNotFound - Operation Type not found.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotHaveTINAGroupInResourceGroup - Subscription does not have SQL Server registration in resource group.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SqlExtensionNotInstalled - SQL extension not installed.

             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 500 RPGenericSystem - System Failure when calling other Resource Provider.

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.
      tags:
        - SqlServerRegistrations
    get:
      description: Gets a SQL Server registration.
      operationId: SqlServerRegistrations_Get
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - description: Name of the SQL Server registration.
          in: path
          name: sqlServerRegistrationName
          required: true
          schema:
            type: string
          examples:
            Gets a SQL Server registration.:
              value: testsqlregistration
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved the SQL Server registration.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SqlServerRegistration"
              examples:
                Gets a SQL Server registration.:
                  $ref: "#/components/examples/Gets_a_SQL_Server_registration."
        default:
          description: >-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was given to parameter.

             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.

             * 400 RPGenericUser - User Failure when calling other Resource Provider.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 ArgumentNotInRange - Argument '{0}' not in range.

             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward

             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 404 OperationIdNotFound - Operation id could not be found.

             * 404 OperationTypeNotFound - Operation Type not found.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SqlExtensionNotInstalled - SQL extension not installed.

             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 500 RPGenericSystem - System Failure when calling other Resource Provider.

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.
      tags:
        - SqlServerRegistrations
    patch:
      description: Updates SQL Server Registration tags.
      operationId: SqlServerRegistrations_Update
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - description: Name of the SQL Server registration.
          in: path
          name: sqlServerRegistrationName
          required: true
          schema:
            type: string
          examples:
            Updates a SQL Server Registration tags.:
              value: testsqlregistration
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SqlServerRegistrationUpdate"
        description: The SQL Server Registration.
        required: true
      responses:
        "200":
          description: Successfully updated the SQL Server Registration.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SqlServerRegistration"
              examples:
                Updates a SQL Server Registration tags.:
                  $ref: "#/components/examples/Updates_a_SQL_Server_Registration_ta\
                    gs."
        default:
          description: >-
            *** Error Responses: ***

             * 400 RPGenericUser - User Failure when calling other Resource Provider.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 ArgumentNotInRange - Argument '{0}' not in range.

             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward

             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.

             * 400 InvalidParameterValue - An invalid value was given to parameter.

             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.

             * 403 AccessDenied - Access denied.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 404 OperationIdNotFound - Operation id could not be found.

             * 404 OperationTypeNotFound - Operation Type not found.

             * 404 ResourceNotFound - The requested resource was not found.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SqlExtensionNotInstalled - SQL extension not installed.

             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 500 RPGenericSystem - System Failure when calling other Resource Provider.

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.
      tags:
        - SqlServerRegistrations
    put:
      description: Creates or updates a SQL Server registration.
      operationId: SqlServerRegistrations_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - description: Name of the SQL Server registration.
          in: path
          name: sqlServerRegistrationName
          required: true
          schema:
            type: string
          examples:
            Creates or updates a SQL Server registration.:
              value: testsqlregistration
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SqlServerRegistration"
        description: The SQL Server registration to be created or updated.
        required: true
      responses:
        "200":
          description: Successfully updated the SQL Server registration.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SqlServerRegistration"
              examples:
                Creates or updates a SQL Server registration.:
                  $ref: "#/components/examples/Creates_or_updates_a_SQL_Server_regi\
                    stration."
        "201":
          description: Successfully created the SQL Server registration.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SqlServerRegistration"
              examples:
                Creates or updates a SQL Server registration.:
                  $ref: "#/components/examples/Creates_or_updates_a_SQL_Server_regi\
                    stration."
        default:
          description: >-
            *** Error Responses: ***

             * 400 RPGenericUser - User Failure when calling other Resource Provider.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 ArgumentNotInRange - Argument '{0}' not in range.

             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward

             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.

             * 400 InvalidParameterValue - An invalid value was given to parameter.

             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.

             * 400 TinaGroupUpdateFailVmAttached - SQL Server registration cannot be updated as it has attached a SQL Server.

             * 400 InvalidSqlImageOffer - Provided SQL image offer is invalid.

             * 400 InvalidSqlSku - Provided SQL sku is invalid.

             * 400 OuPathAndDomainMismatch - OU path is not within the domain provided.

             * 400 InvalidAccountNameFormat - Account name format is invalid.

             * 400 CloudWitnessUnsupported - For Windows Server 2012R2 setup cloud witness is not allowed.

             * 400 FileShareWitnessDisAllowed - For Windows Server 2016 and beyond setup, file share witness is not allowed.

             * 400 InvalidStorageAccountUrl - Invalid storage account url.

             * 400 TinaGroupNameTooLong - SQL Server registration name cannot exceed 15 characters.

             * 400 InvalidTinaGroupName - Invalid SQL Server registration name.

             * 400 TinaGroupNotEmpty - SQL Server registration is not empty.

             * 400 TinaGroupUpdateNotAllowed - Update to SQL Server registration is not allowed.

             * 403 AccessDenied - Access denied.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 404 OperationIdNotFound - Operation id could not be found.

             * 404 OperationTypeNotFound - Operation Type not found.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotHaveTINAGroupInResourceGroup - Subscription does not have SQL Server registration in resource group.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SqlExtensionNotInstalled - SQL extension not installed.

             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 500 RPGenericSystem - System Failure when calling other Resource Provider.

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.
      tags:
        - SqlServerRegistrations
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureData/sqlServerRegistrations/{sqlServerRegistrationName}/sqlServers":
    get:
      description: Gets all SQL Servers in a SQL Server Registration.
      operationId: SqlServers_ListByResourceGroup
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - description: Name of the SQL Server registration.
          in: path
          name: sqlServerRegistrationName
          required: true
          schema:
            type: string
          examples:
            Gets all SQL Servers in a SQL Server Registration.:
              value: testsqlregistration
        - description: The child resources to include in the response.
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved all SQL Servers in the SQL Server
            Registration.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SqlServerListResult"
              examples:
                Gets all SQL Servers in a SQL Server Registration.:
                  $ref: "#/components/examples/Gets_all_SQL_Servers_in_a_SQL_Server\
                    _Registration."
        default:
          description: "*** Error Responses: ***"
      tags:
        - SqlServers
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureData/sqlServerRegistrations/{sqlServerRegistrationName}/sqlServers/{sqlServerName}":
    delete:
      description: Deletes a SQL Server.
      operationId: SqlServers_Delete
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - description: Name of the SQL Server registration.
          in: path
          name: sqlServerRegistrationName
          required: true
          schema:
            type: string
          examples:
            Deletes a SQL Server.:
              value: testsqlregistration
        - description: Name of the SQL Server.
          in: path
          name: sqlServerName
          required: true
          schema:
            type: string
          examples:
            Deletes a SQL Server.:
              value: testsqlserver
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully deleted the SQL Server.
        "204":
          description: The specified SQL Server does not exist.
        default:
          description: >-
            *** Error Responses: ***

             * 400 InvalidVmResourceIdChange - Server resource id property cannot be updated.

             * 400 TinaAlreadyIncludedInGroup - SQL Server cannot be moved from one group to another in same operation.

             * 400 TinaCannotRemoveFromGroup - SQL Server cannot be removed from group.

             * 400 VmLocationMismatch - VM location does not match that of SQL Server.

             * 400 SqlSkuMismatchWithGroup - SQL sku set on the SQL Server registration does not match that of the SQL Server.

             * 400 VmInsufficientPermission - Insufficient permission to Vm.

             * 400 SingleNicOnVmAllowed - Only Single NIC Servers are allowed.

             * 400 InvalidTinaGroupResourceIdParameterValue - SQL Server registration resource id is not in correct format.

             * 400 MismatchVmGroupSubscription - Subscription id for SQL Server and SQL Server registration are different.

             * 400 IncompleteDomainCredentialsProperty - Incomplete input provided for domain credentials property.

             * 400 BYOLChangeToPAYGNotSupported - The conversion from AHUB to PAYG is not supported for BYOL images

             * 400 InvalidVmResourceIdParameterValue - Provided Server resource id is not valid.

             * 400 MismatchInTinaAndVmResourceIdSubscription - Mismatch in subscription id for SQL Server and Server resource id property.

             * 400 MismatchTinaAndVmName - SQL Server name is not same as the Server name provided on ServerResourceId property.

             * 400 MismatchTinaAndVmRgName - SQL Server resource group name is not same as the Server resource group name provided on ServerResourceId property.

             * 400 NotSupportedTinaOSVersion - Server OS type is not Windows. Only Windows OS versions are supported

             * 400 VmNotRunning - The VM is not in running state.

             * 400 VmAgentNotRunning - The VM agent is not installed or in running state.

             * 400 SqlExtNotInstalled - Sql Iaas Extension is not installed on Server.

             * 400 PAYGNotSupportedForNonGalleryVM - License type PAYG is invalid for this Server as this was not created from Azure marketplace image.

             * 400 SqlVersionMismatchWithGroup - SQL version mismatch with SQL Server registration.

             * 400 VmOSVersionMismatchWithGroup - OS version mismatch with group.

             * 400 AutoBackupEncryptionPasswordNotSpecified - Password not provided when enabling encryption as auto backup setting.

             * 400 BackupScheduleTypeNotSet - Backup schedule type needs to be set.

             * 400 BackupStorageCredentialsNotSpecified - Backup storage credentials are not specified.

             * 400 KeyVaultCredentialsNotSpecified - Key vault credentials not specified.

             * 400 SqlCredentialsNotSpecified - SQL Server credentials are not specified.

             * 400 IncompleteAutoPatchingSettings - Incomplete auto patching settings specified.

             * 400 IncompleteAutoBackupSettings - Incomplete auto backup settings specified.

             * 400 IncompleteSqlStorageSettings - Incomplete SQL storage settings specified.

             * 400 InvalidParameterValue - An invalid value was given to parameter.

             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.

             * 400 RPGenericUser - User Failure when calling other Resource Provider.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 ArgumentNotInRange - Argument '{0}' not in range.

             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward

             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.

             * 403 AccessDenied - Access denied.

             * 404 SubscriptionDoesNotHaveTINAGroupInResourceGroup - Subscription does not have SQL Server registration in resource group.

             * 404 SubscriptionDoesNotHaveTINAInResourceGroup - Subscription does not have SQL Server Instance in resource group.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 404 OperationIdNotFound - Operation id could not be found.

             * 404 OperationTypeNotFound - Operation Type not found.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SqlExtensionNotInstalled - SQL extension not installed.

             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 500 RPGenericSystem - System Failure when calling other Resource Provider.

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.
      tags:
        - SqlServers
    get:
      description: Gets a SQL Server.
      operationId: SqlServers_Get
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - description: Name of the SQL Server registration.
          in: path
          name: sqlServerRegistrationName
          required: true
          schema:
            type: string
          examples:
            Gets a SQL Server.:
              value: testsqlregistration
        - description: Name of the SQL Server.
          in: path
          name: sqlServerName
          required: true
          schema:
            type: string
          examples:
            Gets a SQL Server.:
              value: testsqlserver
        - description: The child resources to include in the response.
          in: query
          name: $expand
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: Successfully retrieved the SQL Server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SqlServer"
              examples:
                Gets a SQL Server.:
                  $ref: "#/components/examples/Gets_a_SQL_Server."
        default:
          description: >-
            *** Error Responses: ***

             * 400 InvalidParameterValue - An invalid value was given to parameter.

             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.

             * 400 RPGenericUser - User Failure when calling other Resource Provider.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 ArgumentNotInRange - Argument '{0}' not in range.

             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward

             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.

             * 403 AccessDenied - Access denied.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 404 OperationIdNotFound - Operation id could not be found.

             * 404 OperationTypeNotFound - Operation Type not found.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SqlExtensionNotInstalled - SQL extension not installed.

             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 500 RPGenericSystem - System Failure when calling other Resource Provider.

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.
      tags:
        - SqlServers
    put:
      description: Creates or updates a SQL Server.
      operationId: SqlServers_CreateOrUpdate
      parameters:
        - $ref: "#/components/parameters/ResourceGroupParameter"
        - description: Name of the SQL Server registration.
          in: path
          name: sqlServerRegistrationName
          required: true
          schema:
            type: string
          examples:
            Creates or updates a SQL Server in a Registration group.:
              value: testsqlregistration
        - description: Name of the SQL Server.
          in: path
          name: sqlServerName
          required: true
          schema:
            type: string
          examples:
            Creates or updates a SQL Server in a Registration group.:
              value: testsqlserver
        - $ref: "#/components/parameters/SubscriptionIdParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SqlServer"
        description: The SQL Server to be created or updated.
        required: true
      responses:
        "200":
          description: Successfully updated the SQL Server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SqlServer"
              examples:
                Creates or updates a SQL Server in a Registration group.:
                  $ref: "#/components/examples/Creates_or_updates_a_SQL_Server_in_a\
                    _Registration_group."
        "201":
          description: Successfully created the SQL Server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SqlServer"
              examples:
                Creates or updates a SQL Server in a Registration group.:
                  $ref: "#/components/examples/Creates_or_updates_a_SQL_Server_in_a\
                    _Registration_group."
        default:
          description: >-
            *** Error Responses: ***

             * 400 InvalidVmResourceIdChange - Server resource id property cannot be updated.

             * 400 TinaAlreadyIncludedInGroup - SQL Server cannot be moved from one group to another in same operation.

             * 400 TinaCannotRemoveFromGroup - SQL Server cannot be removed from group.

             * 400 VmLocationMismatch - VM location does not match that of SQL Server.

             * 400 SqlSkuMismatchWithGroup - SQL sku set on the SQL Server registration does not match that of the SQL Server.

             * 400 VmInsufficientPermission - Insufficient permission to Vm.

             * 400 SingleNicOnVmAllowed - Only Single NIC Servers are allowed.

             * 400 InvalidTinaGroupResourceIdParameterValue - SQL Server registration resource id is not in correct format.

             * 400 MismatchVmGroupSubscription - Subscription id for SQL Server and SQL Server registration are different.

             * 400 IncompleteDomainCredentialsProperty - Incomplete input provided for domain credentials property.

             * 400 BYOLChangeToPAYGNotSupported - The conversion from AHUB to PAYG is not supported for BYOL images

             * 400 InvalidVmResourceIdParameterValue - Provided Server resource id is not valid.

             * 400 MismatchInTinaAndVmResourceIdSubscription - Mismatch in subscription id for SQL Server and Server resource id property.

             * 400 MismatchTinaAndVmName - SQL Server name is not same as the Server name provided on ServerResourceId property.

             * 400 MismatchTinaAndVmRgName - SQL Server resource group name is not same as the Server resource group name provided on ServerResourceId property.

             * 400 NotSupportedTinaOSVersion - Server OS type is not Windows. Only Windows OS versions are supported

             * 400 VmNotRunning - The VM is not in running state.

             * 400 VmAgentNotRunning - The VM agent is not installed or in running state.

             * 400 SqlExtNotInstalled - Sql Iaas Extension is not installed on Server.

             * 400 PAYGNotSupportedForNonGalleryVM - License type PAYG is invalid for this Server as this was not created from Azure marketplace image.

             * 400 SqlVersionMismatchWithGroup - SQL version mismatch with SQL Server registration.

             * 400 VmOSVersionMismatchWithGroup - OS version mismatch with group.

             * 400 AutoBackupEncryptionPasswordNotSpecified - Password not provided when enabling encryption as auto backup setting.

             * 400 BackupScheduleTypeNotSet - Backup schedule type needs to be set.

             * 400 BackupStorageCredentialsNotSpecified - Backup storage credentials are not specified.

             * 400 KeyVaultCredentialsNotSpecified - Key vault credentials not specified.

             * 400 SqlCredentialsNotSpecified - SQL Server credentials are not specified.

             * 400 IncompleteAutoPatchingSettings - Incomplete auto patching settings specified.

             * 400 IncompleteAutoBackupSettings - Incomplete auto backup settings specified.

             * 400 IncompleteSqlStorageSettings - Incomplete SQL storage settings specified.

             * 400 InvalidParameterValue - An invalid value was given to parameter.

             * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.

             * 400 RPGenericUser - User Failure when calling other Resource Provider.

             * 400 InvalidArgument - Invalid argument '{0}'.

             * 400 ArgumentNotInRange - Argument '{0}' not in range.

             * 400 ResourceNotProvisioned - As the resource: {0} is not in a provisioned state, the request cannot be proceeded forward

             * 400 InvalidRgResourceId - Invalid Resourcegroup resource id specified.

             * 403 AccessDenied - Access denied.

             * 404 SubscriptionDoesNotHaveTINAGroupInResourceGroup - Subscription does not have SQL Server registration in resource group.

             * 404 SubscriptionDoesNotHaveTINAInResourceGroup - Subscription does not have SQL Server Instance in resource group.

             * 404 ResourceNotFound - The requested resource was not found.

             * 404 SubscriptionDoesNotExist - Subscription id does not exist.

             * 404 ResourceDoesNotExist - Resource does not exist.

             * 404 OperationIdNotFound - Operation id could not be found.

             * 404 OperationTypeNotFound - Operation Type not found.

             * 409 ResourceAlreadyExists - Resource already exists.

             * 409 SqlExtensionNotInstalled - SQL extension not installed.

             * 409 MissingMoveResources - Cannot move resources(s) because some resources are missing in the request.

             * 409 OperationInProgress - Operation in progress on resource already.

             * 409 OperationCanceled - Operation Cancelled.

             * 500 RPGenericSystem - System Failure when calling other Resource Provider.

             * 500 UnExpectedErrorOccurred - Unexpected error occurred.

             * 500 OperationTimeout - Operation timed out.
      tags:
        - SqlServers
servers:
  - url: https://management.azure.com
components:
  examples:
    Lists_all_of_the_available_SQL_Server_Registration_API_operations.:
      value:
        value:
          - display:
              description: Retrives details of SQL Server Registration
              operation: Get SQL Server Registration details
              resource: SQL Server Registration
            name: Microsoft.AzureData/sqlServerRegistrations/read
          - display:
              description: Create a new or change properties of existing SQL Server
                Registration
              operation: Create a new or update existing SQL Server Registration
              resource: SQL Server Registration
            name: Microsoft.AzureData/sqlServerRegistrations/write
          - display:
              description: Delete existing SQL Server Registration
              operation: Delete existing SQL Server Registration
              resource: SQL Server Registration
            name: Microsoft.AzureData/sqlServerRegistrations/delete
          - display:
              resource: Available REST operations
            name: Microsoft.AzureData/operations/read
          - display:
              description: Retrieves details of SQL Server
              operation: Get SQL Server Instance details
            name: Microsoft.AzureData/sqlServers/read
          - display:
              description: Create a new or change properties of existing SQL Server
              operation: Create new or update existing SQL Server
            name: Microsoft.AzureData/sqlServers/write
          - display:
              description: Delete exisiting SQL Server
              operation: Delete exisiting SQL Server
            name: Microsoft.AzureData/sqlServers/delete
    Gets_all_SQL_Server_registrations_in_a_subscription.:
      value:
        value:
          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration1
            location: northeurope
            name: testsqlregistration1
            properties: {}
            tags:
              mytag: myval
            type: Microsoft.AzureData/SqlServerRegistrations
          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration2
            location: northeurope
            name: testsqlregistration2
            properties: {}
            tags:
              mytag: myval
            type: Microsoft.AzureData/SqlServerRegistrations
    Gets_all_SQL_Server_registrations_in_a_resource_group.:
      value:
        value:
          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration1
            location: northeurope
            name: testsqlregistration1
            properties: {}
            tags:
              mytag: myval
            type: Microsoft.AzureData/SqlServerRegistrations
          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration2
            location: northeurope
            name: testsqlregistration2
            properties: {}
            tags:
              mytag: myval
            type: Microsoft.AzureData/SqlServerRegistrations
    Gets_a_SQL_Server_registration.:
      value:
        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration
        location: northeurope
        name: testsqlregistration
        properties: {}
        tags:
          mytag: myval
        type: Microsoft.AzureData/SqlServerRegistrations
    Updates_a_SQL_Server_Registration_tags.:
      value:
        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration
        location: northeurope
        name: testsqlregistration
        properties: {}
        tags:
          mytag: myval
        type: Microsoft.AzureData/SqlServerRegistrations
    Creates_or_updates_a_SQL_Server_registration.:
      value:
        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration
        location: northeurope
        name: testsqlregistration
        properties: {}
        tags:
          mytag: myval
        type: Microsoft.AzureData/SqlServerRegistrations
    Gets_all_SQL_Servers_in_a_SQL_Server_Registration.:
      value:
        value:
          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration/sqlServers/testsqlserver1
            name: testsqlserver1
            properties:
              cores: 8
              edition: Latin
              propertyBag: ""
              registrationID: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration
              version: "2008"
            type: Microsoft.AzureData/SqlServerRegistrations/SqlServers
          - id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration/sqlServers/testsqlserver2
            name: testsqlserver2
            properties:
              cores: 16
              edition: Latin
              propertyBag: ""
              registrationID: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration
              version: "2008"
            type: Microsoft.AzureData/SqlServerRegistrations/SqlServers
    Gets_a_SQL_Server.:
      value:
        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration/sqlServers/testsqlserver
        name: testsqlserver
        properties:
          cores: 8
          edition: Latin
          propertyBag: ""
          registrationID: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration
          version: "2008"
        type: Microsoft.AzureData/SqlServerRegistrations/SqlServers
    Creates_or_updates_a_SQL_Server_in_a_Registration_group.:
      value:
        id: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration/sqlServers/testsqlserver
        name: testsqlserver
        properties:
          cores: 8
          edition: Latin
          propertyBag: ""
          registrationID: /subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/testrg/providers/Microsoft.AzureData/SqlServerRegistrations/testsqlregistration
          version: "2008"
        type: Microsoft.AzureData/SqlServerRegistrations/SqlServers
  parameters:
    ApiVersionParameter:
      description: API version to use for the request.
      in: query
      name: api-version
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
      examples:
        Lists all of the available SQL Server Registration API operations.:
          value: 2017-03-01-preview
        Gets all SQL Server registrations in a subscription.:
          value: 2017-03-01-preview
        Gets all SQL Server registrations in a resource group.:
          value: 2017-03-01-preview
        Deletes a SQL Server registration.:
          value: 2017-03-01-preview
        Gets a SQL Server registration.:
          value: 2017-03-01-preview
        Updates a SQL Server Registration tags.:
          value: 2017-03-01-preview
        Creates or updates a SQL Server registration.:
          value: 2017-03-01-preview
        Gets all SQL Servers in a SQL Server Registration.:
          value: 2017-03-01-preview
        Deletes a SQL Server.:
          value: 2017-03-01-preview
        Gets a SQL Server.:
          value: 2017-03-01-preview
        Creates or updates a SQL Server in a Registration group.:
          value: 2017-03-01-preview
    ResourceGroupParameter:
      description: Name of the resource group that contains the resource. You can obtain
        this value from the Azure Resource Manager API or the portal.
      in: path
      name: resourceGroupName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        Gets all SQL Server registrations in a resource group.:
          value: testrg
        Deletes a SQL Server registration.:
          value: testrg
        Gets a SQL Server registration.:
          value: testrg
        Updates a SQL Server Registration tags.:
          value: testrg
        Creates or updates a SQL Server registration.:
          value: testrg
        Gets all SQL Servers in a SQL Server Registration.:
          value: testrg
        Deletes a SQL Server.:
          value: testrg
        Gets a SQL Server.:
          value: testrg
        Creates or updates a SQL Server in a Registration group.:
          value: testrg
    SqlServerNameParameter:
      description: Name of the Sql Server.
      in: path
      name: SqlServerName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SqlServerRegistrationNameParameter:
      description: Name of the Sql Server registration.
      in: path
      name: SqlServerRegistrationNameParameter
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
    SubscriptionIdParameter:
      description: Subscription ID that identifies an Azure subscription.
      in: path
      name: subscriptionId
      required: true
      x-ms-parameter-location: client
      schema:
        type: string
      examples:
        Gets all SQL Server registrations in a subscription.:
          value: 00000000-1111-2222-3333-444444444444
        Gets all SQL Server registrations in a resource group.:
          value: 00000000-1111-2222-3333-444444444444
        Deletes a SQL Server registration.:
          value: 00000000-1111-2222-3333-444444444444
        Gets a SQL Server registration.:
          value: 00000000-1111-2222-3333-444444444444
        Updates a SQL Server Registration tags.:
          value: 00000000-1111-2222-3333-444444444444
        Creates or updates a SQL Server registration.:
          value: 00000000-1111-2222-3333-444444444444
        Gets all SQL Servers in a SQL Server Registration.:
          value: 00000000-1111-2222-3333-444444444444
        Deletes a SQL Server.:
          value: 00000000-1111-2222-3333-444444444444
        Gets a SQL Server.:
          value: 00000000-1111-2222-3333-444444444444
        Creates or updates a SQL Server in a Registration group.:
          value: 00000000-1111-2222-3333-444444444444
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    Operation:
      description: SQL REST API operation definition.
      properties:
        display:
          $ref: "#/components/schemas/OperationDisplay"
        name:
          description: The name of the operation being performed on this particular object.
          readOnly: true
          type: string
        origin:
          description: The intended executor of the operation.
          enum:
            - user
            - system
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: OperationOrigin
        properties:
          additionalProperties:
            type: object
          description: Additional descriptions for the operation.
          readOnly: true
          type: object
          x-ms-client-flatten: false
      type: object
    OperationDisplay:
      description: Display metadata associated with the operation.
      properties:
        description:
          description: The localized friendly description for the operation.
          readOnly: true
          type: string
        operation:
          description: The localized friendly name for the operation.
          readOnly: true
          type: string
        provider:
          description: The localized friendly form of the resource provider name.
          readOnly: true
          type: string
        resource:
          description: The localized friendly form of the resource type related to this
            action/operation.
          readOnly: true
          type: string
      type: object
    OperationListResult:
      description: Result of the request to list SQL operations.
      properties:
        nextLink:
          description: Link to retrieve next page of results.
          readOnly: true
          type: string
        value:
          description: Array of results.
          items:
            $ref: "#/components/schemas/Operation"
          readOnly: true
          type: array
      type: object
    ProxyResource:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: ARM proxy resource.
      properties: {}
      type: object
    Resource:
      description: ARM resource.
      properties:
        id:
          description: Resource ID.
          readOnly: true
          type: string
        name:
          description: Resource name.
          readOnly: true
          type: string
        type:
          description: Resource type.
          readOnly: true
          type: string
      type: object
      x-ms-azure-resource: true
    SqlServer:
      allOf:
        - $ref: "#/components/schemas/ProxyResource"
      description: A SQL server.
      properties:
        properties:
          $ref: "#/components/schemas/SqlServerProperties"
      type: object
    SqlServerListResult:
      description: A list of SQL servers.
      properties:
        nextLink:
          description: Link to retrieve next page of results.
          readOnly: true
          type: string
        value:
          description: Array of results.
          items:
            $ref: "#/components/schemas/SqlServer"
          readOnly: true
          type: array
      type: object
    SqlServerProperties:
      description: The SQL server properties.
      properties:
        cores:
          description: Cores of the Sql Server.
          format: int32
          type: integer
          x-ms-mutability:
            - update
        edition:
          description: Sql Server Edition.
          type: string
        propertyBag:
          description: Sql Server Json Property Bag.
          type: string
        registrationID:
          description: ID for Parent Sql Server Registration.
          type: string
        version:
          description: Version of the Sql Server.
          type: string
      type: object
    SqlServerRegistration:
      allOf:
        - $ref: "#/components/schemas/TrackedResource"
      description: A SQL server registration.
      properties:
        properties:
          $ref: "#/components/schemas/SqlServerRegistrationProperties"
      required:
        - location
      type: object
    SqlServerRegistrationListResult:
      description: Server.
      properties:
        nextLink:
          description: Link to retrieve next page of results.
          readOnly: true
          type: string
        value:
          description: Array of results.
          items:
            $ref: "#/components/schemas/SqlServerRegistration"
          readOnly: true
          type: array
      type: object
    SqlServerRegistrationProperties:
      description: The SQL server Registration properties.
      properties:
        propertyBag:
          description: Optional Properties as JSON string
          type: string
        resourceGroup:
          description: Resource Group Name
          type: string
        subscriptionId:
          description: Subscription Id
          format: uuid
          type: string
      type: object
    SqlServerRegistrationUpdate:
      description: An update to a SQL Server Registration.
      properties:
        tags:
          additionalProperties:
            type: string
          description: Resource tags.
          type: object
      type: object
    TrackedResource:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: ARM tracked top level resource.
      properties:
        location:
          description: Resource location.
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          additionalProperties:
            type: string
          description: Resource tags.
          type: object
      required:
        - location
      type: object
