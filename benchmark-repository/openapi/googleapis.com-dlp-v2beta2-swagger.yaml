openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: Provides methods for detection, risk analysis, and de-identification of
    privacy-sensitive fragments in text, images, and Google Cloud Platform
    storage repositories.
  title: Cloud Data Loss Prevention (DLP)
  version: v2beta2
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.6.2
      format: google
      url: https://dlp.googleapis.com/$discovery/rest?version=v2beta2
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: dlp
externalDocs:
  url: https://cloud.google.com/dlp/docs/
tags:
  - name: infoTypes
  - name: organizations
  - name: projects
paths:
  /v2beta2/infoTypes:
    get:
      description: Returns sensitive information types DLP supports.
      operationId: dlp.infoTypes.list
      parameters:
        - description: >-
            Optional filter to only return infoTypes supported by certain parts
            of the

            API. Defaults to supported_by=INSPECT.
          in: query
          name: filter
          schema:
            type: string
        - description: |-
            Optional BCP-47 language code for localized infoType friendly
            names. If omitted, or if localized strings are not available,
            en-US strings will be returned.
          in: query
          name: languageCode
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2beta2ListInfoTypesRes\
                  ponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - infoTypes
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v2beta2/{name}":
    delete:
      description: Deletes a job trigger.
      operationId: dlp.projects.jobTriggers.delete
      parameters:
        - description: |-
            Resource name of the project and the triggeredJob, for example
            `projects/dlp-test-project/jobTriggers/53234423`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets a job trigger.
      operationId: dlp.projects.jobTriggers.get
      parameters:
        - description: |-
            Resource name of the project and the triggeredJob, for example
            `projects/dlp-test-project/jobTriggers/53234423`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2beta2JobTrigger"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    patch:
      description: Updates a job trigger.
      operationId: dlp.projects.jobTriggers.patch
      parameters:
        - description: |-
            Resource name of the project and the triggeredJob, for example
            `projects/dlp-test-project/jobTriggers/53234423`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GooglePrivacyDlpV2beta2UpdateJobTriggerRe\
                quest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2beta2JobTrigger"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2beta2/{name}:cancel":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Starts asynchronous cancellation on a long-running DlpJob.  The server
        makes a best effort to cancel the DlpJob, but success is not
        guaranteed.
      operationId: dlp.projects.dlpJobs.cancel
      parameters:
        - description: The name of the DlpJob resource to be cancelled.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GooglePrivacyDlpV2beta2CancelDlpJobRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2beta2/{parent}/content:deidentify":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        De-identifies potentially sensitive info from a ContentItem.
        This method has limits on input size and output size.
        [How-to guide](/dlp/docs/deidentify-sensitive-data)
      operationId: dlp.projects.content.deidentify
      parameters:
        - description: The parent resource name, for example projects/my-project-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GooglePrivacyDlpV2beta2DeidentifyContentR\
                equest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2beta2DeidentifyConten\
                  tResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2beta2/{parent}/content:inspect":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Finds potentially sensitive info in content.
        This method has limits on input size, processing time, and output size.
        [How-to guide for text](/dlp/docs/inspecting-text), [How-to guide for
        images](/dlp/docs/inspecting-images)
      operationId: dlp.projects.content.inspect
      parameters:
        - description: The parent resource name, for example projects/my-project-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InspectContentRequ\
                est"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InspectContentRe\
                  sponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2beta2/{parent}/content:reidentify":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Re-identify content that has been de-identified.
      operationId: dlp.projects.content.reidentify
      parameters:
        - description: The parent resource name.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GooglePrivacyDlpV2beta2ReidentifyContentR\
                equest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2beta2ReidentifyConten\
                  tResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2beta2/{parent}/dataSource:analyze":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Schedules a job to compute risk analysis metrics over content in a
        Google

        Cloud Platform repository. [How-to guide](/dlp/docs/compute-risk-analysis)
      operationId: dlp.projects.dataSource.analyze
      parameters:
        - description: The parent resource name, for example projects/my-project-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GooglePrivacyDlpV2beta2AnalyzeDataSourceR\
                iskRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2beta2DlpJob"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2beta2/{parent}/dataSource:inspect":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Schedules a job scanning content in a Google Cloud Platform data
        repository. [How-to guide](/dlp/docs/inspecting-storage)
      operationId: dlp.projects.dataSource.inspect
      parameters:
        - description: The parent resource name, for example projects/my-project-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InspectDataSourceR\
                equest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2beta2DlpJob"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2beta2/{parent}/deidentifyTemplates":
    get:
      description: Lists inspect templates.
      operationId: dlp.projects.deidentifyTemplates.list
      parameters:
        - description: >-
            Optional size of the page, can be limited by server. If zero server
            returns

            a page of max size 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            Optional page token to continue retrieval. Comes from previous call
            to `ListDeidentifyTemplates`.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            The parent resource name, for example projects/my-project-id or
            organizations/my-org-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2beta2ListDeidentifyTe\
                  mplatesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Creates an Deidentify template for re-using frequently used
        configuration

        for Deidentifying content, images, and storage.
      operationId: dlp.projects.deidentifyTemplates.create
      parameters:
        - description: |-
            The parent resource name, for example projects/my-project-id or
            organizations/my-org-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GooglePrivacyDlpV2beta2CreateDeidentifyTe\
                mplateRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2beta2DeidentifyTempla\
                  te"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2beta2/{parent}/dlpJobs":
    get:
      description: Lists DlpJobs that match the specified filter in the request.
      operationId: dlp.projects.dlpJobs.list
      parameters:
        - description: >-
            Optional. Allows filtering.


            Supported syntax:


            * Filter expressions are made up of one or more restrictions.

            * Restrictions can be combined by `AND` or `OR` logical operators. A

            sequence of restrictions implicitly uses `AND`.

            * A restriction has the form of `<field> <operator> <value>`.

            * Supported fields/values for inspect jobs:
                - `state` - PENDING|RUNNING|CANCELED|FINISHED|FAILED
                - `inspected_storage` - DATASTORE|CLOUD_STORAGE|BIGQUERY
                - `trigger_name` - The resource name of the trigger that created job.
            * Supported fields for risk analysis jobs:
                - `state` - RUNNING|CANCELED|FINISHED|FAILED
            * The operator must be `=` or `!=`.


            Examples:


            * inspected_storage = cloud_storage AND state = done

            * inspected_storage = cloud_storage OR inspected_storage = bigquery

            * inspected_storage = cloud_storage AND (state = done OR state = canceled)


            The length of this field should be no more than 500 characters.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The parent resource name, for example projects/my-project-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: The type of job. Defaults to `DlpJobType.INSPECT`
          in: query
          name: type
          schema:
            type: string
            enum:
              - DLP_JOB_TYPE_UNSPECIFIED
              - INSPECT_JOB
              - RISK_ANALYSIS_JOB
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2beta2ListDlpJobsRespo\
                  nse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v2beta2/{parent}/image:redact":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Redacts potentially sensitive info from an image.
        This method has limits on input size, processing time, and output size.
        [How-to guide](/dlp/docs/redacting-sensitive-data-images)
      operationId: dlp.projects.image.redact
      parameters:
        - description: The parent resource name, for example projects/my-project-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GooglePrivacyDlpV2beta2RedactImageRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2beta2RedactImageRespo\
                  nse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2beta2/{parent}/inspectTemplates":
    get:
      description: Lists inspect templates.
      operationId: dlp.projects.inspectTemplates.list
      parameters:
        - description: >-
            Optional size of the page, can be limited by server. If zero server
            returns

            a page of max size 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            Optional page token to continue retrieval. Comes from previous call
            to `ListInspectTemplates`.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            The parent resource name, for example projects/my-project-id or
            organizations/my-org-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2beta2ListInspectTempl\
                  atesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Creates an inspect template for re-using frequently used configuration
        for inspecting content, images, and storage.
      operationId: dlp.projects.inspectTemplates.create
      parameters:
        - description: |-
            The parent resource name, for example projects/my-project-id or
            organizations/my-org-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GooglePrivacyDlpV2beta2CreateInspectTempl\
                ateRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InspectTemplate"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2beta2/{parent}/jobTriggers":
    get:
      description: Lists job triggers.
      operationId: dlp.projects.jobTriggers.list
      parameters:
        - description: >-
            Optional comma separated list of triggeredJob fields to order by,

            followed by 'asc/desc' postfix, i.e.

            `"create_time asc,name desc,schedule_mode asc"`. This list is

            case-insensitive.


            Example: `"name asc,schedule_mode desc, status desc"`


            Supported filters keys and values are:


            - `create_time`: corresponds to time the triggeredJob was created.

            - `update_time`: corresponds to time the triggeredJob was last updated.

            - `name`: corresponds to JobTrigger's display name.

            - `status`: corresponds to the triggeredJob status.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional size of the page, can be limited by a server.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            Optional page token to continue retrieval. Comes from previous call
            to ListJobTriggers. `order_by` and `filter` should not change for
            subsequent calls, but can be omitted if token is specified.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The parent resource name, for example projects/my-project-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2beta2ListJobTriggersR\
                  esponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Creates a job to run DLP actions such as scanning storage for sensitive
        information on a set schedule.
      operationId: dlp.projects.jobTriggers.create
      parameters:
        - description: The parent resource name, for example projects/my-project-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GooglePrivacyDlpV2beta2CreateJobTriggerRe\
                quest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2beta2JobTrigger"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
servers:
  - url: https://dlp.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    bearer_token:
      description: OAuth bearer token.
      in: query
      name: bearer_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    pp:
      description: Pretty-print response.
      in: query
      name: pp
      schema:
        type: boolean
        default: true
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
  schemas:
    GooglePrivacyDlpV2beta1AuxiliaryTable:
      description: |-
        An auxiliary table contains statistical information on the relative
        frequency of different quasi-identifiers values. It has one or several
        quasi-identifiers columns, and one column that indicates the relative
        frequency of each quasi-identifier tuple.
        If a tuple is present in the data but not in the auxiliary table, the
        corresponding relative frequency is assumed to be zero (and thus, the
        tuple is highly reidentifiable).
      properties:
        quasiIds:
          description: Quasi-identifier columns. [required]
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta1QuasiIdField"
          type: array
        relativeFrequency:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1FieldId"
        table:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1BigQueryTable"
      type: object
    GooglePrivacyDlpV2beta1BigQueryOptions:
      description: Options defining BigQuery table and row identifiers.
      properties:
        identifyingFields:
          description: >-
            References to fields uniquely identifying rows within the table.

            Nested fields in the format, like `person.birthdate.year`, are allowed.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta1FieldId"
          type: array
        tableReference:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1BigQueryTable"
      type: object
    GooglePrivacyDlpV2beta1BigQueryTable:
      description: >-
        Message defining the location of a BigQuery table. A table is uniquely

        identified  by its project_id, dataset_id, and table_name. Within a query

        a table is often referenced with a string in the format of:

        `<project_id>:<dataset_id>.<table_id>` or

        `<project_id>.<dataset_id>.<table_id>`.
      properties:
        datasetId:
          description: Dataset ID of the table.
          type: string
        projectId:
          description: >-
            The Google Cloud Platform project ID of the project containing the
            table.

            If omitted, project ID is inferred from the API call.
          type: string
        tableId:
          description: Name of the table.
          type: string
      type: object
    GooglePrivacyDlpV2beta1CategoricalStatsConfig:
      description: |-
        Compute numerical stats over an individual column, including
        number of distinct values and value count distribution.
      properties:
        field:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1FieldId"
      type: object
    GooglePrivacyDlpV2beta1CategoricalStatsHistogramBucket:
      description: Histogram bucket of value frequencies in the column.
      properties:
        bucketSize:
          description: Total number of records in this bucket.
          format: int64
          type: string
        bucketValues:
          description: |-
            Sample of value frequencies in this bucket. The total number of
            values returned per bucket is capped at 20.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta1ValueFrequency"
          type: array
        valueFrequencyLowerBound:
          description: Lower bound on the value frequency of the values in this bucket.
          format: int64
          type: string
        valueFrequencyUpperBound:
          description: Upper bound on the value frequency of the values in this bucket.
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2beta1CategoricalStatsResult:
      description: Result of the categorical stats computation.
      properties:
        valueFrequencyHistogramBuckets:
          description: Histogram of value frequencies in the column.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta1CategoricalStatsHist\
              ogramBucket"
          type: array
      type: object
    GooglePrivacyDlpV2beta1CloudStorageOptions:
      description: |-
        Options defining a file or a set of files (path ending with *) within
        a Google Cloud Storage bucket.
      properties:
        fileSet:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1FileSet"
      type: object
    GooglePrivacyDlpV2beta1CloudStoragePath:
      description: A location in Cloud Storage.
      properties:
        path:
          description: The url, in the format of `gs://bucket/<path>`.
          type: string
      type: object
    GooglePrivacyDlpV2beta1CustomInfoType:
      description: >-
        Custom information type provided by the user. Used to find
        domain-specific

        sensitive information configurable to the data in question.
      properties:
        dictionary:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1Dictionary"
        infoType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1InfoType"
        surrogateType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1SurrogateType"
      type: object
    GooglePrivacyDlpV2beta1DatastoreOptions:
      description: Options defining a data set within Google Cloud Datastore.
      properties:
        kind:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1KindExpression"
        partitionId:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1PartitionId"
        projection:
          description: >-
            Properties to scan. If none are specified, all properties will be
            scanned

            by default.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta1Projection"
          type: array
      type: object
    GooglePrivacyDlpV2beta1Dictionary:
      description: >-
        Custom information type based on a dictionary of words or phrases. This
        can

        be used to match sensitive information specific to the data, such as a list

        of employee IDs or job titles.


        Dictionary words are case-insensitive and all characters other than letters

        and digits in the unicode [Basic Multilingual

        Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane)

        will be replaced with whitespace when scanning for matches, so the

        dictionary phrase "Sam Johnson" will match all three phrases "sam johnson",

        "Sam, Johnson", and "Sam (Johnson)". Additionally, the characters

        surrounding any match must be of a different type than the adjacent

        characters within the word, so letters must be next to non-letters and

        digits next to non-digits. For example, the dictionary word "jen" will

        match the first three letters of the text "jen123" but will return no

        matches for "jennifer".


        Dictionary words containing a large number of characters that are not

        letters or digits may result in unexpected findings because such characters

        are treated as whitespace.
      properties:
        wordList:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1WordList"
      type: object
    GooglePrivacyDlpV2beta1EntityId:
      description: >-
        An entity in a dataset is a field or set of fields that correspond to a

        single person. For example, in medical records the `EntityId` might be

        a patient identifier, or for financial records it might be an account

        identifier. This message is used when generalizations or analysis must be

        consistent across multiple rows pertaining to the same entity.
      properties:
        field:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1FieldId"
      type: object
    GooglePrivacyDlpV2beta1FieldId:
      description: General identifier of a data field in a storage service.
      properties:
        columnName:
          description: Name describing the field.
          type: string
      type: object
    GooglePrivacyDlpV2beta1FileSet:
      description: Set of files to scan.
      properties:
        url:
          description: >-
            The url, in the format `gs://<bucket>/<path>`. Trailing wildcard in
            the

            path is allowed.
          type: string
      type: object
    GooglePrivacyDlpV2beta1InfoType:
      description: Type of information detected by the API.
      properties:
        name:
          description: Name of the information type.
          type: string
      type: object
    GooglePrivacyDlpV2beta1InfoTypeLimit:
      description: >-
        Max findings configuration per info type, per content item or long
        running

        operation.
      properties:
        infoType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1InfoType"
        maxFindings:
          description: Max findings limit for the given infoType.
          format: int32
          type: integer
      type: object
    GooglePrivacyDlpV2beta1InfoTypeStatistics:
      description: Statistics regarding a specific InfoType.
      properties:
        count:
          description: Number of findings for this info type.
          format: int64
          type: string
        infoType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1InfoType"
      type: object
    GooglePrivacyDlpV2beta1InspectConfig:
      description: >-
        Configuration description of the scanning process.

        When used with redactContent only info_types and min_likelihood are currently

        used.
      properties:
        customInfoTypes:
          description: Custom info types provided by the user.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta1CustomInfoType"
          type: array
        excludeTypes:
          description: When true, excludes type information of the findings.
          type: boolean
        includeQuote:
          description: >-
            When true, a contextual quote from the data that triggered a finding
            is

            included in the response; see Finding.quote.
          type: boolean
        infoTypeLimits:
          description: Configuration of findings limit given for specified info types.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta1InfoTypeLimit"
          type: array
        infoTypes:
          description: |-
            Restricts what info_types to look for. The values must correspond to
            InfoType values returned by ListInfoTypes or found in documentation.
            Empty info_types runs all enabled detectors.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta1InfoType"
          type: array
        maxFindings:
          description: Limits the number of findings per content item or long running
            operation.
          format: int32
          type: integer
        minLikelihood:
          description: Only returns findings equal or above this threshold.
          enum:
            - LIKELIHOOD_UNSPECIFIED
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
      type: object
    GooglePrivacyDlpV2beta1InspectOperationMetadata:
      description: Metadata returned within GetOperation for an inspect request.
      properties:
        createTime:
          description: The time which this request was started.
          format: google-datetime
          type: string
        infoTypeStats:
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta1InfoTypeStatistics"
          type: array
        processedBytes:
          description: Total size in bytes that were processed.
          format: int64
          type: string
        requestInspectConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1InspectConfig"
        requestOutputConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1OutputStorageConfig"
        requestStorageConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1StorageConfig"
        totalEstimatedBytes:
          description: Estimate of the number of bytes to process.
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2beta1InspectOperationResult:
      description: The operational data.
      properties:
        name:
          description: >-
            The server-assigned name, which is only unique within the same
            service that

            originally returns it. If you use the default HTTP mapping, the

            `name` should have the format of `inspect/results/{id}`.
          type: string
      type: object
    GooglePrivacyDlpV2beta1KAnonymityConfig:
      description: k-anonymity metric, used for analysis of reidentification risk.
      properties:
        entityId:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1EntityId"
        quasiIds:
          description: >-
            Set of fields to compute k-anonymity over. When multiple fields are

            specified, they are considered a single composite key. Structs and

            repeated data types are not supported; however, nested fields are

            supported so long as they are not structs themselves or nested within

            a repeated field.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta1FieldId"
          type: array
      type: object
    GooglePrivacyDlpV2beta1KAnonymityEquivalenceClass:
      description: The set of columns' values that share the same k-anonymity value.
      properties:
        equivalenceClassSize:
          description: |-
            Size of the equivalence class, for example number of rows with the
            above set of values.
          format: int64
          type: string
        quasiIdsValues:
          description: |-
            Set of values defining the equivalence class. One value per
            quasi-identifier column in the original KAnonymity metric message.
            The order is always the same as the original request.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta1Value"
          type: array
      type: object
    GooglePrivacyDlpV2beta1KAnonymityHistogramBucket:
      description: Histogram bucket of equivalence class sizes in the table.
      properties:
        bucketSize:
          description: Total number of records in this bucket.
          format: int64
          type: string
        bucketValues:
          description: |-
            Sample of equivalence classes in this bucket. The total number of
            classes returned per bucket is capped at 20.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta1KAnonymityEquivalenc\
              eClass"
          type: array
        equivalenceClassSizeLowerBound:
          description: Lower bound on the size of the equivalence classes in this bucket.
          format: int64
          type: string
        equivalenceClassSizeUpperBound:
          description: Upper bound on the size of the equivalence classes in this bucket.
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2beta1KAnonymityResult:
      description: Result of the k-anonymity computation.
      properties:
        equivalenceClassHistogramBuckets:
          description: Histogram of k-anonymity equivalence classes.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta1KAnonymityHistogramB\
              ucket"
          type: array
      type: object
    GooglePrivacyDlpV2beta1KMapEstimationConfig:
      description: >-
        Reidentifiability metric. This corresponds to a risk model similar to
        what

        is called "journalist risk" in the literature, except the attack dataset is

        statistically modeled instead of being perfectly known. This can be done

        using publicly available data (like the US Census), or using a custom

        statistical model (indicated as one or several BigQuery tables), or by

        extrapolating from the distribution of values in the input dataset.
      properties:
        auxiliaryTables:
          description: >-
            Several auxiliary tables can be used in the analysis. Each
            custom_tag

            used to tag a quasi-identifiers column must appear in exactly one column

            of one auxiliary table.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta1AuxiliaryTable"
          type: array
        quasiIds:
          description: >-
            Fields considered to be quasi-identifiers. No two columns can have
            the

            same tag. [required]
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta1TaggedField"
          type: array
        regionCode:
          description: >-
            ISO 3166-1 alpha-2 region code to use in the statistical modeling.

            Required if no column is tagged with a region-specific InfoType (like

            US_ZIP_5) or a region code.
          type: string
      type: object
    GooglePrivacyDlpV2beta1KMapEstimationHistogramBucket:
      description: |-
        A KMapEstimationHistogramBucket message with the following values:
          min_anonymity: 3
          max_anonymity: 5
          frequency: 42
        means that there are 42 records whose quasi-identifier values correspond
        to 3, 4 or 5 people in the overlying population. An important particular
        case is when min_anonymity = max_anonymity = 1: the frequency field then
        corresponds to the number of uniquely identifiable records.
      properties:
        bucketSize:
          description: Number of records within these anonymity bounds.
          format: int64
          type: string
        bucketValues:
          description: |-
            Sample of quasi-identifier tuple values in this bucket. The total
            number of classes returned per bucket is capped at 20.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta1KMapEstimationQuasiI\
              dValues"
          type: array
        maxAnonymity:
          description: Always greater than or equal to min_anonymity.
          format: int64
          type: string
        minAnonymity:
          description: Always positive.
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2beta1KMapEstimationQuasiIdValues:
      description: A tuple of values for the quasi-identifier columns.
      properties:
        estimatedAnonymity:
          description: The estimated anonymity for these quasi-identifier values.
          format: int64
          type: string
        quasiIdsValues:
          description: The quasi-identifier values.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta1Value"
          type: array
      type: object
    GooglePrivacyDlpV2beta1KMapEstimationResult:
      description: |-
        Result of the reidentifiability analysis. Note that these results are an
        estimation, not exact values.
      properties:
        kMapEstimationHistogram:
          description: >-
            The intervals [min_anonymity, max_anonymity] do not overlap. If a
            value

            doesn't correspond to any such interval, the associated frequency is

            zero. For example, the following records:
              {min_anonymity: 1, max_anonymity: 1, frequency: 17}
              {min_anonymity: 2, max_anonymity: 3, frequency: 42}
              {min_anonymity: 5, max_anonymity: 10, frequency: 99}
            mean that there are no record with an estimated anonymity of 4, 5, or

            larger than 10.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta1KMapEstimationHistog\
              ramBucket"
          type: array
      type: object
    GooglePrivacyDlpV2beta1KindExpression:
      description: A representation of a Datastore kind.
      properties:
        name:
          description: The name of the kind.
          type: string
      type: object
    GooglePrivacyDlpV2beta1LDiversityConfig:
      description: l-diversity metric, used for analysis of reidentification risk.
      properties:
        quasiIds:
          description: |-
            Set of quasi-identifiers indicating how equivalence classes are
            defined for the l-diversity computation. When multiple fields are
            specified, they are considered a single composite key.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta1FieldId"
          type: array
        sensitiveAttribute:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1FieldId"
      type: object
    GooglePrivacyDlpV2beta1LDiversityEquivalenceClass:
      description: The set of columns' values that share the same l-diversity value.
      properties:
        equivalenceClassSize:
          description: Size of the k-anonymity equivalence class.
          format: int64
          type: string
        numDistinctSensitiveValues:
          description: Number of distinct sensitive values in this equivalence class.
          format: int64
          type: string
        quasiIdsValues:
          description: |-
            Quasi-identifier values defining the k-anonymity equivalence
            class. The order is always the same as the original request.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta1Value"
          type: array
        topSensitiveValues:
          description: Estimated frequencies of top sensitive values.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta1ValueFrequency"
          type: array
      type: object
    GooglePrivacyDlpV2beta1LDiversityHistogramBucket:
      description: Histogram bucket of sensitive value frequencies in the table.
      properties:
        bucketSize:
          description: Total number of records in this bucket.
          format: int64
          type: string
        bucketValues:
          description: |-
            Sample of equivalence classes in this bucket. The total number of
            classes returned per bucket is capped at 20.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta1LDiversityEquivalenc\
              eClass"
          type: array
        sensitiveValueFrequencyLowerBound:
          description: |-
            Lower bound on the sensitive value frequencies of the equivalence
            classes in this bucket.
          format: int64
          type: string
        sensitiveValueFrequencyUpperBound:
          description: |-
            Upper bound on the sensitive value frequencies of the equivalence
            classes in this bucket.
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2beta1LDiversityResult:
      description: Result of the l-diversity computation.
      properties:
        sensitiveValueFrequencyHistogramBuckets:
          description: Histogram of l-diversity equivalence class sensitive value
            frequencies.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta1LDiversityHistogramB\
              ucket"
          type: array
      type: object
    GooglePrivacyDlpV2beta1NumericalStatsConfig:
      description: |-
        Compute numerical stats over an individual column, including
        min, max, and quantiles.
      properties:
        field:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1FieldId"
      type: object
    GooglePrivacyDlpV2beta1NumericalStatsResult:
      description: Result of the numerical stats computation.
      properties:
        maxValue:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1Value"
        minValue:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1Value"
        quantileValues:
          description: >-
            List of 99 values that partition the set of field values into 100
            equal

            sized buckets.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta1Value"
          type: array
      type: object
    GooglePrivacyDlpV2beta1OutputStorageConfig:
      description: Cloud repository for storing output.
      properties:
        storagePath:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1CloudStoragePath"
        table:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1BigQueryTable"
      type: object
    GooglePrivacyDlpV2beta1PartitionId:
      description: |-
        Datastore partition ID.
        A partition ID identifies a grouping of entities. The grouping is always
        by project and namespace, however the namespace ID may be empty.

        A partition ID contains several dimensions:
        project ID and namespace ID.
      properties:
        namespaceId:
          description: If not empty, the ID of the namespace to which the entities belong.
          type: string
        projectId:
          description: The ID of the project to which the entities belong.
          type: string
      type: object
    GooglePrivacyDlpV2beta1PrivacyMetric:
      description: Privacy metric to compute for reidentification risk analysis.
      properties:
        categoricalStatsConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1CategoricalStatsConfig"
        kAnonymityConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1KAnonymityConfig"
        kMapEstimationConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1KMapEstimationConfig"
        lDiversityConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1LDiversityConfig"
        numericalStatsConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1NumericalStatsConfig"
      type: object
    GooglePrivacyDlpV2beta1Projection:
      description: A representation of a Datastore property in a projection.
      properties:
        property:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1PropertyReference"
      type: object
    GooglePrivacyDlpV2beta1PropertyReference:
      description: A reference to a property relative to the Datastore kind expressions.
      properties:
        name:
          description: >-
            The name of the property.

            If name includes "."s, it may be interpreted as a property name path.
          type: string
      type: object
    GooglePrivacyDlpV2beta1QuasiIdField:
      description: |-
        A quasi-identifier column has a custom_tag, used to know which column
        in the data corresponds to which column in the statistical model.
      properties:
        customTag:
          type: string
        field:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1FieldId"
      type: object
    GooglePrivacyDlpV2beta1RiskAnalysisOperationMetadata:
      description: >-
        Metadata returned within the

        [`riskAnalysis.operations.get`](/dlp/docs/reference/rest/v2beta1/riskAnalysis.operations/get)

        for risk analysis.
      properties:
        createTime:
          description: The time which this request was started.
          format: google-datetime
          type: string
        requestedPrivacyMetric:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1PrivacyMetric"
        requestedSourceTable:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1BigQueryTable"
      type: object
    GooglePrivacyDlpV2beta1RiskAnalysisOperationResult:
      description: |-
        Result of a risk analysis
        [`Operation`](/dlp/docs/reference/rest/v2beta1/inspect.operations)
        request.
      properties:
        categoricalStatsResult:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1CategoricalStatsResult"
        kAnonymityResult:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1KAnonymityResult"
        kMapEstimationResult:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1KMapEstimationResult"
        lDiversityResult:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1LDiversityResult"
        numericalStatsResult:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1NumericalStatsResult"
      type: object
    GooglePrivacyDlpV2beta1StorageConfig:
      description: Shared message indicating Cloud storage type.
      properties:
        bigQueryOptions:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1BigQueryOptions"
        cloudStorageOptions:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1CloudStorageOptions"
        datastoreOptions:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1DatastoreOptions"
      type: object
    GooglePrivacyDlpV2beta1SurrogateType:
      description: >-
        Message for detecting output from deidentification transformations

        such as

        [`CryptoReplaceFfxFpeConfig`](/dlp/docs/reference/rest/v2beta1/content/deidentify#CryptoReplaceFfxFpeConfig).

        These types of transformations are

        those that perform pseudonymization, thereby producing a "surrogate" as

        output. This should be used in conjunction with a field on the

        transformation such as `surrogate_info_type`. This custom info type does

        not support the use of `detection_rules`.
      properties: {}
      type: object
    GooglePrivacyDlpV2beta1TaggedField:
      description: A column with a semantic tag attached.
      properties:
        customTag:
          description: >-
            A column can be tagged with a custom tag. In this case, the user
            must

            indicate an auxiliary table that contains statistical information on

            the possible values of this column (below).
          type: string
        field:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1FieldId"
        inferred:
          $ref: "#/components/schemas/GoogleProtobufEmpty"
        infoType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1InfoType"
      type: object
    GooglePrivacyDlpV2beta1Value:
      description: |-
        Set of primitive values supported by the system.
        Note that for the purposes of inspection or transformation, the number
        of bytes considered to comprise a 'Value' is based on its representation
        as a UTF-8 encoded string. For example, if 'integer_value' is set to
        123456789, the number of bytes would be counted as 9, even though an
        int64 only holds up to 8 bytes of data.
      properties:
        booleanValue:
          type: boolean
        dateValue:
          $ref: "#/components/schemas/GoogleTypeDate"
        floatValue:
          format: double
          type: number
        integerValue:
          format: int64
          type: string
        stringValue:
          type: string
        timeValue:
          $ref: "#/components/schemas/GoogleTypeTimeOfDay"
        timestampValue:
          format: google-datetime
          type: string
      type: object
    GooglePrivacyDlpV2beta1ValueFrequency:
      description: A value of a field, including its frequency.
      properties:
        count:
          description: How many times the value is contained in the field.
          format: int64
          type: string
        value:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta1Value"
      type: object
    GooglePrivacyDlpV2beta1WordList:
      description: Message defining a list of words or phrases to search for in the data.
      properties:
        words:
          description: >-
            Words or phrases defining the dictionary. The dictionary must
            contain

            at least one phrase and every phrase must contain at least 2 characters

            that are letters or digits. [required]
          items:
            type: string
          type: array
      type: object
    GooglePrivacyDlpV2beta2Action:
      description: A task to execute on the completion of a job.
      properties:
        pubSub:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2PublishToPubSub"
        saveFindings:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2SaveFindings"
      type: object
    GooglePrivacyDlpV2beta2AnalyzeDataSourceRiskDetails:
      description: Result of a risk analysis operation request.
      properties:
        categoricalStatsResult:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2CategoricalStatsResult"
        kAnonymityResult:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2KAnonymityResult"
        kMapEstimationResult:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2KMapEstimationResult"
        lDiversityResult:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2LDiversityResult"
        numericalStatsResult:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2NumericalStatsResult"
        requestedPrivacyMetric:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2PrivacyMetric"
        requestedSourceTable:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2BigQueryTable"
      type: object
    GooglePrivacyDlpV2beta2AnalyzeDataSourceRiskRequest:
      description: Request for creating a risk analysis DlpJob.
      properties:
        jobConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2RiskAnalysisJobConfig"
        jobId:
          description: >-
            Optional job ID to use for the created job. If not provided, a job
            ID will

            automatically be generated. Must be unique within the project. The job ID

            can contain uppercase and lowercase letters, numbers, and hyphens; that is,

            it must match the regular expression: `[a-zA-Z\\d-]+`. The maximum length

            is 100 characters. Can be empty to allow the system to generate one.
          type: string
      type: object
    GooglePrivacyDlpV2beta2AuxiliaryTable:
      description: |-
        An auxiliary table contains statistical information on the relative
        frequency of different quasi-identifiers values. It has one or several
        quasi-identifiers columns, and one column that indicates the relative
        frequency of each quasi-identifier tuple.
        If a tuple is present in the data but not in the auxiliary table, the
        corresponding relative frequency is assumed to be zero (and thus, the
        tuple is highly reidentifiable).
      properties:
        quasiIds:
          description: Quasi-identifier columns. [required]
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2QuasiIdField"
          type: array
        relativeFrequency:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2FieldId"
        table:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2BigQueryTable"
      type: object
    GooglePrivacyDlpV2beta2BigQueryKey:
      description: Row key for identifying a record in BigQuery table.
      properties:
        rowNumber:
          description: >-
            Absolute number of the row from the beginning of the table at the
            time

            of scanning.
          format: int64
          type: string
        tableReference:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2BigQueryTable"
      type: object
    GooglePrivacyDlpV2beta2BigQueryOptions:
      description: Options defining BigQuery table and row identifiers.
      properties:
        identifyingFields:
          description: >-
            References to fields uniquely identifying rows within the table.

            Nested fields in the format, like `person.birthdate.year`, are allowed.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2FieldId"
          type: array
        tableReference:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2BigQueryTable"
      type: object
    GooglePrivacyDlpV2beta2BigQueryTable:
      description: >-
        Message defining the location of a BigQuery table. A table is uniquely

        identified  by its project_id, dataset_id, and table_name. Within a query

        a table is often referenced with a string in the format of:

        `<project_id>:<dataset_id>.<table_id>` or

        `<project_id>.<dataset_id>.<table_id>`.
      properties:
        datasetId:
          description: Dataset ID of the table.
          type: string
        projectId:
          description: >-
            The Google Cloud Platform project ID of the project containing the
            table.

            If omitted, project ID is inferred from the API call.
          type: string
        tableId:
          description: Name of the table.
          type: string
      type: object
    GooglePrivacyDlpV2beta2Bucket:
      description: Bucket is represented as a range, along with replacement values.
      properties:
        max:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Value"
        min:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Value"
        replacementValue:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Value"
      type: object
    GooglePrivacyDlpV2beta2BucketingConfig:
      description: >-
        Generalization function that buckets values based on ranges. The ranges
        and

        replacement values are dynamically provided by the user for custom behavior,

        such as 1-30 -> LOW 31-65 -> MEDIUM 66-100 -> HIGH

        This can be used on

        data of type: number, long, string, timestamp.

        If the bound `Value` type differs from the type of data being transformed, we

        will first attempt converting the type of the data to be transformed to match

        the type of the bound before comparing.
      properties:
        buckets:
          description: Set of buckets. Ranges must be non-overlapping.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Bucket"
          type: array
      type: object
    GooglePrivacyDlpV2beta2CancelDlpJobRequest:
      description: The request message for canceling a DLP job.
      properties: {}
      type: object
    GooglePrivacyDlpV2beta2CategoricalStatsConfig:
      description: |-
        Compute numerical stats over an individual column, including
        number of distinct values and value count distribution.
      properties:
        field:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2FieldId"
      type: object
    GooglePrivacyDlpV2beta2CategoricalStatsHistogramBucket:
      properties:
        bucketSize:
          description: Total number of values in this bucket.
          format: int64
          type: string
        bucketValueCount:
          description: Total number of distinct values in this bucket.
          format: int64
          type: string
        bucketValues:
          description: |-
            Sample of value frequencies in this bucket. The total number of
            values returned per bucket is capped at 20.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2ValueFrequency"
          type: array
        valueFrequencyLowerBound:
          description: Lower bound on the value frequency of the values in this bucket.
          format: int64
          type: string
        valueFrequencyUpperBound:
          description: Upper bound on the value frequency of the values in this bucket.
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2beta2CategoricalStatsResult:
      description: Result of the categorical stats computation.
      properties:
        valueFrequencyHistogramBuckets:
          description: Histogram of value frequencies in the column.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2CategoricalStatsHist\
              ogramBucket"
          type: array
      type: object
    GooglePrivacyDlpV2beta2CharacterMaskConfig:
      description: >-
        Partially mask a string by replacing a given number of characters with a

        fixed character. Masking can start from the beginning or end of the string.

        This can be used on data of any type (numbers, longs, and so on) and when

        de-identifying structured data we'll attempt to preserve the original data's

        type. (This allows you to take a long like 123 and modify it to a string like

        **3.
      properties:
        charactersToIgnore:
          description: >-
            When masking a string, items in this list will be skipped when
            replacing.

            For example, if your string is 555-555-5555 and you ask us to skip `-` and

            mask 5 chars with * we would produce ***-*55-5555.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2CharsToIgnore"
          type: array
        maskingCharacter:
          description: >-
            Character to mask the sensitive values&mdash;for example, "*" for an

            alphabetic string such as name, or "0" for a numeric string such as ZIP

            code or credit card number. String must have length 1. If not supplied, we

            will default to "*" for strings, 0 for digits.
          type: string
        numberToMask:
          description: |-
            Number of characters to mask. If not set, all matching chars will be
            masked. Skipped characters do not count towards this tally.
          format: int32
          type: integer
        reverseOrder:
          description: >-
            Mask characters in reverse order. For example, if
            `masking_character` is

            '0', number_to_mask is 14, and `reverse_order` is false, then

            1234-5678-9012-3456 -> 00000000000000-3456

            If `masking_character` is '*', `number_to_mask` is 3, and `reverse_order`

            is true, then 12345 -> 12***
          type: boolean
      type: object
    GooglePrivacyDlpV2beta2CharsToIgnore:
      description: >-
        Characters to skip when doing deidentification of a value. These will be
        left

        alone and skipped.
      properties:
        charactersToSkip:
          type: string
        commonCharactersToIgnore:
          enum:
            - COMMON_CHARS_TO_IGNORE_UNSPECIFIED
            - NUMERIC
            - ALPHA_UPPER_CASE
            - ALPHA_LOWER_CASE
            - PUNCTUATION
            - WHITESPACE
          type: string
      type: object
    GooglePrivacyDlpV2beta2CloudStorageKey:
      description: Record key for a finding in a Cloud Storage file.
      properties:
        filePath:
          description: Path to the file.
          type: string
        startOffset:
          description: Byte offset of the referenced data in the file.
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2beta2CloudStorageOptions:
      description: |-
        Options defining a file or a set of files (path ending with *) within
        a Google Cloud Storage bucket.
      properties:
        bytesLimitPerFile:
          description: >-
            Max number of bytes to scan from a file. If a scanned file's size is
            bigger

            than this value then the rest of the bytes are omitted.
          format: int64
          type: string
        fileSet:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2FileSet"
      type: object
    GooglePrivacyDlpV2beta2Color:
      description: Represents a color in the RGB color space.
      properties:
        blue:
          description: The amount of blue in the color as a value in the interval [0, 1].
          format: float
          type: number
        green:
          description: The amount of green in the color as a value in the interval [0, 1].
          format: float
          type: number
        red:
          description: The amount of red in the color as a value in the interval [0, 1].
          format: float
          type: number
      type: object
    GooglePrivacyDlpV2beta2Condition:
      description: >-
        The field type of `value` and `field` do not need to match to be

        considered equal, but not all comparisons are possible.


        A `value` of type:


        - `string` can be compared against all other types

        - `boolean` can only be compared against other booleans

        - `integer` can be compared against doubles or a string if the string value

        can be parsed as an integer.

        - `double` can be compared against integers or a string if the string can

        be parsed as a double.

        - `Timestamp` can be compared against strings in RFC 3339 date string

        format.

        - `TimeOfDay` can be compared against timestamps and strings in the format

        of 'HH:mm:ss'.


        If we fail to compare do to type mismatch, a warning will be given and

        the condition will evaluate to false.
      properties:
        field:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2FieldId"
        operator:
          description: Operator used to compare the field or infoType to the value.
            [required]
          enum:
            - RELATIONAL_OPERATOR_UNSPECIFIED
            - EQUAL_TO
            - NOT_EQUAL_TO
            - GREATER_THAN
            - LESS_THAN
            - GREATER_THAN_OR_EQUALS
            - LESS_THAN_OR_EQUALS
            - EXISTS
          type: string
        value:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Value"
      type: object
    GooglePrivacyDlpV2beta2Conditions:
      description: A collection of conditions.
      properties:
        conditions:
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Condition"
          type: array
      type: object
    GooglePrivacyDlpV2beta2ContentItem:
      description: Container structure for the content to inspect.
      properties:
        data:
          description: Content data to inspect or redact.
          format: byte
          type: string
        table:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Table"
        type:
          description: |-
            Type of the content, as defined in Content-Type HTTP header.
            Supported types are: all "text" types, octet streams, PNG images,
            JPEG images.
          type: string
        value:
          description: String data to inspect or redact.
          type: string
      type: object
    GooglePrivacyDlpV2beta2CreateDeidentifyTemplateRequest:
      description: Request message for CreateDeidentifyTemplate.
      properties:
        deidentifyTemplate:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2DeidentifyTemplate"
        templateId:
          description: |-
            The template id can contain uppercase and lowercase letters,
            numbers, and hyphens; that is, it must match the regular
            expression: `[a-zA-Z\\d-]+`. The maximum length is 100
            characters. Can be empty to allow the system to generate one.
          type: string
      type: object
    GooglePrivacyDlpV2beta2CreateInspectTemplateRequest:
      description: Request message for CreateInspectTemplate.
      properties:
        inspectTemplate:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InspectTemplate"
        templateId:
          description: |-
            The template id can contain uppercase and lowercase letters,
            numbers, and hyphens; that is, it must match the regular
            expression: `[a-zA-Z\\d-]+`. The maximum length is 100
            characters. Can be empty to allow the system to generate one.
          type: string
      type: object
    GooglePrivacyDlpV2beta2CreateJobTriggerRequest:
      description: Request message for CreateJobTrigger.
      properties:
        jobTrigger:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2JobTrigger"
        triggerId:
          description: |-
            The trigger id can contain uppercase and lowercase letters,
            numbers, and hyphens; that is, it must match the regular
            expression: `[a-zA-Z\\d-]+`. The maximum length is 100
            characters. Can be empty to allow the system to generate one.
          type: string
      type: object
    GooglePrivacyDlpV2beta2CryptoHashConfig:
      description: >-
        Pseudonymization method that generates surrogates via cryptographic
        hashing.

        Uses SHA-256.

        The key size must be either 32 or 64 bytes.

        Outputs a 32 byte digest as an uppercase hex string

        (for example, 41D1567F7F99F1DC2A5FAB886DEE5BEE).

        Currently, only string and integer values can be hashed.
      properties:
        cryptoKey:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2CryptoKey"
      type: object
    GooglePrivacyDlpV2beta2CryptoKey:
      description: |-
        This is a data encryption key (DEK) (as opposed to
        a key encryption key (KEK) stored by KMS).
        When using KMS to wrap/unwrap DEKs, be sure to set an appropriate
        IAM policy on the KMS CryptoKey (KEK) to ensure an attacker cannot
        unwrap the data crypto key.
      properties:
        kmsWrapped:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2KmsWrappedCryptoKey"
        transient:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2TransientCryptoKey"
        unwrapped:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2UnwrappedCryptoKey"
      type: object
    GooglePrivacyDlpV2beta2CryptoReplaceFfxFpeConfig:
      description: >-
        Replaces an identifier with a surrogate using FPE with the FFX

        mode of operation; however when used in the `ReidentifyContent` API method,

        it serves the opposite function by reversing the surrogate back into

        the original identifier.

        The identifier must be encoded as ASCII.

        For a given crypto key and context, the same identifier will be

        replaced with the same surrogate.

        Identifiers must be at least two characters long.

        In the case that the identifier is the empty string, it will be skipped.

        See [Pseudonymization](/dlp/docs/pseudonymization) for example usage.
      properties:
        commonAlphabet:
          enum:
            - FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED
            - NUMERIC
            - HEXADECIMAL
            - UPPER_CASE_ALPHA_NUMERIC
            - ALPHA_NUMERIC
          type: string
        context:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2FieldId"
        cryptoKey:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2CryptoKey"
        customAlphabet:
          description: |-
            This is supported by mapping these to the alphanumeric characters
            that the FFX mode natively supports. This happens before/after
            encryption/decryption.
            Each character listed must appear only once.
            Number of characters must be in the range [2, 62].
            This must be encoded as ASCII.
            The order of characters does not matter.
          type: string
        radix:
          description: The native way to select the alphabet. Must be in the range [2, 62].
          format: int32
          type: integer
        surrogateInfoType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InfoType"
      type: object
    GooglePrivacyDlpV2beta2CustomInfoType:
      description: >-
        Custom information type provided by the user. Used to find
        domain-specific

        sensitive information configurable to the data in question.
      properties:
        detectionRules:
          description: >-
            Set of detection rules to apply to all findings of this custom info
            type.

            Rules are applied in order that they are specified. Not supported for the

            `surrogate_type` custom info type.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2DetectionRule"
          type: array
        dictionary:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Dictionary"
        infoType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InfoType"
        likelihood:
          description: >-
            Likelihood to return for this custom info type. This base value can
            be

            altered by a detection rule if the finding meets the criteria specified by

            the rule. Defaults to `VERY_LIKELY` if not specified.
          enum:
            - LIKELIHOOD_UNSPECIFIED
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
        regex:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Regex"
        surrogateType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2SurrogateType"
      type: object
    GooglePrivacyDlpV2beta2DatastoreKey:
      description: Record key for a finding in Cloud Datastore.
      properties:
        entityKey:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Key"
      type: object
    GooglePrivacyDlpV2beta2DatastoreOptions:
      description: Options defining a data set within Google Cloud Datastore.
      properties:
        kind:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2KindExpression"
        partitionId:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2PartitionId"
      type: object
    GooglePrivacyDlpV2beta2DateShiftConfig:
      description: >-
        Shifts dates by random number of days, with option to be consistent for
        the

        same context.
      properties:
        context:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2FieldId"
        cryptoKey:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2CryptoKey"
        lowerBoundDays:
          description: |-
            For example, -5 means shift date to at most 5 days back in the past.
            [Required]
          format: int32
          type: integer
        upperBoundDays:
          description: >-
            Range of shift in days. Actual shift will be selected at random
            within this

            range (inclusive ends). Negative means shift to earlier in time. Must not

            be more than 365250 days (1000 years) each direction.


            For example, 3 means shift date to at most 3 days into the future.

            [Required]
          format: int32
          type: integer
      type: object
    GooglePrivacyDlpV2beta2DateTime:
      description: Message for a date time object.
      properties:
        date:
          $ref: "#/components/schemas/GoogleTypeDate"
        dayOfWeek:
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
          type: string
        time:
          $ref: "#/components/schemas/GoogleTypeTimeOfDay"
        timeZone:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2TimeZone"
      type: object
    GooglePrivacyDlpV2beta2DeidentifyConfig:
      description: The configuration that controls how the data will change.
      properties:
        infoTypeTransformations:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InfoTypeTransformations"
        recordTransformations:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2RecordTransformations"
      type: object
    GooglePrivacyDlpV2beta2DeidentifyContentRequest:
      description: Request to de-identify a list of items.
      properties:
        deidentifyConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2DeidentifyConfig"
        deidentifyTemplateName:
          description: >-
            Optional template to use. Any configuration directly specified in

            deidentify_config will override those set in the template. Singular fields

            that are set in this request will replace their corresponding fields in the

            template. Repeated fields are appended. Singular sub-messages and groups

            are recursively merged.
          type: string
        inspectConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InspectConfig"
        inspectTemplateName:
          description: >-
            Optional template to use. Any configuration directly specified in

            inspect_config will override those set in the template. Singular fields

            that are set in this request will replace their corresponding fields in the

            template. Repeated fields are appended. Singular sub-messages and groups

            are recursively merged.
          type: string
        item:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2ContentItem"
      type: object
    GooglePrivacyDlpV2beta2DeidentifyContentResponse:
      description: Results of de-identifying a ContentItem.
      properties:
        item:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2ContentItem"
        overview:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2TransformationOverview"
      type: object
    GooglePrivacyDlpV2beta2DeidentifyTemplate:
      description: The DeidentifyTemplates contains instructions on how to deidentify
        content.
      properties:
        createTime:
          description: The creation timestamp of a inspectTemplate, output only field.
          format: google-datetime
          type: string
        deidentifyConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2DeidentifyConfig"
        description:
          description: Short description (max 256 chars).
          type: string
        displayName:
          description: Display name (max 256 chars).
          type: string
        name:
          description: |-
            The template name. Output only.

            The template will have one of the following formats:
            `projects/PROJECT_ID/deidentifyTemplates/TEMPLATE_ID` OR
            `organizations/ORGANIZATION_ID/deidentifyTemplates/TEMPLATE_ID`
          type: string
        updateTime:
          description: The last update timestamp of a inspectTemplate, output only field.
          format: google-datetime
          type: string
      type: object
    GooglePrivacyDlpV2beta2DetectionRule:
      description: >-
        Rule for modifying a custom info type to alter behavior under certain

        circumstances, depending on the specific details of the rule. Not supported

        for the `surrogate_type` custom info type.
      properties:
        hotwordRule:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2HotwordRule"
      type: object
    GooglePrivacyDlpV2beta2Dictionary:
      description: >-
        Custom information type based on a dictionary of words or phrases. This
        can

        be used to match sensitive information specific to the data, such as a list

        of employee IDs or job titles.


        Dictionary words are case-insensitive and all characters other than letters

        and digits in the unicode [Basic Multilingual

        Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane)

        will be replaced with whitespace when scanning for matches, so the

        dictionary phrase "Sam Johnson" will match all three phrases "sam johnson",

        "Sam, Johnson", and "Sam (Johnson)". Additionally, the characters

        surrounding any match must be of a different type than the adjacent

        characters within the word, so letters must be next to non-letters and

        digits next to non-digits. For example, the dictionary word "jen" will

        match the first three letters of the text "jen123" but will return no

        matches for "jennifer".


        Dictionary words containing a large number of characters that are not

        letters or digits may result in unexpected findings because such characters

        are treated as whitespace.
      properties:
        wordList:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2WordList"
      type: object
    GooglePrivacyDlpV2beta2DlpJob:
      description: Combines all of the information about a DLP job.
      properties:
        createTime:
          description: Time when the job was created.
          format: google-datetime
          type: string
        endTime:
          description: Time when the job finished.
          format: google-datetime
          type: string
        errorResults:
          description: A stream of errors encountered running the job.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
        inspectDetails:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InspectDataSourceDetai\
            ls"
        jobTriggerName:
          description: |-
            If created by a job trigger, the resource name of the trigger that
            instantiated the job.
          type: string
        name:
          description: The server-assigned name.
          type: string
        riskDetails:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2AnalyzeDataSourceRiskD\
            etails"
        startTime:
          description: Time when the job started.
          format: google-datetime
          type: string
        state:
          description: State of a job.
          enum:
            - JOB_STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - DONE
            - CANCELED
            - FAILED
          type: string
        type:
          description: The type of job.
          enum:
            - DLP_JOB_TYPE_UNSPECIFIED
            - INSPECT_JOB
            - RISK_ANALYSIS_JOB
          type: string
      type: object
    GooglePrivacyDlpV2beta2EntityId:
      description: >-
        An entity in a dataset is a field or set of fields that correspond to a

        single person. For example, in medical records the `EntityId` might be

        a patient identifier, or for financial records it might be an account

        identifier. This message is used when generalizations or analysis must be

        consistent across multiple rows pertaining to the same entity.
      properties:
        field:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2FieldId"
      type: object
    GooglePrivacyDlpV2beta2Error:
      description: The results of an unsuccessful activation of the JobTrigger.
      properties:
        details:
          $ref: "#/components/schemas/GoogleRpcStatus"
        timestamps:
          description: The times the error occurred.
          items:
            format: google-datetime
            type: string
          type: array
      type: object
    GooglePrivacyDlpV2beta2Expressions:
      description: An expression, consisting or an operator and conditions.
      properties:
        conditions:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Conditions"
        logicalOperator:
          description: >-
            The operator to apply to the result of conditions. Default and
            currently

            only supported value is `AND`.
          enum:
            - LOGICAL_OPERATOR_UNSPECIFIED
            - AND
          type: string
      type: object
    GooglePrivacyDlpV2beta2FieldId:
      description: General identifier of a data field in a storage service.
      properties:
        name:
          description: Name describing the field.
          type: string
      type: object
    GooglePrivacyDlpV2beta2FieldTransformation:
      description: The transformation to apply to the field.
      properties:
        condition:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2RecordCondition"
        fields:
          description: Input field(s) to apply the transformation to. [required]
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2FieldId"
          type: array
        infoTypeTransformations:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InfoTypeTransformations"
        primitiveTransformation:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2PrimitiveTransformation"
      type: object
    GooglePrivacyDlpV2beta2FileSet:
      description: Set of files to scan.
      properties:
        url:
          description: >-
            The url, in the format `gs://<bucket>/<path>`. Trailing wildcard in
            the

            path is allowed.
          type: string
      type: object
    GooglePrivacyDlpV2beta2Finding:
      description: Represents a piece of potentially sensitive content.
      properties:
        createTime:
          description: Timestamp when finding was detected.
          format: google-datetime
          type: string
        infoType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InfoType"
        likelihood:
          description: Estimate of how likely it is that the `info_type` is correct.
          enum:
            - LIKELIHOOD_UNSPECIFIED
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
        location:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Location"
        quote:
          description: >-
            The content that was found. Even if the content is not textual, it

            may be converted to a textual representation here.

            Provided if requested by the `InspectConfig` and the finding is

            less than or equal to 4096 bytes long. If the finding exceeds 4096 bytes

            in length, the quote may be omitted.
          type: string
        quoteInfo:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2QuoteInfo"
      type: object
    GooglePrivacyDlpV2beta2FindingLimits:
      properties:
        maxFindingsPerInfoType:
          description: Configuration of findings limit given for specified infoTypes.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InfoTypeLimit"
          type: array
        maxFindingsPerItem:
          description: |-
            Max number of findings that will be returned for each item scanned.
            When set within `InspectDataSourceRequest`,
            the maximum returned is 1000 regardless if this is set higher.
            When set within `InspectContentRequest`, this field is ignored.
          format: int32
          type: integer
        maxFindingsPerRequest:
          description: >-
            Max number of findings that will be returned per request/job.

            When set within `InspectContentRequest`, the maximum returned is 1000

            regardless if this is set higher.
          format: int32
          type: integer
      type: object
    GooglePrivacyDlpV2beta2FixedSizeBucketingConfig:
      description: >-
        Buckets values based on fixed size ranges. The

        Bucketing transformation can provide all of this functionality,

        but requires more configuration. This message is provided as a convenience to

        the user for simple bucketing strategies.


        The transformed value will be a hyphenated string of

        <lower_bound>-<upper_bound>, i.e if lower_bound = 10 and upper_bound = 20

        all values that are within this bucket will be replaced with "10-20".


        This can be used on data of type: double, long.


        If the bound Value type differs from the type of data

        being transformed, we will first attempt converting the type of the data to

        be transformed to match the type of the bound before comparing.
      properties:
        bucketSize:
          description: >-
            Size of each bucket (except for minimum and maximum buckets). So if

            `lower_bound` = 10, `upper_bound` = 89, and `bucket_size` = 10, then the

            following buckets would be used: -10, 10-20, 20-30, 30-40, 40-50, 50-60,

            60-70, 70-80, 80-89, 89+. Precision up to 2 decimals works. [Required].
          format: double
          type: number
        lowerBound:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Value"
        upperBound:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Value"
      type: object
    GooglePrivacyDlpV2beta2HotwordRule:
      description: |-
        Detection rule that adjusts the likelihood of findings within a certain
        proximity of hotwords.
      properties:
        hotwordRegex:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Regex"
        likelihoodAdjustment:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2LikelihoodAdjustment"
        proximity:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Proximity"
      type: object
    GooglePrivacyDlpV2beta2ImageLocation:
      description: Bounding box encompassing detected text within an image.
      properties:
        height:
          description: Height of the bounding box in pixels.
          format: int32
          type: integer
        left:
          description: Left coordinate of the bounding box. (0,0) is upper left.
          format: int32
          type: integer
        top:
          description: Top coordinate of the bounding box. (0,0) is upper left.
          format: int32
          type: integer
        width:
          description: Width of the bounding box in pixels.
          format: int32
          type: integer
      type: object
    GooglePrivacyDlpV2beta2ImageRedactionConfig:
      description: Configuration for determining how redaction of images should occur.
      properties:
        infoType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InfoType"
        redactAllText:
          description: >-
            If true, all text found in the image, regardless whether it matches
            an

            info_type, is redacted.
          type: boolean
        redactionColor:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Color"
      type: object
    GooglePrivacyDlpV2beta2InfoType:
      description: Type of information detected by the API.
      properties:
        name:
          description: Name of the information type.
          type: string
      type: object
    GooglePrivacyDlpV2beta2InfoTypeDescription:
      description: InfoType description.
      properties:
        displayName:
          description: Human readable form of the infoType name.
          type: string
        name:
          description: Internal name of the infoType.
          type: string
        supportedBy:
          description: Which parts of the API supports this InfoType.
          items:
            enum:
              - ENUM_TYPE_UNSPECIFIED
              - INSPECT
              - RISK_ANALYSIS
            type: string
          type: array
      type: object
    GooglePrivacyDlpV2beta2InfoTypeLimit:
      description: |-
        Max findings configuration per infoType, per content item or long
        running DlpJob.
      properties:
        infoType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InfoType"
        maxFindings:
          description: Max findings limit for the given infoType.
          format: int32
          type: integer
      type: object
    GooglePrivacyDlpV2beta2InfoTypeStatistics:
      description: Statistics regarding a specific InfoType.
      properties:
        count:
          description: Number of findings for this infoType.
          format: int64
          type: string
        infoType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InfoType"
      type: object
    GooglePrivacyDlpV2beta2InfoTypeTransformation:
      description: |-
        A transformation to apply to text that is identified as a specific
        info_type.
      properties:
        infoTypes:
          description: |-
            InfoTypes to apply the transformation to. Empty list will match all
            available infoTypes for this transformation.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InfoType"
          type: array
        primitiveTransformation:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2PrimitiveTransformation"
      type: object
    GooglePrivacyDlpV2beta2InfoTypeTransformations:
      description: >-
        A type of transformation that will scan unstructured text and

        apply various `PrimitiveTransformation`s to each finding, where the

        transformation is applied to only values that were identified as a specific

        info_type.
      properties:
        transformations:
          description: |-
            Transformation for each infoType. Cannot specify more than one
            for a given infoType. [required]
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InfoTypeTransformati\
              on"
          type: array
      type: object
    GooglePrivacyDlpV2beta2InspectConfig:
      description: >-
        Configuration description of the scanning process.

        When used with redactContent only info_types and min_likelihood are currently

        used.
      properties:
        customInfoTypes:
          description: Custom infoTypes provided by the user.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2CustomInfoType"
          type: array
        excludeInfoTypes:
          description: When true, excludes type information of the findings.
          type: boolean
        includeQuote:
          description: >-
            When true, a contextual quote from the data that triggered a finding
            is

            included in the response; see Finding.quote.
          type: boolean
        infoTypes:
          description: |-
            Restricts what info_types to look for. The values must correspond to
            InfoType values returned by ListInfoTypes or found in documentation.
            Empty info_types runs all enabled detectors.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InfoType"
          type: array
        limits:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2FindingLimits"
        minLikelihood:
          description: |-
            Only returns findings equal or above this threshold. The default is
            POSSIBLE.
          enum:
            - LIKELIHOOD_UNSPECIFIED
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
      type: object
    GooglePrivacyDlpV2beta2InspectContentRequest:
      description: Request to search for potentially sensitive info in a ContentItem.
      properties:
        inspectConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InspectConfig"
        inspectTemplateName:
          description: >-
            Optional template to use. Any configuration directly specified in

            inspect_config will override those set in the template. Singular fields

            that are set in this request will replace their corresponding fields in the

            template. Repeated fields are appended. Singular sub-messages and groups

            are recursively merged.
          type: string
        item:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2ContentItem"
      type: object
    GooglePrivacyDlpV2beta2InspectContentResponse:
      description: Results of inspecting an item.
      properties:
        result:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InspectResult"
      type: object
    GooglePrivacyDlpV2beta2InspectDataSourceDetails:
      description: The results of an inspect DataSource job.
      properties:
        requestedOptions:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2RequestedOptions"
        result:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Result"
      type: object
    GooglePrivacyDlpV2beta2InspectDataSourceRequest:
      description: >-
        Request for scheduling a scan of a data subset from a Google Platform
        data

        repository.
      properties:
        jobConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InspectJobConfig"
        jobId:
          description: >-
            Optional job ID to use for the created job. If not provided, a job
            ID will

            automatically be generated. Must be unique within the project. The job ID

            can contain uppercase and lowercase letters, numbers, and hyphens; that is,

            it must match the regular expression: `[a-zA-Z\\d-]+`. The maximum length

            is 100 characters. Can be empty to allow the system to generate one.
          type: string
      type: object
    GooglePrivacyDlpV2beta2InspectJobConfig:
      properties:
        actions:
          description: >-
            Actions to execute at the completion of the job. Are executed in the
            order

            provided.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Action"
          type: array
        inspectConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InspectConfig"
        inspectTemplateName:
          description: >-
            If provided, will be used as the default for all values in
            InspectConfig.

            `inspect_config` will be merged into the values persisted as part of the

            template.
          type: string
        outputConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2OutputStorageConfig"
        storageConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2StorageConfig"
      type: object
    GooglePrivacyDlpV2beta2InspectResult:
      description: All the findings for a single scanned item.
      properties:
        findings:
          description: List of findings for an item.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Finding"
          type: array
        findingsTruncated:
          description: >-
            If true, then this item might have more findings than were returned,

            and the findings returned are an arbitrary subset of all findings.

            The findings list might be truncated because the input items were too

            large, or because the server reached the maximum amount of resources

            allowed for a single API call. For best results, divide the input into

            smaller batches.
          type: boolean
      type: object
    GooglePrivacyDlpV2beta2InspectTemplate:
      description: >-
        The inspectTemplate contains a configuration (set of types of sensitive
        data

        to be detected) to be used anywhere you otherwise would normally specify

        InspectConfig.
      properties:
        createTime:
          description: The creation timestamp of a inspectTemplate, output only field.
          format: google-datetime
          type: string
        description:
          description: Short description (max 256 chars).
          type: string
        displayName:
          description: Display name (max 256 chars).
          type: string
        inspectConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InspectConfig"
        name:
          description: |-
            The template name. Output only.

            The template will have one of the following formats:
            `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR
            `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`
          type: string
        updateTime:
          description: The last update timestamp of a inspectTemplate, output only field.
          format: google-datetime
          type: string
      type: object
    GooglePrivacyDlpV2beta2JobTrigger:
      description: Contains a configuration to make dlp api calls on a repeating basis.
      properties:
        createTime:
          description: The creation timestamp of a triggeredJob, output only field.
          format: google-datetime
          type: string
        description:
          description: User provided description (max 256 chars)
          type: string
        displayName:
          description: Display name (max 100 chars)
          type: string
        errors:
          description: >-
            A stream of errors encountered when the trigger was activated.
            Repeated

            errors may result in the JobTrigger automaticaly being paused.

            Will return the last 100 errors. Whenever the JobTrigger is modified

            this list will be cleared. Output only field.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Error"
          type: array
        inspectJob:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InspectJobConfig"
        lastRunTime:
          description: The timestamp of the last time this trigger executed.
          format: google-datetime
          type: string
        name:
          description: >-
            Unique resource name for the triggeredJob, assigned by the service
            when the

            triggeredJob is created, for example

            `projects/dlp-test-project/triggeredJobs/53234423`.
          type: string
        status:
          description: A status for this trigger. [required]
          enum:
            - STATUS_UNSPECIFIED
            - HEALTHY
            - PAUSED
            - CANCELLED
          type: string
        triggers:
          description: >-
            A list of triggers which will be OR'ed together. Only one in the
            list

            needs to trigger for a job to be started. The list may contain only

            a single Schedule trigger and must have at least one object.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Trigger"
          type: array
        updateTime:
          description: The last update timestamp of a triggeredJob, output only field.
          format: google-datetime
          type: string
      type: object
    GooglePrivacyDlpV2beta2KAnonymityConfig:
      description: k-anonymity metric, used for analysis of reidentification risk.
      properties:
        entityId:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2EntityId"
        quasiIds:
          description: >-
            Set of fields to compute k-anonymity over. When multiple fields are

            specified, they are considered a single composite key. Structs and

            repeated data types are not supported; however, nested fields are

            supported so long as they are not structs themselves or nested within

            a repeated field.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2FieldId"
          type: array
      type: object
    GooglePrivacyDlpV2beta2KAnonymityEquivalenceClass:
      description: The set of columns' values that share the same ldiversity value
      properties:
        equivalenceClassSize:
          description: |-
            Size of the equivalence class, for example number of rows with the
            above set of values.
          format: int64
          type: string
        quasiIdsValues:
          description: |-
            Set of values defining the equivalence class. One value per
            quasi-identifier column in the original KAnonymity metric message.
            The order is always the same as the original request.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Value"
          type: array
      type: object
    GooglePrivacyDlpV2beta2KAnonymityHistogramBucket:
      properties:
        bucketSize:
          description: Total number of equivalence classes in this bucket.
          format: int64
          type: string
        bucketValueCount:
          description: Total number of distinct equivalence classes in this bucket.
          format: int64
          type: string
        bucketValues:
          description: |-
            Sample of equivalence classes in this bucket. The total number of
            classes returned per bucket is capped at 20.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2KAnonymityEquivalenc\
              eClass"
          type: array
        equivalenceClassSizeLowerBound:
          description: Lower bound on the size of the equivalence classes in this bucket.
          format: int64
          type: string
        equivalenceClassSizeUpperBound:
          description: Upper bound on the size of the equivalence classes in this bucket.
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2beta2KAnonymityResult:
      description: Result of the k-anonymity computation.
      properties:
        equivalenceClassHistogramBuckets:
          description: Histogram of k-anonymity equivalence classes.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2KAnonymityHistogramB\
              ucket"
          type: array
      type: object
    GooglePrivacyDlpV2beta2KMapEstimationConfig:
      description: >-
        Reidentifiability metric. This corresponds to a risk model similar to
        what

        is called "journalist risk" in the literature, except the attack dataset is

        statistically modeled instead of being perfectly known. This can be done

        using publicly available data (like the US Census), or using a custom

        statistical model (indicated as one or several BigQuery tables), or by

        extrapolating from the distribution of values in the input dataset.
      properties:
        auxiliaryTables:
          description: >-
            Several auxiliary tables can be used in the analysis. Each
            custom_tag

            used to tag a quasi-identifiers column must appear in exactly one column

            of one auxiliary table.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2AuxiliaryTable"
          type: array
        quasiIds:
          description: >-
            Fields considered to be quasi-identifiers. No two columns can have
            the

            same tag. [required]
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2TaggedField"
          type: array
        regionCode:
          description: >-
            ISO 3166-1 alpha-2 region code to use in the statistical modeling.

            Required if no column is tagged with a region-specific InfoType (like

            US_ZIP_5) or a region code.
          type: string
      type: object
    GooglePrivacyDlpV2beta2KMapEstimationHistogramBucket:
      description: |-
        A KMapEstimationHistogramBucket message with the following values:
          min_anonymity: 3
          max_anonymity: 5
          frequency: 42
        means that there are 42 records whose quasi-identifier values correspond
        to 3, 4 or 5 people in the overlying population. An important particular
        case is when min_anonymity = max_anonymity = 1: the frequency field then
        corresponds to the number of uniquely identifiable records.
      properties:
        bucketSize:
          description: Number of records within these anonymity bounds.
          format: int64
          type: string
        bucketValueCount:
          description: Total number of distinct quasi-identifier tuple values in this
            bucket.
          format: int64
          type: string
        bucketValues:
          description: |-
            Sample of quasi-identifier tuple values in this bucket. The total
            number of classes returned per bucket is capped at 20.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2KMapEstimationQuasiI\
              dValues"
          type: array
        maxAnonymity:
          description: Always greater than or equal to min_anonymity.
          format: int64
          type: string
        minAnonymity:
          description: Always positive.
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2beta2KMapEstimationQuasiIdValues:
      description: A tuple of values for the quasi-identifier columns.
      properties:
        estimatedAnonymity:
          description: The estimated anonymity for these quasi-identifier values.
          format: int64
          type: string
        quasiIdsValues:
          description: The quasi-identifier values.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Value"
          type: array
      type: object
    GooglePrivacyDlpV2beta2KMapEstimationResult:
      description: |-
        Result of the reidentifiability analysis. Note that these results are an
        estimation, not exact values.
      properties:
        kMapEstimationHistogram:
          description: >-
            The intervals [min_anonymity, max_anonymity] do not overlap. If a
            value

            doesn't correspond to any such interval, the associated frequency is

            zero. For example, the following records:
              {min_anonymity: 1, max_anonymity: 1, frequency: 17}
              {min_anonymity: 2, max_anonymity: 3, frequency: 42}
              {min_anonymity: 5, max_anonymity: 10, frequency: 99}
            mean that there are no record with an estimated anonymity of 4, 5, or

            larger than 10.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2KMapEstimationHistog\
              ramBucket"
          type: array
      type: object
    GooglePrivacyDlpV2beta2Key:
      description: |-
        A unique identifier for a Datastore entity.
        If a key's partition ID or any of its path kinds or names are
        reserved/read-only, the key is reserved/read-only.
        A reserved/read-only key is forbidden in certain documented contexts.
      properties:
        partitionId:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2PartitionId"
        path:
          description: >-
            The entity path.

            An entity path consists of one or more elements composed of a kind and a

            string or numerical identifier, which identify entities. The first

            element identifies a _root entity_, the second element identifies

            a _child_ of the root entity, the third element identifies a child of the

            second entity, and so forth. The entities identified by all prefixes of

            the path are called the element's _ancestors_.


            A path can never be empty, and a path can have at most 100 elements.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2PathElement"
          type: array
      type: object
    GooglePrivacyDlpV2beta2KindExpression:
      description: A representation of a Datastore kind.
      properties:
        name:
          description: The name of the kind.
          type: string
      type: object
    GooglePrivacyDlpV2beta2KmsWrappedCryptoKey:
      description: >-
        Include to use an existing data crypto key wrapped by KMS.

        Authorization requires the following IAM permissions when sending a request

        to perform a crypto transformation using a kms-wrapped crypto key:

        dlp.kms.encrypt
      properties:
        cryptoKeyName:
          description: The resource name of the KMS CryptoKey to use for unwrapping.
            [required]
          type: string
        wrappedKey:
          description: The wrapped data crypto key. [required]
          format: byte
          type: string
      type: object
    GooglePrivacyDlpV2beta2LDiversityConfig:
      description: l-diversity metric, used for analysis of reidentification risk.
      properties:
        quasiIds:
          description: |-
            Set of quasi-identifiers indicating how equivalence classes are
            defined for the l-diversity computation. When multiple fields are
            specified, they are considered a single composite key.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2FieldId"
          type: array
        sensitiveAttribute:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2FieldId"
      type: object
    GooglePrivacyDlpV2beta2LDiversityEquivalenceClass:
      description: The set of columns' values that share the same ldiversity value.
      properties:
        equivalenceClassSize:
          description: Size of the k-anonymity equivalence class.
          format: int64
          type: string
        numDistinctSensitiveValues:
          description: Number of distinct sensitive values in this equivalence class.
          format: int64
          type: string
        quasiIdsValues:
          description: |-
            Quasi-identifier values defining the k-anonymity equivalence
            class. The order is always the same as the original request.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Value"
          type: array
        topSensitiveValues:
          description: Estimated frequencies of top sensitive values.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2ValueFrequency"
          type: array
      type: object
    GooglePrivacyDlpV2beta2LDiversityHistogramBucket:
      properties:
        bucketSize:
          description: Total number of equivalence classes in this bucket.
          format: int64
          type: string
        bucketValueCount:
          description: Total number of distinct equivalence classes in this bucket.
          format: int64
          type: string
        bucketValues:
          description: |-
            Sample of equivalence classes in this bucket. The total number of
            classes returned per bucket is capped at 20.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2LDiversityEquivalenc\
              eClass"
          type: array
        sensitiveValueFrequencyLowerBound:
          description: |-
            Lower bound on the sensitive value frequencies of the equivalence
            classes in this bucket.
          format: int64
          type: string
        sensitiveValueFrequencyUpperBound:
          description: |-
            Upper bound on the sensitive value frequencies of the equivalence
            classes in this bucket.
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2beta2LDiversityResult:
      description: Result of the l-diversity computation.
      properties:
        sensitiveValueFrequencyHistogramBuckets:
          description: Histogram of l-diversity equivalence class sensitive value
            frequencies.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2LDiversityHistogramB\
              ucket"
          type: array
      type: object
    GooglePrivacyDlpV2beta2LikelihoodAdjustment:
      description: |-
        Message for specifying an adjustment to the likelihood of a finding as
        part of a detection rule.
      properties:
        fixedLikelihood:
          description: Set the likelihood of a finding to a fixed value.
          enum:
            - LIKELIHOOD_UNSPECIFIED
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
        relativeLikelihood:
          description: >-
            Increase or decrease the likelihood by the specified number of

            levels. For example, if a finding would be `POSSIBLE` without the

            detection rule and `relative_likelihood` is 1, then it is upgraded to

            `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`.

            Likelihood may never drop below `VERY_UNLIKELY` or exceed

            `VERY_LIKELY`, so applying an adjustment of 1 followed by an

            adjustment of -1 when base likelihood is `VERY_LIKELY` will result in

            a final likelihood of `LIKELY`.
          format: int32
          type: integer
      type: object
    GooglePrivacyDlpV2beta2ListDeidentifyTemplatesResponse:
      description: Response message for ListDeidentifyTemplates.
      properties:
        deidentifyTemplates:
          description: |-
            List of deidentify templates, up to page_size in
            ListDeidentifyTemplatesRequest.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2DeidentifyTemplate"
          type: array
        nextPageToken:
          description: |-
            If the next page is available then the next page token to be used
            in following ListDeidentifyTemplates request.
          type: string
      type: object
    GooglePrivacyDlpV2beta2ListDlpJobsResponse:
      description: The response message for listing DLP jobs.
      properties:
        jobs:
          description: A list of DlpJobs that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2DlpJob"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    GooglePrivacyDlpV2beta2ListInfoTypesResponse:
      description: Response to the ListInfoTypes request.
      properties:
        infoTypes:
          description: Set of sensitive infoTypes.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InfoTypeDescription"
          type: array
      type: object
    GooglePrivacyDlpV2beta2ListInspectTemplatesResponse:
      description: Response message for ListInspectTemplates.
      properties:
        inspectTemplates:
          description: List of inspectTemplates, up to page_size in
            ListInspectTemplatesRequest.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InspectTemplate"
          type: array
        nextPageToken:
          description: |-
            If the next page is available then the next page token to be used
            in following ListInspectTemplates request.
          type: string
      type: object
    GooglePrivacyDlpV2beta2ListJobTriggersResponse:
      description: Response message for ListJobTriggers.
      properties:
        jobTriggers:
          description: List of triggeredJobs, up to page_size in ListJobTriggersRequest.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2JobTrigger"
          type: array
        nextPageToken:
          description: |-
            If the next page is available then the next page token to be used
            in following ListJobTriggers request.
          type: string
      type: object
    GooglePrivacyDlpV2beta2Location:
      description: Specifies the location of the finding.
      properties:
        byteRange:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Range"
        codepointRange:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Range"
        fieldId:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2FieldId"
        imageBoxes:
          description: |-
            The area within the image that contained the finding.
            Provided when the content is an image.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2ImageLocation"
          type: array
        recordKey:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2RecordKey"
        tableLocation:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2TableLocation"
      type: object
    GooglePrivacyDlpV2beta2NumericalStatsConfig:
      description: |-
        Compute numerical stats over an individual column, including
        min, max, and quantiles.
      properties:
        field:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2FieldId"
      type: object
    GooglePrivacyDlpV2beta2NumericalStatsResult:
      description: Result of the numerical stats computation.
      properties:
        maxValue:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Value"
        minValue:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Value"
        quantileValues:
          description: >-
            List of 99 values that partition the set of field values into 100
            equal

            sized buckets.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Value"
          type: array
      type: object
    GooglePrivacyDlpV2beta2OutputStorageConfig:
      description: Cloud repository for storing output.
      properties:
        outputSchema:
          description: >-
            Schema used for writing the findings. Columns are derived from the

            `Finding` object. If appending to an existing table, any columns from the

            predefined schema that are missing will be added. No columns in the

            existing table will be deleted.


            If unspecified, then all available columns will be used for a new table,

            and no changes will be made to an existing table.
          enum:
            - OUTPUT_SCHEMA_UNSPECIFIED
            - BASIC_COLUMNS
            - GCS_COLUMNS
            - DATASTORE_COLUMNS
            - BIG_QUERY_COLUMNS
            - ALL_COLUMNS
          type: string
        table:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2BigQueryTable"
      type: object
    GooglePrivacyDlpV2beta2PartitionId:
      description: |-
        Datastore partition ID.
        A partition ID identifies a grouping of entities. The grouping is always
        by project and namespace, however the namespace ID may be empty.

        A partition ID contains several dimensions:
        project ID and namespace ID.
      properties:
        namespaceId:
          description: If not empty, the ID of the namespace to which the entities belong.
          type: string
        projectId:
          description: The ID of the project to which the entities belong.
          type: string
      type: object
    GooglePrivacyDlpV2beta2PathElement:
      description: |-
        A (kind, ID/name) pair used to construct a key path.

        If either name or ID is set, the element is complete.
        If neither is set, the element is incomplete.
      properties:
        id:
          description: >-
            The auto-allocated ID of the entity.

            Never equal to zero. Values less than zero are discouraged and may not

            be supported in the future.
          format: int64
          type: string
        kind:
          description: |-
            The kind of the entity.
            A kind matching regex `__.*__` is reserved/read-only.
            A kind must not contain more than 1500 bytes when UTF-8 encoded.
            Cannot be `""`.
          type: string
        name:
          description: |-
            The name of the entity.
            A name matching regex `__.*__` is reserved/read-only.
            A name must not be more than 1500 bytes when UTF-8 encoded.
            Cannot be `""`.
          type: string
      type: object
    GooglePrivacyDlpV2beta2PrimitiveTransformation:
      description: A rule for transforming a value.
      properties:
        bucketingConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2BucketingConfig"
        characterMaskConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2CharacterMaskConfig"
        cryptoHashConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2CryptoHashConfig"
        cryptoReplaceFfxFpeConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2CryptoReplaceFfxFpeCon\
            fig"
        dateShiftConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2DateShiftConfig"
        fixedSizeBucketingConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2FixedSizeBucketingConf\
            ig"
        redactConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2RedactConfig"
        replaceConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2ReplaceValueConfig"
        replaceWithInfoTypeConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2ReplaceWithInfoTypeCon\
            fig"
        timePartConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2TimePartConfig"
      type: object
    GooglePrivacyDlpV2beta2PrivacyMetric:
      description: Privacy metric to compute for reidentification risk analysis.
      properties:
        categoricalStatsConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2CategoricalStatsConfig"
        kAnonymityConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2KAnonymityConfig"
        kMapEstimationConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2KMapEstimationConfig"
        lDiversityConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2LDiversityConfig"
        numericalStatsConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2NumericalStatsConfig"
      type: object
    GooglePrivacyDlpV2beta2Proximity:
      description: |-
        Message for specifying a window around a finding to apply a detection
        rule.
      properties:
        windowAfter:
          description: Number of characters after the finding to consider.
          format: int32
          type: integer
        windowBefore:
          description: Number of characters before the finding to consider.
          format: int32
          type: integer
      type: object
    GooglePrivacyDlpV2beta2PublishToPubSub:
      description: |-
        Publish the results of a DlpJob to a pub sub channel.
        Compatible with: Inpect, Risk
      properties:
        topic:
          description: >-
            Cloud Pub/Sub topic to send notifications to. The topic must have
            given

            publishing access rights to the DLP API service account executing

            the long running DlpJob sending the notifications.

            Format is projects/{project}/topics/{topic}.
          type: string
      type: object
    GooglePrivacyDlpV2beta2QuasiIdField:
      description: |-
        A quasi-identifier column has a custom_tag, used to know which column
        in the data corresponds to which column in the statistical model.
      properties:
        customTag:
          type: string
        field:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2FieldId"
      type: object
    GooglePrivacyDlpV2beta2QuoteInfo:
      description: Message for infoType-dependent details parsed from quote.
      properties:
        dateTime:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2DateTime"
      type: object
    GooglePrivacyDlpV2beta2Range:
      description: Generic half-open interval [start, end)
      properties:
        end:
          description: Index of the last character of the range (exclusive).
          format: int64
          type: string
        start:
          description: Index of the first character of the range (inclusive).
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2beta2RecordCondition:
      description: >-
        A condition for determining whether a transformation should be applied
        to

        a field.
      properties:
        expressions:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Expressions"
      type: object
    GooglePrivacyDlpV2beta2RecordKey:
      description: Message for a unique key indicating a record that contains a finding.
      properties:
        bigQueryKey:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2BigQueryKey"
        cloudStorageKey:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2CloudStorageKey"
        datastoreKey:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2DatastoreKey"
      type: object
    GooglePrivacyDlpV2beta2RecordSuppression:
      description: >-
        Configuration to suppress records whose suppression conditions evaluate
        to

        true.
      properties:
        condition:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2RecordCondition"
      type: object
    GooglePrivacyDlpV2beta2RecordTransformations:
      description: |-
        A type of transformation that is applied over structured data such as a
        table.
      properties:
        fieldTransformations:
          description: Transform the record by applying various field transformations.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2FieldTransformation"
          type: array
        recordSuppressions:
          description: >-
            Configuration defining which records get suppressed entirely.
            Records that

            match any suppression rule are omitted from the output [optional].
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2RecordSuppression"
          type: array
      type: object
    GooglePrivacyDlpV2beta2RedactConfig:
      description: >-
        Redact a given value. For example, if used with an
        `InfoTypeTransformation`

        transforming PHONE_NUMBER, and input 'My phone number is 206-555-0123', the

        output would be 'My phone number is '.
      properties: {}
      type: object
    GooglePrivacyDlpV2beta2RedactImageRequest:
      description: |-
        Request to search for potentially sensitive info in a list of items
        and replace it with a default or provided content.
      properties:
        imageData:
          description: The bytes of the image to redact.
          format: byte
          type: string
        imageRedactionConfigs:
          description: The configuration for specifying what content to redact from images.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2ImageRedactionConfig"
          type: array
        imageType:
          description: |-
            Type of the content, as defined in Content-Type HTTP header.
            Supported types are: PNG, JPEG, SVG, & BMP.
          type: string
        inspectConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InspectConfig"
      type: object
    GooglePrivacyDlpV2beta2RedactImageResponse:
      description: Results of redacting an image.
      properties:
        extractedText:
          description: >-
            If an image was being inspected and the InspectConfig's
            include_quote was

            set to true, then this field will include all text, if any, that was found

            in the image.
          type: string
        redactedImage:
          description: The redacted image. The type will be the same as the original image.
          format: byte
          type: string
      type: object
    GooglePrivacyDlpV2beta2Regex:
      description: Message defining a custom regular expression.
      properties:
        pattern:
          description: Pattern defining the regular expression.
          type: string
      type: object
    GooglePrivacyDlpV2beta2ReidentifyContentRequest:
      description: Request to re-identify an item.
      properties:
        inspectConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InspectConfig"
        inspectTemplateName:
          description: >-
            Optional template to use. Any configuration directly specified in

            `inspect_config` will override those set in the template. Singular fields

            that are set in this request will replace their corresponding fields in the

            template. Repeated fields are appended. Singular sub-messages and groups

            are recursively merged.
          type: string
        item:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2ContentItem"
        reidentifyConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2DeidentifyConfig"
        reidentifyTemplateName:
          description: >-
            Optional template to use. References an instance of
            `DeidentifyTemplate`.

            Any configuration directly specified in `reidentify_config` or

            `inspect_config` will override those set in the template. Singular fields

            that are set in this request will replace their corresponding fields in the

            template. Repeated fields are appended. Singular sub-messages and groups

            are recursively merged.
          type: string
      type: object
    GooglePrivacyDlpV2beta2ReidentifyContentResponse:
      description: Results of re-identifying a item.
      properties:
        item:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2ContentItem"
        overview:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2TransformationOverview"
      type: object
    GooglePrivacyDlpV2beta2ReplaceValueConfig:
      description: Replace each input value with a given `Value`.
      properties:
        newValue:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Value"
      type: object
    GooglePrivacyDlpV2beta2ReplaceWithInfoTypeConfig:
      description: Replace each matching finding with the name of the info_type.
      properties: {}
      type: object
    GooglePrivacyDlpV2beta2RequestedOptions:
      properties:
        jobConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InspectJobConfig"
        snapshotInspectTemplate:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InspectTemplate"
      type: object
    GooglePrivacyDlpV2beta2Result:
      properties:
        infoTypeStats:
          description: |-
            Statistics of how many instances of each info type were found during
            inspect job.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InfoTypeStatistics"
          type: array
        processedBytes:
          description: Total size in bytes that were processed.
          format: int64
          type: string
        totalEstimatedBytes:
          description: Estimate of the number of bytes to process.
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2beta2RiskAnalysisJobConfig:
      description: Configuration for a risk analysis job.
      properties:
        actions:
          description: >-
            Actions to execute at the completion of the job. Are executed in the
            order

            provided.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Action"
          type: array
        privacyMetric:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2PrivacyMetric"
        sourceTable:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2BigQueryTable"
      type: object
    GooglePrivacyDlpV2beta2Row:
      properties:
        values:
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Value"
          type: array
      type: object
    GooglePrivacyDlpV2beta2SaveFindings:
      description: |-
        If set, the detailed findings will be persisted to the specified
        OutputStorageConfig. Compatible with: Inspect
      properties:
        outputConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2OutputStorageConfig"
      type: object
    GooglePrivacyDlpV2beta2Schedule:
      description: Schedule for triggeredJobs.
      properties:
        reccurrencePeriodDuration:
          description: |-
            With this option a job is started a regular periodic basis. For
            example: every 10 minutes.

            A scheduled start time will be skipped if the previous
            execution has not ended when its scheduled time occurs.

            This value must be set to a time duration greater than or equal
            to 60 minutes and can be no longer than 60 days.
          format: google-duration
          type: string
      type: object
    GooglePrivacyDlpV2beta2StorageConfig:
      description: Shared message indicating Cloud storage type.
      properties:
        bigQueryOptions:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2BigQueryOptions"
        cloudStorageOptions:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2CloudStorageOptions"
        datastoreOptions:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2DatastoreOptions"
        timespanConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2TimespanConfig"
      type: object
    GooglePrivacyDlpV2beta2SummaryResult:
      description: |-
        A collection that informs the user the number of times a particular
        `TransformationResultCode` and error details occurred.
      properties:
        code:
          enum:
            - TRANSFORMATION_RESULT_CODE_UNSPECIFIED
            - SUCCESS
            - ERROR
          type: string
        count:
          format: int64
          type: string
        details:
          description: |-
            A place for warnings or errors to show up if a transformation didn't
            work as expected.
          type: string
      type: object
    GooglePrivacyDlpV2beta2SurrogateType:
      description: >-
        Message for detecting output from deidentification transformations

        such as

        [`CryptoReplaceFfxFpeConfig`](/dlp/docs/reference/rest/v2beta1/content/deidentify#CryptoReplaceFfxFpeConfig).

        These types of transformations are

        those that perform pseudonymization, thereby producing a "surrogate" as

        output. This should be used in conjunction with a field on the

        transformation such as `surrogate_info_type`. This custom info type does

        not support the use of `detection_rules`.
      properties: {}
      type: object
    GooglePrivacyDlpV2beta2Table:
      description: Structured content to inspect. Up to 50,000 `Value`s per request allowed.
      properties:
        headers:
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2FieldId"
          type: array
        rows:
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Row"
          type: array
      type: object
    GooglePrivacyDlpV2beta2TableLocation:
      description: Location of a finding within a table.
      properties:
        rowIndex:
          description: The zero-based index of the row where the finding is located.
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2beta2TaggedField:
      description: A column with a semantic tag attached.
      properties:
        customTag:
          description: >-
            A column can be tagged with a custom tag. In this case, the user
            must

            indicate an auxiliary table that contains statistical information on

            the possible values of this column (below).
          type: string
        field:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2FieldId"
        inferred:
          $ref: "#/components/schemas/GoogleProtobufEmpty"
        infoType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InfoType"
      type: object
    GooglePrivacyDlpV2beta2TimePartConfig:
      description: |-
        For use with `Date`, `Timestamp`, and `TimeOfDay`, extract or preserve a
        portion of the value.
      properties:
        partToExtract:
          enum:
            - TIME_PART_UNSPECIFIED
            - YEAR
            - MONTH
            - DAY_OF_MONTH
            - DAY_OF_WEEK
            - WEEK_OF_YEAR
            - HOUR_OF_DAY
          type: string
      type: object
    GooglePrivacyDlpV2beta2TimeZone:
      properties:
        offsetMinutes:
          description: >-
            Set only if the offset can be determined. Positive for time ahead of
            UTC.

            E.g. For "UTC-9", this value is -540.
          format: int32
          type: integer
      type: object
    GooglePrivacyDlpV2beta2TimespanConfig:
      description: >-
        Configuration of the timespan of the items to include in scanning.

        Currently only supported when inspecting Google Cloud Storage and BigQuery.
      properties:
        enableAutoPopulationOfTimespanConfig:
          description: >-
            When the job is started by a JobTrigger we will automatically figure
            out

            a valid start_time to avoid scanning files that have not been modified

            since the last time the JobTrigger executed. This will be based on the

            time of the execution of the last run of the JobTrigger.
          type: boolean
        endTime:
          description: |-
            Exclude files newer than this value.
            If set to zero, no upper time limit is applied.
          format: google-datetime
          type: string
        startTime:
          description: Exclude files older than this value.
          format: google-datetime
          type: string
      type: object
    GooglePrivacyDlpV2beta2TransformationOverview:
      description: Overview of the modifications that occurred.
      properties:
        transformationSummaries:
          description: Transformations applied to the dataset.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2TransformationSummary"
          type: array
        transformedBytes:
          description: Total size in bytes that were transformed in some way.
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2beta2TransformationSummary:
      description: >-
        Summary of a single tranformation.

        Only one of 'transformation', 'field_transformation', or 'record_suppress'

        will be set.
      properties:
        field:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2FieldId"
        fieldTransformations:
          description: |-
            The field transformation that was applied.
            If multiple field transformations are requested for a single field,
            this list will contain all of them; otherwise, only one is supplied.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2FieldTransformation"
          type: array
        infoType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InfoType"
        recordSuppress:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2RecordSuppression"
        results:
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2beta2SummaryResult"
          type: array
        transformation:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2PrimitiveTransformation"
        transformedBytes:
          description: Total size in bytes that were transformed in some way.
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2beta2TransientCryptoKey:
      description: |-
        Use this to have a random data crypto key generated.
        It will be discarded after the request finishes.
      properties:
        name:
          description: >-
            Name of the key. [required]

            This is an arbitrary string used to differentiate different keys.

            A unique key is generated per name: two separate `TransientCryptoKey`

            protos share the same generated key if their names are the same.

            When the data crypto key is generated, this name is not used in any way

            (repeating the api call will result in a different key being generated).
          type: string
      type: object
    GooglePrivacyDlpV2beta2Trigger:
      description: What event needs to occur for a new job to be started.
      properties:
        schedule:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Schedule"
      type: object
    GooglePrivacyDlpV2beta2UnwrappedCryptoKey:
      description: |-
        Using raw keys is prone to security risks due to accidentally
        leaking the key. Choose another type of key if possible.
      properties:
        key:
          description: The AES 128/192/256 bit key. [required]
          format: byte
          type: string
      type: object
    GooglePrivacyDlpV2beta2UpdateDeidentifyTemplateRequest:
      description: Request message for UpdateDeidentifyTemplate.
      properties:
        deidentifyTemplate:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2DeidentifyTemplate"
        updateMask:
          description: Mask to control which fields get updated.
          format: google-fieldmask
          type: string
      type: object
    GooglePrivacyDlpV2beta2UpdateInspectTemplateRequest:
      description: Request message for UpdateInspectTemplate.
      properties:
        inspectTemplate:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2InspectTemplate"
        updateMask:
          description: Mask to control which fields get updated.
          format: google-fieldmask
          type: string
      type: object
    GooglePrivacyDlpV2beta2UpdateJobTriggerRequest:
      description: Request message for UpdateJobTrigger.
      properties:
        jobTrigger:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2JobTrigger"
        updateMask:
          description: Mask to control which fields get updated.
          format: google-fieldmask
          type: string
      type: object
    GooglePrivacyDlpV2beta2Value:
      description: |-
        Set of primitive values supported by the system.
        Note that for the purposes of inspection or transformation, the number
        of bytes considered to comprise a 'Value' is based on its representation
        as a UTF-8 encoded string. For example, if 'integer_value' is set to
        123456789, the number of bytes would be counted as 9, even though an
        int64 only holds up to 8 bytes of data.
      properties:
        booleanValue:
          type: boolean
        dateValue:
          $ref: "#/components/schemas/GoogleTypeDate"
        dayOfWeekValue:
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
          type: string
        floatValue:
          format: double
          type: number
        integerValue:
          format: int64
          type: string
        stringValue:
          type: string
        timeValue:
          $ref: "#/components/schemas/GoogleTypeTimeOfDay"
        timestampValue:
          format: google-datetime
          type: string
      type: object
    GooglePrivacyDlpV2beta2ValueFrequency:
      description: A value of a field, including its frequency.
      properties:
        count:
          description: How many times the value is contained in the field.
          format: int64
          type: string
        value:
          $ref: "#/components/schemas/GooglePrivacyDlpV2beta2Value"
      type: object
    GooglePrivacyDlpV2beta2WordList:
      description: Message defining a list of words or phrases to search for in the data.
      properties:
        words:
          description: >-
            Words or phrases defining the dictionary. The dictionary must
            contain

            at least one phrase and every phrase must contain at least 2 characters

            that are letters or digits. [required]
          items:
            type: string
          type: array
      type: object
    GoogleProtobufEmpty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated

        empty messages in your APIs. A typical example is to use it as the request

        or the response type of an API method. For instance:

            service Foo {
              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
            }

        The JSON representation for `Empty` is empty JSON object `{}`.
      properties: {}
      type: object
    GoogleRpcStatus:
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different

        programming environments, including REST APIs and RPC APIs. It is used by

        [gRPC](https://github.com/grpc). The error model is designed to be:


        - Simple to use and understand for most users

        - Flexible enough to meet unexpected needs


        # Overview


        The `Status` message contains three pieces of data: error code, error message,

        and error details. The error code should be an enum value of

        google.rpc.Code, but it may accept additional error codes if needed.  The

        error message should be a developer-facing English message that helps

        developers *understand* and *resolve* the error. If a localized user-facing

        error message is needed, put the localized message in the error details or

        localize it in the client. The optional error details may contain arbitrary

        information about the error. There is a predefined set of error detail types

        in the package `google.rpc` that can be used for common error conditions.


        # Language mapping


        The `Status` message is the logical representation of the error model, but it

        is not necessarily the actual wire format. When the `Status` message is

        exposed in different client libraries and different wire protocols, it can be

        mapped differently. For example, it will likely be mapped to some exceptions

        in Java, but more likely mapped to some error codes in C.


        # Other uses


        The error model and the `Status` message can be used in a variety of

        environments, either with or without APIs, to provide a

        consistent developer experience across different environments.


        Example uses of this error model include:


        - Partial errors. If a service needs to return partial errors to the client,
            it may embed the `Status` in the normal response to indicate the partial
            errors.

        - Workflow errors. A typical workflow has multiple steps. Each step may
            have a `Status` message for error reporting.

        - Batch operations. If a client uses batch request and batch response, the
            `Status` message should be used directly inside batch response, one for
            each error sub-response.

        - Asynchronous operations. If an API call embeds asynchronous operation
            results in its response, the status of those operations should be
            represented directly using the `Status` message.

        - Logging. If some API errors are stored in logs, the message `Status` could
            be used directly after any stripping needed for security/privacy reasons.
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: >-
            A list of messages that carry the error details.  There is a common
            set of

            message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: |-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    GoogleTypeDate:
      description: >-
        Represents a whole calendar date, e.g. date of birth. The time of day
        and

        time zone are either specified elsewhere or are not significant. The date

        is relative to the Proleptic Gregorian Calendar. The day may be 0 to

        represent a year and month where the day is not significant, e.g. credit card

        expiration date. The year may be 0 to represent a month and day independent

        of year, e.g. anniversary date. Related types are google.type.TimeOfDay

        and `google.protobuf.Timestamp`.
      properties:
        day:
          description: >-
            Day of month. Must be from 1 to 31 and valid for the year and month,
            or 0

            if specifying a year/month where the day is not significant.
          format: int32
          type: integer
        month:
          description: >-
            Month of year. Must be from 1 to 12, or 0 if specifying a date
            without a

            month.
          format: int32
          type: integer
        year:
          description: >-
            Year of date. Must be from 1 to 9999, or 0 if specifying a date
            without

            a year.
          format: int32
          type: integer
      type: object
    GoogleTypeTimeOfDay:
      description: >-
        Represents a time of day. The date and time zone are either not
        significant

        or are specified elsewhere. An API may choose to allow leap seconds. Related

        types are google.type.Date and `google.protobuf.Timestamp`.
      properties:
        hours:
          description: >-
            Hours of day in 24 hour format. Should be from 0 to 23. An API may
            choose

            to allow the value "24:00:00" for scenarios like business closing time.
          format: int32
          type: integer
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          format: int32
          type: integer
        nanos:
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          format: int32
          type: integer
        seconds:
          description: >-
            Seconds of minutes of the time. Must normally be from 0 to 59. An
            API may

            allow the value 60 if it allows leap-seconds.
          format: int32
          type: integer
      type: object
