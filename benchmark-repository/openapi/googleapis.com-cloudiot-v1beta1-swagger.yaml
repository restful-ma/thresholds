openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: >
    Registers and manages IoT (Internet of Things) devices that connect to the
    Google Cloud Platform.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Google Cloud IoT
  version: v1beta1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.6.0
      format: google
      url: https://cloudiot.googleapis.com/$discovery/rest?version=v1beta1
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: cloudiot
externalDocs:
  url: https://cloud.google.com/iot
tags:
  - name: projects
paths:
  "/v1beta1/{name}":
    delete:
      description: Deletes a device.
      operationId: cloudiot.projects.locations.registries.devices.delete
      parameters:
        - description: >-
            The name of the device. For example,

            `projects/p0/locations/us-central1/registries/registry0/devices/device0` or

            `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Empty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
    get:
      description: Gets details about a device.
      operationId: cloudiot.projects.locations.registries.devices.get
      parameters:
        - description: >-
            The name of the device. For example,

            `projects/p0/locations/us-central1/registries/registry0/devices/device0` or

            `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Device"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    patch:
      description: Updates a device.
      operationId: cloudiot.projects.locations.registries.devices.patch
      parameters:
        - description: >-
            The resource path name. For example,

            `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or

            `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`.

            When `name` is populated as a response from the service, it always ends

            in the device numeric ID.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            Only updates the `device` fields indicated by this mask.

            The field mask must not be empty, and it must not contain fields that

            are immutable or only set by the server.

            Mutable top-level fields: `credentials` and `enabled_state`
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Device"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Device"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
  "/v1beta1/{name}/configVersions":
    get:
      description: |-
        Lists the last few versions of the device configuration in descending
        order (i.e.: newest first).
      operationId: cloudiot.projects.locations.registries.devices.configVersions.list
      parameters:
        - description: >-
            The name of the device. For example,

            `projects/p0/locations/us-central1/registries/registry0/devices/device0` or

            `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: >-
            The number of versions to list. Versions are listed in decreasing
            order of

            the version number. The maximum number of versions retained is 10. If this

            value is zero, it will return all the versions available.
          in: query
          name: numVersions
          schema:
            type: integer
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListDeviceConfigVersionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v1beta1/{name}:modifyCloudToDeviceConfig":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Modifies the configuration for the device, which is eventually sent from

        the Cloud IoT servers. Returns the modified configuration version and its

        meta-data.
      operationId: cloudiot.projects.locations.registries.devices.modifyCloudToDeviceConfig
      parameters:
        - description: >-
            The name of the device. For example,

            `projects/p0/locations/us-central1/registries/registry0/devices/device0` or

            `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModifyCloudToDeviceConfigRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DeviceConfig"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
  "/v1beta1/{parent}/devices":
    get:
      description: List devices in a device registry.
      operationId: cloudiot.projects.locations.registries.devices.list
      parameters:
        - description: >-
            A list of device string identifiers. If empty, it will ignore this
            field.

            For example, `['device0', 'device12']`. This field cannot hold more than

            10,000 entries.
          in: query
          name: deviceIds
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            A list of device numerical ids. If empty, it will ignore this field.
            This

            field cannot hold more than 10,000 entries.
          in: query
          name: deviceNumIds
          explode: true
          schema:
            type: array
            items:
              type: string
        - description: >-
            The fields of the `Device` resource to be returned in the response.
            The

            fields `id`, and `num_id` are always returned by default, along with any

            other fields specified.
          in: query
          name: fieldMask
          schema:
            type: string
        - description: >-
            The maximum number of devices to return in the response. If this
            value

            is zero, the service will select a default size. A call may return fewer

            objects than requested, but if there is a non-empty `page_token`, it

            indicates that more entries are available.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            The value returned by the last `ListDevicesResponse`; indicates
            that this is a continuation of a prior `ListDevices` call, and
            that the system should return the next page of data.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            The device registry path. Required. For example,
            `projects/my-project/locations/us-central1/registries/my-registry`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListDevicesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Creates a device in a device registry.
      operationId: cloudiot.projects.locations.registries.devices.create
      parameters:
        - description: >-
            The name of the device registry where this device should be created.

            For example,

            `projects/example-project/locations/us-central1/registries/my-registry`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Device"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Device"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
  "/v1beta1/{parent}/registries":
    get:
      description: Lists device registries.
      operationId: cloudiot.projects.locations.registries.list
      parameters:
        - description: >-
            The maximum number of registries to return in the response. If this
            value

            is zero, the service will select a default size. A call may return fewer

            objects than requested, but if there is a non-empty `page_token`, it

            indicates that more entries are available.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: >-
            The value returned by the last `ListDeviceRegistriesResponse`;
            indicates

            that this is a continuation of a prior `ListDeviceRegistries` call, and

            that the system should return the next page of data.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            The project and cloud region path. For example,
            `projects/example-project/locations/us-central1`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ListDeviceRegistriesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: Creates a device registry that contains devices.
      operationId: cloudiot.projects.locations.registries.create
      parameters:
        - description: >-
            The project and cloud region where this device registry must be
            created.

            For example, `projects/example-project/locations/us-central1`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceRegistry"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/DeviceRegistry"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
  "/v1beta1/{resource}:getIamPolicy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Gets the access control policy for a resource.

        Returns an empty policy if the resource exists and does not have a policy

        set.
      operationId: cloudiot.projects.locations.registries.getIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetIamPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
  "/v1beta1/{resource}:setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.
      operationId: cloudiot.projects.locations.registries.setIamPolicy
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy is being specified.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetIamPolicyRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Policy"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
  "/v1beta1/{resource}:testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/bearer_token"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/pp"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Returns permissions that a caller has on the specified resource.
        If the resource does not exist, this will return an empty set of
        permissions, not a NOT_FOUND error.
      operationId: cloudiot.projects.locations.registries.testIamPermissions
      parameters:
        - description: >-
            REQUIRED: The resource for which the policy detail is being
            requested.

            See the operation documentation for the appropriate value for this field.
          in: path
          name: resource
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestIamPermissionsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloudiot
          Oauth2c:
            - https://www.googleapis.com/auth/cloudiot
      tags:
        - projects
servers:
  - url: https://cloudiot.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    bearer_token:
      description: OAuth bearer token.
      in: query
      name: bearer_token
      schema:
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    pp:
      description: Pretty-print response.
      in: query
      name: pp
      schema:
        type: boolean
        default: true
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  requestBodies:
    Device:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Device"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloudiot: Register and manage devices in the Google Cloud IoT service
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloudiot: Register and manage devices in the Google Cloud IoT service
  schemas:
    AuditConfig:
      description: >-
        Specifies the audit configuration for a service.

        The configuration determines which permission types are logged, and what

        identities, if any, are exempted from logging.

        An AuditConfig must have one or more AuditLogConfigs.


        If there are AuditConfigs for both `allServices` and a specific service,

        the union of the two AuditConfigs is used for that service: the log_types

        specified in each AuditConfig are enabled, and the exempted_members in each

        AuditConfig are exempted.


        Example Policy with multiple AuditConfigs:

            {
              "audit_configs": [
                {
                  "service": "allServices"
                  "audit_log_configs": [
                    {
                      "log_type": "DATA_READ",
                      "exempted_members": [
                        "user:foo@gmail.com"
                      ]
                    },
                    {
                      "log_type": "DATA_WRITE",
                    },
                    {
                      "log_type": "ADMIN_READ",
                    }
                  ]
                },
                {
                  "service": "fooservice.googleapis.com"
                  "audit_log_configs": [
                    {
                      "log_type": "DATA_READ",
                    },
                    {
                      "log_type": "DATA_WRITE",
                      "exempted_members": [
                        "user:bar@gmail.com"
                      ]
                    }
                  ]
                }
              ]
            }

        For fooservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ

        logging. It also exempts foo@gmail.com from DATA_READ logging, and

        bar@gmail.com from DATA_WRITE logging.
      properties:
        auditLogConfigs:
          description: |-
            The configuration for logging of each type of permission.
            Next ID: 4
          items:
            $ref: "#/components/schemas/AuditLogConfig"
          type: array
        exemptedMembers:
          items:
            type: string
          type: array
        service:
          description: |-
            Specifies a service that will be enabled for audit logging.
            For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
            `allServices` is a special value that covers all services.
          type: string
      type: object
    AuditLogConfig:
      description: |-
        Provides the configuration for logging a type of permissions.
        Example:

            {
              "audit_log_configs": [
                {
                  "log_type": "DATA_READ",
                  "exempted_members": [
                    "user:foo@gmail.com"
                  ]
                },
                {
                  "log_type": "DATA_WRITE",
                }
              ]
            }

        This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting
        foo@gmail.com from DATA_READ logging.
      properties:
        exemptedMembers:
          description: |-
            Specifies the identities that do not cause logging for this type of
            permission.
            Follows the same format of Binding.members.
          items:
            type: string
          type: array
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
      type: object
    Binding:
      description: Associates `members` with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/Expr"
        members:
          description: >+
            Specifies the identities requesting access for a Cloud Platform
            resource.

            `members` can have the following values:


            * `allUsers`: A special identifier that represents anyone who is
               on the internet; with or without a Google account.

            * `allAuthenticatedUsers`: A special identifier that represents anyone
               who is authenticated with a Google account or a service account.

            * `user:{emailid}`: An email address that represents a specific Google
               account. For example, `alice@gmail.com` or `joe@example.com`.


            * `serviceAccount:{emailid}`: An email address that represents a service
               account. For example, `my-other-app@appspot.gserviceaccount.com`.

            * `group:{emailid}`: An email address that represents a Google group.
               For example, `admins@example.com`.


            * `domain:{domain}`: A Google Apps domain name that represents all the
               users of that domain. For example, `google.com` or `example.com`.

          items:
            type: string
          type: array
        role:
          description: |-
            Role that is assigned to `members`.
            For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
            Required
          type: string
      type: object
    Device:
      description: The device resource.
      properties:
        config:
          $ref: "#/components/schemas/DeviceConfig"
        credentials:
          description: >-
            The credentials used to authenticate this device. To allow
            credential

            rotation without interruption, multiple device credentials can be bound to

            this device. No more than 3 credentials can be bound to a single device at

            a time.
          items:
            $ref: "#/components/schemas/DeviceCredential"
          type: array
        enabledState:
          description: >-
            If a device is disabled, communication from it will be blocked. Can
            be used

            to temporarily prevent the device from connecting if, for example, the

            sensor is generating bad data and needs maintenance.
          enum:
            - UNSPECIFIED_ENABLED_STATE
            - DEVICE_ENABLED
            - DEVICE_DISABLED
          type: string
        id:
          description: |-
            The user-defined device identifier. The device ID must be unique
            within a device registry.
          type: string
        lastConfigAckTime:
          description: >-
            [Output only] The last time a cloud-to-device config version
            acknowledgment

            was received from the device.
          format: google-datetime
          type: string
        lastErrorStatus:
          $ref: "#/components/schemas/Status"
        lastErrorTime:
          description: >-
            [Output only] The last time an error happened, e.g., failed to
            publish to

            Cloud Pub/Sub. This field is the timestamp of 'last_error_status'.
          format: google-datetime
          type: string
        lastEventTime:
          description: >-
            [Output only] The last time an event was received. Timestamps are

            periodically collected and written to storage; they may be stale by a few

            minutes.
          format: google-datetime
          type: string
        lastHeartbeatTime:
          description: >-
            [Output only] The last time a heartbeat was received. Timestamps are

            periodically collected and written to storage; they may be stale by a few

            minutes.
          format: google-datetime
          type: string
        name:
          description: >-
            The resource path name. For example,

            `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or

            `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`.

            When `name` is populated as a response from the service, it always ends

            in the device numeric ID.
          type: string
        numId:
          description: >-
            [Output only] A server-defined unique numeric ID for the device.
            This is a

            more compact way to identify devices, and it is globally unique.
          format: uint64
          type: string
      type: object
    DeviceConfig:
      description: The device configuration and its metadata. Eventually delivered to
        devices.
      properties:
        cloudUpdateTime:
          description: >-
            [Output only] The time when this version state was updated in the
            Cloud IoT

            Core service. This timestamp is set by the server.
          format: google-datetime
          type: string
        data:
          $ref: "#/components/schemas/DeviceConfigData"
        deviceAckTime:
          description: >-
            [Output only] The time when the Cloud IoT Core server received the

            acknowledgment from the device, indicating that the device has received

            this configuration version. If this field is not present, the device has

            not yet acknowledged that it received this version. Note that when sending

            the config to the device, there may have been many config versions on the

            Cloud IoT Core service while the device was disconnected; and on

            connection, only the latest version is sent to the device. Some of the

            versions may never be sent to the device, and therefore are never

            acknowledged. This timestamp is set by the Cloud IoT Core service.
          format: google-datetime
          type: string
        version:
          description: >-
            [Output only] The version of this update. The version number is
            assigned by

            the server, and is always greater than zero after device creation. The

            version must be zero on the `CreateDevice` request if a `config` is

            specified; the response of `CreateDevice` will always have a value of one.
          format: int64
          type: string
      type: object
    DeviceConfigData:
      description: The data for a device configuration. Only binary data is currently
        supported.
      properties:
        binaryData:
          description: The configuration sent to the device, as bytes.
          format: byte
          type: string
      type: object
    DeviceCredential:
      description: A server-stored device credential used for authentication.
      properties:
        expirationTime:
          description: >-
            [Optional] The time at which this credential becomes invalid. This

            credential will be ignored for new client authentication requests after

            this timestamp; however, it will not be automatically deleted.
          format: google-datetime
          type: string
        publicKey:
          $ref: "#/components/schemas/PublicKeyCredential"
      type: object
    DeviceRegistry:
      description: A container for a group of devices.
      properties:
        eventNotificationConfig:
          $ref: "#/components/schemas/NotificationConfig"
        id:
          description: The identifier of this device registry. For example, `myRegistry`.
          type: string
        mqttConfig:
          $ref: "#/components/schemas/MqttConfig"
        name:
          description: >-
            The resource path name. For example,

            `projects/example-project/locations/us-central1/registries/my-registry`.
          type: string
      type: object
    Empty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated

        empty messages in your APIs. A typical example is to use it as the request

        or the response type of an API method. For instance:

            service Foo {
              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
            }

        The JSON representation for `Empty` is empty JSON object `{}`.
      properties: {}
      type: object
    Expr:
      description: |-
        Represents an expression text. Example:

            title: "User account presence"
            description: "Determines whether the request has a user account"
            expression: "size(request.user) > 0"
      properties:
        description:
          description: >-
            An optional description of the expression. This is a longer text
            which

            describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: |-
            Textual representation of an expression in
            Common Expression Language syntax.

            The application context of the containing message determines which
            well-known feature set of CEL is supported.
          type: string
        location:
          description: >-
            An optional string indicating the location of the expression for
            error

            reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: |-
            An optional title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          type: string
      type: object
    GetIamPolicyRequest:
      description: Request message for `GetIamPolicy` method.
      properties: {}
      type: object
    ListDeviceConfigVersionsResponse:
      description: Response for `ListDeviceConfigVersions`.
      properties:
        deviceConfigs:
          description: >-
            The device configuration for the last few versions. Versions are
            listed

            in decreasing order, starting from the most recent one.
          items:
            $ref: "#/components/schemas/DeviceConfig"
          type: array
      type: object
    ListDeviceRegistriesResponse:
      description: Response for `ListDeviceRegistries`.
      properties:
        deviceRegistries:
          description: The registries that matched the query.
          items:
            $ref: "#/components/schemas/DeviceRegistry"
          type: array
        nextPageToken:
          description: >-
            If not empty, indicates that there may be more registries that match
            the

            request; this value should be passed in a new

            `ListDeviceRegistriesRequest`.
          type: string
      type: object
    ListDevicesResponse:
      description: Response for `ListDevices`.
      properties:
        devices:
          description: The devices that match the request.
          items:
            $ref: "#/components/schemas/Device"
          type: array
        nextPageToken:
          description: >-
            If not empty, indicates that there may be more devices that match
            the

            request; this value should be passed in a new `ListDevicesRequest`.
          type: string
      type: object
    ModifyCloudToDeviceConfigRequest:
      description: Request for `ModifyCloudToDeviceConfig`.
      properties:
        data:
          $ref: "#/components/schemas/DeviceConfigData"
        versionToUpdate:
          description: >-
            The version number to update. If this value is zero, it will not
            check the

            version number of the server and will always update the current version;

            otherwise, this update will fail if the version number found on the server

            does not match this version number. This is used to support multiple

            simultaneous updates without losing data.
          format: int64
          type: string
      type: object
    MqttConfig:
      description: The configuration of MQTT for a device registry.
      properties:
        mqttConfigState:
          description: >-
            If enabled, allows connections using the MQTT protocol. Otherwise
            any MQTT

            connection to this registry will fail.
          enum:
            - UNSPECIFIED_MQTT_STATE
            - MQTT_ENABLED
            - MQTT_DISABLED
          type: string
      type: object
    NotificationConfig:
      description: Configuration to forward messages such as telemetry events.
      properties:
        pubsubTopicName:
          description: |-
            A Cloud Pub/Sub topic name. For example,
            `projects/myProject/topics/deviceEvents`.
          type: string
      type: object
    Policy:
      description: >-
        Defines an Identity and Access Management (IAM) policy. It is used to

        specify access control policies for Cloud Platform resources.



        A `Policy` consists of a list of `bindings`. A `Binding` binds a list of

        `members` to a `role`, where the members can be user accounts, Google groups,

        Google domains, and service accounts. A `role` is a named list of permissions

        defined by IAM.


        **Example**

            {
              "bindings": [
                {
                  "role": "roles/owner",
                  "members": [
                    "user:mike@example.com",
                    "group:admins@example.com",
                    "domain:google.com",
                    "serviceAccount:my-other-app@appspot.gserviceaccount.com",
                  ]
                },
                {
                  "role": "roles/viewer",
                  "members": ["user:sean@example.com"]
                }
              ]
            }

        For a description of IAM and its features, see the

        [IAM developer's guide](https://cloud.google.com/iam).
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: "#/components/schemas/AuditConfig"
          type: array
        bindings:
          description: |-
            Associates a list of `members` to a `role`.
            `bindings` with no members will result in an error.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: >-
            `etag` is used for optimistic concurrency control as a way to help

            prevent simultaneous updates of a policy from overwriting each other.

            It is strongly suggested that systems make use of the `etag` in the

            read-modify-write cycle to perform policy updates in order to avoid race

            conditions: An `etag` is returned in the response to `getIamPolicy`, and

            systems are expected to put that etag in the request to `setIamPolicy` to

            ensure that their change will be applied to the same version of the policy.


            If no `etag` is provided in the call to `setIamPolicy`, then the existing

            policy is overwritten blindly.
          format: byte
          type: string
        iamOwned:
          type: boolean
        version:
          description: Version of the `Policy`. The default version is 0.
          format: int32
          type: integer
      type: object
    PublicKeyCredential:
      description: A public key format and data.
      properties:
        format:
          description: The format of the key.
          enum:
            - UNSPECIFIED_PUBLIC_KEY_FORMAT
            - RSA_X509_PEM
            - ES256_PEM
          type: string
        key:
          description: The key data.
          type: string
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: "#/components/schemas/Policy"
        updateMask:
          description: >-
            OPTIONAL: A FieldMask specifying which fields of the policy to
            modify. Only

            the fields in the mask will be modified. If no mask is provided, the

            following default mask is used:

            paths: "bindings, etag"

            This field is only used by Cloud IAM.
          format: google-fieldmask
          type: string
      type: object
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different

        programming environments, including REST APIs and RPC APIs. It is used by

        [gRPC](https://github.com/grpc). The error model is designed to be:


        - Simple to use and understand for most users

        - Flexible enough to meet unexpected needs


        # Overview


        The `Status` message contains three pieces of data: error code, error message,

        and error details. The error code should be an enum value of

        google.rpc.Code, but it may accept additional error codes if needed.  The

        error message should be a developer-facing English message that helps

        developers *understand* and *resolve* the error. If a localized user-facing

        error message is needed, put the localized message in the error details or

        localize it in the client. The optional error details may contain arbitrary

        information about the error. There is a predefined set of error detail types

        in the package `google.rpc` that can be used for common error conditions.


        # Language mapping


        The `Status` message is the logical representation of the error model, but it

        is not necessarily the actual wire format. When the `Status` message is

        exposed in different client libraries and different wire protocols, it can be

        mapped differently. For example, it will likely be mapped to some exceptions

        in Java, but more likely mapped to some error codes in C.


        # Other uses


        The error model and the `Status` message can be used in a variety of

        environments, either with or without APIs, to provide a

        consistent developer experience across different environments.


        Example uses of this error model include:


        - Partial errors. If a service needs to return partial errors to the client,
            it may embed the `Status` in the normal response to indicate the partial
            errors.

        - Workflow errors. A typical workflow has multiple steps. Each step may
            have a `Status` message for error reporting.

        - Batch operations. If a client uses batch request and batch response, the
            `Status` message should be used directly inside batch response, one for
            each error sub-response.

        - Asynchronous operations. If an API call embeds asynchronous operation
            results in its response, the status of those operations should be
            represented directly using the `Status` message.

        - Logging. If some API errors are stored in logs, the message `Status` could
            be used directly after any stripping needed for security/privacy reasons.
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: >-
            A list of messages that carry the error details.  There is a common
            set of

            message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: |-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: >-
            The set of permissions to check for the `resource`. Permissions with

            wildcards (such as '*' or 'storage.*') are not allowed. For more

            information see

            [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: |-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          items:
            type: string
          type: array
      type: object
