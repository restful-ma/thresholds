openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: Creates and manages users and groups for accessing Google Compute Engine
    virtual machines.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud User Accounts
  version: beta
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-logo:
    url: https://cloud.google.com/_static/images/new-gcp-logo.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.6.0
      format: google
      url: https://www.googleapis.com/discovery/v1/apis/clouduseraccounts/beta/rest
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: clouduseraccounts
externalDocs:
  url: https://cloud.google.com/compute/docs/access/user-accounts/api/latest/
tags:
  - name: globalAccountsOperations
  - name: groups
  - name: linux
  - name: users
paths:
  "/{project}/global/groups":
    get:
      description: Retrieves the list of groups contained within the specified project.
      operationId: clouduseraccounts.groups.list
      parameters:
        - description: >-
            Sets a filter expression for filtering listed resources, in the form
            filter={expression}. Your {expression} must be in the format:
            field_name comparison_string literal_string.


            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.


            For example, to filter for instances that do not have a name of example-instance, you would use filter=name ne example-instance.


            Compute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values.


            The Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            maximum: 500
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GroupList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts.readonly
      tags:
        - groups
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a Group resource in the specified project using the data
        included in the request.
      operationId: clouduseraccounts.groups.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Group"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts
      tags:
        - groups
  "/{project}/global/groups/{groupName}":
    delete:
      description: Deletes the specified Group resource.
      operationId: clouduseraccounts.groups.delete
      parameters:
        - description: Name of the Group resource to delete.
          in: path
          name: groupName
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts
      tags:
        - groups
    get:
      description: Returns the specified Group resource.
      operationId: clouduseraccounts.groups.get
      parameters:
        - description: Name of the Group resource to return.
          in: path
          name: groupName
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Group"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts.readonly
      tags:
        - groups
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/groups/{groupName}/addMember":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Adds users to the specified group.
      operationId: clouduseraccounts.groups.addMember
      parameters:
        - description: Name of the group for this request.
          in: path
          name: groupName
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupsAddMemberRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts
      tags:
        - groups
  "/{project}/global/groups/{groupName}/removeMember":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Removes users from the specified group.
      operationId: clouduseraccounts.groups.removeMember
      parameters:
        - description: Name of the group for this request.
          in: path
          name: groupName
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupsRemoveMemberRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts
      tags:
        - groups
  "/{project}/global/operations":
    get:
      description: Retrieves the list of operation resources contained within the specified
        project.
      operationId: clouduseraccounts.globalAccountsOperations.list
      parameters:
        - description: >-
            Sets a filter expression for filtering listed resources, in the form
            filter={expression}. Your {expression} must be in the format:
            field_name comparison_string literal_string.


            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.


            For example, to filter for instances that do not have a name of example-instance, you would use filter=name ne example-instance.


            Compute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values.


            The Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            maximum: 500
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OperationList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts.readonly
      tags:
        - globalAccountsOperations
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/operations/{operation}":
    delete:
      description: Deletes the specified operation resource.
      operationId: clouduseraccounts.globalAccountsOperations.delete
      parameters:
        - description: Name of the Operations resource to delete.
          in: path
          name: operation
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts
      tags:
        - globalAccountsOperations
    get:
      description: Retrieves the specified operation resource.
      operationId: clouduseraccounts.globalAccountsOperations.get
      parameters:
        - description: Name of the Operations resource to return.
          in: path
          name: operation
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts.readonly
      tags:
        - globalAccountsOperations
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/users":
    get:
      description: Retrieves a list of users contained within the specified project.
      operationId: clouduseraccounts.users.list
      parameters:
        - description: >-
            Sets a filter expression for filtering listed resources, in the form
            filter={expression}. Your {expression} must be in the format:
            field_name comparison_string literal_string.


            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.


            For example, to filter for instances that do not have a name of example-instance, you would use filter=name ne example-instance.


            Compute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values.


            The Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            maximum: 500
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/UserList"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts.readonly
      tags:
        - users
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Creates a User resource in the specified project using the data included
        in the request.
      operationId: clouduseraccounts.users.insert
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts
      tags:
        - users
  "/{project}/global/users/{user}":
    delete:
      description: Deletes the specified User resource.
      operationId: clouduseraccounts.users.delete
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the user resource to delete.
          in: path
          name: user
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts
      tags:
        - users
    get:
      description: Returns the specified User resource.
      operationId: clouduseraccounts.users.get
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the user resource to return.
          in: path
          name: user
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/User"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts.readonly
      tags:
        - users
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{project}/global/users/{user}/addPublicKey":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Adds a public key to the specified User resource with the data included
        in the request.
      operationId: clouduseraccounts.users.addPublicKey
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the user for this request.
          in: path
          name: user
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PublicKey"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts
      tags:
        - users
  "/{project}/global/users/{user}/removePublicKey":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Removes the specified public key from the user.
      operationId: clouduseraccounts.users.removePublicKey
      parameters:
        - description: The fingerprint of the public key to delete. Public keys are
            identified by their fingerprint, which is defined by RFC4716 to be
            the MD5 digest of the public key.
          in: query
          name: fingerprint
          required: true
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the user for this request.
          in: path
          name: user
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Operation"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts
      tags:
        - users
  "/{project}/zones/{zone}/authorizedKeysView/{user}":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Returns a list of authorized public keys for a specific user account.
      operationId: clouduseraccounts.linux.getAuthorizedKeysView
      parameters:
        - description: The fully-qualified URL of the virtual machine requesting the view.
          in: query
          name: instance
          required: true
          schema:
            type: string
        - description: Whether the view was requested as part of a user-initiated login.
          in: query
          name: login
          schema:
            type: boolean
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The user account for which you want to get a list of authorized
            public keys.
          in: path
          name: user
          required: true
          schema:
            type: string
        - description: Name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LinuxGetAuthorizedKeysViewResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts.readonly
      tags:
        - linux
  "/{project}/zones/{zone}/linuxAccountViews":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Retrieves a list of user accounts for an instance within a specific
        project.
      operationId: clouduseraccounts.linux.getLinuxAccountViews
      parameters:
        - description: >-
            Sets a filter expression for filtering listed resources, in the form
            filter={expression}. Your {expression} must be in the format:
            field_name comparison_string literal_string.


            The field_name is the name of the field you want to compare. Only atomic field types are supported (string, number, boolean). The comparison_string must be either eq (equals) or ne (not equals). The literal_string is the string value to filter to. The literal value must be valid for the type of field you are filtering by (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.


            For example, to filter for instances that do not have a name of example-instance, you would use filter=name ne example-instance.


            Compute Engine Beta API Only: If you use filtering in the Beta API, you can also filter on nested fields. For example, you could filter on instances that have set the scheduling.automaticRestart field to true. In particular, use filtering on nested fields to take advantage of instance labels to organize and filter results based on label values.


            The Beta API also supports filtering on multiple expressions by providing each separate expression within parentheses. For example, (scheduling.automaticRestart eq true) (zone eq us-central1-f). Multiple expressions are treated as AND expressions, meaning that resources must match all expressions to pass the filters.
          in: query
          name: filter
          schema:
            type: string
        - description: The fully-qualified URL of the virtual machine requesting the views.
          in: query
          name: instance
          required: true
          schema:
            type: string
        - description: The maximum number of results per page that should be returned. If
            the number of available results is larger than maxResults, Compute
            Engine returns a nextPageToken that can be used to get the next page
            of results in subsequent list requests.
          in: query
          name: maxResults
          schema:
            type: integer
            minimum: 0
            maximum: 500
            default: 500
        - description: >-
            Sorts list results by a certain order. By default, results are
            returned in alphanumerical order based on the resource name.


            You can also sort results in descending order based on the creation timestamp using orderBy="creationTimestamp desc". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.


            Currently, only sorting by name or creationTimestamp desc is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set pageToken to the nextPageToken
            returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name of the zone for this request.
          in: path
          name: zone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/LinuxGetLinuxAccountViewsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts
        - Oauth2:
            - https://www.googleapis.com/auth/cloud.useraccounts.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/cloud.useraccounts.readonly
      tags:
        - linux
servers:
  - url: https://www.googleapis.com/clouduseraccounts/beta/projects
components:
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
        default: json
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters. Overrides userIp if both are provided.
      in: query
      name: quotaUser
      schema:
        type: string
    userIp:
      description: IP address of the site where the request originates. Use this if you
        want to enforce per-user limits.
      in: query
      name: userIp
      schema:
        type: string
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloud.useraccounts: Manage your Google Cloud User Accounts
            https://www.googleapis.com/auth/cloud.useraccounts.readonly: View your Google Cloud User Accounts
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud Platform services
            https://www.googleapis.com/auth/cloud.useraccounts: Manage your Google Cloud User Accounts
            https://www.googleapis.com/auth/cloud.useraccounts.readonly: View your Google Cloud User Accounts
  schemas:
    AuthorizedKeysView:
      description: A list of authorized public keys for a user account.
      properties:
        keys:
          description: "[Output Only] The list of authorized public keys in SSH format."
          items:
            type: string
          type: array
        sudoer:
          description: "[Output Only] Whether the user has the ability to elevate on the
            instance that requested the authorized keys."
          type: boolean
      type: object
    Group:
      description: A Group resource.
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional textual description of the resource; provided by the
            client when the resource is created.
          type: string
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          format: uint64
          type: string
        kind:
          default: clouduseraccounts#group
          description: "[Output Only] Type of the resource. Always clouduseraccounts#group
            for groups."
          type: string
        members:
          description: "[Output Only] A list of URLs to User resources who belong to the
            group. Users may only be members of groups in the same project."
          items:
            type: string
          type: array
        name:
          description: Name of the resource; provided by the client when the resource is
            created.
          pattern: "[a-z][-a-z0-9_]{0,31}"
          type: string
        selfLink:
          description: "[Output Only] Server defined URL for the resource."
          type: string
      type: object
    GroupList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: "[Output Only] A list of Group resources."
          items:
            $ref: "#/components/schemas/Group"
          type: array
        kind:
          default: clouduseraccounts#groupList
          description: "[Output Only] Type of resource. Always clouduseraccounts#groupList
            for lists of groups."
          type: string
        nextPageToken:
          description: "[Output Only] A token used to continue a truncated list request."
          type: string
        selfLink:
          description: "[Output Only] Server defined URL for this resource."
          type: string
      type: object
    GroupsAddMemberRequest:
      properties:
        users:
          description: Fully-qualified URLs of the User resources to add.
          items:
            type: string
          type: array
      type: object
    GroupsRemoveMemberRequest:
      properties:
        users:
          description: Fully-qualified URLs of the User resources to remove.
          items:
            type: string
          type: array
      type: object
    LinuxAccountViews:
      description: A list of all Linux accounts for this project. This API is only used by
        Compute Engine virtual machines to get information about user accounts
        for a project or instance. Linux resources are read-only views into
        users and groups managed by the Compute Engine Accounts API.
      properties:
        groupViews:
          description: "[Output Only] A list of all groups within a project."
          items:
            $ref: "#/components/schemas/LinuxGroupView"
          type: array
        kind:
          default: clouduseraccounts#linuxAccountViews
          description: "[Output Only] Type of the resource. Always
            clouduseraccounts#linuxAccountViews for Linux resources."
          type: string
        userViews:
          description: "[Output Only] A list of all users within a project."
          items:
            $ref: "#/components/schemas/LinuxUserView"
          type: array
      type: object
    LinuxGetAuthorizedKeysViewResponse:
      properties:
        resource:
          $ref: "#/components/schemas/AuthorizedKeysView"
      type: object
    LinuxGetLinuxAccountViewsResponse:
      properties:
        resource:
          $ref: "#/components/schemas/LinuxAccountViews"
      type: object
    LinuxGroupView:
      description: A detailed view of a Linux group.
      properties:
        gid:
          description: "[Output Only] The Group ID."
          format: uint32
          type: integer
        groupName:
          description: "[Output Only] Group name."
          type: string
        members:
          description: "[Output Only] List of user accounts that belong to the group."
          items:
            type: string
          type: array
      type: object
    LinuxUserView:
      description: A detailed view of a Linux user account.
      properties:
        gecos:
          description: "[Output Only] The GECOS (user information) entry for this account."
          type: string
        gid:
          description: "[Output Only] User's default group ID."
          format: uint32
          type: integer
        homeDirectory:
          description: "[Output Only] The path to the home directory for this account."
          type: string
        shell:
          description: "[Output Only] The path to the login shell for this account."
          type: string
        uid:
          description: "[Output Only] User ID."
          format: uint32
          type: integer
        username:
          description: "[Output Only] The username of the account."
          type: string
      type: object
    Operation:
      description: An Operation resource, used to manage asynchronous API requests.
      properties:
        clientOperationId:
          description: "[Output Only] Reserved for future use."
          type: string
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: "[Output Only] A textual description of the operation, which is set
            when the operation is created."
          type: string
        endTime:
          description: "[Output Only] The time that this operation was completed. This
            value is in RFC3339 text format."
          type: string
        error:
          description: "[Output Only] If errors are generated during processing of the
            operation, this field will be populated."
          properties:
            errors:
              description: "[Output Only] The array of errors encountered while processing
                this operation."
              items:
                properties:
                  code:
                    description: "[Output Only] The error type identifier for this error."
                    type: string
                  location:
                    description: "[Output Only] Indicates the field in the request that
                      caused the error. This property is optional."
                    type: string
                  message:
                    description: "[Output Only] An optional, human-readable error message."
                    type: string
                type: object
              type: array
          type: object
        httpErrorMessage:
          description: "[Output Only] If the operation fails, this field contains the HTTP
            error message that was returned, such as NOT FOUND."
          type: string
        httpErrorStatusCode:
          description: "[Output Only] If the operation fails, this field contains the HTTP
            error status code that was returned. For example, a 404 means the
            resource was not found."
          format: int32
          type: integer
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          format: uint64
          type: string
        insertTime:
          description: "[Output Only] The time that this operation was requested. This
            value is in RFC3339 text format."
          type: string
        kind:
          default: clouduseraccounts#operation
          description: "[Output Only] Type of the resource. Always compute#operation for
            Operation resources."
          type: string
        name:
          description: "[Output Only] Name of the resource."
          type: string
        operationType:
          description: "[Output Only] The type of operation, such as insert, update, or
            delete, and so on."
          type: string
        progress:
          description: "[Output Only] An optional progress indicator that ranges from 0 to
            100. There is no requirement that this be linear or support any
            granularity of operations. This should not be used to guess when the
            operation will be complete. This number should monotonically
            increase as the operation progresses."
          format: int32
          type: integer
        region:
          description: "[Output Only] The URL of the region where the operation resides.
            Only available when performing regional operations."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        startTime:
          description: "[Output Only] The time that this operation was started by the
            server. This value is in RFC3339 text format."
          type: string
        status:
          description: "[Output Only] The status of the operation, which can be one of the
            following: PENDING, RUNNING, or DONE."
          enum:
            - DONE
            - PENDING
            - RUNNING
          type: string
        statusMessage:
          description: "[Output Only] An optional textual description of the current status
            of the operation."
          type: string
        targetId:
          description: "[Output Only] The unique target ID, which identifies a specific
            incarnation of the target resource."
          format: uint64
          type: string
        targetLink:
          description: "[Output Only] The URL of the resource that the operation modifies."
          type: string
        user:
          description: "[Output Only] User who requested the operation, for example:
            user@example.com."
          type: string
        warnings:
          description: "[Output Only] If warning messages are generated during processing
            of the operation, this field will be populated."
          items:
            properties:
              code:
                description: "[Output Only] A warning code, if applicable. For example,
                  Compute Engine returns NO_RESULTS_ON_PAGE if there are no
                  results in the response."
                enum:
                  - CLEANUP_FAILED
                  - DEPRECATED_RESOURCE_USED
                  - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                  - INJECTED_KERNELS_DEPRECATED
                  - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                  - NEXT_HOP_CANNOT_IP_FORWARD
                  - NEXT_HOP_INSTANCE_NOT_FOUND
                  - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                  - NEXT_HOP_NOT_RUNNING
                  - NOT_CRITICAL_ERROR
                  - NO_RESULTS_ON_PAGE
                  - REQUIRED_TOS_AGREEMENT
                  - RESOURCE_NOT_DELETED
                  - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                  - UNREACHABLE
                type: string
              data:
                description: >-
                  [Output Only] Metadata about this warning in key: value
                  format. For example:

                  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
                items:
                  properties:
                    key:
                      description: "[Output Only] A key that provides more detail on the
                        warning being returned. For example, for warnings where
                        there are no results in a list request for a particular
                        zone, this key might be scope and the key value might be
                        the zone name. Other examples might be a key indicating
                        a deprecated resource and a suggested replacement, or a
                        warning about invalid network settings (for example, if
                        an instance attempts to perform IP forwarding but is not
                        enabled for IP forwarding)."
                      type: string
                    value:
                      description: "[Output Only] A warning data value corresponding to the
                        key."
                      type: string
                  type: object
                type: array
              message:
                description: "[Output Only] A human-readable description of the warning
                  code."
                type: string
            type: object
          type: array
        zone:
          description: "[Output Only] The URL of the zone where the operation resides. Only
            available when performing per-zone operations."
          type: string
      type: object
    OperationList:
      description: Contains a list of Operation resources.
      properties:
        id:
          description: "[Output Only] The unique identifier for the resource. This
            identifier is defined by the server."
          type: string
        items:
          description: "[Output Only] A list of Operation resources."
          items:
            $ref: "#/components/schemas/Operation"
          type: array
        kind:
          default: clouduseraccounts#operationList
          description: "[Output Only] Type of resource. Always compute#operations for
            Operations resource."
          type: string
        nextPageToken:
          description: "[Output Only] This token allows you to get the next page of results
            for list requests. If the number of results is larger than
            maxResults, use the nextPageToken as a value for the query parameter
            pageToken in the next list request. Subsequent list requests will
            have their own nextPageToken to continue paging through the
            results."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for this resource."
          type: string
      type: object
    PublicKey:
      description: A public key for authenticating to guests.
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional textual description of the resource; provided by the
            client when the resource is created.
          type: string
        expirationTimestamp:
          description: Optional expiration timestamp. If provided, the timestamp must be in
            RFC3339 text format. If not provided, the public key never expires.
          type: string
        fingerprint:
          description: "[Output Only] The fingerprint of the key is defined by RFC4716 to
            be the MD5 digest of the public key."
          type: string
        key:
          description: Public key text in SSH format, defined by RFC4253 section 6.6.
          type: string
      type: object
    User:
      description: A User resource.
      properties:
        creationTimestamp:
          description: "[Output Only] Creation timestamp in RFC3339 text format."
          type: string
        description:
          description: An optional textual description of the resource; provided by the
            client when the resource is created.
          type: string
        groups:
          description: "[Output Only] A list of URLs to Group resources who contain the
            user. Users are only members of groups in the same project."
          items:
            type: string
          type: array
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          format: uint64
          type: string
        kind:
          default: clouduseraccounts#user
          description: "[Output Only] Type of the resource. Always clouduseraccounts#user
            for users."
          type: string
        name:
          description: Name of the resource; provided by the client when the resource is
            created.
          pattern: "[a-z][-a-z0-9_]{0,31}"
          type: string
        owner:
          description: Email address of account's owner. This account will be validated to
            make sure it exists. The email can belong to any domain, but it must
            be tied to a Google account.
          type: string
        publicKeys:
          description: "[Output Only] Public keys that this user may use to login."
          items:
            $ref: "#/components/schemas/PublicKey"
          type: array
        selfLink:
          description: "[Output Only] Server defined URL for the resource."
          type: string
      type: object
    UserList:
      properties:
        id:
          description: "[Output Only] Unique identifier for the resource; defined by the
            server."
          type: string
        items:
          description: "[Output Only] A list of User resources."
          items:
            $ref: "#/components/schemas/User"
          type: array
        kind:
          default: clouduseraccounts#userList
          description: "[Output Only] Type of resource. Always clouduseraccounts#userList
            for lists of users."
          type: string
        nextPageToken:
          description: "[Output Only] A token used to continue a truncated list request."
          type: string
        selfLink:
          description: "[Output Only] Server defined URL for this resource."
          type: string
      type: object
