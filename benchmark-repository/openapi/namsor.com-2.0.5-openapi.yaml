openapi: 3.0.1
servers:
  - description: namsor_v2
    url: https://v2.namsor.com/NamSorAPIv2
    variables: {}
info:
  contact:
    email: contact@namsor.com
    name: Namsor SAS
    url: http://www.namsor.com/
    x-twitter: gendreapp
  description: "NamSor API v2 : enpoints to process personal names (gender, cultural origin
    or ethnicity) in all alphabets or languages. Use GET methods for small
    tests, but prefer POST methods for higher throughput (batch processing of up
    to 100 names at a time). Need something you can't find here? We have many
    more features coming soon. Let us know, we'll do our best to add it! "
  license:
    name: NamSorAPI_Lic_v0.0.7
    url: https://v2.namsor.com/NamSorAPIv2/assets/pdf/201803_NamSor_API_Terms_v007.pdf
  title: NamSor API v2
  version: 2.0.5
  x-apisguru-categories:
    - text
  x-logo:
    url: https://twitter.com/gendreapp/profile_image?size=original
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: openapi
      url: https://v2.namsor.com/NamSorAPIv2/api2/openapi.json
      version: "3.0"
  x-providerName: namsor.com
externalDocs:
  description: NamSor API client SDKs v2 for Java, Python
  url: https://github.com/namsor
security:
  - api_key: []
tags:
  - description: "Personal names (anthroponyms) : gender, country origin/ethnicity,
      diaspora, US 'race'/ethniciy"
    name: personal
  - description: Social media and pseudonyms
    name: social
  - description: CHINESE special features
    name: chinese
  - description: Administrative, system management.
    name: admin
paths:
  "/api2/json/addCredits/{apiKey}/{usageCredits}/{userMessage}":
    get:
      operationId: addCredits
      parameters:
        - in: path
          name: apiKey
          required: true
          schema:
            type: string
        - in: path
          name: usageCredits
          required: true
          schema:
            format: int64
            type: integer
        - in: path
          name: userMessage
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemMetricsOut"
          description: Estimate new after applying credits.
        "401":
          description: Missing or incorrect API Key
      security:
        - api_key: []
      summary: Add usage credits to an API Key.
      tags:
        - admin
  "/api2/json/anonymize/{source}/{anonymized}":
    get:
      operationId: anonymize
      parameters:
        - in: path
          name: source
          required: true
          schema:
            type: string
        - in: path
          name: anonymized
          required: true
          schema:
            type: boolean
      responses:
        "200":
          description: Anonymization of a source.
        "401":
          description: Missing or incorrect API Key
      summary: Activate/deactivate anonymization for a source.
      tags:
        - admin
  /api2/json/apiServices:
    get:
      operationId: availableServices
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIPlansOut"
          description: Available services
        "401":
          description: Missing or incorrect token
      summary: List of API services and usage cost in Units (default is 1=ONE Unit).
      tags:
        - admin
  /api2/json/apiUsage:
    get:
      operationId: apiUsage
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIPeriodUsageOut"
          description: Print current API usage.
        "401":
          description: Missing or incorrect API Key
      security:
        - api_key: []
      summary: Print current API usage.
      tags:
        - admin
  /api2/json/apiUsageHistory:
    get:
      operationId: apiUsageHistory
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIPeriodUsageOut"
          description: Print historical API usage.
        "401":
          description: Missing or incorrect API Key
      security:
        - api_key: []
      summary: Print historical API usage.
      tags:
        - admin
  /api2/json/apiUsageHistoryAggregate:
    get:
      operationId: apiUsageHistoryAggregate
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIPeriodUsageOut"
          description: Print historical API usage.
        "401":
          description: Missing or incorrect API Key
      security:
        - api_key: []
      summary: Print historical API usage (in an aggregated view, by service, by
        day/hour/min).
      tags:
        - admin
  /api2/json/availablePlans:
    get:
      operationId: availablePlans_1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIPlansOut"
          description: Available plans
        "401":
          description: Missing or incorrect token
      summary: List all available plans in the default currency (usd).
      tags:
        - admin
  "/api2/json/availablePlans/{token}":
    get:
      operationId: availablePlans
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIPlansOut"
          description: Available plans
        "401":
          description: Missing or incorrect token
      summary: List all available plans in the user's preferred currency.
      tags:
        - admin
  /api2/json/billingCurrencies:
    get:
      operationId: billingCurrencies
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CurrenciesOut"
          description: The supported billing currencies.
        "401":
          description: Missing or incorrect token
      summary: List possible currency options for billing (USD, EUR, GBP, ...)
      tags:
        - admin
  "/api2/json/billingHistory/{token}":
    get:
      operationId: billingHistory
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingHistoryOut"
          description: The billing history
        "401":
          description: Missing or incorrect token
      summary: Read the history billing information (invoices paid via Stripe or
        manually).
      tags:
        - admin
  "/api2/json/billingInfo/{token}":
    get:
      operationId: billingInfo
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingInfoInOut"
          description: The current billing info
        "401":
          description: Missing or incorrect token
      summary: Read the billing information (company name, address, phone, vat ID)
      tags:
        - admin
  /api2/json/charge:
    post:
      operationId: charge
      requestBody:
        content:
          "*/*":
            schema:
              properties:
                stripeEmail:
                  type: string
                stripeToken:
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIKeyOut"
          description: A stripe customerID
        "401":
          description: Missing or incorrect email or payment token
      summary: Create a Stripe Customer, based on a payment card token (from secure
        StripeJS) and email.
      tags:
        - admin
  "/api2/json/chineseNameCandidates/{chineseSurnameLatin}/{chineseGivenNameLatin}":
    get:
      operationId: chineseNameCandidates
      parameters:
        - in: path
          name: chineseSurnameLatin
          required: true
          schema:
            type: string
        - in: path
          name: chineseGivenNameLatin
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RomanizedNameOut"
          description: A romanized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Identify Chinese name candidates, based on the romanized name ex. Wang
        Xiaoming
      tags:
        - chinese
  /api2/json/chineseNameCandidatesBatch:
    post:
      operationId: chineseNameCandidatesBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchFirstLastNameIn"
        description: A list of personal Chinese names in LATIN, firstName =
          chineseGivenName; lastName=chineseSurname
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchNameMatchCandidatesOut"
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Identify Chinese name candidates, based on the romanized name (firstName
        = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming
      tags:
        - chinese
  /api2/json/chineseNameCandidatesGenderBatch:
    post:
      operationId: chineseNameCandidatesGenderBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchFirstLastNameIn"
        description: A list of personal Chinese names in LATIN, firstName =
          chineseGivenName; lastName=chineseSurname
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchNameMatchCandidatesOut"
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Identify Chinese name candidates, based on the romanized name (firstName
        = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming.
      tags:
        - chinese
  "/api2/json/chineseNameGenderCandidates/{chineseSurnameLatin}/{chineseGivenNameLatin}/{knownGender}":
    get:
      operationId: chineseNameGenderCandidates
      parameters:
        - in: path
          name: chineseSurnameLatin
          required: true
          schema:
            type: string
        - in: path
          name: chineseGivenNameLatin
          required: true
          schema:
            type: string
        - in: path
          name: knownGender
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RomanizedNameOut"
          description: A romanized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Identify Chinese name candidates, based on the romanized name ex. Wang
        Xiaoming - having a known gender ('male' or 'female')
      tags:
        - chinese
  "/api2/json/chineseNameMatch/{chineseSurnameLatin}/{chineseGivenNameLatin}/{chineseName}":
    get:
      operationId: chineseNameMatch
      parameters:
        - in: path
          name: chineseSurnameLatin
          required: true
          schema:
            type: string
        - in: path
          name: chineseGivenNameLatin
          required: true
          schema:
            type: string
        - in: path
          name: chineseName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RomanizedNameOut"
          description: A romanized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Return a score for matching Chinese name ex. 王晓明 with a romanized name
        ex. Wang Xiaoming
      tags:
        - chinese
  /api2/json/chineseNameMatchBatch:
    post:
      operationId: chineseNameMatchBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchFirstLastNameIn"
        description: A list of personal Chinese names in LATIN, firstName =
          chineseGivenName; lastName=chineseSurname
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchNameMatchCandidatesOut"
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Identify Chinese name candidates, based on the romanized name (firstName
        = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming
      tags:
        - chinese
  "/api2/json/corporateKey/{apiKey}/{corporate}":
    get:
      operationId: corporateKey
      parameters:
        - in: path
          name: apiKey
          required: true
          schema:
            type: string
        - in: path
          name: corporate
          required: true
          schema:
            type: boolean
      responses:
        "200":
          description: API Key set to a corporate status.
        "401":
          description: Missing or incorrect API Key
      summary: Setting an API Key to a corporate status.
      tags:
        - admin
  "/api2/json/country/{personalNameFull}":
    get:
      operationId: country
      parameters:
        - in: path
          name: personalNameFull
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonalNameGeoOut"
          description: A origined name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: "[USES 10 UNITS] Infer the likely country of residence of a personal
        full name, or one surname. Assumes names as they are in the country of
        residence OR the country of origin."
      tags:
        - personal
  /api2/json/countryBatch:
    post:
      operationId: countryBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchPersonalNameIn"
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchPersonalNameGeoOut"
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: "[USES 10 UNITS] Infer the likely country of residence of up to 100
        personal full names, or surnames. Assumes names as they are in the
        country of residence OR the country of origin."
      tags:
        - personal
  "/api2/json/debugLevel/{logger}/{level}":
    get:
      operationId: debugLevel
      parameters:
        - in: path
          name: logger
          required: true
          schema:
            type: string
        - in: path
          name: level
          required: true
          schema:
            type: string
      responses:
        "401":
          description: Missing or incorrect API Key
      summary: Update debug level for a classifier
      tags:
        - admin
  "/api2/json/diaspora/{countryIso2}/{firstName}/{lastName}":
    get:
      operationId: diaspora
      parameters:
        - in: path
          name: countryIso2
          required: true
          schema:
            type: string
        - in: path
          name: firstName
          required: true
          schema:
            type: string
        - in: path
          name: lastName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirstLastNameDiasporaedOut"
          description: A diaspora / ethnicity for given name and geography.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: "[USES 20 UNITS] Infer the likely ethnicity/diaspora of a personal name,
        given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.)"
      tags:
        - personal
  /api2/json/diasporaBatch:
    post:
      operationId: diasporaBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchFirstLastNameGeoIn"
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchFirstLastNameDiasporaedOut"
          description: A list of diaspora / ethnicity given a name and residency.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: "[USES 20 UNITS] Infer the likely ethnicity/diaspora of up to 100
        personal names, given a country of residence ISO2 code (ex. US, CA, AU,
        NZ etc.)"
      tags:
        - personal
  /api2/json/flush:
    get:
      operationId: flush
      responses:
        "200":
          description: Shutdown AI.
        "401":
          description: Missing or incorrect API Key
      security:
        - api_key: []
      summary: Flush counters.
      tags:
        - admin
  "/api2/json/gender/{firstName}/{lastName}":
    get:
      operationId: gender
      parameters:
        - in: path
          name: firstName
          required: true
          schema:
            type: string
        - in: path
          name: lastName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirstLastNameGenderedOut"
          description: A genderized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely gender of a name.
      tags:
        - personal
  /api2/json/genderBatch:
    post:
      operationId: genderBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchFirstLastNameIn"
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchFirstLastNameGenderedOut"
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely gender of up to 100 names, detecting automatically the
        cultural context.
      tags:
        - personal
  "/api2/json/genderChineseName/{chineseName}":
    get:
      operationId: genderChineseName
      parameters:
        - in: path
          name: chineseName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonalNameGenderedOut"
          description: A genderized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely gender of a Chinese full name ex. 王晓明
      tags:
        - chinese
  /api2/json/genderChineseNameBatch:
    post:
      operationId: genderChineseNameBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchPersonalNameIn"
        description: A list of personal names, with a country ISO2 code
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchPersonalNameGenderedOut"
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely gender of up to 100 full names ex. 王晓明
      tags:
        - chinese
  "/api2/json/genderChineseNamePinyin/{chineseSurnameLatin}/{chineseGivenNameLatin}":
    get:
      operationId: genderChineseNamePinyin
      parameters:
        - in: path
          name: chineseSurnameLatin
          required: true
          schema:
            type: string
        - in: path
          name: chineseGivenNameLatin
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirstLastNameGenderedOut"
          description: A genderized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely gender of a Chinese name in LATIN (Pinyin).
      tags:
        - chinese
  /api2/json/genderChineseNamePinyinBatch:
    post:
      operationId: genderChineseNamePinyinBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchFirstLastNameIn"
        description: A list of names, with country code.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchFirstLastNameGenderedOut"
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin).
      tags:
        - chinese
  "/api2/json/genderFull/{fullName}":
    get:
      operationId: genderFull
      parameters:
        - in: path
          name: fullName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirstLastNameGenderedOut"
          description: A genderized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely gender of a full name, ex. John H. Smith
      tags:
        - personal
  /api2/json/genderFullBatch:
    post:
      operationId: genderFullBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchPersonalNameIn"
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchPersonalNameGenderedOut"
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely gender of up to 100 full names, detecting automatically
        the cultural context.
      tags:
        - personal
  "/api2/json/genderFullGeo/{fullName}/{countryIso2}":
    get:
      operationId: genderFullGeo
      parameters:
        - in: path
          name: fullName
          required: true
          schema:
            type: string
        - in: path
          name: countryIso2
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirstLastNameGenderedOut"
          description: A genderized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely gender of a full name, given a local context (ISO2
        country code).
      tags:
        - personal
  /api2/json/genderFullGeoBatch:
    post:
      operationId: genderFullGeoBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchPersonalNameGeoIn"
        description: A list of personal names, with a country ISO2 code
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchPersonalNameGenderedOut"
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely gender of up to 100 full names, with a given cultural
        context (country ISO2 code).
      tags:
        - personal
  "/api2/json/genderGeo/{firstName}/{lastName}/{countryIso2}":
    get:
      operationId: genderGeo
      parameters:
        - in: path
          name: firstName
          required: true
          schema:
            type: string
        - in: path
          name: lastName
          required: true
          schema:
            type: string
        - in: path
          name: countryIso2
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirstLastNameGenderedOut"
          description: A genderized name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely gender of a name, given a local context (ISO2 country
        code).
      tags:
        - personal
  /api2/json/genderGeoBatch:
    post:
      operationId: genderGeoBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchFirstLastNameGeoIn"
        description: A list of names, with country code.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchFirstLastNameGenderedOut"
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely gender of up to 100 names, each given a local context
        (ISO2 country code).
      tags:
        - personal
  /api2/json/invalidateCache:
    get:
      operationId: invalidateCache
      responses:
        "200":
          description: Clear caches.
        "401":
          description: Missing or incorrect API Key
      summary: Invalidate system caches.
      tags:
        - admin
  "/api2/json/learnable/{source}/{learnable}":
    get:
      operationId: learnable
      parameters:
        - in: path
          name: source
          required: true
          schema:
            type: string
        - in: path
          name: learnable
          required: true
          schema:
            type: boolean
      responses:
        "200":
          description: Vetting of a source.
        "401":
          description: Missing or incorrect API Key
      summary: Activate/deactivate learning from a source.
      tags:
        - admin
  /api2/json/namsorCounter:
    get:
      operationId: namsorCounter
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SoftwareVersionOut"
          description: The overall API counter
        "401":
          description: Missing or incorrect token
      summary: Get the overall API counter
      tags:
        - admin
  "/api2/json/origin/{firstName}/{lastName}":
    get:
      operationId: origin
      parameters:
        - in: path
          name: firstName
          required: true
          schema:
            type: string
        - in: path
          name: lastName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirstLastNameOriginedOut"
          description: A origined name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: "[USES 10 UNITS] Infer the likely country of origin of a personal name.
        Assumes names as they are in the country of origin. For US, CA, AU, NZ
        and other melting-pots : use 'diaspora' instead."
      tags:
        - personal
  /api2/json/originBatch:
    post:
      operationId: originBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchFirstLastNameIn"
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchFirstLastNameOriginedOut"
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: "[USES 10 UNITS] Infer the likely country of origin of up to 100 names,
        detecting automatically the cultural context."
      tags:
        - personal
  "/api2/json/parseChineseName/{chineseName}":
    get:
      operationId: parseChineseName
      parameters:
        - in: path
          name: chineseName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonalNameParsedOut"
          description: A origined name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely first/last name structure of a name, ex. 王晓明 ->
        王(surname) 晓明(given name)
      tags:
        - chinese
  /api2/json/parseChineseNameBatch:
    post:
      operationId: parseChineseNameBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchPersonalNameIn"
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchPersonalNameParsedOut"
          description: A list of parsed names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely first/last name structure of a name, ex. 王晓明 ->
        王(surname) 晓明(given name).
      tags:
        - chinese
  "/api2/json/parseName/{nameFull}":
    get:
      operationId: parseName
      parameters:
        - in: path
          name: nameFull
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonalNameParsedOut"
          description: A origined name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: "Infer the likely first/last name structure of a name, ex. John Smith or
        SMITH, John or SMITH; John. "
      tags:
        - personal
  "/api2/json/parseName/{nameFull}/{countryIso2}":
    get:
      operationId: parseNameGeo
      parameters:
        - in: path
          name: nameFull
          required: true
          schema:
            type: string
        - in: path
          name: countryIso2
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonalNameParsedOut"
          description: A origined name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely first/last name structure of a name, ex. John Smith or
        SMITH, John or SMITH; John. For better accuracy, provide a geographic
        context.
      tags:
        - personal
  /api2/json/parseNameBatch:
    post:
      operationId: parseNameBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchPersonalNameIn"
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchPersonalNameParsedOut"
          description: A list of parsed names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely first/last name structure of a name, ex. John Smith or
        SMITH, John or SMITH; John.
      tags:
        - personal
  /api2/json/parseNameGeoBatch:
    post:
      operationId: parseNameGeoBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchPersonalNameGeoIn"
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchPersonalNameParsedOut"
          description: A list of parsed names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: "Infer the likely first/last name structure of a name, ex. John Smith or
        SMITH, John or SMITH; John. Giving a local context improves precision. "
      tags:
        - personal
  /api2/json/parsedGenderBatch:
    post:
      operationId: parsedGenderBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchParsedFullNameIn"
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchFirstLastNameGenderedOut"
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely gender of up to 100 fully parsed names, detecting
        automatically the cultural context.
      tags:
        - personal
  /api2/json/parsedGenderGeoBatch:
    post:
      operationId: parsedGenderGeoBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchParsedFullNameGeoIn"
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchFirstLastNameGenderedOut"
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Infer the likely gender of up to 100 fully parsed names, detecting
        automatically the cultural context.
      tags:
        - personal
  "/api2/json/paymentInfo/{token}":
    get:
      operationId: paymentInfo
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIKeyOut"
          description: An session token
        "401":
          description: Missing or incorrect token
      summary: Get the Stripe payment information associated with the current google
        auth session token.
      tags:
        - admin
  "/api2/json/phoneCode/{firstName}/{lastName}/{phoneNumber}":
    get:
      operationId: phoneCode
      parameters:
        - in: path
          name: firstName
          required: true
          schema:
            type: string
        - in: path
          name: lastName
          required: true
          schema:
            type: string
        - in: path
          name: phoneNumber
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirstLastNamePhoneCodedOut"
          description: A name with country and phone code.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: "[USES 11 UNITS] Infer the likely country and phone prefix, given a
        personal name and formatted / unformatted phone number."
      tags:
        - social
  /api2/json/phoneCodeBatch:
    post:
      operationId: phoneCodeBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchFirstLastNamePhoneNumberIn"
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchFirstLastNamePhoneCodedOut"
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: "[USES 11 UNITS] Infer the likely country and phone prefix, of up to 100
        personal names, detecting automatically the local context given a name
        and formatted / unformatted phone number."
      tags:
        - social
  "/api2/json/phoneCodeGeo/{firstName}/{lastName}/{phoneNumber}/{countryIso2}":
    get:
      operationId: phoneCodeGeo
      parameters:
        - in: path
          name: firstName
          required: true
          schema:
            type: string
        - in: path
          name: lastName
          required: true
          schema:
            type: string
        - in: path
          name: phoneNumber
          required: true
          schema:
            type: string
        - in: path
          name: countryIso2
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirstLastNamePhoneCodedOut"
          description: A name with country and phone code.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: "[USES 11 UNITS] Infer the likely phone prefix, given a personal name
        and formatted / unformatted phone number, with a local context (ISO2
        country of residence)."
      tags:
        - social
  /api2/json/phoneCodeGeoBatch:
    post:
      operationId: phoneCodeGeoBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchFirstLastNamePhoneNumberGeoIn"
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchFirstLastNamePhoneCodedOut"
          description: A list of genderized names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: "[USES 11 UNITS] Infer the likely country and phone prefix, of up to 100
        personal names, with a local context (ISO2 country of residence)."
      tags:
        - social
  "/api2/json/phoneCodeGeoFeedbackLoop/{firstName}/{lastName}/{phoneNumber}/{phoneNumberE164}/{countryIso2}":
    get:
      operationId: phoneCodeGeoFeedbackLoop
      parameters:
        - in: path
          name: firstName
          required: true
          schema:
            type: string
        - in: path
          name: lastName
          required: true
          schema:
            type: string
        - in: path
          name: phoneNumber
          required: true
          schema:
            type: string
        - in: path
          name: phoneNumberE164
          required: true
          schema:
            type: string
        - in: path
          name: countryIso2
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirstLastNamePhoneCodedOut"
          description: A name with country and phone code.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix,
        given a personal name and formatted / unformatted phone number, with a
        local context (ISO2 country of residence)."
      tags:
        - social
  "/api2/json/pinyinChineseName/{chineseName}":
    get:
      operationId: pinyinChineseName
      parameters:
        - in: path
          name: chineseName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonalNameParsedOut"
          description: A pinyin name.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming
        (given name)
      tags:
        - chinese
  /api2/json/pinyinChineseNameBatch:
    post:
      operationId: pinyinChineseNameBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchPersonalNameIn"
        description: A list of Chinese names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchPersonalNameParsedOut"
          description: A list of Pinyin names.
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname)
        Xiaoming (given name).
      tags:
        - chinese
  "/api2/json/procureKey/{token}":
    get:
      operationId: procureKey
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIKeyOut"
          description: An API Key
        "401":
          description: Missing or incorrect token
      summary: Procure an API Key (sent via Email), based on an auth token. Keep your
        API Key secret.
      tags:
        - admin
  /api2/json/redeployUI:
    get:
      operationId: redeployUI_1
      responses:
        "200":
          description: Redeploy UI from DEV.
        "401":
          description: Missing or incorrect API Key
      security:
        - api_key: []
      summary: Redeploy UI from current dev branch.
      tags:
        - admin
  "/api2/json/redeployUI/{live}":
    get:
      operationId: redeployUI
      parameters:
        - in: path
          name: live
          required: true
          schema:
            type: boolean
      responses:
        "200":
          description: Redeploy UI from DEV.
        "401":
          description: Missing or incorrect API Key
      security:
        - api_key: []
      summary: Redeploy UI from current dev branch.
      tags:
        - admin
  "/api2/json/removeUserAccount/{token}":
    get:
      operationId: removeUserAccount
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIPlanSubscriptionOut"
          description: An API subscription
        "401":
          description: Missing or incorrect token
      summary: Remove the user account.
      tags:
        - admin
  "/api2/json/removeUserAccountOnBehalf/{apiKey}":
    get:
      operationId: removeUserAccountOnBehalf
      parameters:
        - in: path
          name: apiKey
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIPlanSubscriptionOut"
          description: An API subscription
        "401":
          description: Missing or incorrect token
      summary: Remove (on behalf) a user account.
      tags:
        - admin
  /api2/json/shutdown:
    get:
      operationId: shutdown
      responses:
        "200":
          description: Shutdown AI.
        "401":
          description: Missing or incorrect API Key
      security:
        - api_key: []
      summary: Stop learning and shutdown system.
      tags:
        - admin
  /api2/json/softwareVersion:
    get:
      operationId: softwareVersion
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SoftwareVersionOut"
          description: The current software version
        "401":
          description: Missing or incorrect token
      summary: Get the current software version
      tags:
        - admin
  "/api2/json/sourceStats/{source}":
    get:
      operationId: sourceStats
      parameters:
        - in: path
          name: source
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemMetricsOut"
          description: Current system status.
        "401":
          description: Missing or incorrect API Key
      security:
        - api_key: []
      summary: Print basic source statistics.
      tags:
        - admin
  /api2/json/stats:
    get:
      operationId: stats
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemMetricsOut"
          description: Current system status.
        "401":
          description: Missing or incorrect API Key
      security:
        - api_key: []
      summary: Print basic system statistics.
      tags:
        - admin
  /api2/json/stripeConnect:
    get:
      operationId: stripeConnect
      parameters:
        - in: query
          name: scope
          schema:
            type: string
        - in: query
          name: code
          schema:
            type: string
        - in: query
          name: error
          schema:
            type: string
        - in: query
          name: error_description
          schema:
            type: string
      responses:
        "401":
          description: Missing or incorrect email or payment token
      summary: Connects a Stripe Account.
      tags:
        - admin
  "/api2/json/subscribePlan/{planName}/{token}":
    get:
      operationId: subscribePlan
      parameters:
        - in: path
          name: planName
          required: true
          schema:
            type: string
        - in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIPlanSubscriptionOut"
          description: An API subscription
        "401":
          description: Missing or incorrect token
      summary: Subscribe to a give API plan, using the user's preferred or default
        currency.
      tags:
        - admin
  "/api2/json/subscribePlanOnBehalf/{planName}/{apiKey}":
    get:
      operationId: subscribePlanOnBehalf
      parameters:
        - in: path
          name: planName
          required: true
          schema:
            type: string
        - in: path
          name: apiKey
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIPlanSubscriptionOut"
          description: An API subscription
        "401":
          description: Missing or incorrect token
      summary: Subscribe to a give API plan, using the user's preferred or default
        currency (admin only).
      tags:
        - admin
  "/api2/json/updateBillingInfo/{token}":
    post:
      operationId: updateBillingInfo
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: "#/components/schemas/BillingInfoInOut"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BillingInfoInOut"
          description: The updated billing info
        "401":
          description: Missing or incorrect token
      summary: Sets or update the billing information (company name, address, phone,
        vat ID)
      tags:
        - admin
  "/api2/json/updateLimit/{usageLimit}/{hardOrSoft}/{token}":
    get:
      operationId: updateLimit
      parameters:
        - in: path
          name: usageLimit
          required: true
          schema:
            format: int32
            type: integer
        - in: path
          name: hardOrSoft
          required: true
          schema:
            type: boolean
        - in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIPeriodUsageOut"
          description: An API subscription
        "401":
          description: Missing or incorrect token
      summary: Modifies the hard/soft limit on the API plan's overages (default is 0$
        soft limit).
      tags:
        - admin
  "/api2/json/updatePaymentDefault/{defautSourceId}/{token}":
    get:
      operationId: updatePaymentDefault
      parameters:
        - in: path
          name: defautSourceId
          required: true
          schema:
            type: string
        - in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIKeyOut"
          description: An session token
        "401":
          description: Missing or incorrect token
      summary: Update the default Stripe card associated with the current google auth
        session token.
      tags:
        - admin
  "/api2/json/usRaceEthnicity/{firstName}/{lastName}":
    get:
      operationId: usRaceEthnicity
      parameters:
        - in: path
          name: firstName
          required: true
          schema:
            type: string
        - in: path
          name: lastName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirstLastNameUSRaceEthnicityOut"
          description: "a US resident's likely race/ethnicity : W_NL (white, non latino),
            HL (hispano latino),  A (asian, non latino), B_NL (black, non
            latino)."
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: "[USES 10 UNITS] Infer a US resident's likely race/ethnicity according
        to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A
        (asian, non latino), B_NL (black, non latino)."
      tags:
        - personal
  /api2/json/usRaceEthnicityBatch:
    post:
      operationId: usRaceEthnicityBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchFirstLastNameGeoIn"
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchFirstLastNameUSRaceEthnicityOut"
          description: A list of US resident's likely race/ethnicity. W_NL (white, non
            latino), HL (hispano latino),  A (asian, non latino), B_NL (black,
            non latino).
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: "[USES 10 UNITS] Infer up-to 100 US resident's likely race/ethnicity
        according to US Census taxonomy."
      tags:
        - personal
  "/api2/json/usRaceEthnicityZIP5/{firstName}/{lastName}/{zip5Code}":
    get:
      operationId: usRaceEthnicityZIP5
      parameters:
        - in: path
          name: firstName
          required: true
          schema:
            type: string
        - in: path
          name: lastName
          required: true
          schema:
            type: string
        - in: path
          name: zip5Code
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirstLastNameUSRaceEthnicityOut"
          description: "a US resident's likely race/ethnicity : W_NL (white, non latino),
            HL (hispano latino),  A (asian, non latino), B_NL (black, non
            latino)."
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: "[USES 10 UNITS] Infer a US resident's likely race/ethnicity according
        to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL
        (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL
        (black, non latino)."
      tags:
        - personal
  /api2/json/usZipRaceEthnicityBatch:
    post:
      operationId: usZipRaceEthnicityBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchFirstLastNameGeoZippedIn"
        description: A list of personal names
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchFirstLastNameUSRaceEthnicityOut"
          description: A list of US resident's likely race/ethnicity. W_NL (white, non
            latino), HL (hispano latino),  A (asian, non latino), B_NL (black,
            non latino).
        "401":
          description: Missing or incorrect API Key
        "403":
          description: API Limit Reached or API Key Disabled
      security:
        - api_key: []
      summary: "[USES 10 UNITS] Infer up-to 100 US resident's likely race/ethnicity
        according to US Census taxonomy, with (optional) ZIP code."
      tags:
        - personal
  "/api2/json/userInfo/{token}":
    get:
      operationId: userInfo
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIKeyOut"
          description: An session token
        "401":
          description: Missing or incorrect token
      summary: Get the user profile associated with the current google auth session
        token.
      tags:
        - admin
  "/api2/json/verifyEmail/{emailToken}":
    get:
      operationId: verifyEmail
      parameters:
        - in: path
          name: emailToken
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIKeyOut"
          description: An API Key
        "401":
          description: Missing or incorrect token
      summary: Verifies an email, based on token sent to that email
      tags:
        - admin
  "/api2/json/verifyRemoveEmail/{emailToken}":
    get:
      operationId: verifyRemoveEmail
      parameters:
        - in: path
          name: emailToken
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/APIKeyOut"
          description: An API Key
        "401":
          description: Missing or incorrect token
      summary: Verifies an email, based on token sent to that email
      tags:
        - admin
  "/api2/json/vetting/{source}/{vetted}":
    get:
      operationId: vet
      parameters:
        - in: path
          name: source
          required: true
          schema:
            type: string
        - in: path
          name: vetted
          required: true
          schema:
            type: boolean
      responses:
        "200":
          description: Vetting of a source.
        "401":
          description: Missing or incorrect API Key
      summary: Vetting of a source.
      tags:
        - admin
components:
  schemas:
    APIBillingPeriodUsageOut:
      properties:
        apiKey:
          type: string
        billingStatus:
          type: string
        hardLimit:
          format: int64
          type: integer
        periodEnded:
          format: int64
          type: integer
        periodStarted:
          format: int64
          type: integer
        softLimit:
          format: int64
          type: integer
        stripeCurrentPeriodEnd:
          format: int64
          type: integer
        stripeCurrentPeriodStart:
          format: int64
          type: integer
        subscriptionStarted:
          format: int64
          type: integer
        usage:
          format: int64
          type: integer
      type: object
      xml:
        name: APIBillingPeriodUsageOut
    APICounterV2Out:
      properties:
        apiKey:
          $ref: "#/components/schemas/APIKeyOut"
        apiService:
          type: string
        createdDateTime:
          format: int64
          type: integer
        lastFlushedDateTime:
          format: int64
          type: integer
        lastUsedDateTime:
          format: int64
          type: integer
        serviceFeaturesUsage:
          additionalProperties:
            format: int64
            type: integer
          type: object
        totalUsage:
          format: int64
          type: integer
      type: object
      xml:
        name: APICallStatOut
    APIKeyOut:
      properties:
        admin:
          type: boolean
        anonymized:
          type: boolean
        apiKey:
          type: string
          xml:
            name: api_key
        corporate:
          type: boolean
        disabled:
          type: boolean
        learnable:
          type: boolean
        partner:
          type: boolean
        striped:
          type: boolean
        userId:
          type: string
        vetted:
          type: boolean
      type: object
      xml:
        name: APIKeyOut
    APIPeriodUsageOut:
      properties:
        billingPeriod:
          $ref: "#/components/schemas/APIBillingPeriodUsageOut"
        overageCurrency:
          type: string
        overageExclTax:
          format: double
          type: number
        overageInclTax:
          format: double
          type: number
        overageQuantity:
          format: int64
          type: integer
        subscription:
          $ref: "#/components/schemas/APIPlanSubscriptionOut"
      type: object
      xml:
        name: APICurrentUsageOut
    APIPlanOut:
      properties:
        planName:
          type: string
        planQuota:
          format: int64
          type: integer
        price:
          format: double
          type: number
        priceOverage:
          format: double
          type: number
      type: object
      xml:
        name: APIPlanOut
    APIPlanSubscriptionOut:
      properties:
        apiKey:
          type: string
        currency:
          type: string
        currencyFactor:
          format: double
          type: number
        planBaseFeesKey:
          type: string
        planEnded:
          format: int64
          type: integer
        planName:
          type: string
        planQuota:
          format: int64
          type: integer
        planStarted:
          format: int64
          type: integer
        planStatus:
          type: string
        price:
          format: double
          type: number
        priceOverage:
          format: double
          type: number
        priceOverageUSD:
          format: double
          type: number
        priceUSD:
          format: double
          type: number
        priorPlanStarted:
          format: int64
          type: integer
        stripeCustomerId:
          type: string
        stripeStatus:
          type: string
        stripeSubscription:
          type: string
        taxRate:
          format: double
          type: number
        userId:
          type: string
      type: object
      xml:
        name: APIPlanSubscriptionOut
    APIPlansOut:
      properties:
        currencyIso3:
          type: string
        currencySymbol:
          type: string
        plans:
          items:
            $ref: "#/components/schemas/APIPlanOut"
          type: array
        usageRatioForDupplicates:
          format: int64
          type: integer
      type: object
      xml:
        name: APIPlansOut
    APIServiceOut:
      properties:
        costInUnits:
          format: int32
          type: integer
        serviceGroup:
          type: string
        serviceName:
          type: string
      type: object
      xml:
        name: APIServiceOut
    APIServicesOut:
      properties:
        apiServices:
          items:
            $ref: "#/components/schemas/APIServiceOut"
          type: array
      type: object
      xml:
        name: APIServicesOut
    APIUsageAggregatedOut:
      properties:
        colHeaders:
          items:
            type: string
          type: array
        data:
          items:
            items:
              format: int32
              type: integer
            type: array
          type: array
        historyTruncated:
          type: boolean
        periodEnd:
          format: int64
          type: integer
        periodStart:
          format: int64
          type: integer
        rowHeaders:
          items:
            type: string
          type: array
        timeUnit:
          type: string
        totalUsage:
          format: int64
          type: integer
      type: object
      xml:
        name: APIUsageAggregatedOut
    BatchFirstLastNameDiasporaedOut:
      description: Represents the output of inferring the LIKELY ethnicity from a personal
        name, given an country of residence.
      properties:
        personalNames:
          items:
            $ref: "#/components/schemas/FirstLastNameDiasporaedOut"
          type: array
      type: object
      xml:
        name: BatchFirstLastNameDiasporaedOut
    BatchFirstLastNameGenderIn:
      properties:
        personalNames:
          items:
            $ref: "#/components/schemas/FirstLastNameGenderIn"
          type: array
      type: object
      xml:
        name: BatchFirstLastNameGenderIn
    BatchFirstLastNameGenderedOut:
      description: Represents the output of inferring the LIKELY gender from a list of
        personal names.
      properties:
        personalNames:
          items:
            $ref: "#/components/schemas/FirstLastNameGenderedOut"
          type: array
      type: object
      xml:
        name: BatchFirstLastNameGenderedOut
    BatchFirstLastNameGeoIn:
      properties:
        personalNames:
          items:
            $ref: "#/components/schemas/FirstLastNameGeoIn"
          type: array
      type: object
      xml:
        name: BatchFirstLastNameGeoIn
    BatchFirstLastNameGeoZippedIn:
      properties:
        personalNames:
          items:
            $ref: "#/components/schemas/FirstLastNameGeoZippedIn"
          type: array
      type: object
      xml:
        name: BatchFirstLastNameGeoZippedIn
    BatchFirstLastNameIn:
      properties:
        personalNames:
          items:
            $ref: "#/components/schemas/FirstLastNameIn"
          type: array
      type: object
      xml:
        name: BatchFirstLastNameIn
    BatchFirstLastNameOriginedOut:
      description: Represents the output of inferring the LIKELY origin from a list of
        personal names.
      properties:
        personalNames:
          items:
            $ref: "#/components/schemas/FirstLastNameOriginedOut"
          type: array
      type: object
      xml:
        name: BatchFirstLastNameOriginedOut
    BatchFirstLastNamePhoneCodedOut:
      description: Represents the output of inferring the LIKELY country and phone code of
        personal names+phones.
      properties:
        personalNamesWithPhoneNumbers:
          items:
            $ref: "#/components/schemas/FirstLastNamePhoneCodedOut"
          type: array
      type: object
      xml:
        name: BatchFirstLastNamePhoneCodedOut
    BatchFirstLastNamePhoneNumberGeoIn:
      properties:
        personalNamesWithPhoneNumbers:
          items:
            $ref: "#/components/schemas/FirstLastNamePhoneNumberGeoIn"
          type: array
      type: object
      xml:
        name: BatchFirstLastNamePhoneNumberGeoIn
    BatchFirstLastNamePhoneNumberIn:
      properties:
        personalNamesWithPhoneNumbers:
          items:
            $ref: "#/components/schemas/FirstLastNamePhoneNumberIn"
          type: array
      type: object
      xml:
        name: BatchFirstLastNamePhoneNumberIn
    BatchFirstLastNameUSRaceEthnicityOut:
      description: Represents the output of inferring the LIKELY US 'race/ethnicity' from a
        personal name, given US country of residence and (optionally) a ZIP5
        code.
      properties:
        personalNames:
          items:
            $ref: "#/components/schemas/FirstLastNameUSRaceEthnicityOut"
          type: array
      type: object
      xml:
        name: BatchFirstLastNameUSRaceEthnicityOut
    BatchMatchPersonalFirstLastNameIn:
      properties:
        personalNames:
          items:
            $ref: "#/components/schemas/MatchPersonalFirstLastNameIn"
          type: array
      type: object
      xml:
        name: BatchMatchPersonalFirstLastNameIn
    BatchNameMatchCandidatesOut:
      properties:
        namesAndMatchCandidates:
          items:
            $ref: "#/components/schemas/NameMatchCandidatesOut"
          type: array
      type: object
      xml:
        name: BatchNameMatchCandidatesOut
    BatchNameMatchedOut:
      properties:
        matchedNames:
          items:
            $ref: "#/components/schemas/NameMatchedOut"
          type: array
      type: object
      xml:
        name: BatchNameMatchedOut
    BatchParsedFullNameGeoIn:
      properties:
        personalNames:
          items:
            $ref: "#/components/schemas/ParsedFullNameGeoIn"
          type: array
      type: object
      xml:
        name: BatchParsedFullNameGeoIn
    BatchParsedFullNameIn:
      properties:
        personalNames:
          items:
            $ref: "#/components/schemas/ParsedFullNameIn"
          type: array
      type: object
      xml:
        name: BatchParsedFullNameIn
    BatchPersonalNameGenderedOut:
      properties:
        personalNames:
          items:
            $ref: "#/components/schemas/PersonalNameGenderedOut"
          type: array
      type: object
      xml:
        name: BatchPersonalNameGenderedOut
    BatchPersonalNameGeoIn:
      properties:
        personalNames:
          items:
            $ref: "#/components/schemas/PersonalNameGeoIn"
          type: array
      type: object
      xml:
        name: BatchPersonalNameGeoIn
    BatchPersonalNameGeoOut:
      properties:
        personalNames:
          items:
            $ref: "#/components/schemas/PersonalNameGeoOut"
          type: array
      type: object
      xml:
        name: BatchPersonalNameGeoOut
    BatchPersonalNameIn:
      properties:
        personalNames:
          items:
            $ref: "#/components/schemas/PersonalNameIn"
          type: array
      type: object
      xml:
        name: BatchPersonalNameIn
    BatchPersonalNameParsedOut:
      properties:
        personalNames:
          items:
            $ref: "#/components/schemas/PersonalNameParsedOut"
          type: array
      type: object
      xml:
        name: BatchPersonalNameParsedOut
    BillingHistoryOut:
      properties:
        corporateInvoices:
          items:
            $ref: "#/components/schemas/InvoiceOut"
          type: array
        stripeInvoices:
          items:
            $ref: "#/components/schemas/InvoiceOut"
          type: array
      type: object
      xml:
        name: BillingHistoryOut
    BillingInfoInOut:
      properties:
        addressCity:
          type: string
        addressCountry:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressPostalCode:
          type: string
        addressState:
          type: string
        billingEmail:
          type: string
        customerName:
          type: string
        customerPhone:
          type: string
        preferredCurrency:
          type: string
        vatID:
          type: string
      type: object
      xml:
        name: BillingInfoInOut
    ClassifierMetricsOut:
      description: Simple metrics on a classifier
      properties:
        aiNonVettedEstimatePrecision:
          format: double
          type: number
        aiNonVettedEstimateRecall:
          format: double
          type: number
        aiNonVettedEstimateTotal:
          format: int64
          type: integer
        aiNonVettedExpectedClassMetrics:
          items:
            $ref: "#/components/schemas/ExpectedClassMetricsOut"
          type: array
        aiNonVettedLearnTotal:
          format: int64
          type: integer
        aiStartTime:
          format: int64
          type: integer
        aiVettedEstimatePrecision:
          format: double
          type: number
        aiVettedEstimateRecall:
          format: double
          type: number
        aiVettedEstimateTotal:
          format: int64
          type: integer
        aiVettedExpectedClassMetrics:
          items:
            $ref: "#/components/schemas/ExpectedClassMetricsOut"
          type: array
        aiVettedLearnTotal:
          format: int64
          type: integer
        bufferSize:
          format: int32
          type: integer
        classifierName:
          type: string
        classifyDurationsCurrent:
          format: double
          type: number
        classifyDurationsSummary:
          format: double
          type: number
        factKeysSize:
          format: int32
          type: integer
        factsLearned:
          format: int64
          type: integer
        featuresSize:
          format: int64
          type: integer
        learnDurationsCurrent:
          format: double
          type: number
        learnDurationsSummary:
          format: double
          type: number
        learnQueueSize:
          format: int32
          type: integer
        metricTimeStamp:
          format: int64
          type: integer
        preClassifyQueueSize:
          format: int32
          type: integer
      type: object
      xml:
        name: ClassifierMetricsOut
    CurrenciesOut:
      properties:
        currenciesIso3:
          items:
            type: string
          type: array
      type: object
      xml:
        name: CurrenciesOut
    DeployUIOut:
      properties:
        errorMessage:
          type: string
        succeeded:
          type: boolean
      type: object
      xml:
        name: DeployUIOut
    ExpectedClassMetricsOut:
      description: Simple metrics on a classifier, for a given expected class
      properties:
        aiEstimatePrecision:
          format: double
          type: number
        aiEstimateRecall:
          format: double
          type: number
        aiEstimateTotal:
          format: int64
          type: integer
        aiLearnTotal:
          format: int64
          type: integer
        classifierName:
          type: string
        expectedClass:
          type: string
      type: object
      xml:
        name: ExpectedClassMetricsOut
    FeedbackLoopOut:
      properties:
        feedbackCredits:
          format: int64
          type: integer
      type: object
      xml:
        name: FeedbackLoopOut
    FirstLastNameDiasporaedOut:
      description: Represents the output of inferring the LIKELY ethnicity from a personal
        name, given an country of residence.
      properties:
        countryIso2:
          type: string
          xml:
            attribute: true
        ethnicity:
          type: string
          xml:
            attribute: true
        ethnicityAlt:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
        id:
          type: string
        lastName:
          type: string
        lifted:
          type: boolean
          xml:
            attribute: true
        score:
          description: Compatibility to NamSor_v1 Origin score value
          format: double
          type: number
      type: object
      xml:
        name: FirstLastNameDiasporaedOut
    FirstLastNameGenderIn:
      properties:
        firstName:
          type: string
          xml:
            attribute: true
        gender:
          type: string
          xml:
            attribute: true
        id:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: FirstLastName
    FirstLastNameGenderedOut:
      description: Represents the output of inferring the LIKELY gender from a personal
        name.
      properties:
        firstName:
          type: string
        genderScale:
          description: Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value
          format: double
          type: number
        id:
          type: string
        lastName:
          type: string
        likelyGender:
          description: Most likely gender
          enum:
            - male
            - female
            - unknown
          type: string
        probabilityCalibrated:
          format: double
          type: number
        score:
          format: double
          type: number
      type: object
      xml:
        name: FirstLastNameGenderedOut
    FirstLastNameGeoIn:
      properties:
        countryIso2:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        id:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: FirstLastNameGeoIn
    FirstLastNameGeoZippedIn:
      properties:
        countryIso2:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        id:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
        zipCode:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: FirstLastNameGeoZippedIn
    FirstLastNameIn:
      properties:
        firstName:
          type: string
          xml:
            attribute: true
        id:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: FirstLastName
    FirstLastNameOriginedOut:
      description: Represents the output of inferring the LIKELY country of Origin from a
        personal name.
      properties:
        countryOrigin:
          description: Most likely country of Origin
          type: string
        countryOriginAlt:
          description: "Second best alternative : country of Origin"
          type: string
        firstName:
          type: string
        id:
          type: string
        lastName:
          type: string
        regionOrigin:
          description: Most likely region of Origin (based on countryOrigin ISO2 code)
          type: string
        score:
          description: Compatibility to NamSor_v1 Origin score value
          format: double
          type: number
        subRegionOrigin:
          description: Most likely region of Origin (based on countryOrigin ISO2 code)
          type: string
        topRegionOrigin:
          description: Most likely region of Origin (based on countryOrigin ISO2 code)
          type: string
      type: object
      xml:
        name: FirstLastNameOriginedOut
    FirstLastNameOut:
      properties:
        firstName:
          type: string
        id:
          type: string
        lastName:
          type: string
      type: object
      xml:
        name: FirstLastNameOut
    FirstLastNamePhoneCodedOut:
      description: Represents the output of inferring the LIKELY country and phone code
        from a personal name and phone number.
      properties:
        countryIso2:
          type: string
        firstName:
          type: string
        id:
          type: string
        internationalPhoneNumberVerified:
          type: string
        lastName:
          type: string
        originCountryIso2:
          type: string
        originCountryIso2Alt:
          type: string
        phoneCountryCode:
          format: int32
          type: integer
        phoneCountryCodeAlt:
          format: int32
          type: integer
        phoneCountryIso2:
          type: string
        phoneCountryIso2Alt:
          type: string
        phoneCountryIso2Verified:
          type: string
        phoneNumber:
          type: string
        score:
          format: double
          type: number
        verified:
          type: boolean
      type: object
      xml:
        name: FirstLastNamePhoneCodedOut
    FirstLastNamePhoneNumberGeoIn:
      properties:
        FirstLastNameOriginedOut:
          $ref: "#/components/schemas/FirstLastNameOriginedOut"
        countryIso2:
          type: string
        countryIso2Alt:
          type: string
        firstName:
          type: string
          xml:
            attribute: true
        id:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
        phoneNumber:
          type: string
      type: object
      xml:
        name: FirstLastNamePhoneNumberGeoIn
    FirstLastNamePhoneNumberIn:
      properties:
        FirstLastNameOriginedOut:
          $ref: "#/components/schemas/FirstLastNameOriginedOut"
        firstName:
          type: string
          xml:
            attribute: true
        id:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
        phoneNumber:
          type: string
      type: object
      xml:
        name: FirstLastNamePhoneNumberIn
    FirstLastNameUSRaceEthnicityOut:
      description: Represents the output of inferring the LIKELY US 'race/ethnicity' from a
        personal name, given US country of residence and (optionally) a ZIP5
        code.
      properties:
        firstName:
          type: string
        id:
          type: string
        lastName:
          type: string
        raceEthnicity:
          description: Most likely US 'race'/ethnicity
          enum:
            - W_NL
            - HL
            - A
            - B_NL
          type: string
          xml:
            attribute: true
        raceEthnicityAlt:
          description: Second most likely US 'race'/ethnicity
          enum:
            - W_NL
            - HL
            - A
            - B_NL
          type: string
          xml:
            attribute: true
        score:
          description: Compatibility to NamSor_v1 Origin score value
          format: double
          type: number
      type: object
      xml:
        name: FirstLastNameUSRaceEthnicityOut
    InvoiceItemOut:
      properties:
        amount:
          format: int64
          type: integer
        currency:
          type: string
        description:
          type: string
        invoiceItemType:
          type: string
        itemId:
          type: string
        planDesc:
          type: string
        planName:
          type: string
        planNickname:
          type: string
        quantity:
          format: int64
          type: integer
        subscription:
          type: string
        subscriptionItem:
          type: string
      type: object
      xml:
        name: InvoiceItemOut
    InvoiceOut:
      properties:
        amountDue:
          format: int64
          type: integer
        amountPaid:
          format: int64
          type: integer
        amountRemaining:
          format: int64
          type: integer
        attempted:
          type: boolean
        currency:
          type: string
        description:
          type: string
        dueDate:
          format: date-time
          type: string
        invoiceDate:
          format: date-time
          type: string
        invoiceId:
          type: string
        invoicePdf:
          type: string
        invoiceStatus:
          type: string
        isStriped:
          type: boolean
        items:
          items:
            $ref: "#/components/schemas/InvoiceItemOut"
          type: array
        periodEnd:
          format: date-time
          type: string
        periodStart:
          format: date-time
          type: string
        receiptNumber:
          type: string
        stripeCustomerId:
          type: string
        subTotal:
          format: int64
          type: integer
        tax:
          format: int64
          type: integer
        taxPercent:
          format: int64
          type: integer
        total:
          format: int64
          type: integer
        userId:
          type: string
      type: object
      xml:
        name: InvoiceOut
    MatchPersonalFirstLastNameIn:
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
        name1:
          $ref: "#/components/schemas/FirstLastNameIn"
        name2:
          $ref: "#/components/schemas/PersonalNameIn"
      type: object
      xml:
        name: MatchPersonalFirstLastNameIn
    NamSorCounterOut:
      properties:
        counter:
          format: int64
          type: integer
      type: object
      xml:
        name: NamSorCounterOut
    NameMatchCandidateOut:
      properties:
        candidateName:
          type: string
        probability:
          format: double
          type: number
      type: object
      xml:
        name: NameMatchCandidateOut
    NameMatchCandidatesOut:
      properties:
        firstName:
          type: string
        id:
          type: string
        lastName:
          type: string
        matchCandidates:
          items:
            $ref: "#/components/schemas/NameMatchCandidateOut"
          type: array
      type: object
      xml:
        name: NameMatchCandidatesOut
    NameMatchedOut:
      properties:
        id:
          type: string
        matchStatus:
          type: string
        score:
          format: double
          type: number
      type: object
      xml:
        name: NameMatchedOut
    ParsedFullNameGeoIn:
      properties:
        countryIso2:
          type: string
          xml:
            attribute: true
        firstName:
          type: string
          xml:
            attribute: true
        id:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
        middleName:
          type: string
          xml:
            attribute: true
        prefixOrTitle:
          type: string
          xml:
            attribute: true
        suffix:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: ParsedFullNameGeoIn
    ParsedFullNameIn:
      properties:
        firstName:
          type: string
          xml:
            attribute: true
        id:
          type: string
          xml:
            attribute: true
        lastName:
          type: string
          xml:
            attribute: true
        middleName:
          type: string
          xml:
            attribute: true
        prefixOrTitle:
          type: string
          xml:
            attribute: true
        suffix:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: ParsedFullNameIn
    PersonalNameGenderedOut:
      properties:
        genderScale:
          description: Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value
          format: double
          type: number
        id:
          type: string
        likelyGender:
          description: Most likely gender
          enum:
            - male
            - female
            - unknown
          type: string
        name:
          type: string
        score:
          format: double
          type: number
      type: object
      xml:
        name: PersonalNameGenderedOut
    PersonalNameGeoIn:
      properties:
        countryIso2:
          type: string
          xml:
            attribute: true
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: PersonalNameGeoIn
    PersonalNameGeoOut:
      properties:
        country:
          type: string
        countryAlt:
          type: string
        id:
          type: string
        name:
          type: string
        region:
          type: string
        score:
          format: double
          type: number
        subRegion:
          type: string
        topRegion:
          type: string
      type: object
      xml:
        name: PersonalNameGeoOut
    PersonalNameIn:
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
          xml:
            attribute: true
      type: object
      xml:
        name: PersonalNameIn
    PersonalNameParsedOut:
      properties:
        firstLastName:
          $ref: "#/components/schemas/FirstLastNameOut"
        id:
          type: string
        name:
          type: string
        nameParserType:
          type: string
        nameParserTypeAlt:
          type: string
        score:
          format: double
          type: number
      type: object
      xml:
        name: PersonalNameParsedOut
    RomanizedNameOut:
      properties:
        id:
          type: string
        latinName:
          type: string
        originalName:
          type: string
        score:
          format: double
          type: number
        sourceLanguage:
          type: string
        sourceScript:
          type: string
        targetLanguage:
          type: string
        targetScript:
          type: string
      type: object
      xml:
        name: RomanizedNameOut
    SoftwareVersionOut:
      properties:
        softwareNameAndVersion:
          type: string
        softwareVersion:
          items:
            format: int32
            type: integer
          type: array
      type: object
      xml:
        name: SoftwareVersionOut
    SourceDetailedMetricsOut:
      description: Simple metrics on source, with details by classifier.
      properties:
        aiEstimatePrecision:
          format: double
          type: number
        aiEstimateRecall:
          format: double
          type: number
        aiEstimateTotal:
          format: int64
          type: integer
        aiLearnTotal:
          format: int64
          type: integer
        aiStartTime:
          format: int64
          type: integer
        classifierName:
          type: string
        expectedClassMetrics:
          items:
            $ref: "#/components/schemas/ExpectedClassMetricsOut"
          type: array
        metricTimeStamp:
          format: int64
          type: integer
        snapshotDate:
          format: int64
          type: integer
        source:
          $ref: "#/components/schemas/APIKeyOut"
      type: object
      xml:
        name: SourceDetailedMetricsOut
    SourceMetricsOut:
      description: Simple metrics on a classifier, for a given source
      properties:
        aiEstimatePrecision:
          format: double
          type: number
        aiEstimateRecall:
          format: double
          type: number
        aiEstimateTotal:
          format: int64
          type: integer
        aiLearnTotal:
          format: int64
          type: integer
        aiStartTime:
          format: int64
          type: integer
        classifierName:
          type: string
        metricTimeStamp:
          format: int64
          type: integer
        snapshotDate:
          format: int64
          type: integer
        source:
          $ref: "#/components/schemas/APIKeyOut"
      type: object
      xml:
        name: SourceMetricsOut
    StripeCardOut:
      properties:
        brand:
          type: string
        defaultCard:
          type: boolean
        expMonth:
          format: int64
          type: integer
        expYear:
          format: int64
          type: integer
        last4:
          type: string
        sourceId:
          type: string
      type: object
      xml:
        name: StripeCustomerOut
    StripeCustomerOut:
      properties:
        sourceCountry:
          type: string
        sourceCurrency:
          type: string
        stripeCustomerId:
          type: string
        stripedCards:
          items:
            $ref: "#/components/schemas/StripeCardOut"
          type: array
      type: object
      xml:
        name: StripeCustomerOut
    SystemMetricsOut:
      properties:
        classifierMetrics:
          items:
            $ref: "#/components/schemas/ClassifierMetricsOut"
          type: array
        freeMem:
          format: int64
          type: integer
        maxMem:
          format: int64
          type: integer
        sourceMetrics:
          items:
            $ref: "#/components/schemas/SourceMetricsOut"
          type: array
        totalMem:
          format: int64
          type: integer
      type: object
      xml:
        name: SystemMetricsOut
    UserInfoOut:
      properties:
        apiKey:
          type: string
        disabled:
          type: boolean
        displayName:
          type: string
        email:
          type: string
        emailVerified:
          type: boolean
        firstKnownIpAddress:
          type: string
        otherInfos:
          items:
            $ref: "#/components/schemas/UserInfoOut"
          type: array
        phoneNumber:
          type: string
        photoUrl:
          type: string
        providerId:
          type: string
        stripeCustomerId:
          type: string
        stripePerishableKey:
          type: string
        timeStamp:
          format: int64
          type: integer
        uid:
          type: string
        verifyToken:
          type: string
      type: object
      xml:
        name: UserInfoOut
  securitySchemes:
    api_key:
      description: api_key required
      in: header
      name: X-API-KEY
      type: apiKey
