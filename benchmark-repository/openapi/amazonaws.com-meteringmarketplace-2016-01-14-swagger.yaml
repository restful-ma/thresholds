openapi: 3.0.0
info:
  version: 2016-01-14
  x-release: v4
  title: AWSMarketplace Metering
  description: <fullname>AWS Marketplace Metering Service</fullname> <p>This reference
    provides descriptions of the low-level AWS Marketplace Metering Service
    API.</p> <p>AWS Marketplace sellers can use this API to submit usage data
    for custom usage dimensions.</p> <p> <b>Submitting Metering Records</b> </p>
    <ul> <li> <p> <i>MeterUsage</i>- Submits the metering record for a
    Marketplace product. MeterUsage is called from an EC2 instance.</p> </li>
    <li> <p> <i>BatchMeterUsage</i>- Submits the metering record for a set of
    customers. BatchMeterUsage is called from a software-as-a-service (SaaS)
    application.</p> </li> </ul> <p> <b>Accepting New Customers</b> </p> <ul>
    <li> <p> <i>ResolveCustomer</i>- Called by a SaaS application during the
    registration process. When a buyer visits your website during the
    registration process, the buyer submits a Registration Token through the
    browser. The Registration Token is resolved through this API to obtain a
    CustomerIdentifier and Product Code.</p> </li> </ul> <p> <b>Entitlement and
    Metering for Paid Container Products</b> </p> <ul> <li> <p> Paid container
    software products sold through AWS Marketplace must integrate with the AWS
    Marketplace Metering Service and call the RegisterUsage operation for
    software entitlement and metering. Calling RegisterUsage from containers
    running outside of Amazon Elastic Container Service (Amazon ECR) isn't
    supported. Free and BYOL products for ECS aren't required to call
    RegisterUsage, but you can do so if you want to receive usage data in your
    seller reports. For more information on using the RegisterUsage operation,
    see <a
    href="https://docs.aws.amazon.com/marketplace/latest/userguide/container-based-products.html">Container-Based
    Products</a>. </p> </li> </ul> <p>BatchMeterUsage API calls are captured by
    AWS CloudTrail. You can use Cloudtrail to verify that the SaaS metering
    records that you sent are accurate by searching for records with the
    eventName of BatchMeterUsage. You can also use CloudTrail to audit records
    over time. For more information, see the <i> <a
    href="http://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-concepts.html">AWS
    CloudTrail User Guide</a> </i>.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: meteringmarketplace
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/meteringmarketplace-2016-01-14.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/marketplace/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=AWSMPMeteringService.BatchMeterUsage:
    post:
      operationId: BatchMeterUsage
      description: <p>BatchMeterUsage is called from a SaaS application listed on the AWS
        Marketplace to post metering records for a set of customers.</p> <p>For
        identical requests, the API is idempotent; requests can be retried with
        the same records or a subset of the input records.</p> <p>Every request
        to BatchMeterUsage is for one product. If you need to meter usage for
        multiple products, you must make multiple calls to BatchMeterUsage.</p>
        <p>BatchMeterUsage can process up to 25 UsageRecords at a time.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchMeterUsageResult"
        "480":
          description: InternalServiceErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceErrorException"
        "481":
          description: InvalidProductCodeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidProductCodeException"
        "482":
          description: InvalidUsageDimensionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidUsageDimensionException"
        "483":
          description: InvalidCustomerIdentifierException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidCustomerIdentifierException"
        "484":
          description: TimestampOutOfBoundsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimestampOutOfBoundsException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "486":
          description: DisabledApiException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisabledApiException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSMPMeteringService.BatchMeterUsage
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchMeterUsageRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSMPMeteringService.MeterUsage:
    post:
      operationId: MeterUsage
      description: <p>API to emit metering records. For identical requests, the API is
        idempotent. It simply returns the metering record ID.</p> <p>MeterUsage
        is authenticated on the buyer's AWS account, generally when running from
        an EC2 instance on the AWS Marketplace.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MeterUsageResult"
        "480":
          description: InternalServiceErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceErrorException"
        "481":
          description: InvalidProductCodeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidProductCodeException"
        "482":
          description: InvalidUsageDimensionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidUsageDimensionException"
        "483":
          description: InvalidEndpointRegionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidEndpointRegionException"
        "484":
          description: TimestampOutOfBoundsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TimestampOutOfBoundsException"
        "485":
          description: DuplicateRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateRequestException"
        "486":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSMPMeteringService.MeterUsage
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MeterUsageRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSMPMeteringService.RegisterUsage:
    post:
      operationId: RegisterUsage
      description: "<p>Paid container software products sold through AWS Marketplace must
        integrate with the AWS Marketplace Metering Service and call the
        RegisterUsage operation for software entitlement and metering. Calling
        RegisterUsage from containers running outside of ECS is not currently
        supported. Free and BYOL products for ECS aren't required to call
        RegisterUsage, but you may choose to do so if you would like to receive
        usage data in your seller reports. The sections below explain the
        behavior of RegisterUsage. RegisterUsage performs two primary functions:
        metering and entitlement.</p> <ul> <li> <p> <i>Entitlement</i>:
        RegisterUsage allows you to verify that the customer running your paid
        software is subscribed to your product on AWS Marketplace, enabling you
        to guard against unauthorized use. Your container image that integrates
        with RegisterUsage is only required to guard against unauthorized use at
        container startup, as such a
        CustomerNotSubscribedException/PlatformNotSupportedException will only
        be thrown on the initial call to RegisterUsage. Subsequent calls from
        the same Amazon ECS task instance (e.g. task-id) will not throw a
        CustomerNotSubscribedException, even if the customer unsubscribes while
        the Amazon ECS task is still running.</p> </li> <li> <p>
        <i>Metering</i>: RegisterUsage meters software use per ECS task, per
        hour, with usage prorated to the second. A minimum of 1 minute of usage
        applies to tasks that are short lived. For example, if a customer has a
        10 node ECS cluster and creates an ECS service configured as a Daemon
        Set, then ECS will launch a task on all 10 cluster nodes and the
        customer will be charged: (10 * hourly_rate). Metering for software use
        is automatically handled by the AWS Marketplace Metering Control Plane
        -- your software is not required to perform any metering specific
        actions, other than call RegisterUsage once for metering of software use
        to commence. The AWS Marketplace Metering Control Plane will also
        continue to bill customers for running ECS tasks, regardless of the
        customers subscription state, removing the need for your software to
        perform entitlement checks at runtime.</p> </li> </ul>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterUsageResult"
        "480":
          description: InvalidProductCodeException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidProductCodeException"
        "481":
          description: InvalidRegionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRegionException"
        "482":
          description: InvalidPublicKeyVersionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidPublicKeyVersionException"
        "483":
          description: PlatformNotSupportedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlatformNotSupportedException"
        "484":
          description: CustomerNotEntitledException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerNotEntitledException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "486":
          description: InternalServiceErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceErrorException"
        "487":
          description: DisabledApiException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisabledApiException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSMPMeteringService.RegisterUsage
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterUsageRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSMPMeteringService.ResolveCustomer:
    post:
      operationId: ResolveCustomer
      description: ResolveCustomer is called by a SaaS application during the registration
        process. When a buyer visits your website during the registration
        process, the buyer submits a registration token through their browser.
        The registration token is resolved through this API to obtain a
        CustomerIdentifier and product code.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResolveCustomerResult"
        "480":
          description: InvalidTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidTokenException"
        "481":
          description: ExpiredTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExpiredTokenException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalServiceErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServiceErrorException"
        "484":
          description: DisabledApiException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisabledApiException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSMPMeteringService.ResolveCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResolveCustomerRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://metering.marketplace.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWSMarketplace Metering multi-region endpoint
  - url: https://metering.marketplace.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWSMarketplace Metering multi-region endpoint
  - url: http://metering.marketplace.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWSMarketplace Metering endpoint for China (Beijing) and China
      (Ningxia)
  - url: https://metering.marketplace.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWSMarketplace Metering endpoint for China (Beijing) and China
      (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    BatchMeterUsageResult:
      type: object
      properties:
        Results:
          $ref: "#/components/schemas/UsageRecordResultList"
        UnprocessedRecords:
          $ref: "#/components/schemas/UsageRecordList"
      description: Contains the UsageRecords processed by BatchMeterUsage and any records
        that have failed due to transient error.
    BatchMeterUsageRequest:
      type: object
      required:
        - UsageRecords
        - ProductCode
      properties:
        UsageRecords:
          $ref: "#/components/schemas/UsageRecordList"
        ProductCode:
          $ref: "#/components/schemas/ProductCode"
      description: A BatchMeterUsageRequest contains UsageRecords, which indicate
        quantities of usage within your application.
    InternalServiceErrorException: {}
    InvalidProductCodeException: {}
    InvalidUsageDimensionException: {}
    InvalidCustomerIdentifierException: {}
    TimestampOutOfBoundsException: {}
    ThrottlingException: {}
    DisabledApiException: {}
    MeterUsageResult:
      type: object
      properties:
        MeteringRecordId:
          $ref: "#/components/schemas/String"
    MeterUsageRequest:
      type: object
      required:
        - ProductCode
        - Timestamp
        - UsageDimension
      properties:
        ProductCode:
          $ref: "#/components/schemas/ProductCode"
        Timestamp:
          $ref: "#/components/schemas/Timestamp"
        UsageDimension:
          $ref: "#/components/schemas/UsageDimension"
        UsageQuantity:
          $ref: "#/components/schemas/UsageQuantity"
        DryRun:
          $ref: "#/components/schemas/Boolean"
    InvalidEndpointRegionException: {}
    DuplicateRequestException: {}
    RegisterUsageResult:
      type: object
      properties:
        PublicKeyRotationTimestamp:
          $ref: "#/components/schemas/Timestamp"
        Signature:
          $ref: "#/components/schemas/NonEmptyString"
    RegisterUsageRequest:
      type: object
      required:
        - ProductCode
        - PublicKeyVersion
      properties:
        ProductCode:
          $ref: "#/components/schemas/ProductCode"
        PublicKeyVersion:
          $ref: "#/components/schemas/VersionInteger"
        Nonce:
          $ref: "#/components/schemas/Nonce"
    InvalidRegionException: {}
    InvalidPublicKeyVersionException: {}
    PlatformNotSupportedException: {}
    CustomerNotEntitledException: {}
    ResolveCustomerResult:
      type: object
      properties:
        CustomerIdentifier:
          $ref: "#/components/schemas/CustomerIdentifier"
        ProductCode:
          $ref: "#/components/schemas/ProductCode"
      description: The result of the ResolveCustomer operation. Contains the
        CustomerIdentifier and product code.
    ResolveCustomerRequest:
      type: object
      required:
        - RegistrationToken
      properties:
        RegistrationToken:
          $ref: "#/components/schemas/NonEmptyString"
      description: Contains input to the ResolveCustomer operation.
    InvalidTokenException: {}
    ExpiredTokenException: {}
    UsageRecordList:
      type: array
      items:
        $ref: "#/components/schemas/UsageRecord"
      minItems: 0
      maxItems: 25
    ProductCode:
      type: string
      minLength: 1
      maxLength: 255
    UsageRecordResultList:
      type: array
      items:
        $ref: "#/components/schemas/UsageRecordResult"
    Boolean:
      type: boolean
    CustomerIdentifier:
      type: string
      minLength: 1
      maxLength: 255
    Timestamp:
      type: string
      format: date-time
    UsageDimension:
      type: string
      minLength: 1
      maxLength: 255
    UsageQuantity:
      type: integer
      minimum: 0
      maximum: 2147483647
    String:
      type: string
    NonEmptyString:
      type: string
      pattern: \S+
    Nonce:
      type: string
      maxLength: 255
    VersionInteger:
      type: integer
      minimum: 1
    UsageRecord:
      type: object
      required:
        - Timestamp
        - CustomerIdentifier
        - Dimension
      properties:
        Timestamp:
          $ref: "#/components/schemas/Timestamp"
        CustomerIdentifier:
          $ref: "#/components/schemas/CustomerIdentifier"
        Dimension:
          $ref: "#/components/schemas/UsageDimension"
        Quantity:
          $ref: "#/components/schemas/UsageQuantity"
      description: <p>A UsageRecord indicates a quantity of usage for a given product,
        customer, dimension and time.</p> <p>Multiple requests with the same
        UsageRecords as input will be deduplicated to prevent double
        charges.</p>
    UsageRecordResultStatus:
      type: string
      enum:
        - Success
        - CustomerNotSubscribed
        - DuplicateRecord
    UsageRecordResult:
      type: object
      properties:
        UsageRecord:
          $ref: "#/components/schemas/UsageRecord"
        MeteringRecordId:
          $ref: "#/components/schemas/String"
        Status:
          $ref: "#/components/schemas/UsageRecordResultStatus"
      description: A UsageRecordResult indicates the status of a given UsageRecord
        processed by BatchMeterUsage.
