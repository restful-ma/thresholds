openapi: 3.0.0
info:
  version: 2012-10-25
  x-release: v4
  title: AWS Direct Connect
  description: AWS Direct Connect links your internal network to an AWS Direct Connect
    location over a standard Ethernet fiber-optic cable. One end of the cable is
    connected to your router, the other to an AWS Direct Connect router. With
    this connection in place, you can create virtual interfaces directly to the
    AWS cloud (for example, to Amazon EC2 and Amazon S3) and to Amazon VPC,
    bypassing Internet service providers in your network path. A connection
    provides access to all AWS Regions except the China (Beijing) and (China)
    Ningxia Regions. AWS resources in the China Regions can only be accessed
    through locations associated with those Regions.
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: directconnect
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/directconnect-2012-10-25.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/directconnect/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=OvertureService.AcceptDirectConnectGatewayAssociationProposal:
    post:
      operationId: AcceptDirectConnectGatewayAssociationProposal
      description: Accepts a proposal request to attach a virtual private gateway or
        transit gateway to a Direct Connect gateway.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcceptDirectConnectGatewayAssociationPr\
                  oposalResult"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.AcceptDirectConnectGatewayAssociationProposal
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcceptDirectConnectGatewayAssociationProp\
                osalRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.AllocateConnectionOnInterconnect:
    post:
      deprecated: true
      operationId: AllocateConnectionOnInterconnect
      description: <p>Deprecated. Use <a>AllocateHostedConnection</a> instead.</p>
        <p>Creates a hosted connection on an interconnect.</p> <p>Allocates a
        VLAN number and a specified amount of bandwidth for use by a hosted
        connection on the specified interconnect.</p> <note> <p>Intended for use
        by AWS Direct Connect Partners only.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connection"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.AllocateConnectionOnInterconnect
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AllocateConnectionOnInterconnectRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.AllocateHostedConnection:
    post:
      operationId: AllocateHostedConnection
      description: <p>Creates a hosted connection on the specified interconnect or a link
        aggregation group (LAG) of interconnects.</p> <p>Allocates a VLAN number
        and a specified amount of capacity (bandwidth) for use by a hosted
        connection on the specified interconnect or LAG of interconnects. AWS
        polices the hosted connection for the specified capacity and the AWS
        Direct Connect Partner must also police the hosted connection for the
        specified capacity.</p> <note> <p>Intended for use by AWS Direct Connect
        Partners only.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connection"
        "480":
          description: DuplicateTagKeysException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateTagKeysException"
        "481":
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "482":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "483":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.AllocateHostedConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AllocateHostedConnectionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.AllocatePrivateVirtualInterface:
    post:
      operationId: AllocatePrivateVirtualInterface
      description: <p>Provisions a private virtual interface to be owned by the specified
        AWS account.</p> <p>Virtual interfaces created using this action must be
        confirmed by the owner using <a>ConfirmPrivateVirtualInterface</a>.
        Until then, the virtual interface is in the <code>Confirming</code>
        state and is not available to handle traffic.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualInterface"
        "480":
          description: DuplicateTagKeysException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateTagKeysException"
        "481":
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "482":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "483":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.AllocatePrivateVirtualInterface
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AllocatePrivateVirtualInterfaceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.AllocatePublicVirtualInterface:
    post:
      operationId: AllocatePublicVirtualInterface
      description: <p>Provisions a public virtual interface to be owned by the specified
        AWS account.</p> <p>The owner of a connection calls this function to
        provision a public virtual interface to be owned by the specified AWS
        account.</p> <p>Virtual interfaces created using this function must be
        confirmed by the owner using <a>ConfirmPublicVirtualInterface</a>. Until
        this step has been completed, the virtual interface is in the
        <code>confirming</code> state and is not available to handle
        traffic.</p> <p>When creating an IPv6 public virtual interface, omit the
        Amazon address and customer address. IPv6 addresses are automatically
        assigned from the Amazon pool of IPv6 addresses; you cannot specify
        custom IPv6 addresses.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualInterface"
        "480":
          description: DuplicateTagKeysException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateTagKeysException"
        "481":
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "482":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "483":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.AllocatePublicVirtualInterface
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AllocatePublicVirtualInterfaceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.AllocateTransitVirtualInterface:
    post:
      operationId: AllocateTransitVirtualInterface
      description: <p>Provisions a transit virtual interface to be owned by the specified
        AWS account. Use this type of interface to connect a transit gateway to
        your Direct Connect gateway.</p> <p>The owner of a connection provisions
        a transit virtual interface to be owned by the specified AWS
        account.</p> <p>After you create a transit virtual interface, it must be
        confirmed by the owner using <a>ConfirmTransitVirtualInterface</a>.
        Until this step has been completed, the transit virtual interface is in
        the <code>requested</code> state and is not available to handle
        traffic.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllocateTransitVirtualInterfaceResult"
        "480":
          description: DuplicateTagKeysException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateTagKeysException"
        "481":
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "482":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "483":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.AllocateTransitVirtualInterface
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AllocateTransitVirtualInterfaceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.AssociateConnectionWithLag:
    post:
      operationId: AssociateConnectionWithLag
      description: <p>Associates an existing connection with a link aggregation group
        (LAG). The connection is interrupted and re-established as a member of
        the LAG (connectivity to AWS is interrupted). The connection must be
        hosted on the same AWS Direct Connect endpoint as the LAG, and its
        bandwidth must match the bandwidth for the LAG. You can re-associate a
        connection that's currently associated with a different LAG; however, if
        removing the connection would cause the original LAG to fall below its
        setting for minimum number of operational connections, the request
        fails.</p> <p>Any virtual interfaces that are directly associated with
        the connection are automatically re-associated with the LAG. If the
        connection was originally associated with a different LAG, the virtual
        interfaces remain associated with the original LAG.</p> <p>For
        interconnects, any hosted connections are automatically re-associated
        with the LAG. If the interconnect was originally associated with a
        different LAG, the hosted connections remain associated with the
        original LAG.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connection"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.AssociateConnectionWithLag
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateConnectionWithLagRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.AssociateHostedConnection:
    post:
      operationId: AssociateHostedConnection
      description: <p>Associates a hosted connection and its virtual interfaces with a link
        aggregation group (LAG) or interconnect. If the target interconnect or
        LAG has an existing hosted connection with a conflicting VLAN number or
        IP address, the operation fails. This action temporarily interrupts the
        hosted connection's connectivity to AWS as it is being migrated.</p>
        <note> <p>Intended for use by AWS Direct Connect Partners only.</p>
        </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connection"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.AssociateHostedConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateHostedConnectionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.AssociateVirtualInterface:
    post:
      operationId: AssociateVirtualInterface
      description: <p>Associates a virtual interface with a specified link aggregation
        group (LAG) or connection. Connectivity to AWS is temporarily
        interrupted as the virtual interface is being migrated. If the target
        connection or LAG has an associated virtual interface with a conflicting
        VLAN number or a conflicting IP address, the operation fails.</p>
        <p>Virtual interfaces associated with a hosted connection cannot be
        associated with a LAG; hosted connections must be migrated along with
        their virtual interfaces using <a>AssociateHostedConnection</a>.</p>
        <p>To reassociate a virtual interface to a new connection or LAG, the
        requester must own either the virtual interface itself or the connection
        to which the virtual interface is currently associated. Additionally,
        the requester must own the connection or LAG for the association.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualInterface"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.AssociateVirtualInterface
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateVirtualInterfaceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.ConfirmConnection:
    post:
      operationId: ConfirmConnection
      description: <p>Confirms the creation of the specified hosted connection on an
        interconnect.</p> <p>Upon creation, the hosted connection is initially
        in the <code>Ordering</code> state, and remains in this state until the
        owner confirms creation of the hosted connection.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfirmConnectionResponse"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.ConfirmConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfirmConnectionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.ConfirmPrivateVirtualInterface:
    post:
      operationId: ConfirmPrivateVirtualInterface
      description: <p>Accepts ownership of a private virtual interface created by another
        AWS account.</p> <p>After the virtual interface owner makes this call,
        the virtual interface is created and attached to the specified virtual
        private gateway or Direct Connect gateway, and is made available to
        handle traffic.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfirmPrivateVirtualInterfaceResponse"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.ConfirmPrivateVirtualInterface
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfirmPrivateVirtualInterfaceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.ConfirmPublicVirtualInterface:
    post:
      operationId: ConfirmPublicVirtualInterface
      description: <p>Accepts ownership of a public virtual interface created by another
        AWS account.</p> <p>After the virtual interface owner makes this call,
        the specified virtual interface is created and made available to handle
        traffic.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfirmPublicVirtualInterfaceResponse"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.ConfirmPublicVirtualInterface
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfirmPublicVirtualInterfaceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.ConfirmTransitVirtualInterface:
    post:
      operationId: ConfirmTransitVirtualInterface
      description: <p>Accepts ownership of a transit virtual interface created by another
        AWS account.</p> <p> After the owner of the transit virtual interface
        makes this call, the specified transit virtual interface is created and
        made available to handle traffic.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfirmTransitVirtualInterfaceResponse"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.ConfirmTransitVirtualInterface
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfirmTransitVirtualInterfaceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.CreateBGPPeer:
    post:
      operationId: CreateBGPPeer
      description: <p>Creates a BGP peer on the specified virtual interface.</p> <p>You
        must create a BGP peer for the corresponding address family (IPv4/IPv6)
        in order to access AWS resources that also use that address family.</p>
        <p>If logical redundancy is not supported by the connection,
        interconnect, or LAG, the BGP peer cannot be in the same address family
        as an existing BGP peer on the virtual interface.</p> <p>When creating a
        IPv6 BGP peer, omit the Amazon address and customer address. IPv6
        addresses are automatically assigned from the Amazon pool of IPv6
        addresses; you cannot specify custom IPv6 addresses.</p> <p>For a public
        virtual interface, the Autonomous System Number (ASN) must be private or
        already whitelisted for the virtual interface.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateBGPPeerResponse"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.CreateBGPPeer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateBGPPeerRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.CreateConnection:
    post:
      operationId: CreateConnection
      description: <p>Creates a connection between a customer network and a specific AWS
        Direct Connect location.</p> <p>A connection links your internal network
        to an AWS Direct Connect location over a standard Ethernet fiber-optic
        cable. One end of the cable is connected to your router, the other to an
        AWS Direct Connect router.</p> <p>To find the locations for your Region,
        use <a>DescribeLocations</a>.</p> <p>You can automatically add the new
        connection to a link aggregation group (LAG) by specifying a LAG ID in
        the request. This ensures that the new connection is allocated on the
        same AWS Direct Connect endpoint that hosts the specified LAG. If there
        are no available ports on the endpoint, the request fails and no
        connection is created.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connection"
        "480":
          description: DuplicateTagKeysException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateTagKeysException"
        "481":
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "482":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "483":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.CreateConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateConnectionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.CreateDirectConnectGateway:
    post:
      operationId: CreateDirectConnectGateway
      description: Creates a Direct Connect gateway, which is an intermediate object that
        enables you to connect a set of virtual interfaces and virtual private
        gateways. A Direct Connect gateway is global and visible in any AWS
        Region after it is created. The virtual interfaces and virtual private
        gateways that are connected through a Direct Connect gateway can be in
        different AWS Regions. This enables you to connect to a VPC in any
        Region, regardless of the Region in which the virtual interfaces are
        located, and pass traffic between them.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDirectConnectGatewayResult"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.CreateDirectConnectGateway
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDirectConnectGatewayRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.CreateDirectConnectGatewayAssociation:
    post:
      operationId: CreateDirectConnectGatewayAssociation
      description: Creates an association between a Direct Connect gateway and a virtual
        private gateway. The virtual private gateway must be attached to a VPC
        and must not be associated with another Direct Connect gateway.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDirectConnectGatewayAssociationRe\
                  sult"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.CreateDirectConnectGatewayAssociation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDirectConnectGatewayAssociationRequ\
                est"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.CreateDirectConnectGatewayAssociationProposal:
    post:
      operationId: CreateDirectConnectGatewayAssociationProposal
      description: <p>Creates a proposal to associate the specified virtual private gateway
        or transit gateway with the specified Direct Connect gateway.</p> <p>You
        can only associate a Direct Connect gateway and virtual private gateway
        or transit gateway when the account that owns the Direct Connect gateway
        and the account that owns the virtual private gateway or transit gateway
        have the same AWS Payer ID.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDirectConnectGatewayAssociationPr\
                  oposalResult"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.CreateDirectConnectGatewayAssociationProposal
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDirectConnectGatewayAssociationProp\
                osalRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.CreateInterconnect:
    post:
      operationId: CreateInterconnect
      description: <p>Creates an interconnect between an AWS Direct Connect Partner's
        network and a specific AWS Direct Connect location.</p> <p>An
        interconnect is a connection that is capable of hosting other
        connections. The AWS Direct Connect partner can use an interconnect to
        provide AWS Direct Connect hosted connections to customers through their
        own network services. Like a standard connection, an interconnect links
        the partner's network to an AWS Direct Connect location over a standard
        Ethernet fiber-optic cable. One end is connected to the partner's
        router, the other to an AWS Direct Connect router.</p> <p>You can
        automatically add the new interconnect to a link aggregation group (LAG)
        by specifying a LAG ID in the request. This ensures that the new
        interconnect is allocated on the same AWS Direct Connect endpoint that
        hosts the specified LAG. If there are no available ports on the
        endpoint, the request fails and no interconnect is created.</p> <p>For
        each end customer, the AWS Direct Connect Partner provisions a
        connection on their interconnect by calling
        <a>AllocateHostedConnection</a>. The end customer can then connect to
        AWS resources by creating a virtual interface on their connection, using
        the VLAN assigned to them by the AWS Direct Connect Partner.</p> <note>
        <p>Intended for use by AWS Direct Connect Partners only.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Interconnect"
        "480":
          description: DuplicateTagKeysException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateTagKeysException"
        "481":
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "482":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "483":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.CreateInterconnect
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateInterconnectRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.CreateLag:
    post:
      operationId: CreateLag
      description: <p>Creates a link aggregation group (LAG) with the specified number of
        bundled physical connections between the customer network and a specific
        AWS Direct Connect location. A LAG is a logical interface that uses the
        Link Aggregation Control Protocol (LACP) to aggregate multiple
        interfaces, enabling you to treat them as a single interface.</p> <p>All
        connections in a LAG must use the same bandwidth and must terminate at
        the same AWS Direct Connect endpoint.</p> <p>You can have up to 10
        connections per LAG. Regardless of this limit, if you request more
        connections for the LAG than AWS Direct Connect can allocate on a single
        endpoint, no LAG is created.</p> <p>You can specify an existing physical
        connection or interconnect to include in the LAG (which counts towards
        the total number of connections). Doing so interrupts the current
        physical connection or hosted connections, and re-establishes them as a
        member of the LAG. The LAG will be created on the same AWS Direct
        Connect endpoint to which the connection terminates. Any virtual
        interfaces associated with the connection are automatically
        disassociated and re-associated with the LAG. The connection ID does not
        change.</p> <p>If the AWS account used to create a LAG is a registered
        AWS Direct Connect Partner, the LAG is automatically enabled to host
        sub-connections. For a LAG owned by a partner, any associated virtual
        interfaces cannot be directly configured.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lag"
        "480":
          description: DuplicateTagKeysException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateTagKeysException"
        "481":
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "482":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "483":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.CreateLag
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateLagRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.CreatePrivateVirtualInterface:
    post:
      operationId: CreatePrivateVirtualInterface
      description: Creates a private virtual interface. A virtual interface is the VLAN
        that transports AWS Direct Connect traffic. A private virtual interface
        can be connected to either a Direct Connect gateway or a Virtual Private
        Gateway (VGW). Connecting the private virtual interface to a Direct
        Connect gateway enables the possibility for connecting to multiple VPCs,
        including VPCs in different AWS Regions. Connecting the private virtual
        interface to a VGW only provides access to a single VPC within the same
        Region.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualInterface"
        "480":
          description: DuplicateTagKeysException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateTagKeysException"
        "481":
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "482":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "483":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.CreatePrivateVirtualInterface
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePrivateVirtualInterfaceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.CreatePublicVirtualInterface:
    post:
      operationId: CreatePublicVirtualInterface
      description: <p>Creates a public virtual interface. A virtual interface is the VLAN
        that transports AWS Direct Connect traffic. A public virtual interface
        supports sending traffic to public services of AWS such as Amazon
        S3.</p> <p>When creating an IPv6 public virtual interface
        (<code>addressFamily</code> is <code>ipv6</code>), leave the
        <code>customer</code> and <code>amazon</code> address fields blank to
        use auto-assigned IPv6 space. Custom IPv6 addresses are not
        supported.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualInterface"
        "480":
          description: DuplicateTagKeysException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateTagKeysException"
        "481":
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "482":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "483":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.CreatePublicVirtualInterface
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePublicVirtualInterfaceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.CreateTransitVirtualInterface:
    post:
      operationId: CreateTransitVirtualInterface
      description: <p>Creates a transit virtual interface. A transit virtual interface
        should be used to access one or more transit gateways associated with
        Direct Connect gateways. A transit virtual interface enables the
        connection of multiple VPCs attached to a transit gateway to a Direct
        Connect gateway.</p> <important> <p>If you associate your transit
        gateway with one or more Direct Connect gateways, the Autonomous System
        Number (ASN) used by the transit gateway and the Direct Connect gateway
        must be different. For example, if you use the default ASN 64512 for
        both your the transit gateway and Direct Connect gateway, the
        association request fails.</p> </important>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTransitVirtualInterfaceResult"
        "480":
          description: DuplicateTagKeysException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateTagKeysException"
        "481":
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "482":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "483":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.CreateTransitVirtualInterface
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTransitVirtualInterfaceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DeleteBGPPeer:
    post:
      operationId: DeleteBGPPeer
      description: <p>Deletes the specified BGP peer on the specified virtual interface
        with the specified customer address and ASN.</p> <p>You cannot delete
        the last BGP peer from a virtual interface.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteBGPPeerResponse"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DeleteBGPPeer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteBGPPeerRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DeleteConnection:
    post:
      operationId: DeleteConnection
      description: <p>Deletes the specified connection.</p> <p>Deleting a connection only
        stops the AWS Direct Connect port hour and data transfer charges. If you
        are partnering with any third parties to connect with the AWS Direct
        Connect location, you must cancel your service with them separately.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connection"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DeleteConnection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteConnectionRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DeleteDirectConnectGateway:
    post:
      operationId: DeleteDirectConnectGateway
      description: Deletes the specified Direct Connect gateway. You must first delete all
        virtual interfaces that are attached to the Direct Connect gateway and
        disassociate all virtual private gateways that are associated with the
        Direct Connect gateway.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDirectConnectGatewayResult"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DeleteDirectConnectGateway
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDirectConnectGatewayRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DeleteDirectConnectGatewayAssociation:
    post:
      operationId: DeleteDirectConnectGatewayAssociation
      description: Deletes the association between the specified Direct Connect gateway and
        virtual private gateway.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDirectConnectGatewayAssociationRe\
                  sult"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DeleteDirectConnectGatewayAssociation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDirectConnectGatewayAssociationRequ\
                est"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DeleteDirectConnectGatewayAssociationProposal:
    post:
      operationId: DeleteDirectConnectGatewayAssociationProposal
      description: Deletes the association proposal request between the specified Direct
        Connect gateway and virtual private gateway or transit gateway.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDirectConnectGatewayAssociationPr\
                  oposalResult"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DeleteDirectConnectGatewayAssociationProposal
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDirectConnectGatewayAssociationProp\
                osalRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DeleteInterconnect:
    post:
      operationId: DeleteInterconnect
      description: <p>Deletes the specified interconnect.</p> <note> <p>Intended for use by
        AWS Direct Connect Partners only.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteInterconnectResponse"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DeleteInterconnect
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteInterconnectRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DeleteLag:
    post:
      operationId: DeleteLag
      description: Deletes the specified link aggregation group (LAG). You cannot delete a
        LAG if it has active virtual interfaces or hosted connections.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lag"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DeleteLag
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteLagRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DeleteVirtualInterface:
    post:
      operationId: DeleteVirtualInterface
      description: Deletes a virtual interface.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteVirtualInterfaceResponse"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DeleteVirtualInterface
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteVirtualInterfaceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DescribeConnectionLoa:
    post:
      deprecated: true
      operationId: DescribeConnectionLoa
      description: <p>Deprecated. Use <a>DescribeLoa</a> instead.</p> <p>Gets the LOA-CFA
        for a connection.</p> <p>The Letter of Authorization - Connecting
        Facility Assignment (LOA-CFA) is a document that your APN partner or
        service provider uses when establishing your cross connect to AWS at the
        colocation facility. For more information, see <a
        href="https://docs.aws.amazon.com/directconnect/latest/UserGuide/Colocation.html">Requesting
        Cross Connects at AWS Direct Connect Locations</a> in the <i>AWS Direct
        Connect User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeConnectionLoaResponse"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DescribeConnectionLoa
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeConnectionLoaRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DescribeConnections:
    post:
      operationId: DescribeConnections
      description: Displays the specified connection or all connections in this Region.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connections"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DescribeConnections
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeConnectionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DescribeConnectionsOnInterconnect:
    post:
      deprecated: true
      operationId: DescribeConnectionsOnInterconnect
      description: <p>Deprecated. Use <a>DescribeHostedConnections</a> instead.</p>
        <p>Lists the connections that have been provisioned on the specified
        interconnect.</p> <note> <p>Intended for use by AWS Direct Connect
        Partners only.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connections"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DescribeConnectionsOnInterconnect
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeConnectionsOnInterconnectRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DescribeDirectConnectGatewayAssociationProposals:
    post:
      operationId: DescribeDirectConnectGatewayAssociationProposals
      description: "Describes one or more association proposals for connection between a
        virtual private gateway or transit gateway and a Direct Connect gateway.
        "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDirectConnectGatewayAssociation\
                  ProposalsResult"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DescribeDirectConnectGatewayAssociationProposals
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeDirectConnectGatewayAssociationPr\
                oposalsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DescribeDirectConnectGatewayAssociations:
    post:
      operationId: DescribeDirectConnectGatewayAssociations
      description: Lists the associations between your Direct Connect gateways and virtual
        private gateways. You must specify a Direct Connect gateway, a virtual
        private gateway, or both. If you specify a Direct Connect gateway, the
        response contains all virtual private gateways associated with the
        Direct Connect gateway. If you specify a virtual private gateway, the
        response contains all Direct Connect gateways associated with the
        virtual private gateway. If you specify both, the response contains the
        association between the Direct Connect gateway and the virtual private
        gateway.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDirectConnectGatewayAssociation\
                  sResult"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DescribeDirectConnectGatewayAssociations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeDirectConnectGatewayAssociationsR\
                equest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DescribeDirectConnectGatewayAttachments:
    post:
      operationId: DescribeDirectConnectGatewayAttachments
      description: Lists the attachments between your Direct Connect gateways and virtual
        interfaces. You must specify a Direct Connect gateway, a virtual
        interface, or both. If you specify a Direct Connect gateway, the
        response contains all virtual interfaces attached to the Direct Connect
        gateway. If you specify a virtual interface, the response contains all
        Direct Connect gateways attached to the virtual interface. If you
        specify both, the response contains the attachment between the Direct
        Connect gateway and the virtual interface.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDirectConnectGatewayAttachments\
                  Result"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DescribeDirectConnectGatewayAttachments
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeDirectConnectGatewayAttachmentsRe\
                quest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DescribeDirectConnectGateways:
    post:
      operationId: DescribeDirectConnectGateways
      description: Lists all your Direct Connect gateways or only the specified Direct
        Connect gateway. Deleted Direct Connect gateways are not returned.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDirectConnectGatewaysResult"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DescribeDirectConnectGateways
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeDirectConnectGatewaysRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DescribeHostedConnections:
    post:
      operationId: DescribeHostedConnections
      description: <p>Lists the hosted connections that have been provisioned on the
        specified interconnect or link aggregation group (LAG).</p> <note>
        <p>Intended for use by AWS Direct Connect Partners only.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connections"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DescribeHostedConnections
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeHostedConnectionsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DescribeInterconnectLoa:
    post:
      deprecated: true
      operationId: DescribeInterconnectLoa
      description: <p>Deprecated. Use <a>DescribeLoa</a> instead.</p> <p>Gets the LOA-CFA
        for the specified interconnect.</p> <p>The Letter of Authorization -
        Connecting Facility Assignment (LOA-CFA) is a document that is used when
        establishing your cross connect to AWS at the colocation facility. For
        more information, see <a
        href="https://docs.aws.amazon.com/directconnect/latest/UserGuide/Colocation.html">Requesting
        Cross Connects at AWS Direct Connect Locations</a> in the <i>AWS Direct
        Connect User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeInterconnectLoaResponse"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DescribeInterconnectLoa
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeInterconnectLoaRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DescribeInterconnects:
    post:
      operationId: DescribeInterconnects
      description: Lists the interconnects owned by the AWS account or only the specified
        interconnect.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Interconnects"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DescribeInterconnects
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeInterconnectsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DescribeLags:
    post:
      operationId: DescribeLags
      description: Describes all your link aggregation groups (LAG) or the specified LAG.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lags"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DescribeLags
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeLagsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DescribeLoa:
    post:
      operationId: DescribeLoa
      description: <p>Gets the LOA-CFA for a connection, interconnect, or link aggregation
        group (LAG).</p> <p>The Letter of Authorization - Connecting Facility
        Assignment (LOA-CFA) is a document that is used when establishing your
        cross connect to AWS at the colocation facility. For more information,
        see <a
        href="https://docs.aws.amazon.com/directconnect/latest/UserGuide/Colocation.html">Requesting
        Cross Connects at AWS Direct Connect Locations</a> in the <i>AWS Direct
        Connect User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Loa"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DescribeLoa
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeLoaRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DescribeLocations:
    post:
      operationId: DescribeLocations
      description: Lists the AWS Direct Connect locations in the current AWS Region. These
        are the locations that can be selected when calling
        <a>CreateConnection</a> or <a>CreateInterconnect</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Locations"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DescribeLocations
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DescribeTags:
    post:
      operationId: DescribeTags
      description: Describes the tags associated with the specified AWS Direct Connect
        resources.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTagsResponse"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DescribeTags
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeTagsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DescribeVirtualGateways:
    post:
      operationId: DescribeVirtualGateways
      description: <p>Lists the virtual private gateways owned by the AWS account.</p>
        <p>You can create one or more AWS Direct Connect private virtual
        interfaces linked to a virtual private gateway.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualGateways"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DescribeVirtualGateways
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DescribeVirtualInterfaces:
    post:
      operationId: DescribeVirtualInterfaces
      description: <p>Displays all virtual interfaces for an AWS account. Virtual
        interfaces deleted fewer than 15 minutes before you make the request are
        also returned. If you specify a connection ID, only the virtual
        interfaces associated with the connection are returned. If you specify a
        virtual interface ID, then only a single virtual interface is
        returned.</p> <p>A virtual interface (VLAN) transmits the traffic
        between the AWS Direct Connect location and the customer network.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualInterfaces"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DescribeVirtualInterfaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeVirtualInterfacesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.DisassociateConnectionFromLag:
    post:
      operationId: DisassociateConnectionFromLag
      description: <p>Disassociates a connection from a link aggregation group (LAG). The
        connection is interrupted and re-established as a standalone connection
        (the connection is not deleted; to delete the connection, use the
        <a>DeleteConnection</a> request). If the LAG has associated virtual
        interfaces or hosted connections, they remain associated with the LAG. A
        disassociated connection owned by an AWS Direct Connect Partner is
        automatically converted to an interconnect.</p> <p>If disassociating the
        connection would cause the LAG to fall below its setting for minimum
        number of operational connections, the request fails, except when it's
        the last member of the LAG. If all connections are disassociated, the
        LAG continues to exist as an empty LAG with no physical connections.
        </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connection"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.DisassociateConnectionFromLag
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateConnectionFromLagRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.TagResource:
    post:
      operationId: TagResource
      description: <p>Adds the specified tags to the specified AWS Direct Connect resource.
        Each resource can have a maximum of 50 tags.</p> <p>Each tag consists of
        a key and an optional value. If a tag with the same key is already
        associated with the resource, this action updates its value.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: DuplicateTagKeysException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateTagKeysException"
        "481":
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
        "482":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "483":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.TagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.UntagResource:
    post:
      operationId: UntagResource
      description: Removes one or more tags from the specified AWS Direct Connect resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.UntagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UntagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.UpdateDirectConnectGatewayAssociation:
    post:
      operationId: UpdateDirectConnectGatewayAssociation
      description: <p>Updates the specified attributes of the Direct Connect gateway
        association.</p> <p>Add or remove prefixes from the association.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDirectConnectGatewayAssociationRe\
                  sult"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.UpdateDirectConnectGatewayAssociation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDirectConnectGatewayAssociationRequ\
                est"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.UpdateLag:
    post:
      operationId: UpdateLag
      description: <p>Updates the attributes of the specified link aggregation group
        (LAG).</p> <p>You can update the following attributes:</p> <ul> <li>
        <p>The name of the LAG.</p> </li> <li> <p>The value for the minimum
        number of connections that must be operational for the LAG itself to be
        operational. </p> </li> </ul> <p>When you create a LAG, the default
        value for the minimum number of operational connections is zero (0). If
        you update this value and the number of operational connections falls
        below the specified value, the LAG automatically goes down to avoid
        over-utilization of the remaining connections. Adjust this value with
        care, as it could force the LAG down if it is set higher than the
        current number of operational connections.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lag"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.UpdateLag
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateLagRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=OvertureService.UpdateVirtualInterfaceAttributes:
    post:
      operationId: UpdateVirtualInterfaceAttributes
      description: <p>Updates the specified attributes of the specified virtual private
        interface.</p> <p>Setting the MTU of a virtual interface to 9001 (jumbo
        frames) can cause an update to the underlying physical connection if it
        wasn't updated to support jumbo frames. Updating the connection disrupts
        network connectivity for all virtual interfaces associated with the
        connection for up to 30 seconds. To check whether your connection
        supports jumbo frames, call <a>DescribeConnections</a>. To check whether
        your virtual interface supports jumbo frames, call
        <a>DescribeVirtualInterfaces</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VirtualInterface"
        "480":
          description: DirectConnectServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectServerException"
        "481":
          description: DirectConnectClientException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectClientException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - OvertureService.UpdateVirtualInterfaceAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateVirtualInterfaceAttributesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://directconnect.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS Direct Connect multi-region endpoint
  - url: https://directconnect.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The AWS Direct Connect multi-region endpoint
  - url: http://directconnect.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Direct Connect endpoint for China (Beijing) and China (Ningxia)
  - url: https://directconnect.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Direct Connect endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AcceptDirectConnectGatewayAssociationProposalResult:
      type: object
      properties:
        directConnectGatewayAssociation:
          $ref: "#/components/schemas/DirectConnectGatewayAssociation"
    AcceptDirectConnectGatewayAssociationProposalRequest:
      type: object
      required:
        - directConnectGatewayId
        - proposalId
        - associatedGatewayOwnerAccount
      properties:
        directConnectGatewayId:
          $ref: "#/components/schemas/DirectConnectGatewayId"
        proposalId:
          $ref: "#/components/schemas/DirectConnectGatewayAssociationProposalId"
        associatedGatewayOwnerAccount:
          $ref: "#/components/schemas/OwnerAccount"
        overrideAllowedPrefixesToDirectConnectGateway:
          $ref: "#/components/schemas/RouteFilterPrefixList"
    DirectConnectServerException: {}
    DirectConnectClientException: {}
    Connection:
      type: object
      properties:
        ownerAccount:
          $ref: "#/components/schemas/OwnerAccount"
        connectionId:
          $ref: "#/components/schemas/ConnectionId"
        connectionName:
          $ref: "#/components/schemas/ConnectionName"
        connectionState:
          $ref: "#/components/schemas/ConnectionState"
        region:
          $ref: "#/components/schemas/Region"
        location:
          $ref: "#/components/schemas/LocationCode"
        bandwidth:
          $ref: "#/components/schemas/Bandwidth"
        vlan:
          $ref: "#/components/schemas/VLAN"
        partnerName:
          $ref: "#/components/schemas/PartnerName"
        loaIssueTime:
          $ref: "#/components/schemas/LoaIssueTime"
        lagId:
          $ref: "#/components/schemas/LagId"
        awsDevice:
          $ref: "#/components/schemas/AwsDevice"
        jumboFrameCapable:
          $ref: "#/components/schemas/JumboFrameCapable"
        awsDeviceV2:
          $ref: "#/components/schemas/AwsDeviceV2"
        hasLogicalRedundancy:
          $ref: "#/components/schemas/HasLogicalRedundancy"
        tags:
          $ref: "#/components/schemas/TagList"
      description: Information about an AWS Direct Connect connection.
    AllocateConnectionOnInterconnectRequest:
      type: object
      required:
        - bandwidth
        - connectionName
        - ownerAccount
        - interconnectId
        - vlan
      properties:
        bandwidth:
          $ref: "#/components/schemas/Bandwidth"
        connectionName:
          $ref: "#/components/schemas/ConnectionName"
        ownerAccount:
          $ref: "#/components/schemas/OwnerAccount"
        interconnectId:
          $ref: "#/components/schemas/InterconnectId"
        vlan:
          $ref: "#/components/schemas/VLAN"
    AllocateHostedConnectionRequest:
      type: object
      required:
        - connectionId
        - ownerAccount
        - bandwidth
        - connectionName
        - vlan
      properties:
        connectionId:
          $ref: "#/components/schemas/ConnectionId"
        ownerAccount:
          $ref: "#/components/schemas/OwnerAccount"
        bandwidth:
          $ref: "#/components/schemas/Bandwidth"
        connectionName:
          $ref: "#/components/schemas/ConnectionName"
        vlan:
          $ref: "#/components/schemas/VLAN"
        tags:
          $ref: "#/components/schemas/TagList"
    DuplicateTagKeysException: {}
    TooManyTagsException: {}
    VirtualInterface:
      type: object
      properties:
        ownerAccount:
          $ref: "#/components/schemas/OwnerAccount"
        virtualInterfaceId:
          $ref: "#/components/schemas/VirtualInterfaceId"
        location:
          $ref: "#/components/schemas/LocationCode"
        connectionId:
          $ref: "#/components/schemas/ConnectionId"
        virtualInterfaceType:
          $ref: "#/components/schemas/VirtualInterfaceType"
        virtualInterfaceName:
          $ref: "#/components/schemas/VirtualInterfaceName"
        vlan:
          $ref: "#/components/schemas/VLAN"
        asn:
          $ref: "#/components/schemas/ASN"
        amazonSideAsn:
          $ref: "#/components/schemas/LongAsn"
        authKey:
          $ref: "#/components/schemas/BGPAuthKey"
        amazonAddress:
          $ref: "#/components/schemas/AmazonAddress"
        customerAddress:
          $ref: "#/components/schemas/CustomerAddress"
        addressFamily:
          $ref: "#/components/schemas/AddressFamily"
        virtualInterfaceState:
          $ref: "#/components/schemas/VirtualInterfaceState"
        customerRouterConfig:
          $ref: "#/components/schemas/RouterConfig"
        mtu:
          $ref: "#/components/schemas/MTU"
        jumboFrameCapable:
          $ref: "#/components/schemas/JumboFrameCapable"
        virtualGatewayId:
          $ref: "#/components/schemas/VirtualGatewayId"
        directConnectGatewayId:
          $ref: "#/components/schemas/DirectConnectGatewayId"
        routeFilterPrefixes:
          $ref: "#/components/schemas/RouteFilterPrefixList"
        bgpPeers:
          $ref: "#/components/schemas/BGPPeerList"
        region:
          $ref: "#/components/schemas/Region"
        awsDeviceV2:
          $ref: "#/components/schemas/AwsDeviceV2"
        tags:
          $ref: "#/components/schemas/TagList"
      description: Information about a virtual interface.
    AllocatePrivateVirtualInterfaceRequest:
      type: object
      required:
        - connectionId
        - ownerAccount
        - newPrivateVirtualInterfaceAllocation
      properties:
        connectionId:
          $ref: "#/components/schemas/ConnectionId"
        ownerAccount:
          $ref: "#/components/schemas/OwnerAccount"
        newPrivateVirtualInterfaceAllocation:
          $ref: "#/components/schemas/NewPrivateVirtualInterfaceAllocation"
    AllocatePublicVirtualInterfaceRequest:
      type: object
      required:
        - connectionId
        - ownerAccount
        - newPublicVirtualInterfaceAllocation
      properties:
        connectionId:
          $ref: "#/components/schemas/ConnectionId"
        ownerAccount:
          $ref: "#/components/schemas/OwnerAccount"
        newPublicVirtualInterfaceAllocation:
          $ref: "#/components/schemas/NewPublicVirtualInterfaceAllocation"
    AllocateTransitVirtualInterfaceResult:
      type: object
      properties:
        virtualInterface:
          $ref: "#/components/schemas/VirtualInterface"
    AllocateTransitVirtualInterfaceRequest:
      type: object
      required:
        - connectionId
        - ownerAccount
        - newTransitVirtualInterfaceAllocation
      properties:
        connectionId:
          $ref: "#/components/schemas/ConnectionId"
        ownerAccount:
          $ref: "#/components/schemas/OwnerAccount"
        newTransitVirtualInterfaceAllocation:
          $ref: "#/components/schemas/NewTransitVirtualInterfaceAllocation"
    AssociateConnectionWithLagRequest:
      type: object
      required:
        - connectionId
        - lagId
      properties:
        connectionId:
          $ref: "#/components/schemas/ConnectionId"
        lagId:
          $ref: "#/components/schemas/LagId"
    AssociateHostedConnectionRequest:
      type: object
      required:
        - connectionId
        - parentConnectionId
      properties:
        connectionId:
          $ref: "#/components/schemas/ConnectionId"
        parentConnectionId:
          $ref: "#/components/schemas/ConnectionId"
    AssociateVirtualInterfaceRequest:
      type: object
      required:
        - virtualInterfaceId
        - connectionId
      properties:
        virtualInterfaceId:
          $ref: "#/components/schemas/VirtualInterfaceId"
        connectionId:
          $ref: "#/components/schemas/ConnectionId"
    ConfirmConnectionResponse:
      type: object
      properties:
        connectionState:
          $ref: "#/components/schemas/ConnectionState"
    ConfirmConnectionRequest:
      type: object
      required:
        - connectionId
      properties:
        connectionId:
          $ref: "#/components/schemas/ConnectionId"
    ConfirmPrivateVirtualInterfaceResponse:
      type: object
      properties:
        virtualInterfaceState:
          $ref: "#/components/schemas/VirtualInterfaceState"
    ConfirmPrivateVirtualInterfaceRequest:
      type: object
      required:
        - virtualInterfaceId
      properties:
        virtualInterfaceId:
          $ref: "#/components/schemas/VirtualInterfaceId"
        virtualGatewayId:
          $ref: "#/components/schemas/VirtualGatewayId"
        directConnectGatewayId:
          $ref: "#/components/schemas/DirectConnectGatewayId"
    ConfirmPublicVirtualInterfaceResponse:
      type: object
      properties:
        virtualInterfaceState:
          $ref: "#/components/schemas/VirtualInterfaceState"
    ConfirmPublicVirtualInterfaceRequest:
      type: object
      required:
        - virtualInterfaceId
      properties:
        virtualInterfaceId:
          $ref: "#/components/schemas/VirtualInterfaceId"
    ConfirmTransitVirtualInterfaceResponse:
      type: object
      properties:
        virtualInterfaceState:
          $ref: "#/components/schemas/VirtualInterfaceState"
    ConfirmTransitVirtualInterfaceRequest:
      type: object
      required:
        - virtualInterfaceId
        - directConnectGatewayId
      properties:
        virtualInterfaceId:
          $ref: "#/components/schemas/VirtualInterfaceId"
        directConnectGatewayId:
          $ref: "#/components/schemas/DirectConnectGatewayId"
    CreateBGPPeerResponse:
      type: object
      properties:
        virtualInterface:
          $ref: "#/components/schemas/VirtualInterface"
    CreateBGPPeerRequest:
      type: object
      properties:
        virtualInterfaceId:
          $ref: "#/components/schemas/VirtualInterfaceId"
        newBGPPeer:
          $ref: "#/components/schemas/NewBGPPeer"
    CreateConnectionRequest:
      type: object
      required:
        - location
        - bandwidth
        - connectionName
      properties:
        location:
          $ref: "#/components/schemas/LocationCode"
        bandwidth:
          $ref: "#/components/schemas/Bandwidth"
        connectionName:
          $ref: "#/components/schemas/ConnectionName"
        lagId:
          $ref: "#/components/schemas/LagId"
        tags:
          $ref: "#/components/schemas/TagList"
    CreateDirectConnectGatewayResult:
      type: object
      properties:
        directConnectGateway:
          $ref: "#/components/schemas/DirectConnectGateway"
    CreateDirectConnectGatewayRequest:
      type: object
      required:
        - directConnectGatewayName
      properties:
        directConnectGatewayName:
          $ref: "#/components/schemas/DirectConnectGatewayName"
        amazonSideAsn:
          $ref: "#/components/schemas/LongAsn"
    CreateDirectConnectGatewayAssociationResult:
      type: object
      properties:
        directConnectGatewayAssociation:
          $ref: "#/components/schemas/DirectConnectGatewayAssociation"
    CreateDirectConnectGatewayAssociationRequest:
      type: object
      required:
        - directConnectGatewayId
      properties:
        directConnectGatewayId:
          $ref: "#/components/schemas/DirectConnectGatewayId"
        gatewayId:
          $ref: "#/components/schemas/GatewayIdToAssociate"
        addAllowedPrefixesToDirectConnectGateway:
          $ref: "#/components/schemas/RouteFilterPrefixList"
        virtualGatewayId:
          $ref: "#/components/schemas/VirtualGatewayId"
    CreateDirectConnectGatewayAssociationProposalResult:
      type: object
      properties:
        directConnectGatewayAssociationProposal:
          $ref: "#/components/schemas/DirectConnectGatewayAssociationProposal"
    CreateDirectConnectGatewayAssociationProposalRequest:
      type: object
      required:
        - directConnectGatewayId
        - directConnectGatewayOwnerAccount
        - gatewayId
      properties:
        directConnectGatewayId:
          $ref: "#/components/schemas/DirectConnectGatewayId"
        directConnectGatewayOwnerAccount:
          $ref: "#/components/schemas/OwnerAccount"
        gatewayId:
          $ref: "#/components/schemas/GatewayIdToAssociate"
        addAllowedPrefixesToDirectConnectGateway:
          $ref: "#/components/schemas/RouteFilterPrefixList"
        removeAllowedPrefixesToDirectConnectGateway:
          $ref: "#/components/schemas/RouteFilterPrefixList"
    Interconnect:
      type: object
      properties:
        interconnectId:
          $ref: "#/components/schemas/InterconnectId"
        interconnectName:
          $ref: "#/components/schemas/InterconnectName"
        interconnectState:
          $ref: "#/components/schemas/InterconnectState"
        region:
          $ref: "#/components/schemas/Region"
        location:
          $ref: "#/components/schemas/LocationCode"
        bandwidth:
          $ref: "#/components/schemas/Bandwidth"
        loaIssueTime:
          $ref: "#/components/schemas/LoaIssueTime"
        lagId:
          $ref: "#/components/schemas/LagId"
        awsDevice:
          $ref: "#/components/schemas/AwsDevice"
        jumboFrameCapable:
          $ref: "#/components/schemas/JumboFrameCapable"
        awsDeviceV2:
          $ref: "#/components/schemas/AwsDeviceV2"
        hasLogicalRedundancy:
          $ref: "#/components/schemas/HasLogicalRedundancy"
        tags:
          $ref: "#/components/schemas/TagList"
      description: Information about an interconnect.
    CreateInterconnectRequest:
      type: object
      required:
        - interconnectName
        - bandwidth
        - location
      properties:
        interconnectName:
          $ref: "#/components/schemas/InterconnectName"
        bandwidth:
          $ref: "#/components/schemas/Bandwidth"
        location:
          $ref: "#/components/schemas/LocationCode"
        lagId:
          $ref: "#/components/schemas/LagId"
        tags:
          $ref: "#/components/schemas/TagList"
    Lag:
      type: object
      properties:
        connectionsBandwidth:
          $ref: "#/components/schemas/Bandwidth"
        numberOfConnections:
          $ref: "#/components/schemas/Count"
        lagId:
          $ref: "#/components/schemas/LagId"
        ownerAccount:
          $ref: "#/components/schemas/OwnerAccount"
        lagName:
          $ref: "#/components/schemas/LagName"
        lagState:
          $ref: "#/components/schemas/LagState"
        location:
          $ref: "#/components/schemas/LocationCode"
        region:
          $ref: "#/components/schemas/Region"
        minimumLinks:
          $ref: "#/components/schemas/Count"
        awsDevice:
          $ref: "#/components/schemas/AwsDevice"
        awsDeviceV2:
          $ref: "#/components/schemas/AwsDeviceV2"
        connections:
          $ref: "#/components/schemas/ConnectionList"
        allowsHostedConnections:
          $ref: "#/components/schemas/BooleanFlag"
        jumboFrameCapable:
          $ref: "#/components/schemas/JumboFrameCapable"
        hasLogicalRedundancy:
          $ref: "#/components/schemas/HasLogicalRedundancy"
        tags:
          $ref: "#/components/schemas/TagList"
      description: Information about a link aggregation group (LAG).
    CreateLagRequest:
      type: object
      required:
        - numberOfConnections
        - location
        - connectionsBandwidth
        - lagName
      properties:
        numberOfConnections:
          $ref: "#/components/schemas/Count"
        location:
          $ref: "#/components/schemas/LocationCode"
        connectionsBandwidth:
          $ref: "#/components/schemas/Bandwidth"
        lagName:
          $ref: "#/components/schemas/LagName"
        connectionId:
          $ref: "#/components/schemas/ConnectionId"
        tags:
          $ref: "#/components/schemas/TagList"
        childConnectionTags:
          $ref: "#/components/schemas/TagList"
    CreatePrivateVirtualInterfaceRequest:
      type: object
      required:
        - connectionId
        - newPrivateVirtualInterface
      properties:
        connectionId:
          $ref: "#/components/schemas/ConnectionId"
        newPrivateVirtualInterface:
          $ref: "#/components/schemas/NewPrivateVirtualInterface"
    CreatePublicVirtualInterfaceRequest:
      type: object
      required:
        - connectionId
        - newPublicVirtualInterface
      properties:
        connectionId:
          $ref: "#/components/schemas/ConnectionId"
        newPublicVirtualInterface:
          $ref: "#/components/schemas/NewPublicVirtualInterface"
    CreateTransitVirtualInterfaceResult:
      type: object
      properties:
        virtualInterface:
          $ref: "#/components/schemas/VirtualInterface"
    CreateTransitVirtualInterfaceRequest:
      type: object
      required:
        - connectionId
        - newTransitVirtualInterface
      properties:
        connectionId:
          $ref: "#/components/schemas/ConnectionId"
        newTransitVirtualInterface:
          $ref: "#/components/schemas/NewTransitVirtualInterface"
    DeleteBGPPeerResponse:
      type: object
      properties:
        virtualInterface:
          $ref: "#/components/schemas/VirtualInterface"
    DeleteBGPPeerRequest:
      type: object
      properties:
        virtualInterfaceId:
          $ref: "#/components/schemas/VirtualInterfaceId"
        asn:
          $ref: "#/components/schemas/ASN"
        customerAddress:
          $ref: "#/components/schemas/CustomerAddress"
        bgpPeerId:
          $ref: "#/components/schemas/BGPPeerId"
    DeleteConnectionRequest:
      type: object
      required:
        - connectionId
      properties:
        connectionId:
          $ref: "#/components/schemas/ConnectionId"
    DeleteDirectConnectGatewayResult:
      type: object
      properties:
        directConnectGateway:
          $ref: "#/components/schemas/DirectConnectGateway"
    DeleteDirectConnectGatewayRequest:
      type: object
      required:
        - directConnectGatewayId
      properties:
        directConnectGatewayId:
          $ref: "#/components/schemas/DirectConnectGatewayId"
    DeleteDirectConnectGatewayAssociationResult:
      type: object
      properties:
        directConnectGatewayAssociation:
          $ref: "#/components/schemas/DirectConnectGatewayAssociation"
    DeleteDirectConnectGatewayAssociationRequest:
      type: object
      properties:
        associationId:
          $ref: "#/components/schemas/DirectConnectGatewayAssociationId"
        directConnectGatewayId:
          $ref: "#/components/schemas/DirectConnectGatewayId"
        virtualGatewayId:
          $ref: "#/components/schemas/VirtualGatewayId"
    DeleteDirectConnectGatewayAssociationProposalResult:
      type: object
      properties:
        directConnectGatewayAssociationProposal:
          $ref: "#/components/schemas/DirectConnectGatewayAssociationProposal"
    DeleteDirectConnectGatewayAssociationProposalRequest:
      type: object
      required:
        - proposalId
      properties:
        proposalId:
          $ref: "#/components/schemas/DirectConnectGatewayAssociationProposalId"
    DeleteInterconnectResponse:
      type: object
      properties:
        interconnectState:
          $ref: "#/components/schemas/InterconnectState"
    DeleteInterconnectRequest:
      type: object
      required:
        - interconnectId
      properties:
        interconnectId:
          $ref: "#/components/schemas/InterconnectId"
    DeleteLagRequest:
      type: object
      required:
        - lagId
      properties:
        lagId:
          $ref: "#/components/schemas/LagId"
    DeleteVirtualInterfaceResponse:
      type: object
      properties:
        virtualInterfaceState:
          $ref: "#/components/schemas/VirtualInterfaceState"
    DeleteVirtualInterfaceRequest:
      type: object
      required:
        - virtualInterfaceId
      properties:
        virtualInterfaceId:
          $ref: "#/components/schemas/VirtualInterfaceId"
    DescribeConnectionLoaResponse:
      type: object
      properties:
        loa:
          $ref: "#/components/schemas/Loa"
    DescribeConnectionLoaRequest:
      type: object
      required:
        - connectionId
      properties:
        connectionId:
          $ref: "#/components/schemas/ConnectionId"
        providerName:
          $ref: "#/components/schemas/ProviderName"
        loaContentType:
          $ref: "#/components/schemas/LoaContentType"
    Connections:
      type: object
      properties:
        connections:
          $ref: "#/components/schemas/ConnectionList"
    DescribeConnectionsRequest:
      type: object
      properties:
        connectionId:
          $ref: "#/components/schemas/ConnectionId"
    DescribeConnectionsOnInterconnectRequest:
      type: object
      required:
        - interconnectId
      properties:
        interconnectId:
          $ref: "#/components/schemas/InterconnectId"
    DescribeDirectConnectGatewayAssociationProposalsResult:
      type: object
      properties:
        directConnectGatewayAssociationProposals:
          $ref: "#/components/schemas/DirectConnectGatewayAssociationProposalList"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
    DescribeDirectConnectGatewayAssociationProposalsRequest:
      type: object
      properties:
        directConnectGatewayId:
          $ref: "#/components/schemas/DirectConnectGatewayId"
        proposalId:
          $ref: "#/components/schemas/DirectConnectGatewayAssociationProposalId"
        associatedGatewayId:
          $ref: "#/components/schemas/AssociatedGatewayId"
        maxResults:
          $ref: "#/components/schemas/MaxResultSetSize"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
    DescribeDirectConnectGatewayAssociationsResult:
      type: object
      properties:
        directConnectGatewayAssociations:
          $ref: "#/components/schemas/DirectConnectGatewayAssociationList"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
    DescribeDirectConnectGatewayAssociationsRequest:
      type: object
      properties:
        associationId:
          $ref: "#/components/schemas/DirectConnectGatewayAssociationId"
        associatedGatewayId:
          $ref: "#/components/schemas/AssociatedGatewayId"
        directConnectGatewayId:
          $ref: "#/components/schemas/DirectConnectGatewayId"
        maxResults:
          $ref: "#/components/schemas/MaxResultSetSize"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
        virtualGatewayId:
          $ref: "#/components/schemas/VirtualGatewayId"
    DescribeDirectConnectGatewayAttachmentsResult:
      type: object
      properties:
        directConnectGatewayAttachments:
          $ref: "#/components/schemas/DirectConnectGatewayAttachmentList"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
    DescribeDirectConnectGatewayAttachmentsRequest:
      type: object
      properties:
        directConnectGatewayId:
          $ref: "#/components/schemas/DirectConnectGatewayId"
        virtualInterfaceId:
          $ref: "#/components/schemas/VirtualInterfaceId"
        maxResults:
          $ref: "#/components/schemas/MaxResultSetSize"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
    DescribeDirectConnectGatewaysResult:
      type: object
      properties:
        directConnectGateways:
          $ref: "#/components/schemas/DirectConnectGatewayList"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
    DescribeDirectConnectGatewaysRequest:
      type: object
      properties:
        directConnectGatewayId:
          $ref: "#/components/schemas/DirectConnectGatewayId"
        maxResults:
          $ref: "#/components/schemas/MaxResultSetSize"
        nextToken:
          $ref: "#/components/schemas/PaginationToken"
    DescribeHostedConnectionsRequest:
      type: object
      required:
        - connectionId
      properties:
        connectionId:
          $ref: "#/components/schemas/ConnectionId"
    DescribeInterconnectLoaResponse:
      type: object
      properties:
        loa:
          $ref: "#/components/schemas/Loa"
    DescribeInterconnectLoaRequest:
      type: object
      required:
        - interconnectId
      properties:
        interconnectId:
          $ref: "#/components/schemas/InterconnectId"
        providerName:
          $ref: "#/components/schemas/ProviderName"
        loaContentType:
          $ref: "#/components/schemas/LoaContentType"
    Interconnects:
      type: object
      properties:
        interconnects:
          $ref: "#/components/schemas/InterconnectList"
    DescribeInterconnectsRequest:
      type: object
      properties:
        interconnectId:
          $ref: "#/components/schemas/InterconnectId"
    Lags:
      type: object
      properties:
        lags:
          $ref: "#/components/schemas/LagList"
    DescribeLagsRequest:
      type: object
      properties:
        lagId:
          $ref: "#/components/schemas/LagId"
    Loa:
      type: object
      properties:
        loaContent:
          $ref: "#/components/schemas/LoaContent"
        loaContentType:
          $ref: "#/components/schemas/LoaContentType"
      description: Information about a Letter of Authorization - Connecting Facility
        Assignment (LOA-CFA) for a connection.
    DescribeLoaRequest:
      type: object
      required:
        - connectionId
      properties:
        connectionId:
          $ref: "#/components/schemas/ConnectionId"
        providerName:
          $ref: "#/components/schemas/ProviderName"
        loaContentType:
          $ref: "#/components/schemas/LoaContentType"
    Locations:
      type: object
      properties:
        locations:
          $ref: "#/components/schemas/LocationList"
    DescribeTagsResponse:
      type: object
      properties:
        resourceTags:
          $ref: "#/components/schemas/ResourceTagList"
    DescribeTagsRequest:
      type: object
      required:
        - resourceArns
      properties:
        resourceArns:
          $ref: "#/components/schemas/ResourceArnList"
    VirtualGateways:
      type: object
      properties:
        virtualGateways:
          $ref: "#/components/schemas/VirtualGatewayList"
    VirtualInterfaces:
      type: object
      properties:
        virtualInterfaces:
          $ref: "#/components/schemas/VirtualInterfaceList"
    DescribeVirtualInterfacesRequest:
      type: object
      properties:
        connectionId:
          $ref: "#/components/schemas/ConnectionId"
        virtualInterfaceId:
          $ref: "#/components/schemas/VirtualInterfaceId"
    DisassociateConnectionFromLagRequest:
      type: object
      required:
        - connectionId
        - lagId
      properties:
        connectionId:
          $ref: "#/components/schemas/ConnectionId"
        lagId:
          $ref: "#/components/schemas/LagId"
    TagResourceResponse:
      type: object
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - resourceArn
        - tags
      properties:
        resourceArn:
          $ref: "#/components/schemas/ResourceArn"
        tags:
          $ref: "#/components/schemas/TagList"
    UntagResourceResponse:
      type: object
      properties: {}
    UntagResourceRequest:
      type: object
      required:
        - resourceArn
        - tagKeys
      properties:
        resourceArn:
          $ref: "#/components/schemas/ResourceArn"
        tagKeys:
          $ref: "#/components/schemas/TagKeyList"
    UpdateDirectConnectGatewayAssociationResult:
      type: object
      properties:
        directConnectGatewayAssociation:
          $ref: "#/components/schemas/DirectConnectGatewayAssociation"
    UpdateDirectConnectGatewayAssociationRequest:
      type: object
      properties:
        associationId:
          $ref: "#/components/schemas/DirectConnectGatewayAssociationId"
        addAllowedPrefixesToDirectConnectGateway:
          $ref: "#/components/schemas/RouteFilterPrefixList"
        removeAllowedPrefixesToDirectConnectGateway:
          $ref: "#/components/schemas/RouteFilterPrefixList"
    UpdateLagRequest:
      type: object
      required:
        - lagId
      properties:
        lagId:
          $ref: "#/components/schemas/LagId"
        lagName:
          $ref: "#/components/schemas/LagName"
        minimumLinks:
          $ref: "#/components/schemas/Count"
    UpdateVirtualInterfaceAttributesRequest:
      type: object
      required:
        - virtualInterfaceId
      properties:
        virtualInterfaceId:
          $ref: "#/components/schemas/VirtualInterfaceId"
        mtu:
          $ref: "#/components/schemas/MTU"
    ASN:
      type: integer
    DirectConnectGatewayId:
      type: string
    DirectConnectGatewayAssociationProposalId:
      type: string
    OwnerAccount:
      type: string
    RouteFilterPrefixList:
      type: array
      items:
        $ref: "#/components/schemas/RouteFilterPrefix"
    DirectConnectGatewayAssociation:
      type: object
      properties:
        directConnectGatewayId:
          $ref: "#/components/schemas/DirectConnectGatewayId"
        directConnectGatewayOwnerAccount:
          $ref: "#/components/schemas/OwnerAccount"
        associationState:
          $ref: "#/components/schemas/DirectConnectGatewayAssociationState"
        stateChangeError:
          $ref: "#/components/schemas/StateChangeError"
        associatedGateway:
          $ref: "#/components/schemas/AssociatedGateway"
        associationId:
          $ref: "#/components/schemas/DirectConnectGatewayAssociationId"
        allowedPrefixesToDirectConnectGateway:
          $ref: "#/components/schemas/RouteFilterPrefixList"
        virtualGatewayId:
          $ref: "#/components/schemas/VirtualGatewayId"
        virtualGatewayRegion:
          $ref: "#/components/schemas/VirtualGatewayRegion"
        virtualGatewayOwnerAccount:
          $ref: "#/components/schemas/OwnerAccount"
      description: Information about an association between a Direct Connect gateway and a
        virtual private gateway or transit gateway.
    AddressFamily:
      type: string
      enum:
        - ipv4
        - ipv6
    Bandwidth:
      type: string
    ConnectionName:
      type: string
    InterconnectId:
      type: string
    VLAN:
      type: integer
    ConnectionId:
      type: string
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
      minItems: 1
    NewPrivateVirtualInterfaceAllocation:
      type: object
      required:
        - virtualInterfaceName
        - vlan
        - asn
      properties:
        virtualInterfaceName:
          $ref: "#/components/schemas/VirtualInterfaceName"
        vlan:
          $ref: "#/components/schemas/VLAN"
        asn:
          $ref: "#/components/schemas/ASN"
        mtu:
          $ref: "#/components/schemas/MTU"
        authKey:
          $ref: "#/components/schemas/BGPAuthKey"
        amazonAddress:
          $ref: "#/components/schemas/AmazonAddress"
        addressFamily:
          $ref: "#/components/schemas/AddressFamily"
        customerAddress:
          $ref: "#/components/schemas/CustomerAddress"
        tags:
          $ref: "#/components/schemas/TagList"
      description: Information about a private virtual interface to be provisioned on a
        connection.
    NewPublicVirtualInterfaceAllocation:
      type: object
      required:
        - virtualInterfaceName
        - vlan
        - asn
      properties:
        virtualInterfaceName:
          $ref: "#/components/schemas/VirtualInterfaceName"
        vlan:
          $ref: "#/components/schemas/VLAN"
        asn:
          $ref: "#/components/schemas/ASN"
        authKey:
          $ref: "#/components/schemas/BGPAuthKey"
        amazonAddress:
          $ref: "#/components/schemas/AmazonAddress"
        customerAddress:
          $ref: "#/components/schemas/CustomerAddress"
        addressFamily:
          $ref: "#/components/schemas/AddressFamily"
        routeFilterPrefixes:
          $ref: "#/components/schemas/RouteFilterPrefixList"
        tags:
          $ref: "#/components/schemas/TagList"
      description: Information about a public virtual interface to be provisioned on a
        connection.
    NewTransitVirtualInterfaceAllocation:
      type: object
      properties:
        virtualInterfaceName:
          $ref: "#/components/schemas/VirtualInterfaceName"
        vlan:
          $ref: "#/components/schemas/VLAN"
        asn:
          $ref: "#/components/schemas/ASN"
        mtu:
          $ref: "#/components/schemas/MTU"
        authKey:
          $ref: "#/components/schemas/BGPAuthKey"
        amazonAddress:
          $ref: "#/components/schemas/AmazonAddress"
        customerAddress:
          $ref: "#/components/schemas/CustomerAddress"
        addressFamily:
          $ref: "#/components/schemas/AddressFamily"
        tags:
          $ref: "#/components/schemas/TagList"
      description: Information about a transit virtual interface.
    AmazonAddress:
      type: string
    LagId:
      type: string
    VirtualInterfaceId:
      type: string
    GatewayIdentifier:
      type: string
    GatewayType:
      type: string
      enum:
        - virtualPrivateGateway
        - transitGateway
    Region:
      type: string
    AssociatedGateway:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/GatewayIdentifier"
        type:
          $ref: "#/components/schemas/GatewayType"
        ownerAccount:
          $ref: "#/components/schemas/OwnerAccount"
        region:
          $ref: "#/components/schemas/Region"
      description: Information about the associated gateway.
    AssociatedGatewayId:
      type: string
    PortSpeed:
      type: string
    AvailablePortSpeeds:
      type: array
      items:
        $ref: "#/components/schemas/PortSpeed"
    AwsDevice:
      type: string
    AwsDeviceV2:
      type: string
    BGPAuthKey:
      type: string
    BGPPeerId:
      type: string
    CustomerAddress:
      type: string
    BGPPeerState:
      type: string
      enum:
        - verifying
        - pending
        - available
        - deleting
        - deleted
    BGPStatus:
      type: string
      enum:
        - up
        - down
        - unknown
    BGPPeer:
      type: object
      properties:
        bgpPeerId:
          $ref: "#/components/schemas/BGPPeerId"
        asn:
          $ref: "#/components/schemas/ASN"
        authKey:
          $ref: "#/components/schemas/BGPAuthKey"
        addressFamily:
          $ref: "#/components/schemas/AddressFamily"
        amazonAddress:
          $ref: "#/components/schemas/AmazonAddress"
        customerAddress:
          $ref: "#/components/schemas/CustomerAddress"
        bgpPeerState:
          $ref: "#/components/schemas/BGPPeerState"
        bgpStatus:
          $ref: "#/components/schemas/BGPStatus"
        awsDeviceV2:
          $ref: "#/components/schemas/AwsDeviceV2"
      description: Information about a BGP peer.
    BGPPeerList:
      type: array
      items:
        $ref: "#/components/schemas/BGPPeer"
    BooleanFlag:
      type: boolean
    CIDR:
      type: string
    ConnectionState:
      type: string
      enum:
        - ordering
        - requested
        - pending
        - available
        - down
        - deleting
        - deleted
        - rejected
        - unknown
    VirtualGatewayId:
      type: string
    VirtualInterfaceState:
      type: string
      enum:
        - confirming
        - verifying
        - pending
        - available
        - down
        - deleting
        - deleted
        - rejected
        - unknown
    LocationCode:
      type: string
    PartnerName:
      type: string
    LoaIssueTime:
      type: string
      format: date-time
    JumboFrameCapable:
      type: boolean
    HasLogicalRedundancy:
      type: string
      enum:
        - unknown
        - yes
        - no
    ConnectionList:
      type: array
      items:
        $ref: "#/components/schemas/Connection"
    Count:
      type: integer
    NewBGPPeer:
      type: object
      properties:
        asn:
          $ref: "#/components/schemas/ASN"
        authKey:
          $ref: "#/components/schemas/BGPAuthKey"
        addressFamily:
          $ref: "#/components/schemas/AddressFamily"
        amazonAddress:
          $ref: "#/components/schemas/AmazonAddress"
        customerAddress:
          $ref: "#/components/schemas/CustomerAddress"
      description: Information about a new BGP peer.
    GatewayIdToAssociate:
      type: string
    DirectConnectGatewayAssociationProposal:
      type: object
      properties:
        proposalId:
          $ref: "#/components/schemas/DirectConnectGatewayAssociationProposalId"
        directConnectGatewayId:
          $ref: "#/components/schemas/DirectConnectGatewayId"
        directConnectGatewayOwnerAccount:
          $ref: "#/components/schemas/OwnerAccount"
        proposalState:
          $ref: "#/components/schemas/DirectConnectGatewayAssociationProposalState"
        associatedGateway:
          $ref: "#/components/schemas/AssociatedGateway"
        existingAllowedPrefixesToDirectConnectGateway:
          $ref: "#/components/schemas/RouteFilterPrefixList"
        requestedAllowedPrefixesToDirectConnectGateway:
          $ref: "#/components/schemas/RouteFilterPrefixList"
      description: "Information about the proposal request to attach a virtual private
        gateway to a Direct Connect gateway. "
    DirectConnectGatewayName:
      type: string
    LongAsn:
      type: integer
    DirectConnectGateway:
      type: object
      properties:
        directConnectGatewayId:
          $ref: "#/components/schemas/DirectConnectGatewayId"
        directConnectGatewayName:
          $ref: "#/components/schemas/DirectConnectGatewayName"
        amazonSideAsn:
          $ref: "#/components/schemas/LongAsn"
        ownerAccount:
          $ref: "#/components/schemas/OwnerAccount"
        directConnectGatewayState:
          $ref: "#/components/schemas/DirectConnectGatewayState"
        stateChangeError:
          $ref: "#/components/schemas/StateChangeError"
      description: Information about a Direct Connect gateway, which enables you to connect
        virtual interfaces and virtual private gateway or transit gateways.
    InterconnectName:
      type: string
    LagName:
      type: string
    NewPrivateVirtualInterface:
      type: object
      required:
        - virtualInterfaceName
        - vlan
        - asn
      properties:
        virtualInterfaceName:
          $ref: "#/components/schemas/VirtualInterfaceName"
        vlan:
          $ref: "#/components/schemas/VLAN"
        asn:
          $ref: "#/components/schemas/ASN"
        mtu:
          $ref: "#/components/schemas/MTU"
        authKey:
          $ref: "#/components/schemas/BGPAuthKey"
        amazonAddress:
          $ref: "#/components/schemas/AmazonAddress"
        customerAddress:
          $ref: "#/components/schemas/CustomerAddress"
        addressFamily:
          $ref: "#/components/schemas/AddressFamily"
        virtualGatewayId:
          $ref: "#/components/schemas/VirtualGatewayId"
        directConnectGatewayId:
          $ref: "#/components/schemas/DirectConnectGatewayId"
        tags:
          $ref: "#/components/schemas/TagList"
      description: Information about a private virtual interface.
    NewPublicVirtualInterface:
      type: object
      required:
        - virtualInterfaceName
        - vlan
        - asn
      properties:
        virtualInterfaceName:
          $ref: "#/components/schemas/VirtualInterfaceName"
        vlan:
          $ref: "#/components/schemas/VLAN"
        asn:
          $ref: "#/components/schemas/ASN"
        authKey:
          $ref: "#/components/schemas/BGPAuthKey"
        amazonAddress:
          $ref: "#/components/schemas/AmazonAddress"
        customerAddress:
          $ref: "#/components/schemas/CustomerAddress"
        addressFamily:
          $ref: "#/components/schemas/AddressFamily"
        routeFilterPrefixes:
          $ref: "#/components/schemas/RouteFilterPrefixList"
        tags:
          $ref: "#/components/schemas/TagList"
      description: Information about a public virtual interface.
    NewTransitVirtualInterface:
      type: object
      properties:
        virtualInterfaceName:
          $ref: "#/components/schemas/VirtualInterfaceName"
        vlan:
          $ref: "#/components/schemas/VLAN"
        asn:
          $ref: "#/components/schemas/ASN"
        mtu:
          $ref: "#/components/schemas/MTU"
        authKey:
          $ref: "#/components/schemas/BGPAuthKey"
        amazonAddress:
          $ref: "#/components/schemas/AmazonAddress"
        customerAddress:
          $ref: "#/components/schemas/CustomerAddress"
        addressFamily:
          $ref: "#/components/schemas/AddressFamily"
        directConnectGatewayId:
          $ref: "#/components/schemas/DirectConnectGatewayId"
        tags:
          $ref: "#/components/schemas/TagList"
      description: Information about the transit virtual interface.
    DirectConnectGatewayAssociationId:
      type: string
    InterconnectState:
      type: string
      enum:
        - requested
        - pending
        - available
        - down
        - deleting
        - deleted
        - unknown
    ProviderName:
      type: string
    LoaContentType:
      type: string
      enum:
        - application/pdf
    MaxResultSetSize:
      type: integer
    PaginationToken:
      type: string
    DirectConnectGatewayAssociationProposalList:
      type: array
      items:
        $ref: "#/components/schemas/DirectConnectGatewayAssociationProposal"
    DirectConnectGatewayAssociationList:
      type: array
      items:
        $ref: "#/components/schemas/DirectConnectGatewayAssociation"
    DirectConnectGatewayAttachmentList:
      type: array
      items:
        $ref: "#/components/schemas/DirectConnectGatewayAttachment"
    DirectConnectGatewayList:
      type: array
      items:
        $ref: "#/components/schemas/DirectConnectGateway"
    ResourceArnList:
      type: array
      items:
        $ref: "#/components/schemas/ResourceArn"
    ResourceTagList:
      type: array
      items:
        $ref: "#/components/schemas/ResourceTag"
    DirectConnectGatewayState:
      type: string
      enum:
        - pending
        - available
        - deleting
        - deleted
    StateChangeError:
      type: string
    DirectConnectGatewayAssociationState:
      type: string
      enum:
        - associating
        - associated
        - disassociating
        - disassociated
        - updating
    VirtualGatewayRegion:
      type: string
    DirectConnectGatewayAssociationProposalState:
      type: string
      enum:
        - requested
        - accepted
        - deleted
    VirtualInterfaceRegion:
      type: string
    DirectConnectGatewayAttachmentState:
      type: string
      enum:
        - attaching
        - attached
        - detaching
        - detached
    DirectConnectGatewayAttachmentType:
      type: string
      enum:
        - TransitVirtualInterface
        - PrivateVirtualInterface
    DirectConnectGatewayAttachment:
      type: object
      properties:
        directConnectGatewayId:
          $ref: "#/components/schemas/DirectConnectGatewayId"
        virtualInterfaceId:
          $ref: "#/components/schemas/VirtualInterfaceId"
        virtualInterfaceRegion:
          $ref: "#/components/schemas/VirtualInterfaceRegion"
        virtualInterfaceOwnerAccount:
          $ref: "#/components/schemas/OwnerAccount"
        attachmentState:
          $ref: "#/components/schemas/DirectConnectGatewayAttachmentState"
        attachmentType:
          $ref: "#/components/schemas/DirectConnectGatewayAttachmentType"
        stateChangeError:
          $ref: "#/components/schemas/StateChangeError"
      description: Information about an attachment between a Direct Connect gateway and a
        virtual interface.
    InterconnectList:
      type: array
      items:
        $ref: "#/components/schemas/Interconnect"
    LagState:
      type: string
      enum:
        - requested
        - pending
        - available
        - down
        - deleting
        - deleted
        - unknown
    LagList:
      type: array
      items:
        $ref: "#/components/schemas/Lag"
    LoaContent:
      type: string
    Location:
      type: object
      properties:
        locationCode:
          $ref: "#/components/schemas/LocationCode"
        region:
          $ref: "#/components/schemas/Region"
        availablePortSpeeds:
          $ref: "#/components/schemas/AvailablePortSpeeds"
      description: Information about an AWS Direct Connect location.
    LocationList:
      type: array
      items:
        $ref: "#/components/schemas/Location"
    LocationName:
      type: string
    MTU:
      type: integer
    VirtualInterfaceName:
      type: string
    ResourceArn:
      type: string
    ResourceTag:
      type: object
      properties:
        resourceArn:
          $ref: "#/components/schemas/ResourceArn"
        tags:
          $ref: "#/components/schemas/TagList"
      description: Information about a tag associated with an AWS Direct Connect resource.
    RouteFilterPrefix:
      type: object
      properties:
        cidr:
          $ref: "#/components/schemas/CIDR"
      description: Information about a route filter prefix that a customer can advertise
        through Border Gateway Protocol (BGP) over a public virtual interface.
    RouterConfig:
      type: string
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - key
      properties:
        key:
          $ref: "#/components/schemas/TagKey"
        value:
          $ref: "#/components/schemas/TagValue"
      description: Information about a tag.
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
    VirtualGatewayState:
      type: string
    VirtualGateway:
      type: object
      properties:
        virtualGatewayId:
          $ref: "#/components/schemas/VirtualGatewayId"
        virtualGatewayState:
          $ref: "#/components/schemas/VirtualGatewayState"
      description: Information about a virtual private gateway for a private virtual
        interface.
    VirtualGatewayList:
      type: array
      items:
        $ref: "#/components/schemas/VirtualGateway"
    VirtualInterfaceType:
      type: string
    VirtualInterfaceList:
      type: array
      items:
        $ref: "#/components/schemas/VirtualInterface"
