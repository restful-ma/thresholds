openapi: 3.0.0
info:
  version: 2015-08-24
  x-release: v4
  title: AWS WAF
  description: This is the <i>AWS WAF API Reference</i> for using AWS WAF with Amazon
    CloudFront. The AWS WAF actions and data types listed in the reference are
    available for protecting Amazon CloudFront distributions. You can use these
    actions and data types via the endpoint <i>waf.amazonaws.com</i>. This guide
    is for developers who need detailed information about the AWS WAF API
    actions, data types, and errors. For detailed information about AWS WAF
    features and an overview of how to use the AWS WAF API, see the <a
    href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF
    Developer Guide</a>.
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: waf
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/waf-2015-08-24.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/waf/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=AWSWAF_20150824.CreateByteMatchSet:
    post:
      operationId: CreateByteMatchSet
      description: <p>Creates a <code>ByteMatchSet</code>. You then use
        <a>UpdateByteMatchSet</a> to identify the part of a web request that you
        want AWS WAF to inspect, such as the values of the
        <code>User-Agent</code> header or the query string. For example, you can
        create a <code>ByteMatchSet</code> that matches any requests with
        <code>User-Agent</code> headers that contain the string
        <code>BadBot</code>. You can then configure AWS WAF to reject those
        requests.</p> <p>To create and configure a <code>ByteMatchSet</code>,
        perform the following steps:</p> <ol> <li> <p>Use <a>GetChangeToken</a>
        to get the change token that you provide in the <code>ChangeToken</code>
        parameter of a <code>CreateByteMatchSet</code> request.</p> </li> <li>
        <p>Submit a <code>CreateByteMatchSet</code> request.</p> </li> <li>
        <p>Use <code>GetChangeToken</code> to get the change token that you
        provide in the <code>ChangeToken</code> parameter of an
        <code>UpdateByteMatchSet</code> request.</p> </li> <li> <p>Submit an
        <a>UpdateByteMatchSet</a> request to specify the part of the request
        that you want AWS WAF to inspect (for example, the header or the URI)
        and the value that you want AWS WAF to watch for.</p> </li> </ol> <p>For
        more information about how to use the AWS WAF API to allow or block HTTP
        requests, see the <a
        href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF
        Developer Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateByteMatchSetResponse"
        "480":
          description: WAFDisallowedNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFDisallowedNameException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "483":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
        "484":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "485":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.CreateByteMatchSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateByteMatchSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.CreateGeoMatchSet:
    post:
      operationId: CreateGeoMatchSet
      description: <p>Creates an <a>GeoMatchSet</a>, which you use to specify which web
        requests you want to allow or block based on the country that the
        requests originate from. For example, if you're receiving a lot of
        requests from one or more countries and you want to block the requests,
        you can create an <code>GeoMatchSet</code> that contains those countries
        and then configure AWS WAF to block the requests. </p> <p>To create and
        configure a <code>GeoMatchSet</code>, perform the following steps:</p>
        <ol> <li> <p>Use <a>GetChangeToken</a> to get the change token that you
        provide in the <code>ChangeToken</code> parameter of a
        <code>CreateGeoMatchSet</code> request.</p> </li> <li> <p>Submit a
        <code>CreateGeoMatchSet</code> request.</p> </li> <li> <p>Use
        <code>GetChangeToken</code> to get the change token that you provide in
        the <code>ChangeToken</code> parameter of an <a>UpdateGeoMatchSet</a>
        request.</p> </li> <li> <p>Submit an <code>UpdateGeoMatchSetSet</code>
        request to specify the countries that you want AWS WAF to watch for.</p>
        </li> </ol> <p>For more information about how to use the AWS WAF API to
        allow or block HTTP requests, see the <a
        href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF
        Developer Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateGeoMatchSetResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "483":
          description: WAFDisallowedNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFDisallowedNameException"
        "484":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
        "485":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.CreateGeoMatchSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateGeoMatchSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.CreateIPSet:
    post:
      operationId: CreateIPSet
      description: <p>Creates an <a>IPSet</a>, which you use to specify which web requests
        that you want to allow or block based on the IP addresses that the
        requests originate from. For example, if you're receiving a lot of
        requests from one or more individual IP addresses or one or more ranges
        of IP addresses and you want to block the requests, you can create an
        <code>IPSet</code> that contains those IP addresses and then configure
        AWS WAF to block the requests. </p> <p>To create and configure an
        <code>IPSet</code>, perform the following steps:</p> <ol> <li> <p>Use
        <a>GetChangeToken</a> to get the change token that you provide in the
        <code>ChangeToken</code> parameter of a <code>CreateIPSet</code>
        request.</p> </li> <li> <p>Submit a <code>CreateIPSet</code>
        request.</p> </li> <li> <p>Use <code>GetChangeToken</code> to get the
        change token that you provide in the <code>ChangeToken</code> parameter
        of an <a>UpdateIPSet</a> request.</p> </li> <li> <p>Submit an
        <code>UpdateIPSet</code> request to specify the IP addresses that you
        want AWS WAF to watch for.</p> </li> </ol> <p>For more information about
        how to use the AWS WAF API to allow or block HTTP requests, see the <a
        href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF
        Developer Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateIPSetResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "483":
          description: WAFDisallowedNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFDisallowedNameException"
        "484":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
        "485":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.CreateIPSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateIPSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.CreateRateBasedRule:
    post:
      operationId: CreateRateBasedRule
      description: <p>Creates a <a>RateBasedRule</a>. The <code>RateBasedRule</code>
        contains a <code>RateLimit</code>, which specifies the maximum number of
        requests that AWS WAF allows from a specified IP address in a
        five-minute period. The <code>RateBasedRule</code> also contains the
        <code>IPSet</code> objects, <code>ByteMatchSet</code> objects, and other
        predicates that identify the requests that you want to count or block if
        these requests exceed the <code>RateLimit</code>.</p> <p>If you add more
        than one predicate to a <code>RateBasedRule</code>, a request not only
        must exceed the <code>RateLimit</code>, but it also must match all the
        specifications to be counted or blocked. For example, suppose you add
        the following to a <code>RateBasedRule</code>:</p> <ul> <li> <p>An
        <code>IPSet</code> that matches the IP address
        <code>192.0.2.44/32</code> </p> </li> <li> <p>A
        <code>ByteMatchSet</code> that matches <code>BadBot</code> in the
        <code>User-Agent</code> header</p> </li> </ul> <p>Further, you specify a
        <code>RateLimit</code> of 15,000.</p> <p>You then add the
        <code>RateBasedRule</code> to a <code>WebACL</code> and specify that you
        want to block requests that meet the conditions in the rule. For a
        request to be blocked, it must come from the IP address 192.0.2.44
        <i>and</i> the <code>User-Agent</code> header in the request must
        contain the value <code>BadBot</code>. Further, requests that match
        these two conditions must be received at a rate of more than 15,000
        requests every five minutes. If both conditions are met and the rate is
        exceeded, AWS WAF blocks the requests. If the rate drops below 15,000
        for a five-minute period, AWS WAF no longer blocks the requests.</p>
        <p>As a second example, suppose you want to limit requests to a
        particular page on your site. To do this, you could add the following to
        a <code>RateBasedRule</code>:</p> <ul> <li> <p>A
        <code>ByteMatchSet</code> with <code>FieldToMatch</code> of
        <code>URI</code> </p> </li> <li> <p>A <code>PositionalConstraint</code>
        of <code>STARTS_WITH</code> </p> </li> <li> <p>A
        <code>TargetString</code> of <code>login</code> </p> </li> </ul>
        <p>Further, you specify a <code>RateLimit</code> of 15,000.</p> <p>By
        adding this <code>RateBasedRule</code> to a <code>WebACL</code>, you
        could limit requests to your login page without affecting the rest of
        your site.</p> <p>To create and configure a <code>RateBasedRule</code>,
        perform the following steps:</p> <ol> <li> <p>Create and update the
        predicates that you want to include in the rule. For more information,
        see <a>CreateByteMatchSet</a>, <a>CreateIPSet</a>, and
        <a>CreateSqlInjectionMatchSet</a>.</p> </li> <li> <p>Use
        <a>GetChangeToken</a> to get the change token that you provide in the
        <code>ChangeToken</code> parameter of a <code>CreateRule</code>
        request.</p> </li> <li> <p>Submit a <code>CreateRateBasedRule</code>
        request.</p> </li> <li> <p>Use <code>GetChangeToken</code> to get the
        change token that you provide in the <code>ChangeToken</code> parameter
        of an <a>UpdateRule</a> request.</p> </li> <li> <p>Submit an
        <code>UpdateRateBasedRule</code> request to specify the predicates that
        you want to include in the rule.</p> </li> <li> <p>Create and update a
        <code>WebACL</code> that contains the <code>RateBasedRule</code>. For
        more information, see <a>CreateWebACL</a>.</p> </li> </ol> <p>For more
        information about how to use the AWS WAF API to allow or block HTTP
        requests, see the <a
        href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF
        Developer Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRateBasedRuleResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFDisallowedNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFDisallowedNameException"
        "483":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
        "484":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
        "485":
          description: WAFTagOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFTagOperationException"
        "486":
          description: WAFTagOperationInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFTagOperationInternalErrorException"
        "487":
          description: WAFBadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFBadRequestException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.CreateRateBasedRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRateBasedRuleRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.CreateRegexMatchSet:
    post:
      operationId: CreateRegexMatchSet
      description: <p>Creates a <a>RegexMatchSet</a>. You then use
        <a>UpdateRegexMatchSet</a> to identify the part of a web request that
        you want AWS WAF to inspect, such as the values of the
        <code>User-Agent</code> header or the query string. For example, you can
        create a <code>RegexMatchSet</code> that contains a
        <code>RegexMatchTuple</code> that looks for any requests with
        <code>User-Agent</code> headers that match a
        <code>RegexPatternSet</code> with pattern <code>B[a@]dB[o0]t</code>. You
        can then configure AWS WAF to reject those requests.</p> <p>To create
        and configure a <code>RegexMatchSet</code>, perform the following
        steps:</p> <ol> <li> <p>Use <a>GetChangeToken</a> to get the change
        token that you provide in the <code>ChangeToken</code> parameter of a
        <code>CreateRegexMatchSet</code> request.</p> </li> <li> <p>Submit a
        <code>CreateRegexMatchSet</code> request.</p> </li> <li> <p>Use
        <code>GetChangeToken</code> to get the change token that you provide in
        the <code>ChangeToken</code> parameter of an
        <code>UpdateRegexMatchSet</code> request.</p> </li> <li> <p>Submit an
        <a>UpdateRegexMatchSet</a> request to specify the part of the request
        that you want AWS WAF to inspect (for example, the header or the URI)
        and the value, using a <code>RegexPatternSet</code>, that you want AWS
        WAF to watch for.</p> </li> </ol> <p>For more information about how to
        use the AWS WAF API to allow or block HTTP requests, see the <a
        href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF
        Developer Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRegexMatchSetResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFDisallowedNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFDisallowedNameException"
        "483":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.CreateRegexMatchSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRegexMatchSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.CreateRegexPatternSet:
    post:
      operationId: CreateRegexPatternSet
      description: <p>Creates a <code>RegexPatternSet</code>. You then use
        <a>UpdateRegexPatternSet</a> to specify the regular expression (regex)
        pattern that you want AWS WAF to search for, such as
        <code>B[a@]dB[o0]t</code>. You can then configure AWS WAF to reject
        those requests.</p> <p>To create and configure a
        <code>RegexPatternSet</code>, perform the following steps:</p> <ol> <li>
        <p>Use <a>GetChangeToken</a> to get the change token that you provide in
        the <code>ChangeToken</code> parameter of a
        <code>CreateRegexPatternSet</code> request.</p> </li> <li> <p>Submit a
        <code>CreateRegexPatternSet</code> request.</p> </li> <li> <p>Use
        <code>GetChangeToken</code> to get the change token that you provide in
        the <code>ChangeToken</code> parameter of an
        <code>UpdateRegexPatternSet</code> request.</p> </li> <li> <p>Submit an
        <a>UpdateRegexPatternSet</a> request to specify the string that you want
        AWS WAF to watch for.</p> </li> </ol> <p>For more information about how
        to use the AWS WAF API to allow or block HTTP requests, see the <a
        href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF
        Developer Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRegexPatternSetResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFDisallowedNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFDisallowedNameException"
        "483":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.CreateRegexPatternSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRegexPatternSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.CreateRule:
    post:
      operationId: CreateRule
      description: <p>Creates a <code>Rule</code>, which contains the <code>IPSet</code>
        objects, <code>ByteMatchSet</code> objects, and other predicates that
        identify the requests that you want to block. If you add more than one
        predicate to a <code>Rule</code>, a request must match all of the
        specifications to be allowed or blocked. For example, suppose that you
        add the following to a <code>Rule</code>:</p> <ul> <li> <p>An
        <code>IPSet</code> that matches the IP address
        <code>192.0.2.44/32</code> </p> </li> <li> <p>A
        <code>ByteMatchSet</code> that matches <code>BadBot</code> in the
        <code>User-Agent</code> header</p> </li> </ul> <p>You then add the
        <code>Rule</code> to a <code>WebACL</code> and specify that you want to
        blocks requests that satisfy the <code>Rule</code>. For a request to be
        blocked, it must come from the IP address 192.0.2.44 <i>and</i> the
        <code>User-Agent</code> header in the request must contain the value
        <code>BadBot</code>.</p> <p>To create and configure a <code>Rule</code>,
        perform the following steps:</p> <ol> <li> <p>Create and update the
        predicates that you want to include in the <code>Rule</code>. For more
        information, see <a>CreateByteMatchSet</a>, <a>CreateIPSet</a>, and
        <a>CreateSqlInjectionMatchSet</a>.</p> </li> <li> <p>Use
        <a>GetChangeToken</a> to get the change token that you provide in the
        <code>ChangeToken</code> parameter of a <code>CreateRule</code>
        request.</p> </li> <li> <p>Submit a <code>CreateRule</code> request.</p>
        </li> <li> <p>Use <code>GetChangeToken</code> to get the change token
        that you provide in the <code>ChangeToken</code> parameter of an
        <a>UpdateRule</a> request.</p> </li> <li> <p>Submit an
        <code>UpdateRule</code> request to specify the predicates that you want
        to include in the <code>Rule</code>.</p> </li> <li> <p>Create and update
        a <code>WebACL</code> that contains the <code>Rule</code>. For more
        information, see <a>CreateWebACL</a>.</p> </li> </ol> <p>For more
        information about how to use the AWS WAF API to allow or block HTTP
        requests, see the <a
        href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF
        Developer Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRuleResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFDisallowedNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFDisallowedNameException"
        "483":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
        "484":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
        "485":
          description: WAFTagOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFTagOperationException"
        "486":
          description: WAFTagOperationInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFTagOperationInternalErrorException"
        "487":
          description: WAFBadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFBadRequestException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.CreateRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRuleRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.CreateRuleGroup:
    post:
      operationId: CreateRuleGroup
      description: <p>Creates a <code>RuleGroup</code>. A rule group is a collection of
        predefined rules that you add to a web ACL. You use
        <a>UpdateRuleGroup</a> to add rules to the rule group.</p> <p>Rule
        groups are subject to the following limits:</p> <ul> <li> <p>Three rule
        groups per account. You can request an increase to this limit by
        contacting customer support.</p> </li> <li> <p>One rule group per web
        ACL.</p> </li> <li> <p>Ten rules per rule group.</p> </li> </ul> <p>For
        more information about how to use the AWS WAF API to allow or block HTTP
        requests, see the <a
        href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF
        Developer Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRuleGroupResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFDisallowedNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFDisallowedNameException"
        "483":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
        "484":
          description: WAFTagOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFTagOperationException"
        "485":
          description: WAFTagOperationInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFTagOperationInternalErrorException"
        "486":
          description: WAFBadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFBadRequestException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.CreateRuleGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRuleGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.CreateSizeConstraintSet:
    post:
      operationId: CreateSizeConstraintSet
      description: <p>Creates a <code>SizeConstraintSet</code>. You then use
        <a>UpdateSizeConstraintSet</a> to identify the part of a web request
        that you want AWS WAF to check for length, such as the length of the
        <code>User-Agent</code> header or the length of the query string. For
        example, you can create a <code>SizeConstraintSet</code> that matches
        any requests that have a query string that is longer than 100 bytes. You
        can then configure AWS WAF to reject those requests.</p> <p>To create
        and configure a <code>SizeConstraintSet</code>, perform the following
        steps:</p> <ol> <li> <p>Use <a>GetChangeToken</a> to get the change
        token that you provide in the <code>ChangeToken</code> parameter of a
        <code>CreateSizeConstraintSet</code> request.</p> </li> <li> <p>Submit a
        <code>CreateSizeConstraintSet</code> request.</p> </li> <li> <p>Use
        <code>GetChangeToken</code> to get the change token that you provide in
        the <code>ChangeToken</code> parameter of an
        <code>UpdateSizeConstraintSet</code> request.</p> </li> <li> <p>Submit
        an <a>UpdateSizeConstraintSet</a> request to specify the part of the
        request that you want AWS WAF to inspect (for example, the header or the
        URI) and the value that you want AWS WAF to watch for.</p> </li> </ol>
        <p>For more information about how to use the AWS WAF API to allow or
        block HTTP requests, see the <a
        href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF
        Developer Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateSizeConstraintSetResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "483":
          description: WAFDisallowedNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFDisallowedNameException"
        "484":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
        "485":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.CreateSizeConstraintSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSizeConstraintSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.CreateSqlInjectionMatchSet:
    post:
      operationId: CreateSqlInjectionMatchSet
      description: <p>Creates a <a>SqlInjectionMatchSet</a>, which you use to allow, block,
        or count requests that contain snippets of SQL code in a specified part
        of web requests. AWS WAF searches for character sequences that are
        likely to be malicious strings.</p> <p>To create and configure a
        <code>SqlInjectionMatchSet</code>, perform the following steps:</p> <ol>
        <li> <p>Use <a>GetChangeToken</a> to get the change token that you
        provide in the <code>ChangeToken</code> parameter of a
        <code>CreateSqlInjectionMatchSet</code> request.</p> </li> <li>
        <p>Submit a <code>CreateSqlInjectionMatchSet</code> request.</p> </li>
        <li> <p>Use <code>GetChangeToken</code> to get the change token that you
        provide in the <code>ChangeToken</code> parameter of an
        <a>UpdateSqlInjectionMatchSet</a> request.</p> </li> <li> <p>Submit an
        <a>UpdateSqlInjectionMatchSet</a> request to specify the parts of web
        requests in which you want to allow, block, or count malicious SQL
        code.</p> </li> </ol> <p>For more information about how to use the AWS
        WAF API to allow or block HTTP requests, see the <a
        href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF
        Developer Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateSqlInjectionMatchSetResponse"
        "480":
          description: WAFDisallowedNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFDisallowedNameException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "483":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
        "484":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "485":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.CreateSqlInjectionMatchSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSqlInjectionMatchSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.CreateWebACL:
    post:
      operationId: CreateWebACL
      description: <p>Creates a <code>WebACL</code>, which contains the <code>Rules</code>
        that identify the CloudFront web requests that you want to allow, block,
        or count. AWS WAF evaluates <code>Rules</code> in order based on the
        value of <code>Priority</code> for each <code>Rule</code>.</p> <p>You
        also specify a default action, either <code>ALLOW</code> or
        <code>BLOCK</code>. If a web request doesn't match any of the
        <code>Rules</code> in a <code>WebACL</code>, AWS WAF responds to the
        request with the default action. </p> <p>To create and configure a
        <code>WebACL</code>, perform the following steps:</p> <ol> <li>
        <p>Create and update the <code>ByteMatchSet</code> objects and other
        predicates that you want to include in <code>Rules</code>. For more
        information, see <a>CreateByteMatchSet</a>, <a>UpdateByteMatchSet</a>,
        <a>CreateIPSet</a>, <a>UpdateIPSet</a>,
        <a>CreateSqlInjectionMatchSet</a>, and
        <a>UpdateSqlInjectionMatchSet</a>.</p> </li> <li> <p>Create and update
        the <code>Rules</code> that you want to include in the
        <code>WebACL</code>. For more information, see <a>CreateRule</a> and
        <a>UpdateRule</a>.</p> </li> <li> <p>Use <a>GetChangeToken</a> to get
        the change token that you provide in the <code>ChangeToken</code>
        parameter of a <code>CreateWebACL</code> request.</p> </li> <li>
        <p>Submit a <code>CreateWebACL</code> request.</p> </li> <li> <p>Use
        <code>GetChangeToken</code> to get the change token that you provide in
        the <code>ChangeToken</code> parameter of an <a>UpdateWebACL</a>
        request.</p> </li> <li> <p>Submit an <a>UpdateWebACL</a> request to
        specify the <code>Rules</code> that you want to include in the
        <code>WebACL</code>, to specify the default action, and to associate the
        <code>WebACL</code> with a CloudFront distribution.</p> </li> </ol>
        <p>For more information about how to use the AWS WAF API, see the <a
        href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF
        Developer Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWebACLResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "483":
          description: WAFDisallowedNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFDisallowedNameException"
        "484":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
        "485":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
        "486":
          description: WAFTagOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFTagOperationException"
        "487":
          description: WAFTagOperationInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFTagOperationInternalErrorException"
        "488":
          description: WAFBadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFBadRequestException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.CreateWebACL
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWebACLRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.CreateXssMatchSet:
    post:
      operationId: CreateXssMatchSet
      description: <p>Creates an <a>XssMatchSet</a>, which you use to allow, block, or
        count requests that contain cross-site scripting attacks in the
        specified part of web requests. AWS WAF searches for character sequences
        that are likely to be malicious strings.</p> <p>To create and configure
        an <code>XssMatchSet</code>, perform the following steps:</p> <ol> <li>
        <p>Use <a>GetChangeToken</a> to get the change token that you provide in
        the <code>ChangeToken</code> parameter of a
        <code>CreateXssMatchSet</code> request.</p> </li> <li> <p>Submit a
        <code>CreateXssMatchSet</code> request.</p> </li> <li> <p>Use
        <code>GetChangeToken</code> to get the change token that you provide in
        the <code>ChangeToken</code> parameter of an <a>UpdateXssMatchSet</a>
        request.</p> </li> <li> <p>Submit an <a>UpdateXssMatchSet</a> request to
        specify the parts of web requests in which you want to allow, block, or
        count cross-site scripting attacks.</p> </li> </ol> <p>For more
        information about how to use the AWS WAF API to allow or block HTTP
        requests, see the <a
        href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF
        Developer Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateXssMatchSetResponse"
        "480":
          description: WAFDisallowedNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFDisallowedNameException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "483":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
        "484":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "485":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.CreateXssMatchSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateXssMatchSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.DeleteByteMatchSet:
    post:
      operationId: DeleteByteMatchSet
      description: <p>Permanently deletes a <a>ByteMatchSet</a>. You can't delete a
        <code>ByteMatchSet</code> if it's still used in any <code>Rules</code>
        or if it still includes any <a>ByteMatchTuple</a> objects (any
        filters).</p> <p>If you just want to remove a <code>ByteMatchSet</code>
        from a <code>Rule</code>, use <a>UpdateRule</a>.</p> <p>To permanently
        delete a <code>ByteMatchSet</code>, perform the following steps:</p>
        <ol> <li> <p>Update the <code>ByteMatchSet</code> to remove filters, if
        any. For more information, see <a>UpdateByteMatchSet</a>.</p> </li> <li>
        <p>Use <a>GetChangeToken</a> to get the change token that you provide in
        the <code>ChangeToken</code> parameter of a
        <code>DeleteByteMatchSet</code> request.</p> </li> <li> <p>Submit a
        <code>DeleteByteMatchSet</code> request.</p> </li> </ol>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteByteMatchSetResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "482":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "483":
          description: WAFReferencedItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFReferencedItemException"
        "484":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "485":
          description: WAFNonEmptyEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonEmptyEntityException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.DeleteByteMatchSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteByteMatchSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.DeleteGeoMatchSet:
    post:
      operationId: DeleteGeoMatchSet
      description: <p>Permanently deletes a <a>GeoMatchSet</a>. You can't delete a
        <code>GeoMatchSet</code> if it's still used in any <code>Rules</code> or
        if it still includes any countries.</p> <p>If you just want to remove a
        <code>GeoMatchSet</code> from a <code>Rule</code>, use
        <a>UpdateRule</a>.</p> <p>To permanently delete a
        <code>GeoMatchSet</code> from AWS WAF, perform the following steps:</p>
        <ol> <li> <p>Update the <code>GeoMatchSet</code> to remove any
        countries. For more information, see <a>UpdateGeoMatchSet</a>.</p> </li>
        <li> <p>Use <a>GetChangeToken</a> to get the change token that you
        provide in the <code>ChangeToken</code> parameter of a
        <code>DeleteGeoMatchSet</code> request.</p> </li> <li> <p>Submit a
        <code>DeleteGeoMatchSet</code> request.</p> </li> </ol>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteGeoMatchSetResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "483":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "484":
          description: WAFReferencedItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFReferencedItemException"
        "485":
          description: WAFNonEmptyEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonEmptyEntityException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.DeleteGeoMatchSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteGeoMatchSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.DeleteIPSet:
    post:
      operationId: DeleteIPSet
      description: <p>Permanently deletes an <a>IPSet</a>. You can't delete an
        <code>IPSet</code> if it's still used in any <code>Rules</code> or if it
        still includes any IP addresses.</p> <p>If you just want to remove an
        <code>IPSet</code> from a <code>Rule</code>, use <a>UpdateRule</a>.</p>
        <p>To permanently delete an <code>IPSet</code> from AWS WAF, perform the
        following steps:</p> <ol> <li> <p>Update the <code>IPSet</code> to
        remove IP address ranges, if any. For more information, see
        <a>UpdateIPSet</a>.</p> </li> <li> <p>Use <a>GetChangeToken</a> to get
        the change token that you provide in the <code>ChangeToken</code>
        parameter of a <code>DeleteIPSet</code> request.</p> </li> <li>
        <p>Submit a <code>DeleteIPSet</code> request.</p> </li> </ol>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteIPSetResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "483":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "484":
          description: WAFReferencedItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFReferencedItemException"
        "485":
          description: WAFNonEmptyEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonEmptyEntityException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.DeleteIPSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteIPSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.DeleteLoggingConfiguration:
    post:
      operationId: DeleteLoggingConfiguration
      description: Permanently deletes the <a>LoggingConfiguration</a> from the specified
        web ACL.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteLoggingConfigurationResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "482":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.DeleteLoggingConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteLoggingConfigurationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.DeletePermissionPolicy:
    post:
      operationId: DeletePermissionPolicy
      description: <p>Permanently deletes an IAM policy from the specified RuleGroup.</p>
        <p>The user making the request must be the owner of the RuleGroup.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeletePermissionPolicyResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "482":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.DeletePermissionPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeletePermissionPolicyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.DeleteRateBasedRule:
    post:
      operationId: DeleteRateBasedRule
      description: <p>Permanently deletes a <a>RateBasedRule</a>. You can't delete a rule
        if it's still used in any <code>WebACL</code> objects or if it still
        includes any predicates, such as <code>ByteMatchSet</code> objects.</p>
        <p>If you just want to remove a rule from a <code>WebACL</code>, use
        <a>UpdateWebACL</a>.</p> <p>To permanently delete a
        <code>RateBasedRule</code> from AWS WAF, perform the following
        steps:</p> <ol> <li> <p>Update the <code>RateBasedRule</code> to remove
        predicates, if any. For more information, see
        <a>UpdateRateBasedRule</a>.</p> </li> <li> <p>Use <a>GetChangeToken</a>
        to get the change token that you provide in the <code>ChangeToken</code>
        parameter of a <code>DeleteRateBasedRule</code> request.</p> </li> <li>
        <p>Submit a <code>DeleteRateBasedRule</code> request.</p> </li> </ol>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRateBasedRuleResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "483":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "484":
          description: WAFReferencedItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFReferencedItemException"
        "485":
          description: WAFNonEmptyEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonEmptyEntityException"
        "486":
          description: WAFTagOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFTagOperationException"
        "487":
          description: WAFTagOperationInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFTagOperationInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.DeleteRateBasedRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRateBasedRuleRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.DeleteRegexMatchSet:
    post:
      operationId: DeleteRegexMatchSet
      description: <p>Permanently deletes a <a>RegexMatchSet</a>. You can't delete a
        <code>RegexMatchSet</code> if it's still used in any <code>Rules</code>
        or if it still includes any <code>RegexMatchTuples</code> objects (any
        filters).</p> <p>If you just want to remove a <code>RegexMatchSet</code>
        from a <code>Rule</code>, use <a>UpdateRule</a>.</p> <p>To permanently
        delete a <code>RegexMatchSet</code>, perform the following steps:</p>
        <ol> <li> <p>Update the <code>RegexMatchSet</code> to remove filters, if
        any. For more information, see <a>UpdateRegexMatchSet</a>.</p> </li>
        <li> <p>Use <a>GetChangeToken</a> to get the change token that you
        provide in the <code>ChangeToken</code> parameter of a
        <code>DeleteRegexMatchSet</code> request.</p> </li> <li> <p>Submit a
        <code>DeleteRegexMatchSet</code> request.</p> </li> </ol>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRegexMatchSetResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "482":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "483":
          description: WAFReferencedItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFReferencedItemException"
        "484":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "485":
          description: WAFNonEmptyEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonEmptyEntityException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.DeleteRegexMatchSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRegexMatchSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.DeleteRegexPatternSet:
    post:
      operationId: DeleteRegexPatternSet
      description: "Permanently deletes a <a>RegexPatternSet</a>. You can't delete a
        <code>RegexPatternSet</code> if it's still used in any
        <code>RegexMatchSet</code> or if the <code>RegexPatternSet</code> is not
        empty. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRegexPatternSetResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "482":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "483":
          description: WAFReferencedItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFReferencedItemException"
        "484":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "485":
          description: WAFNonEmptyEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonEmptyEntityException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.DeleteRegexPatternSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRegexPatternSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.DeleteRule:
    post:
      operationId: DeleteRule
      description: <p>Permanently deletes a <a>Rule</a>. You can't delete a
        <code>Rule</code> if it's still used in any <code>WebACL</code> objects
        or if it still includes any predicates, such as
        <code>ByteMatchSet</code> objects.</p> <p>If you just want to remove a
        <code>Rule</code> from a <code>WebACL</code>, use
        <a>UpdateWebACL</a>.</p> <p>To permanently delete a <code>Rule</code>
        from AWS WAF, perform the following steps:</p> <ol> <li> <p>Update the
        <code>Rule</code> to remove predicates, if any. For more information,
        see <a>UpdateRule</a>.</p> </li> <li> <p>Use <a>GetChangeToken</a> to
        get the change token that you provide in the <code>ChangeToken</code>
        parameter of a <code>DeleteRule</code> request.</p> </li> <li> <p>Submit
        a <code>DeleteRule</code> request.</p> </li> </ol>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRuleResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "483":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "484":
          description: WAFReferencedItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFReferencedItemException"
        "485":
          description: WAFNonEmptyEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonEmptyEntityException"
        "486":
          description: WAFTagOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFTagOperationException"
        "487":
          description: WAFTagOperationInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFTagOperationInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.DeleteRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRuleRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.DeleteRuleGroup:
    post:
      operationId: DeleteRuleGroup
      description: <p>Permanently deletes a <a>RuleGroup</a>. You can't delete a
        <code>RuleGroup</code> if it's still used in any <code>WebACL</code>
        objects or if it still includes any rules.</p> <p>If you just want to
        remove a <code>RuleGroup</code> from a <code>WebACL</code>, use
        <a>UpdateWebACL</a>.</p> <p>To permanently delete a
        <code>RuleGroup</code> from AWS WAF, perform the following steps:</p>
        <ol> <li> <p>Update the <code>RuleGroup</code> to remove rules, if any.
        For more information, see <a>UpdateRuleGroup</a>.</p> </li> <li> <p>Use
        <a>GetChangeToken</a> to get the change token that you provide in the
        <code>ChangeToken</code> parameter of a <code>DeleteRuleGroup</code>
        request.</p> </li> <li> <p>Submit a <code>DeleteRuleGroup</code>
        request.</p> </li> </ol>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRuleGroupResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "483":
          description: WAFReferencedItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFReferencedItemException"
        "484":
          description: WAFNonEmptyEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonEmptyEntityException"
        "485":
          description: WAFInvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidOperationException"
        "486":
          description: WAFTagOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFTagOperationException"
        "487":
          description: WAFTagOperationInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFTagOperationInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.DeleteRuleGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRuleGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.DeleteSizeConstraintSet:
    post:
      operationId: DeleteSizeConstraintSet
      description: <p>Permanently deletes a <a>SizeConstraintSet</a>. You can't delete a
        <code>SizeConstraintSet</code> if it's still used in any
        <code>Rules</code> or if it still includes any <a>SizeConstraint</a>
        objects (any filters).</p> <p>If you just want to remove a
        <code>SizeConstraintSet</code> from a <code>Rule</code>, use
        <a>UpdateRule</a>.</p> <p>To permanently delete a
        <code>SizeConstraintSet</code>, perform the following steps:</p> <ol>
        <li> <p>Update the <code>SizeConstraintSet</code> to remove filters, if
        any. For more information, see <a>UpdateSizeConstraintSet</a>.</p> </li>
        <li> <p>Use <a>GetChangeToken</a> to get the change token that you
        provide in the <code>ChangeToken</code> parameter of a
        <code>DeleteSizeConstraintSet</code> request.</p> </li> <li> <p>Submit a
        <code>DeleteSizeConstraintSet</code> request.</p> </li> </ol>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSizeConstraintSetResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "483":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "484":
          description: WAFReferencedItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFReferencedItemException"
        "485":
          description: WAFNonEmptyEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonEmptyEntityException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.DeleteSizeConstraintSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteSizeConstraintSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.DeleteSqlInjectionMatchSet:
    post:
      operationId: DeleteSqlInjectionMatchSet
      description: <p>Permanently deletes a <a>SqlInjectionMatchSet</a>. You can't delete a
        <code>SqlInjectionMatchSet</code> if it's still used in any
        <code>Rules</code> or if it still contains any
        <a>SqlInjectionMatchTuple</a> objects.</p> <p>If you just want to remove
        a <code>SqlInjectionMatchSet</code> from a <code>Rule</code>, use
        <a>UpdateRule</a>.</p> <p>To permanently delete a
        <code>SqlInjectionMatchSet</code> from AWS WAF, perform the following
        steps:</p> <ol> <li> <p>Update the <code>SqlInjectionMatchSet</code> to
        remove filters, if any. For more information, see
        <a>UpdateSqlInjectionMatchSet</a>.</p> </li> <li> <p>Use
        <a>GetChangeToken</a> to get the change token that you provide in the
        <code>ChangeToken</code> parameter of a
        <code>DeleteSqlInjectionMatchSet</code> request.</p> </li> <li>
        <p>Submit a <code>DeleteSqlInjectionMatchSet</code> request.</p> </li>
        </ol>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSqlInjectionMatchSetResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "482":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "483":
          description: WAFReferencedItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFReferencedItemException"
        "484":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "485":
          description: WAFNonEmptyEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonEmptyEntityException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.DeleteSqlInjectionMatchSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteSqlInjectionMatchSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.DeleteWebACL:
    post:
      operationId: DeleteWebACL
      description: <p>Permanently deletes a <a>WebACL</a>. You can't delete a
        <code>WebACL</code> if it still contains any <code>Rules</code>.</p>
        <p>To delete a <code>WebACL</code>, perform the following steps:</p>
        <ol> <li> <p>Update the <code>WebACL</code> to remove
        <code>Rules</code>, if any. For more information, see
        <a>UpdateWebACL</a>.</p> </li> <li> <p>Use <a>GetChangeToken</a> to get
        the change token that you provide in the <code>ChangeToken</code>
        parameter of a <code>DeleteWebACL</code> request.</p> </li> <li>
        <p>Submit a <code>DeleteWebACL</code> request.</p> </li> </ol>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteWebACLResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "483":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "484":
          description: WAFReferencedItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFReferencedItemException"
        "485":
          description: WAFNonEmptyEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonEmptyEntityException"
        "486":
          description: WAFTagOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFTagOperationException"
        "487":
          description: WAFTagOperationInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFTagOperationInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.DeleteWebACL
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteWebACLRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.DeleteXssMatchSet:
    post:
      operationId: DeleteXssMatchSet
      description: <p>Permanently deletes an <a>XssMatchSet</a>. You can't delete an
        <code>XssMatchSet</code> if it's still used in any <code>Rules</code> or
        if it still contains any <a>XssMatchTuple</a> objects.</p> <p>If you
        just want to remove an <code>XssMatchSet</code> from a
        <code>Rule</code>, use <a>UpdateRule</a>.</p> <p>To permanently delete
        an <code>XssMatchSet</code> from AWS WAF, perform the following
        steps:</p> <ol> <li> <p>Update the <code>XssMatchSet</code> to remove
        filters, if any. For more information, see <a>UpdateXssMatchSet</a>.</p>
        </li> <li> <p>Use <a>GetChangeToken</a> to get the change token that you
        provide in the <code>ChangeToken</code> parameter of a
        <code>DeleteXssMatchSet</code> request.</p> </li> <li> <p>Submit a
        <code>DeleteXssMatchSet</code> request.</p> </li> </ol>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteXssMatchSetResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "482":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "483":
          description: WAFReferencedItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFReferencedItemException"
        "484":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "485":
          description: WAFNonEmptyEntityException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonEmptyEntityException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.DeleteXssMatchSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteXssMatchSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.GetByteMatchSet:
    post:
      operationId: GetByteMatchSet
      description: Returns the <a>ByteMatchSet</a> specified by <code>ByteMatchSetId</code>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetByteMatchSetResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "482":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.GetByteMatchSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetByteMatchSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.GetChangeToken:
    post:
      operationId: GetChangeToken
      description: <p>When you want to create, update, or delete AWS WAF objects, get a
        change token and include the change token in the create, update, or
        delete request. Change tokens ensure that your application doesn't
        submit conflicting requests to AWS WAF.</p> <p>Each create, update, or
        delete request must use a unique change token. If your application
        submits a <code>GetChangeToken</code> request and then submits a second
        <code>GetChangeToken</code> request before submitting a create, update,
        or delete request, the second <code>GetChangeToken</code> request
        returns the same value as the first <code>GetChangeToken</code>
        request.</p> <p>When you use a change token in a create, update, or
        delete request, the status of the change token changes to
        <code>PENDING</code>, which indicates that AWS WAF is propagating the
        change to all AWS WAF servers. Use <code>GetChangeTokenStatus</code> to
        determine the status of your change token.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetChangeTokenResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.GetChangeToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetChangeTokenRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.GetChangeTokenStatus:
    post:
      operationId: GetChangeTokenStatus
      description: "<p>Returns the status of a <code>ChangeToken</code> that you got by
        calling <a>GetChangeToken</a>. <code>ChangeTokenStatus</code> is one of
        the following values:</p> <ul> <li> <p> <code>PROVISIONED</code>: You
        requested the change token by calling <code>GetChangeToken</code>, but
        you haven't used it yet in a call to create, update, or delete an AWS
        WAF object.</p> </li> <li> <p> <code>PENDING</code>: AWS WAF is
        propagating the create, update, or delete request to all AWS WAF
        servers.</p> </li> <li> <p> <code>INSYNC</code>: Propagation is
        complete.</p> </li> </ul>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetChangeTokenStatusResponse"
        "480":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.GetChangeTokenStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetChangeTokenStatusRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.GetGeoMatchSet:
    post:
      operationId: GetGeoMatchSet
      description: Returns the <a>GeoMatchSet</a> that is specified by
        <code>GeoMatchSetId</code>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetGeoMatchSetResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "482":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.GetGeoMatchSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetGeoMatchSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.GetIPSet:
    post:
      operationId: GetIPSet
      description: Returns the <a>IPSet</a> that is specified by <code>IPSetId</code>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetIPSetResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "482":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.GetIPSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetIPSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.GetLoggingConfiguration:
    post:
      operationId: GetLoggingConfiguration
      description: Returns the <a>LoggingConfiguration</a> for the specified web ACL.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLoggingConfigurationResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.GetLoggingConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetLoggingConfigurationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.GetPermissionPolicy:
    post:
      operationId: GetPermissionPolicy
      description: Returns the IAM policy attached to the RuleGroup.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPermissionPolicyResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.GetPermissionPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetPermissionPolicyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.GetRateBasedRule:
    post:
      operationId: GetRateBasedRule
      description: Returns the <a>RateBasedRule</a> that is specified by the
        <code>RuleId</code> that you included in the
        <code>GetRateBasedRule</code> request.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRateBasedRuleResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "482":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.GetRateBasedRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRateBasedRuleRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.GetRateBasedRuleManagedKeys:
    post:
      operationId: GetRateBasedRuleManagedKeys
      description: Returns an array of IP addresses currently being blocked by the
        <a>RateBasedRule</a> that is specified by the <code>RuleId</code>. The
        maximum number of managed keys that will be blocked is 10,000. If more
        than 10,000 addresses exceed the rate limit, the 10,000 addresses with
        the highest rates will be blocked.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRateBasedRuleManagedKeysResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "482":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "483":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.GetRateBasedRuleManagedKeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRateBasedRuleManagedKeysRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.GetRegexMatchSet:
    post:
      operationId: GetRegexMatchSet
      description: Returns the <a>RegexMatchSet</a> specified by
        <code>RegexMatchSetId</code>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRegexMatchSetResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "482":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.GetRegexMatchSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRegexMatchSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.GetRegexPatternSet:
    post:
      operationId: GetRegexPatternSet
      description: Returns the <a>RegexPatternSet</a> specified by
        <code>RegexPatternSetId</code>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRegexPatternSetResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "482":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.GetRegexPatternSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRegexPatternSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.GetRule:
    post:
      operationId: GetRule
      description: Returns the <a>Rule</a> that is specified by the <code>RuleId</code>
        that you included in the <code>GetRule</code> request.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRuleResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "482":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.GetRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRuleRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.GetRuleGroup:
    post:
      operationId: GetRuleGroup
      description: <p>Returns the <a>RuleGroup</a> that is specified by the
        <code>RuleGroupId</code> that you included in the
        <code>GetRuleGroup</code> request.</p> <p>To view the rules in a rule
        group, use <a>ListActivatedRulesInRuleGroup</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRuleGroupResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.GetRuleGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRuleGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.GetSampledRequests:
    post:
      operationId: GetSampledRequests
      description: <p>Gets detailed information about a specified number of requests--a
        sample--that AWS WAF randomly selects from among the first 5,000
        requests that your AWS resource received during a time range that you
        choose. You can specify a sample size of up to 500 requests, and you can
        specify any time range in the previous three hours.</p> <p>
        <code>GetSampledRequests</code> returns a time range, which is usually
        the time range that you specified. However, if your resource (such as a
        CloudFront distribution) received 5,000 requests before the specified
        time range elapsed, <code>GetSampledRequests</code> returns an updated
        time range. This new time range indicates the actual period during which
        AWS WAF selected the requests in the sample.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSampledRequestsResponse"
        "480":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.GetSampledRequests
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetSampledRequestsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.GetSizeConstraintSet:
    post:
      operationId: GetSizeConstraintSet
      description: Returns the <a>SizeConstraintSet</a> specified by
        <code>SizeConstraintSetId</code>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSizeConstraintSetResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "482":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.GetSizeConstraintSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetSizeConstraintSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.GetSqlInjectionMatchSet:
    post:
      operationId: GetSqlInjectionMatchSet
      description: Returns the <a>SqlInjectionMatchSet</a> that is specified by
        <code>SqlInjectionMatchSetId</code>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSqlInjectionMatchSetResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "482":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.GetSqlInjectionMatchSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetSqlInjectionMatchSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.GetWebACL:
    post:
      operationId: GetWebACL
      description: Returns the <a>WebACL</a> that is specified by <code>WebACLId</code>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetWebACLResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "482":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.GetWebACL
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetWebACLRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.GetXssMatchSet:
    post:
      operationId: GetXssMatchSet
      description: Returns the <a>XssMatchSet</a> that is specified by
        <code>XssMatchSetId</code>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetXssMatchSetResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "482":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.GetXssMatchSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetXssMatchSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.ListActivatedRulesInRuleGroup:
    post:
      operationId: ListActivatedRulesInRuleGroup
      description: Returns an array of <a>ActivatedRule</a> objects.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListActivatedRulesInRuleGroupResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "482":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.ListActivatedRulesInRuleGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListActivatedRulesInRuleGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.ListByteMatchSets:
    post:
      operationId: ListByteMatchSets
      description: Returns an array of <a>ByteMatchSetSummary</a> objects.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListByteMatchSetsResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.ListByteMatchSets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListByteMatchSetsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.ListGeoMatchSets:
    post:
      operationId: ListGeoMatchSets
      description: Returns an array of <a>GeoMatchSetSummary</a> objects in the response.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGeoMatchSetsResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.ListGeoMatchSets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListGeoMatchSetsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.ListIPSets:
    post:
      operationId: ListIPSets
      description: Returns an array of <a>IPSetSummary</a> objects in the response.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListIPSetsResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.ListIPSets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListIPSetsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.ListLoggingConfigurations:
    post:
      operationId: ListLoggingConfigurations
      description: Returns an array of <a>LoggingConfiguration</a> objects.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLoggingConfigurationsResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "482":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.ListLoggingConfigurations
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListLoggingConfigurationsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.ListRateBasedRules:
    post:
      operationId: ListRateBasedRules
      description: Returns an array of <a>RuleSummary</a> objects.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRateBasedRulesResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.ListRateBasedRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListRateBasedRulesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.ListRegexMatchSets:
    post:
      operationId: ListRegexMatchSets
      description: Returns an array of <a>RegexMatchSetSummary</a> objects.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRegexMatchSetsResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.ListRegexMatchSets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListRegexMatchSetsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.ListRegexPatternSets:
    post:
      operationId: ListRegexPatternSets
      description: Returns an array of <a>RegexPatternSetSummary</a> objects.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRegexPatternSetsResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.ListRegexPatternSets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListRegexPatternSetsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.ListRuleGroups:
    post:
      operationId: ListRuleGroups
      description: Returns an array of <a>RuleGroup</a> objects.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRuleGroupsResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.ListRuleGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListRuleGroupsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.ListRules:
    post:
      operationId: ListRules
      description: Returns an array of <a>RuleSummary</a> objects.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRulesResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.ListRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListRulesRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.ListSizeConstraintSets:
    post:
      operationId: ListSizeConstraintSets
      description: Returns an array of <a>SizeConstraintSetSummary</a> objects.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSizeConstraintSetsResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.ListSizeConstraintSets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListSizeConstraintSetsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.ListSqlInjectionMatchSets:
    post:
      operationId: ListSqlInjectionMatchSets
      description: Returns an array of <a>SqlInjectionMatchSet</a> objects.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSqlInjectionMatchSetsResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.ListSqlInjectionMatchSets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListSqlInjectionMatchSetsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.ListSubscribedRuleGroups:
    post:
      operationId: ListSubscribedRuleGroups
      description: Returns an array of <a>RuleGroup</a> objects that you are subscribed to.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSubscribedRuleGroupsResponse"
        "480":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.ListSubscribedRuleGroups
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListSubscribedRuleGroupsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: ""
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
        "482":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "483":
          description: WAFBadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFBadRequestException"
        "484":
          description: WAFTagOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFTagOperationException"
        "485":
          description: WAFTagOperationInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFTagOperationInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.ListTagsForResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagsForResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.ListWebACLs:
    post:
      operationId: ListWebACLs
      description: Returns an array of <a>WebACLSummary</a> objects in the response.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWebACLsResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.ListWebACLs
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListWebACLsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.ListXssMatchSets:
    post:
      operationId: ListXssMatchSets
      description: Returns an array of <a>XssMatchSet</a> objects.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListXssMatchSetsResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.ListXssMatchSets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListXssMatchSetsRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.PutLoggingConfiguration:
    post:
      operationId: PutLoggingConfiguration
      description: <p>Associates a <a>LoggingConfiguration</a> with a specified web
        ACL.</p> <p>You can access information about all traffic that AWS WAF
        inspects using the following steps:</p> <ol> <li> <p>Create an Amazon
        Kinesis Data Firehose. </p> <p>Create the data firehose with a PUT
        source and in the region that you are operating. However, if you are
        capturing logs for Amazon CloudFront, always create the firehose in US
        East (N. Virginia). </p> <note> <p>Do not create the data firehose using
        a <code>Kinesis stream</code> as your source.</p> </note> </li> <li>
        <p>Associate that firehose to your web ACL using a
        <code>PutLoggingConfiguration</code> request.</p> </li> </ol> <p>When
        you successfully enable logging using a
        <code>PutLoggingConfiguration</code> request, AWS WAF will create a
        service linked role with the necessary permissions to write logs to the
        Amazon Kinesis Data Firehose. For more information, see <a
        href="https://docs.aws.amazon.com/waf/latest/developerguide/logging.html">Logging
        Web ACL Traffic Information</a> in the <i>AWS WAF Developer
        Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutLoggingConfigurationResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "482":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "483":
          description: WAFServiceLinkedRoleErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFServiceLinkedRoleErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.PutLoggingConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutLoggingConfigurationRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.PutPermissionPolicy:
    post:
      operationId: PutPermissionPolicy
      description: <p>Attaches a IAM policy to the specified resource. The only supported
        use for this action is to share a RuleGroup across accounts.</p> <p>The
        <code>PutPermissionPolicy</code> is subject to the following
        restrictions:</p> <ul> <li> <p>You can attach only one policy with each
        <code>PutPermissionPolicy</code> request.</p> </li> <li> <p>The policy
        must include an <code>Effect</code>, <code>Action</code> and
        <code>Principal</code>. </p> </li> <li> <p> <code>Effect</code> must
        specify <code>Allow</code>.</p> </li> <li> <p>The <code>Action</code> in
        the policy must be <code>waf:UpdateWebACL</code>,
        <code>waf-regional:UpdateWebACL</code>, <code>waf:GetRuleGroup</code>
        and <code>waf-regional:GetRuleGroup</code> . Any extra or wildcard
        actions in the policy will be rejected.</p> </li> <li> <p>The policy
        cannot include a <code>Resource</code> parameter.</p> </li> <li> <p>The
        ARN in the request must be a valid WAF RuleGroup ARN and the RuleGroup
        must exist in the same region.</p> </li> <li> <p>The user making the
        request must be the owner of the RuleGroup.</p> </li> <li> <p>Your
        policy must be composed using IAM Policy version 2012-10-17.</p> </li>
        </ul> <p>For more information, see <a
        href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html">IAM
        Policies</a>. </p> <p>An example of a valid policy parameter is shown in
        the Examples section below.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutPermissionPolicyResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "482":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "483":
          description: WAFInvalidPermissionPolicyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidPermissionPolicyException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.PutPermissionPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutPermissionPolicyRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.TagResource:
    post:
      operationId: TagResource
      description: ""
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
        "482":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
        "483":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "484":
          description: WAFBadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFBadRequestException"
        "485":
          description: WAFTagOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFTagOperationException"
        "486":
          description: WAFTagOperationInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFTagOperationInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.TagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.UntagResource:
    post:
      operationId: UntagResource
      description: ""
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
        "482":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "483":
          description: WAFBadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFBadRequestException"
        "484":
          description: WAFTagOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFTagOperationException"
        "485":
          description: WAFTagOperationInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFTagOperationInternalErrorException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.UntagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UntagResourceRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.UpdateByteMatchSet:
    post:
      operationId: UpdateByteMatchSet
      description: '<p>Inserts or deletes <a>ByteMatchTuple</a> objects (filters) in a
        <a>ByteMatchSet</a>. For each <code>ByteMatchTuple</code> object, you
        specify the following values: </p> <ul> <li> <p>Whether to insert or
        delete the object from the array. If you want to change a
        <code>ByteMatchSetUpdate</code> object, you delete the existing object
        and add a new one.</p> </li> <li> <p>The part of a web request that you
        want AWS WAF to inspect, such as a query string or the value of the
        <code>User-Agent</code> header. </p> </li> <li> <p>The bytes (typically
        a string that corresponds with ASCII characters) that you want AWS WAF
        to look for. For more information, including how you specify the values
        for the AWS WAF API and the AWS CLI or SDKs, see
        <code>TargetString</code> in the <a>ByteMatchTuple</a> data type. </p>
        </li> <li> <p>Where to look, such as at the beginning or the end of a
        query string.</p> </li> <li> <p>Whether to perform any conversions on
        the request, such as converting it to lowercase, before inspecting it
        for the specified string.</p> </li> </ul> <p>For example, you can add a
        <code>ByteMatchSetUpdate</code> object that matches web requests in
        which <code>User-Agent</code> headers contain the string
        <code>BadBot</code>. You can then configure AWS WAF to block those
        requests.</p> <p>To create and configure a <code>ByteMatchSet</code>,
        perform the following steps:</p> <ol> <li> <p>Create a
        <code>ByteMatchSet.</code> For more information, see
        <a>CreateByteMatchSet</a>.</p> </li> <li> <p>Use <a>GetChangeToken</a>
        to get the change token that you provide in the <code>ChangeToken</code>
        parameter of an <code>UpdateByteMatchSet</code> request.</p> </li> <li>
        <p>Submit an <code>UpdateByteMatchSet</code> request to specify the part
        of the request that you want AWS WAF to inspect (for example, the header
        or the URI) and the value that you want AWS WAF to watch for.</p> </li>
        </ol> <p>For more information about how to use the AWS WAF API to allow
        or block HTTP requests, see the <a
        href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF
        Developer Guide</a>.</p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateByteMatchSetResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "482":
          description: WAFInvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidOperationException"
        "483":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
        "484":
          description: WAFNonexistentContainerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentContainerException"
        "485":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "486":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "487":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.UpdateByteMatchSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateByteMatchSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.UpdateGeoMatchSet:
    post:
      operationId: UpdateGeoMatchSet
      description: '<p>Inserts or deletes <a>GeoMatchConstraint</a> objects in an
        <code>GeoMatchSet</code>. For each <code>GeoMatchConstraint</code>
        object, you specify the following values: </p> <ul> <li> <p>Whether to
        insert or delete the object from the array. If you want to change an
        <code>GeoMatchConstraint</code> object, you delete the existing object
        and add a new one.</p> </li> <li> <p>The <code>Type</code>. The only
        valid value for <code>Type</code> is <code>Country</code>.</p> </li>
        <li> <p>The <code>Value</code>, which is a two character code for the
        country to add to the <code>GeoMatchConstraint</code> object. Valid
        codes are listed in <a>GeoMatchConstraint$Value</a>.</p> </li> </ul>
        <p>To create and configure an <code>GeoMatchSet</code>, perform the
        following steps:</p> <ol> <li> <p>Submit a <a>CreateGeoMatchSet</a>
        request.</p> </li> <li> <p>Use <a>GetChangeToken</a> to get the change
        token that you provide in the <code>ChangeToken</code> parameter of an
        <a>UpdateGeoMatchSet</a> request.</p> </li> <li> <p>Submit an
        <code>UpdateGeoMatchSet</code> request to specify the country that you
        want AWS WAF to watch for.</p> </li> </ol> <p>When you update an
        <code>GeoMatchSet</code>, you specify the country that you want to add
        and/or the country that you want to delete. If you want to change a
        country, you delete the existing country and add the new one.</p> <p>For
        more information about how to use the AWS WAF API to allow or block HTTP
        requests, see the <a
        href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF
        Developer Guide</a>.</p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateGeoMatchSetResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "483":
          description: WAFInvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidOperationException"
        "484":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
        "485":
          description: WAFNonexistentContainerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentContainerException"
        "486":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "487":
          description: WAFReferencedItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFReferencedItemException"
        "488":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.UpdateGeoMatchSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateGeoMatchSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.UpdateIPSet:
    post:
      operationId: UpdateIPSet
      description: "<p>Inserts or deletes <a>IPSetDescriptor</a> objects in an
        <code>IPSet</code>. For each <code>IPSetDescriptor</code> object, you
        specify the following values: </p> <ul> <li> <p>Whether to insert or
        delete the object from the array. If you want to change an
        <code>IPSetDescriptor</code> object, you delete the existing object and
        add a new one.</p> </li> <li> <p>The IP address version,
        <code>IPv4</code> or <code>IPv6</code>. </p> </li> <li> <p>The IP
        address in CIDR notation, for example, <code>192.0.2.0/24</code> (for
        the range of IP addresses from <code>192.0.2.0</code> to
        <code>192.0.2.255</code>) or <code>192.0.2.44/32</code> (for the
        individual IP address <code>192.0.2.44</code>). </p> </li> </ul> <p>AWS
        WAF supports IPv4 address ranges: /8 and any range between /16 through
        /32. AWS WAF supports IPv6 address ranges: /24, /32, /48, /56, /64, and
        /128. For more information about CIDR notation, see the Wikipedia entry
        <a
        href=\"https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\">C\
        lassless Inter-Domain Routing</a>.</p> <p>IPv6 addresses can be
        represented using any of the following formats:</p> <ul> <li>
        <p>1111:0000:0000:0000:0000:0000:0000:0111/128</p> </li> <li>
        <p>1111:0:0:0:0:0:0:0111/128</p> </li> <li> <p>1111::0111/128</p> </li>
        <li> <p>1111::111/128</p> </li> </ul> <p>You use an <code>IPSet</code>
        to specify which web requests you want to allow or block based on the IP
        addresses that the requests originated from. For example, if you're
        receiving a lot of requests from one or a small number of IP addresses
        and you want to block the requests, you can create an <code>IPSet</code>
        that specifies those IP addresses, and then configure AWS WAF to block
        the requests. </p> <p>To create and configure an <code>IPSet</code>,
        perform the following steps:</p> <ol> <li> <p>Submit a
        <a>CreateIPSet</a> request.</p> </li> <li> <p>Use <a>GetChangeToken</a>
        to get the change token that you provide in the <code>ChangeToken</code>
        parameter of an <a>UpdateIPSet</a> request.</p> </li> <li> <p>Submit an
        <code>UpdateIPSet</code> request to specify the IP addresses that you
        want AWS WAF to watch for.</p> </li> </ol> <p>When you update an
        <code>IPSet</code>, you specify the IP addresses that you want to add
        and/or the IP addresses that you want to delete. If you want to change
        an IP address, you delete the existing IP address and add the new
        one.</p> <p>You can insert a maximum of 1000 addresses in a single
        request.</p> <p>For more information about how to use the AWS WAF API to
        allow or block HTTP requests, see the <a
        href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">AWS WAF
        Developer Guide</a>.</p>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateIPSetResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "483":
          description: WAFInvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidOperationException"
        "484":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
        "485":
          description: WAFNonexistentContainerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentContainerException"
        "486":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "487":
          description: WAFReferencedItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFReferencedItemException"
        "488":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.UpdateIPSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateIPSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.UpdateRateBasedRule:
    post:
      operationId: UpdateRateBasedRule
      description: <p>Inserts or deletes <a>Predicate</a> objects in a rule and updates the
        <code>RateLimit</code> in the rule. </p> <p>Each <code>Predicate</code>
        object identifies a predicate, such as a <a>ByteMatchSet</a> or an
        <a>IPSet</a>, that specifies the web requests that you want to block or
        count. The <code>RateLimit</code> specifies the number of requests every
        five minutes that triggers the rule.</p> <p>If you add more than one
        predicate to a <code>RateBasedRule</code>, a request must match all the
        predicates and exceed the <code>RateLimit</code> to be counted or
        blocked. For example, suppose you add the following to a
        <code>RateBasedRule</code>:</p> <ul> <li> <p>An <code>IPSet</code> that
        matches the IP address <code>192.0.2.44/32</code> </p> </li> <li> <p>A
        <code>ByteMatchSet</code> that matches <code>BadBot</code> in the
        <code>User-Agent</code> header</p> </li> </ul> <p>Further, you specify a
        <code>RateLimit</code> of 15,000.</p> <p>You then add the
        <code>RateBasedRule</code> to a <code>WebACL</code> and specify that you
        want to block requests that satisfy the rule. For a request to be
        blocked, it must come from the IP address 192.0.2.44 <i>and</i> the
        <code>User-Agent</code> header in the request must contain the value
        <code>BadBot</code>. Further, requests that match these two conditions
        much be received at a rate of more than 15,000 every five minutes. If
        the rate drops below this limit, AWS WAF no longer blocks the
        requests.</p> <p>As a second example, suppose you want to limit requests
        to a particular page on your site. To do this, you could add the
        following to a <code>RateBasedRule</code>:</p> <ul> <li> <p>A
        <code>ByteMatchSet</code> with <code>FieldToMatch</code> of
        <code>URI</code> </p> </li> <li> <p>A <code>PositionalConstraint</code>
        of <code>STARTS_WITH</code> </p> </li> <li> <p>A
        <code>TargetString</code> of <code>login</code> </p> </li> </ul>
        <p>Further, you specify a <code>RateLimit</code> of 15,000.</p> <p>By
        adding this <code>RateBasedRule</code> to a <code>WebACL</code>, you
        could limit requests to your login page without affecting the rest of
        your site.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateRateBasedRuleResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "483":
          description: WAFInvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidOperationException"
        "484":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
        "485":
          description: WAFNonexistentContainerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentContainerException"
        "486":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "487":
          description: WAFReferencedItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFReferencedItemException"
        "488":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.UpdateRateBasedRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRateBasedRuleRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.UpdateRegexMatchSet:
    post:
      operationId: UpdateRegexMatchSet
      description: '<p>Inserts or deletes <a>RegexMatchTuple</a> objects (filters) in a
        <a>RegexMatchSet</a>. For each <code>RegexMatchSetUpdate</code> object,
        you specify the following values: </p> <ul> <li> <p>Whether to insert or
        delete the object from the array. If you want to change a
        <code>RegexMatchSetUpdate</code> object, you delete the existing object
        and add a new one.</p> </li> <li> <p>The part of a web request that you
        want AWS WAF to inspectupdate, such as a query string or the value of
        the <code>User-Agent</code> header. </p> </li> <li> <p>The identifier of
        the pattern (a regular expression) that you want AWS WAF to look for.
        For more information, see <a>RegexPatternSet</a>. </p> </li> <li>
        <p>Whether to perform any conversions on the request, such as converting
        it to lowercase, before inspecting it for the specified string.</p>
        </li> </ul> <p> For example, you can create a
        <code>RegexPatternSet</code> that matches any requests with
        <code>User-Agent</code> headers that contain the string
        <code>B[a@]dB[o0]t</code>. You can then configure AWS WAF to reject
        those requests.</p> <p>To create and configure a
        <code>RegexMatchSet</code>, perform the following steps:</p> <ol> <li>
        <p>Create a <code>RegexMatchSet.</code> For more information, see
        <a>CreateRegexMatchSet</a>.</p> </li> <li> <p>Use <a>GetChangeToken</a>
        to get the change token that you provide in the <code>ChangeToken</code>
        parameter of an <code>UpdateRegexMatchSet</code> request.</p> </li> <li>
        <p>Submit an <code>UpdateRegexMatchSet</code> request to specify the
        part of the request that you want AWS WAF to inspect (for example, the
        header or the URI) and the identifier of the
        <code>RegexPatternSet</code> that contain the regular expression patters
        you want AWS WAF to watch for.</p> </li> </ol> <p>For more information
        about how to use the AWS WAF API to allow or block HTTP requests, see
        the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS
        WAF Developer Guide</a>.</p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateRegexMatchSetResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFDisallowedNameException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFDisallowedNameException"
        "483":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
        "484":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "485":
          description: WAFNonexistentContainerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentContainerException"
        "486":
          description: WAFInvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidOperationException"
        "487":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.UpdateRegexMatchSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRegexMatchSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.UpdateRegexPatternSet:
    post:
      operationId: UpdateRegexPatternSet
      description: '<p>Inserts or deletes <code>RegexPatternString</code> objects in a
        <a>RegexPatternSet</a>. For each <code>RegexPatternString</code> object,
        you specify the following values: </p> <ul> <li> <p>Whether to insert or
        delete the <code>RegexPatternString</code>.</p> </li> <li> <p>The
        regular expression pattern that you want to insert or delete. For more
        information, see <a>RegexPatternSet</a>. </p> </li> </ul> <p> For
        example, you can create a <code>RegexPatternString</code> such as
        <code>B[a@]dB[o0]t</code>. AWS WAF will match this
        <code>RegexPatternString</code> to:</p> <ul> <li> <p>BadBot</p> </li>
        <li> <p>BadB0t</p> </li> <li> <p>B@dBot</p> </li> <li> <p>B@dB0t</p>
        </li> </ul> <p>To create and configure a <code>RegexPatternSet</code>,
        perform the following steps:</p> <ol> <li> <p>Create a
        <code>RegexPatternSet.</code> For more information, see
        <a>CreateRegexPatternSet</a>.</p> </li> <li> <p>Use
        <a>GetChangeToken</a> to get the change token that you provide in the
        <code>ChangeToken</code> parameter of an
        <code>UpdateRegexPatternSet</code> request.</p> </li> <li> <p>Submit an
        <code>UpdateRegexPatternSet</code> request to specify the regular
        expression pattern that you want AWS WAF to watch for.</p> </li> </ol>
        <p>For more information about how to use the AWS WAF API to allow or
        block HTTP requests, see the <a
        href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF
        Developer Guide</a>.</p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateRegexPatternSetResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
        "483":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "484":
          description: WAFNonexistentContainerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentContainerException"
        "485":
          description: WAFInvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidOperationException"
        "486":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "487":
          description: WAFInvalidRegexPatternException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidRegexPatternException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.UpdateRegexPatternSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRegexPatternSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.UpdateRule:
    post:
      operationId: UpdateRule
      description: '<p>Inserts or deletes <a>Predicate</a> objects in a <code>Rule</code>.
        Each <code>Predicate</code> object identifies a predicate, such as a
        <a>ByteMatchSet</a> or an <a>IPSet</a>, that specifies the web requests
        that you want to allow, block, or count. If you add more than one
        predicate to a <code>Rule</code>, a request must match all of the
        specifications to be allowed, blocked, or counted. For example, suppose
        that you add the following to a <code>Rule</code>: </p> <ul> <li> <p>A
        <code>ByteMatchSet</code> that matches the value <code>BadBot</code> in
        the <code>User-Agent</code> header</p> </li> <li> <p>An
        <code>IPSet</code> that matches the IP address <code>192.0.2.44</code>
        </p> </li> </ul> <p>You then add the <code>Rule</code> to a
        <code>WebACL</code> and specify that you want to block requests that
        satisfy the <code>Rule</code>. For a request to be blocked, the
        <code>User-Agent</code> header in the request must contain the value
        <code>BadBot</code> <i>and</i> the request must originate from the IP
        address 192.0.2.44.</p> <p>To create and configure a <code>Rule</code>,
        perform the following steps:</p> <ol> <li> <p>Create and update the
        predicates that you want to include in the <code>Rule</code>.</p> </li>
        <li> <p>Create the <code>Rule</code>. See <a>CreateRule</a>.</p> </li>
        <li> <p>Use <code>GetChangeToken</code> to get the change token that you
        provide in the <code>ChangeToken</code> parameter of an
        <a>UpdateRule</a> request.</p> </li> <li> <p>Submit an
        <code>UpdateRule</code> request to add predicates to the
        <code>Rule</code>.</p> </li> <li> <p>Create and update a
        <code>WebACL</code> that contains the <code>Rule</code>. See
        <a>CreateWebACL</a>.</p> </li> </ol> <p>If you want to replace one
        <code>ByteMatchSet</code> or <code>IPSet</code> with another, you delete
        the existing one and add the new one.</p> <p>For more information about
        how to use the AWS WAF API to allow or block HTTP requests, see the <a
        href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF
        Developer Guide</a>.</p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateRuleResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "483":
          description: WAFInvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidOperationException"
        "484":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
        "485":
          description: WAFNonexistentContainerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentContainerException"
        "486":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "487":
          description: WAFReferencedItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFReferencedItemException"
        "488":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.UpdateRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRuleRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.UpdateRuleGroup:
    post:
      operationId: UpdateRuleGroup
      description: <p>Inserts or deletes <a>ActivatedRule</a> objects in a
        <code>RuleGroup</code>.</p> <p>You can only insert <code>REGULAR</code>
        rules into a rule group.</p> <p>You can have a maximum of ten rules per
        rule group.</p> <p>To create and configure a <code>RuleGroup</code>,
        perform the following steps:</p> <ol> <li> <p>Create and update the
        <code>Rules</code> that you want to include in the
        <code>RuleGroup</code>. See <a>CreateRule</a>.</p> </li> <li> <p>Use
        <code>GetChangeToken</code> to get the change token that you provide in
        the <code>ChangeToken</code> parameter of an <a>UpdateRuleGroup</a>
        request.</p> </li> <li> <p>Submit an <code>UpdateRuleGroup</code>
        request to add <code>Rules</code> to the <code>RuleGroup</code>.</p>
        </li> <li> <p>Create and update a <code>WebACL</code> that contains the
        <code>RuleGroup</code>. See <a>CreateWebACL</a>.</p> </li> </ol> <p>If
        you want to replace one <code>Rule</code> with another, you delete the
        existing one and add the new one.</p> <p>For more information about how
        to use the AWS WAF API to allow or block HTTP requests, see the <a
        href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF
        Developer Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateRuleGroupResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFNonexistentContainerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentContainerException"
        "483":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "484":
          description: WAFInvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidOperationException"
        "485":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
        "486":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.UpdateRuleGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRuleGroupRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.UpdateSizeConstraintSet:
    post:
      operationId: UpdateSizeConstraintSet
      description: '<p>Inserts or deletes <a>SizeConstraint</a> objects (filters) in a
        <a>SizeConstraintSet</a>. For each <code>SizeConstraint</code> object,
        you specify the following values: </p> <ul> <li> <p>Whether to insert or
        delete the object from the array. If you want to change a
        <code>SizeConstraintSetUpdate</code> object, you delete the existing
        object and add a new one.</p> </li> <li> <p>The part of a web request
        that you want AWS WAF to evaluate, such as the length of a query string
        or the length of the <code>User-Agent</code> header.</p> </li> <li>
        <p>Whether to perform any transformations on the request, such as
        converting it to lowercase, before checking its length. Note that
        transformations of the request body are not supported because the AWS
        resource forwards only the first <code>8192</code> bytes of your request
        to AWS WAF.</p> <p>You can only specify a single type of
        TextTransformation.</p> </li> <li> <p>A <code>ComparisonOperator</code>
        used for evaluating the selected part of the request against the
        specified <code>Size</code>, such as equals, greater than, less than,
        and so on.</p> </li> <li> <p>The length, in bytes, that you want AWS WAF
        to watch for in selected part of the request. The length is computed
        after applying the transformation.</p> </li> </ul> <p>For example, you
        can add a <code>SizeConstraintSetUpdate</code> object that matches web
        requests in which the length of the <code>User-Agent</code> header is
        greater than 100 bytes. You can then configure AWS WAF to block those
        requests.</p> <p>To create and configure a
        <code>SizeConstraintSet</code>, perform the following steps:</p> <ol>
        <li> <p>Create a <code>SizeConstraintSet.</code> For more information,
        see <a>CreateSizeConstraintSet</a>.</p> </li> <li> <p>Use
        <a>GetChangeToken</a> to get the change token that you provide in the
        <code>ChangeToken</code> parameter of an
        <code>UpdateSizeConstraintSet</code> request.</p> </li> <li> <p>Submit
        an <code>UpdateSizeConstraintSet</code> request to specify the part of
        the request that you want AWS WAF to inspect (for example, the header or
        the URI) and the value that you want AWS WAF to watch for.</p> </li>
        </ol> <p>For more information about how to use the AWS WAF API to allow
        or block HTTP requests, see the <a
        href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF
        Developer Guide</a>.</p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateSizeConstraintSetResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "483":
          description: WAFInvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidOperationException"
        "484":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
        "485":
          description: WAFNonexistentContainerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentContainerException"
        "486":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "487":
          description: WAFReferencedItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFReferencedItemException"
        "488":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.UpdateSizeConstraintSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSizeConstraintSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.UpdateSqlInjectionMatchSet:
    post:
      operationId: UpdateSqlInjectionMatchSet
      description: "<p>Inserts or deletes <a>SqlInjectionMatchTuple</a> objects (filters)
        in a <a>SqlInjectionMatchSet</a>. For each
        <code>SqlInjectionMatchTuple</code> object, you specify the following
        values:</p> <ul> <li> <p> <code>Action</code>: Whether to insert the
        object into or delete the object from the array. To change a
        <code>SqlInjectionMatchTuple</code>, you delete the existing object and
        add a new one.</p> </li> <li> <p> <code>FieldToMatch</code>: The part of
        web requests that you want AWS WAF to inspect and, if you want AWS WAF
        to inspect a header or custom query parameter, the name of the header or
        parameter.</p> </li> <li> <p> <code>TextTransformation</code>: Which
        text transformation, if any, to perform on the web request before
        inspecting the request for snippets of malicious SQL code.</p> <p>You
        can only specify a single type of TextTransformation.</p> </li> </ul>
        <p>You use <code>SqlInjectionMatchSet</code> objects to specify which
        CloudFront requests that you want to allow, block, or count. For
        example, if you're receiving requests that contain snippets of SQL code
        in the query string and you want to block the requests, you can create a
        <code>SqlInjectionMatchSet</code> with the applicable settings, and then
        configure AWS WAF to block the requests. </p> <p>To create and configure
        a <code>SqlInjectionMatchSet</code>, perform the following steps:</p>
        <ol> <li> <p>Submit a <a>CreateSqlInjectionMatchSet</a> request.</p>
        </li> <li> <p>Use <a>GetChangeToken</a> to get the change token that you
        provide in the <code>ChangeToken</code> parameter of an
        <a>UpdateIPSet</a> request.</p> </li> <li> <p>Submit an
        <code>UpdateSqlInjectionMatchSet</code> request to specify the parts of
        web requests that you want AWS WAF to inspect for snippets of SQL
        code.</p> </li> </ol> <p>For more information about how to use the AWS
        WAF API to allow or block HTTP requests, see the <a
        href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">AWS WAF
        Developer Guide</a>.</p>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateSqlInjectionMatchSetResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "482":
          description: WAFInvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidOperationException"
        "483":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
        "484":
          description: WAFNonexistentContainerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentContainerException"
        "485":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "486":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "487":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.UpdateSqlInjectionMatchSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSqlInjectionMatchSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.UpdateWebACL:
    post:
      operationId: UpdateWebACL
      description: <p>Inserts or deletes <a>ActivatedRule</a> objects in a
        <code>WebACL</code>. Each <code>Rule</code> identifies web requests that
        you want to allow, block, or count. When you update a
        <code>WebACL</code>, you specify the following values:</p> <ul> <li>
        <p>A default action for the <code>WebACL</code>, either
        <code>ALLOW</code> or <code>BLOCK</code>. AWS WAF performs the default
        action if a request doesn't match the criteria in any of the
        <code>Rules</code> in a <code>WebACL</code>.</p> </li> <li> <p>The
        <code>Rules</code> that you want to add or delete. If you want to
        replace one <code>Rule</code> with another, you delete the existing
        <code>Rule</code> and add the new one.</p> </li> <li> <p>For each
        <code>Rule</code>, whether you want AWS WAF to allow requests, block
        requests, or count requests that match the conditions in the
        <code>Rule</code>.</p> </li> <li> <p>The order in which you want AWS WAF
        to evaluate the <code>Rules</code> in a <code>WebACL</code>. If you add
        more than one <code>Rule</code> to a <code>WebACL</code>, AWS WAF
        evaluates each request against the <code>Rules</code> in order based on
        the value of <code>Priority</code>. (The <code>Rule</code> that has the
        lowest value for <code>Priority</code> is evaluated first.) When a web
        request matches all the predicates (such as <code>ByteMatchSets</code>
        and <code>IPSets</code>) in a <code>Rule</code>, AWS WAF immediately
        takes the corresponding action, allow or block, and doesn't evaluate the
        request against the remaining <code>Rules</code> in the
        <code>WebACL</code>, if any. </p> </li> </ul> <p>To create and configure
        a <code>WebACL</code>, perform the following steps:</p> <ol> <li>
        <p>Create and update the predicates that you want to include in
        <code>Rules</code>. For more information, see <a>CreateByteMatchSet</a>,
        <a>UpdateByteMatchSet</a>, <a>CreateIPSet</a>, <a>UpdateIPSet</a>,
        <a>CreateSqlInjectionMatchSet</a>, and
        <a>UpdateSqlInjectionMatchSet</a>.</p> </li> <li> <p>Create and update
        the <code>Rules</code> that you want to include in the
        <code>WebACL</code>. For more information, see <a>CreateRule</a> and
        <a>UpdateRule</a>.</p> </li> <li> <p>Create a <code>WebACL</code>. See
        <a>CreateWebACL</a>.</p> </li> <li> <p>Use <code>GetChangeToken</code>
        to get the change token that you provide in the <code>ChangeToken</code>
        parameter of an <a>UpdateWebACL</a> request.</p> </li> <li> <p>Submit an
        <code>UpdateWebACL</code> request to specify the <code>Rules</code> that
        you want to include in the <code>WebACL</code>, to specify the default
        action, and to associate the <code>WebACL</code> with a CloudFront
        distribution. </p> <p>The <code>ActivatedRule</code> can be a rule
        group. If you specify a rule group as your <code>ActivatedRule</code>,
        you can exclude specific rules from that rule group.</p> <p>If you
        already have a rule group associated with a web ACL and want to submit
        an <code>UpdateWebACL</code> request to exclude certain rules from that
        rule group, you must first remove the rule group from the web ACL, the
        re-insert it again, specifying the excluded rules. For details, see
        <a>ActivatedRule$ExcludedRules</a>. </p> </li> </ol> <p>Be aware that if
        you try to add a RATE_BASED rule to a web ACL without setting the rule
        type when first creating the rule, the <a>UpdateWebACL</a> request will
        fail because the request tries to add a REGULAR rule (the default rule
        type) with the specified ID, which does not exist. </p> <p>For more
        information about how to use the AWS WAF API to allow or block HTTP
        requests, see the <a
        href="https://docs.aws.amazon.com/waf/latest/developerguide/">AWS WAF
        Developer Guide</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateWebACLResponse"
        "480":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "481":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "482":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "483":
          description: WAFInvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidOperationException"
        "484":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
        "485":
          description: WAFNonexistentContainerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentContainerException"
        "486":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "487":
          description: WAFReferencedItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFReferencedItemException"
        "488":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
        "489":
          description: WAFSubscriptionNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFSubscriptionNotFoundException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.UpdateWebACL
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateWebACLRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSWAF_20150824.UpdateXssMatchSet:
    post:
      operationId: UpdateXssMatchSet
      description: "<p>Inserts or deletes <a>XssMatchTuple</a> objects (filters) in an
        <a>XssMatchSet</a>. For each <code>XssMatchTuple</code> object, you
        specify the following values:</p> <ul> <li> <p> <code>Action</code>:
        Whether to insert the object into or delete the object from the array.
        To change an <code>XssMatchTuple</code>, you delete the existing object
        and add a new one.</p> </li> <li> <p> <code>FieldToMatch</code>: The
        part of web requests that you want AWS WAF to inspect and, if you want
        AWS WAF to inspect a header or custom query parameter, the name of the
        header or parameter.</p> </li> <li> <p> <code>TextTransformation</code>:
        Which text transformation, if any, to perform on the web request before
        inspecting the request for cross-site scripting attacks.</p> <p>You can
        only specify a single type of TextTransformation.</p> </li> </ul> <p>You
        use <code>XssMatchSet</code> objects to specify which CloudFront
        requests that you want to allow, block, or count. For example, if you're
        receiving requests that contain cross-site scripting attacks in the
        request body and you want to block the requests, you can create an
        <code>XssMatchSet</code> with the applicable settings, and then
        configure AWS WAF to block the requests. </p> <p>To create and configure
        an <code>XssMatchSet</code>, perform the following steps:</p> <ol> <li>
        <p>Submit a <a>CreateXssMatchSet</a> request.</p> </li> <li> <p>Use
        <a>GetChangeToken</a> to get the change token that you provide in the
        <code>ChangeToken</code> parameter of an <a>UpdateIPSet</a> request.</p>
        </li> <li> <p>Submit an <code>UpdateXssMatchSet</code> request to
        specify the parts of web requests that you want AWS WAF to inspect for
        cross-site scripting attacks.</p> </li> </ol> <p>For more information
        about how to use the AWS WAF API to allow or block HTTP requests, see
        the <a
        href=\"https://docs.aws.amazon.com/waf/latest/developerguide/\">AWS WAF
        Developer Guide</a>.</p>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateXssMatchSetResponse"
        "480":
          description: WAFInternalErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInternalErrorException"
        "481":
          description: WAFInvalidAccountException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidAccountException"
        "482":
          description: WAFInvalidOperationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidOperationException"
        "483":
          description: WAFInvalidParameterException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFInvalidParameterException"
        "484":
          description: WAFNonexistentContainerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentContainerException"
        "485":
          description: WAFNonexistentItemException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFNonexistentItemException"
        "486":
          description: WAFStaleDataException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFStaleDataException"
        "487":
          description: WAFLimitsExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WAFLimitsExceededException"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSWAF_20150824.UpdateXssMatchSet
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateXssMatchSetRequest"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: https://waf.amazonaws.com
    variables: {}
    description: The general WAF multi-region endpoint
  - url: http://waf.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The WAF endpoint for China (Beijing) and China (Ningxia)
  - url: https://waf.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The WAF endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateByteMatchSetResponse:
      type: object
      properties:
        ByteMatchSet:
          $ref: "#/components/schemas/ByteMatchSet"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    CreateByteMatchSetRequest:
      type: object
      required:
        - Name
        - ChangeToken
      properties:
        Name:
          $ref: "#/components/schemas/ResourceName"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    WAFDisallowedNameException: {}
    WAFInternalErrorException: {}
    WAFInvalidAccountException: {}
    WAFInvalidParameterException: {}
    WAFStaleDataException: {}
    WAFLimitsExceededException: {}
    CreateGeoMatchSetResponse:
      type: object
      properties:
        GeoMatchSet:
          $ref: "#/components/schemas/GeoMatchSet"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    CreateGeoMatchSetRequest:
      type: object
      required:
        - Name
        - ChangeToken
      properties:
        Name:
          $ref: "#/components/schemas/ResourceName"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    CreateIPSetResponse:
      type: object
      example:
        ChangeToken: abcd12f2-46da-4fdb-b8d5-fbd4c466928f
        IPSet:
          IPSetDescriptors:
            - Type: IPV4
              Value: 192.0.2.44/32
          IPSetId: example1ds3t-46da-4fdb-b8d5-abc321j569j5
          Name: MyIPSetFriendlyName
      properties:
        IPSet:
          $ref: "#/components/schemas/IPSet"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    CreateIPSetRequest:
      type: object
      required:
        - Name
        - ChangeToken
      properties:
        Name:
          $ref: "#/components/schemas/ResourceName"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    CreateRateBasedRuleResponse:
      type: object
      properties:
        Rule:
          $ref: "#/components/schemas/RateBasedRule"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    CreateRateBasedRuleRequest:
      type: object
      required:
        - Name
        - MetricName
        - RateKey
        - RateLimit
        - ChangeToken
      properties:
        Name:
          $ref: "#/components/schemas/ResourceName"
        MetricName:
          $ref: "#/components/schemas/MetricName"
        RateKey:
          $ref: "#/components/schemas/RateKey"
        RateLimit:
          $ref: "#/components/schemas/RateLimit"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
        Tags:
          $ref: "#/components/schemas/TagList"
    WAFTagOperationException: {}
    WAFTagOperationInternalErrorException: {}
    WAFBadRequestException: {}
    CreateRegexMatchSetResponse:
      type: object
      properties:
        RegexMatchSet:
          $ref: "#/components/schemas/RegexMatchSet"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    CreateRegexMatchSetRequest:
      type: object
      required:
        - Name
        - ChangeToken
      properties:
        Name:
          $ref: "#/components/schemas/ResourceName"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    CreateRegexPatternSetResponse:
      type: object
      properties:
        RegexPatternSet:
          $ref: "#/components/schemas/RegexPatternSet"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    CreateRegexPatternSetRequest:
      type: object
      required:
        - Name
        - ChangeToken
      properties:
        Name:
          $ref: "#/components/schemas/ResourceName"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    CreateRuleResponse:
      type: object
      example:
        ChangeToken: abcd12f2-46da-4fdb-b8d5-fbd4c466928f
        Rule:
          MetricName: WAFByteHeaderRule
          Name: WAFByteHeaderRule
          Predicates:
            - DataId: MyByteMatchSetID
              Negated: false
              Type: ByteMatch
          RuleId: WAFRule-1-Example
      properties:
        Rule:
          $ref: "#/components/schemas/Rule"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    CreateRuleRequest:
      type: object
      required:
        - Name
        - MetricName
        - ChangeToken
      properties:
        Name:
          $ref: "#/components/schemas/ResourceName"
        MetricName:
          $ref: "#/components/schemas/MetricName"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
        Tags:
          $ref: "#/components/schemas/TagList"
    CreateRuleGroupResponse:
      type: object
      properties:
        RuleGroup:
          $ref: "#/components/schemas/RuleGroup"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    CreateRuleGroupRequest:
      type: object
      required:
        - Name
        - MetricName
        - ChangeToken
      properties:
        Name:
          $ref: "#/components/schemas/ResourceName"
        MetricName:
          $ref: "#/components/schemas/MetricName"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
        Tags:
          $ref: "#/components/schemas/TagList"
    CreateSizeConstraintSetResponse:
      type: object
      example:
        ChangeToken: abcd12f2-46da-4fdb-b8d5-fbd4c466928f
        SizeConstraintSet:
          Name: MySampleSizeConstraintSet
          SizeConstraintSetId: example1ds3t-46da-4fdb-b8d5-abc321j569j5
          SizeConstraints:
            - ComparisonOperator: GT
              FieldToMatch:
                Type: QUERY_STRING
              Size: 0
              TextTransformation: NONE
      properties:
        SizeConstraintSet:
          $ref: "#/components/schemas/SizeConstraintSet"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    CreateSizeConstraintSetRequest:
      type: object
      required:
        - Name
        - ChangeToken
      properties:
        Name:
          $ref: "#/components/schemas/ResourceName"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    CreateSqlInjectionMatchSetResponse:
      type: object
      example:
        ChangeToken: abcd12f2-46da-4fdb-b8d5-fbd4c466928f
        SqlInjectionMatchSet:
          Name: MySQLInjectionMatchSet
          SqlInjectionMatchSetId: example1ds3t-46da-4fdb-b8d5-abc321j569j5
          SqlInjectionMatchTuples:
            - FieldToMatch:
                Type: QUERY_STRING
              TextTransformation: URL_DECODE
      properties:
        SqlInjectionMatchSet:
          $ref: "#/components/schemas/SqlInjectionMatchSet"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
      description: The response to a <code>CreateSqlInjectionMatchSet</code> request.
    CreateSqlInjectionMatchSetRequest:
      type: object
      required:
        - Name
        - ChangeToken
      properties:
        Name:
          $ref: "#/components/schemas/ResourceName"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
      description: A request to create a <a>SqlInjectionMatchSet</a>.
    CreateWebACLResponse:
      type: object
      example:
        ChangeToken: abcd12f2-46da-4fdb-b8d5-fbd4c466928f
        WebACL:
          DefaultAction:
            Type: ALLOW
          MetricName: CreateExample
          Name: CreateExample
          Rules:
            - Action:
                Type: ALLOW
              Priority: 1
              RuleId: WAFRule-1-Example
          WebACLId: example-46da-4444-5555-example
      properties:
        WebACL:
          $ref: "#/components/schemas/WebACL"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    CreateWebACLRequest:
      type: object
      required:
        - Name
        - MetricName
        - DefaultAction
        - ChangeToken
      properties:
        Name:
          $ref: "#/components/schemas/ResourceName"
        MetricName:
          $ref: "#/components/schemas/MetricName"
        DefaultAction:
          $ref: "#/components/schemas/WafAction"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
        Tags:
          $ref: "#/components/schemas/TagList"
    CreateXssMatchSetResponse:
      type: object
      example:
        ChangeToken: abcd12f2-46da-4fdb-b8d5-fbd4c466928f
        XssMatchSet:
          Name: MySampleXssMatchSet
          XssMatchSetId: example1ds3t-46da-4fdb-b8d5-abc321j569j5
          XssMatchTuples:
            - FieldToMatch:
                Type: QUERY_STRING
              TextTransformation: URL_DECODE
      properties:
        XssMatchSet:
          $ref: "#/components/schemas/XssMatchSet"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
      description: The response to a <code>CreateXssMatchSet</code> request.
    CreateXssMatchSetRequest:
      type: object
      required:
        - Name
        - ChangeToken
      properties:
        Name:
          $ref: "#/components/schemas/ResourceName"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
      description: A request to create an <a>XssMatchSet</a>.
    DeleteByteMatchSetResponse:
      type: object
      example:
        ChangeToken: abcd12f2-46da-4fdb-b8d5-fbd4c466928f
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    DeleteByteMatchSetRequest:
      type: object
      required:
        - ByteMatchSetId
        - ChangeToken
      properties:
        ByteMatchSetId:
          $ref: "#/components/schemas/ResourceId"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    WAFNonexistentItemException: {}
    WAFReferencedItemException: {}
    WAFNonEmptyEntityException: {}
    DeleteGeoMatchSetResponse:
      type: object
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    DeleteGeoMatchSetRequest:
      type: object
      required:
        - GeoMatchSetId
        - ChangeToken
      properties:
        GeoMatchSetId:
          $ref: "#/components/schemas/ResourceId"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    DeleteIPSetResponse:
      type: object
      example:
        ChangeToken: abcd12f2-46da-4fdb-b8d5-fbd4c466928f
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    DeleteIPSetRequest:
      type: object
      required:
        - IPSetId
        - ChangeToken
      properties:
        IPSetId:
          $ref: "#/components/schemas/ResourceId"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    DeleteLoggingConfigurationResponse:
      type: object
      properties: {}
    DeleteLoggingConfigurationRequest:
      type: object
      required:
        - ResourceArn
      properties:
        ResourceArn:
          $ref: "#/components/schemas/ResourceArn"
    DeletePermissionPolicyResponse:
      type: object
      properties: {}
    DeletePermissionPolicyRequest:
      type: object
      required:
        - ResourceArn
      properties:
        ResourceArn:
          $ref: "#/components/schemas/ResourceArn"
    DeleteRateBasedRuleResponse:
      type: object
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    DeleteRateBasedRuleRequest:
      type: object
      required:
        - RuleId
        - ChangeToken
      properties:
        RuleId:
          $ref: "#/components/schemas/ResourceId"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    DeleteRegexMatchSetResponse:
      type: object
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    DeleteRegexMatchSetRequest:
      type: object
      required:
        - RegexMatchSetId
        - ChangeToken
      properties:
        RegexMatchSetId:
          $ref: "#/components/schemas/ResourceId"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    DeleteRegexPatternSetResponse:
      type: object
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    DeleteRegexPatternSetRequest:
      type: object
      required:
        - RegexPatternSetId
        - ChangeToken
      properties:
        RegexPatternSetId:
          $ref: "#/components/schemas/ResourceId"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    DeleteRuleResponse:
      type: object
      example:
        ChangeToken: abcd12f2-46da-4fdb-b8d5-fbd4c466928f
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    DeleteRuleRequest:
      type: object
      required:
        - RuleId
        - ChangeToken
      properties:
        RuleId:
          $ref: "#/components/schemas/ResourceId"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    DeleteRuleGroupResponse:
      type: object
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    DeleteRuleGroupRequest:
      type: object
      required:
        - RuleGroupId
        - ChangeToken
      properties:
        RuleGroupId:
          $ref: "#/components/schemas/ResourceId"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    WAFInvalidOperationException: {}
    DeleteSizeConstraintSetResponse:
      type: object
      example:
        ChangeToken: abcd12f2-46da-4fdb-b8d5-fbd4c466928f
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    DeleteSizeConstraintSetRequest:
      type: object
      required:
        - SizeConstraintSetId
        - ChangeToken
      properties:
        SizeConstraintSetId:
          $ref: "#/components/schemas/ResourceId"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    DeleteSqlInjectionMatchSetResponse:
      type: object
      example:
        ChangeToken: abcd12f2-46da-4fdb-b8d5-fbd4c466928f
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
      description: The response to a request to delete a <a>SqlInjectionMatchSet</a> from
        AWS WAF.
    DeleteSqlInjectionMatchSetRequest:
      type: object
      required:
        - SqlInjectionMatchSetId
        - ChangeToken
      properties:
        SqlInjectionMatchSetId:
          $ref: "#/components/schemas/ResourceId"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
      description: A request to delete a <a>SqlInjectionMatchSet</a> from AWS WAF.
    DeleteWebACLResponse:
      type: object
      example:
        ChangeToken: abcd12f2-46da-4fdb-b8d5-fbd4c466928f
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    DeleteWebACLRequest:
      type: object
      required:
        - WebACLId
        - ChangeToken
      properties:
        WebACLId:
          $ref: "#/components/schemas/ResourceId"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    DeleteXssMatchSetResponse:
      type: object
      example:
        ChangeToken: abcd12f2-46da-4fdb-b8d5-fbd4c466928f
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
      description: The response to a request to delete an <a>XssMatchSet</a> from AWS WAF.
    DeleteXssMatchSetRequest:
      type: object
      required:
        - XssMatchSetId
        - ChangeToken
      properties:
        XssMatchSetId:
          $ref: "#/components/schemas/ResourceId"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
      description: A request to delete an <a>XssMatchSet</a> from AWS WAF.
    GetByteMatchSetResponse:
      type: object
      example:
        ByteMatchSet:
          ByteMatchSetId: exampleIDs3t-46da-4fdb-b8d5-abc321j569j5
          ByteMatchTuples:
            - FieldToMatch:
                Data: referer
                Type: HEADER
              PositionalConstraint: CONTAINS
              TargetString: badrefer1
              TextTransformation: NONE
          Name: ByteMatchNameExample
      properties:
        ByteMatchSet:
          $ref: "#/components/schemas/ByteMatchSet"
    GetByteMatchSetRequest:
      type: object
      required:
        - ByteMatchSetId
      properties:
        ByteMatchSetId:
          $ref: "#/components/schemas/ResourceId"
    GetChangeTokenResponse:
      type: object
      example:
        ChangeToken: abcd12f2-46da-4fdb-b8d5-fbd4c466928f
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    GetChangeTokenRequest:
      type: object
      properties: {}
    GetChangeTokenStatusResponse:
      type: object
      example:
        ChangeTokenStatus: PENDING
      properties:
        ChangeTokenStatus:
          $ref: "#/components/schemas/ChangeTokenStatus"
    GetChangeTokenStatusRequest:
      type: object
      required:
        - ChangeToken
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    GetGeoMatchSetResponse:
      type: object
      properties:
        GeoMatchSet:
          $ref: "#/components/schemas/GeoMatchSet"
    GetGeoMatchSetRequest:
      type: object
      required:
        - GeoMatchSetId
      properties:
        GeoMatchSetId:
          $ref: "#/components/schemas/ResourceId"
    GetIPSetResponse:
      type: object
      example:
        IPSet:
          IPSetDescriptors:
            - Type: IPV4
              Value: 192.0.2.44/32
          IPSetId: example1ds3t-46da-4fdb-b8d5-abc321j569j5
          Name: MyIPSetFriendlyName
      properties:
        IPSet:
          $ref: "#/components/schemas/IPSet"
    GetIPSetRequest:
      type: object
      required:
        - IPSetId
      properties:
        IPSetId:
          $ref: "#/components/schemas/ResourceId"
    GetLoggingConfigurationResponse:
      type: object
      properties:
        LoggingConfiguration:
          $ref: "#/components/schemas/LoggingConfiguration"
    GetLoggingConfigurationRequest:
      type: object
      required:
        - ResourceArn
      properties:
        ResourceArn:
          $ref: "#/components/schemas/ResourceArn"
    GetPermissionPolicyResponse:
      type: object
      properties:
        Policy:
          $ref: "#/components/schemas/PolicyString"
    GetPermissionPolicyRequest:
      type: object
      required:
        - ResourceArn
      properties:
        ResourceArn:
          $ref: "#/components/schemas/ResourceArn"
    GetRateBasedRuleResponse:
      type: object
      properties:
        Rule:
          $ref: "#/components/schemas/RateBasedRule"
    GetRateBasedRuleRequest:
      type: object
      required:
        - RuleId
      properties:
        RuleId:
          $ref: "#/components/schemas/ResourceId"
    GetRateBasedRuleManagedKeysResponse:
      type: object
      properties:
        ManagedKeys:
          $ref: "#/components/schemas/ManagedKeys"
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
    GetRateBasedRuleManagedKeysRequest:
      type: object
      required:
        - RuleId
      properties:
        RuleId:
          $ref: "#/components/schemas/ResourceId"
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
    GetRegexMatchSetResponse:
      type: object
      properties:
        RegexMatchSet:
          $ref: "#/components/schemas/RegexMatchSet"
    GetRegexMatchSetRequest:
      type: object
      required:
        - RegexMatchSetId
      properties:
        RegexMatchSetId:
          $ref: "#/components/schemas/ResourceId"
    GetRegexPatternSetResponse:
      type: object
      properties:
        RegexPatternSet:
          $ref: "#/components/schemas/RegexPatternSet"
    GetRegexPatternSetRequest:
      type: object
      required:
        - RegexPatternSetId
      properties:
        RegexPatternSetId:
          $ref: "#/components/schemas/ResourceId"
    GetRuleResponse:
      type: object
      example:
        Rule:
          MetricName: WAFByteHeaderRule
          Name: WAFByteHeaderRule
          Predicates:
            - DataId: MyByteMatchSetID
              Negated: false
              Type: ByteMatch
          RuleId: example1ds3t-46da-4fdb-b8d5-abc321j569j5
      properties:
        Rule:
          $ref: "#/components/schemas/Rule"
    GetRuleRequest:
      type: object
      required:
        - RuleId
      properties:
        RuleId:
          $ref: "#/components/schemas/ResourceId"
    GetRuleGroupResponse:
      type: object
      properties:
        RuleGroup:
          $ref: "#/components/schemas/RuleGroup"
    GetRuleGroupRequest:
      type: object
      required:
        - RuleGroupId
      properties:
        RuleGroupId:
          $ref: "#/components/schemas/ResourceId"
    GetSampledRequestsResponse:
      type: object
      example:
        PopulationSize: 50
        SampledRequests:
          - Action: BLOCK
            Request:
              ClientIP: 192.0.2.44
              Country: US
              HTTPVersion: HTTP/1.1
              Headers:
                - Name: User-Agent
                  Value: "BadBot "
              Method: HEAD
            Timestamp: 2016-09-27T14:55Z
            Weight: 1
        TimeWindow:
          EndTime: 2016-09-27T15:50Z
          StartTime: 2016-09-27T14:50Z
      properties:
        SampledRequests:
          $ref: "#/components/schemas/SampledHTTPRequests"
        PopulationSize:
          $ref: "#/components/schemas/PopulationSize"
        TimeWindow:
          $ref: "#/components/schemas/TimeWindow"
    GetSampledRequestsRequest:
      type: object
      required:
        - WebAclId
        - RuleId
        - TimeWindow
        - MaxItems
      properties:
        WebAclId:
          $ref: "#/components/schemas/ResourceId"
        RuleId:
          $ref: "#/components/schemas/ResourceId"
        TimeWindow:
          $ref: "#/components/schemas/TimeWindow"
        MaxItems:
          $ref: "#/components/schemas/GetSampledRequestsMaxItems"
    GetSizeConstraintSetResponse:
      type: object
      example:
        SizeConstraintSet:
          Name: MySampleSizeConstraintSet
          SizeConstraintSetId: example1ds3t-46da-4fdb-b8d5-abc321j569j5
          SizeConstraints:
            - ComparisonOperator: GT
              FieldToMatch:
                Type: QUERY_STRING
              Size: 0
              TextTransformation: NONE
      properties:
        SizeConstraintSet:
          $ref: "#/components/schemas/SizeConstraintSet"
    GetSizeConstraintSetRequest:
      type: object
      required:
        - SizeConstraintSetId
      properties:
        SizeConstraintSetId:
          $ref: "#/components/schemas/ResourceId"
    GetSqlInjectionMatchSetResponse:
      type: object
      example:
        SqlInjectionMatchSet:
          Name: MySQLInjectionMatchSet
          SqlInjectionMatchSetId: example1ds3t-46da-4fdb-b8d5-abc321j569j5
          SqlInjectionMatchTuples:
            - FieldToMatch:
                Type: QUERY_STRING
              TextTransformation: URL_DECODE
      properties:
        SqlInjectionMatchSet:
          $ref: "#/components/schemas/SqlInjectionMatchSet"
      description: The response to a <a>GetSqlInjectionMatchSet</a> request.
    GetSqlInjectionMatchSetRequest:
      type: object
      required:
        - SqlInjectionMatchSetId
      properties:
        SqlInjectionMatchSetId:
          $ref: "#/components/schemas/ResourceId"
      description: A request to get a <a>SqlInjectionMatchSet</a>.
    GetWebACLResponse:
      type: object
      example:
        WebACL:
          DefaultAction:
            Type: ALLOW
          MetricName: CreateExample
          Name: CreateExample
          Rules:
            - Action:
                Type: ALLOW
              Priority: 1
              RuleId: WAFRule-1-Example
          WebACLId: createwebacl-1472061481310
      properties:
        WebACL:
          $ref: "#/components/schemas/WebACL"
    GetWebACLRequest:
      type: object
      required:
        - WebACLId
      properties:
        WebACLId:
          $ref: "#/components/schemas/ResourceId"
    GetXssMatchSetResponse:
      type: object
      example:
        XssMatchSet:
          Name: MySampleXssMatchSet
          XssMatchSetId: example1ds3t-46da-4fdb-b8d5-abc321j569j5
          XssMatchTuples:
            - FieldToMatch:
                Type: QUERY_STRING
              TextTransformation: URL_DECODE
      properties:
        XssMatchSet:
          $ref: "#/components/schemas/XssMatchSet"
      description: The response to a <a>GetXssMatchSet</a> request.
    GetXssMatchSetRequest:
      type: object
      required:
        - XssMatchSetId
      properties:
        XssMatchSetId:
          $ref: "#/components/schemas/ResourceId"
      description: A request to get an <a>XssMatchSet</a>.
    ListActivatedRulesInRuleGroupResponse:
      type: object
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        ActivatedRules:
          $ref: "#/components/schemas/ActivatedRules"
    ListActivatedRulesInRuleGroupRequest:
      type: object
      properties:
        RuleGroupId:
          $ref: "#/components/schemas/ResourceId"
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        Limit:
          $ref: "#/components/schemas/PaginationLimit"
    ListByteMatchSetsResponse:
      type: object
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        ByteMatchSets:
          $ref: "#/components/schemas/ByteMatchSetSummaries"
    ListByteMatchSetsRequest:
      type: object
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        Limit:
          $ref: "#/components/schemas/PaginationLimit"
    ListGeoMatchSetsResponse:
      type: object
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        GeoMatchSets:
          $ref: "#/components/schemas/GeoMatchSetSummaries"
    ListGeoMatchSetsRequest:
      type: object
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        Limit:
          $ref: "#/components/schemas/PaginationLimit"
    ListIPSetsResponse:
      type: object
      example:
        IPSets:
          - IPSetId: abcd12f2-46da-4fdb-b8d5-fbd4c466928f
            Name: MyIPSetFriendlyName
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        IPSets:
          $ref: "#/components/schemas/IPSetSummaries"
    ListIPSetsRequest:
      type: object
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        Limit:
          $ref: "#/components/schemas/PaginationLimit"
    ListLoggingConfigurationsResponse:
      type: object
      properties:
        LoggingConfigurations:
          $ref: "#/components/schemas/LoggingConfigurations"
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
    ListLoggingConfigurationsRequest:
      type: object
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        Limit:
          $ref: "#/components/schemas/PaginationLimit"
    ListRateBasedRulesResponse:
      type: object
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        Rules:
          $ref: "#/components/schemas/RuleSummaries"
    ListRateBasedRulesRequest:
      type: object
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        Limit:
          $ref: "#/components/schemas/PaginationLimit"
    ListRegexMatchSetsResponse:
      type: object
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        RegexMatchSets:
          $ref: "#/components/schemas/RegexMatchSetSummaries"
    ListRegexMatchSetsRequest:
      type: object
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        Limit:
          $ref: "#/components/schemas/PaginationLimit"
    ListRegexPatternSetsResponse:
      type: object
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        RegexPatternSets:
          $ref: "#/components/schemas/RegexPatternSetSummaries"
    ListRegexPatternSetsRequest:
      type: object
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        Limit:
          $ref: "#/components/schemas/PaginationLimit"
    ListRuleGroupsResponse:
      type: object
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        RuleGroups:
          $ref: "#/components/schemas/RuleGroupSummaries"
    ListRuleGroupsRequest:
      type: object
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        Limit:
          $ref: "#/components/schemas/PaginationLimit"
    ListRulesResponse:
      type: object
      example:
        Rules:
          - Name: WAFByteHeaderRule
            RuleId: WAFRule-1-Example
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        Rules:
          $ref: "#/components/schemas/RuleSummaries"
    ListRulesRequest:
      type: object
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        Limit:
          $ref: "#/components/schemas/PaginationLimit"
    ListSizeConstraintSetsResponse:
      type: object
      example:
        SizeConstraintSets:
          - Name: MySampleSizeConstraintSet
            SizeConstraintSetId: example1ds3t-46da-4fdb-b8d5-abc321j569j5
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        SizeConstraintSets:
          $ref: "#/components/schemas/SizeConstraintSetSummaries"
    ListSizeConstraintSetsRequest:
      type: object
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        Limit:
          $ref: "#/components/schemas/PaginationLimit"
    ListSqlInjectionMatchSetsResponse:
      type: object
      example:
        SqlInjectionMatchSets:
          - Name: MySQLInjectionMatchSet
            SqlInjectionMatchSetId: example1ds3t-46da-4fdb-b8d5-abc321j569j5
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        SqlInjectionMatchSets:
          $ref: "#/components/schemas/SqlInjectionMatchSetSummaries"
      description: The response to a <a>ListSqlInjectionMatchSets</a> request.
    ListSqlInjectionMatchSetsRequest:
      type: object
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        Limit:
          $ref: "#/components/schemas/PaginationLimit"
      description: A request to list the <a>SqlInjectionMatchSet</a> objects created by the
        current AWS account.
    ListSubscribedRuleGroupsResponse:
      type: object
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        RuleGroups:
          $ref: "#/components/schemas/SubscribedRuleGroupSummaries"
    ListSubscribedRuleGroupsRequest:
      type: object
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        Limit:
          $ref: "#/components/schemas/PaginationLimit"
    ListTagsForResourceResponse:
      type: object
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        TagInfoForResource:
          $ref: "#/components/schemas/TagInfoForResource"
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceARN
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        Limit:
          $ref: "#/components/schemas/PaginationLimit"
        ResourceARN:
          $ref: "#/components/schemas/ResourceArn"
    ListWebACLsResponse:
      type: object
      example:
        WebACLs:
          - Name: WebACLexample
            WebACLId: webacl-1472061481310
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        WebACLs:
          $ref: "#/components/schemas/WebACLSummaries"
    ListWebACLsRequest:
      type: object
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        Limit:
          $ref: "#/components/schemas/PaginationLimit"
    ListXssMatchSetsResponse:
      type: object
      example:
        XssMatchSets:
          - Name: MySampleXssMatchSet
            XssMatchSetId: example1ds3t-46da-4fdb-b8d5-abc321j569j5
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        XssMatchSets:
          $ref: "#/components/schemas/XssMatchSetSummaries"
      description: The response to a <a>ListXssMatchSets</a> request.
    ListXssMatchSetsRequest:
      type: object
      properties:
        NextMarker:
          $ref: "#/components/schemas/NextMarker"
        Limit:
          $ref: "#/components/schemas/PaginationLimit"
      description: A request to list the <a>XssMatchSet</a> objects created by the current
        AWS account.
    PutLoggingConfigurationResponse:
      type: object
      properties:
        LoggingConfiguration:
          $ref: "#/components/schemas/LoggingConfiguration"
    PutLoggingConfigurationRequest:
      type: object
      required:
        - LoggingConfiguration
      properties:
        LoggingConfiguration:
          $ref: "#/components/schemas/LoggingConfiguration"
    WAFServiceLinkedRoleErrorException: {}
    PutPermissionPolicyResponse:
      type: object
      properties: {}
    PutPermissionPolicyRequest:
      type: object
      required:
        - ResourceArn
        - Policy
      properties:
        ResourceArn:
          $ref: "#/components/schemas/ResourceArn"
        Policy:
          $ref: "#/components/schemas/PolicyString"
    WAFInvalidPermissionPolicyException: {}
    TagResourceResponse:
      type: object
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - ResourceARN
        - Tags
      properties:
        ResourceARN:
          $ref: "#/components/schemas/ResourceArn"
        Tags:
          $ref: "#/components/schemas/TagList"
    UntagResourceResponse:
      type: object
      properties: {}
    UntagResourceRequest:
      type: object
      required:
        - ResourceARN
        - TagKeys
      properties:
        ResourceARN:
          $ref: "#/components/schemas/ResourceArn"
        TagKeys:
          $ref: "#/components/schemas/TagKeyList"
    UpdateByteMatchSetResponse:
      type: object
      example:
        ChangeToken: abcd12f2-46da-4fdb-b8d5-fbd4c466928f
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    UpdateByteMatchSetRequest:
      type: object
      required:
        - ByteMatchSetId
        - ChangeToken
        - Updates
      properties:
        ByteMatchSetId:
          $ref: "#/components/schemas/ResourceId"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
        Updates:
          $ref: "#/components/schemas/ByteMatchSetUpdates"
    WAFNonexistentContainerException: {}
    UpdateGeoMatchSetResponse:
      type: object
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    UpdateGeoMatchSetRequest:
      type: object
      required:
        - GeoMatchSetId
        - ChangeToken
        - Updates
      properties:
        GeoMatchSetId:
          $ref: "#/components/schemas/ResourceId"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
        Updates:
          $ref: "#/components/schemas/GeoMatchSetUpdates"
    UpdateIPSetResponse:
      type: object
      example:
        ChangeToken: abcd12f2-46da-4fdb-b8d5-fbd4c466928f
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    UpdateIPSetRequest:
      type: object
      required:
        - IPSetId
        - ChangeToken
        - Updates
      properties:
        IPSetId:
          $ref: "#/components/schemas/ResourceId"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
        Updates:
          $ref: "#/components/schemas/IPSetUpdates"
    UpdateRateBasedRuleResponse:
      type: object
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    UpdateRateBasedRuleRequest:
      type: object
      required:
        - RuleId
        - ChangeToken
        - Updates
        - RateLimit
      properties:
        RuleId:
          $ref: "#/components/schemas/ResourceId"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
        Updates:
          $ref: "#/components/schemas/RuleUpdates"
        RateLimit:
          $ref: "#/components/schemas/RateLimit"
    UpdateRegexMatchSetResponse:
      type: object
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    UpdateRegexMatchSetRequest:
      type: object
      required:
        - RegexMatchSetId
        - Updates
        - ChangeToken
      properties:
        RegexMatchSetId:
          $ref: "#/components/schemas/ResourceId"
        Updates:
          $ref: "#/components/schemas/RegexMatchSetUpdates"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    UpdateRegexPatternSetResponse:
      type: object
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    UpdateRegexPatternSetRequest:
      type: object
      required:
        - RegexPatternSetId
        - Updates
        - ChangeToken
      properties:
        RegexPatternSetId:
          $ref: "#/components/schemas/ResourceId"
        Updates:
          $ref: "#/components/schemas/RegexPatternSetUpdates"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    WAFInvalidRegexPatternException: {}
    UpdateRuleResponse:
      type: object
      example:
        ChangeToken: abcd12f2-46da-4fdb-b8d5-fbd4c466928f
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    UpdateRuleRequest:
      type: object
      required:
        - RuleId
        - ChangeToken
        - Updates
      properties:
        RuleId:
          $ref: "#/components/schemas/ResourceId"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
        Updates:
          $ref: "#/components/schemas/RuleUpdates"
    UpdateRuleGroupResponse:
      type: object
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    UpdateRuleGroupRequest:
      type: object
      required:
        - RuleGroupId
        - Updates
        - ChangeToken
      properties:
        RuleGroupId:
          $ref: "#/components/schemas/ResourceId"
        Updates:
          $ref: "#/components/schemas/RuleGroupUpdates"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    UpdateSizeConstraintSetResponse:
      type: object
      example:
        ChangeToken: abcd12f2-46da-4fdb-b8d5-fbd4c466928f
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    UpdateSizeConstraintSetRequest:
      type: object
      required:
        - SizeConstraintSetId
        - ChangeToken
        - Updates
      properties:
        SizeConstraintSetId:
          $ref: "#/components/schemas/ResourceId"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
        Updates:
          $ref: "#/components/schemas/SizeConstraintSetUpdates"
    UpdateSqlInjectionMatchSetResponse:
      type: object
      example:
        ChangeToken: abcd12f2-46da-4fdb-b8d5-fbd4c466928f
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
      description: The response to an <a>UpdateSqlInjectionMatchSets</a> request.
    UpdateSqlInjectionMatchSetRequest:
      type: object
      required:
        - SqlInjectionMatchSetId
        - ChangeToken
        - Updates
      properties:
        SqlInjectionMatchSetId:
          $ref: "#/components/schemas/ResourceId"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
        Updates:
          $ref: "#/components/schemas/SqlInjectionMatchSetUpdates"
      description: A request to update a <a>SqlInjectionMatchSet</a>.
    UpdateWebACLResponse:
      type: object
      example:
        ChangeToken: abcd12f2-46da-4fdb-b8d5-fbd4c466928f
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
    UpdateWebACLRequest:
      type: object
      required:
        - WebACLId
        - ChangeToken
      properties:
        WebACLId:
          $ref: "#/components/schemas/ResourceId"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
        Updates:
          $ref: "#/components/schemas/WebACLUpdates"
        DefaultAction:
          $ref: "#/components/schemas/WafAction"
    WAFSubscriptionNotFoundException: {}
    UpdateXssMatchSetResponse:
      type: object
      example:
        ChangeToken: abcd12f2-46da-4fdb-b8d5-fbd4c466928f
      properties:
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
      description: The response to an <a>UpdateXssMatchSets</a> request.
    UpdateXssMatchSetRequest:
      type: object
      required:
        - XssMatchSetId
        - ChangeToken
        - Updates
      properties:
        XssMatchSetId:
          $ref: "#/components/schemas/ResourceId"
        ChangeToken:
          $ref: "#/components/schemas/ChangeToken"
        Updates:
          $ref: "#/components/schemas/XssMatchSetUpdates"
      description: A request to update an <a>XssMatchSet</a>.
    Action:
      type: string
    RulePriority:
      type: integer
    ResourceId:
      type: string
      minLength: 1
      maxLength: 128
    WafAction:
      type: object
      required:
        - Type
      properties:
        Type:
          $ref: "#/components/schemas/WafActionType"
      description: "For the action that is associated with a rule in a <code>WebACL</code>,
        specifies the action that you want AWS WAF to perform when a web request
        matches all of the conditions in a rule. For the default action in a
        <code>WebACL</code>, specifies the action that you want AWS WAF to take
        when a web request doesn't match all of the conditions in any of the
        rules in a <code>WebACL</code>. "
    WafOverrideAction:
      type: object
      required:
        - Type
      properties:
        Type:
          $ref: "#/components/schemas/WafOverrideActionType"
      description: "The action to take if any rule within the <code>RuleGroup</code>
        matches a request. "
    WafRuleType:
      type: string
      enum:
        - REGULAR
        - RATE_BASED
        - GROUP
    ExcludedRules:
      type: array
      items:
        $ref: "#/components/schemas/ExcludedRule"
    ActivatedRule:
      type: object
      required:
        - Priority
        - RuleId
      properties:
        Priority:
          $ref: "#/components/schemas/RulePriority"
        RuleId:
          $ref: "#/components/schemas/ResourceId"
        Action:
          $ref: "#/components/schemas/WafAction"
        OverrideAction:
          $ref: "#/components/schemas/WafOverrideAction"
        Type:
          $ref: "#/components/schemas/WafRuleType"
        ExcludedRules:
          $ref: "#/components/schemas/ExcludedRules"
      description: <p>The <code>ActivatedRule</code> object in an <a>UpdateWebACL</a>
        request specifies a <code>Rule</code> that you want to insert or delete,
        the priority of the <code>Rule</code> in the <code>WebACL</code>, and
        the action that you want AWS WAF to take when a web request matches the
        <code>Rule</code> (<code>ALLOW</code>, <code>BLOCK</code>, or
        <code>COUNT</code>).</p> <p>To specify whether to insert or delete a
        <code>Rule</code>, use the <code>Action</code> parameter in the
        <a>WebACLUpdate</a> data type.</p>
    ActivatedRules:
      type: array
      items:
        $ref: "#/components/schemas/ActivatedRule"
    ResourceName:
      type: string
      minLength: 1
      maxLength: 128
    ByteMatchTuples:
      type: array
      items:
        $ref: "#/components/schemas/ByteMatchTuple"
    ByteMatchSet:
      type: object
      required:
        - ByteMatchSetId
        - ByteMatchTuples
      properties:
        ByteMatchSetId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
        ByteMatchTuples:
          $ref: "#/components/schemas/ByteMatchTuples"
      description: <p>In a <a>GetByteMatchSet</a> request, <code>ByteMatchSet</code> is a
        complex type that contains the <code>ByteMatchSetId</code> and
        <code>Name</code> of a <code>ByteMatchSet</code>, and the values that
        you specified when you updated the <code>ByteMatchSet</code>. </p> <p>A
        complex type that contains <code>ByteMatchTuple</code> objects, which
        specify the parts of web requests that you want AWS WAF to inspect and
        the values that you want AWS WAF to search for. If a
        <code>ByteMatchSet</code> contains more than one
        <code>ByteMatchTuple</code> object, a request needs to match the
        settings in only one <code>ByteMatchTuple</code> to be considered a
        match.</p>
    ByteMatchSetSummary:
      type: object
      required:
        - ByteMatchSetId
        - Name
      properties:
        ByteMatchSetId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
      description: Returned by <a>ListByteMatchSets</a>. Each
        <code>ByteMatchSetSummary</code> object includes the <code>Name</code>
        and <code>ByteMatchSetId</code> for one <a>ByteMatchSet</a>.
    ByteMatchSetSummaries:
      type: array
      items:
        $ref: "#/components/schemas/ByteMatchSetSummary"
    ChangeAction:
      type: string
      enum:
        - INSERT
        - DELETE
    ByteMatchTuple:
      type: object
      required:
        - FieldToMatch
        - TargetString
        - TextTransformation
        - PositionalConstraint
      properties:
        FieldToMatch:
          $ref: "#/components/schemas/FieldToMatch"
        TargetString:
          $ref: "#/components/schemas/ByteMatchTargetString"
        TextTransformation:
          $ref: "#/components/schemas/TextTransformation"
        PositionalConstraint:
          $ref: "#/components/schemas/PositionalConstraint"
      description: The bytes (typically a string that corresponds with ASCII characters)
        that you want AWS WAF to search for in web requests, the location in
        requests that you want AWS WAF to search, and other settings.
    ByteMatchSetUpdate:
      type: object
      required:
        - Action
        - ByteMatchTuple
      properties:
        Action:
          $ref: "#/components/schemas/ChangeAction"
        ByteMatchTuple:
          $ref: "#/components/schemas/ByteMatchTuple"
      description: In an <a>UpdateByteMatchSet</a> request, <code>ByteMatchSetUpdate</code>
        specifies whether to insert or delete a <a>ByteMatchTuple</a> and
        includes the settings for the <code>ByteMatchTuple</code>.
    ByteMatchSetUpdates:
      type: array
      items:
        $ref: "#/components/schemas/ByteMatchSetUpdate"
      minItems: 1
    ByteMatchTargetString:
      type: string
    FieldToMatch:
      type: object
      required:
        - Type
      properties:
        Type:
          $ref: "#/components/schemas/MatchFieldType"
        Data:
          $ref: "#/components/schemas/MatchFieldData"
      description: Specifies where in a web request to look for <code>TargetString</code>.
    TextTransformation:
      type: string
      enum:
        - NONE
        - COMPRESS_WHITE_SPACE
        - HTML_ENTITY_DECODE
        - LOWERCASE
        - CMD_LINE
        - URL_DECODE
    PositionalConstraint:
      type: string
      enum:
        - EXACTLY
        - STARTS_WITH
        - ENDS_WITH
        - CONTAINS
        - CONTAINS_WORD
    ChangeToken:
      type: string
      minLength: 1
    ChangeTokenStatus:
      type: string
      enum:
        - PROVISIONED
        - PENDING
        - INSYNC
    ComparisonOperator:
      type: string
      enum:
        - EQ
        - NE
        - LE
        - LT
        - GE
        - GT
    Country:
      type: string
    GeoMatchSet:
      type: object
      required:
        - GeoMatchSetId
        - GeoMatchConstraints
      properties:
        GeoMatchSetId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
        GeoMatchConstraints:
          $ref: "#/components/schemas/GeoMatchConstraints"
      description: Contains one or more countries that AWS WAF will search for.
    IPSet:
      type: object
      required:
        - IPSetId
        - IPSetDescriptors
      properties:
        IPSetId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
        IPSetDescriptors:
          $ref: "#/components/schemas/IPSetDescriptors"
      description: '<p>Contains one or more IP addresses or blocks of IP addresses
        specified in Classless Inter-Domain Routing (CIDR) notation. AWS WAF
        supports IPv4 address ranges: /8 and any range between /16 through /32.
        AWS WAF supports IPv6 address ranges: /24, /32, /48, /56, /64, and
        /128.</p> <p>To specify an individual IP address, you specify the
        four-part IP address followed by a <code>/32</code>, for example,
        192.0.2.0/32. To block a range of IP addresses, you can specify /8 or
        any range between /16 through /32 (for IPv4) or /24, /32, /48, /56, /64,
        or /128 (for IPv6). For more information about CIDR notation, see the
        Wikipedia entry <a
        href="https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing">Classless
        Inter-Domain Routing</a>. </p>'
    MetricName:
      type: string
    RateKey:
      type: string
      enum:
        - IP
    RateLimit:
      type: integer
      minimum: 100
      maximum: 2000000000
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
      minItems: 1
    RateBasedRule:
      type: object
      required:
        - RuleId
        - MatchPredicates
        - RateKey
        - RateLimit
      properties:
        RuleId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
        MetricName:
          $ref: "#/components/schemas/MetricName"
        MatchPredicates:
          $ref: "#/components/schemas/Predicates"
        RateKey:
          $ref: "#/components/schemas/RateKey"
        RateLimit:
          $ref: "#/components/schemas/RateLimit"
      description: "<p>A <code>RateBasedRule</code> is identical to a regular <a>Rule</a>,
        with one addition: a <code>RateBasedRule</code> counts the number of
        requests that arrive from a specified IP address every five minutes. For
        example, based on recent requests that you've seen from an attacker, you
        might create a <code>RateBasedRule</code> that includes the following
        conditions: </p> <ul> <li> <p>The requests come from 192.0.2.44.</p>
        </li> <li> <p>They contain the value <code>BadBot</code> in the
        <code>User-Agent</code> header.</p> </li> </ul> <p>In the rule, you also
        define the rate limit as 15,000.</p> <p>Requests that meet both of these
        conditions and exceed 15,000 requests every five minutes trigger the
        rule's action (block or count), which is defined in the web ACL.</p>"
    RegexMatchSet:
      type: object
      properties:
        RegexMatchSetId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
        RegexMatchTuples:
          $ref: "#/components/schemas/RegexMatchTuples"
      description: <p>In a <a>GetRegexMatchSet</a> request, <code>RegexMatchSet</code> is a
        complex type that contains the <code>RegexMatchSetId</code> and
        <code>Name</code> of a <code>RegexMatchSet</code>, and the values that
        you specified when you updated the <code>RegexMatchSet</code>.</p> <p>
        The values are contained in a <code>RegexMatchTuple</code> object, which
        specify the parts of web requests that you want AWS WAF to inspect and
        the values that you want AWS WAF to search for. If a
        <code>RegexMatchSet</code> contains more than one
        <code>RegexMatchTuple</code> object, a request needs to match the
        settings in only one <code>ByteMatchTuple</code> to be considered a
        match.</p>
    RegexPatternSet:
      type: object
      required:
        - RegexPatternSetId
        - RegexPatternStrings
      properties:
        RegexPatternSetId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
        RegexPatternStrings:
          $ref: "#/components/schemas/RegexPatternStrings"
      description: The <code>RegexPatternSet</code> specifies the regular expression
        (regex) pattern that you want AWS WAF to search for, such as
        <code>B[a@]dB[o0]t</code>. You can then configure AWS WAF to reject
        those requests.
    RuleGroup:
      type: object
      required:
        - RuleGroupId
      properties:
        RuleGroupId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
        MetricName:
          $ref: "#/components/schemas/MetricName"
      description: <p>A collection of predefined rules that you can add to a web ACL.</p>
        <p>Rule groups are subject to the following limits:</p> <ul> <li>
        <p>Three rule groups per account. You can request an increase to this
        limit by contacting customer support.</p> </li> <li> <p>One rule group
        per web ACL.</p> </li> <li> <p>Ten rules per rule group.</p> </li> </ul>
    Rule:
      type: object
      required:
        - RuleId
        - Predicates
      properties:
        RuleId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
        MetricName:
          $ref: "#/components/schemas/MetricName"
        Predicates:
          $ref: "#/components/schemas/Predicates"
      description: <p>A combination of <a>ByteMatchSet</a>, <a>IPSet</a>, and/or
        <a>SqlInjectionMatchSet</a> objects that identify the web requests that
        you want to allow, block, or count. For example, you might create a
        <code>Rule</code> that includes the following predicates:</p> <ul> <li>
        <p>An <code>IPSet</code> that causes AWS WAF to search for web requests
        that originate from the IP address <code>192.0.2.44</code> </p> </li>
        <li> <p>A <code>ByteMatchSet</code> that causes AWS WAF to search for
        web requests for which the value of the <code>User-Agent</code> header
        is <code>BadBot</code>.</p> </li> </ul> <p>To match the settings in this
        <code>Rule</code>, a request must originate from <code>192.0.2.44</code>
        AND include a <code>User-Agent</code> header for which the value is
        <code>BadBot</code>.</p>
    SizeConstraintSet:
      type: object
      required:
        - SizeConstraintSetId
        - SizeConstraints
      properties:
        SizeConstraintSetId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
        SizeConstraints:
          $ref: "#/components/schemas/SizeConstraints"
      description: A complex type that contains <code>SizeConstraint</code> objects, which
        specify the parts of web requests that you want AWS WAF to inspect the
        size of. If a <code>SizeConstraintSet</code> contains more than one
        <code>SizeConstraint</code> object, a request only needs to match one
        constraint to be considered a match.
    SqlInjectionMatchSet:
      type: object
      required:
        - SqlInjectionMatchSetId
        - SqlInjectionMatchTuples
      properties:
        SqlInjectionMatchSetId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
        SqlInjectionMatchTuples:
          $ref: "#/components/schemas/SqlInjectionMatchTuples"
      description: A complex type that contains <code>SqlInjectionMatchTuple</code>
        objects, which specify the parts of web requests that you want AWS WAF
        to inspect for snippets of malicious SQL code and, if you want AWS WAF
        to inspect a header, the name of the header. If a
        <code>SqlInjectionMatchSet</code> contains more than one
        <code>SqlInjectionMatchTuple</code> object, a request needs to include
        snippets of SQL code in only one of the specified parts of the request
        to be considered a match.
    WebACL:
      type: object
      required:
        - WebACLId
        - DefaultAction
        - Rules
      properties:
        WebACLId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
        MetricName:
          $ref: "#/components/schemas/MetricName"
        DefaultAction:
          $ref: "#/components/schemas/WafAction"
        Rules:
          $ref: "#/components/schemas/ActivatedRules"
        WebACLArn:
          $ref: "#/components/schemas/ResourceArn"
      description: Contains the <code>Rules</code> that identify the requests that you want
        to allow, block, or count. In a <code>WebACL</code>, you also specify a
        default action (<code>ALLOW</code> or <code>BLOCK</code>), and the
        action for each <code>Rule</code> that you add to a <code>WebACL</code>,
        for example, block requests from specified IP addresses or block
        requests from specified referrers. You also associate the
        <code>WebACL</code> with a CloudFront distribution to identify the
        requests that you want AWS WAF to filter. If you add more than one
        <code>Rule</code> to a <code>WebACL</code>, a request needs to match
        only one of the specifications to be allowed, blocked, or counted. For
        more information, see <a>UpdateWebACL</a>.
    XssMatchSet:
      type: object
      required:
        - XssMatchSetId
        - XssMatchTuples
      properties:
        XssMatchSetId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
        XssMatchTuples:
          $ref: "#/components/schemas/XssMatchTuples"
      description: A complex type that contains <code>XssMatchTuple</code> objects, which
        specify the parts of web requests that you want AWS WAF to inspect for
        cross-site scripting attacks and, if you want AWS WAF to inspect a
        header, the name of the header. If a <code>XssMatchSet</code> contains
        more than one <code>XssMatchTuple</code> object, a request needs to
        include cross-site scripting attacks in only one of the specified parts
        of the request to be considered a match.
    ResourceArn:
      type: string
      minLength: 1
      maxLength: 1224
    ExcludedRule:
      type: object
      required:
        - RuleId
      properties:
        RuleId:
          $ref: "#/components/schemas/ResourceId"
      description: "The rule to exclude from a rule group. This is applicable only when the
        <code>ActivatedRule</code> refers to a <code>RuleGroup</code>. The rule
        must belong to the <code>RuleGroup</code> that is specified by the
        <code>ActivatedRule</code>. "
    MatchFieldType:
      type: string
      enum:
        - URI
        - QUERY_STRING
        - HEADER
        - METHOD
        - BODY
        - SINGLE_QUERY_ARG
        - ALL_QUERY_ARGS
    MatchFieldData:
      type: string
    GeoMatchConstraintType:
      type: string
      enum:
        - Country
    GeoMatchConstraintValue:
      type: string
      enum:
        - AF
        - AX
        - AL
        - DZ
        - AS
        - AD
        - AO
        - AI
        - AQ
        - AG
        - AR
        - AM
        - AW
        - AU
        - AT
        - AZ
        - BS
        - BH
        - BD
        - BB
        - BY
        - BE
        - BZ
        - BJ
        - BM
        - BT
        - BO
        - BQ
        - BA
        - BW
        - BV
        - BR
        - IO
        - BN
        - BG
        - BF
        - BI
        - KH
        - CM
        - CA
        - CV
        - KY
        - CF
        - TD
        - CL
        - CN
        - CX
        - CC
        - CO
        - KM
        - CG
        - CD
        - CK
        - CR
        - CI
        - HR
        - CU
        - CW
        - CY
        - CZ
        - DK
        - DJ
        - DM
        - DO
        - EC
        - EG
        - SV
        - GQ
        - ER
        - EE
        - ET
        - FK
        - FO
        - FJ
        - FI
        - FR
        - GF
        - PF
        - TF
        - GA
        - GM
        - GE
        - DE
        - GH
        - GI
        - GR
        - GL
        - GD
        - GP
        - GU
        - GT
        - GG
        - GN
        - GW
        - GY
        - HT
        - HM
        - VA
        - HN
        - HK
        - HU
        - IS
        - IN
        - ID
        - IR
        - IQ
        - IE
        - IM
        - IL
        - IT
        - JM
        - JP
        - JE
        - JO
        - KZ
        - KE
        - KI
        - KP
        - KR
        - KW
        - KG
        - LA
        - LV
        - LB
        - LS
        - LR
        - LY
        - LI
        - LT
        - LU
        - MO
        - MK
        - MG
        - MW
        - MY
        - MV
        - ML
        - MT
        - MH
        - MQ
        - MR
        - MU
        - YT
        - MX
        - FM
        - MD
        - MC
        - MN
        - ME
        - MS
        - MA
        - MZ
        - MM
        - NA
        - NR
        - NP
        - NL
        - NC
        - NZ
        - NI
        - NE
        - NG
        - NU
        - NF
        - MP
        - NO
        - OM
        - PK
        - PW
        - PS
        - PA
        - PG
        - PY
        - PE
        - PH
        - PN
        - PL
        - PT
        - PR
        - QA
        - RE
        - RO
        - RU
        - RW
        - BL
        - SH
        - KN
        - LC
        - MF
        - PM
        - VC
        - WS
        - SM
        - ST
        - SA
        - SN
        - RS
        - SC
        - SL
        - SG
        - SX
        - SK
        - SI
        - SB
        - SO
        - ZA
        - GS
        - SS
        - ES
        - LK
        - SD
        - SR
        - SJ
        - SZ
        - SE
        - CH
        - SY
        - TW
        - TJ
        - TZ
        - TH
        - TL
        - TG
        - TK
        - TO
        - TT
        - TN
        - TR
        - TM
        - TC
        - TV
        - UG
        - UA
        - AE
        - GB
        - US
        - UM
        - UY
        - UZ
        - VU
        - VE
        - VN
        - VG
        - VI
        - WF
        - EH
        - YE
        - ZM
        - ZW
    GeoMatchConstraint:
      type: object
      required:
        - Type
        - Value
      properties:
        Type:
          $ref: "#/components/schemas/GeoMatchConstraintType"
        Value:
          $ref: "#/components/schemas/GeoMatchConstraintValue"
      description: The country from which web requests originate that you want AWS WAF to
        search for.
    GeoMatchConstraints:
      type: array
      items:
        $ref: "#/components/schemas/GeoMatchConstraint"
    GeoMatchSetSummary:
      type: object
      required:
        - GeoMatchSetId
        - Name
      properties:
        GeoMatchSetId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
      description: Contains the identifier and the name of the <code>GeoMatchSet</code>.
    GeoMatchSetSummaries:
      type: array
      items:
        $ref: "#/components/schemas/GeoMatchSetSummary"
    GeoMatchSetUpdate:
      type: object
      required:
        - Action
        - GeoMatchConstraint
      properties:
        Action:
          $ref: "#/components/schemas/ChangeAction"
        GeoMatchConstraint:
          $ref: "#/components/schemas/GeoMatchConstraint"
      description: Specifies the type of update to perform to an <a>GeoMatchSet</a> with
        <a>UpdateGeoMatchSet</a>.
    GeoMatchSetUpdates:
      type: array
      items:
        $ref: "#/components/schemas/GeoMatchSetUpdate"
      minItems: 1
    LoggingConfiguration:
      type: object
      required:
        - ResourceArn
        - LogDestinationConfigs
      properties:
        ResourceArn:
          $ref: "#/components/schemas/ResourceArn"
        LogDestinationConfigs:
          $ref: "#/components/schemas/LogDestinationConfigs"
        RedactedFields:
          $ref: "#/components/schemas/RedactedFields"
      description: The Amazon Kinesis Data Firehose, <code>RedactedFields</code>
        information, and the web ACL Amazon Resource Name (ARN).
    PolicyString:
      type: string
      minLength: 1
    NextMarker:
      type: string
      minLength: 1
    ManagedKeys:
      type: array
      items:
        $ref: "#/components/schemas/ManagedKey"
    GetSampledRequestsMaxItems:
      type: integer
      minimum: 1
      maximum: 500
    TimeWindow:
      type: object
      required:
        - StartTime
        - EndTime
      properties:
        StartTime:
          $ref: "#/components/schemas/Timestamp"
        EndTime:
          $ref: "#/components/schemas/Timestamp"
      description: <p>In a <a>GetSampledRequests</a> request, the <code>StartTime</code>
        and <code>EndTime</code> objects specify the time range for which you
        want AWS WAF to return a sample of web requests.</p> <p>In a
        <a>GetSampledRequests</a> response, the <code>StartTime</code> and
        <code>EndTime</code> objects specify the time range for which AWS WAF
        actually returned a sample of web requests. AWS WAF gets the specified
        number of requests from among the first 5,000 requests that your AWS
        resource receives during the specified time period. If your resource
        receives more than 5,000 requests during that period, AWS WAF stops
        sampling after the 5,000th request. In that case, <code>EndTime</code>
        is the time that AWS WAF received the 5,000th request. </p>
    SampledHTTPRequests:
      type: array
      items:
        $ref: "#/components/schemas/SampledHTTPRequest"
    PopulationSize:
      type: integer
    HeaderName:
      type: string
    HeaderValue:
      type: string
    HTTPHeader:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/HeaderName"
        Value:
          $ref: "#/components/schemas/HeaderValue"
      description: "The response from a <a>GetSampledRequests</a> request includes an
        <code>HTTPHeader</code> complex type that appears as
        <code>Headers</code> in the response syntax. <code>HTTPHeader</code>
        contains the names and values of all of the headers that appear in one
        of the web requests that were returned by
        <code>GetSampledRequests</code>. "
    HTTPHeaders:
      type: array
      items:
        $ref: "#/components/schemas/HTTPHeader"
    HTTPMethod:
      type: string
    IPString:
      type: string
    URIString:
      type: string
    HTTPVersion:
      type: string
    HTTPRequest:
      type: object
      properties:
        ClientIP:
          $ref: "#/components/schemas/IPString"
        Country:
          $ref: "#/components/schemas/Country"
        URI:
          $ref: "#/components/schemas/URIString"
        Method:
          $ref: "#/components/schemas/HTTPMethod"
        HTTPVersion:
          $ref: "#/components/schemas/HTTPVersion"
        Headers:
          $ref: "#/components/schemas/HTTPHeaders"
      description: "The response from a <a>GetSampledRequests</a> request includes an
        <code>HTTPRequest</code> complex type that appears as
        <code>Request</code> in the response syntax. <code>HTTPRequest</code>
        contains information about one of the web requests that were returned by
        <code>GetSampledRequests</code>. "
    IPSetDescriptors:
      type: array
      items:
        $ref: "#/components/schemas/IPSetDescriptor"
    IPSetDescriptorType:
      type: string
      enum:
        - IPV4
        - IPV6
    IPSetDescriptorValue:
      type: string
    IPSetDescriptor:
      type: object
      required:
        - Type
        - Value
      properties:
        Type:
          $ref: "#/components/schemas/IPSetDescriptorType"
        Value:
          $ref: "#/components/schemas/IPSetDescriptorValue"
      description: Specifies the IP address type (<code>IPV4</code> or <code>IPV6</code>)
        and the IP address range (in CIDR format) that web requests originate
        from.
    IPSetSummary:
      type: object
      required:
        - IPSetId
        - Name
      properties:
        IPSetId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
      description: Contains the identifier and the name of the <code>IPSet</code>.
    IPSetSummaries:
      type: array
      items:
        $ref: "#/components/schemas/IPSetSummary"
    IPSetUpdate:
      type: object
      required:
        - Action
        - IPSetDescriptor
      properties:
        Action:
          $ref: "#/components/schemas/ChangeAction"
        IPSetDescriptor:
          $ref: "#/components/schemas/IPSetDescriptor"
      description: Specifies the type of update to perform to an <a>IPSet</a> with
        <a>UpdateIPSet</a>.
    IPSetUpdates:
      type: array
      items:
        $ref: "#/components/schemas/IPSetUpdate"
      minItems: 1
    PaginationLimit:
      type: integer
      minimum: 0
      maximum: 100
    LoggingConfigurations:
      type: array
      items:
        $ref: "#/components/schemas/LoggingConfiguration"
    RuleSummaries:
      type: array
      items:
        $ref: "#/components/schemas/RuleSummary"
    RegexMatchSetSummaries:
      type: array
      items:
        $ref: "#/components/schemas/RegexMatchSetSummary"
    RegexPatternSetSummaries:
      type: array
      items:
        $ref: "#/components/schemas/RegexPatternSetSummary"
    RuleGroupSummaries:
      type: array
      items:
        $ref: "#/components/schemas/RuleGroupSummary"
    SizeConstraintSetSummaries:
      type: array
      items:
        $ref: "#/components/schemas/SizeConstraintSetSummary"
    SqlInjectionMatchSetSummaries:
      type: array
      items:
        $ref: "#/components/schemas/SqlInjectionMatchSetSummary"
    SubscribedRuleGroupSummaries:
      type: array
      items:
        $ref: "#/components/schemas/SubscribedRuleGroupSummary"
    TagInfoForResource:
      type: object
      properties:
        ResourceARN:
          $ref: "#/components/schemas/ResourceArn"
        TagList:
          $ref: "#/components/schemas/TagList"
    WebACLSummaries:
      type: array
      items:
        $ref: "#/components/schemas/WebACLSummary"
    XssMatchSetSummaries:
      type: array
      items:
        $ref: "#/components/schemas/XssMatchSetSummary"
    LogDestinationConfigs:
      type: array
      items:
        $ref: "#/components/schemas/ResourceArn"
      minItems: 1
      maxItems: 1
    RedactedFields:
      type: array
      items:
        $ref: "#/components/schemas/FieldToMatch"
    ManagedKey:
      type: string
    Negated:
      type: boolean
    PredicateType:
      type: string
      enum:
        - IPMatch
        - ByteMatch
        - SqlInjectionMatch
        - GeoMatch
        - SizeConstraint
        - XssMatch
        - RegexMatch
    Predicate:
      type: object
      required:
        - Negated
        - Type
        - DataId
      properties:
        Negated:
          $ref: "#/components/schemas/Negated"
        Type:
          $ref: "#/components/schemas/PredicateType"
        DataId:
          $ref: "#/components/schemas/ResourceId"
      description: "Specifies the <a>ByteMatchSet</a>, <a>IPSet</a>,
        <a>SqlInjectionMatchSet</a>, <a>XssMatchSet</a>, <a>RegexMatchSet</a>,
        <a>GeoMatchSet</a>, and <a>SizeConstraintSet</a> objects that you want
        to add to a <code>Rule</code> and, for each object, indicates whether
        you want to negate the settings, for example, requests that do NOT
        originate from the IP address 192.0.2.44. "
    Predicates:
      type: array
      items:
        $ref: "#/components/schemas/Predicate"
    RegexMatchTuples:
      type: array
      items:
        $ref: "#/components/schemas/RegexMatchTuple"
    RegexMatchSetSummary:
      type: object
      required:
        - RegexMatchSetId
        - Name
      properties:
        RegexMatchSetId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
      description: Returned by <a>ListRegexMatchSets</a>. Each
        <code>RegexMatchSetSummary</code> object includes the <code>Name</code>
        and <code>RegexMatchSetId</code> for one <a>RegexMatchSet</a>.
    RegexMatchTuple:
      type: object
      required:
        - FieldToMatch
        - TextTransformation
        - RegexPatternSetId
      properties:
        FieldToMatch:
          $ref: "#/components/schemas/FieldToMatch"
        TextTransformation:
          $ref: "#/components/schemas/TextTransformation"
        RegexPatternSetId:
          $ref: "#/components/schemas/ResourceId"
      description: "<p>The regular expression pattern that you want AWS WAF to search for
        in web requests, the location in requests that you want AWS WAF to
        search, and other settings. Each <code>RegexMatchTuple</code> object
        contains: </p> <ul> <li> <p>The part of a web request that you want AWS
        WAF to inspect, such as a query string or the value of the
        <code>User-Agent</code> header. </p> </li> <li> <p>The identifier of the
        pattern (a regular expression) that you want AWS WAF to look for. For
        more information, see <a>RegexPatternSet</a>. </p> </li> <li> <p>Whether
        to perform any conversions on the request, such as converting it to
        lowercase, before inspecting it for the specified string.</p> </li>
        </ul>"
    RegexMatchSetUpdate:
      type: object
      required:
        - Action
        - RegexMatchTuple
      properties:
        Action:
          $ref: "#/components/schemas/ChangeAction"
        RegexMatchTuple:
          $ref: "#/components/schemas/RegexMatchTuple"
      description: In an <a>UpdateRegexMatchSet</a> request,
        <code>RegexMatchSetUpdate</code> specifies whether to insert or delete a
        <a>RegexMatchTuple</a> and includes the settings for the
        <code>RegexMatchTuple</code>.
    RegexMatchSetUpdates:
      type: array
      items:
        $ref: "#/components/schemas/RegexMatchSetUpdate"
      minItems: 1
    RegexPatternStrings:
      type: array
      items:
        $ref: "#/components/schemas/RegexPatternString"
      maxItems: 10
    RegexPatternSetSummary:
      type: object
      required:
        - RegexPatternSetId
        - Name
      properties:
        RegexPatternSetId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
      description: Returned by <a>ListRegexPatternSets</a>. Each
        <code>RegexPatternSetSummary</code> object includes the
        <code>Name</code> and <code>RegexPatternSetId</code> for one
        <a>RegexPatternSet</a>.
    RegexPatternString:
      type: string
      minLength: 1
    RegexPatternSetUpdate:
      type: object
      required:
        - Action
        - RegexPatternString
      properties:
        Action:
          $ref: "#/components/schemas/ChangeAction"
        RegexPatternString:
          $ref: "#/components/schemas/RegexPatternString"
      description: In an <a>UpdateRegexPatternSet</a> request,
        <code>RegexPatternSetUpdate</code> specifies whether to insert or delete
        a <code>RegexPatternString</code> and includes the settings for the
        <code>RegexPatternString</code>.
    RegexPatternSetUpdates:
      type: array
      items:
        $ref: "#/components/schemas/RegexPatternSetUpdate"
      minItems: 1
    RuleGroupSummary:
      type: object
      required:
        - RuleGroupId
        - Name
      properties:
        RuleGroupId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
      description: Contains the identifier and the friendly name or description of the
        <code>RuleGroup</code>.
    RuleGroupUpdate:
      type: object
      required:
        - Action
        - ActivatedRule
      properties:
        Action:
          $ref: "#/components/schemas/ChangeAction"
        ActivatedRule:
          $ref: "#/components/schemas/ActivatedRule"
      description: Specifies an <code>ActivatedRule</code> and indicates whether you want
        to add it to a <code>RuleGroup</code> or delete it from a
        <code>RuleGroup</code>.
    RuleGroupUpdates:
      type: array
      items:
        $ref: "#/components/schemas/RuleGroupUpdate"
      minItems: 1
    RuleSummary:
      type: object
      required:
        - RuleId
        - Name
      properties:
        RuleId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
      description: Contains the identifier and the friendly name or description of the
        <code>Rule</code>.
    RuleUpdate:
      type: object
      required:
        - Action
        - Predicate
      properties:
        Action:
          $ref: "#/components/schemas/ChangeAction"
        Predicate:
          $ref: "#/components/schemas/Predicate"
      description: Specifies a <code>Predicate</code> (such as an <code>IPSet</code>) and
        indicates whether you want to add it to a <code>Rule</code> or delete it
        from a <code>Rule</code>.
    RuleUpdates:
      type: array
      items:
        $ref: "#/components/schemas/RuleUpdate"
    SampleWeight:
      type: integer
      minimum: 0
    Timestamp:
      type: string
      format: date-time
    SampledHTTPRequest:
      type: object
      required:
        - Request
        - Weight
      properties:
        Request:
          $ref: "#/components/schemas/HTTPRequest"
        Weight:
          $ref: "#/components/schemas/SampleWeight"
        Timestamp:
          $ref: "#/components/schemas/Timestamp"
        Action:
          $ref: "#/components/schemas/Action"
        RuleWithinRuleGroup:
          $ref: "#/components/schemas/ResourceId"
      description: The response from a <a>GetSampledRequests</a> request includes a
        <code>SampledHTTPRequests</code> complex type that appears as
        <code>SampledRequests</code> in the response syntax.
        <code>SampledHTTPRequests</code> contains one
        <code>SampledHTTPRequest</code> object for each web request that is
        returned by <code>GetSampledRequests</code>.
    Size:
      type: integer
      minimum: 0
      maximum: 21474836480
    SizeConstraint:
      type: object
      required:
        - FieldToMatch
        - TextTransformation
        - ComparisonOperator
        - Size
      properties:
        FieldToMatch:
          $ref: "#/components/schemas/FieldToMatch"
        TextTransformation:
          $ref: "#/components/schemas/TextTransformation"
        ComparisonOperator:
          $ref: "#/components/schemas/ComparisonOperator"
        Size:
          $ref: "#/components/schemas/Size"
      description: Specifies a constraint on the size of a part of the web request. AWS WAF
        uses the <code>Size</code>, <code>ComparisonOperator</code>, and
        <code>FieldToMatch</code> to build an expression in the form of
        "<code>Size</code> <code>ComparisonOperator</code> size in bytes of
        <code>FieldToMatch</code>". If that expression is true, the
        <code>SizeConstraint</code> is considered to match.
    SizeConstraints:
      type: array
      items:
        $ref: "#/components/schemas/SizeConstraint"
    SizeConstraintSetSummary:
      type: object
      required:
        - SizeConstraintSetId
        - Name
      properties:
        SizeConstraintSetId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
      description: The <code>Id</code> and <code>Name</code> of a
        <code>SizeConstraintSet</code>.
    SizeConstraintSetUpdate:
      type: object
      required:
        - Action
        - SizeConstraint
      properties:
        Action:
          $ref: "#/components/schemas/ChangeAction"
        SizeConstraint:
          $ref: "#/components/schemas/SizeConstraint"
      description: Specifies the part of a web request that you want to inspect the size of
        and indicates whether you want to add the specification to a
        <a>SizeConstraintSet</a> or delete it from a
        <code>SizeConstraintSet</code>.
    SizeConstraintSetUpdates:
      type: array
      items:
        $ref: "#/components/schemas/SizeConstraintSetUpdate"
      minItems: 1
    SqlInjectionMatchTuples:
      type: array
      items:
        $ref: "#/components/schemas/SqlInjectionMatchTuple"
    SqlInjectionMatchSetSummary:
      type: object
      required:
        - SqlInjectionMatchSetId
        - Name
      properties:
        SqlInjectionMatchSetId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
      description: The <code>Id</code> and <code>Name</code> of a
        <code>SqlInjectionMatchSet</code>.
    SqlInjectionMatchTuple:
      type: object
      required:
        - FieldToMatch
        - TextTransformation
      properties:
        FieldToMatch:
          $ref: "#/components/schemas/FieldToMatch"
        TextTransformation:
          $ref: "#/components/schemas/TextTransformation"
      description: Specifies the part of a web request that you want AWS WAF to inspect for
        snippets of malicious SQL code and, if you want AWS WAF to inspect a
        header, the name of the header.
    SqlInjectionMatchSetUpdate:
      type: object
      required:
        - Action
        - SqlInjectionMatchTuple
      properties:
        Action:
          $ref: "#/components/schemas/ChangeAction"
        SqlInjectionMatchTuple:
          $ref: "#/components/schemas/SqlInjectionMatchTuple"
      description: Specifies the part of a web request that you want to inspect for
        snippets of malicious SQL code and indicates whether you want to add the
        specification to a <a>SqlInjectionMatchSet</a> or delete it from a
        <code>SqlInjectionMatchSet</code>.
    SqlInjectionMatchSetUpdates:
      type: array
      items:
        $ref: "#/components/schemas/SqlInjectionMatchSetUpdate"
      minItems: 1
    SubscribedRuleGroupSummary:
      type: object
      required:
        - RuleGroupId
        - Name
        - MetricName
      properties:
        RuleGroupId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
        MetricName:
          $ref: "#/components/schemas/MetricName"
      description: A summary of the rule groups you are subscribed to.
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      properties:
        Key:
          $ref: "#/components/schemas/TagKey"
        Value:
          $ref: "#/components/schemas/TagValue"
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
      minItems: 1
    WebACLUpdates:
      type: array
      items:
        $ref: "#/components/schemas/WebACLUpdate"
    XssMatchSetUpdates:
      type: array
      items:
        $ref: "#/components/schemas/XssMatchSetUpdate"
      minItems: 1
    WafActionType:
      type: string
      enum:
        - BLOCK
        - ALLOW
        - COUNT
    WafOverrideActionType:
      type: string
      enum:
        - NONE
        - COUNT
    WebACLSummary:
      type: object
      required:
        - WebACLId
        - Name
      properties:
        WebACLId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
      description: Contains the identifier and the name or description of the <a>WebACL</a>.
    WebACLUpdate:
      type: object
      required:
        - Action
        - ActivatedRule
      properties:
        Action:
          $ref: "#/components/schemas/ChangeAction"
        ActivatedRule:
          $ref: "#/components/schemas/ActivatedRule"
      description: Specifies whether to insert a <code>Rule</code> into or delete a
        <code>Rule</code> from a <code>WebACL</code>.
    XssMatchTuples:
      type: array
      items:
        $ref: "#/components/schemas/XssMatchTuple"
    XssMatchSetSummary:
      type: object
      required:
        - XssMatchSetId
        - Name
      properties:
        XssMatchSetId:
          $ref: "#/components/schemas/ResourceId"
        Name:
          $ref: "#/components/schemas/ResourceName"
      description: The <code>Id</code> and <code>Name</code> of an <code>XssMatchSet</code>.
    XssMatchTuple:
      type: object
      required:
        - FieldToMatch
        - TextTransformation
      properties:
        FieldToMatch:
          $ref: "#/components/schemas/FieldToMatch"
        TextTransformation:
          $ref: "#/components/schemas/TextTransformation"
      description: Specifies the part of a web request that you want AWS WAF to inspect for
        cross-site scripting attacks and, if you want AWS WAF to inspect a
        header, the name of the header.
    XssMatchSetUpdate:
      type: object
      required:
        - Action
        - XssMatchTuple
      properties:
        Action:
          $ref: "#/components/schemas/ChangeAction"
        XssMatchTuple:
          $ref: "#/components/schemas/XssMatchTuple"
      description: Specifies the part of a web request that you want to inspect for
        cross-site scripting attacks and indicates whether you want to add the
        specification to an <a>XssMatchSet</a> or delete it from an
        <code>XssMatchSet</code>.
