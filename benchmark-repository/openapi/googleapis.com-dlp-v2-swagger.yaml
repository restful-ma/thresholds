openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: Provides methods for detection, risk analysis, and de-identification of
    privacy-sensitive fragments in text, images, and Google Cloud Platform
    storage repositories.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Data Loss Prevention (DLP)
  version: v2
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.7.31
      format: google
      url: https://dlp.googleapis.com/$discovery/rest?version=v2
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: dlp
externalDocs:
  url: https://cloud.google.com/dlp/docs/
tags:
  - name: infoTypes
  - name: locations
  - name: organizations
  - name: projects
paths:
  /v2/infoTypes:
    get:
      description: |-
        Returns a list of the sensitive information types that the DLP API
        supports. See https://cloud.google.com/dlp/docs/infotypes-reference to
        learn more.
      operationId: dlp.infoTypes.list
      parameters:
        - description: >-
            Optional filter to only return infoTypes supported by certain parts
            of the

            API. Defaults to supported_by=INSPECT.
          in: query
          name: filter
          schema:
            type: string
        - description: |-
            Optional BCP-47 language code for localized infoType friendly
            names. If omitted, or if localized strings are not available,
            en-US strings will be returned.
          in: query
          name: languageCode
          schema:
            type: string
        - description: |-
            The geographic location to list info types. Reserved for future
            extensions.
          in: query
          name: location
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2ListInfoTypesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - infoTypes
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
  "/v2/locations/{location}/infoTypes":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Returns a list of the sensitive information types that the DLP API
        supports. See https://cloud.google.com/dlp/docs/infotypes-reference to
        learn more.
      operationId: dlp.locations.infoTypes
      parameters:
        - description: |-
            The geographic location to list info types. Reserved for future
            extensions.
          in: path
          name: location
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GooglePrivacyDlpV2ListInfoTypesRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2ListInfoTypesResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - locations
  "/v2/{name}":
    delete:
      description: |-
        Deletes an InspectTemplate.
        See https://cloud.google.com/dlp/docs/creating-templates to learn more.
      operationId: dlp.organizations.inspectTemplates.delete
      parameters:
        - description: >-
            Resource name of the organization and inspectTemplate to be deleted,
            for

            example `organizations/433245324/inspectTemplates/432452342` or

            projects/project-id/inspectTemplates/432452342.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
    get:
      description: |-
        Gets an InspectTemplate.
        See https://cloud.google.com/dlp/docs/creating-templates to learn more.
      operationId: dlp.organizations.inspectTemplates.get
      parameters:
        - description: >-
            Resource name of the organization and inspectTemplate to be read,
            for

            example `organizations/433245324/inspectTemplates/432452342` or

            projects/project-id/inspectTemplates/432452342.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2InspectTemplate"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    patch:
      description: |-
        Updates the InspectTemplate.
        See https://cloud.google.com/dlp/docs/creating-templates to learn more.
      operationId: dlp.organizations.inspectTemplates.patch
      parameters:
        - description: |-
            Resource name of organization and inspectTemplate to be updated, for
            example `organizations/433245324/inspectTemplates/432452342` or
            projects/project-id/inspectTemplates/432452342.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GooglePrivacyDlpV2UpdateInspectTemplateRe\
                quest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2InspectTemplate"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
  "/v2/{name}:activate":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Activate a job trigger. Causes the immediate execute of a trigger
        instead of waiting on the trigger event to occur.
      operationId: dlp.projects.jobTriggers.activate
      parameters:
        - description: |-
            Resource name of the trigger to activate, for example
            `projects/dlp-test-project/jobTriggers/53234423`.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GooglePrivacyDlpV2ActivateJobTriggerReque\
                st"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2DlpJob"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2/{name}:cancel":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Starts asynchronous cancellation on a long-running DlpJob. The server
        makes a best effort to cancel the DlpJob, but success is not
        guaranteed.
        See https://cloud.google.com/dlp/docs/inspecting-storage and
        https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
      operationId: dlp.projects.dlpJobs.cancel
      parameters:
        - description: The name of the DlpJob resource to be cancelled.
          in: path
          name: name
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GooglePrivacyDlpV2CancelDlpJobRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2/{parent}/content:deidentify":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        De-identifies potentially sensitive info from a ContentItem.

        This method has limits on input size and output size.

        See https://cloud.google.com/dlp/docs/deidentify-sensitive-data to

        learn more.


        When no InfoTypes or CustomInfoTypes are specified in this request, the

        system will automatically choose what detectors to run. By default this may

        be all types, but may change over time as detectors are updated.
      operationId: dlp.projects.content.deidentify
      parameters:
        - description: The parent resource name, for example projects/my-project-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/GooglePrivacyDlpV2DeidentifyContentRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2DeidentifyContentResp\
                  onse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2/{parent}/content:inspect":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Finds potentially sensitive info in content.

        This method has limits on input size, processing time, and output size.


        When no InfoTypes or CustomInfoTypes are specified in this request, the

        system will automatically choose what detectors to run. By default this may

        be all types, but may change over time as detectors are updated.


        For how to guides, see https://cloud.google.com/dlp/docs/inspecting-images

        and https://cloud.google.com/dlp/docs/inspecting-text,
      operationId: dlp.projects.content.inspect
      parameters:
        - description: The parent resource name, for example projects/my-project-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/GooglePrivacyDlpV2InspectContentRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2InspectContentResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2/{parent}/content:reidentify":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Re-identifies content that has been de-identified.

        See

        https://cloud.google.com/dlp/docs/pseudonymization#re-identification_in_free_text_code_example

        to learn more.
      operationId: dlp.projects.content.reidentify
      parameters:
        - description: The parent resource name.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/GooglePrivacyDlpV2ReidentifyContentRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2ReidentifyContentResp\
                  onse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2/{parent}/deidentifyTemplates":
    get:
      description: |-
        Lists DeidentifyTemplates.
        See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
        more.
      operationId: dlp.organizations.deidentifyTemplates.list
      parameters:
        - description: |-
            Optional comma separated list of fields to order by,
            followed by `asc` or `desc` postfix. This list is case-insensitive,
            default sorting order is ascending, redundant space characters are
            insignificant.

            Example: `name asc,update_time, create_time desc`

            Supported fields are:

            - `create_time`: corresponds to time the template was created.
            - `update_time`: corresponds to time the template was last updated.
            - `name`: corresponds to template's name.
            - `display_name`: corresponds to template's display name.
          in: query
          name: orderBy
          schema:
            type: string
        - description: >-
            Optional size of the page, can be limited by server. If zero server
            returns

            a page of max size 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            Optional page token to continue retrieval. Comes from previous call
            to `ListDeidentifyTemplates`.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            The parent resource name, for example projects/my-project-id or
            organizations/my-org-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2ListDeidentifyTemplat\
                  esResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Creates a DeidentifyTemplate for re-using frequently used configuration
        for de-identifying content, images, and storage.
        See https://cloud.google.com/dlp/docs/creating-templates-deid to learn
        more.
      operationId: dlp.organizations.deidentifyTemplates.create
      parameters:
        - description: |-
            The parent resource name, for example projects/my-project-id or
            organizations/my-org-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GooglePrivacyDlpV2CreateDeidentifyTemplat\
                eRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2DeidentifyTemplate"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
  "/v2/{parent}/dlpJobs":
    get:
      description: |-
        Lists DlpJobs that match the specified filter in the request.
        See https://cloud.google.com/dlp/docs/inspecting-storage and
        https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.
      operationId: dlp.projects.dlpJobs.list
      parameters:
        - description: >-
            Optional. Allows filtering.


            Supported syntax:


            * Filter expressions are made up of one or more restrictions.

            * Restrictions can be combined by `AND` or `OR` logical operators. A

            sequence of restrictions implicitly uses `AND`.

            * A restriction has the form of `<field> <operator> <value>`.

            * Supported fields/values for inspect jobs:
                - `state` - PENDING|RUNNING|CANCELED|FINISHED|FAILED
                - `inspected_storage` - DATASTORE|CLOUD_STORAGE|BIGQUERY
                - `trigger_name` - The resource name of the trigger that created job.
                - 'end_time` - Corresponds to time the job finished.
                - 'start_time` - Corresponds to time the job finished.
            * Supported fields for risk analysis jobs:
                - `state` - RUNNING|CANCELED|FINISHED|FAILED
                - 'end_time` - Corresponds to time the job finished.
                - 'start_time` - Corresponds to time the job finished.
            * The operator must be `=` or `!=`.


            Examples:


            * inspected_storage = cloud_storage AND state = done

            * inspected_storage = cloud_storage OR inspected_storage = bigquery

            * inspected_storage = cloud_storage AND (state = done OR state = canceled)

            * end_time > \"2017-12-12T00:00:00+00:00\"


            The length of this field should be no more than 500 characters.
          in: query
          name: filter
          schema:
            type: string
        - description: |-
            Optional comma separated list of fields to order by,
            followed by `asc` or `desc` postfix. This list is case-insensitive,
            default sorting order is ascending, redundant space characters are
            insignificant.

            Example: `name asc, end_time asc, create_time desc`

            Supported fields are:

            - `create_time`: corresponds to time the job was created.
            - `end_time`: corresponds to time the job ended.
            - `name`: corresponds to job's name.
            - `state`: corresponds to `state`
          in: query
          name: orderBy
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The parent resource name, for example projects/my-project-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
        - description: The type of job. Defaults to `DlpJobType.INSPECT`
          in: query
          name: type
          schema:
            type: string
            enum:
              - DLP_JOB_TYPE_UNSPECIFIED
              - INSPECT_JOB
              - RISK_ANALYSIS_JOB
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2ListDlpJobsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Creates a new job to inspect storage or calculate risk metrics.

        See https://cloud.google.com/dlp/docs/inspecting-storage and

        https://cloud.google.com/dlp/docs/compute-risk-analysis to learn more.


        When no InfoTypes or CustomInfoTypes are specified in inspect jobs, the

        system will automatically choose what detectors to run. By default this may

        be all types, but may change over time as detectors are updated.
      operationId: dlp.projects.dlpJobs.create
      parameters:
        - description: The parent resource name, for example projects/my-project-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GooglePrivacyDlpV2CreateDlpJobRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2DlpJob"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2/{parent}/image:redact":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Redacts potentially sensitive info from an image.

        This method has limits on input size, processing time, and output size.

        See https://cloud.google.com/dlp/docs/redacting-sensitive-data-images to

        learn more.


        When no InfoTypes or CustomInfoTypes are specified in this request, the

        system will automatically choose what detectors to run. By default this may

        be all types, but may change over time as detectors are updated.
      operationId: dlp.projects.image.redact
      parameters:
        - description: The parent resource name, for example projects/my-project-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GooglePrivacyDlpV2RedactImageRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2RedactImageResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2/{parent}/inspectTemplates":
    get:
      description: |-
        Lists InspectTemplates.
        See https://cloud.google.com/dlp/docs/creating-templates to learn more.
      operationId: dlp.organizations.inspectTemplates.list
      parameters:
        - description: |-
            Optional comma separated list of fields to order by,
            followed by `asc` or `desc` postfix. This list is case-insensitive,
            default sorting order is ascending, redundant space characters are
            insignificant.

            Example: `name asc,update_time, create_time desc`

            Supported fields are:

            - `create_time`: corresponds to time the template was created.
            - `update_time`: corresponds to time the template was last updated.
            - `name`: corresponds to template's name.
            - `display_name`: corresponds to template's display name.
          in: query
          name: orderBy
          schema:
            type: string
        - description: >-
            Optional size of the page, can be limited by server. If zero server
            returns

            a page of max size 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            Optional page token to continue retrieval. Comes from previous call
            to `ListInspectTemplates`.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            The parent resource name, for example projects/my-project-id or
            organizations/my-org-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2ListInspectTemplatesR\
                  esponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Creates an InspectTemplate for re-using frequently used configuration
        for inspecting content, images, and storage.
        See https://cloud.google.com/dlp/docs/creating-templates to learn more.
      operationId: dlp.organizations.inspectTemplates.create
      parameters:
        - description: |-
            The parent resource name, for example projects/my-project-id or
            organizations/my-org-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GooglePrivacyDlpV2CreateInspectTemplateRe\
                quest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2InspectTemplate"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
  "/v2/{parent}/jobTriggers":
    get:
      description: >-
        Lists job triggers.

        See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
      operationId: dlp.projects.jobTriggers.list
      parameters:
        - description: >-
            Optional. Allows filtering.


            Supported syntax:


            * Filter expressions are made up of one or more restrictions.

            * Restrictions can be combined by `AND` or `OR` logical operators. A

            sequence of restrictions implicitly uses `AND`.

            * A restriction has the form of `<field> <operator> <value>`.

            * Supported fields/values for inspect jobs:
                - `status` - HEALTHY|PAUSED|CANCELLED
                - `inspected_storage` - DATASTORE|CLOUD_STORAGE|BIGQUERY
                - 'last_run_time` - RFC 3339 formatted timestamp, surrounded by
                quotation marks. Nanoseconds are ignored.
                - 'error_count' - Number of errors that have occurred while running.
            * The operator must be `=` or `!=` for status and inspected_storage.


            Examples:


            * inspected_storage = cloud_storage AND status = HEALTHY

            * inspected_storage = cloud_storage OR inspected_storage = bigquery

            * inspected_storage = cloud_storage AND (state = PAUSED OR state = HEALTHY)

            * last_run_time > \"2017-12-12T00:00:00+00:00\"


            The length of this field should be no more than 500 characters.
          in: query
          name: filter
          schema:
            type: string
        - description: >-
            Optional comma separated list of triggeredJob fields to order by,

            followed by `asc` or `desc` postfix. This list is case-insensitive,

            default sorting order is ascending, redundant space characters are

            insignificant.


            Example: `name asc,update_time, create_time desc`


            Supported fields are:


            - `create_time`: corresponds to time the JobTrigger was created.

            - `update_time`: corresponds to time the JobTrigger was last updated.

            - `last_run_time`: corresponds to the last time the JobTrigger ran.

            - `name`: corresponds to JobTrigger's name.

            - `display_name`: corresponds to JobTrigger's display name.

            - `status`: corresponds to JobTrigger's status.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional size of the page, can be limited by a server.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            Optional page token to continue retrieval. Comes from previous call
            to ListJobTriggers. `order_by` field must not
            change for subsequent calls.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The parent resource name, for example `projects/my-project-id`.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2ListJobTriggersRespon\
                  se"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Creates a job trigger to run DLP actions such as scanning storage for

        sensitive information on a set schedule.

        See https://cloud.google.com/dlp/docs/creating-job-triggers to learn more.
      operationId: dlp.projects.jobTriggers.create
      parameters:
        - description: The parent resource name, for example projects/my-project-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GooglePrivacyDlpV2CreateJobTriggerRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2JobTrigger"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2/{parent}/locations/{location}/content:deidentify":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        De-identifies potentially sensitive info from a ContentItem.

        This method has limits on input size and output size.

        See https://cloud.google.com/dlp/docs/deidentify-sensitive-data to

        learn more.


        When no InfoTypes or CustomInfoTypes are specified in this request, the

        system will automatically choose what detectors to run. By default this may

        be all types, but may change over time as detectors are updated.
      operationId: dlp.projects.locations.content.deidentify
      parameters:
        - description: >-
            The geographic location to process de-identification. Reserved for
            future

            extensions.
          in: path
          name: location
          required: true
          schema:
            type: string
        - description: The parent resource name, for example projects/my-project-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/GooglePrivacyDlpV2DeidentifyContentRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2DeidentifyContentResp\
                  onse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2/{parent}/locations/{location}/content:inspect":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Finds potentially sensitive info in content.

        This method has limits on input size, processing time, and output size.


        When no InfoTypes or CustomInfoTypes are specified in this request, the

        system will automatically choose what detectors to run. By default this may

        be all types, but may change over time as detectors are updated.


        For how to guides, see https://cloud.google.com/dlp/docs/inspecting-images

        and https://cloud.google.com/dlp/docs/inspecting-text,
      operationId: dlp.projects.locations.content.inspect
      parameters:
        - description: >-
            The geographic location to process content inspection. Reserved for
            future

            extensions.
          in: path
          name: location
          required: true
          schema:
            type: string
        - description: The parent resource name, for example projects/my-project-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/GooglePrivacyDlpV2InspectContentRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2InspectContentResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2/{parent}/locations/{location}/content:reidentify":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: >-
        Re-identifies content that has been de-identified.

        See

        https://cloud.google.com/dlp/docs/pseudonymization#re-identification_in_free_text_code_example

        to learn more.
      operationId: dlp.projects.locations.content.reidentify
      parameters:
        - description: >-
            The geographic location to process content
            reidentification.  Reserved for

            future extensions.
          in: path
          name: location
          required: true
          schema:
            type: string
        - description: The parent resource name.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/GooglePrivacyDlpV2ReidentifyContentRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2ReidentifyContentResp\
                  onse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v2/{parent}/storedInfoTypes":
    get:
      description: |-
        Lists stored infoTypes.
        See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
        learn more.
      operationId: dlp.organizations.storedInfoTypes.list
      parameters:
        - description: |-
            Optional comma separated list of fields to order by,
            followed by `asc` or `desc` postfix. This list is case-insensitive,
            default sorting order is ascending, redundant space characters are
            insignificant.

            Example: `name asc, display_name, create_time desc`

            Supported fields are:

            - `create_time`: corresponds to time the most recent version of the
            resource was created.
            - `state`: corresponds to the state of the resource.
            - `name`: corresponds to resource name.
            - `display_name`: corresponds to info type's display name.
          in: query
          name: orderBy
          schema:
            type: string
        - description: >-
            Optional size of the page, can be limited by server. If zero server
            returns

            a page of max size 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: |-
            Optional page token to continue retrieval. Comes from previous call
            to `ListStoredInfoTypes`.
          in: query
          name: pageToken
          schema:
            type: string
        - description: |-
            The parent resource name, for example projects/my-project-id or
            organizations/my-org-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2ListStoredInfoTypesRe\
                  sponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/uploadType"
      - $ref: "#/components/parameters/upload_protocol"
    post:
      description: |-
        Creates a pre-built stored infoType to be used for inspection.
        See https://cloud.google.com/dlp/docs/creating-stored-infotypes to
        learn more.
      operationId: dlp.organizations.storedInfoTypes.create
      parameters:
        - description: |-
            The parent resource name, for example projects/my-project-id or
            organizations/my-org-id.
          in: path
          name: parent
          required: true
          x-reservedExpansion: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GooglePrivacyDlpV2CreateStoredInfoTypeReq\
                uest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/GooglePrivacyDlpV2StoredInfoType"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - organizations
servers:
  - url: https://dlp.googleapis.com/
components:
  parameters:
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
          - media
          - proto
        default: json
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be
        any arbitrary string assigned to a user, but should not exceed 40
        characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        type: string
        enum:
          - "1"
          - "2"
  requestBodies:
    GooglePrivacyDlpV2InspectContentRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GooglePrivacyDlpV2InspectContentRequest"
    GooglePrivacyDlpV2DeidentifyContentRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GooglePrivacyDlpV2DeidentifyContentRequest"
    GooglePrivacyDlpV2ReidentifyContentRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GooglePrivacyDlpV2ReidentifyContentRequest"
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          tokenUrl: https://accounts.google.com/o/oauth2/token
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data across Google Cloud Platform services
  schemas:
    GooglePrivacyDlpV2Action:
      description: |-
        A task to execute on the completion of a job.
        See https://cloud.google.com/dlp/docs/concepts-actions to learn more.
      properties:
        jobNotificationEmails:
          $ref: "#/components/schemas/GooglePrivacyDlpV2JobNotificationEmails"
        pubSub:
          $ref: "#/components/schemas/GooglePrivacyDlpV2PublishToPubSub"
        publishFindingsToCloudDataCatalog:
          $ref: "#/components/schemas/GooglePrivacyDlpV2PublishFindingsToCloudDataC\
            atalog"
        publishSummaryToCscc:
          $ref: "#/components/schemas/GooglePrivacyDlpV2PublishSummaryToCscc"
        saveFindings:
          $ref: "#/components/schemas/GooglePrivacyDlpV2SaveFindings"
      type: object
    GooglePrivacyDlpV2ActivateJobTriggerRequest:
      description: Request message for ActivateJobTrigger.
      properties: {}
      type: object
    GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails:
      description: Result of a risk analysis operation request.
      properties:
        categoricalStatsResult:
          $ref: "#/components/schemas/GooglePrivacyDlpV2CategoricalStatsResult"
        deltaPresenceEstimationResult:
          $ref: "#/components/schemas/GooglePrivacyDlpV2DeltaPresenceEstimationResu\
            lt"
        kAnonymityResult:
          $ref: "#/components/schemas/GooglePrivacyDlpV2KAnonymityResult"
        kMapEstimationResult:
          $ref: "#/components/schemas/GooglePrivacyDlpV2KMapEstimationResult"
        lDiversityResult:
          $ref: "#/components/schemas/GooglePrivacyDlpV2LDiversityResult"
        numericalStatsResult:
          $ref: "#/components/schemas/GooglePrivacyDlpV2NumericalStatsResult"
        requestedPrivacyMetric:
          $ref: "#/components/schemas/GooglePrivacyDlpV2PrivacyMetric"
        requestedSourceTable:
          $ref: "#/components/schemas/GooglePrivacyDlpV2BigQueryTable"
      type: object
    GooglePrivacyDlpV2AuxiliaryTable:
      description: |-
        An auxiliary table contains statistical information on the relative
        frequency of different quasi-identifiers values. It has one or several
        quasi-identifiers columns, and one column that indicates the relative
        frequency of each quasi-identifier tuple.
        If a tuple is present in the data but not in the auxiliary table, the
        corresponding relative frequency is assumed to be zero (and thus, the
        tuple is highly reidentifiable).
      properties:
        quasiIds:
          description: Quasi-identifier columns. [required]
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2QuasiIdField"
          type: array
        relativeFrequency:
          $ref: "#/components/schemas/GooglePrivacyDlpV2FieldId"
        table:
          $ref: "#/components/schemas/GooglePrivacyDlpV2BigQueryTable"
      type: object
    GooglePrivacyDlpV2BigQueryField:
      description: Message defining a field of a BigQuery table.
      properties:
        field:
          $ref: "#/components/schemas/GooglePrivacyDlpV2FieldId"
        table:
          $ref: "#/components/schemas/GooglePrivacyDlpV2BigQueryTable"
      type: object
    GooglePrivacyDlpV2BigQueryKey:
      description: Row key for identifying a record in BigQuery table.
      properties:
        rowNumber:
          description: >-
            Absolute number of the row from the beginning of the table at the
            time

            of scanning.
          format: int64
          type: string
        tableReference:
          $ref: "#/components/schemas/GooglePrivacyDlpV2BigQueryTable"
      type: object
    GooglePrivacyDlpV2BigQueryOptions:
      description: Options defining BigQuery table and row identifiers.
      properties:
        excludedFields:
          description: |-
            References to fields excluded from scanning. This allows you to skip
            inspection of entire columns which you know have no findings.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2FieldId"
          type: array
        identifyingFields:
          description: >-
            References to fields uniquely identifying rows within the table.

            Nested fields in the format, like `person.birthdate.year`, are allowed.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2FieldId"
          type: array
        rowsLimit:
          description: >-
            Max number of rows to scan. If the table has more rows than this
            value, the

            rest of the rows are omitted. If not set, or if set to 0, all rows will be

            scanned. Only one of rows_limit and rows_limit_percent can be specified.

            Cannot be used in conjunction with TimespanConfig.
          format: int64
          type: string
        rowsLimitPercent:
          description: >-
            Max percentage of rows to scan. The rest are omitted. The number of
            rows

            scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and

            100 means no limit. Defaults to 0. Only one of rows_limit and

            rows_limit_percent can be specified. Cannot be used in conjunction with

            TimespanConfig.
          format: int32
          type: integer
        sampleMethod:
          enum:
            - SAMPLE_METHOD_UNSPECIFIED
            - TOP
            - RANDOM_START
          type: string
        tableReference:
          $ref: "#/components/schemas/GooglePrivacyDlpV2BigQueryTable"
      type: object
    GooglePrivacyDlpV2BigQueryTable:
      description: >-
        Message defining the location of a BigQuery table. A table is uniquely

        identified  by its project_id, dataset_id, and table_name. Within a query

        a table is often referenced with a string in the format of:

        `<project_id>:<dataset_id>.<table_id>` or

        `<project_id>.<dataset_id>.<table_id>`.
      properties:
        datasetId:
          description: Dataset ID of the table.
          type: string
        projectId:
          description: >-
            The Google Cloud Platform project ID of the project containing the
            table.

            If omitted, project ID is inferred from the API call.
          type: string
        tableId:
          description: Name of the table.
          type: string
      type: object
    GooglePrivacyDlpV2BoundingBox:
      description: Bounding box encompassing detected text within an image.
      properties:
        height:
          description: Height of the bounding box in pixels.
          format: int32
          type: integer
        left:
          description: Left coordinate of the bounding box. (0,0) is upper left.
          format: int32
          type: integer
        top:
          description: Top coordinate of the bounding box. (0,0) is upper left.
          format: int32
          type: integer
        width:
          description: Width of the bounding box in pixels.
          format: int32
          type: integer
      type: object
    GooglePrivacyDlpV2Bucket:
      description: Bucket is represented as a range, along with replacement values.
      properties:
        max:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Value"
        min:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Value"
        replacementValue:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Value"
      type: object
    GooglePrivacyDlpV2BucketingConfig:
      description: >-
        Generalization function that buckets values based on ranges. The ranges
        and

        replacement values are dynamically provided by the user for custom behavior,

        such as 1-30 -> LOW 31-65 -> MEDIUM 66-100 -> HIGH

        This can be used on

        data of type: number, long, string, timestamp.

        If the bound `Value` type differs from the type of data being transformed, we

        will first attempt converting the type of the data to be transformed to match

        the type of the bound before comparing.

        See https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.
      properties:
        buckets:
          description: Set of buckets. Ranges must be non-overlapping.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2Bucket"
          type: array
      type: object
    GooglePrivacyDlpV2ByteContentItem:
      description: Container for bytes to inspect or redact.
      properties:
        data:
          description: Content data to inspect or redact.
          format: byte
          type: string
        type:
          description: The type of data stored in the bytes string. Default will be
            TEXT_UTF8.
          enum:
            - BYTES_TYPE_UNSPECIFIED
            - IMAGE
            - IMAGE_JPEG
            - IMAGE_BMP
            - IMAGE_PNG
            - IMAGE_SVG
            - TEXT_UTF8
            - AVRO
          type: string
      type: object
    GooglePrivacyDlpV2CancelDlpJobRequest:
      description: The request message for canceling a DLP job.
      properties: {}
      type: object
    GooglePrivacyDlpV2CategoricalStatsConfig:
      description: |-
        Compute numerical stats over an individual column, including
        number of distinct values and value count distribution.
      properties:
        field:
          $ref: "#/components/schemas/GooglePrivacyDlpV2FieldId"
      type: object
    GooglePrivacyDlpV2CategoricalStatsHistogramBucket:
      properties:
        bucketSize:
          description: Total number of values in this bucket.
          format: int64
          type: string
        bucketValueCount:
          description: Total number of distinct values in this bucket.
          format: int64
          type: string
        bucketValues:
          description: |-
            Sample of value frequencies in this bucket. The total number of
            values returned per bucket is capped at 20.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2ValueFrequency"
          type: array
        valueFrequencyLowerBound:
          description: Lower bound on the value frequency of the values in this bucket.
          format: int64
          type: string
        valueFrequencyUpperBound:
          description: Upper bound on the value frequency of the values in this bucket.
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2CategoricalStatsResult:
      description: Result of the categorical stats computation.
      properties:
        valueFrequencyHistogramBuckets:
          description: Histogram of value frequencies in the column.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2CategoricalStatsHistogram\
              Bucket"
          type: array
      type: object
    GooglePrivacyDlpV2CharacterMaskConfig:
      description: >-
        Partially mask a string by replacing a given number of characters with a

        fixed character. Masking can start from the beginning or end of the string.

        This can be used on data of any type (numbers, longs, and so on) and when

        de-identifying structured data we'll attempt to preserve the original data's

        type. (This allows you to take a long like 123 and modify it to a string like

        **3.
      properties:
        charactersToIgnore:
          description: >-
            When masking a string, items in this list will be skipped when
            replacing.

            For example, if your string is 555-555-5555 and you ask us to skip `-` and

            mask 5 chars with * we would produce ***-*55-5555.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2CharsToIgnore"
          type: array
        maskingCharacter:
          description: >-
            Character to mask the sensitive values&mdash;for example, "*" for an

            alphabetic string such as name, or "0" for a numeric string such as ZIP

            code or credit card number. String must have length 1. If not supplied, we

            will default to "*" for strings, 0 for digits.
          type: string
        numberToMask:
          description: |-
            Number of characters to mask. If not set, all matching chars will be
            masked. Skipped characters do not count towards this tally.
          format: int32
          type: integer
        reverseOrder:
          description: >-
            Mask characters in reverse order. For example, if
            `masking_character` is

            '0', number_to_mask is 14, and `reverse_order` is false, then

            1234-5678-9012-3456 -> 00000000000000-3456

            If `masking_character` is '*', `number_to_mask` is 3, and `reverse_order`

            is true, then 12345 -> 12***
          type: boolean
      type: object
    GooglePrivacyDlpV2CharsToIgnore:
      description: >-
        Characters to skip when doing deidentification of a value. These will be
        left

        alone and skipped.
      properties:
        charactersToSkip:
          type: string
        commonCharactersToIgnore:
          enum:
            - COMMON_CHARS_TO_IGNORE_UNSPECIFIED
            - NUMERIC
            - ALPHA_UPPER_CASE
            - ALPHA_LOWER_CASE
            - PUNCTUATION
            - WHITESPACE
          type: string
      type: object
    GooglePrivacyDlpV2CloudStorageFileSet:
      description: Message representing a set of files in Cloud Storage.
      properties:
        url:
          description: >-
            The url, in the format `gs://<bucket>/<path>`. Trailing wildcard in
            the

            path is allowed.
          type: string
      type: object
    GooglePrivacyDlpV2CloudStorageOptions:
      description: |-
        Options defining a file or a set of files within a Google Cloud Storage
        bucket.
      properties:
        bytesLimitPerFile:
          description: >-
            Max number of bytes to scan from a file. If a scanned file's size is
            bigger

            than this value then the rest of the bytes are omitted. Only one

            of bytes_limit_per_file and bytes_limit_per_file_percent can be specified.
          format: int64
          type: string
        bytesLimitPerFilePercent:
          description: >-
            Max percentage of bytes to scan from a file. The rest are omitted.
            The

            number of bytes scanned is rounded down. Must be between 0 and 100,

            inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one

            of bytes_limit_per_file and bytes_limit_per_file_percent can be specified.
          format: int32
          type: integer
        fileSet:
          $ref: "#/components/schemas/GooglePrivacyDlpV2FileSet"
        fileTypes:
          description: |-
            List of file type groups to include in the scan.
            If empty, all files are scanned and available data format processors
            are applied. In addition, the binary content of the selected files
            is always scanned as well.
          items:
            enum:
              - FILE_TYPE_UNSPECIFIED
              - BINARY_FILE
              - TEXT_FILE
              - IMAGE
              - AVRO
            type: string
          type: array
        filesLimitPercent:
          description: >-
            Limits the number of files to scan to this percentage of the input
            FileSet.

            Number of files scanned is rounded down. Must be between 0 and 100,

            inclusively. Both 0 and 100 means no limit. Defaults to 0.
          format: int32
          type: integer
        sampleMethod:
          enum:
            - SAMPLE_METHOD_UNSPECIFIED
            - TOP
            - RANDOM_START
          type: string
      type: object
    GooglePrivacyDlpV2CloudStoragePath:
      description: Message representing a single file or path in Cloud Storage.
      properties:
        path:
          description: |-
            A url representing a file or path (no wildcards) in Cloud Storage.
            Example: gs://[BUCKET_NAME]/dictionary.txt
          type: string
      type: object
    GooglePrivacyDlpV2CloudStorageRegexFileSet:
      description: >-
        Message representing a set of files in a Cloud Storage bucket. Regular

        expressions are used to allow fine-grained control over which files in the

        bucket to include.


        Included files are those that match at least one item in `include_regex` and

        do not match any items in `exclude_regex`. Note that a file that matches

        items from both lists will _not_ be included. For a match to occur, the

        entire file path (i.e., everything in the url after the bucket name) must

        match the regular expression.


        For example, given the input `{bucket_name: "mybucket", include_regex:

        ["directory1/.*"], exclude_regex:

        ["directory1/excluded.*"]}`:


        * `gs://mybucket/directory1/myfile` will be included

        * `gs://mybucket/directory1/directory2/myfile` will be included (`.*` matches

        across `/`)

        * `gs://mybucket/directory0/directory1/myfile` will _not_ be included (the

        full path doesn't match any items in `include_regex`)

        * `gs://mybucket/directory1/excludedfile` will _not_ be included (the path

        matches an item in `exclude_regex`)


        If `include_regex` is left empty, it will match all files by default

        (this is equivalent to setting `include_regex: [".*"]`).


        Some other common use cases:


        * `{bucket_name: "mybucket", exclude_regex: [".*\.pdf"]}` will include all

        files in `mybucket` except for .pdf files

        * `{bucket_name: "mybucket", include_regex: ["directory/[^/]+"]}` will

        include all files directly under `gs://mybucket/directory/`, without matching

        across `/`
      properties:
        bucketName:
          description: The name of a Cloud Storage bucket. Required.
          type: string
        excludeRegex:
          description: >-
            A list of regular expressions matching file paths to exclude. All
            files in

            the bucket that match at least one of these regular expressions will be

            excluded from the scan.


            Regular expressions use RE2

            [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found

            under the google/re2 repository on GitHub.
          items:
            type: string
          type: array
        includeRegex:
          description: >-
            A list of regular expressions matching file paths to include. All
            files in

            the bucket that match at least one of these regular expressions will be

            included in the set of files, except for those that also match an item in

            `exclude_regex`. Leaving this field empty will match all files by default

            (this is equivalent to including `.*` in the list).


            Regular expressions use RE2

            [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found

            under the google/re2 repository on GitHub.
          items:
            type: string
          type: array
      type: object
    GooglePrivacyDlpV2Color:
      description: Represents a color in the RGB color space.
      properties:
        blue:
          description: The amount of blue in the color as a value in the interval [0, 1].
          format: float
          type: number
        green:
          description: The amount of green in the color as a value in the interval [0, 1].
          format: float
          type: number
        red:
          description: The amount of red in the color as a value in the interval [0, 1].
          format: float
          type: number
      type: object
    GooglePrivacyDlpV2Condition:
      description: >-
        The field type of `value` and `field` do not need to match to be

        considered equal, but not all comparisons are possible.

        EQUAL_TO and NOT_EQUAL_TO attempt to compare even with incompatible types,

        but all other comparisons are invalid with incompatible types.

        A `value` of type:


        - `string` can be compared against all other types

        - `boolean` can only be compared against other booleans

        - `integer` can be compared against doubles or a string if the string value

        can be parsed as an integer.

        - `double` can be compared against integers or a string if the string can

        be parsed as a double.

        - `Timestamp` can be compared against strings in RFC 3339 date string

        format.

        - `TimeOfDay` can be compared against timestamps and strings in the format

        of 'HH:mm:ss'.


        If we fail to compare do to type mismatch, a warning will be given and

        the condition will evaluate to false.
      properties:
        field:
          $ref: "#/components/schemas/GooglePrivacyDlpV2FieldId"
        operator:
          description: Operator used to compare the field or infoType to the value.
            [required]
          enum:
            - RELATIONAL_OPERATOR_UNSPECIFIED
            - EQUAL_TO
            - NOT_EQUAL_TO
            - GREATER_THAN
            - LESS_THAN
            - GREATER_THAN_OR_EQUALS
            - LESS_THAN_OR_EQUALS
            - EXISTS
          type: string
        value:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Value"
      type: object
    GooglePrivacyDlpV2Conditions:
      description: A collection of conditions.
      properties:
        conditions:
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2Condition"
          type: array
      type: object
    GooglePrivacyDlpV2ContentItem:
      description: Container structure for the content to inspect.
      properties:
        byteItem:
          $ref: "#/components/schemas/GooglePrivacyDlpV2ByteContentItem"
        table:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Table"
        value:
          description: String data to inspect or redact.
          type: string
      type: object
    GooglePrivacyDlpV2ContentLocation:
      description: Findings container location data.
      properties:
        containerName:
          description: >-
            Name of the container where the finding is located.

            The top level name is the source file name or table name. Names of some

            common storage containers are formatted as follows:


            * BigQuery tables:  `<project_id>:<dataset_id>.<table_id>`

            * Cloud Storage files: `gs://<bucket>/<path>`

            * Datastore namespace: <namespace>


            Nested names could be absent if the embedded object has no string

            identifier (for an example an image contained within a document).
          type: string
        containerTimestamp:
          description: |-
            Findings container modification timestamp, if applicable.
            For Google Cloud Storage contains last file modification timestamp.
            For BigQuery table contains last_modified_time property.
            For Datastore - not populated.
          format: google-datetime
          type: string
        containerVersion:
          description: |-
            Findings container version, if available
            ("generation" for Google Cloud Storage).
          type: string
        documentLocation:
          $ref: "#/components/schemas/GooglePrivacyDlpV2DocumentLocation"
        imageLocation:
          $ref: "#/components/schemas/GooglePrivacyDlpV2ImageLocation"
        recordLocation:
          $ref: "#/components/schemas/GooglePrivacyDlpV2RecordLocation"
      type: object
    GooglePrivacyDlpV2CreateDeidentifyTemplateRequest:
      description: Request message for CreateDeidentifyTemplate.
      properties:
        deidentifyTemplate:
          $ref: "#/components/schemas/GooglePrivacyDlpV2DeidentifyTemplate"
        templateId:
          description: |-
            The template id can contain uppercase and lowercase letters,
            numbers, and hyphens; that is, it must match the regular
            expression: `[a-zA-Z\\d-_]+`. The maximum length is 100
            characters. Can be empty to allow the system to generate one.
          type: string
      type: object
    GooglePrivacyDlpV2CreateDlpJobRequest:
      description: |-
        Request message for CreateDlpJobRequest. Used to initiate long running
        jobs such as calculating risk metrics or inspecting Google Cloud
        Storage.
      properties:
        inspectJob:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InspectJobConfig"
        jobId:
          description: |-
            The job id can contain uppercase and lowercase letters,
            numbers, and hyphens; that is, it must match the regular
            expression: `[a-zA-Z\\d-_]+`. The maximum length is 100
            characters. Can be empty to allow the system to generate one.
          type: string
        riskJob:
          $ref: "#/components/schemas/GooglePrivacyDlpV2RiskAnalysisJobConfig"
      type: object
    GooglePrivacyDlpV2CreateInspectTemplateRequest:
      description: Request message for CreateInspectTemplate.
      properties:
        inspectTemplate:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InspectTemplate"
        templateId:
          description: |-
            The template id can contain uppercase and lowercase letters,
            numbers, and hyphens; that is, it must match the regular
            expression: `[a-zA-Z\\d-_]+`. The maximum length is 100
            characters. Can be empty to allow the system to generate one.
          type: string
      type: object
    GooglePrivacyDlpV2CreateJobTriggerRequest:
      description: Request message for CreateJobTrigger.
      properties:
        jobTrigger:
          $ref: "#/components/schemas/GooglePrivacyDlpV2JobTrigger"
        triggerId:
          description: |-
            The trigger id can contain uppercase and lowercase letters,
            numbers, and hyphens; that is, it must match the regular
            expression: `[a-zA-Z\\d-_]+`. The maximum length is 100
            characters. Can be empty to allow the system to generate one.
          type: string
      type: object
    GooglePrivacyDlpV2CreateStoredInfoTypeRequest:
      description: Request message for CreateStoredInfoType.
      properties:
        config:
          $ref: "#/components/schemas/GooglePrivacyDlpV2StoredInfoTypeConfig"
        storedInfoTypeId:
          description: |-
            The storedInfoType ID can contain uppercase and lowercase letters,
            numbers, and hyphens; that is, it must match the regular
            expression: `[a-zA-Z\\d-_]+`. The maximum length is 100
            characters. Can be empty to allow the system to generate one.
          type: string
      type: object
    GooglePrivacyDlpV2CryptoDeterministicConfig:
      description: >-
        Pseudonymization method that generates deterministic encryption for the
        given

        input. Outputs a base64 encoded representation of the encrypted output.

        Uses AES-SIV based on the RFC https://tools.ietf.org/html/rfc5297.
      properties:
        context:
          $ref: "#/components/schemas/GooglePrivacyDlpV2FieldId"
        cryptoKey:
          $ref: "#/components/schemas/GooglePrivacyDlpV2CryptoKey"
        surrogateInfoType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InfoType"
      type: object
    GooglePrivacyDlpV2CryptoHashConfig:
      description: >-
        Pseudonymization method that generates surrogates via cryptographic
        hashing.

        Uses SHA-256.

        The key size must be either 32 or 64 bytes.

        Outputs a base64 encoded representation of the hashed output

        (for example, L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=).

        Currently, only string and integer values can be hashed.

        See https://cloud.google.com/dlp/docs/pseudonymization to learn more.
      properties:
        cryptoKey:
          $ref: "#/components/schemas/GooglePrivacyDlpV2CryptoKey"
      type: object
    GooglePrivacyDlpV2CryptoKey:
      description: |-
        This is a data encryption key (DEK) (as opposed to
        a key encryption key (KEK) stored by KMS).
        When using KMS to wrap/unwrap DEKs, be sure to set an appropriate
        IAM policy on the KMS CryptoKey (KEK) to ensure an attacker cannot
        unwrap the data crypto key.
      properties:
        kmsWrapped:
          $ref: "#/components/schemas/GooglePrivacyDlpV2KmsWrappedCryptoKey"
        transient:
          $ref: "#/components/schemas/GooglePrivacyDlpV2TransientCryptoKey"
        unwrapped:
          $ref: "#/components/schemas/GooglePrivacyDlpV2UnwrappedCryptoKey"
      type: object
    GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig:
      description: >-
        Replaces an identifier with a surrogate using Format Preserving
        Encryption

        (FPE) with the FFX mode of operation; however when used in the

        `ReidentifyContent` API method, it serves the opposite function by reversing

        the surrogate back into the original identifier. The identifier must be

        encoded as ASCII. For a given crypto key and context, the same identifier

        will be replaced with the same surrogate. Identifiers must be at least two

        characters long. In the case that the identifier is the empty string, it will

        be skipped. See https://cloud.google.com/dlp/docs/pseudonymization to learn

        more.


        Note: We recommend using  CryptoDeterministicConfig for all use cases which

        do not require preserving the input alphabet space and size, plus warrant

        referential integrity.
      properties:
        commonAlphabet:
          enum:
            - FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED
            - NUMERIC
            - HEXADECIMAL
            - UPPER_CASE_ALPHA_NUMERIC
            - ALPHA_NUMERIC
          type: string
        context:
          $ref: "#/components/schemas/GooglePrivacyDlpV2FieldId"
        cryptoKey:
          $ref: "#/components/schemas/GooglePrivacyDlpV2CryptoKey"
        customAlphabet:
          description: |-
            This is supported by mapping these to the alphanumeric characters
            that the FFX mode natively supports. This happens before/after
            encryption/decryption.
            Each character listed must appear only once.
            Number of characters must be in the range [2, 62].
            This must be encoded as ASCII.
            The order of characters does not matter.
          type: string
        radix:
          description: The native way to select the alphabet. Must be in the range [2, 62].
          format: int32
          type: integer
        surrogateInfoType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InfoType"
      type: object
    GooglePrivacyDlpV2CustomInfoType:
      description: >-
        Custom information type provided by the user. Used to find
        domain-specific

        sensitive information configurable to the data in question.
      properties:
        detectionRules:
          description: >-
            Set of detection rules to apply to all findings of this
            CustomInfoType.

            Rules are applied in order that they are specified. Not supported for the

            `surrogate_type` CustomInfoType.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2DetectionRule"
          type: array
        dictionary:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Dictionary"
        exclusionType:
          description: >-
            If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a
            finding

            to be returned. It still can be used for rules matching.
          enum:
            - EXCLUSION_TYPE_UNSPECIFIED
            - EXCLUSION_TYPE_EXCLUDE
          type: string
        infoType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InfoType"
        likelihood:
          description: >-
            Likelihood to return for this CustomInfoType. This base value can be

            altered by a detection rule if the finding meets the criteria specified by

            the rule. Defaults to `VERY_LIKELY` if not specified.
          enum:
            - LIKELIHOOD_UNSPECIFIED
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
        regex:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Regex"
        storedType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2StoredType"
        surrogateType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2SurrogateType"
      type: object
    GooglePrivacyDlpV2DatastoreKey:
      description: Record key for a finding in Cloud Datastore.
      properties:
        entityKey:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Key"
      type: object
    GooglePrivacyDlpV2DatastoreOptions:
      description: Options defining a data set within Google Cloud Datastore.
      properties:
        kind:
          $ref: "#/components/schemas/GooglePrivacyDlpV2KindExpression"
        partitionId:
          $ref: "#/components/schemas/GooglePrivacyDlpV2PartitionId"
      type: object
    GooglePrivacyDlpV2DateShiftConfig:
      description: >-
        Shifts dates by random number of days, with option to be consistent for
        the

        same context. See https://cloud.google.com/dlp/docs/concepts-date-shifting

        to learn more.
      properties:
        context:
          $ref: "#/components/schemas/GooglePrivacyDlpV2FieldId"
        cryptoKey:
          $ref: "#/components/schemas/GooglePrivacyDlpV2CryptoKey"
        lowerBoundDays:
          description: |-
            For example, -5 means shift date to at most 5 days back in the past.
            [Required]
          format: int32
          type: integer
        upperBoundDays:
          description: >-
            Range of shift in days. Actual shift will be selected at random
            within this

            range (inclusive ends). Negative means shift to earlier in time. Must not

            be more than 365250 days (1000 years) each direction.


            For example, 3 means shift date to at most 3 days into the future.

            [Required]
          format: int32
          type: integer
      type: object
    GooglePrivacyDlpV2DateTime:
      description: |-
        Message for a date time object.
        e.g. 2018-01-01, 5th August.
      properties:
        date:
          $ref: "#/components/schemas/GoogleTypeDate"
        dayOfWeek:
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
          type: string
        time:
          $ref: "#/components/schemas/GoogleTypeTimeOfDay"
        timeZone:
          $ref: "#/components/schemas/GooglePrivacyDlpV2TimeZone"
      type: object
    GooglePrivacyDlpV2DeidentifyConfig:
      description: The configuration that controls how the data will change.
      properties:
        infoTypeTransformations:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InfoTypeTransformations"
        recordTransformations:
          $ref: "#/components/schemas/GooglePrivacyDlpV2RecordTransformations"
      type: object
    GooglePrivacyDlpV2DeidentifyContentRequest:
      description: Request to de-identify a list of items.
      properties:
        deidentifyConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2DeidentifyConfig"
        deidentifyTemplateName:
          description: >-
            Optional template to use. Any configuration directly specified in

            deidentify_config will override those set in the template. Singular fields

            that are set in this request will replace their corresponding fields in the

            template. Repeated fields are appended. Singular sub-messages and groups

            are recursively merged.
          type: string
        inspectConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InspectConfig"
        inspectTemplateName:
          description: >-
            Optional template to use. Any configuration directly specified in

            inspect_config will override those set in the template. Singular fields

            that are set in this request will replace their corresponding fields in the

            template. Repeated fields are appended. Singular sub-messages and groups

            are recursively merged.
          type: string
        item:
          $ref: "#/components/schemas/GooglePrivacyDlpV2ContentItem"
        location:
          description: >-
            The geographic location to process de-identification. Reserved for
            future

            extensions.
          type: string
      type: object
    GooglePrivacyDlpV2DeidentifyContentResponse:
      description: Results of de-identifying a ContentItem.
      properties:
        item:
          $ref: "#/components/schemas/GooglePrivacyDlpV2ContentItem"
        overview:
          $ref: "#/components/schemas/GooglePrivacyDlpV2TransformationOverview"
      type: object
    GooglePrivacyDlpV2DeidentifyTemplate:
      description: >-
        The DeidentifyTemplates contains instructions on how to deidentify
        content.

        See https://cloud.google.com/dlp/docs/concepts-templates to learn more.
      properties:
        createTime:
          description: The creation timestamp of a inspectTemplate, output only field.
          format: google-datetime
          type: string
        deidentifyConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2DeidentifyConfig"
        description:
          description: Short description (max 256 chars).
          type: string
        displayName:
          description: Display name (max 256 chars).
          type: string
        name:
          description: |-
            The template name. Output only.

            The template will have one of the following formats:
            `projects/PROJECT_ID/deidentifyTemplates/TEMPLATE_ID` OR
            `organizations/ORGANIZATION_ID/deidentifyTemplates/TEMPLATE_ID`
          type: string
        updateTime:
          description: The last update timestamp of a inspectTemplate, output only field.
          format: google-datetime
          type: string
      type: object
    GooglePrivacyDlpV2DeltaPresenceEstimationConfig:
      description: >-
        δ-presence metric, used to estimate how likely it is for an attacker to

        figure out that one given individual appears in a de-identified dataset.

        Similarly to the k-map metric, we cannot compute δ-presence exactly without

        knowing the attack dataset, so we use a statistical model instead.
      properties:
        auxiliaryTables:
          description: >-
            Several auxiliary tables can be used in the analysis. Each
            custom_tag

            used to tag a quasi-identifiers field must appear in exactly one

            field of one auxiliary table.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2StatisticalTable"
          type: array
        quasiIds:
          description: >-
            Fields considered to be quasi-identifiers. No two fields can have
            the

            same tag. [required]
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2QuasiId"
          type: array
        regionCode:
          description: >-
            ISO 3166-1 alpha-2 region code to use in the statistical modeling.

            Required if no column is tagged with a region-specific InfoType (like

            US_ZIP_5) or a region code.
          type: string
      type: object
    GooglePrivacyDlpV2DeltaPresenceEstimationHistogramBucket:
      description: >-
        A DeltaPresenceEstimationHistogramBucket message with the following

        values:
          min_probability: 0.1
          max_probability: 0.2
          frequency: 42
        means that there are 42 records for which δ is in [0.1, 0.2). An

        important particular case is when min_probability = max_probability = 1:

        then, every individual who shares this quasi-identifier combination is in

        the dataset.
      properties:
        bucketSize:
          description: Number of records within these probability bounds.
          format: int64
          type: string
        bucketValueCount:
          description: Total number of distinct quasi-identifier tuple values in this
            bucket.
          format: int64
          type: string
        bucketValues:
          description: |-
            Sample of quasi-identifier tuple values in this bucket. The total
            number of classes returned per bucket is capped at 20.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2DeltaPresenceEstimationQu\
              asiIdValues"
          type: array
        maxProbability:
          description: Always greater than or equal to min_probability.
          format: double
          type: number
        minProbability:
          description: Between 0 and 1.
          format: double
          type: number
      type: object
    GooglePrivacyDlpV2DeltaPresenceEstimationQuasiIdValues:
      description: A tuple of values for the quasi-identifier columns.
      properties:
        estimatedProbability:
          description: >-
            The estimated probability that a given individual sharing these

            quasi-identifier values is in the dataset. This value, typically called

            δ, is the ratio between the number of records in the dataset with these

            quasi-identifier values, and the total number of individuals (inside

            *and* outside the dataset) with these quasi-identifier values.

            For example, if there are 15 individuals in the dataset who share the

            same quasi-identifier values, and an estimated 100 people in the entire

            population with these values, then δ is 0.15.
          format: double
          type: number
        quasiIdsValues:
          description: The quasi-identifier values.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2Value"
          type: array
      type: object
    GooglePrivacyDlpV2DeltaPresenceEstimationResult:
      description: |-
        Result of the δ-presence computation. Note that these results are an
        estimation, not exact values.
      properties:
        deltaPresenceEstimationHistogram:
          description: >-
            The intervals [min_probability, max_probability) do not overlap. If
            a

            value doesn't correspond to any such interval, the associated frequency

            is zero. For example, the following records:
              {min_probability: 0, max_probability: 0.1, frequency: 17}
              {min_probability: 0.2, max_probability: 0.3, frequency: 42}
              {min_probability: 0.3, max_probability: 0.4, frequency: 99}
            mean that there are no record with an estimated probability in [0.1, 0.2)

            nor larger or equal to 0.4.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2DeltaPresenceEstimationHi\
              stogramBucket"
          type: array
      type: object
    GooglePrivacyDlpV2DetectionRule:
      description: >-
        Deprecated; use `InspectionRuleSet` instead. Rule for modifying a

        `CustomInfoType` to alter behavior under certain circumstances, depending

        on the specific details of the rule. Not supported for the `surrogate_type`

        custom infoType.
      properties:
        hotwordRule:
          $ref: "#/components/schemas/GooglePrivacyDlpV2HotwordRule"
      type: object
    GooglePrivacyDlpV2Dictionary:
      description: >-
        Custom information type based on a dictionary of words or phrases. This
        can

        be used to match sensitive information specific to the data, such as a list

        of employee IDs or job titles.


        Dictionary words are case-insensitive and all characters other than letters

        and digits in the unicode [Basic Multilingual

        Plane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane)

        will be replaced with whitespace when scanning for matches, so the

        dictionary phrase "Sam Johnson" will match all three phrases "sam johnson",

        "Sam, Johnson", and "Sam (Johnson)". Additionally, the characters

        surrounding any match must be of a different type than the adjacent

        characters within the word, so letters must be next to non-letters and

        digits next to non-digits. For example, the dictionary word "jen" will

        match the first three letters of the text "jen123" but will return no

        matches for "jennifer".


        Dictionary words containing a large number of characters that are not

        letters or digits may result in unexpected findings because such characters

        are treated as whitespace. The

        [limits](https://cloud.google.com/dlp/limits) page contains details about

        the size limits of dictionaries. For dictionaries that do not fit within

        these constraints, consider using `LargeCustomDictionaryConfig` in the

        `StoredInfoType` API.
      properties:
        cloudStoragePath:
          $ref: "#/components/schemas/GooglePrivacyDlpV2CloudStoragePath"
        wordList:
          $ref: "#/components/schemas/GooglePrivacyDlpV2WordList"
      type: object
    GooglePrivacyDlpV2DlpJob:
      description: Combines all of the information about a DLP job.
      properties:
        createTime:
          description: Time when the job was created.
          format: google-datetime
          type: string
        endTime:
          description: Time when the job finished.
          format: google-datetime
          type: string
        errors:
          description: A stream of errors encountered running the job.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2Error"
          type: array
        inspectDetails:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InspectDataSourceDetails"
        jobTriggerName:
          description: |-
            If created by a job trigger, the resource name of the trigger that
            instantiated the job.
          type: string
        name:
          description: The server-assigned name.
          type: string
        riskDetails:
          $ref: "#/components/schemas/GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails"
        startTime:
          description: Time when the job started.
          format: google-datetime
          type: string
        state:
          description: State of a job.
          enum:
            - JOB_STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - DONE
            - CANCELED
            - FAILED
          type: string
        type:
          description: The type of job.
          enum:
            - DLP_JOB_TYPE_UNSPECIFIED
            - INSPECT_JOB
            - RISK_ANALYSIS_JOB
          type: string
      type: object
    GooglePrivacyDlpV2DocumentLocation:
      description: Location of a finding within a document.
      properties:
        fileOffset:
          description: >-
            Offset of the line, from the beginning of the file, where the
            finding

            is located.
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2EntityId:
      description: >-
        An entity in a dataset is a field or set of fields that correspond to a

        single person. For example, in medical records the `EntityId` might be a

        patient identifier, or for financial records it might be an account

        identifier. This message is used when generalizations or analysis must take

        into account that multiple rows correspond to the same entity.
      properties:
        field:
          $ref: "#/components/schemas/GooglePrivacyDlpV2FieldId"
      type: object
    GooglePrivacyDlpV2Error:
      description: |-
        Details information about an error encountered during job execution or
        the results of an unsuccessful activation of the JobTrigger.
        Output only field.
      properties:
        details:
          $ref: "#/components/schemas/GoogleRpcStatus"
        timestamps:
          description: The times the error occurred.
          items:
            format: google-datetime
            type: string
          type: array
      type: object
    GooglePrivacyDlpV2ExcludeInfoTypes:
      description: List of exclude infoTypes.
      properties:
        infoTypes:
          description: >-
            InfoType list in ExclusionRule rule drops a finding when it overlaps
            or

            contained within with a finding of an infoType from this list. For

            example, for `InspectionRuleSet.info_types` containing "PHONE_NUMBER"` and

            `exclusion_rule` containing `exclude_info_types.info_types` with

            "EMAIL_ADDRESS" the phone number findings are dropped if they overlap

            with EMAIL_ADDRESS finding.

            That leads to "555-222-2222@example.org" to generate only a single

            finding, namely email address.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2InfoType"
          type: array
      type: object
    GooglePrivacyDlpV2ExclusionRule:
      description: >-
        The rule that specifies conditions when findings of infoTypes specified
        in

        `InspectionRuleSet` are removed from results.
      properties:
        dictionary:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Dictionary"
        excludeInfoTypes:
          $ref: "#/components/schemas/GooglePrivacyDlpV2ExcludeInfoTypes"
        matchingType:
          description: How the rule is applied, see MatchingType documentation for details.
          enum:
            - MATCHING_TYPE_UNSPECIFIED
            - MATCHING_TYPE_FULL_MATCH
            - MATCHING_TYPE_PARTIAL_MATCH
            - MATCHING_TYPE_INVERSE_MATCH
          type: string
        regex:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Regex"
      type: object
    GooglePrivacyDlpV2Expressions:
      description: An expression, consisting or an operator and conditions.
      properties:
        conditions:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Conditions"
        logicalOperator:
          description: >-
            The operator to apply to the result of conditions. Default and
            currently

            only supported value is `AND`.
          enum:
            - LOGICAL_OPERATOR_UNSPECIFIED
            - AND
          type: string
      type: object
    GooglePrivacyDlpV2FieldId:
      description: General identifier of a data field in a storage service.
      properties:
        name:
          description: Name describing the field.
          type: string
      type: object
    GooglePrivacyDlpV2FieldTransformation:
      description: The transformation to apply to the field.
      properties:
        condition:
          $ref: "#/components/schemas/GooglePrivacyDlpV2RecordCondition"
        fields:
          description: Input field(s) to apply the transformation to. [required]
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2FieldId"
          type: array
        infoTypeTransformations:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InfoTypeTransformations"
        primitiveTransformation:
          $ref: "#/components/schemas/GooglePrivacyDlpV2PrimitiveTransformation"
      type: object
    GooglePrivacyDlpV2FileSet:
      description: Set of files to scan.
      properties:
        regexFileSet:
          $ref: "#/components/schemas/GooglePrivacyDlpV2CloudStorageRegexFileSet"
        url:
          description: >-
            The Cloud Storage url of the file(s) to scan, in the format

            `gs://<bucket>/<path>`. Trailing wildcard in the path is allowed.


            If the url ends in a trailing slash, the bucket or directory represented

            by the url will be scanned non-recursively (content in sub-directories

            will not be scanned). This means that `gs://mybucket/` is equivalent to

            `gs://mybucket/*`, and `gs://mybucket/directory/` is equivalent to

            `gs://mybucket/directory/*`.


            Exactly one of `url` or `regex_file_set` must be set.
          type: string
      type: object
    GooglePrivacyDlpV2Finding:
      description: Represents a piece of potentially sensitive content.
      properties:
        createTime:
          description: Timestamp when finding was detected.
          format: google-datetime
          type: string
        infoType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InfoType"
        likelihood:
          description: Confidence of how likely it is that the `info_type` is correct.
          enum:
            - LIKELIHOOD_UNSPECIFIED
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
        location:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Location"
        quote:
          description: >-
            The content that was found. Even if the content is not textual, it

            may be converted to a textual representation here.

            Provided if `include_quote` is true and the finding is

            less than or equal to 4096 bytes long. If the finding exceeds 4096 bytes

            in length, the quote may be omitted.
          type: string
        quoteInfo:
          $ref: "#/components/schemas/GooglePrivacyDlpV2QuoteInfo"
      type: object
    GooglePrivacyDlpV2FindingLimits:
      properties:
        maxFindingsPerInfoType:
          description: Configuration of findings limit given for specified infoTypes.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2InfoTypeLimit"
          type: array
        maxFindingsPerItem:
          description: |-
            Max number of findings that will be returned for each item scanned.
            When set within `InspectDataSourceRequest`,
            the maximum returned is 2000 regardless if this is set higher.
            When set within `InspectContentRequest`, this field is ignored.
          format: int32
          type: integer
        maxFindingsPerRequest:
          description: >-
            Max number of findings that will be returned per request/job.

            When set within `InspectContentRequest`, the maximum returned is 2000

            regardless if this is set higher.
          format: int32
          type: integer
      type: object
    GooglePrivacyDlpV2FixedSizeBucketingConfig:
      description: >-
        Buckets values based on fixed size ranges. The

        Bucketing transformation can provide all of this functionality,

        but requires more configuration. This message is provided as a convenience to

        the user for simple bucketing strategies.


        The transformed value will be a hyphenated string of

        <lower_bound>-<upper_bound>, i.e if lower_bound = 10 and upper_bound = 20

        all values that are within this bucket will be replaced with "10-20".


        This can be used on data of type: double, long.


        If the bound Value type differs from the type of data

        being transformed, we will first attempt converting the type of the data to

        be transformed to match the type of the bound before comparing.


        See https://cloud.google.com/dlp/docs/concepts-bucketing to learn more.
      properties:
        bucketSize:
          description: >-
            Size of each bucket (except for minimum and maximum buckets). So if

            `lower_bound` = 10, `upper_bound` = 89, and `bucket_size` = 10, then the

            following buckets would be used: -10, 10-20, 20-30, 30-40, 40-50, 50-60,

            60-70, 70-80, 80-89, 89+. Precision up to 2 decimals works. [Required].
          format: double
          type: number
        lowerBound:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Value"
        upperBound:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Value"
      type: object
    GooglePrivacyDlpV2HotwordRule:
      description: |-
        The rule that adjusts the likelihood of findings within a certain
        proximity of hotwords.
      properties:
        hotwordRegex:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Regex"
        likelihoodAdjustment:
          $ref: "#/components/schemas/GooglePrivacyDlpV2LikelihoodAdjustment"
        proximity:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Proximity"
      type: object
    GooglePrivacyDlpV2ImageLocation:
      description: Location of the finding within an image.
      properties:
        boundingBoxes:
          description: Bounding boxes locating the pixels within the image containing the
            finding.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2BoundingBox"
          type: array
      type: object
    GooglePrivacyDlpV2ImageRedactionConfig:
      description: Configuration for determining how redaction of images should occur.
      properties:
        infoType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InfoType"
        redactAllText:
          description: >-
            If true, all text found in the image, regardless whether it matches
            an

            info_type, is redacted. Only one should be provided.
          type: boolean
        redactionColor:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Color"
      type: object
    GooglePrivacyDlpV2InfoType:
      description: Type of information detected by the API.
      properties:
        name:
          description: >-
            Name of the information type. Either a name of your choosing when

            creating a CustomInfoType, or one of the names listed

            at https://cloud.google.com/dlp/docs/infotypes-reference when specifying

            a built-in type. InfoType names should conform to the pattern

            [a-zA-Z0-9_]{1,64}.
          type: string
      type: object
    GooglePrivacyDlpV2InfoTypeDescription:
      description: InfoType description.
      properties:
        description:
          description: >-
            Description of the infotype. Translated when language is provided in
            the

            request.
          type: string
        displayName:
          description: Human readable form of the infoType name.
          type: string
        name:
          description: Internal name of the infoType.
          type: string
        supportedBy:
          description: Which parts of the API supports this InfoType.
          items:
            enum:
              - ENUM_TYPE_UNSPECIFIED
              - INSPECT
              - RISK_ANALYSIS
            type: string
          type: array
      type: object
    GooglePrivacyDlpV2InfoTypeLimit:
      description: |-
        Max findings configuration per infoType, per content item or long
        running DlpJob.
      properties:
        infoType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InfoType"
        maxFindings:
          description: Max findings limit for the given infoType.
          format: int32
          type: integer
      type: object
    GooglePrivacyDlpV2InfoTypeStats:
      description: Statistics regarding a specific InfoType.
      properties:
        count:
          description: Number of findings for this infoType.
          format: int64
          type: string
        infoType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InfoType"
      type: object
    GooglePrivacyDlpV2InfoTypeTransformation:
      description: |-
        A transformation to apply to text that is identified as a specific
        info_type.
      properties:
        infoTypes:
          description: |-
            InfoTypes to apply the transformation to. An empty list will cause
            this transformation to apply to all findings that correspond to
            infoTypes that were requested in `InspectConfig`.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2InfoType"
          type: array
        primitiveTransformation:
          $ref: "#/components/schemas/GooglePrivacyDlpV2PrimitiveTransformation"
      type: object
    GooglePrivacyDlpV2InfoTypeTransformations:
      description: >-
        A type of transformation that will scan unstructured text and

        apply various `PrimitiveTransformation`s to each finding, where the

        transformation is applied to only values that were identified as a specific

        info_type.
      properties:
        transformations:
          description: |-
            Transformation for each infoType. Cannot specify more than one
            for a given infoType. [required]
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2InfoTypeTransformation"
          type: array
      type: object
    GooglePrivacyDlpV2InspectConfig:
      description: >-
        Configuration description of the scanning process.

        When used with redactContent only info_types and min_likelihood are currently

        used.
      properties:
        contentOptions:
          description: |-
            List of options defining data content to scan.
            If empty, text, images, and other content will be included.
          items:
            enum:
              - CONTENT_UNSPECIFIED
              - CONTENT_TEXT
              - CONTENT_IMAGE
            type: string
          type: array
        customInfoTypes:
          description: >-
            CustomInfoTypes provided by the user. See

            https://cloud.google.com/dlp/docs/creating-custom-infotypes to learn more.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2CustomInfoType"
          type: array
        excludeInfoTypes:
          description: When true, excludes type information of the findings.
          type: boolean
        includeQuote:
          description: >-
            When true, a contextual quote from the data that triggered a finding
            is

            included in the response; see Finding.quote.
          type: boolean
        infoTypes:
          description: >-
            Restricts what info_types to look for. The values must correspond to

            InfoType values returned by ListInfoTypes or listed at

            https://cloud.google.com/dlp/docs/infotypes-reference.


            When no InfoTypes or CustomInfoTypes are specified in a request, the

            system may automatically choose what detectors to run. By default this may

            be all types, but may change over time as detectors are updated.


            If you need precise control and predictability as to what detectors are

            run you should specify specific InfoTypes listed in the reference,

            otherwise a default list will be used, which may change over time.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2InfoType"
          type: array
        limits:
          $ref: "#/components/schemas/GooglePrivacyDlpV2FindingLimits"
        minLikelihood:
          description: |-
            Only returns findings equal or above this threshold. The default is
            POSSIBLE.
            See https://cloud.google.com/dlp/docs/likelihood to learn more.
          enum:
            - LIKELIHOOD_UNSPECIFIED
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
        ruleSet:
          description: >-
            Set of rules to apply to the findings for this InspectConfig.

            Exclusion rules, contained in the set are executed in the end, other

            rules are executed in the order they are specified for each info type.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2InspectionRuleSet"
          type: array
      type: object
    GooglePrivacyDlpV2InspectContentRequest:
      description: Request to search for potentially sensitive info in a ContentItem.
      properties:
        inspectConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InspectConfig"
        inspectTemplateName:
          description: >-
            Optional template to use. Any configuration directly specified in

            inspect_config will override those set in the template. Singular fields

            that are set in this request will replace their corresponding fields in the

            template. Repeated fields are appended. Singular sub-messages and groups

            are recursively merged.
          type: string
        item:
          $ref: "#/components/schemas/GooglePrivacyDlpV2ContentItem"
        location:
          description: >-
            The geographic location to process content inspection. Reserved for
            future

            extensions.
          type: string
      type: object
    GooglePrivacyDlpV2InspectContentResponse:
      description: Results of inspecting an item.
      properties:
        result:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InspectResult"
      type: object
    GooglePrivacyDlpV2InspectDataSourceDetails:
      description: The results of an inspect DataSource job.
      properties:
        requestedOptions:
          $ref: "#/components/schemas/GooglePrivacyDlpV2RequestedOptions"
        result:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Result"
      type: object
    GooglePrivacyDlpV2InspectJobConfig:
      properties:
        actions:
          description: Actions to execute at the completion of the job.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2Action"
          type: array
        inspectConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InspectConfig"
        inspectTemplateName:
          description: >-
            If provided, will be used as the default for all values in
            InspectConfig.

            `inspect_config` will be merged into the values persisted as part of the

            template.
          type: string
        storageConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2StorageConfig"
      type: object
    GooglePrivacyDlpV2InspectResult:
      description: All the findings for a single scanned item.
      properties:
        findings:
          description: List of findings for an item.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2Finding"
          type: array
        findingsTruncated:
          description: >-
            If true, then this item might have more findings than were returned,

            and the findings returned are an arbitrary subset of all findings.

            The findings list might be truncated because the input items were too

            large, or because the server reached the maximum amount of resources

            allowed for a single API call. For best results, divide the input into

            smaller batches.
          type: boolean
      type: object
    GooglePrivacyDlpV2InspectTemplate:
      description: >-
        The inspectTemplate contains a configuration (set of types of sensitive
        data

        to be detected) to be used anywhere you otherwise would normally specify

        InspectConfig. See https://cloud.google.com/dlp/docs/concepts-templates

        to learn more.
      properties:
        createTime:
          description: The creation timestamp of a inspectTemplate, output only field.
          format: google-datetime
          type: string
        description:
          description: Short description (max 256 chars).
          type: string
        displayName:
          description: Display name (max 256 chars).
          type: string
        inspectConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InspectConfig"
        name:
          description: |-
            The template name. Output only.

            The template will have one of the following formats:
            `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR
            `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`
          type: string
        updateTime:
          description: The last update timestamp of a inspectTemplate, output only field.
          format: google-datetime
          type: string
      type: object
    GooglePrivacyDlpV2InspectionRule:
      description: |-
        A single inspection rule to be applied to infoTypes, specified in
        `InspectionRuleSet`.
      properties:
        exclusionRule:
          $ref: "#/components/schemas/GooglePrivacyDlpV2ExclusionRule"
        hotwordRule:
          $ref: "#/components/schemas/GooglePrivacyDlpV2HotwordRule"
      type: object
    GooglePrivacyDlpV2InspectionRuleSet:
      description: >-
        Rule set for modifying a set of infoTypes to alter behavior under
        certain

        circumstances, depending on the specific details of the rules within the set.
      properties:
        infoTypes:
          description: List of infoTypes this rule set is applied to.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2InfoType"
          type: array
        rules:
          description: Set of rules to be applied to infoTypes. The rules are applied in
            order.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2InspectionRule"
          type: array
      type: object
    GooglePrivacyDlpV2JobNotificationEmails:
      description: |-
        Enable email notification to project owners and editors on jobs's
        completion/failure.
      properties: {}
      type: object
    GooglePrivacyDlpV2JobTrigger:
      description: >-
        Contains a configuration to make dlp api calls on a repeating basis.

        See https://cloud.google.com/dlp/docs/concepts-job-triggers to learn more.
      properties:
        createTime:
          description: The creation timestamp of a triggeredJob, output only field.
          format: google-datetime
          type: string
        description:
          description: User provided description (max 256 chars)
          type: string
        displayName:
          description: Display name (max 100 chars)
          type: string
        errors:
          description: >-
            A stream of errors encountered when the trigger was activated.
            Repeated

            errors may result in the JobTrigger automatically being paused.

            Will return the last 100 errors. Whenever the JobTrigger is modified

            this list will be cleared. Output only field.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2Error"
          type: array
        inspectJob:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InspectJobConfig"
        lastRunTime:
          description: The timestamp of the last time this trigger executed, output only
            field.
          format: google-datetime
          type: string
        name:
          description: >-
            Unique resource name for the triggeredJob, assigned by the service
            when the

            triggeredJob is created, for example

            `projects/dlp-test-project/jobTriggers/53234423`.
          type: string
        status:
          description: A status for this trigger. [required]
          enum:
            - STATUS_UNSPECIFIED
            - HEALTHY
            - PAUSED
            - CANCELLED
          type: string
        triggers:
          description: >-
            A list of triggers which will be OR'ed together. Only one in the
            list

            needs to trigger for a job to be started. The list may contain only

            a single Schedule trigger and must have at least one object.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2Trigger"
          type: array
        updateTime:
          description: The last update timestamp of a triggeredJob, output only field.
          format: google-datetime
          type: string
      type: object
    GooglePrivacyDlpV2KAnonymityConfig:
      description: k-anonymity metric, used for analysis of reidentification risk.
      properties:
        entityId:
          $ref: "#/components/schemas/GooglePrivacyDlpV2EntityId"
        quasiIds:
          description: >-
            Set of fields to compute k-anonymity over. When multiple fields are

            specified, they are considered a single composite key. Structs and

            repeated data types are not supported; however, nested fields are

            supported so long as they are not structs themselves or nested within

            a repeated field.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2FieldId"
          type: array
      type: object
    GooglePrivacyDlpV2KAnonymityEquivalenceClass:
      description: The set of columns' values that share the same ldiversity value
      properties:
        equivalenceClassSize:
          description: |-
            Size of the equivalence class, for example number of rows with the
            above set of values.
          format: int64
          type: string
        quasiIdsValues:
          description: |-
            Set of values defining the equivalence class. One value per
            quasi-identifier column in the original KAnonymity metric message.
            The order is always the same as the original request.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2Value"
          type: array
      type: object
    GooglePrivacyDlpV2KAnonymityHistogramBucket:
      properties:
        bucketSize:
          description: Total number of equivalence classes in this bucket.
          format: int64
          type: string
        bucketValueCount:
          description: Total number of distinct equivalence classes in this bucket.
          format: int64
          type: string
        bucketValues:
          description: |-
            Sample of equivalence classes in this bucket. The total number of
            classes returned per bucket is capped at 20.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2KAnonymityEquivalenceClass"
          type: array
        equivalenceClassSizeLowerBound:
          description: Lower bound on the size of the equivalence classes in this bucket.
          format: int64
          type: string
        equivalenceClassSizeUpperBound:
          description: Upper bound on the size of the equivalence classes in this bucket.
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2KAnonymityResult:
      description: Result of the k-anonymity computation.
      properties:
        equivalenceClassHistogramBuckets:
          description: Histogram of k-anonymity equivalence classes.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2KAnonymityHistogramBucket"
          type: array
      type: object
    GooglePrivacyDlpV2KMapEstimationConfig:
      description: >-
        Reidentifiability metric. This corresponds to a risk model similar to
        what

        is called "journalist risk" in the literature, except the attack dataset is

        statistically modeled instead of being perfectly known. This can be done

        using publicly available data (like the US Census), or using a custom

        statistical model (indicated as one or several BigQuery tables), or by

        extrapolating from the distribution of values in the input dataset.

        A column with a semantic tag attached.
      properties:
        auxiliaryTables:
          description: >-
            Several auxiliary tables can be used in the analysis. Each
            custom_tag

            used to tag a quasi-identifiers column must appear in exactly one column

            of one auxiliary table.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2AuxiliaryTable"
          type: array
        quasiIds:
          description: >-
            Fields considered to be quasi-identifiers. No two columns can have
            the

            same tag. [required]
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2TaggedField"
          type: array
        regionCode:
          description: >-
            ISO 3166-1 alpha-2 region code to use in the statistical modeling.

            Required if no column is tagged with a region-specific InfoType (like

            US_ZIP_5) or a region code.
          type: string
      type: object
    GooglePrivacyDlpV2KMapEstimationHistogramBucket:
      description: |-
        A KMapEstimationHistogramBucket message with the following values:
          min_anonymity: 3
          max_anonymity: 5
          frequency: 42
        means that there are 42 records whose quasi-identifier values correspond
        to 3, 4 or 5 people in the overlying population. An important particular
        case is when min_anonymity = max_anonymity = 1: the frequency field then
        corresponds to the number of uniquely identifiable records.
      properties:
        bucketSize:
          description: Number of records within these anonymity bounds.
          format: int64
          type: string
        bucketValueCount:
          description: Total number of distinct quasi-identifier tuple values in this
            bucket.
          format: int64
          type: string
        bucketValues:
          description: |-
            Sample of quasi-identifier tuple values in this bucket. The total
            number of classes returned per bucket is capped at 20.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2KMapEstimationQuasiIdValu\
              es"
          type: array
        maxAnonymity:
          description: Always greater than or equal to min_anonymity.
          format: int64
          type: string
        minAnonymity:
          description: Always positive.
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2KMapEstimationQuasiIdValues:
      description: A tuple of values for the quasi-identifier columns.
      properties:
        estimatedAnonymity:
          description: The estimated anonymity for these quasi-identifier values.
          format: int64
          type: string
        quasiIdsValues:
          description: The quasi-identifier values.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2Value"
          type: array
      type: object
    GooglePrivacyDlpV2KMapEstimationResult:
      description: |-
        Result of the reidentifiability analysis. Note that these results are an
        estimation, not exact values.
      properties:
        kMapEstimationHistogram:
          description: >-
            The intervals [min_anonymity, max_anonymity] do not overlap. If a
            value

            doesn't correspond to any such interval, the associated frequency is

            zero. For example, the following records:
              {min_anonymity: 1, max_anonymity: 1, frequency: 17}
              {min_anonymity: 2, max_anonymity: 3, frequency: 42}
              {min_anonymity: 5, max_anonymity: 10, frequency: 99}
            mean that there are no record with an estimated anonymity of 4, 5, or

            larger than 10.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2KMapEstimationHistogramBu\
              cket"
          type: array
      type: object
    GooglePrivacyDlpV2Key:
      description: |-
        A unique identifier for a Datastore entity.
        If a key's partition ID or any of its path kinds or names are
        reserved/read-only, the key is reserved/read-only.
        A reserved/read-only key is forbidden in certain documented contexts.
      properties:
        partitionId:
          $ref: "#/components/schemas/GooglePrivacyDlpV2PartitionId"
        path:
          description: >-
            The entity path.

            An entity path consists of one or more elements composed of a kind and a

            string or numerical identifier, which identify entities. The first

            element identifies a _root entity_, the second element identifies

            a _child_ of the root entity, the third element identifies a child of the

            second entity, and so forth. The entities identified by all prefixes of

            the path are called the element's _ancestors_.


            A path can never be empty, and a path can have at most 100 elements.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2PathElement"
          type: array
      type: object
    GooglePrivacyDlpV2KindExpression:
      description: A representation of a Datastore kind.
      properties:
        name:
          description: The name of the kind.
          type: string
      type: object
    GooglePrivacyDlpV2KmsWrappedCryptoKey:
      description: >-
        Include to use an existing data crypto key wrapped by KMS.

        The wrapped key must be a 128/192/256 bit key.

        Authorization requires the following IAM permissions when sending a request

        to perform a crypto transformation using a kms-wrapped crypto key:

        dlp.kms.encrypt
      properties:
        cryptoKeyName:
          description: The resource name of the KMS CryptoKey to use for unwrapping.
            [required]
          type: string
        wrappedKey:
          description: The wrapped data crypto key. [required]
          format: byte
          type: string
      type: object
    GooglePrivacyDlpV2LDiversityConfig:
      description: l-diversity metric, used for analysis of reidentification risk.
      properties:
        quasiIds:
          description: |-
            Set of quasi-identifiers indicating how equivalence classes are
            defined for the l-diversity computation. When multiple fields are
            specified, they are considered a single composite key.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2FieldId"
          type: array
        sensitiveAttribute:
          $ref: "#/components/schemas/GooglePrivacyDlpV2FieldId"
      type: object
    GooglePrivacyDlpV2LDiversityEquivalenceClass:
      description: The set of columns' values that share the same ldiversity value.
      properties:
        equivalenceClassSize:
          description: Size of the k-anonymity equivalence class.
          format: int64
          type: string
        numDistinctSensitiveValues:
          description: Number of distinct sensitive values in this equivalence class.
          format: int64
          type: string
        quasiIdsValues:
          description: |-
            Quasi-identifier values defining the k-anonymity equivalence
            class. The order is always the same as the original request.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2Value"
          type: array
        topSensitiveValues:
          description: Estimated frequencies of top sensitive values.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2ValueFrequency"
          type: array
      type: object
    GooglePrivacyDlpV2LDiversityHistogramBucket:
      properties:
        bucketSize:
          description: Total number of equivalence classes in this bucket.
          format: int64
          type: string
        bucketValueCount:
          description: Total number of distinct equivalence classes in this bucket.
          format: int64
          type: string
        bucketValues:
          description: |-
            Sample of equivalence classes in this bucket. The total number of
            classes returned per bucket is capped at 20.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2LDiversityEquivalenceClass"
          type: array
        sensitiveValueFrequencyLowerBound:
          description: |-
            Lower bound on the sensitive value frequencies of the equivalence
            classes in this bucket.
          format: int64
          type: string
        sensitiveValueFrequencyUpperBound:
          description: |-
            Upper bound on the sensitive value frequencies of the equivalence
            classes in this bucket.
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2LDiversityResult:
      description: Result of the l-diversity computation.
      properties:
        sensitiveValueFrequencyHistogramBuckets:
          description: Histogram of l-diversity equivalence class sensitive value
            frequencies.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2LDiversityHistogramBucket"
          type: array
      type: object
    GooglePrivacyDlpV2LargeCustomDictionaryConfig:
      description: >-
        Configuration for a custom dictionary created from a data source of any
        size

        up to the maximum size defined in the

        [limits](https://cloud.google.com/dlp/limits) page. The artifacts of

        dictionary creation are stored in the specified Google Cloud Storage

        location. Consider using `CustomInfoType.Dictionary` for smaller dictionaries

        that satisfy the size requirements.
      properties:
        bigQueryField:
          $ref: "#/components/schemas/GooglePrivacyDlpV2BigQueryField"
        cloudStorageFileSet:
          $ref: "#/components/schemas/GooglePrivacyDlpV2CloudStorageFileSet"
        outputPath:
          $ref: "#/components/schemas/GooglePrivacyDlpV2CloudStoragePath"
      type: object
    GooglePrivacyDlpV2LargeCustomDictionaryStats:
      description: Summary statistics of a custom dictionary.
      properties:
        approxNumPhrases:
          description: Approximate number of distinct phrases in the dictionary.
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2LikelihoodAdjustment:
      description: |-
        Message for specifying an adjustment to the likelihood of a finding as
        part of a detection rule.
      properties:
        fixedLikelihood:
          description: Set the likelihood of a finding to a fixed value.
          enum:
            - LIKELIHOOD_UNSPECIFIED
            - VERY_UNLIKELY
            - UNLIKELY
            - POSSIBLE
            - LIKELY
            - VERY_LIKELY
          type: string
        relativeLikelihood:
          description: >-
            Increase or decrease the likelihood by the specified number of

            levels. For example, if a finding would be `POSSIBLE` without the

            detection rule and `relative_likelihood` is 1, then it is upgraded to

            `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`.

            Likelihood may never drop below `VERY_UNLIKELY` or exceed

            `VERY_LIKELY`, so applying an adjustment of 1 followed by an

            adjustment of -1 when base likelihood is `VERY_LIKELY` will result in

            a final likelihood of `LIKELY`.
          format: int32
          type: integer
      type: object
    GooglePrivacyDlpV2ListDeidentifyTemplatesResponse:
      description: Response message for ListDeidentifyTemplates.
      properties:
        deidentifyTemplates:
          description: |-
            List of deidentify templates, up to page_size in
            ListDeidentifyTemplatesRequest.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2DeidentifyTemplate"
          type: array
        nextPageToken:
          description: |-
            If the next page is available then the next page token to be used
            in following ListDeidentifyTemplates request.
          type: string
      type: object
    GooglePrivacyDlpV2ListDlpJobsResponse:
      description: The response message for listing DLP jobs.
      properties:
        jobs:
          description: A list of DlpJobs that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2DlpJob"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    GooglePrivacyDlpV2ListInfoTypesRequest:
      description: Request for the list of infoTypes.
      properties:
        filter:
          description: >-
            Optional filter to only return infoTypes supported by certain parts
            of the

            API. Defaults to supported_by=INSPECT.
          type: string
        languageCode:
          description: |-
            Optional BCP-47 language code for localized infoType friendly
            names. If omitted, or if localized strings are not available,
            en-US strings will be returned.
          type: string
      type: object
    GooglePrivacyDlpV2ListInfoTypesResponse:
      description: Response to the ListInfoTypes request.
      properties:
        infoTypes:
          description: Set of sensitive infoTypes.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2InfoTypeDescription"
          type: array
      type: object
    GooglePrivacyDlpV2ListInspectTemplatesResponse:
      description: Response message for ListInspectTemplates.
      properties:
        inspectTemplates:
          description: List of inspectTemplates, up to page_size in
            ListInspectTemplatesRequest.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2InspectTemplate"
          type: array
        nextPageToken:
          description: |-
            If the next page is available then the next page token to be used
            in following ListInspectTemplates request.
          type: string
      type: object
    GooglePrivacyDlpV2ListJobTriggersResponse:
      description: Response message for ListJobTriggers.
      properties:
        jobTriggers:
          description: List of triggeredJobs, up to page_size in ListJobTriggersRequest.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2JobTrigger"
          type: array
        nextPageToken:
          description: |-
            If the next page is available then the next page token to be used
            in following ListJobTriggers request.
          type: string
      type: object
    GooglePrivacyDlpV2ListStoredInfoTypesResponse:
      description: Response message for ListStoredInfoTypes.
      properties:
        nextPageToken:
          description: |-
            If the next page is available then the next page token to be used
            in following ListStoredInfoTypes request.
          type: string
        storedInfoTypes:
          description: List of storedInfoTypes, up to page_size in
            ListStoredInfoTypesRequest.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2StoredInfoType"
          type: array
      type: object
    GooglePrivacyDlpV2Location:
      description: Specifies the location of the finding.
      properties:
        byteRange:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Range"
        codepointRange:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Range"
        contentLocations:
          description: >-
            List of nested objects pointing to the precise location of the
            finding

            within the file or record.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2ContentLocation"
          type: array
      type: object
    GooglePrivacyDlpV2NumericalStatsConfig:
      description: |-
        Compute numerical stats over an individual column, including
        min, max, and quantiles.
      properties:
        field:
          $ref: "#/components/schemas/GooglePrivacyDlpV2FieldId"
      type: object
    GooglePrivacyDlpV2NumericalStatsResult:
      description: Result of the numerical stats computation.
      properties:
        maxValue:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Value"
        minValue:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Value"
        quantileValues:
          description: >-
            List of 99 values that partition the set of field values into 100
            equal

            sized buckets.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2Value"
          type: array
      type: object
    GooglePrivacyDlpV2OutputStorageConfig:
      description: Cloud repository for storing output.
      properties:
        outputSchema:
          description: >-
            Schema used for writing the findings for Inspect jobs. This field is
            only

            used for Inspect and must be unspecified for Risk jobs. Columns are derived

            from the `Finding` object. If appending to an existing table, any columns

            from the predefined schema that are missing will be added. No columns in

            the existing table will be deleted.


            If unspecified, then all available columns will be used for a new table or

            an (existing) table with no schema, and no changes will be made to an

            existing table that has a schema.
          enum:
            - OUTPUT_SCHEMA_UNSPECIFIED
            - BASIC_COLUMNS
            - GCS_COLUMNS
            - DATASTORE_COLUMNS
            - BIG_QUERY_COLUMNS
            - ALL_COLUMNS
          type: string
        table:
          $ref: "#/components/schemas/GooglePrivacyDlpV2BigQueryTable"
      type: object
    GooglePrivacyDlpV2PartitionId:
      description: |-
        Datastore partition ID.
        A partition ID identifies a grouping of entities. The grouping is always
        by project and namespace, however the namespace ID may be empty.

        A partition ID contains several dimensions:
        project ID and namespace ID.
      properties:
        namespaceId:
          description: If not empty, the ID of the namespace to which the entities belong.
          type: string
        projectId:
          description: The ID of the project to which the entities belong.
          type: string
      type: object
    GooglePrivacyDlpV2PathElement:
      description: |-
        A (kind, ID/name) pair used to construct a key path.

        If either name or ID is set, the element is complete.
        If neither is set, the element is incomplete.
      properties:
        id:
          description: >-
            The auto-allocated ID of the entity.

            Never equal to zero. Values less than zero are discouraged and may not

            be supported in the future.
          format: int64
          type: string
        kind:
          description: |-
            The kind of the entity.
            A kind matching regex `__.*__` is reserved/read-only.
            A kind must not contain more than 1500 bytes when UTF-8 encoded.
            Cannot be `""`.
          type: string
        name:
          description: |-
            The name of the entity.
            A name matching regex `__.*__` is reserved/read-only.
            A name must not be more than 1500 bytes when UTF-8 encoded.
            Cannot be `""`.
          type: string
      type: object
    GooglePrivacyDlpV2PrimitiveTransformation:
      description: A rule for transforming a value.
      properties:
        bucketingConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2BucketingConfig"
        characterMaskConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2CharacterMaskConfig"
        cryptoDeterministicConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2CryptoDeterministicConfig"
        cryptoHashConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2CryptoHashConfig"
        cryptoReplaceFfxFpeConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig"
        dateShiftConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2DateShiftConfig"
        fixedSizeBucketingConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2FixedSizeBucketingConfig"
        redactConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2RedactConfig"
        replaceConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2ReplaceValueConfig"
        replaceWithInfoTypeConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2ReplaceWithInfoTypeConfig"
        timePartConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2TimePartConfig"
      type: object
    GooglePrivacyDlpV2PrivacyMetric:
      description: Privacy metric to compute for reidentification risk analysis.
      properties:
        categoricalStatsConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2CategoricalStatsConfig"
        deltaPresenceEstimationConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2DeltaPresenceEstimationConf\
            ig"
        kAnonymityConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2KAnonymityConfig"
        kMapEstimationConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2KMapEstimationConfig"
        lDiversityConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2LDiversityConfig"
        numericalStatsConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2NumericalStatsConfig"
      type: object
    GooglePrivacyDlpV2Proximity:
      description: |-
        Message for specifying a window around a finding to apply a detection
        rule.
      properties:
        windowAfter:
          description: Number of characters after the finding to consider.
          format: int32
          type: integer
        windowBefore:
          description: Number of characters before the finding to consider.
          format: int32
          type: integer
      type: object
    GooglePrivacyDlpV2PublishFindingsToCloudDataCatalog:
      description: >-
        Publish findings of a DlpJob to Cloud Data Catalog. Labels summarizing
        the

        results of the DlpJob will be applied to the entry for the resource scanned

        in Cloud Data Catalog. Any labels previously written by another DlpJob will

        be deleted. InfoType naming patterns are strictly enforced when using this

        feature. Note that the findings will be persisted in Cloud Data Catalog

        storage and are governed by Data Catalog service-specific policy, see

        https://cloud.google.com/terms/service-terms

        Only a single instance of this action can be specified and only allowed if

        all resources being scanned are BigQuery tables.

        Compatible with: Inspect
      properties: {}
      type: object
    GooglePrivacyDlpV2PublishSummaryToCscc:
      description: >-
        Publish the result summary of a DlpJob to the Cloud Security

        Command Center (CSCC Alpha).

        This action is only available for projects which are parts of

        an organization and whitelisted for the alpha Cloud Security Command

        Center.

        The action will publish count of finding instances and their info types.

        The summary of findings will be persisted in CSCC and are governed by CSCC

        service-specific policy, see https://cloud.google.com/terms/service-terms

        Only a single instance of this action can be specified.

        Compatible with: Inspect
      properties: {}
      type: object
    GooglePrivacyDlpV2PublishToPubSub:
      description: >-
        Publish a message into given Pub/Sub topic when DlpJob has completed.
        The

        message contains a single field, `DlpJobName`, which is equal to the

        finished job's

        [`DlpJob.name`](/dlp/docs/reference/rest/v2/projects.dlpJobs#DlpJob).

        Compatible with: Inspect, Risk
      properties:
        topic:
          description: >-
            Cloud Pub/Sub topic to send notifications to. The topic must have
            given

            publishing access rights to the DLP API service account executing

            the long running DlpJob sending the notifications.

            Format is projects/{project}/topics/{topic}.
          type: string
      type: object
    GooglePrivacyDlpV2QuasiId:
      description: A column with a semantic tag attached.
      properties:
        customTag:
          description: >-
            A column can be tagged with a custom tag. In this case, the user
            must

            indicate an auxiliary table that contains statistical information on

            the possible values of this column (below).
          type: string
        field:
          $ref: "#/components/schemas/GooglePrivacyDlpV2FieldId"
        inferred:
          $ref: "#/components/schemas/GoogleProtobufEmpty"
        infoType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InfoType"
      type: object
    GooglePrivacyDlpV2QuasiIdField:
      description: |-
        A quasi-identifier column has a custom_tag, used to know which column
        in the data corresponds to which column in the statistical model.
      properties:
        customTag:
          type: string
        field:
          $ref: "#/components/schemas/GooglePrivacyDlpV2FieldId"
      type: object
    GooglePrivacyDlpV2QuasiIdentifierField:
      description: |-
        A quasi-identifier column has a custom_tag, used to know which column
        in the data corresponds to which column in the statistical model.
      properties:
        customTag:
          type: string
        field:
          $ref: "#/components/schemas/GooglePrivacyDlpV2FieldId"
      type: object
    GooglePrivacyDlpV2QuoteInfo:
      description: Message for infoType-dependent details parsed from quote.
      properties:
        dateTime:
          $ref: "#/components/schemas/GooglePrivacyDlpV2DateTime"
      type: object
    GooglePrivacyDlpV2Range:
      description: Generic half-open interval [start, end)
      properties:
        end:
          description: Index of the last character of the range (exclusive).
          format: int64
          type: string
        start:
          description: Index of the first character of the range (inclusive).
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2RecordCondition:
      description: >-
        A condition for determining whether a transformation should be applied
        to

        a field.
      properties:
        expressions:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Expressions"
      type: object
    GooglePrivacyDlpV2RecordKey:
      description: Message for a unique key indicating a record that contains a finding.
      properties:
        bigQueryKey:
          $ref: "#/components/schemas/GooglePrivacyDlpV2BigQueryKey"
        datastoreKey:
          $ref: "#/components/schemas/GooglePrivacyDlpV2DatastoreKey"
        idValues:
          description: >-
            Values of identifying columns in the given row. Order of values
            matches

            the order of field identifiers specified in the scanning request.
          items:
            type: string
          type: array
      type: object
    GooglePrivacyDlpV2RecordLocation:
      description: Location of a finding within a row or record.
      properties:
        fieldId:
          $ref: "#/components/schemas/GooglePrivacyDlpV2FieldId"
        recordKey:
          $ref: "#/components/schemas/GooglePrivacyDlpV2RecordKey"
        tableLocation:
          $ref: "#/components/schemas/GooglePrivacyDlpV2TableLocation"
      type: object
    GooglePrivacyDlpV2RecordSuppression:
      description: >-
        Configuration to suppress records whose suppression conditions evaluate
        to

        true.
      properties:
        condition:
          $ref: "#/components/schemas/GooglePrivacyDlpV2RecordCondition"
      type: object
    GooglePrivacyDlpV2RecordTransformations:
      description: |-
        A type of transformation that is applied over structured data such as a
        table.
      properties:
        fieldTransformations:
          description: Transform the record by applying various field transformations.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2FieldTransformation"
          type: array
        recordSuppressions:
          description: >-
            Configuration defining which records get suppressed entirely.
            Records that

            match any suppression rule are omitted from the output [optional].
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2RecordSuppression"
          type: array
      type: object
    GooglePrivacyDlpV2RedactConfig:
      description: >-
        Redact a given value. For example, if used with an
        `InfoTypeTransformation`

        transforming PHONE_NUMBER, and input 'My phone number is 206-555-0123', the

        output would be 'My phone number is '.
      properties: {}
      type: object
    GooglePrivacyDlpV2RedactImageRequest:
      description: >-
        Request to search for potentially sensitive info in an image and redact
        it

        by covering it with a colored rectangle.
      properties:
        byteItem:
          $ref: "#/components/schemas/GooglePrivacyDlpV2ByteContentItem"
        imageRedactionConfigs:
          description: The configuration for specifying what content to redact from images.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2ImageRedactionConfig"
          type: array
        includeFindings:
          description: |-
            Whether the response should include findings along with the redacted
            image.
          type: boolean
        inspectConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InspectConfig"
      type: object
    GooglePrivacyDlpV2RedactImageResponse:
      description: Results of redacting an image.
      properties:
        extractedText:
          description: >-
            If an image was being inspected and the InspectConfig's
            include_quote was

            set to true, then this field will include all text, if any, that was found

            in the image.
          type: string
        inspectResult:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InspectResult"
        redactedImage:
          description: The redacted image. The type will be the same as the original image.
          format: byte
          type: string
      type: object
    GooglePrivacyDlpV2Regex:
      description: Message defining a custom regular expression.
      properties:
        groupIndexes:
          description: >-
            The index of the submatch to extract as findings. When not

            specified, the entire match is returned. No more than 3 may be included.
          items:
            format: int32
            type: integer
          type: array
        pattern:
          description: |-
            Pattern defining the regular expression. Its syntax
            (https://github.com/google/re2/wiki/Syntax) can be found under the
            google/re2 repository on GitHub.
          type: string
      type: object
    GooglePrivacyDlpV2ReidentifyContentRequest:
      description: Request to re-identify an item.
      properties:
        inspectConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InspectConfig"
        inspectTemplateName:
          description: >-
            Optional template to use. Any configuration directly specified in

            `inspect_config` will override those set in the template. Singular fields

            that are set in this request will replace their corresponding fields in the

            template. Repeated fields are appended. Singular sub-messages and groups

            are recursively merged.
          type: string
        item:
          $ref: "#/components/schemas/GooglePrivacyDlpV2ContentItem"
        location:
          description: >-
            The geographic location to process content
            reidentification.  Reserved for

            future extensions.
          type: string
        reidentifyConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2DeidentifyConfig"
        reidentifyTemplateName:
          description: >-
            Optional template to use. References an instance of
            `DeidentifyTemplate`.

            Any configuration directly specified in `reidentify_config` or

            `inspect_config` will override those set in the template. Singular fields

            that are set in this request will replace their corresponding fields in the

            template. Repeated fields are appended. Singular sub-messages and groups

            are recursively merged.
          type: string
      type: object
    GooglePrivacyDlpV2ReidentifyContentResponse:
      description: Results of re-identifying a item.
      properties:
        item:
          $ref: "#/components/schemas/GooglePrivacyDlpV2ContentItem"
        overview:
          $ref: "#/components/schemas/GooglePrivacyDlpV2TransformationOverview"
      type: object
    GooglePrivacyDlpV2ReplaceValueConfig:
      description: Replace each input value with a given `Value`.
      properties:
        newValue:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Value"
      type: object
    GooglePrivacyDlpV2ReplaceWithInfoTypeConfig:
      description: Replace each matching finding with the name of the info_type.
      properties: {}
      type: object
    GooglePrivacyDlpV2RequestedOptions:
      properties:
        jobConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InspectJobConfig"
        snapshotInspectTemplate:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InspectTemplate"
      type: object
    GooglePrivacyDlpV2Result:
      description: All result fields mentioned below are updated while the job is
        processing.
      properties:
        infoTypeStats:
          description: |-
            Statistics of how many instances of each info type were found during
            inspect job.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2InfoTypeStats"
          type: array
        processedBytes:
          description: Total size in bytes that were processed.
          format: int64
          type: string
        totalEstimatedBytes:
          description: Estimate of the number of bytes to process.
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2RiskAnalysisJobConfig:
      description: |-
        Configuration for a risk analysis job. See
        https://cloud.google.com/dlp/docs/concepts-risk-analysis to learn more.
      properties:
        actions:
          description: >-
            Actions to execute at the completion of the job. Are executed in the
            order

            provided.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2Action"
          type: array
        privacyMetric:
          $ref: "#/components/schemas/GooglePrivacyDlpV2PrivacyMetric"
        sourceTable:
          $ref: "#/components/schemas/GooglePrivacyDlpV2BigQueryTable"
      type: object
    GooglePrivacyDlpV2Row:
      properties:
        values:
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2Value"
          type: array
      type: object
    GooglePrivacyDlpV2SaveFindings:
      description: |-
        If set, the detailed findings will be persisted to the specified
        OutputStorageConfig. Only a single instance of this action can be
        specified.
        Compatible with: Inspect, Risk
      properties:
        outputConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2OutputStorageConfig"
      type: object
    GooglePrivacyDlpV2Schedule:
      description: Schedule for triggeredJobs.
      properties:
        recurrencePeriodDuration:
          description: |-
            With this option a job is started a regular periodic basis. For
            example: every day (86400 seconds).

            A scheduled start time will be skipped if the previous
            execution has not ended when its scheduled time occurs.

            This value must be set to a time duration greater than or equal
            to 1 day and can be no longer than 60 days.
          format: google-duration
          type: string
      type: object
    GooglePrivacyDlpV2StatisticalTable:
      description: |-
        An auxiliary table containing statistical information on the relative
        frequency of different quasi-identifiers values. It has one or several
        quasi-identifiers columns, and one column that indicates the relative
        frequency of each quasi-identifier tuple.
        If a tuple is present in the data but not in the auxiliary table, the
        corresponding relative frequency is assumed to be zero (and thus, the
        tuple is highly reidentifiable).
      properties:
        quasiIds:
          description: Quasi-identifier columns. [required]
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2QuasiIdentifierField"
          type: array
        relativeFrequency:
          $ref: "#/components/schemas/GooglePrivacyDlpV2FieldId"
        table:
          $ref: "#/components/schemas/GooglePrivacyDlpV2BigQueryTable"
      type: object
    GooglePrivacyDlpV2StorageConfig:
      description: Shared message indicating Cloud storage type.
      properties:
        bigQueryOptions:
          $ref: "#/components/schemas/GooglePrivacyDlpV2BigQueryOptions"
        cloudStorageOptions:
          $ref: "#/components/schemas/GooglePrivacyDlpV2CloudStorageOptions"
        datastoreOptions:
          $ref: "#/components/schemas/GooglePrivacyDlpV2DatastoreOptions"
        timespanConfig:
          $ref: "#/components/schemas/GooglePrivacyDlpV2TimespanConfig"
      type: object
    GooglePrivacyDlpV2StoredInfoType:
      description: >-
        StoredInfoType resource message that contains information about the
        current

        version and any pending updates.
      properties:
        currentVersion:
          $ref: "#/components/schemas/GooglePrivacyDlpV2StoredInfoTypeVersion"
        name:
          description: Resource name.
          type: string
        pendingVersions:
          description: |-
            Pending versions of the stored info type. Empty if no versions are
            pending.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2StoredInfoTypeVersion"
          type: array
      type: object
    GooglePrivacyDlpV2StoredInfoTypeConfig:
      description: Configuration for a StoredInfoType.
      properties:
        description:
          description: Description of the StoredInfoType (max 256 characters).
          type: string
        displayName:
          description: Display name of the StoredInfoType (max 256 characters).
          type: string
        largeCustomDictionary:
          $ref: "#/components/schemas/GooglePrivacyDlpV2LargeCustomDictionaryConfig"
      type: object
    GooglePrivacyDlpV2StoredInfoTypeStats:
      description: Statistics for a StoredInfoType.
      properties:
        largeCustomDictionary:
          $ref: "#/components/schemas/GooglePrivacyDlpV2LargeCustomDictionaryStats"
      type: object
    GooglePrivacyDlpV2StoredInfoTypeVersion:
      description: >-
        Version of a StoredInfoType, including the configuration used to build
        it,

        create timestamp, and current state.
      properties:
        config:
          $ref: "#/components/schemas/GooglePrivacyDlpV2StoredInfoTypeConfig"
        createTime:
          description: |-
            Create timestamp of the version. Read-only, determined by the system
            when the version is created.
          format: google-datetime
          type: string
        errors:
          description: >-
            Errors that occurred when creating this storedInfoType version, or

            anomalies detected in the storedInfoType data that render it unusable. Only

            the five most recent errors will be displayed, with the most recent error

            appearing first.

            <p>For example, some of the data for stored custom dictionaries is put in

            the user's Google Cloud Storage bucket, and if this data is modified or

            deleted by the user or another system, the dictionary becomes invalid.

            <p>If any errors occur, fix the problem indicated by the error message and

            use the UpdateStoredInfoType API method to create another version of the

            storedInfoType to continue using it, reusing the same `config` if it was

            not the source of the error.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2Error"
          type: array
        state:
          description: |-
            Stored info type version state. Read-only, updated by the system
            during dictionary creation.
          enum:
            - STORED_INFO_TYPE_STATE_UNSPECIFIED
            - PENDING
            - READY
            - FAILED
            - INVALID
          type: string
        stats:
          $ref: "#/components/schemas/GooglePrivacyDlpV2StoredInfoTypeStats"
      type: object
    GooglePrivacyDlpV2StoredType:
      description: A reference to a StoredInfoType to use with scanning.
      properties:
        createTime:
          description: >-
            Timestamp indicating when the version of the `StoredInfoType` used
            for

            inspection was created. Output-only field, populated by the system.
          format: google-datetime
          type: string
        name:
          description: |-
            Resource name of the requested `StoredInfoType`, for example
            `organizations/433245324/storedInfoTypes/432452342` or
            `projects/project-id/storedInfoTypes/432452342`.
          type: string
      type: object
    GooglePrivacyDlpV2SummaryResult:
      description: |-
        A collection that informs the user the number of times a particular
        `TransformationResultCode` and error details occurred.
      properties:
        code:
          enum:
            - TRANSFORMATION_RESULT_CODE_UNSPECIFIED
            - SUCCESS
            - ERROR
          type: string
        count:
          format: int64
          type: string
        details:
          description: |-
            A place for warnings or errors to show up if a transformation didn't
            work as expected.
          type: string
      type: object
    GooglePrivacyDlpV2SurrogateType:
      description: >-
        Message for detecting output from deidentification transformations

        such as

        [`CryptoReplaceFfxFpeConfig`](/dlp/docs/reference/rest/v2/organizations.deidentifyTemplates#cryptoreplaceffxfpeconfig).

        These types of transformations are

        those that perform pseudonymization, thereby producing a "surrogate" as

        output. This should be used in conjunction with a field on the

        transformation such as `surrogate_info_type`. This CustomInfoType does

        not support the use of `detection_rules`.
      properties: {}
      type: object
    GooglePrivacyDlpV2Table:
      description: >-
        Structured content to inspect. Up to 50,000 `Value`s per request
        allowed.

        See https://cloud.google.com/dlp/docs/inspecting-text#inspecting_a_table to

        learn more.
      properties:
        headers:
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2FieldId"
          type: array
        rows:
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2Row"
          type: array
      type: object
    GooglePrivacyDlpV2TableLocation:
      description: Location of a finding within a table.
      properties:
        rowIndex:
          description: The zero-based index of the row where the finding is located.
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2TaggedField:
      properties:
        customTag:
          description: >-
            A column can be tagged with a custom tag. In this case, the user
            must

            indicate an auxiliary table that contains statistical information on

            the possible values of this column (below).
          type: string
        field:
          $ref: "#/components/schemas/GooglePrivacyDlpV2FieldId"
        inferred:
          $ref: "#/components/schemas/GoogleProtobufEmpty"
        infoType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InfoType"
      type: object
    GooglePrivacyDlpV2TimePartConfig:
      description: |-
        For use with `Date`, `Timestamp`, and `TimeOfDay`, extract or preserve a
        portion of the value.
      properties:
        partToExtract:
          enum:
            - TIME_PART_UNSPECIFIED
            - YEAR
            - MONTH
            - DAY_OF_MONTH
            - DAY_OF_WEEK
            - WEEK_OF_YEAR
            - HOUR_OF_DAY
          type: string
      type: object
    GooglePrivacyDlpV2TimeZone:
      properties:
        offsetMinutes:
          description: >-
            Set only if the offset can be determined. Positive for time ahead of
            UTC.

            E.g. For "UTC-9", this value is -540.
          format: int32
          type: integer
      type: object
    GooglePrivacyDlpV2TimespanConfig:
      description: >-
        Configuration of the timespan of the items to include in scanning.

        Currently only supported when inspecting Google Cloud Storage and BigQuery.
      properties:
        enableAutoPopulationOfTimespanConfig:
          description: >-
            When the job is started by a JobTrigger we will automatically figure
            out

            a valid start_time to avoid scanning files that have not been modified

            since the last time the JobTrigger executed. This will be based on the

            time of the execution of the last run of the JobTrigger.
          type: boolean
        endTime:
          description: |-
            Exclude files or rows newer than this value.
            If set to zero, no upper time limit is applied.
          format: google-datetime
          type: string
        startTime:
          description: Exclude files or rows older than this value.
          format: google-datetime
          type: string
        timestampField:
          $ref: "#/components/schemas/GooglePrivacyDlpV2FieldId"
      type: object
    GooglePrivacyDlpV2TransformationOverview:
      description: Overview of the modifications that occurred.
      properties:
        transformationSummaries:
          description: Transformations applied to the dataset.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2TransformationSummary"
          type: array
        transformedBytes:
          description: Total size in bytes that were transformed in some way.
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2TransformationSummary:
      description: >-
        Summary of a single transformation.

        Only one of 'transformation', 'field_transformation', or 'record_suppress'

        will be set.
      properties:
        field:
          $ref: "#/components/schemas/GooglePrivacyDlpV2FieldId"
        fieldTransformations:
          description: |-
            The field transformation that was applied.
            If multiple field transformations are requested for a single field,
            this list will contain all of them; otherwise, only one is supplied.
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2FieldTransformation"
          type: array
        infoType:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InfoType"
        recordSuppress:
          $ref: "#/components/schemas/GooglePrivacyDlpV2RecordSuppression"
        results:
          items:
            $ref: "#/components/schemas/GooglePrivacyDlpV2SummaryResult"
          type: array
        transformation:
          $ref: "#/components/schemas/GooglePrivacyDlpV2PrimitiveTransformation"
        transformedBytes:
          description: Total size in bytes that were transformed in some way.
          format: int64
          type: string
      type: object
    GooglePrivacyDlpV2TransientCryptoKey:
      description: |-
        Use this to have a random data crypto key generated.
        It will be discarded after the request finishes.
      properties:
        name:
          description: >-
            Name of the key. [required]

            This is an arbitrary string used to differentiate different keys.

            A unique key is generated per name: two separate `TransientCryptoKey`

            protos share the same generated key if their names are the same.

            When the data crypto key is generated, this name is not used in any way

            (repeating the api call will result in a different key being generated).
          type: string
      type: object
    GooglePrivacyDlpV2Trigger:
      description: What event needs to occur for a new job to be started.
      properties:
        schedule:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Schedule"
      type: object
    GooglePrivacyDlpV2UnwrappedCryptoKey:
      description: |-
        Using raw keys is prone to security risks due to accidentally
        leaking the key. Choose another type of key if possible.
      properties:
        key:
          description: A 128/192/256 bit key. [required]
          format: byte
          type: string
      type: object
    GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest:
      description: Request message for UpdateDeidentifyTemplate.
      properties:
        deidentifyTemplate:
          $ref: "#/components/schemas/GooglePrivacyDlpV2DeidentifyTemplate"
        updateMask:
          description: Mask to control which fields get updated.
          format: google-fieldmask
          type: string
      type: object
    GooglePrivacyDlpV2UpdateInspectTemplateRequest:
      description: Request message for UpdateInspectTemplate.
      properties:
        inspectTemplate:
          $ref: "#/components/schemas/GooglePrivacyDlpV2InspectTemplate"
        updateMask:
          description: Mask to control which fields get updated.
          format: google-fieldmask
          type: string
      type: object
    GooglePrivacyDlpV2UpdateJobTriggerRequest:
      description: Request message for UpdateJobTrigger.
      properties:
        jobTrigger:
          $ref: "#/components/schemas/GooglePrivacyDlpV2JobTrigger"
        updateMask:
          description: Mask to control which fields get updated.
          format: google-fieldmask
          type: string
      type: object
    GooglePrivacyDlpV2UpdateStoredInfoTypeRequest:
      description: Request message for UpdateStoredInfoType.
      properties:
        config:
          $ref: "#/components/schemas/GooglePrivacyDlpV2StoredInfoTypeConfig"
        updateMask:
          description: Mask to control which fields get updated.
          format: google-fieldmask
          type: string
      type: object
    GooglePrivacyDlpV2Value:
      description: |-
        Set of primitive values supported by the system.
        Note that for the purposes of inspection or transformation, the number
        of bytes considered to comprise a 'Value' is based on its representation
        as a UTF-8 encoded string. For example, if 'integer_value' is set to
        123456789, the number of bytes would be counted as 9, even though an
        int64 only holds up to 8 bytes of data.
      properties:
        booleanValue:
          type: boolean
        dateValue:
          $ref: "#/components/schemas/GoogleTypeDate"
        dayOfWeekValue:
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
          type: string
        floatValue:
          format: double
          type: number
        integerValue:
          format: int64
          type: string
        stringValue:
          type: string
        timeValue:
          $ref: "#/components/schemas/GoogleTypeTimeOfDay"
        timestampValue:
          format: google-datetime
          type: string
      type: object
    GooglePrivacyDlpV2ValueFrequency:
      description: A value of a field, including its frequency.
      properties:
        count:
          description: How many times the value is contained in the field.
          format: int64
          type: string
        value:
          $ref: "#/components/schemas/GooglePrivacyDlpV2Value"
      type: object
    GooglePrivacyDlpV2WordList:
      description: Message defining a list of words or phrases to search for in the data.
      properties:
        words:
          description: >-
            Words or phrases defining the dictionary. The dictionary must
            contain

            at least one phrase and every phrase must contain at least 2 characters

            that are letters or digits. [required]
          items:
            type: string
          type: array
      type: object
    GoogleProtobufEmpty:
      description: >-
        A generic empty message that you can re-use to avoid defining duplicated

        empty messages in your APIs. A typical example is to use it as the request

        or the response type of an API method. For instance:

            service Foo {
              rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);
            }

        The JSON representation for `Empty` is empty JSON object `{}`.
      properties: {}
      type: object
    GoogleRpcStatus:
      description: >-
        The `Status` type defines a logical error model that is suitable for

        different programming environments, including REST APIs and RPC APIs. It is

        used by [gRPC](https://github.com/grpc). Each `Status` message contains

        three pieces of data: error code, error message, and error details.


        You can find out more about this error model and how to work with it in the

        [API Design Guide](https://cloud.google.com/apis/design/errors).
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: >-
            A list of messages that carry the error details.  There is a common
            set of

            message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: |-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    GoogleTypeDate:
      description: >-
        Represents a whole or partial calendar date, e.g. a birthday. The time
        of day

        and time zone are either specified elsewhere or are not significant. The date

        is relative to the Proleptic Gregorian Calendar. This can represent:


        * A full date, with non-zero year, month and day values

        * A month and day value, with a zero year, e.g. an anniversary

        * A year on its own, with zero month and day values

        * A year and month value, with a zero day, e.g. a credit card expiration date


        Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.
      properties:
        day:
          description: >-
            Day of month. Must be from 1 to 31 and valid for the year and month,
            or 0

            if specifying a year by itself or a year and month where the day is not

            significant.
          format: int32
          type: integer
        month:
          description: >-
            Month of year. Must be from 1 to 12, or 0 if specifying a year
            without a

            month and day.
          format: int32
          type: integer
        year:
          description: >-
            Year of date. Must be from 1 to 9999, or 0 if specifying a date
            without

            a year.
          format: int32
          type: integer
      type: object
    GoogleTypeTimeOfDay:
      description: >-
        Represents a time of day. The date and time zone are either not
        significant

        or are specified elsewhere. An API may choose to allow leap seconds. Related

        types are google.type.Date and `google.protobuf.Timestamp`.
      properties:
        hours:
          description: >-
            Hours of day in 24 hour format. Should be from 0 to 23. An API may
            choose

            to allow the value "24:00:00" for scenarios like business closing time.
          format: int32
          type: integer
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          format: int32
          type: integer
        nanos:
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          format: int32
          type: integer
        seconds:
          description: >-
            Seconds of minutes of the time. Must normally be from 0 to 59. An
            API may

            allow the value 60 if it allows leap-seconds.
          format: int32
          type: integer
      type: object
