openapi: 3.0.0
info:
  description: APIs to deploy and manage resources to SeaBreeze.
  title: SeaBreezeManagementClient
  version: 2018-07-01-preview
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/servicefabricmesh/resource-manager/Microsoft.ServiceFabricMesh/preview/2018-07-01-preview/servicefabricmesh.json
      version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: servicefabricmesh
  x-tags:
    - Azure
    - Microsoft
security:
  - azure_auth:
      - user_impersonation
paths:
  /providers/Microsoft.ServiceFabricMesh/operations:
    get:
      description: Lists all the available operations provided by Service Fabric SeaBreeze
        resource provider.
      operationId: Operations_List
      parameters:
        - $ref: "#/components/parameters/api-versionRequiredQueryParam"
      responses:
        "200":
          description: OK. The request has succeeded.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationListResult"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Lists all of the available operations.
      tags:
        - Operations
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/applications":
    get:
      description: Gets the information about all application resources in a given
        subscription. The information includes the information about the
        application's services and other runtime properties.
      operationId: Application_ListBySubscription
      parameters:
        - $ref: "#/components/parameters/subscriptionIdRequiredPathParam"
        - $ref: "#/components/parameters/api-versionRequiredQueryParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationResourceDescriptionList"
              examples:
                ApplicationList:
                  $ref: "#/components/examples/ApplicationList"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Gets all the application resources in a given subscription.
      tags:
        - Applications
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/networks":
    get:
      description: Gets the information about all network resources in a given
        subscription. The information includes the network description and other
        runtime properties.
      operationId: Network_ListBySubscription
      parameters:
        - $ref: "#/components/parameters/subscriptionIdRequiredPathParam"
        - $ref: "#/components/parameters/api-versionRequiredQueryParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkResourceDescriptionList"
              examples:
                NetworksList:
                  $ref: "#/components/examples/NetworksList"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Gets all the network resources in a given subscription.
      tags:
        - Networks
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.ServiceFabricMesh/volumes":
    get:
      description: >
        Gets the information about all volume resources in a given subscription.
        The information includes the volume description and other runtime
        information.
      operationId: Volume_ListBySubscription
      parameters:
        - $ref: "#/components/parameters/subscriptionIdRequiredPathParam"
        - $ref: "#/components/parameters/api-versionRequiredQueryParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VolumeResourceDescriptionList"
              examples:
                VolumesList:
                  $ref: "#/components/examples/VolumesList"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Gets all the volume resources in a given subscription.
      tags:
        - Volumes
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications":
    get:
      description: Gets the information about all application resources in a given resource
        group. The information includes the information about the application's
        services and other runtime properties.
      operationId: Application_ListByResourceGroup
      parameters:
        - $ref: "#/components/parameters/subscriptionIdRequiredPathParam"
        - $ref: "#/components/parameters/api-versionRequiredQueryParam"
        - $ref: "#/components/parameters/ResourceGroupNameRequiredPathParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationResourceDescriptionList"
              examples:
                ApplicationList:
                  $ref: "#/components/examples/ApplicationList"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Gets all the application resources in a given resource group.
      tags:
        - Applications
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationName}":
    delete:
      description: Deletes the application resource identified by the name.
      operationId: Application_Delete
      parameters:
        - $ref: "#/components/parameters/subscriptionIdRequiredPathParam"
        - $ref: "#/components/parameters/api-versionRequiredQueryParam"
        - $ref: "#/components/parameters/ResourceGroupNameRequiredPathParam"
        - $ref: "#/components/parameters/ApplicationNameRequiredPathParam"
      responses:
        "200":
          description: OK
        "204":
          description: No Content - the specified application was not found.
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Deletes the application resource.
      tags:
        - Applications
    get:
      description: Gets the information about the application resource with a given name.
        The information includes the information about the application's
        services and other runtime properties.
      operationId: Application_Get
      parameters:
        - $ref: "#/components/parameters/subscriptionIdRequiredPathParam"
        - $ref: "#/components/parameters/api-versionRequiredQueryParam"
        - $ref: "#/components/parameters/ResourceGroupNameRequiredPathParam"
        - $ref: "#/components/parameters/ApplicationNameRequiredPathParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationResourceDescription"
              examples:
                ApplicationGet:
                  $ref: "#/components/examples/ApplicationGet"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Gets the application resource.
      tags:
        - Applications
    put:
      description: >
        Creates an application resource with the specified name and description.
        If an application with the same name already exists, then its
        description is updated to the one indicated in this request.


        Use network resources to provide public connectivity to the services of an application.
      operationId: Application_Create
      parameters:
        - $ref: "#/components/parameters/subscriptionIdRequiredPathParam"
        - $ref: "#/components/parameters/api-versionRequiredQueryParam"
        - $ref: "#/components/parameters/ResourceGroupNameRequiredPathParam"
        - $ref: "#/components/parameters/ApplicationNameRequiredPathParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationResourceDescription"
        description: Description for creating an application resource.
        required: true
        x-ms-parameter-location: method
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationResourceDescription"
              examples:
                ApplicationCreateOrUpdate:
                  $ref: "#/components/examples/ApplicationCreateOrUpdate"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationResourceDescription"
              examples:
                ApplicationCreateOrUpdate:
                  $ref: "#/components/examples/ApplicationCreateOrUpdate"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Creates or updates an application resource.
      tags:
        - Applications
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationName}/services":
    get:
      description: Gets the information about all services of a given service of an
        application. The information includes the runtime properties of the
        service instance.
      operationId: Service_ListByApplicationName
      parameters:
        - $ref: "#/components/parameters/subscriptionIdRequiredPathParam"
        - $ref: "#/components/parameters/api-versionRequiredQueryParam"
        - $ref: "#/components/parameters/ResourceGroupNameRequiredPathParam"
        - $ref: "#/components/parameters/ApplicationNameRequiredPathParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceList"
              examples:
                ServiceGetAll:
                  $ref: "#/components/examples/ServiceGetAll"
      summary: Gets services of a given application.
      tags:
        - Services
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationName}/services/{serviceName}":
    get:
      description: The operation returns the properties of the service.
      operationId: Service_Get
      parameters:
        - $ref: "#/components/parameters/subscriptionIdRequiredPathParam"
        - $ref: "#/components/parameters/api-versionRequiredQueryParam"
        - $ref: "#/components/parameters/ResourceGroupNameRequiredPathParam"
        - $ref: "#/components/parameters/ApplicationNameRequiredPathParam"
        - $ref: "#/components/parameters/ServiceNameRequiredPathParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceResourceDescription"
              examples:
                ServiceGet:
                  $ref: "#/components/examples/ServiceGet"
      summary: Gets the properties of the service.
      tags:
        - Services
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationName}/services/{serviceName}/replicas":
    get:
      description: Gets the information about all replicas of a given service of an
        application. The information includes the runtime properties of the
        replica instance.
      operationId: Replica_ListByServiceName
      parameters:
        - $ref: "#/components/parameters/subscriptionIdRequiredPathParam"
        - $ref: "#/components/parameters/api-versionRequiredQueryParam"
        - $ref: "#/components/parameters/ResourceGroupNameRequiredPathParam"
        - $ref: "#/components/parameters/ApplicationNameRequiredPathParam"
        - $ref: "#/components/parameters/ServiceNameRequiredPathParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceReplicaList"
              examples:
                ReplicasGetAll:
                  $ref: "#/components/examples/ReplicasGetAll"
      summary: Gets replicas of a given service.
      tags:
        - Replicas
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationName}/services/{serviceName}/replicas/{replicaName}":
    get:
      description: Gets the information about the specified replica of a given service of
        an application. The information includes the runtime properties of the
        replica instance.
      operationId: Replica_Get
      parameters:
        - $ref: "#/components/parameters/subscriptionIdRequiredPathParam"
        - $ref: "#/components/parameters/api-versionRequiredQueryParam"
        - $ref: "#/components/parameters/ResourceGroupNameRequiredPathParam"
        - $ref: "#/components/parameters/ApplicationNameRequiredPathParam"
        - $ref: "#/components/parameters/ServiceNameRequiredPathParam"
        - $ref: "#/components/parameters/ReplicaNameRequiredPathParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceReplicaDescription"
              examples:
                ReplicaGet:
                  $ref: "#/components/examples/ReplicaGet"
      summary: Gets a specific replica of a given service.
      tags:
        - Replicas
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationName}/services/{serviceName}/replicas/{replicaName}/codePackages/{codePackageName}/logs":
    get:
      description: Get the logs for the container of a given code package of an application.
      operationId: CodePackage_GetContainerLog
      parameters:
        - $ref: "#/components/parameters/subscriptionIdRequiredPathParam"
        - $ref: "#/components/parameters/ResourceGroupNameRequiredPathParam"
        - $ref: "#/components/parameters/api-versionRequiredQueryParam"
        - $ref: "#/components/parameters/ApplicationNameRequiredPathParam"
        - $ref: "#/components/parameters/ServiceNameRequiredPathParam"
        - $ref: "#/components/parameters/ReplicaNameRequiredPathParam"
        - $ref: "#/components/parameters/CodePackageNameRequiredPathParam"
        - $ref: "#/components/parameters/TailOptionalQueryParam"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContainerLogs"
              examples:
                ContainerLogsList:
                  $ref: "#/components/examples/ContainerLogsList"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Gets the logs for the container.
      tags:
        - ContainerLogs
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/networks":
    get:
      description: >
        Gets the information about all network resources in a given resource
        group. The information includes the network description and other
        runtime properties.
      operationId: Network_ListByResourceGroup
      parameters:
        - $ref: "#/components/parameters/subscriptionIdRequiredPathParam"
        - $ref: "#/components/parameters/api-versionRequiredQueryParam"
        - $ref: "#/components/parameters/ResourceGroupNameRequiredPathParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkResourceDescriptionList"
              examples:
                NetworksList:
                  $ref: "#/components/examples/NetworksList"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Gets all the network resources in a given resource group.
      tags:
        - Networks
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/networks/{networkName}":
    delete:
      description: Deletes the network resource identified by the name.
      operationId: Network_Delete
      parameters:
        - $ref: "#/components/parameters/subscriptionIdRequiredPathParam"
        - $ref: "#/components/parameters/api-versionRequiredQueryParam"
        - $ref: "#/components/parameters/ResourceGroupNameRequiredPathParam"
        - $ref: "#/components/parameters/NetworkNameRequiredPathParam"
      responses:
        "200":
          description: OK
        "204":
          description: No Content - the specified network was not found.
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Deletes the network resource.
      tags:
        - Networks
    get:
      description: >
        Gets the information about the network resource with a given name. This
        information includes the network description and other runtime
        information.
      operationId: Network_Get
      parameters:
        - $ref: "#/components/parameters/subscriptionIdRequiredPathParam"
        - $ref: "#/components/parameters/api-versionRequiredQueryParam"
        - $ref: "#/components/parameters/ResourceGroupNameRequiredPathParam"
        - $ref: "#/components/parameters/NetworkNameRequiredPathParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkResourceDescription"
              examples:
                NetworkGet:
                  $ref: "#/components/examples/NetworkGet"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Gets the network resource.
      tags:
        - Networks
    put:
      description: >
        Creates a network resource with the specified name and description. If a
        network with the same name already exists, then its description is
        updated to the one indicated in this request.


        Use network resources to create private network and configure public connectivity for services within your application. 
      operationId: Network_Create
      parameters:
        - $ref: "#/components/parameters/subscriptionIdRequiredPathParam"
        - $ref: "#/components/parameters/api-versionRequiredQueryParam"
        - $ref: "#/components/parameters/ResourceGroupNameRequiredPathParam"
        - $ref: "#/components/parameters/NetworkNameRequiredPathParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NetworkResourceDescription"
        description: Description for creating a network resource.
        required: true
        x-ms-parameter-location: method
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkResourceDescription"
              examples:
                Network_Create:
                  $ref: "#/components/examples/Network_Create"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NetworkResourceDescription"
              examples:
                Network_Create:
                  $ref: "#/components/examples/Network_Create"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Creates or updates a network resource.
      tags:
        - Networks
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/volumes":
    get:
      description: >
        Gets the information about all volume resources in a given resource
        group. The information includes the volume description and other runtime
        information.
      operationId: Volume_ListByResourceGroup
      parameters:
        - $ref: "#/components/parameters/subscriptionIdRequiredPathParam"
        - $ref: "#/components/parameters/api-versionRequiredQueryParam"
        - $ref: "#/components/parameters/ResourceGroupNameRequiredPathParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VolumeResourceDescriptionList"
              examples:
                VolumesList:
                  $ref: "#/components/examples/VolumesList"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Gets all the volume resources in a given resource group.
      tags:
        - Volumes
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/volumes/{volumeName}":
    delete:
      description: Deletes the volume identified by the name.
      operationId: Volume_Delete
      parameters:
        - $ref: "#/components/parameters/subscriptionIdRequiredPathParam"
        - $ref: "#/components/parameters/api-versionRequiredQueryParam"
        - $ref: "#/components/parameters/ResourceGroupNameRequiredPathParam"
        - $ref: "#/components/parameters/VolumeNameRequiredPathParam"
      responses:
        "200":
          description: OK
        "204":
          description: No Content - the specified volume was not found.
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Deletes the volume resource.
      tags:
        - Volumes
    get:
      description: >
        Gets the information about the volume resource with a given name. This
        information includes the volume description and other runtime
        information.
      operationId: Volume_Get
      parameters:
        - $ref: "#/components/parameters/subscriptionIdRequiredPathParam"
        - $ref: "#/components/parameters/api-versionRequiredQueryParam"
        - $ref: "#/components/parameters/ResourceGroupNameRequiredPathParam"
        - $ref: "#/components/parameters/VolumeNameRequiredPathParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VolumeResourceDescription"
              examples:
                VolumeGet:
                  $ref: "#/components/examples/VolumeGet"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Gets the volume resource.
      tags:
        - Volumes
    put:
      description: >
        Creates a volume resource with the specified name and description. If a
        volume with the same name already exists, then its description is
        updated to the one indicated in this request.
      operationId: Volume_Create
      parameters:
        - $ref: "#/components/parameters/subscriptionIdRequiredPathParam"
        - $ref: "#/components/parameters/api-versionRequiredQueryParam"
        - $ref: "#/components/parameters/ResourceGroupNameRequiredPathParam"
        - $ref: "#/components/parameters/VolumeNameRequiredPathParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VolumeResourceDescription"
        description: Description for creating a volume resource.
        required: true
        x-ms-parameter-location: method
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VolumeResourceDescription"
              examples:
                VolumeCreate:
                  $ref: "#/components/examples/VolumeCreate"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VolumeResourceDescription"
              examples:
                VolumeCreate:
                  $ref: "#/components/examples/VolumeCreate"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
      summary: Creates or updates a volume resource.
      tags:
        - Volumes
servers:
  - url: https://management.azure.com
components:
  examples:
    ApplicationList:
      value:
        value:
          - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/sbz_demo/providers/Microsoft.ServiceFabricMesh/applications/helloWorldApp
            location: eastus
            name: helloWorldApp
            properties:
              description: SeaBreeze HelloWorld Application!
              healthState: Ok
              provisioningState: Succeeded
              serviceNames:
                - helloWorldService
              status: Ready
            tags: {}
            type: Microsoft.ServiceFabricMesh/applications
          - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/sbz_demo/providers/Microsoft.ServiceFabricMesh/applications/helloWorldAppWindows
            location: eastus
            name: helloWorldAppWindows
            properties:
              description: SeaBreeze HelloWorld Application!
              healthState: Ok
              provisioningState: Succeeded
              serviceNames:
                - helloWorldService
              status: Ready
            tags: {}
            type: Microsoft.ServiceFabricMesh/applications
    NetworksList:
      value:
        value:
          - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/sbz_demo/providers/Microsoft.ServiceFabricMesh/networks/helloWorldNetwork
            location: eastus
            name: helloWorldNetwork
            properties:
              addressPrefix: 10.0.0.4/22
              ingressConfig:
                layer4:
                  - applicationName: helloWorldApp
                    endpointName: helloWorldListener
                    publicPort: 80
                    serviceName: helloWorldService
                publicIPAddress: 52.191.12.219
                qosLevel: Bronze
              provisioningState: Succeeded
            tags: {}
            type: Microsoft.ServiceFabricMesh/networks
          - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/sbz_demo/providers/Microsoft.ServiceFabricMesh/networks/helloWorldNetworkWindows
            location: eastus
            name: helloWorldNetworkWindows
            properties:
              addressPrefix: 10.0.0.4/22
              ingressConfig:
                layer4:
                  - applicationName: helloWorldAppWindows
                    endpointName: helloWorldListener
                    publicPort: 80
                    serviceName: helloWorldService
                publicIPAddress: 52.191.255.103
                qosLevel: Bronze
              provisioningState: Succeeded
            tags: {}
            type: Microsoft.ServiceFabricMesh/networks
    VolumesList:
      value:
        value:
          - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/sbz_demo/providers/Microsoft.ServiceFabricMesh/volumes/sbzDemoVolume2
            location: eastus
            name: sbzDemoShare
            properties:
              azureFileParameters:
                accountName: sbzdemoaccount
                shareName: sharel
              description: File share backed by Azure Files storage.
              provider: SFAzureFile
              provisioningState: Succeeded
            tags: {}
            type: Microsoft.ServiceFabricMesh/volumes
          - id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/sbz_demo/providers/Microsoft.ServiceFabricMesh/volumes/sbzDemoVolume
            location: eastus
            name: sbzDemoVolume
            properties:
              azureFileParameters:
                accountName: sbzdemoaccount
                shareName: sharel
              description: File share backed by Azure Files storage.
              provider: SFAzureFile
              provisioningState: Succeeded
            tags: {}
            type: Microsoft.ServiceFabricMesh/volumes
    ApplicationGet:
      value:
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/sbz_demo/providers/Microsoft.ServiceFabricMesh/applications/helloWorldAppWindows
        location: eastus
        name: helloWorldAppWindows
        properties:
          description: SeaBreeze HelloWorld Application!
          healthState: Ok
          provisioningState: Succeeded
          serviceNames:
            - helloWorldService
          status: Ready
        tags: {}
        type: Microsoft.ServiceFabricMesh/applications
    ApplicationCreateOrUpdate:
      value:
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/sbz_demo/providers/Microsoft.ServiceFabricMesh/applications/myHelloWorldApp
        location: EastUS
        name: myHelloWorldApp
        properties:
          description: SeaBreeze HelloWorld Application!
          healthState: Ok
          provisioningState: Updating
          serviceNames:
            - helloWorldService
          status: Invalid
        tags: {}
        type: Microsoft.ServiceFabricMesh/applications
    ServiceGetAll:
      value:
        value:
          - name: helloWorldService
            properties:
              codePackages:
                - endpoints:
                    - name: helloWorldListener
                      port: 80
                  image: seabreeze/sbz-helloworld:1.0-alpine
                  name: helloWorldCode
                  resources:
                    requests:
                      cpu: 1
                      memoryInGB: 1
                - image: seabreeze/sbz-helloworld-sidecar:1.0-alpine
                  name: helloWorldSideCar
                  resources:
                    requests:
                      cpu: 1
                      memoryInGB: 1
              description: SeaBreeze Hello World Service.
              healthState: Ok
              networkRefs:
                - name: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/sbz_demo/providers/Microsoft.ServiceFabricMesh/networks/helloWorldNetwork
              osType: Linux
              replicaCount: 1
              status: Unknown
            type: Microsoft.ServiceFabricMesh/services
    ServiceGet:
      value:
        name: helloWorldService
        properties:
          codePackages:
            - endpoints:
                - name: helloWorldListener
                  port: 80
              image: seabreeze/sbz-helloworld:1.0-alpine
              name: helloWorldCode
              resources:
                requests:
                  cpu: 1
                  memoryInGB: 1
            - image: seabreeze/sbz-helloworld-sidecar:1.0-alpine
              name: helloWorldSideCar
              resources:
                requests:
                  cpu: 1
                  memoryInGB: 1
          description: SeaBreeze Hello World Service.
          healthState: Ok
          networkRefs:
            - name: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/sbz_demo/providers/Microsoft.ServiceFabricMesh/networks/helloWorldNetwork
          osType: Linux
          replicaCount: 2
          status: Unknown
        type: Microsoft.ServiceFabricMesh/services
    ReplicasGetAll:
      value:
        value:
          - codePackages:
              - endpoints:
                  - name: helloWorldListener
                    port: 80
                image: seabreeze/sbz-helloworld:1.0-alpine
                instanceView:
                  currentState:
                    exitCode: "0"
                    state: Running
                  events:
                    - count: 3
                      firstTimestamp: 2018-04-05T22:37:20.9016844
                      lastTimestamp: 2018-04-06T06:36:06.0887046
                      message: Container created and started.
                      name: Created
                      type: Normal
                    - count: 1
                      firstTimestamp: 2018-04-06T06:34:00.6622454
                      lastTimestamp: 2018-04-06T06:34:00.6622454
                      message: Container was stopped.
                      name: Stopped
                      type: Normal
                  previousState:
                    exitCode: "0"
                    state: NotSpecified
                  restartCount: 1
                name: helloWorldCode
                resources:
                  requests:
                    cpu: 1
                    memoryInGB: 1
              - image: seabreeze/sbz-helloworld-sidecar:1.0-alpine
                instanceView:
                  currentState:
                    exitCode: "0"
                    state: Running
                  events:
                    - count: 3
                      firstTimestamp: 2018-04-05T22:37:20.906688
                      lastTimestamp: 2018-04-06T06:36:06.0827003
                      message: Container created and started.
                      name: Created
                      type: Normal
                    - count: 1
                      firstTimestamp: 2018-04-06T06:34:00.656241
                      lastTimestamp: 2018-04-06T06:34:00.656241
                      message: Container was stopped.
                      name: Stopped
                      type: Normal
                  previousState:
                    exitCode: "0"
                    state: NotSpecified
                  restartCount: 1
                name: helloWorldSideCar
                resources:
                  requests:
                    cpu: 1
                    memoryInGB: 1
            networkRefs:
              - name: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/sbz_demo/providers/Microsoft.ServiceFabricMesh/networks/helloWorldNetwork
            osType: Linux
            replicaName: "1"
          - codePackages:
              - endpoints:
                  - name: helloWorldListener
                    port: 80
                image: seabreeze/sbz-helloworld:1.0-alpine
                instanceView:
                  currentState:
                    exitCode: "0"
                    state: Running
                  events:
                    - count: 3
                      firstTimestamp: 2018-04-05T22:37:20.9016844
                      lastTimestamp: 2018-04-06T06:36:06.0887046
                      message: Container created and started.
                      name: Created
                      type: Normal
                    - count: 1
                      firstTimestamp: 2018-04-06T06:34:00.6622454
                      lastTimestamp: 2018-04-06T06:34:00.6622454
                      message: Container was stopped.
                      name: Stopped
                      type: Normal
                  previousState:
                    exitCode: "0"
                    state: NotSpecified
                  restartCount: 1
                name: helloWorldCode
                resources:
                  requests:
                    cpu: 1
                    memoryInGB: 1
              - image: seabreeze/sbz-helloworld-sidecar:1.0-alpine
                instanceView:
                  currentState:
                    exitCode: "0"
                    state: Running
                  events:
                    - count: 3
                      firstTimestamp: 2018-04-05T22:37:20.906688
                      lastTimestamp: 2018-04-06T06:36:06.0827003
                      message: Container created and started.
                      name: Created
                      type: Normal
                    - count: 1
                      firstTimestamp: 2018-04-06T06:34:00.656241
                      lastTimestamp: 2018-04-06T06:34:00.656241
                      message: Container was stopped.
                      name: Stopped
                      type: Normal
                  previousState:
                    exitCode: "0"
                    state: NotSpecified
                  restartCount: 1
                name: helloWorldSideCar
                resources:
                  requests:
                    cpu: 1
                    memoryInGB: 1
            networkRefs:
              - name: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/sbz_demo/providers/Microsoft.ServiceFabricMesh/networks/helloWorldNetwork
            osType: Linux
            replicaName: "0"
    ReplicaGet:
      value:
        codePackages:
          - endpoints:
              - name: helloWorldListener
                port: 80
            image: seabreeze/sbz-helloworld:1.0-alpine
            instanceView:
              currentState:
                exitCode: "0"
                state: Running
              events:
                - count: 3
                  firstTimestamp: 2018-04-05T22:37:20.9016844
                  lastTimestamp: 2018-04-06T06:36:06.0887046
                  message: Container created and started.
                  name: Created
                  type: Normal
                - count: 1
                  firstTimestamp: 2018-04-06T06:34:00.6622454
                  lastTimestamp: 2018-04-06T06:34:00.6622454
                  message: Container was stopped.
                  name: Stopped
                  type: Normal
              previousState:
                exitCode: "0"
                state: NotSpecified
              restartCount: 1
            name: helloWorldCode
            resources:
              requests:
                cpu: 1
                memoryInGB: 1
          - image: seabreeze/sbz-helloworld-sidecar:1.0-alpine
            instanceView:
              currentState:
                exitCode: "0"
                state: Running
              events:
                - count: 3
                  firstTimestamp: 2018-04-05T22:37:20.906688
                  lastTimestamp: 2018-04-06T06:36:06.0827003
                  message: Container created and started.
                  name: Created
                  type: Normal
                - count: 1
                  firstTimestamp: 2018-04-06T06:34:00.656241
                  lastTimestamp: 2018-04-06T06:34:00.656241
                  message: Container was stopped.
                  name: Stopped
                  type: Normal
              previousState:
                exitCode: "0"
                state: NotSpecified
              restartCount: 1
            name: helloWorldSideCar
            resources:
              requests:
                cpu: 1
                memoryInGB: 1
        networkRefs:
          - name: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/sbz_demo/providers/Microsoft.ServiceFabricMesh/networks/helloWorldNetwork
        osType: Linux
        replicaName: "1"
    ContainerLogsList:
      value:
        content: >2
           * Running on http://0.0.0.0:8080/ (Press CTRL+C to quit)
           * Downloading style https://assets-cdn.github.com/assets/frameworks-8f281eb0a8d2308ceb36e714ba3c3aec.css
           * Downloading style https://assets-cdn.github.com/assets/github-a698da0d53574b056d3c79ac732d4a70.css
           * Downloading style https://assets-cdn.github.com/assets/site-83dc1f7ebc9c7461fe1eab799b56c4c4.css
           * Cached all downloads in /root/.grip/cache-4.5.2
          167.220.0.83 - - [06/Apr/2018 07:16:02] "GET / HTTP/1.1" 200 -

          167.220.0.83 - - [06/Apr/2018 07:16:02] "GET /__/grip/asset/frameworks-8f281eb0a8d2308ceb36e714ba3c3aec.css HTTP/1.1" 200 -

          167.220.0.83 - - [06/Apr/2018 07:16:02] "GET /__/grip/asset/site-83dc1f7ebc9c7461fe1eab799b56c4c4.css HTTP/1.1" 200 -

          167.220.0.83 - - [06/Apr/2018 07:16:02] "GET /__/grip/asset/github-a698da0d53574b056d3c79ac732d4a70.css HTTP/1.1" 200 -

          167.220.0.83 - - [06/Apr/2018 07:16:02] "GET /__/grip/static/octicons/octicons.css HTTP/1.1" 200 -

          167.220.0.83 - - [06/Apr/2018 07:16:03] "GET /__/grip/static/octicons/octicons.woff2?ef21c39f0ca9b1b5116e5eb7ac5eabe6 HTTP/1.1" 200 -

          167.220.0.83 - - [06/Apr/2018 07:16:03] "GET /__/grip/static/favicon.ico HTTP/1.1" 200 -

          167.220.0.83 - - [06/Apr/2018 07:16:05] "GET /seabreeze-index.md HTTP/1.1" 200 -

          167.220.0.83 - - [06/Apr/2018 07:16:09] "GET /seabreeze-api-application_get.md HTTP/1.1" 200 -
    NetworkGet:
      value:
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/sbz_demo/providers/Microsoft.ServiceFabricMesh/networks/helloWorldNetworkWindows
        location: eastus
        name: helloWorldNetworkWindows
        properties:
          addressPrefix: 10.0.0.4/22
          ingressConfig:
            layer4:
              - applicationName: helloWorldAppWindows
                endpointName: helloWorldListener
                publicPort: 80
                serviceName: helloWorldService
            publicIPAddress: 52.191.255.103
            qosLevel: Bronze
          provisioningState: Succeeded
        tags: {}
        type: Microsoft.ServiceFabricMesh/networks
    Network_Create:
      value:
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/sbz_demo/providers/Microsoft.ServiceFabricMesh/networks/helloWorldNetworkWindows
        location: eastus
        name: helloWorldNetworkWindows
        properties:
          addressPrefix: 10.0.0.4/22
          ingressConfig:
            layer4:
              - applicationName: helloWorldAppWindows
                endpointName: helloWorldListener
                publicPort: 80
                serviceName: helloWorldService
            qosLevel: Bronze
          provisioningState: Updating
        tags: {}
        type: Microsoft.ServiceFabricMesh/networks
    VolumeGet:
      value:
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/sbz_demo/providers/Microsoft.ServiceFabricMesh/volumes/sbzDemoVolume
        location: eastus
        name: sbzDemoVolume
        properties:
          azureFileParameters:
            accountName: sbzdemoaccount
            shareName: sharel
          description: File share backed by Azure Files storage.
          provider: SFAzureFile
          provisioningState: Succeeded
        tags: {}
        type: Microsoft.ServiceFabricMesh/volumes
    VolumeCreate:
      value:
        id: /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/sbz_demo/providers/Microsoft.ServiceFabricMesh/volumes/sbzDemoVolume
        location: eastus
        name: sbzDemoVolume
        properties:
          azureFileParameters:
            accountName: sbzdemoaccount
            shareName: sharel
          description: File share backed by Azure Files storage.
          provider: SFAzureFile
          provisioningState: Updating
        tags: {}
        type: Microsoft.ServiceFabricMesh/volumes
  parameters:
    ApplicationNameRequiredPathParam:
      description: The identity of the application.
      in: path
      name: applicationName
      required: true
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
      schema:
        type: string
      examples:
        ApplicationDelete:
          value: helloWorldAppWindows
        ApplicationGet:
          value: demo1
        ApplicationCreateOrUpdate:
          value: helloWorldApp
        ServiceGetAll:
          value: helloWorldApp
        ServiceGet:
          value: helloWorldApp
        ReplicasGetAll:
          value: helloWorldApp
        ReplicaGet:
          value: helloWorldApp
        ContainerLogsList:
          value: sbzDocApp
    CodePackageNameRequiredPathParam:
      description: The name of the code package.
      in: path
      name: codePackageName
      required: true
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
      schema:
        type: string
      examples:
        ContainerLogsList:
          value: sbzDocCode
    NetworkNameRequiredPathParam:
      description: The identity of the network.
      in: path
      name: networkName
      required: true
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
      schema:
        type: string
      examples:
        NetworkDelete:
          value: helloWorldNetworkWindows
        NetworkGet:
          value: helloWorldNetworkWindows
        Network_Create:
          value: helloWorldNetworkWindows
    ReplicaNameRequiredPathParam:
      description: The identity of the service replica.
      in: path
      name: replicaName
      required: true
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
      schema:
        type: string
      examples:
        ReplicaGet:
          value: "1"
        ContainerLogsList:
          value: "0"
    ResourceGroupNameRequiredPathParam:
      description: Azure resource group name
      in: path
      name: resourceGroupName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
      examples:
        ApplicationList:
          value: sbz_demo
        ApplicationDelete:
          value: sbz_demo
        ApplicationGet:
          value: sbz_demo
        ApplicationCreateOrUpdate:
          value: sbz_demo
        ServiceGetAll:
          value: sbz_demo
        ServiceGet:
          value: sbz_demo
        ReplicasGetAll:
          value: sbz_demo
        ReplicaGet:
          value: sbz_demo
        ContainerLogsList:
          value: sbz_demo
        NetworksList:
          value: sbz_demo
        NetworkDelete:
          value: sbz_demo
        NetworkGet:
          value: sbz_demo
        Network_Create:
          value: sbz_demo
        VolumesList:
          value: sbz_demo
        VolumeDelete:
          value: sbz_demo
        VolumeGet:
          value: sbz_demo
        VolumeCreate:
          value: sbz_demo
    ServiceNameRequiredPathParam:
      description: The identity of the service.
      in: path
      name: serviceName
      required: true
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
      schema:
        type: string
      examples:
        ServiceGet:
          value: helloWorldService
        ReplicasGetAll:
          value: helloWorldService
        ReplicaGet:
          value: helloWorldService
        ContainerLogsList:
          value: sbzDocService
    TailOptionalQueryParam:
      description: Number of lines to show from the end of the logs. Default is 100.
      in: query
      name: tail
      required: false
      x-ms-parameter-location: method
      schema:
        type: integer
    VolumeNameRequiredPathParam:
      description: The identity of the volume.
      in: path
      name: volumeName
      required: true
      x-ms-parameter-location: method
      x-ms-skip-url-encoding: true
      schema:
        type: string
      examples:
        VolumeDelete:
          value: sbzDemoVolume
        VolumeGet:
          value: sbzDemoVolume
        VolumeCreate:
          value: sbzDemoVolume
    api-versionRequiredQueryParam:
      description: The version of the API. This parameter is required and its value must be
        `2018-07-01-preview`.
      in: query
      name: api-version
      required: true
      x-ms-enum:
        modelAsString: true
        name: 2018-07-01-preview
        values:
          - description: The `2018-07-01-preview` version of the API.
            value: 2018-07-01-preview
      schema:
        type: string
        enum:
          - 2018-07-01-preview
        default: 2018-07-01-preview
      examples:
        ApplicationList:
          value: 2018-07-01-preview
        NetworksList:
          value: 2018-07-01-preview
        VolumesList:
          value: 2018-07-01-preview
        ApplicationDelete:
          value: 2018-07-01-preview
        ApplicationGet:
          value: 2018-07-01-preview
        ApplicationCreateOrUpdate:
          value: 2018-07-01-preview
        ServiceGetAll:
          value: 2018-07-01-preview
        ServiceGet:
          value: 2018-07-01-preview
        ReplicasGetAll:
          value: 2018-07-01-preview
        ReplicaGet:
          value: 2018-07-01-preview
        ContainerLogsList:
          value: 2018-07-01-preview
        NetworkDelete:
          value: 2018-07-01-preview
        NetworkGet:
          value: 2018-07-01-preview
        Network_Create:
          value: 2018-07-01-preview
        VolumeDelete:
          value: 2018-07-01-preview
        VolumeGet:
          value: 2018-07-01-preview
        VolumeCreate:
          value: 2018-07-01-preview
    subscriptionIdRequiredPathParam:
      description: The customer subscription identifier
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
      examples:
        ApplicationList:
          value: 00000000-0000-0000-0000-000000000000
        NetworksList:
          value: 00000000-0000-0000-0000-000000000000
        VolumesList:
          value: 00000000-0000-0000-0000-000000000000
        ApplicationDelete:
          value: 00000000-0000-0000-0000-000000000000
        ApplicationGet:
          value: 00000000-0000-0000-0000-000000000000
        ApplicationCreateOrUpdate:
          value: 00000000-0000-0000-0000-000000000000
        ServiceGetAll:
          value: 00000000-0000-0000-0000-000000000000
        ServiceGet:
          value: 00000000-0000-0000-0000-000000000000
        ReplicasGetAll:
          value: 00000000-0000-0000-0000-000000000000
        ReplicaGet:
          value: 00000000-0000-0000-0000-000000000000
        ContainerLogsList:
          value: 00000000-0000-0000-0000-000000000000
        NetworkDelete:
          value: 00000000-0000-0000-0000-000000000000
        NetworkGet:
          value: 00000000-0000-0000-0000-000000000000
        Network_Create:
          value: 00000000-0000-0000-0000-000000000000
        VolumeDelete:
          value: 00000000-0000-0000-0000-000000000000
        VolumeGet:
          value: 00000000-0000-0000-0000-000000000000
        VolumeCreate:
          value: 00000000-0000-0000-0000-000000000000
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    ApplicationProperties:
      description: This type describes properties of an application resource.
      properties:
        debugParams:
          description: Internal use.
          type: string
        description:
          description: User readable description of the application.
          type: string
        diagnostics:
          $ref: "#/components/schemas/DiagnosticsDescription"
        healthState:
          $ref: "#/components/schemas/HealthState"
        serviceNames:
          description: Names of the services in the application.
          items:
            type: string
          readOnly: true
          type: array
        services:
          description: describes the services in the application.
          items:
            $ref: "#/components/schemas/ServiceResourceDescription"
          type: array
        status:
          description: Status of the application resource.
          enum:
            - Invalid
            - Ready
            - Upgrading
            - Creating
            - Deleting
            - Failed
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: true
            name: ApplicationResourceStatus
        statusDetails:
          description: Gives additional information about the current status of the
            application deployment.
          readOnly: true
          type: string
        unhealthyEvaluation:
          description: When the application's health state is not 'Ok', this additional
            details from service fabric Health Manager for the user to know why
            the application is marked unhealthy.
          readOnly: true
          type: string
      type: object
    ApplicationResourceDescription:
      allOf:
        - $ref: "#/components/schemas/TrackedResource"
      description: This type describes an application resource.
      properties:
        properties:
          $ref: "#/components/schemas/ApplicationResourceProperties"
      required:
        - properties
    ApplicationResourceDescriptionList:
      description: A pageable list of application resources.
      properties:
        nextLink:
          description: URI to fetch the next page of the list.
          type: string
        value:
          description: One page of the list.
          items:
            $ref: "#/components/schemas/ApplicationResourceDescription"
          type: array
      type: object
    ApplicationResourceProperties:
      allOf:
        - $ref: "#/components/schemas/ProvisionedResourceProperties"
        - $ref: "#/components/schemas/ApplicationProperties"
      description: This type describes properties of an application resource.
    AvailableOperationDisplay:
      description: An operation available at the listed Azure resource provider.
      properties:
        description:
          description: Description of the available operation.
          type: string
        operation:
          description: Name of the available operation.
          type: string
        provider:
          description: Name of the operation provider.
          type: string
        resource:
          description: Name of the resource on which the operation is available.
          type: string
    AzureInternalMonitoringPipelineSinkDescription:
      allOf:
        - $ref: "#/components/schemas/DiagnosticsSinkProperties"
      description: Diagnostics settings for Geneva.
      properties:
        accountName:
          description: Azure Internal monitoring pipeline account.
          type: string
        autoKeyConfigUrl:
          description: Azure Internal monitoring pipeline autokey associated with the
            certificate.
          type: string
        fluentdConfigUrl:
          description: Azure Internal monitoring agent fluentd configuration.
        maConfigUrl:
          description: Azure Internal monitoring agent configuration.
          type: string
        namespace:
          description: Azure Internal monitoring pipeline account namespace.
          type: string
      type: object
      x-ms-discriminator-value: AzureInternalMonitoringPipeline
    ContainerCodePackageProperties:
      description: Describes a container and its runtime properties.
      properties:
        commands:
          description: Command array to execute within the container in exec form.
          items:
            type: string
          type: array
        diagnostics:
          $ref: "#/components/schemas/DiagnosticsRef"
        endpoints:
          description: The endpoints exposed by this container.
          items:
            $ref: "#/components/schemas/EndpointProperties"
          type: array
        entrypoint:
          description: Override for the default entry point in the container.
          type: string
        environmentVariables:
          description: The environment variables to set in this container
          items:
            $ref: "#/components/schemas/EnvironmentVariable"
          type: array
        image:
          description: The Container image to use.
          type: string
        imageRegistryCredential:
          $ref: "#/components/schemas/ImageRegistryCredential"
        instanceView:
          $ref: "#/components/schemas/ContainerInstanceView"
        labels:
          description: The labels to set in this container.
          items:
            $ref: "#/components/schemas/ContainerLabel"
          type: array
        name:
          description: The name of the code package.
          type: string
        resources:
          $ref: "#/components/schemas/ResourceRequirements"
        settings:
          description: The settings to set in this container. The setting file path can be
            fetched from environment variable "Fabric_SettingPath". The path for
            Windows container is "C:\\secrets". The path for Linux container is
            "/var/secrets".
          items:
            $ref: "#/components/schemas/Setting"
          type: array
        volumeRefs:
          description: The volumes to be attached to the container.
          items:
            $ref: "#/components/schemas/ContainerVolume"
          type: array
      required:
        - name
        - image
        - resources
      type: object
    ContainerEvent:
      description: A container event.
      properties:
        count:
          description: The count of the event.
          type: integer
        firstTimestamp:
          description: Date/time of the first event.
          type: string
        lastTimestamp:
          description: Date/time of the last event.
          type: string
        message:
          description: The event message
          type: string
        name:
          description: The name of the container event.
          type: string
        type:
          description: The event type.
          type: string
      type: object
    ContainerInstanceView:
      description: Runtime information of a container instance.
      properties:
        currentState:
          $ref: "#/components/schemas/ContainerState"
        events:
          description: The events of this container instance.
          items:
            $ref: "#/components/schemas/ContainerEvent"
          type: array
        previousState:
          $ref: "#/components/schemas/ContainerState"
        restartCount:
          description: The number of times the container has been restarted.
          type: integer
      type: object
    ContainerLabel:
      description: Describes a container label.
      properties:
        name:
          description: The name of the container label.
          type: string
        value:
          description: The value of the container label.
          type: string
      required:
        - name
        - value
      type: object
    ContainerLogs:
      description: The logs of the container.
      properties:
        content:
          description: content of the log.
          type: string
      type: object
    ContainerState:
      description: The container state.
      properties:
        detailStatus:
          description: Human-readable status of this state.
          type: string
        exitCode:
          description: The container exit code.
          type: string
        finishTime:
          description: Date/time when the container state finished.
          format: date-time
          type: string
        startTime:
          description: Date/time when the container state started.
          format: date-time
          type: string
        state:
          description: The state of this container
          type: string
      type: object
    ContainerVolume:
      description: Describes how a volume is attached to a container.
      properties:
        destinationPath:
          description: The path within the container at which the volume should be mounted.
            Only valid path characters are allowed.
          type: string
        name:
          description: Name of the volume.
          type: string
        readOnly:
          description: The flag indicating whether the volume is read only. Default is
            'false'.
          type: boolean
      required:
        - name
        - destinationPath
      type: object
    DiagnosticsDescription:
      description: Describes the diagnostics options available
      properties:
        defaultSinkRefs:
          description: The sinks to be used if diagnostics is enabled. Sink choices can be
            overridden at the service and code package level.
          items:
            type: string
          type: array
        enabled:
          description: Status of whether or not sinks are enabled.
          type: boolean
        sinks:
          description: List of supported sinks that can be referenced.
          items:
            $ref: "#/components/schemas/DiagnosticsSinkProperties"
          type: array
      type: object
    DiagnosticsRef:
      description: Reference to sinks in DiagnosticsDescription.
      properties:
        enabled:
          description: Status of whether or not sinks are enabled.
          type: boolean
        sinkRefs:
          description: List of sinks to be used if enabled. References the list of sinks in
            DiagnosticsDescription.
          items:
            type: string
          type: array
      type: object
    DiagnosticsSinkKind:
      description: The kind of DiagnosticsSink.
      enum:
        - Invalid
        - AzureInternalMonitoringPipeline
      type: string
      x-ms-enum:
        modelAsString: true
        name: DiagnosticsSinkKind
        values:
          - description: Indicates an invalid sink kind. All Service Fabric enumerations
              have the invalid type.
            value: Invalid
          - description: Diagnostics settings for Geneva.
            value: AzureInternalMonitoringPipeline
    DiagnosticsSinkProperties:
      description: Properties of a DiagnosticsSink.
      discriminator:
        propertyName: kind
      properties:
        description:
          description: A description of the sink.
          type: string
        kind:
          $ref: "#/components/schemas/DiagnosticsSinkKind"
        name:
          description: Name of the sink. This value is referenced by
            DiagnosticsReferenceDescription
          type: string
      required:
        - kind
      type: object
    EndpointProperties:
      description: Describes a container endpoint.
      properties:
        name:
          description: The name of the endpoint.
          type: string
        port:
          description: Port used by the container.
          type: integer
      required:
        - name
      type: object
    EnvironmentVariable:
      description: Describes an environment variable for the container.
      properties:
        name:
          description: The name of the environment variable.
          type: string
        value:
          description: The value of the environment variable.
          type: string
      type: object
    ErrorModel:
      description: The error details.
      properties:
        code:
          description: The error code.
          type: string
        message:
          description: The error message.
          type: string
    HealthState:
      description: The health state of a resource such as Application, Service, or Network.
      enum:
        - Invalid
        - Ok
        - Warning
        - Error
        - Unknown
      type: string
      x-ms-enum:
        modelAsString: true
        name: HealthState
        values:
          - description: Indicates an invalid health state. All Service Fabric enumerations
              have the invalid type. The value is zero.
            value: Invalid
          - description: Indicates the health state is okay. The value is 1.
            value: Ok
          - description: Indicates the health state is at a warning level. The value is 2.
            value: Warning
          - description: Indicates the health state is at an error level. Error health
              state should be investigated, as they can impact the correct
              functionality of the cluster. The value is 3.
            value: Error
          - description: Indicates an unknown health status. The value is 65535.
            value: Unknown
    ImageRegistryCredential:
      description: Image registry credential.
      properties:
        password:
          description: The password for the private registry.
          type: string
        server:
          description: Docker image registry server, without protocol such as `http` and
            `https`.
          type: string
        username:
          description: The username for the private registry.
          type: string
      required:
        - server
        - username
      type: object
    IngressConfig:
      description: Describes public connectivity configuration for the network.
      properties:
        layer4:
          description: Configuration for layer4 public connectivity for this network.
          items:
            $ref: "#/components/schemas/Layer4IngressConfig"
          type: array
        publicIPAddress:
          description: The public IP address for reaching this network.
          readOnly: true
          type: string
        qosLevel:
          description: The QoS tier for ingress.
          enum:
            - Bronze
          type: string
          x-ms-enum:
            modelAsString: true
            name: IngressQoSLevel
      type: object
    Layer4IngressConfig:
      description: Describes the layer4 configuration for public connectivity for this
        network.
      properties:
        applicationName:
          description: The application name which contains the service to be exposed.
          type: string
        endpointName:
          description: The service endpoint that needs to be exposed.
          type: string
        name:
          description: Layer4 ingress config name.
          type: string
        publicPort:
          description: Specifies the public port at which the service endpoint below needs
            to be exposed.
          type: integer
        serviceName:
          description: The service whose endpoint needs to be exposed at the public port.
          type: string
      type: object
    ManagedProxyResource:
      description: The resource model definition for Azure Resource Manager proxy resource.
        It will have everything other than required location and tags. This
        proxy resource is explicitly created or updated by including it in the
        parent resource.
      properties:
        id:
          description: Fully qualified identifier for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
          readOnly: true
          type: string
          x-ms-mutability:
            - read
        name:
          description: The name of the resource
          type: string
          x-ms-mutability:
            - read
            - create
            - update
        type:
          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or
            Microsoft.Storage/storageAccounts.
          readOnly: true
          type: string
          x-ms-mutability:
            - read
      x-ms-azure-resource: true
    NetworkProperties:
      description: Describes a network.
      properties:
        addressPrefix:
          description: the address prefix for this network.
          type: string
        description:
          description: User readable description of the network.
          type: string
        ingressConfig:
          $ref: "#/components/schemas/IngressConfig"
      required:
        - addressPrefix
      type: object
    NetworkRef:
      description: Describes a network reference in a service.
      properties:
        name:
          description: Name of the network.
          type: string
      type: object
    NetworkResourceDescription:
      allOf:
        - $ref: "#/components/schemas/TrackedResource"
      description: This type describes a network resource.
      properties:
        properties:
          $ref: "#/components/schemas/NetworkResourceProperties"
      required:
        - properties
    NetworkResourceDescriptionList:
      description: A pageable list of network resources.
      properties:
        nextLink:
          description: URI to fetch the next page of the list.
          type: string
        value:
          description: One page of the list.
          items:
            $ref: "#/components/schemas/NetworkResourceDescription"
          type: array
      type: object
    NetworkResourceProperties:
      allOf:
        - $ref: "#/components/schemas/ProvisionedResourceProperties"
        - $ref: "#/components/schemas/NetworkProperties"
      description: Describes properties of a network resource.
    OperationListResult:
      description: Describes the result of the request to list Service Fabric operations.
      properties:
        nextLink:
          description: URL to get the next set of operation list results if there are any.
          readOnly: true
          type: string
        value:
          description: List of Service Fabric operations supported by the
            Microsoft.ServiceFabric resource provider.
          items:
            $ref: "#/components/schemas/OperationResult"
          type: array
    OperationResult:
      description: List of operations available at the listed Azure resource provider.
      properties:
        display:
          $ref: "#/components/schemas/AvailableOperationDisplay"
        name:
          description: The name of the operation.
          type: string
        nextLink:
          description: The URL to use for getting the next set of results.
          type: string
        origin:
          description: Origin result
          type: string
    ProvisionedResourceProperties:
      description: Describes common properties of a provisioned resource.
      properties:
        provisioningState:
          description: State of the resource.
          readOnly: true
          type: string
    ProxyResource:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: The resource model definition for Azure Resource Manager proxy resource.
        It will have everything other than required location and tags.
    Resource:
      description: The resource model definition for Azure Resource Manager resource.
      properties:
        id:
          description: Fully qualified identifier for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
          readOnly: true
          type: string
          x-ms-mutability:
            - read
        location:
          description: The geo-location where the resource lives
          type: string
          x-ms-mutability:
            - read
            - create
        name:
          description: The name of the resource
          readOnly: true
          type: string
          x-ms-mutability:
            - read
        type:
          description: The type of the resource. Ex- Microsoft.Compute/virtualMachines or
            Microsoft.Storage/storageAccounts.
          readOnly: true
          type: string
          x-ms-mutability:
            - read
      x-ms-azure-resource: true
    ResourceLimits:
      description: This type describes the resource limits for a given container. It
        describes the most amount of resources a container is allowed to use
        before being restarted.
      properties:
        cpu:
          description: CPU limits in cores. At present, only full cores are supported.
          format: double
          type: number
        memoryInGB:
          description: The memory limit in GB.
          format: double
          type: number
      type: object
    ResourceRequests:
      description: >
        This type describes the requested resources for a given container. It
        describes the least amount of resources required for the container. A
        container can consume more than requested resources up to the specified
        limits before being restarted. Currently, the requested resources are
        treated as limits.
      properties:
        cpu:
          description: Requested number of CPU cores. At present, only full cores are
            supported.
          format: double
          type: number
        memoryInGB:
          description: The memory request in GB for this container.
          format: double
          type: number
      required:
        - memoryInGB
        - cpu
      type: object
    ResourceRequirements:
      description: This type describes the resource requirements for a container or a
        service.
      properties:
        limits:
          $ref: "#/components/schemas/ResourceLimits"
        requests:
          $ref: "#/components/schemas/ResourceRequests"
      required:
        - requests
      type: object
    ServiceList:
      description: |
        A pageable list of all services in an application.
      properties:
        nextLink:
          description: URI to fetch the next page of the list.
          type: string
        value:
          description: One page of the list.
          items:
            $ref: "#/components/schemas/ServiceResourceDescription"
          type: array
      type: object
    ServiceReplicaDescription:
      allOf:
        - $ref: "#/components/schemas/ServiceReplicaProperties"
        - properties:
            replicaName:
              description: Name of the replica.
              type: string
          type: object
      description: This type describes a replica of a service resource.
      type: object
    ServiceReplicaList:
      description: |
        A pageable list of replicas of a service resource.
      properties:
        nextLink:
          description: URI to fetch the next page of the list.
          type: string
        value:
          description: One page of the list.
          items:
            $ref: "#/components/schemas/ServiceReplicaDescription"
          type: array
      type: object
    ServiceReplicaProperties:
      description: Describes the properties of a service replica.
      properties:
        codePackages:
          description: >
            Describes the set of code packages that forms the service. A code
            package describes the container and the properties for running it.
            All the code packages are started together on the same host and
            share the same context (network, process etc.).
          items:
            $ref: "#/components/schemas/ContainerCodePackageProperties"
          type: array
        diagnostics:
          $ref: "#/components/schemas/DiagnosticsRef"
        networkRefs:
          description: The names of the private networks that this service needs to be part
            of.
          items:
            $ref: "#/components/schemas/NetworkRef"
          type: array
        osType:
          description: |
            The Operating system type required by the code in service.
          enum:
            - Linux
            - Windows
          type: string
          x-ms-enum:
            modelAsString: true
            name: OperatingSystemTypes
      required:
        - osType
        - codePackages
      type: object
    ServiceResourceDescription:
      allOf:
        - $ref: "#/components/schemas/ManagedProxyResource"
      description: This type describes a service resource.
      properties:
        properties:
          $ref: "#/components/schemas/ServiceResourceProperties"
      required:
        - properties
    ServiceResourceProperties:
      allOf:
        - $ref: "#/components/schemas/ServiceReplicaProperties"
        - properties:
            description:
              description: User readable description of the service.
              type: string
            healthState:
              $ref: "#/components/schemas/HealthState"
            replicaCount:
              description: The number of replicas of the service to create. Defaults to 1
                if not specified.
              type: integer
            status:
              description: Represents the status of the service.
              enum:
                - Unknown
                - Active
                - Upgrading
                - Deleting
                - Creating
                - Failed
              readOnly: true
              type: string
              x-ms-enum:
                modelAsString: true
                name: ServiceResourceStatus
          type: object
      description: This type describes properties of a service resource.
    Setting:
      description: Describes a setting for the container.
      properties:
        name:
          description: The name of the setting.
          type: string
        value:
          description: The value of the setting.
          type: string
      type: object
    TrackedResource:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: The resource model definition for Azure Resource Manager tracked
        top-level resource.
      properties:
        location:
          description: The geo-location where the resource lives
          type: string
          x-ms-mutability:
            - read
            - create
        tags:
          additionalProperties:
            type: string
          description: Resource tags.
          type: object
          x-ms-mutability:
            - read
            - create
            - update
      required:
        - location
    VolumeProperties:
      description: This type describes properties of a volume resource.
      properties:
        azureFileParameters:
          $ref: "#/components/schemas/VolumeProviderParametersAzureFile"
        description:
          description: User readable description of the volume.
          type: string
        provider:
          description: Provider of the volume.
          enum:
            - SFAzureFile
          type: string
          x-ms-enum:
            modelAsString: true
            name: VolumeProvider
      required:
        - provider
      type: object
    VolumeProviderParametersAzureFile:
      description: This type describes a volume provided by an Azure Files file share.
      properties:
        accountKey:
          description: Access key of the Azure storage account for the File Share.
          type: string
        accountName:
          description: Name of the Azure storage account for the File Share.
          type: string
        shareName:
          description: Name of the Azure Files file share that provides storage for the
            volume.
          type: string
      required:
        - accountName
        - shareName
      type: object
    VolumeResourceDescription:
      allOf:
        - $ref: "#/components/schemas/TrackedResource"
      description: This type describes a volume resource.
      properties:
        properties:
          $ref: "#/components/schemas/VolumeResourceProperties"
      required:
        - properties
    VolumeResourceDescriptionList:
      description: A pageable list of volume resources.
      properties:
        nextLink:
          description: URI to fetch the next page of the list.
          type: string
        value:
          description: One page of the list.
          items:
            $ref: "#/components/schemas/VolumeResourceDescription"
          type: array
      type: object
    VolumeResourceProperties:
      allOf:
        - $ref: "#/components/schemas/ProvisionedResourceProperties"
        - $ref: "#/components/schemas/VolumeProperties"
      description: Describes properties of a volume resource.
