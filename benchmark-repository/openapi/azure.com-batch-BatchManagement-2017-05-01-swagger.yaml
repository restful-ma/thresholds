openapi: 3.0.0
info:
  title: BatchManagement
  version: 2017-05-01
  x-apisguru-categories:
    - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-ms-code-generation-settings:
    name: BatchManagementClient
  x-origin:
    - format: swagger
      url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/batch/resource-manager/Microsoft.Batch/stable/2017-05-01/BatchManagement.json
      version: "2.0"
  x-preferred: false
  x-providerName: azure.com
  x-serviceName: batch-BatchManagement
  x-tags:
    - Azure
    - Microsoft
security:
  - azure_auth:
      - user_impersonation
paths:
  /providers/Microsoft.Batch/operations:
    get:
      description: Lists available operations for the Microsoft.Batch provider
      operationId: Operations_List
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
      responses:
        "200":
          description: The operation was successful. The response contains the list of
            available operations.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationListResult"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Operations
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.Batch/batchAccounts":
    get:
      description: Gets information about the Batch accounts associated with the
        subscription.
      operationId: BatchAccount_List
      parameters:
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful. The response contains a list of Batch
            account entities associated with the subscription.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchAccountListResult"
              examples:
                BatchAccountList:
                  $ref: "#/components/examples/BatchAccountList"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - BatchAccount
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/providers/Microsoft.Batch/locations/{locationName}/checkNameAvailability":
    post:
      description: Checks whether the Batch account name is available in the specified
        region.
      operationId: Location_CheckNameAvailability
      parameters:
        - description: The desired region for the name check.
          in: path
          name: locationName
          required: true
          schema:
            type: string
          examples:
            LocationCheckNameAvailability_AlreadyExists:
              value: japaneast
            LocationCheckNameAvailability_Available:
              value: japaneast
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckNameAvailabilityParameters"
        description: Properties needed to check the availability of a name.
        required: true
      responses:
        "200":
          description: Success. Returns details about whether a Batch account name is
            available.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckNameAvailabilityResult"
              examples:
                LocationCheckNameAvailability_AlreadyExists:
                  $ref: "#/components/examples/LocationCheckNameAvailability_Alread\
                    yExists"
                LocationCheckNameAvailability_Available:
                  $ref: "#/components/examples/LocationCheckNameAvailability_Availa\
                    ble"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
  "/subscriptions/{subscriptionId}/providers/Microsoft.Batch/locations/{locationName}/quotas":
    get:
      description: Gets the Batch service quotas for the specified subscription at the
        given location.
      operationId: Location_GetQuotas
      parameters:
        - description: The region for which to retrieve Batch service quotas.
          in: path
          name: locationName
          required: true
          schema:
            type: string
          examples:
            LocationGetQuotas:
              value: japaneast
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful. The response contains the Batch
            service quotas for the subscription in the specified location.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchLocationQuota"
              examples:
                LocationGetQuotas:
                  $ref: "#/components/examples/LocationGetQuotas"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Location
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts":
    get:
      description: Gets information about the Batch accounts associated with the specified
        resource group.
      operationId: BatchAccount_ListByResourceGroup
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful. The response contains a list of Batch
            account entities associated with the resource group.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchAccountListResult"
              examples:
                BatchAccountListByResourceGroup:
                  $ref: "#/components/examples/BatchAccountListByResourceGroup"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - BatchAccount
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}":
    delete:
      description: Deletes the specified Batch account.
      operationId: BatchAccount_Delete
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful.
        "202":
          description: The operation will be completed asynchronously.
          headers:
            Location:
              description: The URL of the resource used to check the status of the
                asynchronous operation.
              schema:
                type: string
            Retry-After:
              description: Suggested delay to check the status of the asynchronous
                operation. The value is an integer that specifies the delay in
                seconds.
              schema:
                type: integer
                format: int32
        "204":
          description: NoContent -- account does not exist in the subscription.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - BatchAccount
      x-ms-long-running-operation: true
    get:
      description: Gets information about the specified Batch account.
      operationId: BatchAccount_Get
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful. The response contains the Batch
            account entity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchAccount"
              examples:
                BatchAccountGet:
                  $ref: "#/components/examples/BatchAccountGet"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - BatchAccount
    patch:
      description: Updates the properties of an existing Batch account.
      operationId: BatchAccount_Update
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchAccountUpdateParameters"
        description: Additional parameters for account update.
        required: true
      responses:
        "200":
          description: The operation was successful. The response contains the Batch
            account entity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchAccount"
              examples:
                BatchAccountUpdate:
                  $ref: "#/components/examples/BatchAccountUpdate"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - BatchAccount
    put:
      description: Creates a new Batch account with the specified parameters. Existing
        accounts cannot be updated with this API and should instead be updated
        with the Update Batch Account API.
      operationId: BatchAccount_Create
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - description: "A name for the Batch account which must be unique within the
            region. Batch account names must be between 3 and 24 characters in
            length and must use only numbers and lowercase letters. This name is
            used as part of the DNS name that is used to access the Batch
            service in the region in which the account is created. For example:
            http://accountname.region.batch.azure.com/."
          in: path
          name: accountName
          required: true
          schema:
            type: string
            minLength: 3
            maxLength: 24
            pattern: ^[-\w\._]+$
          examples:
            BatchAccountCreate_BYOS:
              value: sampleacct
            BatchAccountCreate_Default:
              value: sampleacct
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchAccountCreateParameters"
        description: Additional parameters for account creation.
        required: true
      responses:
        "200":
          description: The operation was successful. The response contains the Batch
            account entity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchAccount"
              examples:
                BatchAccountCreate_BYOS:
                  $ref: "#/components/examples/BatchAccountCreate_BYOS"
                BatchAccountCreate_Default:
                  $ref: "#/components/examples/BatchAccountCreate_Default"
        "202":
          description: The operation will be completed asynchronously.
          headers:
            Location:
              description: The URL of the resource used to check the status of the
                asynchronous operation.
              schema:
                type: string
            Retry-After:
              description: Suggested delay to check the status of the asynchronous
                operation. The value is an integer that specifies the delay in
                seconds.
              schema:
                type: integer
                format: int32
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - BatchAccount
      x-ms-long-running-operation: true
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications":
    get:
      description: Lists all of the applications in the specified account.
      operationId: Application_List
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - description: The maximum number of items to return in the response.
          in: query
          name: maxresults
          required: false
          schema:
            type: integer
            format: int32
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful. The response contains a list of the
            application entities associated with the specified account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListApplicationsResult"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Application
      x-ms-pageable:
        nextLinkName: nextLink
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationId}":
    delete:
      description: Deletes an application.
      operationId: Application_Delete
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - description: The ID of the application.
          in: path
          name: applicationId
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "204":
          description: The operation was successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Application
    get:
      description: Gets information about the specified application.
      operationId: Application_Get
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - description: The ID of the application.
          in: path
          name: applicationId
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful. The response contains the application
            entity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Application"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Application
    patch:
      description: Updates settings for the specified application.
      operationId: Application_Update
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - description: The ID of the application.
          in: path
          name: applicationId
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationUpdateParameters"
        description: The parameters for the request.
        required: true
      responses:
        "204":
          description: The operation was successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Application
    put:
      description: Adds an application to the specified Batch account.
      operationId: Application_Create
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - description: The ID of the application.
          in: path
          name: applicationId
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApplicationCreateParameters"
        description: The parameters for the request.
      responses:
        "201":
          description: The operation was successful. The response contains the application
            entity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Application"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - Application
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationId}/versions/{version}":
    delete:
      description: Deletes an application package record and its associated binary file.
      operationId: ApplicationPackage_Delete
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - description: The ID of the application.
          in: path
          name: applicationId
          required: true
          schema:
            type: string
        - description: The version of the application to delete.
          in: path
          name: version
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "204":
          description: The operation was successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - ApplicationPackage
    get:
      description: Gets information about the specified application package.
      operationId: ApplicationPackage_Get
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - description: The ID of the application.
          in: path
          name: applicationId
          required: true
          schema:
            type: string
        - description: The version of the application.
          in: path
          name: version
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful. The response contains the application
            package entity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationPackage"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - ApplicationPackage
    put:
      description: Creates an application package record.
      operationId: ApplicationPackage_Create
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - description: The ID of the application.
          in: path
          name: applicationId
          required: true
          schema:
            type: string
        - description: The version of the application.
          in: path
          name: version
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "201":
          description: The operation was successful. The response contains the application
            package entity.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationPackage"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - ApplicationPackage
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/applications/{applicationId}/versions/{version}/activate":
    post:
      description: Activates the specified application package.
      operationId: ApplicationPackage_Activate
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - description: The ID of the application.
          in: path
          name: applicationId
          required: true
          schema:
            type: string
        - description: The version of the application to activate.
          in: path
          name: version
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActivateApplicationPackageParameters"
        description: The parameters for the request.
        required: true
      responses:
        "204":
          description: The operation was successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - ApplicationPackage
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/listKeys":
    post:
      description: This operation applies only to Batch accounts created with a
        poolAllocationMode of 'BatchService'. If the Batch account was created
        with a poolAllocationMode of 'UserSubscription', clients cannot use
        access to keys to authenticate, and must use Azure Active Directory
        instead. In this case, getting the keys will fail.
      operationId: BatchAccount_GetKeys
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "200":
          description: The operation was successful. The response contains the keys of the
            Batch account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchAccountKeys"
              examples:
                BatchAccountGetKeys:
                  $ref: "#/components/examples/BatchAccountGetKeys"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      summary: Gets the account keys for the specified Batch account.
      tags:
        - BatchAccount
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/regenerateKeys":
    post:
      description: Regenerates the specified account key for the Batch account.
      operationId: BatchAccount_RegenerateKey
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchAccountRegenerateKeyParameters"
        description: The type of key to regenerate.
        required: true
      responses:
        "200":
          description: The operation was successful. The response contains the Batch
            account keys.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchAccountKeys"
              examples:
                BatchAccountRegenerateKey:
                  $ref: "#/components/examples/BatchAccountRegenerateKey"
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - BatchAccount
  "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}/syncAutoStorageKeys":
    post:
      description: Synchronizes access keys for the auto-storage account configured for the
        specified Batch account.
      operationId: BatchAccount_SynchronizeAutoStorageKeys
      parameters:
        - $ref: "#/components/parameters/ResourceGroupNameParameter"
        - $ref: "#/components/parameters/AccountNameParameter"
        - $ref: "#/components/parameters/ApiVersionParameter"
        - $ref: "#/components/parameters/SubscriptionIdParameter"
      responses:
        "204":
          description: The operation was successful.
        default:
          description: Error response describing why the operation failed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CloudError"
      tags:
        - BatchAccount
servers:
  - url: https://management.azure.com
components:
  examples:
    BatchAccountList:
      value:
        value:
          - id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct
            location: japaneast
            name: sampleacct
            properties:
              accountEndpoint: sampleacct.japaneast.batch.azure.com
              activeJobAndJobScheduleQuota: 20
              autoStorage:
                lastKeySync: 2016-03-10T23:48:38.9878479Z
                storageAccountId: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Storage/storageAccounts/samplestorage
              dedicatedCoreQuota: 20
              lowPriorityCoreQuota: 20
              poolAllocationMode: BatchService
              poolQuota: 20
              provisioningState: Succeeded
            type: Microsoft.Batch/batchAccounts
    LocationCheckNameAvailability_AlreadyExists:
      value:
        message: An account named 'existingaccountname' is already in use.
        nameAvailable: false
        reason: AlreadyExists
    LocationCheckNameAvailability_Available:
      value:
        nameAvailable: true
    LocationGetQuotas:
      value:
        accountQuota: 1
    BatchAccountListByResourceGroup:
      value:
        value:
          - id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct
            location: japaneast
            name: sampleacct
            properties:
              accountEndpoint: sampleacct.japaneast.batch.azure.com
              activeJobAndJobScheduleQuota: 20
              autoStorage:
                lastKeySync: 2016-03-10T23:48:38.9878479Z
                storageAccountId: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Storage/storageAccounts/samplestorage
              dedicatedCoreQuota: 20
              lowPriorityCoreQuota: 20
              poolAllocationMode: BatchService
              poolQuota: 20
              provisioningState: Succeeded
            type: Microsoft.Batch/batchAccounts
    BatchAccountGet:
      value:
        id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct
        location: japaneast
        name: sampleacct
        properties:
          accountEndpoint: sampleacct.japaneast.batch.azure.com
          activeJobAndJobScheduleQuota: 20
          autoStorage:
            lastKeySync: 2016-03-10T23:48:38.9878479Z
            storageAccountId: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Storage/storageAccounts/samplestorage
          dedicatedCoreQuota: 20
          lowPriorityCoreQuota: 20
          poolAllocationMode: BatchService
          poolQuota: 20
          provisioningState: Succeeded
        type: Microsoft.Batch/batchAccounts
    BatchAccountUpdate:
      value:
        id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct
        location: japaneast
        name: sampleacct
        properties:
          accountEndpoint: sampleacct.japaneast.batch.azure.com
          activeJobAndJobScheduleQuota: 20
          autoStorage:
            lastKeySync: 2016-03-10T23:48:38.9878479Z
            storageAccountId: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Storage/storageAccounts/samplestorage
          dedicatedCoreQuota: 20
          lowPriorityCoreQuota: 20
          poolAllocationMode: BatchService
          poolQuota: 20
          provisioningState: Succeeded
        type: Microsoft.Batch/batchAccounts
    BatchAccountCreate_BYOS:
      value:
        id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct
        location: japaneast
        name: sampleacct
        properties:
          accountEndpoint: sampleacct.japaneast.batch.azure.com
          activeJobAndJobScheduleQuota: 20
          autoStorage:
            lastKeySync: 2016-03-10T23:48:38.9878479Z
            storageAccountId: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Storage/storageAccounts/samplestorage
          dedicatedCoreQuota: 20
          keyVaultReference:
            id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.KeyVault/vaults/sample
            url: http://sample.vault.azure.net/
          lowPriorityCoreQuota: 20
          poolAllocationMode: UserSubscription
          poolQuota: 20
          provisioningState: Succeeded
        type: Microsoft.Batch/batchAccounts
    BatchAccountCreate_Default:
      value:
        id: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Batch/batchAccounts/sampleacct
        location: japaneast
        name: sampleacct
        properties:
          accountEndpoint: sampleacct.japaneast.batch.azure.com
          activeJobAndJobScheduleQuota: 20
          autoStorage:
            lastKeySync: 2016-03-10T23:48:38.9878479Z
            storageAccountId: /subscriptions/subid/resourceGroups/default-azurebatch-japaneast/providers/Microsoft.Storage/storageAccounts/samplestorage
          dedicatedCoreQuota: 20
          lowPriorityCoreQuota: 20
          poolAllocationMode: BatchService
          poolQuota: 20
          provisioningState: Succeeded
        type: Microsoft.Batch/batchAccounts
    BatchAccountGetKeys:
      value:
        accountName: sampleacct
        primary: AAAA==
        secondary: BBBB==
    BatchAccountRegenerateKey:
      value:
        accountName: sampleacct
        primary: AAAA==
        secondary: BBBB==
  parameters:
    AccountNameParameter:
      description: The name of the Batch account.
      in: path
      name: accountName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
        minLength: 3
        maxLength: 24
        pattern: ^[-\w\._]+$
      examples:
        BatchAccountDelete:
          value: sampleacct
        BatchAccountGet:
          value: sampleacct
        BatchAccountUpdate:
          value: sampleacct
        BatchAccountGetKeys:
          value: sampleacct
        BatchAccountRegenerateKey:
          value: sampleacct
    ApiVersionParameter:
      description: The API version to be used with the HTTP request.
      in: query
      name: api-version
      required: true
      schema:
        type: string
      examples:
        BatchAccountList:
          value: 2017-05-01
        LocationCheckNameAvailability_AlreadyExists:
          value: 2017-05-01
        LocationCheckNameAvailability_Available:
          value: 2017-05-01
        LocationGetQuotas:
          value: 2017-05-01
        BatchAccountListByResourceGroup:
          value: 2017-05-01
        BatchAccountDelete:
          value: 2017-05-01
        BatchAccountGet:
          value: 2017-05-01
        BatchAccountUpdate:
          value: 2017-05-01
        BatchAccountCreate_BYOS:
          value: 2017-05-01
        BatchAccountCreate_Default:
          value: 2017-05-01
        BatchAccountGetKeys:
          value: 2017-05-01
        BatchAccountRegenerateKey:
          value: 2017-05-01
    ResourceGroupNameParameter:
      description: The name of the resource group that contains the Batch account.
      in: path
      name: resourceGroupName
      required: true
      x-ms-parameter-location: method
      schema:
        type: string
        pattern: ^[-\w\._]+$
      examples:
        BatchAccountListByResourceGroup:
          value: default-azurebatch-japaneast
        BatchAccountDelete:
          value: default-azurebatch-japaneast
        BatchAccountGet:
          value: default-azurebatch-japaneast
        BatchAccountUpdate:
          value: default-azurebatch-japaneast
        BatchAccountCreate_BYOS:
          value: default-azurebatch-japaneast
        BatchAccountCreate_Default:
          value: default-azurebatch-japaneast
        BatchAccountGetKeys:
          value: default-azurebatch-japaneast
        BatchAccountRegenerateKey:
          value: default-azurebatch-japaneast
    SubscriptionIdParameter:
      description: The Azure subscription ID. This is a GUID-formatted string (e.g.
        00000000-0000-0000-0000-000000000000)
      in: path
      name: subscriptionId
      required: true
      schema:
        type: string
      examples:
        BatchAccountList:
          value: subid
        LocationCheckNameAvailability_AlreadyExists:
          value: subid
        LocationCheckNameAvailability_Available:
          value: subid
        LocationGetQuotas:
          value: subid
        BatchAccountListByResourceGroup:
          value: subid
        BatchAccountDelete:
          value: subid
        BatchAccountGet:
          value: subid
        BatchAccountUpdate:
          value: subid
        BatchAccountCreate_BYOS:
          value: subid
        BatchAccountCreate_Default:
          value: subid
        BatchAccountGetKeys:
          value: subid
        BatchAccountRegenerateKey:
          value: subid
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
  schemas:
    ActivateApplicationPackageParameters:
      description: Parameters for an activating an application package.
      properties:
        format:
          description: The format of the application package binary file.
          type: string
      required:
        - format
    Application:
      description: Contains information about an application in a Batch account.
      properties:
        allowUpdates:
          description: A value indicating whether packages within the application may be
            overwritten using the same version string.
          type: boolean
        defaultVersion:
          description: The package to use if a client requests the application but does not
            specify a version.
          type: string
        displayName:
          description: The display name for the application.
          type: string
        id:
          description: A string that uniquely identifies the application within the account.
          type: string
        packages:
          description: The list of packages under this application.
          items:
            $ref: "#/components/schemas/ApplicationPackage"
          type: array
    ApplicationCreateParameters:
      description: Parameters for adding an Application.
      properties:
        allowUpdates:
          description: A value indicating whether packages within the application may be
            overwritten using the same version string.
          type: boolean
        displayName:
          description: The display name for the application.
          type: string
    ApplicationPackage:
      description: An application package which represents a particular version of an
        application.
      properties:
        format:
          description: The format of the application package, if the package is active.
          readOnly: true
          type: string
        id:
          description: The ID of the application.
          readOnly: true
          type: string
        lastActivationTime:
          description: The time at which the package was last activated, if the package is
            active.
          format: date-time
          readOnly: true
          type: string
        state:
          description: The current state of the application package.
          enum:
            - pending
            - active
            - unmapped
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: PackageState
        storageUrl:
          description: The URL for the application package in Azure Storage.
          readOnly: true
          type: string
        storageUrlExpiry:
          description: The UTC time at which the Azure Storage URL will expire.
          format: date-time
          readOnly: true
          type: string
        version:
          description: "The version of the application package. "
          readOnly: true
          type: string
    ApplicationUpdateParameters:
      description: Parameters for an update application request.
      properties:
        allowUpdates:
          description: A value indicating whether packages within the application may be
            overwritten using the same version string.
          type: boolean
        defaultVersion:
          description: The package to use if a client requests the application but does not
            specify a version.
          type: string
        displayName:
          description: The display name for the application.
          type: string
    AutoStorageBaseProperties:
      description: The properties related to the auto-storage account.
      properties:
        storageAccountId:
          description: The resource ID of the storage account to be used for auto-storage
            account.
          type: string
      required:
        - storageAccountId
    AutoStorageProperties:
      allOf:
        - $ref: "#/components/schemas/AutoStorageBaseProperties"
      description: Contains information about the auto-storage account associated with a
        Batch account.
      properties:
        lastKeySync:
          description: The UTC time at which storage keys were last synchronized with the
            Batch account.
          format: date-time
          type: string
      required:
        - lastKeySync
    BatchAccount:
      allOf:
        - $ref: "#/components/schemas/Resource"
      description: Contains information about an Azure Batch account.
      properties:
        properties:
          $ref: "#/components/schemas/BatchAccountProperties"
    BatchAccountCreateParameters:
      description: Parameters supplied to the Create operation.
      properties:
        location:
          description: The region in which to create the account.
          type: string
        properties:
          $ref: "#/components/schemas/BatchAccountCreateProperties"
        tags:
          additionalProperties:
            type: string
          description: The user-specified tags associated with the account.
          type: object
      required:
        - location
    BatchAccountCreateProperties:
      description: The properties of a Batch account.
      properties:
        autoStorage:
          $ref: "#/components/schemas/AutoStorageBaseProperties"
        keyVaultReference:
          $ref: "#/components/schemas/KeyVaultReference"
        poolAllocationMode:
          $ref: "#/components/schemas/PoolAllocationMode"
    BatchAccountKeys:
      description: A set of Azure Batch account keys.
      properties:
        accountName:
          description: The Batch account name.
          readOnly: true
          type: string
        primary:
          description: The primary key associated with the account.
          readOnly: true
          type: string
        secondary:
          description: The secondary key associated with the account.
          readOnly: true
          type: string
    BatchAccountListResult:
      description: Values returned by the List operation.
      properties:
        nextLink:
          description: The continuation token.
          type: string
        value:
          description: The collection of Batch accounts returned by the listing operation.
          items:
            $ref: "#/components/schemas/BatchAccount"
          type: array
    BatchAccountProperties:
      description: Account specific properties.
      properties:
        accountEndpoint:
          description: The account endpoint used to interact with the Batch service.
          readOnly: true
          type: string
        activeJobAndJobScheduleQuota:
          format: int32
          readOnly: true
          title: The active job and job schedule quota for this Batch account.
          type: integer
          nullable: false
        autoStorage:
          $ref: "#/components/schemas/AutoStorageProperties"
        dedicatedCoreQuota:
          format: int32
          readOnly: true
          title: The dedicated core quota for this Batch account.
          type: integer
          nullable: false
        keyVaultReference:
          $ref: "#/components/schemas/KeyVaultReference"
        lowPriorityCoreQuota:
          format: int32
          readOnly: true
          title: The low-priority core quota for this Batch account.
          type: integer
          nullable: false
        poolAllocationMode:
          $ref: "#/components/schemas/PoolAllocationMode"
        poolQuota:
          format: int32
          readOnly: true
          title: The pool quota for this Batch account.
          type: integer
          nullable: false
        provisioningState:
          description: The provisioned state of the resource
          enum:
            - Invalid
            - Creating
            - Deleting
            - Succeeded
            - Failed
            - Cancelled
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: ProvisioningState
          nullable: false
    BatchAccountRegenerateKeyParameters:
      description: Parameters supplied to the RegenerateKey operation.
      properties:
        keyName:
          description: The type of account key to regenerate.
          enum:
            - Primary
            - Secondary
          type: string
          x-ms-enum:
            modelAsString: false
            name: AccountKeyType
      required:
        - keyName
    BatchAccountUpdateParameters:
      description: Parameters for updating an Azure Batch account.
      properties:
        properties:
          $ref: "#/components/schemas/BatchAccountUpdateProperties"
        tags:
          additionalProperties:
            type: string
          description: The user-specified tags associated with the account.
          type: object
    BatchAccountUpdateProperties:
      description: The properties of a Batch account.
      properties:
        autoStorage:
          $ref: "#/components/schemas/AutoStorageBaseProperties"
    BatchLocationQuota:
      description: Quotas associated with a Batch region for a particular subscription.
      properties:
        accountQuota:
          description: The number of Batch accounts that may be created under the
            subscription in the specified region.
          format: int32
          readOnly: true
          type: integer
    CheckNameAvailabilityParameters:
      description: Parameters for a check name availability request.
      properties:
        name:
          description: The name to check for availability
          type: string
        type:
          description: The resource type. Must be set to Microsoft.Batch/batchAccounts
          enum:
            - Microsoft.Batch/batchAccounts
          type: string
          x-ms-enum:
            modelAsString: false
            name: Type
      required:
        - name
        - type
    CheckNameAvailabilityResult:
      description: The CheckNameAvailability operation response.
      properties:
        message:
          description: Gets an error message explaining the Reason value in more detail.
          readOnly: true
          type: string
        nameAvailable:
          description: Gets a boolean value that indicates whether the name is available
            for you to use. If true, the name is available. If false, the name
            has already been taken or invalid and cannot be used.
          readOnly: true
          type: boolean
        reason:
          description: Gets the reason that a Batch account name could not be used. The
            Reason element is only returned if NameAvailable is false.
          enum:
            - Invalid
            - AlreadyExists
          readOnly: true
          type: string
          x-ms-enum:
            modelAsString: false
            name: NameAvailabilityReason
    CloudError:
      description: An error response from the Batch service.
      properties:
        error:
          $ref: "#/components/schemas/CloudErrorBody"
      x-ms-external: true
    CloudErrorBody:
      description: An error response from the Batch service.
      properties:
        code:
          description: An identifier for the error. Codes are invariant and are intended to
            be consumed programmatically.
          type: string
        details:
          description: A list of additional details about the error.
          items:
            $ref: "#/components/schemas/CloudErrorBody"
          type: array
        message:
          description: A message describing the error, intended to be suitable for display
            in a user interface.
          type: string
        target:
          description: The target of the particular error. For example, the name of the
            property in error.
          type: string
      x-ms-external: true
    KeyVaultReference:
      description: Identifies the Azure key vault associated with a Batch account.
      properties:
        id:
          description: The resource ID of the Azure key vault associated with the Batch
            account.
          type: string
        url:
          description: The URL of the Azure key vault associated with the Batch account.
          type: string
      required:
        - id
        - url
    ListApplicationsResult:
      description: The result of performing list applications.
      properties:
        nextLink:
          description: The URL to get the next set of results.
          type: string
        value:
          description: The list of applications.
          items:
            $ref: "#/components/schemas/Application"
          type: array
    Operation:
      properties:
        display:
          properties:
            description:
              title: The friendly name of the operation
              type: string
            operation:
              description: "For example: read, write, delete, or listKeys/action"
              title: The operation type.
              type: string
            provider:
              title: Friendly name of the resource provider.
              type: string
            resource:
              title: The resource type on which the operation is performed.
              type: string
          title: The object that describes the operation.
        name:
          description: This is of the format {provider}/{resource}/{operation}
          title: The operation name.
          type: string
        origin:
          title: The intended executor of the operation.
          type: string
        properties:
          title: Properties of the operation.
          type: object
      title: A REST API operation
      type: object
    OperationListResult:
      properties:
        nextLink:
          title: The URL to get the next set of operation list results if there are
            any.
          type: string
        value:
          items:
            $ref: "#/components/schemas/Operation"
          title: The list of operations supported by the resource provider.
          type: array
      title: Result of the request to list REST API operations. It contains a list of
        operations and a URL nextLink to get the next set of results.
    PoolAllocationMode:
      description: The allocation mode for creating pools in the Batch account.
      enum:
        - BatchService
        - UserSubscription
      type: string
      x-ms-enum:
        modelAsString: false
        name: PoolAllocationMode
    Resource:
      description: A definition of an Azure resource.
      properties:
        id:
          description: The ID of the resource.
          readOnly: true
          type: string
        location:
          description: The location of the resource.
          readOnly: true
          type: string
        name:
          description: The name of the resource.
          readOnly: true
          type: string
        tags:
          additionalProperties:
            type: string
          description: The tags of the resource.
          readOnly: true
          type: object
        type:
          description: The type of the resource.
          readOnly: true
          type: string
      x-ms-azure-resource: true
