openapi: 3.0.0
info:
  contact:
    x-twitter: redirectionio
  description: API documentation for redirection.io
  title: redirection.io
  version: 1.1.0
  x-apisguru-categories:
    - hosting
  x-logo:
    url: https://twitter.com/redirectionio/profile_image?size=original
  x-origin:
    - format: swagger
      url: https://api.redirection.io/docs.json
      version: "2.0"
  x-providerName: redirection.io
security:
  - apiKey: []
paths:
  /agent-flush-aggregate-requests:
    post:
      operationId: postAgentFlushAggregateRequestCollection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/AgentFlushAggregateRequest"
          application/json:
            schema:
              $ref: "#/components/schemas/AgentFlushAggregateRequest"
          text/html:
            schema:
              $ref: "#/components/schemas/AgentFlushAggregateRequest"
          text/csv:
            schema:
              $ref: "#/components/schemas/AgentFlushAggregateRequest"
        description: The new AgentFlushAggregateRequest resource
      responses:
        "201":
          description: AgentFlushAggregateRequest resource created
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/AgentFlushAggregateRequest"
            application/json:
              schema:
                $ref: "#/components/schemas/AgentFlushAggregateRequest"
            text/html:
              schema:
                $ref: "#/components/schemas/AgentFlushAggregateRequest"
            text/csv:
              schema:
                $ref: "#/components/schemas/AgentFlushAggregateRequest"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Creates a AgentFlushAggregateRequest resource.
      tags:
        - AgentFlushAggregateRequest
  /agent-flush-requests:
    post:
      requestBody:
        $ref: "#/components/requestBodies/AgentFlushRequest"
      responses:
        "201":
          description: AgentFlushRequest resource created
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/AgentFlushRequest"
            application/json:
              schema:
                $ref: "#/components/schemas/AgentFlushRequest"
            text/html:
              schema:
                $ref: "#/components/schemas/AgentFlushRequest"
            text/csv:
              schema:
                $ref: "#/components/schemas/AgentFlushRequest"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Creates a AgentFlushRequest resource.
      tags:
        - AgentFlushRequest
  /agent-instance-updates:
    post:
      operationId: postInstanceCollection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/Instance-Write"
          application/json:
            schema:
              $ref: "#/components/schemas/Instance-Write"
          text/html:
            schema:
              $ref: "#/components/schemas/Instance-Write"
          text/csv:
            schema:
              $ref: "#/components/schemas/Instance-Write"
        description: The new Instance resource
      responses:
        "201":
          description: Instance resource created
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Instance-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/Instance-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/Instance-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/Instance-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Creates a Instance resource.
      tags:
        - Instance
  "/agent-instance-updates/{id}":
    put:
      operationId: putInstanceItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Instance-Write"
      responses:
        "200":
          description: Instance resource updated
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Instance-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/Instance-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/Instance-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/Instance-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Replaces the Instance resource.
      tags:
        - Instance
  /agent-rule-complexes:
    get:
      operationId: agent-legacy-complexRuleCollection
      parameters:
        - in: query
          name: projectId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Rule collection response
          content:
            application/ld+json:
              schema:
                items:
                  $ref: "#/components/schemas/Rule-Read"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Rule-Read"
                type: array
            text/html:
              schema:
                items:
                  $ref: "#/components/schemas/Rule-Read"
                type: array
            text/csv:
              schema:
                items:
                  $ref: "#/components/schemas/Rule-Read"
                type: array
      summary: Retrieves the collection of Rule resources.
      tags:
        - Rule
  /agent-rule-straights:
    get:
      operationId: agent-legacy-straightRuleCollection
      parameters:
        - in: query
          name: projectId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Rule collection response
          content:
            application/ld+json:
              schema:
                items:
                  $ref: "#/components/schemas/Rule-Read"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Rule-Read"
                type: array
            text/html:
              schema:
                items:
                  $ref: "#/components/schemas/Rule-Read"
                type: array
            text/csv:
              schema:
                items:
                  $ref: "#/components/schemas/Rule-Read"
                type: array
      summary: Retrieves the collection of Rule resources.
      tags:
        - Rule
  /agent-rules:
    get:
      operationId: agentRuleCollection
      parameters:
        - in: query
          name: projectId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Rule collection response
          content:
            application/ld+json:
              schema:
                items:
                  $ref: "#/components/schemas/Rule-Read"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Rule-Read"
                type: array
            text/html:
              schema:
                items:
                  $ref: "#/components/schemas/Rule-Read"
                type: array
            text/csv:
              schema:
                items:
                  $ref: "#/components/schemas/Rule-Read"
                type: array
      summary: Retrieves the collection of Rule resources.
      tags:
        - Rule
  /aggregate-logs:
    get:
      operationId: getAggregateLogCollection
      parameters:
        - description: The collection page number
          in: query
          name: page
          required: false
          schema:
            type: integer
        - in: query
          name: projectId
          required: false
          schema:
            type: string
        - in: query
          name: createdAt
          required: false
          schema:
            type: string
        - in: query
          name: source
          required: false
          schema:
            type: string
        - in: query
          name: target
          required: false
          schema:
            type: string
        - in: query
          name: statusCode
          required: false
          schema:
            type: string
        - in: query
          name: referrer
          required: false
          schema:
            type: string
        - in: query
          name: userAgent
          required: false
          schema:
            type: string
        - in: query
          name: userAgentType
          required: false
          schema:
            type: string
        - in: query
          name: simplifiedUserAgent
          required: false
          schema:
            type: string
        - in: query
          name: ruleId
          required: false
          schema:
            type: string
        - in: query
          name: instanceName
          required: false
          schema:
            type: string
        - in: query
          name: excludeUrls
          required: false
          schema:
            type: string
        - in: query
          name: excludeEmptyReferrer
          required: false
          schema:
            type: string
        - in: query
          name: createdAt_gt
          required: false
          schema:
            type: string
        - in: query
          name: createdAt_gte
          required: false
          schema:
            type: string
        - in: query
          name: createdAt_lt
          required: false
          schema:
            type: string
        - in: query
          name: createdAt_lte
          required: false
          schema:
            type: string
        - in: query
          name: statusCode_gt
          required: false
          schema:
            type: string
        - in: query
          name: statusCode_gte
          required: false
          schema:
            type: string
        - in: query
          name: statusCode_lt
          required: false
          schema:
            type: string
        - in: query
          name: statusCode_lte
          required: false
          schema:
            type: string
      responses:
        "200":
          description: AggregateLog collection response
          content:
            application/ld+json:
              schema:
                items:
                  $ref: "#/components/schemas/AggregateLog-Read"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/AggregateLog-Read"
                type: array
            text/html:
              schema:
                items:
                  $ref: "#/components/schemas/AggregateLog-Read"
                type: array
            text/csv:
              schema:
                items:
                  $ref: "#/components/schemas/AggregateLog-Read"
                type: array
      summary: Retrieves the collection of AggregateLog resources.
      tags:
        - AggregateLog
  "/aggregate-logs/{id}":
    get:
      operationId: getAggregateLogItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: AggregateLog resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/AggregateLog-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/AggregateLog-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/AggregateLog-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/AggregateLog-Read"
        "404":
          description: Resource not found
      summary: Retrieves a AggregateLog resource.
      tags:
        - AggregateLog
  /crawl-urls:
    get:
      operationId: getCrawlUrlCollection
      parameters:
        - description: The collection page number
          in: query
          name: page
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: CrawlUrl collection response
          content:
            application/ld+json:
              schema:
                items:
                  $ref: "#/components/schemas/CrawlUrl-Read"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/CrawlUrl-Read"
                type: array
            text/html:
              schema:
                items:
                  $ref: "#/components/schemas/CrawlUrl-Read"
                type: array
            text/csv:
              schema:
                items:
                  $ref: "#/components/schemas/CrawlUrl-Read"
                type: array
      summary: Retrieves the collection of CrawlUrl resources.
      tags:
        - CrawlUrl
  "/crawl-urls/{id}":
    get:
      operationId: getCrawlUrlItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: CrawlUrl resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/CrawlUrl-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/CrawlUrl-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/CrawlUrl-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/CrawlUrl-Read"
        "404":
          description: Resource not found
      summary: Retrieves a CrawlUrl resource.
      tags:
        - CrawlUrl
  /crawls:
    get:
      operationId: getCrawlCollection
      parameters:
        - in: query
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: firstUrl
          required: false
          schema:
            type: string
        - in: query
          name: sort[createdAt]
          required: false
          schema:
            type: string
        - description: The collection page number
          in: query
          name: page
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: Crawl collection response
          content:
            application/ld+json:
              schema:
                items:
                  $ref: "#/components/schemas/Crawl-Read"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Crawl-Read"
                type: array
            text/html:
              schema:
                items:
                  $ref: "#/components/schemas/Crawl-Read"
                type: array
            text/csv:
              schema:
                items:
                  $ref: "#/components/schemas/Crawl-Read"
                type: array
      summary: Retrieves the collection of Crawl resources.
      tags:
        - Crawl
    post:
      operationId: postCrawlCollection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/Crawl-Write"
          application/json:
            schema:
              $ref: "#/components/schemas/Crawl-Write"
          text/html:
            schema:
              $ref: "#/components/schemas/Crawl-Write"
          text/csv:
            schema:
              $ref: "#/components/schemas/Crawl-Write"
        description: The new Crawl resource
      responses:
        "201":
          description: Crawl resource created
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Crawl"
            application/json:
              schema:
                $ref: "#/components/schemas/Crawl"
            text/html:
              schema:
                $ref: "#/components/schemas/Crawl"
            text/csv:
              schema:
                $ref: "#/components/schemas/Crawl"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Creates a Crawl resource.
      tags:
        - Crawl
  "/crawls/{id}":
    get:
      operationId: getCrawlItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Crawl resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Crawl-ReadDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/Crawl-ReadDetails"
            text/html:
              schema:
                $ref: "#/components/schemas/Crawl-ReadDetails"
            text/csv:
              schema:
                $ref: "#/components/schemas/Crawl-ReadDetails"
        "404":
          description: Resource not found
      summary: Retrieves a Crawl resource.
      tags:
        - Crawl
  "/crawls/{id}/cancel":
    post:
      operationId: cancelCrawlItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/Crawl"
          application/json:
            schema:
              $ref: "#/components/schemas/Crawl"
          text/html:
            schema:
              $ref: "#/components/schemas/Crawl"
          text/csv:
            schema:
              $ref: "#/components/schemas/Crawl"
        description: The new Crawl resource
      responses:
        "201":
          description: Crawl resource created
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Crawl-ReadDetails"
            application/json:
              schema:
                $ref: "#/components/schemas/Crawl-ReadDetails"
            text/html:
              schema:
                $ref: "#/components/schemas/Crawl-ReadDetails"
            text/csv:
              schema:
                $ref: "#/components/schemas/Crawl-ReadDetails"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Creates a Crawl resource.
      tags:
        - Crawl
  /explain-urls:
    post:
      operationId: postExplainUrlCollection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/ExplainUrl-Write"
          application/json:
            schema:
              $ref: "#/components/schemas/ExplainUrl-Write"
          text/html:
            schema:
              $ref: "#/components/schemas/ExplainUrl-Write"
          text/csv:
            schema:
              $ref: "#/components/schemas/ExplainUrl-Write"
        description: The new ExplainUrl resource
      responses:
        "201":
          description: ExplainUrl resource created
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/ExplainUrl"
            application/json:
              schema:
                $ref: "#/components/schemas/ExplainUrl"
            text/html:
              schema:
                $ref: "#/components/schemas/ExplainUrl"
            text/csv:
              schema:
                $ref: "#/components/schemas/ExplainUrl"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Creates a ExplainUrl resource.
      tags:
        - ExplainUrl
  "/explain-urls/{id}":
    get:
      operationId: getExplainUrlItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ExplainUrl resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/ExplainUrl"
            application/json:
              schema:
                $ref: "#/components/schemas/ExplainUrl"
            text/html:
              schema:
                $ref: "#/components/schemas/ExplainUrl"
            text/csv:
              schema:
                $ref: "#/components/schemas/ExplainUrl"
        "404":
          description: Resource not found
      summary: Retrieves a ExplainUrl resource.
      tags:
        - ExplainUrl
  /export-rules:
    get:
      operationId: exportRuleCollection
      parameters:
        - in: query
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: sort[id]
          required: false
          schema:
            type: string
        - in: query
          name: sort[viewCount]
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Rule collection response
          content:
            application/ld+json:
              schema:
                items:
                  $ref: "#/components/schemas/Rule-Read"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Rule-Read"
                type: array
            text/html:
              schema:
                items:
                  $ref: "#/components/schemas/Rule-Read"
                type: array
            text/csv:
              schema:
                items:
                  $ref: "#/components/schemas/Rule-Read"
                type: array
      summary: Retrieves the collection of Rule resources.
      tags:
        - Rule
  /impact-rule-changes:
    post:
      operationId: postImpactRuleChangeCollection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/ImpactRuleChange-Write"
          application/json:
            schema:
              $ref: "#/components/schemas/ImpactRuleChange-Write"
          text/html:
            schema:
              $ref: "#/components/schemas/ImpactRuleChange-Write"
          text/csv:
            schema:
              $ref: "#/components/schemas/ImpactRuleChange-Write"
        description: The new ImpactRuleChange resource
      responses:
        "201":
          description: ImpactRuleChange resource created
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/ImpactRuleChange-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/ImpactRuleChange-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/ImpactRuleChange-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/ImpactRuleChange-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Creates a ImpactRuleChange resource.
      tags:
        - ImpactRuleChange
  "/impact-rule-changes/{id}":
    get:
      operationId: getImpactRuleChangeItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ImpactRuleChange resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/ImpactRuleChange-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/ImpactRuleChange-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/ImpactRuleChange-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/ImpactRuleChange-Read"
        "404":
          description: Resource not found
      summary: Retrieves a ImpactRuleChange resource.
      tags:
        - ImpactRuleChange
  /impact-smart-lists:
    post:
      operationId: postImpactSmartListCollection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/ImpactSmartList-Write"
          application/json:
            schema:
              $ref: "#/components/schemas/ImpactSmartList-Write"
          text/html:
            schema:
              $ref: "#/components/schemas/ImpactSmartList-Write"
          text/csv:
            schema:
              $ref: "#/components/schemas/ImpactSmartList-Write"
        description: The new ImpactSmartList resource
      responses:
        "201":
          description: ImpactSmartList resource created
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/ImpactSmartList-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/ImpactSmartList-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/ImpactSmartList-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/ImpactSmartList-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Creates a ImpactSmartList resource.
      tags:
        - ImpactSmartList
  "/impact-smart-lists/{id}":
    get:
      operationId: getImpactSmartListItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: ImpactSmartList resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/ImpactSmartList-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/ImpactSmartList-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/ImpactSmartList-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/ImpactSmartList-Read"
        "404":
          description: Resource not found
      summary: Retrieves a ImpactSmartList resource.
      tags:
        - ImpactSmartList
  /imports:
    get:
      operationId: getImportCollection
      parameters:
        - in: query
          name: projectId
          required: true
          schema:
            type: string
        - description: The collection page number
          in: query
          name: page
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: Import collection response
          content:
            application/ld+json:
              schema:
                items:
                  $ref: "#/components/schemas/Import-Read"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Import-Read"
                type: array
            text/html:
              schema:
                items:
                  $ref: "#/components/schemas/Import-Read"
                type: array
            text/csv:
              schema:
                items:
                  $ref: "#/components/schemas/Import-Read"
                type: array
      summary: Retrieves the collection of Import resources.
      tags:
        - Import
    post:
      operationId: postImportCollection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/Import-Write"
          application/json:
            schema:
              $ref: "#/components/schemas/Import-Write"
          text/html:
            schema:
              $ref: "#/components/schemas/Import-Write"
          text/csv:
            schema:
              $ref: "#/components/schemas/Import-Write"
        description: The new Import resource
      responses:
        "201":
          description: Import resource created
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Import-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/Import-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/Import-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/Import-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Creates a Import resource.
      tags:
        - Import
  "/imports/{id}":
    get:
      operationId: getImportItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Import resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Import-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/Import-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/Import-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/Import-Read"
        "404":
          description: Resource not found
      summary: Retrieves a Import resource.
      tags:
        - Import
  /instances:
    get:
      operationId: getInstanceCollection
      parameters:
        - in: query
          name: projectId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Instance collection response
          content:
            application/ld+json:
              schema:
                items:
                  $ref: "#/components/schemas/Instance-Read"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Instance-Read"
                type: array
            text/html:
              schema:
                items:
                  $ref: "#/components/schemas/Instance-Read"
                type: array
            text/csv:
              schema:
                items:
                  $ref: "#/components/schemas/Instance-Read"
                type: array
      summary: Retrieves the collection of Instance resources.
      tags:
        - Instance
  "/instances/{id}":
    get:
      operationId: getInstanceItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Instance resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Instance-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/Instance-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/Instance-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/Instance-Read"
        "404":
          description: Resource not found
      summary: Retrieves a Instance resource.
      tags:
        - Instance
    put:
      operationId: loggingInstanceItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Instance-Write"
      responses:
        "200":
          description: Instance resource updated
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Instance-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/Instance-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/Instance-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/Instance-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Replaces the Instance resource.
      tags:
        - Instance
  "/instances/{id}/live":
    put:
      operationId: liveInstanceItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/Instance-Write"
      responses:
        "200":
          description: Instance resource updated
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Instance-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/Instance-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/Instance-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/Instance-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Replaces the Instance resource.
      tags:
        - Instance
  /invitations:
    get:
      operationId: getInvitationCollection
      parameters:
        - in: query
          name: targetId
          required: true
          schema:
            type: string
        - in: query
          name: targetType
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Invitation collection response
          content:
            application/ld+json:
              schema:
                items:
                  $ref: "#/components/schemas/Invitation-Read"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Invitation-Read"
                type: array
            text/html:
              schema:
                items:
                  $ref: "#/components/schemas/Invitation-Read"
                type: array
            text/csv:
              schema:
                items:
                  $ref: "#/components/schemas/Invitation-Read"
                type: array
      summary: Retrieves the collection of Invitation resources.
      tags:
        - Invitation
    post:
      operationId: postInvitationCollection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/Invitation-Write"
          application/json:
            schema:
              $ref: "#/components/schemas/Invitation-Write"
          text/html:
            schema:
              $ref: "#/components/schemas/Invitation-Write"
          text/csv:
            schema:
              $ref: "#/components/schemas/Invitation-Write"
        description: The new Invitation resource
      responses:
        "201":
          description: Invitation resource created
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Invitation-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/Invitation-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/Invitation-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/Invitation-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Creates a Invitation resource.
      tags:
        - Invitation
  "/invitations/accept/{token}":
    post:
      operationId: acceptInvitationItem
      parameters:
        - description: The invitation acceptation token
          in: path
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/Invitation"
          application/json:
            schema:
              $ref: "#/components/schemas/Invitation"
          text/html:
            schema:
              $ref: "#/components/schemas/Invitation"
          text/csv:
            schema:
              $ref: "#/components/schemas/Invitation"
        description: The new Invitation resource
        required: true
      responses:
        "201":
          description: Invitation resource created
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Invitation-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/Invitation-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/Invitation-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/Invitation-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Creates a Invitation resource.
      tags:
        - Invitation
  "/invitations/{id}":
    delete:
      operationId: deleteInvitationItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Invitation resource deleted
        "404":
          description: Resource not found
      summary: Removes the Invitation resource.
      tags:
        - Invitation
    get:
      operationId: getInvitationItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Invitation resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Invitation-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/Invitation-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/Invitation-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/Invitation-Read"
        "404":
          description: Resource not found
      summary: Retrieves a Invitation resource.
      tags:
        - Invitation
  /logs:
    get:
      operationId: getLogCollection
      parameters:
        - description: The collection page number
          in: query
          name: page
          required: false
          schema:
            type: integer
        - in: query
          name: projectId
          required: false
          schema:
            type: string
        - in: query
          name: createdAt
          required: false
          schema:
            type: string
        - in: query
          name: source
          required: false
          schema:
            type: string
        - in: query
          name: target
          required: false
          schema:
            type: string
        - in: query
          name: statusCode
          required: false
          schema:
            type: string
        - in: query
          name: referrer
          required: false
          schema:
            type: string
        - in: query
          name: userAgent
          required: false
          schema:
            type: string
        - in: query
          name: userAgentType
          required: false
          schema:
            type: string
        - in: query
          name: simplifiedUserAgent
          required: false
          schema:
            type: string
        - in: query
          name: ruleId
          required: false
          schema:
            type: string
        - in: query
          name: instanceName
          required: false
          schema:
            type: string
        - in: query
          name: excludeUrls
          required: false
          schema:
            type: string
        - in: query
          name: excludeEmptyReferrer
          required: false
          schema:
            type: string
        - in: query
          name: createdAt_gt
          required: false
          schema:
            type: string
        - in: query
          name: createdAt_gte
          required: false
          schema:
            type: string
        - in: query
          name: createdAt_lt
          required: false
          schema:
            type: string
        - in: query
          name: createdAt_lte
          required: false
          schema:
            type: string
        - in: query
          name: statusCode_gt
          required: false
          schema:
            type: string
        - in: query
          name: statusCode_gte
          required: false
          schema:
            type: string
        - in: query
          name: statusCode_lt
          required: false
          schema:
            type: string
        - in: query
          name: statusCode_lte
          required: false
          schema:
            type: string
      responses:
        "200":
          description: Log collection response
          content:
            application/ld+json:
              schema:
                items:
                  $ref: "#/components/schemas/Log-Read"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Log-Read"
                type: array
            text/html:
              schema:
                items:
                  $ref: "#/components/schemas/Log-Read"
                type: array
            text/csv:
              schema:
                items:
                  $ref: "#/components/schemas/Log-Read"
                type: array
      summary: Retrieves the collection of Log resources.
      tags:
        - Log
  "/logs/{id}":
    get:
      operationId: getLogItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Log resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Log-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/Log-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/Log-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/Log-Read"
        "404":
          description: Resource not found
      summary: Retrieves a Log resource.
      tags:
        - Log
  /markers:
    post:
      operationId: postMarkerCollection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/Marker-Write"
          application/json:
            schema:
              $ref: "#/components/schemas/Marker-Write"
          text/html:
            schema:
              $ref: "#/components/schemas/Marker-Write"
          text/csv:
            schema:
              $ref: "#/components/schemas/Marker-Write"
        description: The new Marker resource
      responses:
        "201":
          description: Marker resource created
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Marker"
            application/json:
              schema:
                $ref: "#/components/schemas/Marker"
            text/html:
              schema:
                $ref: "#/components/schemas/Marker"
            text/csv:
              schema:
                $ref: "#/components/schemas/Marker"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Creates a Marker resource.
      tags:
        - Marker
  "/markers/{id}":
    delete:
      operationId: deleteMarkerItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Marker resource deleted
        "404":
          description: Resource not found
      summary: Removes the Marker resource.
      tags:
        - Marker
    get:
      operationId: getMarkerItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Marker resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Marker"
            application/json:
              schema:
                $ref: "#/components/schemas/Marker"
            text/html:
              schema:
                $ref: "#/components/schemas/Marker"
            text/csv:
              schema:
                $ref: "#/components/schemas/Marker"
        "404":
          description: Resource not found
      summary: Retrieves a Marker resource.
      tags:
        - Marker
    put:
      operationId: putMarkerItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/Marker"
          application/json:
            schema:
              $ref: "#/components/schemas/Marker"
          text/html:
            schema:
              $ref: "#/components/schemas/Marker"
          text/csv:
            schema:
              $ref: "#/components/schemas/Marker"
        description: The updated Marker resource
      responses:
        "200":
          description: Marker resource updated
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Marker"
            application/json:
              schema:
                $ref: "#/components/schemas/Marker"
            text/html:
              schema:
                $ref: "#/components/schemas/Marker"
            text/csv:
              schema:
                $ref: "#/components/schemas/Marker"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Replaces the Marker resource.
      tags:
        - Marker
  /matching-urls:
    post:
      operationId: postMatchingUrlCollection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/MatchingUrl-Write"
          application/json:
            schema:
              $ref: "#/components/schemas/MatchingUrl-Write"
          text/html:
            schema:
              $ref: "#/components/schemas/MatchingUrl-Write"
          text/csv:
            schema:
              $ref: "#/components/schemas/MatchingUrl-Write"
        description: The new MatchingUrl resource
      responses:
        "201":
          description: MatchingUrl resource created
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/MatchingUrl-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/MatchingUrl-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/MatchingUrl-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/MatchingUrl-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Creates a MatchingUrl resource.
      tags:
        - MatchingUrl
  "/matching-urls/{id}":
    get:
      operationId: getMatchingUrlItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: MatchingUrl resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/MatchingUrl-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/MatchingUrl-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/MatchingUrl-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/MatchingUrl-Read"
        "404":
          description: Resource not found
      summary: Retrieves a MatchingUrl resource.
      tags:
        - MatchingUrl
  /notifications:
    get:
      operationId: getNotificationCollection
      parameters:
        - description: The collection page number
          in: query
          name: page
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: Notification collection response
          content:
            application/ld+json:
              schema:
                items:
                  $ref: "#/components/schemas/Notification-Read"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Notification-Read"
                type: array
            text/html:
              schema:
                items:
                  $ref: "#/components/schemas/Notification-Read"
                type: array
            text/csv:
              schema:
                items:
                  $ref: "#/components/schemas/Notification-Read"
                type: array
      summary: Retrieves the collection of Notification resources.
      tags:
        - Notification
  "/notifications/{id}":
    get:
      operationId: getNotificationItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Notification resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Notification-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/Notification-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/Notification-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/Notification-Read"
        "404":
          description: Resource not found
      summary: Retrieves a Notification resource.
      tags:
        - Notification
  /organizations:
    post:
      operationId: postOrganizationCollection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/Organization-Write"
          application/json:
            schema:
              $ref: "#/components/schemas/Organization-Write"
          text/html:
            schema:
              $ref: "#/components/schemas/Organization-Write"
          text/csv:
            schema:
              $ref: "#/components/schemas/Organization-Write"
        description: The new Organization resource
      responses:
        "201":
          description: Organization resource created
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Organization-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/Organization-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/Organization-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/Organization-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Creates a Organization resource.
      tags:
        - Organization
  "/organizations/{id}":
    delete:
      operationId: deleteOrganizationItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Organization resource deleted
        "404":
          description: Resource not found
      summary: Removes the Organization resource.
      tags:
        - Organization
    get:
      operationId: getOrganizationItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Organization resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Organization-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/Organization-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/Organization-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/Organization-Read"
        "404":
          description: Resource not found
      summary: Retrieves a Organization resource.
      tags:
        - Organization
    put:
      operationId: putOrganizationItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/Organization-Write"
          application/json:
            schema:
              $ref: "#/components/schemas/Organization-Write"
          text/html:
            schema:
              $ref: "#/components/schemas/Organization-Write"
          text/csv:
            schema:
              $ref: "#/components/schemas/Organization-Write"
        description: The updated Organization resource
      responses:
        "200":
          description: Organization resource updated
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Organization-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/Organization-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/Organization-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/Organization-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Replaces the Organization resource.
      tags:
        - Organization
  /post-logs:
    post:
      requestBody:
        $ref: "#/components/requestBodies/AgentFlushRequest"
      responses:
        "201":
          description: AgentFlushRequest resource created
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/AgentFlushRequest"
            application/json:
              schema:
                $ref: "#/components/schemas/AgentFlushRequest"
            text/html:
              schema:
                $ref: "#/components/schemas/AgentFlushRequest"
            text/csv:
              schema:
                $ref: "#/components/schemas/AgentFlushRequest"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Creates a AgentFlushRequest resource.
      tags:
        - AgentFlushRequest
  /projects:
    get:
      operationId: getProjectCollection
      responses:
        "200":
          description: Project collection response
          content:
            application/ld+json:
              schema:
                items:
                  $ref: "#/components/schemas/Project-List"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Project-List"
                type: array
            text/html:
              schema:
                items:
                  $ref: "#/components/schemas/Project-List"
                type: array
            text/csv:
              schema:
                items:
                  $ref: "#/components/schemas/Project-List"
                type: array
      summary: Retrieves the collection of Project resources.
      tags:
        - Project
    post:
      operationId: postProjectCollection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/Project-CreationWrite"
          application/json:
            schema:
              $ref: "#/components/schemas/Project-CreationWrite"
          text/html:
            schema:
              $ref: "#/components/schemas/Project-CreationWrite"
          text/csv:
            schema:
              $ref: "#/components/schemas/Project-CreationWrite"
        description: The new Project resource
      responses:
        "201":
          description: Project resource created
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Project-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/Project-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/Project-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/Project-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Creates a Project resource.
      tags:
        - Project
  "/projects/{id}":
    delete:
      operationId: deleteProjectItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Project resource deleted
        "404":
          description: Resource not found
      summary: Removes the Project resource.
      tags:
        - Project
    get:
      operationId: getProjectItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Project resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Project-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/Project-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/Project-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/Project-Read"
        "404":
          description: Resource not found
      summary: Retrieves a Project resource.
      tags:
        - Project
    put:
      operationId: putProjectItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/Project-Write"
          application/json:
            schema:
              $ref: "#/components/schemas/Project-Write"
          text/html:
            schema:
              $ref: "#/components/schemas/Project-Write"
          text/csv:
            schema:
              $ref: "#/components/schemas/Project-Write"
        description: The updated Project resource
      responses:
        "200":
          description: Project resource updated
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Project-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/Project-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/Project-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/Project-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Replaces the Project resource.
      tags:
        - Project
  /publish-histories:
    get:
      operationId: getPublishHistoryCollection
      parameters:
        - in: query
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: createdAt[before]
          required: false
          schema:
            type: string
        - in: query
          name: createdAt[strictly_before]
          required: false
          schema:
            type: string
        - in: query
          name: createdAt[after]
          required: false
          schema:
            type: string
        - in: query
          name: createdAt[strictly_after]
          required: false
          schema:
            type: string
        - description: The collection page number
          in: query
          name: page
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: PublishHistory collection response
          content:
            application/ld+json:
              schema:
                items:
                  $ref: "#/components/schemas/PublishHistory-Read"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PublishHistory-Read"
                type: array
            text/html:
              schema:
                items:
                  $ref: "#/components/schemas/PublishHistory-Read"
                type: array
            text/csv:
              schema:
                items:
                  $ref: "#/components/schemas/PublishHistory-Read"
                type: array
      summary: Retrieves the collection of PublishHistory resources.
      tags:
        - PublishHistory
  "/publish-histories/{id}":
    get:
      operationId: getPublishHistoryItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: PublishHistory resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/PublishHistory-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/PublishHistory-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/PublishHistory-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/PublishHistory-Read"
        "404":
          description: Resource not found
      summary: Retrieves a PublishHistory resource.
      tags:
        - PublishHistory
  /rule-changes:
    get:
      operationId: getRuleChangeCollection
      parameters:
        - in: query
          name: versionId
          required: true
          schema:
            type: string
        - description: The collection page number
          in: query
          name: page
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: RuleChange collection response
          content:
            application/ld+json:
              schema:
                items:
                  $ref: "#/components/schemas/RuleChange-Read"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/RuleChange-Read"
                type: array
            text/html:
              schema:
                items:
                  $ref: "#/components/schemas/RuleChange-Read"
                type: array
            text/csv:
              schema:
                items:
                  $ref: "#/components/schemas/RuleChange-Read"
                type: array
      summary: Retrieves the collection of RuleChange resources.
      tags:
        - RuleChange
    post:
      operationId: postRuleChangeCollection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/RuleChange-Write"
          application/json:
            schema:
              $ref: "#/components/schemas/RuleChange-Write"
          text/html:
            schema:
              $ref: "#/components/schemas/RuleChange-Write"
          text/csv:
            schema:
              $ref: "#/components/schemas/RuleChange-Write"
        description: The new RuleChange resource
      responses:
        "201":
          description: RuleChange resource created
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/RuleChange-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/RuleChange-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/RuleChange-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/RuleChange-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Creates a RuleChange resource.
      tags:
        - RuleChange
  "/rule-changes/{id}":
    delete:
      operationId: deleteRuleChangeItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: RuleChange resource deleted
        "404":
          description: Resource not found
      summary: Removes the RuleChange resource.
      tags:
        - RuleChange
    get:
      operationId: getRuleChangeItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: RuleChange resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/RuleChange-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/RuleChange-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/RuleChange-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/RuleChange-Read"
        "404":
          description: Resource not found
      summary: Retrieves a RuleChange resource.
      tags:
        - RuleChange
  /rule-set-versions:
    get:
      operationId: getRuleSetVersionCollection
      parameters:
        - in: query
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: sort[createdAt]
          required: false
          schema:
            type: string
        - description: The collection page number
          in: query
          name: page
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: RuleSetVersion collection response
          content:
            application/ld+json:
              schema:
                items:
                  $ref: "#/components/schemas/RuleSetVersion-Read"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/RuleSetVersion-Read"
                type: array
            text/html:
              schema:
                items:
                  $ref: "#/components/schemas/RuleSetVersion-Read"
                type: array
            text/csv:
              schema:
                items:
                  $ref: "#/components/schemas/RuleSetVersion-Read"
                type: array
      summary: Retrieves the collection of RuleSetVersion resources.
      tags:
        - RuleSetVersion
  "/rule-set-versions/{id}":
    get:
      operationId: getRuleSetVersionItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: RuleSetVersion resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/RuleSetVersion-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/RuleSetVersion-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/RuleSetVersion-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/RuleSetVersion-Read"
        "404":
          description: Resource not found
      summary: Retrieves a RuleSetVersion resource.
      tags:
        - RuleSetVersion
  "/rule-set-versions/{id}/clear":
    post:
      operationId: clearRuleSetVersionItem
      parameters:
        - description: The id of the version
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/RuleSetVersion"
      responses:
        "201":
          description: RuleSetVersion resource created
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/RuleSetVersion-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/RuleSetVersion-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/RuleSetVersion-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/RuleSetVersion-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Clear a version
      tags:
        - RuleSetVersion
  "/rule-set-versions/{id}/publish":
    post:
      operationId: publishRuleSetVersionItem
      parameters:
        - description: The id of the version
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/RuleSetVersion"
      responses:
        "201":
          description: RuleSetVersion resource created
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/RuleSetVersion-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/RuleSetVersion-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/RuleSetVersion-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/RuleSetVersion-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Publish a version
      tags:
        - RuleSetVersion
  /rule-statistics:
    get:
      operationId: getRuleStatisticCollection
      parameters:
        - in: query
          name: projectId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: RuleStatistic collection response
          content:
            application/ld+json:
              schema:
                items:
                  $ref: "#/components/schemas/RuleStatistic"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/RuleStatistic"
                type: array
            text/html:
              schema:
                items:
                  $ref: "#/components/schemas/RuleStatistic"
                type: array
            text/csv:
              schema:
                items:
                  $ref: "#/components/schemas/RuleStatistic"
                type: array
      summary: Retrieves the collection of RuleStatistic resources.
      tags:
        - RuleStatistic
  "/rule-statistics/{id}":
    get:
      operationId: getRuleStatisticItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: RuleStatistic resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/RuleStatistic"
            application/json:
              schema:
                $ref: "#/components/schemas/RuleStatistic"
            text/html:
              schema:
                $ref: "#/components/schemas/RuleStatistic"
            text/csv:
              schema:
                $ref: "#/components/schemas/RuleStatistic"
        "404":
          description: Resource not found
      summary: Retrieves a RuleStatistic resource.
      tags:
        - RuleStatistic
  /rules:
    get:
      operationId: getRuleCollection
      parameters:
        - in: query
          name: projectId
          required: true
          schema:
            type: string
        - in: query
          name: sort[id]
          required: false
          schema:
            type: string
        - in: query
          name: sort[viewCount]
          required: false
          schema:
            type: string
        - description: The collection page number
          in: query
          name: page
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: Rule collection response
          content:
            application/ld+json:
              schema:
                items:
                  $ref: "#/components/schemas/Rule-Read"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Rule-Read"
                type: array
            text/html:
              schema:
                items:
                  $ref: "#/components/schemas/Rule-Read"
                type: array
            text/csv:
              schema:
                items:
                  $ref: "#/components/schemas/Rule-Read"
                type: array
      summary: Retrieves the collection of Rule resources.
      tags:
        - Rule
  "/rules/{id}":
    get:
      operationId: getRuleItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Rule resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Rule-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/Rule-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/Rule-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/Rule-Read"
        "404":
          description: Resource not found
      summary: Retrieves a Rule resource.
      tags:
        - Rule
  /smart-lists:
    get:
      operationId: getSmartListCollection
      responses:
        "200":
          description: SmartList collection response
          content:
            application/ld+json:
              schema:
                items:
                  $ref: "#/components/schemas/SmartList"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SmartList"
                type: array
            text/html:
              schema:
                items:
                  $ref: "#/components/schemas/SmartList"
                type: array
            text/csv:
              schema:
                items:
                  $ref: "#/components/schemas/SmartList"
                type: array
      summary: Retrieves the collection of SmartList resources.
      tags:
        - SmartList
  "/smart-lists/{id}":
    get:
      operationId: getSmartListItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: SmartList resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/SmartList"
            application/json:
              schema:
                $ref: "#/components/schemas/SmartList"
            text/html:
              schema:
                $ref: "#/components/schemas/SmartList"
            text/csv:
              schema:
                $ref: "#/components/schemas/SmartList"
        "404":
          description: Resource not found
      summary: Retrieves a SmartList resource.
      tags:
        - SmartList
  /user-organizations:
    post:
      operationId: postUserOrganizationCollection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/UserOrganization-CreationWrite"
          application/json:
            schema:
              $ref: "#/components/schemas/UserOrganization-CreationWrite"
          text/html:
            schema:
              $ref: "#/components/schemas/UserOrganization-CreationWrite"
          text/csv:
            schema:
              $ref: "#/components/schemas/UserOrganization-CreationWrite"
        description: The new UserOrganization resource
      responses:
        "201":
          description: UserOrganization resource created
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/UserOrganization-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/UserOrganization-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/UserOrganization-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/UserOrganization-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Creates a UserOrganization resource.
      tags:
        - UserOrganization
  "/user-organizations/{id}":
    delete:
      operationId: deleteUserOrganizationItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: UserOrganization resource deleted
        "404":
          description: Resource not found
      summary: Removes the UserOrganization resource.
      tags:
        - UserOrganization
    get:
      operationId: getUserOrganizationItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: UserOrganization resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/UserOrganization-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/UserOrganization-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/UserOrganization-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/UserOrganization-Read"
        "404":
          description: Resource not found
      summary: Retrieves a UserOrganization resource.
      tags:
        - UserOrganization
    put:
      operationId: putUserOrganizationItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/UserOrganization-Write"
          application/json:
            schema:
              $ref: "#/components/schemas/UserOrganization-Write"
          text/html:
            schema:
              $ref: "#/components/schemas/UserOrganization-Write"
          text/csv:
            schema:
              $ref: "#/components/schemas/UserOrganization-Write"
        description: The updated UserOrganization resource
      responses:
        "200":
          description: UserOrganization resource updated
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/UserOrganization-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/UserOrganization-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/UserOrganization-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/UserOrganization-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Replaces the UserOrganization resource.
      tags:
        - UserOrganization
  "/user-project-flatteneds/{id}":
    get:
      operationId: getUserProjectFlattenedItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: UserProjectFlattened resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/UserProjectFlattened-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/UserProjectFlattened-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/UserProjectFlattened-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/UserProjectFlattened-Read"
        "404":
          description: Resource not found
      summary: Retrieves a UserProjectFlattened resource.
      tags:
        - UserProjectFlattened
  /user-projects:
    post:
      operationId: postUserProjectCollection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/UserProject-CreationWrite"
          application/json:
            schema:
              $ref: "#/components/schemas/UserProject-CreationWrite"
          text/html:
            schema:
              $ref: "#/components/schemas/UserProject-CreationWrite"
          text/csv:
            schema:
              $ref: "#/components/schemas/UserProject-CreationWrite"
        description: The new UserProject resource
      responses:
        "201":
          description: UserProject resource created
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/UserProject-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/UserProject-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/UserProject-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/UserProject-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Creates a UserProject resource.
      tags:
        - UserProject
  "/user-projects/{id}":
    delete:
      operationId: deleteUserProjectItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: UserProject resource deleted
        "404":
          description: Resource not found
      summary: Removes the UserProject resource.
      tags:
        - UserProject
    get:
      operationId: getUserProjectItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: UserProject resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/UserProject-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/UserProject-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/UserProject-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/UserProject-Read"
        "404":
          description: Resource not found
      summary: Retrieves a UserProject resource.
      tags:
        - UserProject
    put:
      operationId: putUserProjectItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/UserProject-Write"
          application/json:
            schema:
              $ref: "#/components/schemas/UserProject-Write"
          text/html:
            schema:
              $ref: "#/components/schemas/UserProject-Write"
          text/csv:
            schema:
              $ref: "#/components/schemas/UserProject-Write"
        description: The updated UserProject resource
      responses:
        "200":
          description: UserProject resource updated
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/UserProject-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/UserProject-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/UserProject-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/UserProject-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Replaces the UserProject resource.
      tags:
        - UserProject
  /users:
    get:
      operationId: getUserCollection
      parameters:
        - in: query
          name: organizationId
          required: true
          schema:
            type: string
        - in: query
          name: search
          required: false
          schema:
            type: string
      responses:
        "200":
          description: User collection response
          content:
            application/ld+json:
              schema:
                items:
                  $ref: "#/components/schemas/User-List"
                type: array
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/User-List"
                type: array
            text/html:
              schema:
                items:
                  $ref: "#/components/schemas/User-List"
                type: array
            text/csv:
              schema:
                items:
                  $ref: "#/components/schemas/User-List"
                type: array
      summary: Retrieves the collection of User resources.
      tags:
        - User
    post:
      operationId: postUserCollection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/User-CreationWrite"
          application/json:
            schema:
              $ref: "#/components/schemas/User-CreationWrite"
          text/html:
            schema:
              $ref: "#/components/schemas/User-CreationWrite"
          text/csv:
            schema:
              $ref: "#/components/schemas/User-CreationWrite"
        description: The new User resource
      responses:
        "201":
          description: User resource created
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/User-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/User-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/User-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/User-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Creates a User resource.
      tags:
        - User
  /users/forgot-password-request:
    post:
      operationId: postForgotPasswordRequestCollection
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/ForgotPasswordRequest"
          application/json:
            schema:
              $ref: "#/components/schemas/ForgotPasswordRequest"
          text/html:
            schema:
              $ref: "#/components/schemas/ForgotPasswordRequest"
          text/csv:
            schema:
              $ref: "#/components/schemas/ForgotPasswordRequest"
        description: The new ForgotPasswordRequest resource
      responses:
        "201":
          description: ForgotPasswordRequest resource created
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/ForgotPasswordRequest"
            application/json:
              schema:
                $ref: "#/components/schemas/ForgotPasswordRequest"
            text/html:
              schema:
                $ref: "#/components/schemas/ForgotPasswordRequest"
            text/csv:
              schema:
                $ref: "#/components/schemas/ForgotPasswordRequest"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Creates a ForgotPasswordRequest resource.
      tags:
        - ForgotPasswordRequest
  "/users/forgot-password/{resetToken}":
    put:
      operationId: forgot_passwordUserItem
      parameters:
        - in: path
          name: resetToken
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: "#/components/schemas/User-Password"
          application/json:
            schema:
              $ref: "#/components/schemas/User-Password"
          text/html:
            schema:
              $ref: "#/components/schemas/User-Password"
          text/csv:
            schema:
              $ref: "#/components/schemas/User-Password"
        description: The updated User resource
      responses:
        "200":
          description: User resource updated
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/User-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/User-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/User-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/User-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Replaces the User resource.
      tags:
        - User
  "/users/{id}":
    delete:
      operationId: deleteUserItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: User resource deleted
        "404":
          description: Resource not found
      summary: Removes the User resource.
      tags:
        - User
    get:
      operationId: getUserItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/User-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/User-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/User-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/User-Read"
        "404":
          description: Resource not found
      summary: Retrieves a User resource.
      tags:
        - User
  "/users/{id}/confirm-new-email/{newEmailToken}":
    get:
      operationId: confirm_new_emailUserItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: path
          name: newEmailToken
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User resource response
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/User-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/User-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/User-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/User-Read"
        "404":
          description: Resource not found
      summary: Retrieves a User resource.
      tags:
        - User
  "/users/{id}/edit-email":
    put:
      operationId: edit_emailUserItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/User-EditInfo"
      responses:
        "200":
          description: User resource updated
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/User-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/User-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/User-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/User-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Replaces the User resource.
      tags:
        - User
  "/users/{id}/edit-info":
    put:
      operationId: edit_infoUserItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/User-EditInfo"
      responses:
        "200":
          description: User resource updated
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/User-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/User-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/User-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/User-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Replaces the User resource.
      tags:
        - User
  "/users/{id}/edit-password":
    put:
      operationId: edit_passwordUserItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/User-EditInfo"
      responses:
        "200":
          description: User resource updated
          content:
            application/ld+json:
              schema:
                $ref: "#/components/schemas/User-Read"
            application/json:
              schema:
                $ref: "#/components/schemas/User-Read"
            text/html:
              schema:
                $ref: "#/components/schemas/User-Read"
            text/csv:
              schema:
                $ref: "#/components/schemas/User-Read"
        "400":
          description: Invalid input
        "404":
          description: Resource not found
      summary: Replaces the User resource.
      tags:
        - User
servers:
  - url: https://api.redirection.io/
components:
  requestBodies:
    Instance-Write:
      content:
        application/ld+json:
          schema:
            $ref: "#/components/schemas/Instance-Write"
        application/json:
          schema:
            $ref: "#/components/schemas/Instance-Write"
        text/html:
          schema:
            $ref: "#/components/schemas/Instance-Write"
        text/csv:
          schema:
            $ref: "#/components/schemas/Instance-Write"
      description: The updated Instance resource
    RuleSetVersion:
      content:
        application/ld+json:
          schema:
            $ref: "#/components/schemas/RuleSetVersion"
        application/json:
          schema:
            $ref: "#/components/schemas/RuleSetVersion"
        text/html:
          schema:
            $ref: "#/components/schemas/RuleSetVersion"
        text/csv:
          schema:
            $ref: "#/components/schemas/RuleSetVersion"
      description: The new RuleSetVersion resource
      required: true
    AgentFlushRequest:
      content:
        application/ld+json:
          schema:
            $ref: "#/components/schemas/AgentFlushRequest"
        application/json:
          schema:
            $ref: "#/components/schemas/AgentFlushRequest"
        text/html:
          schema:
            $ref: "#/components/schemas/AgentFlushRequest"
        text/csv:
          schema:
            $ref: "#/components/schemas/AgentFlushRequest"
      description: The new AgentFlushRequest resource
    User-EditInfo:
      content:
        application/ld+json:
          schema:
            $ref: "#/components/schemas/User-EditInfo"
        application/json:
          schema:
            $ref: "#/components/schemas/User-EditInfo"
        text/html:
          schema:
            $ref: "#/components/schemas/User-EditInfo"
        text/csv:
          schema:
            $ref: "#/components/schemas/User-EditInfo"
      description: The updated User resource
  securitySchemes:
    apiKey:
      description: Value for the Authorization header
      in: header
      name: Authorization
      type: apiKey
  schemas:
    AgentFlushAggregateRequest:
      description: ""
      properties:
        instanceName: {}
        instanceTime: {}
        logs: {}
      required:
        - logs
        - instanceName
        - instanceTime
      type: object
    AgentFlushRequest:
      description: ""
      properties:
        instanceName: {}
        instanceTime:
          type: integer
        logs:
          items:
            type: string
          type: array
      required:
        - logs
        - instanceName
        - instanceTime
      type: object
    AggregateLog-Read:
      description: ""
      properties:
        fixed:
          type: boolean
        id: {}
        lastOccurrenceAt:
          format: date-time
          type: string
        ruleId:
          type: string
        source: {}
        statusCode:
          type: integer
        target: {}
        viewCount:
          type: integer
      type: object
    Crawl:
      description: ""
      properties:
        archived:
          readOnly: true
          type: boolean
        author:
          $ref: "#/components/schemas/User"
        createdAt:
          format: date-time
          readOnly: true
          type: string
        currentConcurrency:
          type: integer
        error:
          readOnly: true
          type: string
        finishedAt:
          format: date-time
          readOnly: true
          type: string
        firstUrl:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        marking:
          items:
            type: string
          type: array
        stats:
          items:
            type: string
          type: array
        trigger:
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
      type: object
    Crawl-Read:
      description: ""
      properties:
        archived:
          readOnly: true
          type: boolean
        author:
          $ref: "#/components/schemas/User-Read"
        createdAt:
          format: date-time
          readOnly: true
          type: string
        error:
          readOnly: true
          type: string
        finishedAt:
          format: date-time
          readOnly: true
          type: string
        firstUrl:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        stats:
          items:
            type: string
          type: array
        trigger:
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
      type: object
    Crawl-ReadDetails:
      description: ""
      properties:
        archived:
          readOnly: true
          type: boolean
        author:
          $ref: "#/components/schemas/User-ReadDetails"
        createdAt:
          format: date-time
          readOnly: true
          type: string
        error:
          readOnly: true
          type: string
        finishedAt:
          format: date-time
          readOnly: true
          type: string
        firstUrl:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        stats:
          items:
            type: string
          type: array
        trigger:
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
      type: object
    Crawl-Write:
      description: ""
      properties:
        concurrency:
          type: integer
        firstUrl: {}
        headers:
          items:
            type: string
          type: array
        httpBasicPassword: {}
        httpBasicUser: {}
        maxDepth:
          type: integer
        maxDuration:
          type: integer
        maxUrls:
          type: integer
        otherDomains:
          items:
            type: string
          type: array
        project:
          type: string
        sslCheckingDisabled:
          type: boolean
        subdomainIncluded:
          type: boolean
        userAgent: {}
      required:
        - project
        - firstUrl
        - concurrency
        - maxUrls
        - maxDepth
        - subdomainIncluded
        - sslCheckingDisabled
        - maxDuration
      type: object
    CrawlUrl-Read:
      description: ""
      properties:
        curlInfo: {}
        depth: {}
        description: {}
        error: {}
        id: {}
        redirectUrl: {}
        statusCode: {}
        title: {}
        url: {}
        urlsTo:
          type: string
      type: object
    ExplainUrl:
      description: ""
      properties:
        explain:
          readOnly: true
        id:
          readOnly: true
          type: string
        project:
          type: string
        url:
          type: string
      required:
        - url
        - project
      type: object
    ExplainUrl-Write:
      description: ""
      properties:
        project:
          type: string
        url:
          type: string
      required:
        - url
        - project
      type: object
    ForgotPasswordRequest:
      description: ""
      properties:
        email:
          type: string
      required:
        - email
      type: object
    ImpactRuleChange-Read:
      description: ""
      properties:
        impact:
          readOnly: true
      type: object
    ImpactRuleChange-Write:
      description: ""
      properties:
        project:
          type: string
        ruleChange:
          type: string
      required:
        - project
        - ruleChange
      type: object
    ImpactSmartList-Read:
      description: ""
      properties:
        impact:
          readOnly: true
        smartList:
          readOnly: true
      type: object
    ImpactSmartList-Write:
      description: ""
      properties:
        project:
          type: string
        smartListId:
          type: string
        smartListVersion:
          type: string
      required:
        - project
        - smartListId
      type: object
    Import-Read:
      description: ""
      properties:
        author:
          readOnly: true
          type: string
        completedAt:
          format: date-time
          readOnly: true
          type: string
        errorCount:
          readOnly: true
          type: integer
        id:
          readOnly: true
          type: string
        importDuration:
          readOnly: true
          type: integer
        message:
          readOnly: true
          type: string
        project:
          type: string
        startedAt:
          format: date-time
          readOnly: true
          type: string
        statusAsText:
          readOnly: true
        successCount:
          readOnly: true
          type: integer
        updatedAt:
          format: date-time
          readOnly: true
          type: string
      required:
        - project
      type: object
    Import-Write:
      description: ""
      properties:
        csvContent: {}
        project:
          type: string
      required:
        - project
        - csvContent
      type: object
    Instance-Read:
      description: ""
      properties:
        agentDuration:
          type: integer
        agentVersion:
          type: string
        agentVersionStatus:
          readOnly: true
          type: string
        config:
          type: string
        createdAt:
          format: date-time
          type: string
        gone:
          readOnly: true
          type: boolean
        id:
          readOnly: true
          type: string
        lastCompletedAt:
          format: date-time
          type: string
        lastStartedAt:
          format: date-time
          type: string
        live:
          type: boolean
        logging:
          type: boolean
        logsLastFlushedAt:
          format: date-time
          type: string
        message:
          type: string
        misconfigured:
          type: boolean
        name:
          type: string
        rulesCount:
          type: integer
        rulesHash:
          type: string
        stale:
          readOnly: true
          type: boolean
        status:
          type: integer
        updatedAt:
          format: date-time
          type: string
      required:
        - name
      type: object
    Instance-Write:
      description: ""
      properties:
        agentDuration:
          type: integer
        message:
          type: string
        rulesCount:
          type: integer
        rulesHash:
          type: string
      type: object
    Invitation:
      description: ""
      properties:
        createdAt:
          format: date-time
          readOnly: true
          type: string
        email:
          type: string
        id:
          readOnly: true
          type: string
      type: object
    Invitation-Read:
      description: ""
      properties:
        createdAt:
          format: date-time
          readOnly: true
          type: string
        email:
          type: string
        id:
          readOnly: true
          type: string
      type: object
    Invitation-Write:
      description: ""
      properties:
        email:
          type: string
        target:
          type: string
      required:
        - email
        - target
      type: object
    Log-Read:
      description: ""
      properties:
        createdAt:
          format: date-time
          type: string
        fixed:
          type: boolean
        fixedByVersions:
          items:
            type: string
          type: array
        fromSmartList:
          readOnly: true
          type: boolean
        id: {}
        instanceName: {}
        method: {}
        notFixedByVersions:
          items:
            type: string
          type: array
        proxy:
          type: string
        referrer: {}
        ruleId:
          type: string
        simplifiedUserAgent: {}
        smartList:
          readOnly: true
          type: string
        source: {}
        statusCode: {}
        target: {}
        userAgent: {}
        userAgentType: {}
      type: object
    Marker:
      description: ""
      properties:
        id:
          type: string
        maximumOccurrence:
          type: integer
        minimumOccurrence:
          type: integer
        name:
          type: string
        options:
          items:
            type: string
          type: array
        regex:
          type: string
        transformers:
          items:
            type: string
          type: array
        type:
          type: string
      required:
        - type
        - name
      type: object
    Marker-Read:
      description: ""
      properties:
        maximumOccurrence:
          type: integer
        minimumOccurrence:
          type: integer
        name:
          type: string
        options:
          items:
            type: string
          type: array
        transformers:
          items:
            type: string
          type: array
        type:
          type: string
      required:
        - type
        - name
      type: object
    Marker-Write:
      description: ""
      properties:
        maximumOccurrence:
          type: integer
        minimumOccurrence:
          type: integer
        name:
          type: string
        options:
          items:
            type: string
          type: array
        transformers:
          items:
            type: string
          type: array
        type:
          type: string
      required:
        - type
        - name
      type: object
    MatchingUrl-Read:
      description: ""
      properties:
        matching:
          readOnly: true
      type: object
    MatchingUrl-Write:
      description: ""
      properties:
        project:
          type: string
        ruleChange:
          type: string
      type: object
    Notification-Read:
      description: ""
      properties:
        createdAt:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        message:
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
      type: object
    Organization:
      description: ""
      properties:
        createdAt:
          format: date-time
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        name:
          type: string
        projects:
          items:
            $ref: "#/components/schemas/Project"
          readOnly: true
          type: array
        slug:
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        userOrganizations:
          items:
            $ref: "#/components/schemas/UserOrganization"
          readOnly: true
          type: array
      required:
        - name
      type: object
    Organization-CreationWrite:
      description: ""
      type: object
    Organization-List:
      description: ""
      properties:
        name:
          type: string
        slug:
          readOnly: true
          type: string
      required:
        - name
      type: object
    Organization-Read:
      description: ""
      properties:
        id:
          readOnly: true
          type: string
        name:
          type: string
        slug:
          readOnly: true
          type: string
      required:
        - name
      type: object
    Organization-Write:
      description: ""
      properties:
        name:
          type: string
      required:
        - name
      type: object
    Project:
      description: ""
      properties:
        complexRulesCount:
          readOnly: true
          type: integer
        complexRulesUpdatedAt:
          format: date-time
          readOnly: true
          type: string
        configuration:
          items:
            type: string
          readOnly: true
          type: array
        createdAt:
          format: date-time
          readOnly: true
          type: string
        currentVersion:
          $ref: "#/components/schemas/RuleSetVersion"
        id:
          readOnly: true
          type: string
        ignoreProjectTypes:
          items:
            type: string
          type: array
        isPublishing:
          readOnly: true
          type: boolean
        name:
          type: string
        onboardingCompletedDemos:
          items:
            type: string
          type: array
        organization:
          $ref: "#/components/schemas/Organization"
        plan:
          readOnly: true
          type: integer
        rulesHash:
          readOnly: true
          type: string
        slug:
          readOnly: true
          type: string
        straightRulesCount:
          readOnly: true
          type: integer
        straightRulesUpdatedAt:
          format: date-time
          readOnly: true
          type: string
        token:
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        userProjects:
          items:
            $ref: "#/components/schemas/UserProject"
          readOnly: true
          type: array
        usersFlattened:
          items:
            $ref: "#/components/schemas/UserProjectFlattened"
          readOnly: true
          type: array
        workingVersion:
          $ref: "#/components/schemas/RuleSetVersion"
      required:
        - name
      type: object
    Project-CreationWrite:
      description: ""
      properties:
        ignoreProjectTypes:
          items:
            type: string
          type: array
        name:
          type: string
        onboardingCompletedDemos:
          items:
            type: string
          type: array
        organization:
          $ref: "#/components/schemas/Organization-CreationWrite"
      required:
        - name
      type: object
    Project-List:
      description: ""
      properties:
        id:
          readOnly: true
          type: string
        name:
          type: string
        organization:
          $ref: "#/components/schemas/Organization-List"
        slug:
          readOnly: true
          type: string
        token:
          readOnly: true
          type: string
      required:
        - name
      type: object
    Project-Read:
      description: ""
      properties:
        complexRulesCount:
          readOnly: true
          type: integer
        complexRulesUpdatedAt:
          format: date-time
          readOnly: true
          type: string
        configuration:
          items:
            type: string
          readOnly: true
          type: array
        createdAt:
          format: date-time
          readOnly: true
          type: string
        currentVersion:
          $ref: "#/components/schemas/RuleSetVersion-Read"
        id:
          readOnly: true
          type: string
        ignoreProjectTypes:
          items:
            type: string
          type: array
        isPublishing:
          readOnly: true
          type: boolean
        name:
          type: string
        onboardingCompletedDemos:
          items:
            type: string
          type: array
        organization:
          $ref: "#/components/schemas/Organization-Read"
        plan:
          readOnly: true
          type: integer
        rulesHash:
          readOnly: true
          type: string
        slug:
          readOnly: true
          type: string
        straightRulesCount:
          readOnly: true
          type: integer
        straightRulesUpdatedAt:
          format: date-time
          readOnly: true
          type: string
        token:
          readOnly: true
          type: string
        updatedAt:
          format: date-time
          readOnly: true
          type: string
        userProjects:
          items:
            $ref: "#/components/schemas/UserProject-Read"
          readOnly: true
          type: array
        usersFlattened:
          items:
            $ref: "#/components/schemas/UserProjectFlattened-Read"
          readOnly: true
          type: array
        workingVersion:
          $ref: "#/components/schemas/RuleSetVersion-Read"
      required:
        - name
      type: object
    Project-Write:
      description: ""
      properties:
        ignoreProjectTypes:
          items:
            type: string
          type: array
        name:
          type: string
        onboardingCompletedDemos:
          items:
            type: string
          type: array
      required:
        - name
      type: object
    PublishHistory-Read:
      description: ""
      properties:
        added:
          type: integer
        author:
          $ref: "#/components/schemas/User-Read"
        createdAt:
          format: date-time
          readOnly: true
          type: string
        deleted:
          type: integer
        id:
          readOnly: true
          type: string
        summary:
          type: string
        type:
          type: string
        updated:
          type: integer
        version:
          $ref: "#/components/schemas/RuleSetVersion-Read"
      type: object
    Rule-Read:
      description: ""
      properties:
        actions:
          items:
            type: string
          type: array
        changes:
          items:
            $ref: "#/components/schemas/RuleChange-Read"
          type: array
        currentChange:
          $ref: "#/components/schemas/RuleChange-Read"
        examples:
          items:
            type: string
          type: array
        formattedSource:
          type: string
        id:
          type: string
        markers:
          items:
            $ref: "#/components/schemas/Marker-Read"
          type: array
        matchOnResponseStatus:
          type: integer
        rank:
          type: integer
        source:
          type: string
        updatedAt:
          format: date-time
          type: string
        viewCount:
          type: integer
      type: object
    RuleChange-Read:
      description: ""
      properties:
        action:
          type: string
        actions:
          items:
            type: string
          type: array
        author:
          $ref: "#/components/schemas/User-Read"
        createdAt:
          format: date-time
          readOnly: true
          type: string
        examples:
          items:
            type: string
          type: array
        formattedSource:
          type: string
        id:
          readOnly: true
          type: string
        markers:
          items:
            $ref: "#/components/schemas/Marker-Read"
          type: array
        matchOnResponseStatus:
          type: integer
        rank:
          type: integer
        ruleId:
          type: string
        source:
          type: string
      required:
        - action
        - source
        - rank
      type: object
    RuleChange-Write:
      description: ""
      properties:
        action:
          type: string
        actions:
          items:
            type: string
          type: array
        examples:
          items:
            type: string
          type: array
        formattedSource:
          type: string
        markers:
          items:
            $ref: "#/components/schemas/Marker-Write"
          type: array
        matchOnResponseStatus:
          type: integer
        rank:
          type: integer
        ruleId:
          type: string
        source:
          type: string
      required:
        - action
        - source
        - rank
      type: object
    RuleSetVersion:
      description: ""
      properties:
        createdAt:
          format: date-time
          readOnly: true
          type: string
        current:
          readOnly: true
          type: boolean
        id:
          readOnly: true
          type: string
        isSnapshot:
          type: boolean
        mergedRulesCount:
          type: integer
        name:
          type: string
        publishedAt:
          format: date-time
          type: string
        working:
          readOnly: true
          type: boolean
      type: object
    RuleSetVersion-Read:
      description: ""
      properties:
        createdAt:
          format: date-time
          readOnly: true
          type: string
        current:
          readOnly: true
          type: boolean
        id:
          readOnly: true
          type: string
        isSnapshot:
          type: boolean
        mergedRulesCount:
          type: integer
        name:
          type: string
        publishedAt:
          format: date-time
          type: string
        working:
          readOnly: true
          type: boolean
      type: object
    RuleStatistic:
      description: ""
      properties:
        id:
          type: string
        stats:
          type: string
      type: object
    SmartList:
      description: ""
      properties:
        defaultVersion:
          readOnly: true
          type: string
        description:
          readOnly: true
          type: string
        id:
          readOnly: true
          type: string
        name:
          readOnly: true
          type: string
        rules:
          readOnly: true
          type: string
        versions:
          items:
            type: string
          readOnly: true
          type: array
      type: object
    User:
      description: ""
      properties:
        currentPassword: {}
        defaultOrganization:
          $ref: "#/components/schemas/Organization"
        email:
          type: string
        id:
          readOnly: true
          type: string
        name:
          type: string
        newEmail:
          type: string
        newEmailToken:
          type: string
        newEmailTokenExpiredAt:
          format: date-time
          type: string
        password:
          type: string
        plainPassword:
          type: string
        plainPasswordRepeat: {}
        projectsFlattened:
          items:
            type: string
          type: array
        superAdmin:
          type: boolean
        updatedAt:
          format: date-time
          type: string
        userOrganizations:
          items:
            $ref: "#/components/schemas/UserOrganization"
          type: array
        userProjects:
          items:
            type: string
          type: array
      required:
        - email
        - name
      type: object
    User-CreationWrite:
      description: ""
      properties:
        email:
          type: string
        name:
          type: string
      required:
        - email
        - name
      type: object
    User-EditInfo:
      description: ""
      properties:
        name:
          type: string
      required:
        - name
      type: object
    User-List:
      description: ""
      properties:
        email:
          type: string
        id:
          readOnly: true
          type: string
        name:
          type: string
      required:
        - email
        - name
      type: object
    User-Password:
      description: ""
      properties:
        plainPassword:
          type: string
        plainPasswordRepeat: {}
      type: object
    User-Read:
      description: ""
      properties:
        name:
          type: string
      required:
        - name
      type: object
    User-ReadDetails:
      description: ""
      properties:
        name:
          type: string
      required:
        - name
      type: object
    UserOrganization:
      description: ""
      properties:
        functionalRoles:
          items:
            type: string
          type: array
        id:
          readOnly: true
          type: string
        organization:
          readOnly: true
          type: string
        user:
          readOnly: true
          type: string
      required:
        - functionalRoles
      type: object
    UserOrganization-CreationWrite:
      description: ""
      properties:
        functionalRoles:
          items:
            type: string
          type: array
        organization:
          readOnly: true
          type: string
        user:
          readOnly: true
          type: string
      required:
        - functionalRoles
      type: object
    UserOrganization-Read:
      description: ""
      properties:
        functionalRoles:
          items:
            type: string
          type: array
        id:
          readOnly: true
          type: string
        organization:
          readOnly: true
          type: string
        user:
          readOnly: true
          type: string
      required:
        - functionalRoles
      type: object
    UserOrganization-Write:
      description: ""
      properties:
        functionalRoles:
          items:
            type: string
          type: array
      required:
        - functionalRoles
      type: object
    UserProject:
      description: ""
      properties:
        functionalRoles:
          items:
            type: string
          type: array
        id:
          readOnly: true
          type: string
        project:
          type: string
        user:
          type: string
      required:
        - functionalRoles
        - user
        - project
      type: object
    UserProject-CreationWrite:
      description: ""
      properties:
        functionalRoles:
          items:
            type: string
          type: array
        project:
          type: string
        user:
          type: string
      required:
        - user
        - project
        - functionalRoles
      type: object
    UserProject-Read:
      description: ""
      properties:
        functionalRoles:
          items:
            type: string
          type: array
        id:
          readOnly: true
          type: string
        user:
          type: string
      required:
        - user
        - functionalRoles
      type: object
    UserProject-Write:
      description: ""
      properties:
        functionalRoles:
          items:
            type: string
          type: array
      required:
        - functionalRoles
      type: object
    UserProjectFlattened:
      description: ""
      properties:
        functionalRoles:
          items:
            type: string
          type: array
        project:
          type: string
        user:
          type: string
      type: object
    UserProjectFlattened-Read:
      description: ""
      properties:
        functionalRoles:
          items:
            type: string
          type: array
        user:
          type: string
      type: object
