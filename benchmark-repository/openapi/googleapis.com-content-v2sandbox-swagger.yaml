openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: Manages product items, inventory, and Merchant Center accounts for Google
    Shopping.
  title: Content API for Shopping
  version: v2sandbox
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - ecommerce
  x-logo:
    url: https://cloud.google.com/_static/images/new-gcp-logo.png
  x-origin:
    - converter:
        url: https://github.com/lucybot/api-spec-converter
        version: 2.6.2
      format: google
      url: https://www.googleapis.com/discovery/v1/apis/content/v2sandbox/rest
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: content
externalDocs:
  url: https://developers.google.com/shopping-content
tags:
  - name: orders
paths:
  /orders/batch:
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Retrieves or modifies multiple orders in a single request.
      operationId: content.orders.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersCustomBatchRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersCustomBatchResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders":
    get:
      description: Lists the orders in your Merchant Center account.
      operationId: content.orders.list
      parameters:
        - description: >-
            Obtains orders that match the acknowledgement status. When set to
            true, obtains orders that have been acknowledged. When false,
            obtains orders that have not been acknowledged.

            We recommend using this filter set to false, in conjunction with the acknowledge call, such that only un-acknowledged orders are returned.
          in: query
          name: acknowledged
          schema:
            type: boolean
        - description: >-
            The maximum number of orders to return in the response, used for
            paging. The default value is 25 orders per page, and the maximum
            allowed value is 250 orders per page.

            Known issue: All List calls will return all Orders without limit regardless of the value of this field.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ordering of the returned list. The only supported value are
            placedDate desc and placedDate asc for now, which returns orders
            sorted by placement date. "placedDate desc" stands for listing
            orders by placement date, from oldest to most recent. "placedDate
            asc" stands for listing orders by placement date, from most recent
            to oldest. In future releases we'll support other sorting criteria.
          in: query
          name: orderBy
          schema:
            type: string
            enum:
              - placedDate asc
              - placedDate desc
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Obtains orders placed before this date (exclusively), in ISO 8601
            format.
          in: query
          name: placedDateEnd
          schema:
            type: string
        - description: Obtains orders placed after this date (inclusively), in ISO 8601
            format.
          in: query
          name: placedDateStart
          schema:
            type: string
        - description: Obtains orders that match any of the specified statuses. Multiple
            values can be specified with comma separation. Additionally, please
            note that active is a shortcut for pendingShipment and
            partiallyShipped, and completed is a shortcut for shipped ,
            partiallyDelivered, delivered, partiallyReturned, returned, and
            canceled.
          in: query
          name: statuses
          explode: true
          schema:
            type: array
            items:
              enum:
                - active
                - canceled
                - completed
                - delivered
                - inProgress
                - partiallyDelivered
                - partiallyReturned
                - partiallyShipped
                - pendingShipment
                - returned
                - shipped
              type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersListResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{merchantId}/orders/{orderId}":
    get:
      description: Retrieves an order from your Merchant Center account.
      operationId: content.orders.get
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Order"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{merchantId}/orders/{orderId}/acknowledge":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Marks an order as acknowledged.
      operationId: content.orders.acknowledge
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersAcknowledgeRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersAcknowledgeResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/cancel":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Cancels all line items in an order, making a full refund.
      operationId: content.orders.cancel
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order to cancel.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersCancelRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersCancelResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/cancelLineItem":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Cancels a line item, making a full refund.
      operationId: content.orders.cancellineitem
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersCancelLineItemRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersCancelLineItemResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/inStoreRefundLineItem":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Notifies that item return and refund was handled directly in store.
      operationId: content.orders.instorerefundlineitem
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersInStoreRefundLineItemRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersInStoreRefundLineItemResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/refund":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Refund a portion of the order, up to the full amount paid.
      operationId: content.orders.refund
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order to refund.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersRefundRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersRefundResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/rejectReturnLineItem":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Rejects return on an line item.
      operationId: content.orders.rejectreturnlineitem
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersRejectReturnLineItemRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersRejectReturnLineItemResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/returnLineItem":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Returns a line item.
      operationId: content.orders.returnlineitem
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersReturnLineItemRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersReturnLineItemResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/returnRefundLineItem":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Returns and refunds a line item. Note that this method can only be
        called on fully shipped orders.
      operationId: content.orders.returnrefundlineitem
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersReturnRefundLineItemRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersReturnRefundLineItemResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/setLineItemMetadata":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sets (overrides) merchant provided annotations on the line item.
      operationId: content.orders.setlineitemmetadata
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersSetLineItemMetadataRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersSetLineItemMetadataResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/shipLineItems":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Marks line item(s) as shipped.
      operationId: content.orders.shiplineitems
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersShipLineItemsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersShipLineItemsResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/updateLineItemShippingDetails":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Updates ship by and delivery by dates for a line item.
      operationId: content.orders.updatelineitemshippingdetails
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersUpdateLineItemShippingDetailsRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersUpdateLineItemShippingDetailsResp\
                  onse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/updateMerchantOrderId":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Updates the merchant order ID for a given order.
      operationId: content.orders.updatemerchantorderid
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersUpdateMerchantOrderIdRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersUpdateMerchantOrderIdResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/orders/{orderId}/updateShipment":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Updates a shipment's status, carrier, and/or tracking ID.
      operationId: content.orders.updateshipment
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersUpdateShipmentRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersUpdateShipmentResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/ordersbymerchantid/{merchantOrderId}":
    get:
      description: Retrieves an order using merchant order id.
      operationId: content.orders.getbymerchantorderid
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The merchant order id to be looked for.
          in: path
          name: merchantOrderId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersGetByMerchantOrderIdResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
  "/{merchantId}/testorders":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sandbox only. Creates a test order.
      operationId: content.orders.createtestorder
      parameters:
        - description: The ID of the account that should manage the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersCreateTestOrderRequest"
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersCreateTestOrderResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/testorders/{orderId}/advance":
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
    post:
      description: Sandbox only. Moves a test order from state "inProgress" to state
        "pendingShipment".
      operationId: content.orders.advancetestorder
      parameters:
        - description: The ID of the account that manages the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the test order to modify.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersAdvanceTestOrderResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  "/{merchantId}/testordertemplates/{templateName}":
    get:
      description: Sandbox only. Retrieves an order template that can be used to quickly
        create a new order in sandbox.
      operationId: content.orders.gettestordertemplate
      parameters:
        - description: The ID of the account that should manage the order. This cannot be a
            multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The name of the template to retrieve.
          in: path
          name: templateName
          required: true
          schema:
            type: string
            enum:
              - template1
              - template1a
              - template1b
              - template2
      responses:
        "200":
          description: Successful response
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/OrdersGetTestOrderTemplateResponse"
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
    parameters:
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/userIp"
servers:
  - url: https://www.googleapis.com/content/v2sandbox
components:
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        type: string
        enum:
          - json
        default: json
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API
        access, quota, and reports. Required unless you provide an OAuth 2.0
        token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
        default: true
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must not
        exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 authentication
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/content: Manage your product listings and accounts for Google Shopping
  schemas:
    Error:
      description: An error returned by the API.
      properties:
        domain:
          description: The domain of the error.
          type: string
        message:
          description: A description of the error.
          type: string
        reason:
          description: The error code.
          type: string
      type: object
    Errors:
      description: A list of errors returned by a failed batch entry.
      properties:
        code:
          description: The HTTP status of the first error in errors.
          format: uint32
          type: integer
        errors:
          description: A list of errors.
          items:
            $ref: "#/components/schemas/Error"
          type: array
        message:
          description: The message of the first error in errors.
          type: string
      type: object
    Order:
      properties:
        acknowledged:
          description: Whether the order was acknowledged.
          type: boolean
        channelType:
          description: 'The channel type of the order: "purchaseOnGoogle" or
            "googleExpress".'
          type: string
        customer:
          $ref: "#/components/schemas/OrderCustomer"
        deliveryDetails:
          $ref: "#/components/schemas/OrderDeliveryDetails"
        id:
          description: The REST id of the order. Globally unique.
          type: string
        kind:
          default: content#order
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#order".'
          type: string
        lineItems:
          description: Line items that are ordered.
          items:
            $ref: "#/components/schemas/OrderLineItem"
          type: array
        merchantId:
          format: uint64
          type: string
        merchantOrderId:
          description: Merchant-provided id of the order.
          type: string
        netAmount:
          $ref: "#/components/schemas/Price"
        paymentMethod:
          $ref: "#/components/schemas/OrderPaymentMethod"
        paymentStatus:
          description: The status of the payment.
          type: string
        placedDate:
          description: The date when the order was placed, in ISO 8601 format.
          type: string
        promotions:
          description: The details of the merchant provided promotions applied to the
            order. More details about the program are here.
          items:
            $ref: "#/components/schemas/OrderPromotion"
          type: array
        refunds:
          description: Refunds for the order.
          items:
            $ref: "#/components/schemas/OrderRefund"
          type: array
        shipments:
          description: Shipments of the order.
          items:
            $ref: "#/components/schemas/OrderShipment"
          type: array
        shippingCost:
          $ref: "#/components/schemas/Price"
        shippingCostTax:
          $ref: "#/components/schemas/Price"
        shippingOption:
          description: The requested shipping option.
          type: string
        status:
          description: The status of the order.
          type: string
      type: object
    OrderAddress:
      properties:
        country:
          description: CLDR country code (e.g. "US").
          type: string
        fullAddress:
          description: >-
            Strings representing the lines of the printed label for mailing the
            order, for example:

            John Smith

            1600 Amphitheatre Parkway

            Mountain View, CA, 94043

            United States
          items:
            type: string
          type: array
        isPostOfficeBox:
          description: Whether the address is a post office box.
          type: boolean
        locality:
          description: City, town or commune. May also include dependent localities or
            sublocalities (e.g. neighborhoods or suburbs).
          type: string
        postalCode:
          description: Postal Code or ZIP (e.g. "94043").
          type: string
        recipientName:
          description: Name of the recipient.
          type: string
        region:
          description: Top-level administrative subdivision of the country (e.g. "CA").
          type: string
        streetAddress:
          description: Street-level part of the address.
          items:
            type: string
          type: array
      type: object
    OrderCancellation:
      properties:
        actor:
          description: The actor that created the cancellation.
          type: string
        creationDate:
          description: Date on which the cancellation has been created, in ISO 8601 format.
          type: string
        quantity:
          description: The quantity that was canceled.
          format: uint32
          type: integer
        reason:
          description: The reason for the cancellation. Orders that are cancelled with a
            noInventory reason will lead to the removal of the product from
            Shopping Actions until you make an update to that product. This will
            not affect your Shopping ads.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrderCustomer:
      properties:
        email:
          description: Email address that should be used for order related communications.
            In certain cases this might not be a real users email, but a proxy
            email.
          type: string
        explicitMarketingPreference:
          description: Deprecated. Please use marketingRightsInfo instead.
          type: boolean
        fullName:
          description: Full name of the customer.
          type: string
        marketingRightsInfo:
          $ref: "#/components/schemas/OrderCustomerMarketingRightsInfo"
      type: object
    OrderCustomerMarketingRightsInfo:
      properties:
        explicitMarketingPreference:
          description: Last known user selection regarding marketing preferences. In
            certain cases this selection might not be known, so this field would
            be empty.
          type: string
        lastUpdatedTimestamp:
          description: Timestamp when last time marketing preference was updated. Could be
            empty, if user wasn't offered a selection yet.
          type: string
        marketingEmailAddress:
          description: Email address that can be used for marketing purposes. This field is
            only filled when explicitMarketingPreference is equal to 'granted'.
          type: string
      type: object
    OrderDeliveryDetails:
      properties:
        address:
          $ref: "#/components/schemas/OrderAddress"
        phoneNumber:
          description: The phone number of the person receiving the delivery.
          type: string
      type: object
    OrderLineItem:
      properties:
        annotations:
          description: Annotations that are attached to the line item.
          items:
            $ref: "#/components/schemas/OrderMerchantProvidedAnnotation"
          type: array
        cancellations:
          description: Cancellations of the line item.
          items:
            $ref: "#/components/schemas/OrderCancellation"
          type: array
        id:
          description: The id of the line item.
          type: string
        price:
          $ref: "#/components/schemas/Price"
        product:
          $ref: "#/components/schemas/OrderLineItemProduct"
        quantityCanceled:
          description: Number of items canceled.
          format: uint32
          type: integer
        quantityDelivered:
          description: Number of items delivered.
          format: uint32
          type: integer
        quantityOrdered:
          description: Number of items ordered.
          format: uint32
          type: integer
        quantityPending:
          description: Number of items pending.
          format: uint32
          type: integer
        quantityReturned:
          description: Number of items returned.
          format: uint32
          type: integer
        quantityShipped:
          description: Number of items shipped.
          format: uint32
          type: integer
        returnInfo:
          $ref: "#/components/schemas/OrderLineItemReturnInfo"
        returns:
          description: Returns of the line item.
          items:
            $ref: "#/components/schemas/OrderReturn"
          type: array
        shippingDetails:
          $ref: "#/components/schemas/OrderLineItemShippingDetails"
        tax:
          $ref: "#/components/schemas/Price"
      type: object
    OrderLineItemProduct:
      properties:
        brand:
          description: Brand of the item.
          type: string
        channel:
          description: The item's channel (online or local).
          type: string
        condition:
          description: Condition or state of the item.
          type: string
        contentLanguage:
          description: The two-letter ISO 639-1 language code for the item.
          type: string
        gtin:
          description: Global Trade Item Number (GTIN) of the item.
          type: string
        id:
          description: The REST id of the product.
          type: string
        imageLink:
          description: URL of an image of the item.
          type: string
        itemGroupId:
          description: Shared identifier for all variants of the same product.
          type: string
        mpn:
          description: Manufacturer Part Number (MPN) of the item.
          type: string
        offerId:
          description: An identifier of the item.
          type: string
        price:
          $ref: "#/components/schemas/Price"
        shownImage:
          description: URL to the cached image shown to the user when order was placed.
          type: string
        targetCountry:
          description: The CLDR territory code of the target country of the product.
          type: string
        title:
          description: The title of the product.
          type: string
        variantAttributes:
          description: Variant attributes for the item. These are dimensions of the
            product, such as color, gender, material, pattern, and size. You can
            find a comprehensive list of variant attributes here.
          items:
            $ref: "#/components/schemas/OrderLineItemProductVariantAttribute"
          type: array
      type: object
    OrderLineItemProductVariantAttribute:
      properties:
        dimension:
          description: The dimension of the variant.
          type: string
        value:
          description: The value for the dimension.
          type: string
      type: object
    OrderLineItemReturnInfo:
      properties:
        daysToReturn:
          description: How many days later the item can be returned.
          format: int32
          type: integer
        isReturnable:
          description: Whether the item is returnable.
          type: boolean
        policyUrl:
          description: URL of the item return policy.
          type: string
      type: object
    OrderLineItemShippingDetails:
      properties:
        deliverByDate:
          description: The delivery by date, in ISO 8601 format.
          type: string
        method:
          $ref: "#/components/schemas/OrderLineItemShippingDetailsMethod"
        shipByDate:
          description: The ship by date, in ISO 8601 format.
          type: string
      type: object
    OrderLineItemShippingDetailsMethod:
      properties:
        carrier:
          description: The carrier for the shipping. Optional. See shipments[].carrier for
            a list of acceptable values.
          type: string
        maxDaysInTransit:
          description: Maximum transit time.
          format: uint32
          type: integer
        methodName:
          description: The name of the shipping method.
          type: string
        minDaysInTransit:
          description: Minimum transit time.
          format: uint32
          type: integer
      type: object
    OrderMerchantProvidedAnnotation:
      properties:
        key:
          description: Key for additional merchant provided (as key-value pairs) annotation
            about the line item.
          type: string
        value:
          description: Value for additional merchant provided (as key-value pairs)
            annotation about the line item.
          type: string
      type: object
    OrderPaymentMethod:
      properties:
        billingAddress:
          $ref: "#/components/schemas/OrderAddress"
        expirationMonth:
          description: The card expiration month (January = 1, February = 2 etc.).
          format: int32
          type: integer
        expirationYear:
          description: The card expiration year (4-digit, e.g. 2015).
          format: int32
          type: integer
        lastFourDigits:
          description: The last four digits of the card number.
          type: string
        phoneNumber:
          description: The billing phone number.
          type: string
        type:
          description: |-
            The type of instrument.

            Acceptable values are:
            - "AMEX"
            - "DISCOVER"
            - "JCB"
            - "MASTERCARD"
            - "UNIONPAY"
            - "VISA"
            - ""
          type: string
      type: object
    OrderPromotion:
      properties:
        benefits:
          items:
            $ref: "#/components/schemas/OrderPromotionBenefit"
          type: array
        effectiveDates:
          description: >-
            The date and time frame when the promotion is active and ready for
            validation review. Note that the promotion live time may be delayed
            for a few hours due to the validation review.

            Start date and end date are separated by a forward slash (/). The start date is specified by the format (YYYY-MM-DD), followed by the letter ?T?, the time of the day when the sale starts (in Greenwich Mean Time, GMT), followed by an expression of the time zone for the sale. The end date is in the same format.
          type: string
        genericRedemptionCode:
          description: Optional. The text code that corresponds to the promotion when
            applied on the retailer?s website.
          type: string
        id:
          description: The unique ID of the promotion.
          type: string
        longTitle:
          description: The full title of the promotion.
          type: string
        productApplicability:
          description: Whether the promotion is applicable to all products or only specific
            products.
          type: string
        redemptionChannel:
          description: Indicates that the promotion is valid online.
          type: string
      type: object
    OrderPromotionBenefit:
      properties:
        discount:
          $ref: "#/components/schemas/Price"
        offerIds:
          description: The OfferId(s) that were purchased in this order and map to this
            specific benefit of the promotion.
          items:
            type: string
          type: array
        subType:
          description: Further describes the benefit of the promotion. Note that we will
            expand on this enumeration as we support new promotion sub-types.
          type: string
        taxImpact:
          $ref: "#/components/schemas/Price"
        type:
          description: Describes whether the promotion applies to products (e.g. 20% off)
            or to shipping (e.g. Free Shipping).
          type: string
      type: object
    OrderRefund:
      properties:
        actor:
          description: The actor that created the refund.
          type: string
        amount:
          $ref: "#/components/schemas/Price"
        creationDate:
          description: Date on which the item has been created, in ISO 8601 format.
          type: string
        reason:
          description: The reason for the refund.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrderReturn:
      properties:
        actor:
          description: The actor that created the refund.
          type: string
        creationDate:
          description: Date on which the item has been created, in ISO 8601 format.
          type: string
        quantity:
          description: Quantity that is returned.
          format: uint32
          type: integer
        reason:
          description: The reason for the return.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrderShipment:
      properties:
        carrier:
          description: |-
            The carrier handling the shipment.

            Acceptable values are:
            - "gsx"
            - "ups"
            - "usps"
            - "fedex"
            - "dhl"
            - "ecourier"
            - "cxt"
            - "google"
            - "ontrac"
            - "emsy"
            - "ont"
            - "deliv"
            - "dynamex"
            - "lasership"
            - "mpx"
            - "uds"
          type: string
        creationDate:
          description: Date on which the shipment has been created, in ISO 8601 format.
          type: string
        deliveryDate:
          description: Date on which the shipment has been delivered, in ISO 8601 format.
            Present only if status is delievered
          type: string
        id:
          description: The id of the shipment.
          type: string
        lineItems:
          description: The line items that are shipped.
          items:
            $ref: "#/components/schemas/OrderShipmentLineItemShipment"
          type: array
        status:
          description: The status of the shipment.
          type: string
        trackingId:
          description: The tracking id for the shipment.
          type: string
      type: object
    OrderShipmentLineItemShipment:
      properties:
        lineItemId:
          description: The id of the line item that is shipped. Either lineItemId or
            productId is required.
          type: string
        productId:
          description: The ID of the product to ship. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity that is shipped.
          format: uint32
          type: integer
      type: object
    OrdersAcknowledgeRequest:
      properties:
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
      type: object
    OrdersAcknowledgeResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersAcknowledgeResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersAcknowledgeResponse".'
          type: string
      type: object
    OrdersAdvanceTestOrderResponse:
      properties:
        kind:
          default: content#ordersAdvanceTestOrderResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersAdvanceTestOrderResponse".'
          type: string
      type: object
    OrdersCancelLineItemRequest:
      properties:
        amount:
          $ref: "#/components/schemas/Price"
        amountPretax:
          $ref: "#/components/schemas/Price"
        amountTax:
          $ref: "#/components/schemas/Price"
        lineItemId:
          description: The ID of the line item to cancel. Either lineItemId or productId is
            required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
        productId:
          description: The ID of the product to cancel. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to cancel.
          format: uint32
          type: integer
        reason:
          description: The reason for the cancellation.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCancelLineItemResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersCancelLineItemResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersCancelLineItemResponse".'
          type: string
      type: object
    OrdersCancelRequest:
      properties:
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
        reason:
          description: The reason for the cancellation.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCancelResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersCancelResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersCancelResponse".'
          type: string
      type: object
    OrdersCreateTestOrderRequest:
      properties:
        templateName:
          description: The test order template to use. Specify as an alternative to
            testOrder as a shortcut for retrieving a template and then creating
            an order using that template.
          type: string
        testOrder:
          $ref: "#/components/schemas/TestOrder"
      type: object
    OrdersCreateTestOrderResponse:
      properties:
        kind:
          default: content#ordersCreateTestOrderResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersCreateTestOrderResponse".'
          type: string
        orderId:
          description: The ID of the newly created test order.
          type: string
      type: object
    OrdersCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/OrdersCustomBatchRequestEntry"
          type: array
      type: object
    OrdersCustomBatchRequestEntry:
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        cancel:
          $ref: "#/components/schemas/OrdersCustomBatchRequestEntryCancel"
        cancelLineItem:
          $ref: "#/components/schemas/OrdersCustomBatchRequestEntryCancelLineItem"
        inStoreRefundLineItem:
          $ref: "#/components/schemas/OrdersCustomBatchRequestEntryInStoreRefundLin\
            eItem"
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        merchantOrderId:
          description: The merchant order id. Required for updateMerchantOrderId and
            getByMerchantOrderId methods.
          type: string
        method:
          description: The method to apply.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order. Required for all methods beside get and getByMerchantOrderId.
          type: string
        orderId:
          description: The ID of the order. Required for all methods beside
            getByMerchantOrderId.
          type: string
        refund:
          $ref: "#/components/schemas/OrdersCustomBatchRequestEntryRefund"
        rejectReturnLineItem:
          $ref: "#/components/schemas/OrdersCustomBatchRequestEntryRejectReturnLine\
            Item"
        returnLineItem:
          $ref: "#/components/schemas/OrdersCustomBatchRequestEntryReturnLineItem"
        returnRefundLineItem:
          $ref: "#/components/schemas/OrdersCustomBatchRequestEntryReturnRefundLine\
            Item"
        setLineItemMetadata:
          $ref: "#/components/schemas/OrdersCustomBatchRequestEntrySetLineItemMetad\
            ata"
        shipLineItems:
          $ref: "#/components/schemas/OrdersCustomBatchRequestEntryShipLineItems"
        updateLineItemShippingDetails:
          $ref: "#/components/schemas/OrdersCustomBatchRequestEntryUpdateLineItemSh\
            ippingDetails"
        updateShipment:
          $ref: "#/components/schemas/OrdersCustomBatchRequestEntryUpdateShipment"
      type: object
    OrdersCustomBatchRequestEntryCancel:
      properties:
        reason:
          description: The reason for the cancellation.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCustomBatchRequestEntryCancelLineItem:
      properties:
        amount:
          $ref: "#/components/schemas/Price"
        amountPretax:
          $ref: "#/components/schemas/Price"
        amountTax:
          $ref: "#/components/schemas/Price"
        lineItemId:
          description: The ID of the line item to cancel. Either lineItemId or productId is
            required.
          type: string
        productId:
          description: The ID of the product to cancel. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to cancel.
          format: uint32
          type: integer
        reason:
          description: The reason for the cancellation.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCustomBatchRequestEntryInStoreRefundLineItem:
      properties:
        amountPretax:
          $ref: "#/components/schemas/Price"
        amountTax:
          $ref: "#/components/schemas/Price"
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is
            required.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return and refund.
          format: uint32
          type: integer
        reason:
          description: The reason for the return.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCustomBatchRequestEntryRefund:
      properties:
        amount:
          $ref: "#/components/schemas/Price"
        amountPretax:
          $ref: "#/components/schemas/Price"
        amountTax:
          $ref: "#/components/schemas/Price"
        reason:
          description: The reason for the refund.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCustomBatchRequestEntryRejectReturnLineItem:
      properties:
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is
            required.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return and refund.
          format: uint32
          type: integer
        reason:
          description: The reason for the return.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCustomBatchRequestEntryReturnLineItem:
      properties:
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is
            required.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return.
          format: uint32
          type: integer
        reason:
          description: The reason for the return.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCustomBatchRequestEntryReturnRefundLineItem:
      properties:
        amountPretax:
          $ref: "#/components/schemas/Price"
        amountTax:
          $ref: "#/components/schemas/Price"
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is
            required.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return and refund.
          format: uint32
          type: integer
        reason:
          description: The reason for the return.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCustomBatchRequestEntrySetLineItemMetadata:
      properties:
        annotations:
          items:
            $ref: "#/components/schemas/OrderMerchantProvidedAnnotation"
          type: array
        lineItemId:
          description: The ID of the line item to set metadata. Either lineItemId or
            productId is required.
          type: string
        productId:
          description: The ID of the product to set metadata. This is the REST ID used in
            the products service. Either lineItemId or productId is required.
          type: string
      type: object
    OrdersCustomBatchRequestEntryShipLineItems:
      properties:
        carrier:
          description: Deprecated. Please use shipmentInfo instead. The carrier handling
            the shipment. See shipments[].carrier in the  Orders resource
            representation for a list of acceptable values.
          type: string
        lineItems:
          description: Line items to ship.
          items:
            $ref: "#/components/schemas/OrderShipmentLineItemShipment"
          type: array
        shipmentId:
          description: Deprecated. Please use shipmentInfo instead. The ID of the shipment.
          type: string
        shipmentInfos:
          description: Shipment information. This field is repeated because a single line
            item can be shipped in several packages (and have several tracking
            IDs).
          items:
            $ref: "#/components/schemas/OrdersCustomBatchRequestEntryShipLineItemsS\
              hipmentInfo"
          type: array
        trackingId:
          description: Deprecated. Please use shipmentInfo instead. The tracking id for the
            shipment.
          type: string
      type: object
    OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo:
      properties:
        carrier:
          description: The carrier handling the shipment. See shipments[].carrier in
            the  Orders resource representation for a list of acceptable values.
          type: string
        shipmentId:
          description: The ID of the shipment.
          type: string
        trackingId:
          description: The tracking id for the shipment.
          type: string
      type: object
    OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails:
      properties:
        deliverByDate:
          description: Updated delivery by date, in ISO 8601 format. If not specified only
            ship by date is updated.
          type: string
        lineItemId:
          description: The ID of the line item to set metadata. Either lineItemId or
            productId is required.
          type: string
        productId:
          description: The ID of the product to set metadata. This is the REST ID used in
            the products service. Either lineItemId or productId is required.
          type: string
        shipByDate:
          description: Updated ship by date, in ISO 8601 format. If not specified only
            deliver by date is updated.
          type: string
      type: object
    OrdersCustomBatchRequestEntryUpdateShipment:
      properties:
        carrier:
          description: The carrier handling the shipment. Not updated if missing. See
            shipments[].carrier in the  Orders resource representation for a
            list of acceptable values.
          type: string
        shipmentId:
          description: The ID of the shipment.
          type: string
        status:
          description: New status for the shipment. Not updated if missing.
          type: string
        trackingId:
          description: The tracking id for the shipment. Not updated if missing.
          type: string
      type: object
    OrdersCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/OrdersCustomBatchResponseEntry"
          type: array
        kind:
          default: content#ordersCustomBatchResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersCustomBatchResponse".'
          type: string
      type: object
    OrdersCustomBatchResponseEntry:
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/Errors"
        executionStatus:
          description: The status of the execution. Only defined if the method is not get
            or getByMerchantOrderId and if the request was successful.
          type: string
        kind:
          default: content#ordersCustomBatchResponseEntry
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersCustomBatchResponseEntry".'
          type: string
        order:
          $ref: "#/components/schemas/Order"
      type: object
    OrdersGetByMerchantOrderIdResponse:
      properties:
        kind:
          default: content#ordersGetByMerchantOrderIdResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersGetByMerchantOrderIdResponse".'
          type: string
        order:
          $ref: "#/components/schemas/Order"
      type: object
    OrdersGetTestOrderTemplateResponse:
      properties:
        kind:
          default: content#ordersGetTestOrderTemplateResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersGetTestOrderTemplateResponse".'
          type: string
        template:
          $ref: "#/components/schemas/TestOrder"
      type: object
    OrdersInStoreRefundLineItemRequest:
      properties:
        amountPretax:
          $ref: "#/components/schemas/Price"
        amountTax:
          $ref: "#/components/schemas/Price"
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is
            required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return and refund.
          format: uint32
          type: integer
        reason:
          description: The reason for the return.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersInStoreRefundLineItemResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersInStoreRefundLineItemResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersInStoreRefundLineItemResponse".'
          type: string
      type: object
    OrdersListResponse:
      properties:
        kind:
          default: content#ordersListResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersListResponse".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of orders.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/Order"
          type: array
      type: object
    OrdersRefundRequest:
      properties:
        amount:
          $ref: "#/components/schemas/Price"
        amountPretax:
          $ref: "#/components/schemas/Price"
        amountTax:
          $ref: "#/components/schemas/Price"
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
        reason:
          description: The reason for the refund.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersRefundResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersRefundResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersRefundResponse".'
          type: string
      type: object
    OrdersRejectReturnLineItemRequest:
      properties:
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is
            required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return and refund.
          format: uint32
          type: integer
        reason:
          description: The reason for the return.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersRejectReturnLineItemResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersRejectReturnLineItemResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersRejectReturnLineItemResponse".'
          type: string
      type: object
    OrdersReturnLineItemRequest:
      properties:
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is
            required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return.
          format: uint32
          type: integer
        reason:
          description: The reason for the return.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersReturnLineItemResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersReturnLineItemResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersReturnLineItemResponse".'
          type: string
      type: object
    OrdersReturnRefundLineItemRequest:
      properties:
        amountPretax:
          $ref: "#/components/schemas/Price"
        amountTax:
          $ref: "#/components/schemas/Price"
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is
            required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the
            products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return and refund.
          format: uint32
          type: integer
        reason:
          description: The reason for the return.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersReturnRefundLineItemResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersReturnRefundLineItemResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersReturnRefundLineItemResponse".'
          type: string
      type: object
    OrdersSetLineItemMetadataRequest:
      properties:
        annotations:
          items:
            $ref: "#/components/schemas/OrderMerchantProvidedAnnotation"
          type: array
        lineItemId:
          description: The ID of the line item to set metadata. Either lineItemId or
            productId is required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
        productId:
          description: The ID of the product to set metadata. This is the REST ID used in
            the products service. Either lineItemId or productId is required.
          type: string
      type: object
    OrdersSetLineItemMetadataResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersSetLineItemMetadataResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersSetLineItemMetadataResponse".'
          type: string
      type: object
    OrdersShipLineItemsRequest:
      properties:
        carrier:
          description: Deprecated. Please use shipmentInfo instead. The carrier handling
            the shipment. See shipments[].carrier in the  Orders resource
            representation for a list of acceptable values.
          type: string
        lineItems:
          description: Line items to ship.
          items:
            $ref: "#/components/schemas/OrderShipmentLineItemShipment"
          type: array
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
        shipmentId:
          description: Deprecated. Please use shipmentInfo instead. The ID of the shipment.
          type: string
        shipmentInfos:
          description: Shipment information. This field is repeated because a single line
            item can be shipped in several packages (and have several tracking
            IDs).
          items:
            $ref: "#/components/schemas/OrdersCustomBatchRequestEntryShipLineItemsS\
              hipmentInfo"
          type: array
        trackingId:
          description: Deprecated. Please use shipmentInfo instead. The tracking id for the
            shipment.
          type: string
      type: object
    OrdersShipLineItemsResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersShipLineItemsResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersShipLineItemsResponse".'
          type: string
      type: object
    OrdersUpdateLineItemShippingDetailsRequest:
      properties:
        deliverByDate:
          description: Updated delivery by date, in ISO 8601 format. If not specified only
            ship by date is updated.
          type: string
        lineItemId:
          description: The ID of the line item to set metadata. Either lineItemId or
            productId is required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
        productId:
          description: The ID of the product to set metadata. This is the REST ID used in
            the products service. Either lineItemId or productId is required.
          type: string
        shipByDate:
          description: Updated ship by date, in ISO 8601 format. If not specified only
            deliver by date is updated.
          type: string
      type: object
    OrdersUpdateLineItemShippingDetailsResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersUpdateLineItemShippingDetailsResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersUpdateLineItemShippingDetailsResponse".'
          type: string
      type: object
    OrdersUpdateMerchantOrderIdRequest:
      properties:
        merchantOrderId:
          description: The merchant order id to be assigned to the order. Must be unique
            per merchant.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
      type: object
    OrdersUpdateMerchantOrderIdResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersUpdateMerchantOrderIdResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersUpdateMerchantOrderIdResponse".'
          type: string
      type: object
    OrdersUpdateShipmentRequest:
      properties:
        carrier:
          description: The carrier handling the shipment. Not updated if missing. See
            shipments[].carrier in the  Orders resource representation for a
            list of acceptable values.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given
            order.
          type: string
        shipmentId:
          description: The ID of the shipment.
          type: string
        status:
          description: New status for the shipment. Not updated if missing.
          type: string
        trackingId:
          description: The tracking id for the shipment. Not updated if missing.
          type: string
      type: object
    OrdersUpdateShipmentResponse:
      properties:
        executionStatus:
          description: The status of the execution.
          type: string
        kind:
          default: content#ordersUpdateShipmentResponse
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#ordersUpdateShipmentResponse".'
          type: string
      type: object
    Price:
      properties:
        currency:
          description: The currency of the price.
          type: string
        value:
          description: The price represented as a number.
          type: string
      type: object
    TestOrder:
      properties:
        customer:
          $ref: "#/components/schemas/TestOrderCustomer"
        kind:
          default: content#testOrder
          description: 'Identifies what kind of resource this is. Value: the fixed string
            "content#testOrder".'
          type: string
        lineItems:
          description: Line items that are ordered. At least one line item must be provided.
          items:
            $ref: "#/components/schemas/TestOrderLineItem"
          type: array
        notificationMode:
          description: Determines if test order must be pulled by merchant or pushed to
            merchant via push integration.
          type: string
        paymentMethod:
          $ref: "#/components/schemas/TestOrderPaymentMethod"
        predefinedDeliveryAddress:
          description: Identifier of one of the predefined delivery addresses for the
            delivery.
          type: string
        promotions:
          description: The details of the merchant provided promotions applied to the
            order. More details about the program are here.
          items:
            $ref: "#/components/schemas/OrderPromotion"
          type: array
        shippingCost:
          $ref: "#/components/schemas/Price"
        shippingCostTax:
          $ref: "#/components/schemas/Price"
        shippingOption:
          description: The requested shipping option.
          type: string
      type: object
    TestOrderCustomer:
      properties:
        email:
          description: Email address of the customer.
          type: string
        explicitMarketingPreference:
          description: Deprecated. Please use marketingRightsInfo instead.
          type: boolean
        fullName:
          description: Full name of the customer.
          type: string
        marketingRightsInfo:
          $ref: "#/components/schemas/TestOrderCustomerMarketingRightsInfo"
      type: object
    TestOrderCustomerMarketingRightsInfo:
      properties:
        explicitMarketingPreference:
          description: Last know user use selection regards marketing preferences. In
            certain cases selection might not be known, so this field would be
            empty.
          type: string
        lastUpdatedTimestamp:
          description: Timestamp when last time marketing preference was updated. Could be
            empty, if user wasn't offered a selection yet.
          type: string
      type: object
    TestOrderLineItem:
      properties:
        product:
          $ref: "#/components/schemas/TestOrderLineItemProduct"
        quantityOrdered:
          description: Number of items ordered.
          format: uint32
          type: integer
        returnInfo:
          $ref: "#/components/schemas/OrderLineItemReturnInfo"
        shippingDetails:
          $ref: "#/components/schemas/OrderLineItemShippingDetails"
        unitTax:
          $ref: "#/components/schemas/Price"
      type: object
    TestOrderLineItemProduct:
      properties:
        brand:
          description: Brand of the item.
          type: string
        channel:
          description: The item's channel.
          type: string
        condition:
          description: Condition or state of the item.
          type: string
        contentLanguage:
          description: The two-letter ISO 639-1 language code for the item.
          type: string
        gtin:
          description: Global Trade Item Number (GTIN) of the item. Optional.
          type: string
        imageLink:
          description: URL of an image of the item.
          type: string
        itemGroupId:
          description: Shared identifier for all variants of the same product. Optional.
          type: string
        mpn:
          description: Manufacturer Part Number (MPN) of the item. Optional.
          type: string
        offerId:
          description: An identifier of the item.
          type: string
        price:
          $ref: "#/components/schemas/Price"
        targetCountry:
          description: The CLDR territory code of the target country of the product.
          type: string
        title:
          description: The title of the product.
          type: string
        variantAttributes:
          description: Variant attributes for the item. Optional.
          items:
            $ref: "#/components/schemas/OrderLineItemProductVariantAttribute"
          type: array
      type: object
    TestOrderPaymentMethod:
      properties:
        expirationMonth:
          description: The card expiration month (January = 1, February = 2 etc.).
          format: int32
          type: integer
        expirationYear:
          description: The card expiration year (4-digit, e.g. 2015).
          format: int32
          type: integer
        lastFourDigits:
          description: The last four digits of the card number.
          type: string
        predefinedBillingAddress:
          description: The billing address.
          type: string
        type:
          description: The type of instrument. Note that real orders might have different
            values than the four values accepted by createTestOrder.
          type: string
      type: object
