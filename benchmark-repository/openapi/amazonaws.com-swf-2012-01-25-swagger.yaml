openapi: 3.0.0
info:
  version: 2012-01-25
  x-release: v4
  title: Amazon Simple Workflow Service
  description: <fullname>Amazon Simple Workflow Service</fullname> <p>The Amazon Simple
    Workflow Service (Amazon SWF) makes it easy to build applications that use
    Amazon's cloud to coordinate work across distributed components. In Amazon
    SWF, a <i>task</i> represents a logical unit of work that is performed by a
    component of your workflow. Coordinating tasks in a workflow involves
    managing intertask dependencies, scheduling, and concurrency in accordance
    with the logical flow of the application.</p> <p>Amazon SWF gives you full
    control over implementing tasks and coordinating them without worrying about
    underlying complexities such as tracking their progress and maintaining
    their state.</p> <p>This documentation serves as reference only. For a
    broader overview of the Amazon SWF programming model, see the <i> <a
    href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/">Amazon
    SWF Developer Guide</a> </i>.</p>
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: swf
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/swf-2012-01-25.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-direct: true
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/swf/
x-hasEquivalentPaths: true
security:
  - hmac: []
paths:
  /#X-Amz-Target=SimpleWorkflowService.CountClosedWorkflowExecutions:
    post:
      operationId: CountClosedWorkflowExecutions
      description: "<p>Returns the number of closed workflow executions within the given
        domain that meet the specified filtering criteria.</p> <note> <p>This
        operation is eventually consistent. The results are best effort and may
        not exactly reflect recent updates and changes.</p> </note> <p>
        <b>Access Control</b> </p> <p>You can use IAM policies to control this
        action's access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use
        a <code>Resource</code> element with the domain name to limit the action
        to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>
        element to allow or deny permission to call this action.</p> </li> <li>
        <p>Constrain the following parameters by using a <code>Condition</code>
        element with the appropriate keys.</p> <ul> <li> <p>
        <code>tagFilter.tag</code>: String constraint. The key is
        <code>swf:tagFilter.tag</code>.</p> </li> <li> <p>
        <code>typeFilter.name</code>: String constraint. The key is
        <code>swf:typeFilter.name</code>.</p> </li> <li> <p>
        <code>typeFilter.version</code>: String constraint. The key is
        <code>swf:typeFilter.version</code>.</p> </li> </ul> </li> </ul> <p>If
        the caller doesn't have sufficient permissions to invoke the action, or
        the parameter values fall outside the specified constraints, the action
        fails. The associated event attribute's <code>cause</code> parameter is
        set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-\
        dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a> in
        the <i>Amazon SWF Developer Guide</i>.</p>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowExecutionCount"
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.CountClosedWorkflowExecutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CountClosedWorkflowExecutionsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.CountOpenWorkflowExecutions:
    post:
      operationId: CountOpenWorkflowExecutions
      description: "<p>Returns the number of open workflow executions within the given
        domain that meet the specified filtering criteria.</p> <note> <p>This
        operation is eventually consistent. The results are best effort and may
        not exactly reflect recent updates and changes.</p> </note> <p>
        <b>Access Control</b> </p> <p>You can use IAM policies to control this
        action's access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use
        a <code>Resource</code> element with the domain name to limit the action
        to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>
        element to allow or deny permission to call this action.</p> </li> <li>
        <p>Constrain the following parameters by using a <code>Condition</code>
        element with the appropriate keys.</p> <ul> <li> <p>
        <code>tagFilter.tag</code>: String constraint. The key is
        <code>swf:tagFilter.tag</code>.</p> </li> <li> <p>
        <code>typeFilter.name</code>: String constraint. The key is
        <code>swf:typeFilter.name</code>.</p> </li> <li> <p>
        <code>typeFilter.version</code>: String constraint. The key is
        <code>swf:typeFilter.version</code>.</p> </li> </ul> </li> </ul> <p>If
        the caller doesn't have sufficient permissions to invoke the action, or
        the parameter values fall outside the specified constraints, the action
        fails. The associated event attribute's <code>cause</code> parameter is
        set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-\
        dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a> in
        the <i>Amazon SWF Developer Guide</i>.</p>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowExecutionCount"
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.CountOpenWorkflowExecutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CountOpenWorkflowExecutionsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.CountPendingActivityTasks:
    post:
      operationId: CountPendingActivityTasks
      description: <p>Returns the estimated number of activity tasks in the specified task
        list. The count returned is an approximation and isn't guaranteed to be
        exact. If you specify a task list that no activity task was ever
        scheduled in then <code>0</code> is returned.</p> <p> <b>Access
        Control</b> </p> <p>You can use IAM policies to control this action's
        access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use a
        <code>Resource</code> element with the domain name to limit the action
        to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>
        element to allow or deny permission to call this action.</p> </li> <li>
        <p>Constrain the <code>taskList.name</code> parameter by using a
        <code>Condition</code> element with the <code>swf:taskList.name</code>
        key to allow the action to access only certain task lists.</p> </li>
        </ul> <p>If the caller doesn't have sufficient permissions to invoke the
        action, or the parameter values fall outside the specified constraints,
        the action fails. The associated event attribute's <code>cause</code>
        parameter is set to <code>OPERATION_NOT_PERMITTED</code>. For details
        and example IAM policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PendingTaskCount"
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.CountPendingActivityTasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CountPendingActivityTasksInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.CountPendingDecisionTasks:
    post:
      operationId: CountPendingDecisionTasks
      description: <p>Returns the estimated number of decision tasks in the specified task
        list. The count returned is an approximation and isn't guaranteed to be
        exact. If you specify a task list that no decision task was ever
        scheduled in then <code>0</code> is returned.</p> <p> <b>Access
        Control</b> </p> <p>You can use IAM policies to control this action's
        access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use a
        <code>Resource</code> element with the domain name to limit the action
        to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>
        element to allow or deny permission to call this action.</p> </li> <li>
        <p>Constrain the <code>taskList.name</code> parameter by using a
        <code>Condition</code> element with the <code>swf:taskList.name</code>
        key to allow the action to access only certain task lists.</p> </li>
        </ul> <p>If the caller doesn't have sufficient permissions to invoke the
        action, or the parameter values fall outside the specified constraints,
        the action fails. The associated event attribute's <code>cause</code>
        parameter is set to <code>OPERATION_NOT_PERMITTED</code>. For details
        and example IAM policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PendingTaskCount"
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.CountPendingDecisionTasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CountPendingDecisionTasksInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.DeprecateActivityType:
    post:
      operationId: DeprecateActivityType
      description: "<p>Deprecates the specified <i>activity type</i>. After an activity
        type has been deprecated, you cannot create new tasks of that activity
        type. Tasks of this type that were scheduled before the type was
        deprecated continue to run.</p> <note> <p>This operation is eventually
        consistent. The results are best effort and may not exactly reflect
        recent updates and changes.</p> </note> <p> <b>Access Control</b> </p>
        <p>You can use IAM policies to control this action's access to Amazon
        SWF resources as follows:</p> <ul> <li> <p>Use a <code>Resource</code>
        element with the domain name to limit the action to only specified
        domains.</p> </li> <li> <p>Use an <code>Action</code> element to allow
        or deny permission to call this action.</p> </li> <li> <p>Constrain the
        following parameters by using a <code>Condition</code> element with the
        appropriate keys.</p> <ul> <li> <p> <code>activityType.name</code>:
        String constraint. The key is <code>swf:activityType.name</code>.</p>
        </li> <li> <p> <code>activityType.version</code>: String constraint. The
        key is <code>swf:activityType.version</code>.</p> </li> </ul> </li>
        </ul> <p>If the caller doesn't have sufficient permissions to invoke the
        action, or the parameter values fall outside the specified constraints,
        the action fails. The associated event attribute's <code>cause</code>
        parameter is set to <code>OPERATION_NOT_PERMITTED</code>. For details
        and example IAM policies, see <a
        href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-\
        dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a> in
        the <i>Amazon SWF Developer Guide</i>.</p>"
      responses:
        "200":
          description: Success
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: TypeDeprecatedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TypeDeprecatedFault"
        "482":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.DeprecateActivityType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeprecateActivityTypeInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.DeprecateDomain:
    post:
      operationId: DeprecateDomain
      description: <p>Deprecates the specified domain. After a domain has been deprecated
        it cannot be used to create new workflow executions or register new
        types. However, you can still use visibility actions on this domain.
        Deprecating a domain also deprecates all activity and workflow types
        registered in the domain. Executions that were started before the domain
        was deprecated continues to run.</p> <note> <p>This operation is
        eventually consistent. The results are best effort and may not exactly
        reflect recent updates and changes.</p> </note> <p> <b>Access
        Control</b> </p> <p>You can use IAM policies to control this action's
        access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use a
        <code>Resource</code> element with the domain name to limit the action
        to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>
        element to allow or deny permission to call this action.</p> </li> <li>
        <p>You cannot use an IAM policy to constrain this action's
        parameters.</p> </li> </ul> <p>If the caller doesn't have sufficient
        permissions to invoke the action, or the parameter values fall outside
        the specified constraints, the action fails. The associated event
        attribute's <code>cause</code> parameter is set to
        <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: DomainDeprecatedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainDeprecatedFault"
        "482":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.DeprecateDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeprecateDomainInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.DeprecateWorkflowType:
    post:
      operationId: DeprecateWorkflowType
      description: "<p>Deprecates the specified <i>workflow type</i>. After a workflow type
        has been deprecated, you cannot create new executions of that type.
        Executions that were started before the type was deprecated continues to
        run. A deprecated workflow type may still be used when calling
        visibility actions.</p> <note> <p>This operation is eventually
        consistent. The results are best effort and may not exactly reflect
        recent updates and changes.</p> </note> <p> <b>Access Control</b> </p>
        <p>You can use IAM policies to control this action's access to Amazon
        SWF resources as follows:</p> <ul> <li> <p>Use a <code>Resource</code>
        element with the domain name to limit the action to only specified
        domains.</p> </li> <li> <p>Use an <code>Action</code> element to allow
        or deny permission to call this action.</p> </li> <li> <p>Constrain the
        following parameters by using a <code>Condition</code> element with the
        appropriate keys.</p> <ul> <li> <p> <code>workflowType.name</code>:
        String constraint. The key is <code>swf:workflowType.name</code>.</p>
        </li> <li> <p> <code>workflowType.version</code>: String constraint. The
        key is <code>swf:workflowType.version</code>.</p> </li> </ul> </li>
        </ul> <p>If the caller doesn't have sufficient permissions to invoke the
        action, or the parameter values fall outside the specified constraints,
        the action fails. The associated event attribute's <code>cause</code>
        parameter is set to <code>OPERATION_NOT_PERMITTED</code>. For details
        and example IAM policies, see <a
        href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-\
        dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a> in
        the <i>Amazon SWF Developer Guide</i>.</p>"
      responses:
        "200":
          description: Success
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: TypeDeprecatedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TypeDeprecatedFault"
        "482":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.DeprecateWorkflowType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeprecateWorkflowTypeInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.DescribeActivityType:
    post:
      operationId: DescribeActivityType
      description: "<p>Returns information about the specified activity type. This includes
        configuration settings provided when the type was registered and other
        general information about the type.</p> <p> <b>Access Control</b> </p>
        <p>You can use IAM policies to control this action's access to Amazon
        SWF resources as follows:</p> <ul> <li> <p>Use a <code>Resource</code>
        element with the domain name to limit the action to only specified
        domains.</p> </li> <li> <p>Use an <code>Action</code> element to allow
        or deny permission to call this action.</p> </li> <li> <p>Constrain the
        following parameters by using a <code>Condition</code> element with the
        appropriate keys.</p> <ul> <li> <p> <code>activityType.name</code>:
        String constraint. The key is <code>swf:activityType.name</code>.</p>
        </li> <li> <p> <code>activityType.version</code>: String constraint. The
        key is <code>swf:activityType.version</code>.</p> </li> </ul> </li>
        </ul> <p>If the caller doesn't have sufficient permissions to invoke the
        action, or the parameter values fall outside the specified constraints,
        the action fails. The associated event attribute's <code>cause</code>
        parameter is set to <code>OPERATION_NOT_PERMITTED</code>. For details
        and example IAM policies, see <a
        href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-\
        dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a> in
        the <i>Amazon SWF Developer Guide</i>.</p>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActivityTypeDetail"
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.DescribeActivityType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeActivityTypeInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.DescribeDomain:
    post:
      operationId: DescribeDomain
      description: <p>Returns information about the specified domain, including description
        and status.</p> <p> <b>Access Control</b> </p> <p>You can use IAM
        policies to control this action's access to Amazon SWF resources as
        follows:</p> <ul> <li> <p>Use a <code>Resource</code> element with the
        domain name to limit the action to only specified domains.</p> </li>
        <li> <p>Use an <code>Action</code> element to allow or deny permission
        to call this action.</p> </li> <li> <p>You cannot use an IAM policy to
        constrain this action's parameters.</p> </li> </ul> <p>If the caller
        doesn't have sufficient permissions to invoke the action, or the
        parameter values fall outside the specified constraints, the action
        fails. The associated event attribute's <code>cause</code> parameter is
        set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainDetail"
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.DescribeDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeDomainInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.DescribeWorkflowExecution:
    post:
      operationId: DescribeWorkflowExecution
      description: <p>Returns information about the specified workflow execution including
        its type and some statistics.</p> <note> <p>This operation is eventually
        consistent. The results are best effort and may not exactly reflect
        recent updates and changes.</p> </note> <p> <b>Access Control</b> </p>
        <p>You can use IAM policies to control this action's access to Amazon
        SWF resources as follows:</p> <ul> <li> <p>Use a <code>Resource</code>
        element with the domain name to limit the action to only specified
        domains.</p> </li> <li> <p>Use an <code>Action</code> element to allow
        or deny permission to call this action.</p> </li> <li> <p>You cannot use
        an IAM policy to constrain this action's parameters.</p> </li> </ul>
        <p>If the caller doesn't have sufficient permissions to invoke the
        action, or the parameter values fall outside the specified constraints,
        the action fails. The associated event attribute's <code>cause</code>
        parameter is set to <code>OPERATION_NOT_PERMITTED</code>. For details
        and example IAM policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowExecutionDetail"
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.DescribeWorkflowExecution
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeWorkflowExecutionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.DescribeWorkflowType:
    post:
      operationId: DescribeWorkflowType
      description: "<p>Returns information about the specified <i>workflow type</i>. This
        includes configuration settings specified when the type was registered
        and other information such as creation date, current status, etc.</p>
        <p> <b>Access Control</b> </p> <p>You can use IAM policies to control
        this action's access to Amazon SWF resources as follows:</p> <ul> <li>
        <p>Use a <code>Resource</code> element with the domain name to limit the
        action to only specified domains.</p> </li> <li> <p>Use an
        <code>Action</code> element to allow or deny permission to call this
        action.</p> </li> <li> <p>Constrain the following parameters by using a
        <code>Condition</code> element with the appropriate keys.</p> <ul> <li>
        <p> <code>workflowType.name</code>: String constraint. The key is
        <code>swf:workflowType.name</code>.</p> </li> <li> <p>
        <code>workflowType.version</code>: String constraint. The key is
        <code>swf:workflowType.version</code>.</p> </li> </ul> </li> </ul> <p>If
        the caller doesn't have sufficient permissions to invoke the action, or
        the parameter values fall outside the specified constraints, the action
        fails. The associated event attribute's <code>cause</code> parameter is
        set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-\
        dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a> in
        the <i>Amazon SWF Developer Guide</i>.</p>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowTypeDetail"
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.DescribeWorkflowType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeWorkflowTypeInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.GetWorkflowExecutionHistory:
    post:
      operationId: GetWorkflowExecutionHistory
      description: <p>Returns the history of the specified workflow execution. The results
        may be split into multiple pages. To retrieve subsequent pages, make the
        call again using the <code>nextPageToken</code> returned by the initial
        call.</p> <note> <p>This operation is eventually consistent. The results
        are best effort and may not exactly reflect recent updates and
        changes.</p> </note> <p> <b>Access Control</b> </p> <p>You can use IAM
        policies to control this action's access to Amazon SWF resources as
        follows:</p> <ul> <li> <p>Use a <code>Resource</code> element with the
        domain name to limit the action to only specified domains.</p> </li>
        <li> <p>Use an <code>Action</code> element to allow or deny permission
        to call this action.</p> </li> <li> <p>You cannot use an IAM policy to
        constrain this action's parameters.</p> </li> </ul> <p>If the caller
        doesn't have sufficient permissions to invoke the action, or the
        parameter values fall outside the specified constraints, the action
        fails. The associated event attribute's <code>cause</code> parameter is
        set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/History"
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: maximumPageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextPageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.GetWorkflowExecutionHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetWorkflowExecutionHistoryInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.ListActivityTypes:
    post:
      operationId: ListActivityTypes
      description: <p>Returns information about all activities registered in the specified
        domain that match the specified name and registration status. The result
        includes information like creation date, current status of the activity,
        etc. The results may be split into multiple pages. To retrieve
        subsequent pages, make the call again using the
        <code>nextPageToken</code> returned by the initial call.</p> <p>
        <b>Access Control</b> </p> <p>You can use IAM policies to control this
        action's access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use
        a <code>Resource</code> element with the domain name to limit the action
        to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>
        element to allow or deny permission to call this action.</p> </li> <li>
        <p>You cannot use an IAM policy to constrain this action's
        parameters.</p> </li> </ul> <p>If the caller doesn't have sufficient
        permissions to invoke the action, or the parameter values fall outside
        the specified constraints, the action fails. The associated event
        attribute's <code>cause</code> parameter is set to
        <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActivityTypeInfos"
        "480":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
        "481":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
      parameters:
        - name: maximumPageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextPageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.ListActivityTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListActivityTypesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.ListClosedWorkflowExecutions:
    post:
      operationId: ListClosedWorkflowExecutions
      description: "<p>Returns a list of closed workflow executions in the specified domain
        that meet the filtering criteria. The results may be split into multiple
        pages. To retrieve subsequent pages, make the call again using the
        nextPageToken returned by the initial call.</p> <note> <p>This operation
        is eventually consistent. The results are best effort and may not
        exactly reflect recent updates and changes.</p> </note> <p> <b>Access
        Control</b> </p> <p>You can use IAM policies to control this action's
        access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use a
        <code>Resource</code> element with the domain name to limit the action
        to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>
        element to allow or deny permission to call this action.</p> </li> <li>
        <p>Constrain the following parameters by using a <code>Condition</code>
        element with the appropriate keys.</p> <ul> <li> <p>
        <code>tagFilter.tag</code>: String constraint. The key is
        <code>swf:tagFilter.tag</code>.</p> </li> <li> <p>
        <code>typeFilter.name</code>: String constraint. The key is
        <code>swf:typeFilter.name</code>.</p> </li> <li> <p>
        <code>typeFilter.version</code>: String constraint. The key is
        <code>swf:typeFilter.version</code>.</p> </li> </ul> </li> </ul> <p>If
        the caller doesn't have sufficient permissions to invoke the action, or
        the parameter values fall outside the specified constraints, the action
        fails. The associated event attribute's <code>cause</code> parameter is
        set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-\
        dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a> in
        the <i>Amazon SWF Developer Guide</i>.</p>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowExecutionInfos"
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: maximumPageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextPageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.ListClosedWorkflowExecutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListClosedWorkflowExecutionsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.ListDomains:
    post:
      operationId: ListDomains
      description: <p>Returns the list of domains registered in the account. The results
        may be split into multiple pages. To retrieve subsequent pages, make the
        call again using the nextPageToken returned by the initial call.</p>
        <note> <p>This operation is eventually consistent. The results are best
        effort and may not exactly reflect recent updates and changes.</p>
        </note> <p> <b>Access Control</b> </p> <p>You can use IAM policies to
        control this action's access to Amazon SWF resources as follows:</p>
        <ul> <li> <p>Use a <code>Resource</code> element with the domain name to
        limit the action to only specified domains. The element must be set to
        <code>arn:aws:swf::AccountID:domain/*</code>, where <i>AccountID</i> is
        the account ID, with no dashes.</p> </li> <li> <p>Use an
        <code>Action</code> element to allow or deny permission to call this
        action.</p> </li> <li> <p>You cannot use an IAM policy to constrain this
        action's parameters.</p> </li> </ul> <p>If the caller doesn't have
        sufficient permissions to invoke the action, or the parameter values
        fall outside the specified constraints, the action fails. The associated
        event attribute's <code>cause</code> parameter is set to
        <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainInfos"
        "480":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: maximumPageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextPageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.ListDomains
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListDomainsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.ListOpenWorkflowExecutions:
    post:
      operationId: ListOpenWorkflowExecutions
      description: "<p>Returns a list of open workflow executions in the specified domain
        that meet the filtering criteria. The results may be split into multiple
        pages. To retrieve subsequent pages, make the call again using the
        nextPageToken returned by the initial call.</p> <note> <p>This operation
        is eventually consistent. The results are best effort and may not
        exactly reflect recent updates and changes.</p> </note> <p> <b>Access
        Control</b> </p> <p>You can use IAM policies to control this action's
        access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use a
        <code>Resource</code> element with the domain name to limit the action
        to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>
        element to allow or deny permission to call this action.</p> </li> <li>
        <p>Constrain the following parameters by using a <code>Condition</code>
        element with the appropriate keys.</p> <ul> <li> <p>
        <code>tagFilter.tag</code>: String constraint. The key is
        <code>swf:tagFilter.tag</code>.</p> </li> <li> <p>
        <code>typeFilter.name</code>: String constraint. The key is
        <code>swf:typeFilter.name</code>.</p> </li> <li> <p>
        <code>typeFilter.version</code>: String constraint. The key is
        <code>swf:typeFilter.version</code>.</p> </li> </ul> </li> </ul> <p>If
        the caller doesn't have sufficient permissions to invoke the action, or
        the parameter values fall outside the specified constraints, the action
        fails. The associated event attribute's <code>cause</code> parameter is
        set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-\
        dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a> in
        the <i>Amazon SWF Developer Guide</i>.</p>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowExecutionInfos"
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: maximumPageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextPageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.ListOpenWorkflowExecutions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListOpenWorkflowExecutionsInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: List tags for a given domain.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceOutput"
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: LimitExceededFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "482":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.ListTagsForResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagsForResourceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.ListWorkflowTypes:
    post:
      operationId: ListWorkflowTypes
      description: <p>Returns information about workflow types in the specified domain. The
        results may be split into multiple pages that can be retrieved by making
        the call repeatedly.</p> <p> <b>Access Control</b> </p> <p>You can use
        IAM policies to control this action's access to Amazon SWF resources as
        follows:</p> <ul> <li> <p>Use a <code>Resource</code> element with the
        domain name to limit the action to only specified domains.</p> </li>
        <li> <p>Use an <code>Action</code> element to allow or deny permission
        to call this action.</p> </li> <li> <p>You cannot use an IAM policy to
        constrain this action's parameters.</p> </li> </ul> <p>If the caller
        doesn't have sufficient permissions to invoke the action, or the
        parameter values fall outside the specified constraints, the action
        fails. The associated event attribute's <code>cause</code> parameter is
        set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowTypeInfos"
        "480":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
        "481":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
      parameters:
        - name: maximumPageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextPageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.ListWorkflowTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListWorkflowTypesInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.PollForActivityTask:
    post:
      operationId: PollForActivityTask
      description: <p>Used by workers to get an <a>ActivityTask</a> from the specified
        activity <code>taskList</code>. This initiates a long poll, where the
        service holds the HTTP connection open and responds as soon as a task
        becomes available. The maximum time the service holds on to the request
        before responding is 60 seconds. If no task is available within 60
        seconds, the poll returns an empty result. An empty result, in this
        context, means that an ActivityTask is returned, but that the value of
        taskToken is an empty string. If a task is returned, the worker should
        use its type to identify and process it correctly.</p> <important>
        <p>Workers should set their client side socket timeout to at least 70
        seconds (10 seconds higher than the maximum time service may hold the
        poll request).</p> </important> <p> <b>Access Control</b> </p> <p>You
        can use IAM policies to control this action's access to Amazon SWF
        resources as follows:</p> <ul> <li> <p>Use a <code>Resource</code>
        element with the domain name to limit the action to only specified
        domains.</p> </li> <li> <p>Use an <code>Action</code> element to allow
        or deny permission to call this action.</p> </li> <li> <p>Constrain the
        <code>taskList.name</code> parameter by using a <code>Condition</code>
        element with the <code>swf:taskList.name</code> key to allow the action
        to access only certain task lists.</p> </li> </ul> <p>If the caller
        doesn't have sufficient permissions to invoke the action, or the
        parameter values fall outside the specified constraints, the action
        fails. The associated event attribute's <code>cause</code> parameter is
        set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActivityTask"
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
        "482":
          description: LimitExceededFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.PollForActivityTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PollForActivityTaskInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.PollForDecisionTask:
    post:
      operationId: PollForDecisionTask
      description: <p>Used by deciders to get a <a>DecisionTask</a> from the specified
        decision <code>taskList</code>. A decision task may be returned for any
        open workflow execution that is using the specified task list. The task
        includes a paginated view of the history of the workflow execution. The
        decider should use the workflow type and the history to determine how to
        properly handle the task.</p> <p>This action initiates a long poll,
        where the service holds the HTTP connection open and responds as soon a
        task becomes available. If no decision task is available in the
        specified task list before the timeout of 60 seconds expires, an empty
        result is returned. An empty result, in this context, means that a
        DecisionTask is returned, but that the value of taskToken is an empty
        string.</p> <important> <p>Deciders should set their client side socket
        timeout to at least 70 seconds (10 seconds higher than the timeout).</p>
        </important> <important> <p>Because the number of workflow history
        events for a single workflow execution might be very large, the result
        returned might be split up across a number of pages. To retrieve
        subsequent pages, make additional calls to
        <code>PollForDecisionTask</code> using the <code>nextPageToken</code>
        returned by the initial call. Note that you do <i>not</i> call
        <code>GetWorkflowExecutionHistory</code> with this
        <code>nextPageToken</code>. Instead, call
        <code>PollForDecisionTask</code> again.</p> </important> <p> <b>Access
        Control</b> </p> <p>You can use IAM policies to control this action's
        access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use a
        <code>Resource</code> element with the domain name to limit the action
        to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>
        element to allow or deny permission to call this action.</p> </li> <li>
        <p>Constrain the <code>taskList.name</code> parameter by using a
        <code>Condition</code> element with the <code>swf:taskList.name</code>
        key to allow the action to access only certain task lists.</p> </li>
        </ul> <p>If the caller doesn't have sufficient permissions to invoke the
        action, or the parameter values fall outside the specified constraints,
        the action fails. The associated event attribute's <code>cause</code>
        parameter is set to <code>OPERATION_NOT_PERMITTED</code>. For details
        and example IAM policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DecisionTask"
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
        "482":
          description: LimitExceededFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
      parameters:
        - name: maximumPageSize
          in: query
          description: Pagination limit
          required: false
          schema:
            type: string
        - name: nextPageToken
          in: query
          description: Pagination token
          required: false
          schema:
            type: string
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.PollForDecisionTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PollForDecisionTaskInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.RecordActivityTaskHeartbeat:
    post:
      operationId: RecordActivityTaskHeartbeat
      description: <p>Used by activity workers to report to the service that the
        <a>ActivityTask</a> represented by the specified <code>taskToken</code>
        is still making progress. The worker can also specify details of the
        progress, for example percent complete, using the <code>details</code>
        parameter. This action can also be used by the worker as a mechanism to
        check if cancellation is being requested for the activity task. If a
        cancellation is being attempted for the specified task, then the boolean
        <code>cancelRequested</code> flag returned by the service is set to
        <code>true</code>.</p> <p>This action resets the
        <code>taskHeartbeatTimeout</code> clock. The
        <code>taskHeartbeatTimeout</code> is specified in
        <a>RegisterActivityType</a>.</p> <p>This action doesn't in itself create
        an event in the workflow execution history. However, if the task times
        out, the workflow execution history contains a
        <code>ActivityTaskTimedOut</code> event that contains the information
        from the last heartbeat generated by the activity worker.</p> <note>
        <p>The <code>taskStartToCloseTimeout</code> of an activity type is the
        maximum duration of an activity task, regardless of the number of
        <a>RecordActivityTaskHeartbeat</a> requests received. The
        <code>taskStartToCloseTimeout</code> is also specified in
        <a>RegisterActivityType</a>.</p> </note> <note> <p>This operation is
        only useful for long-lived activities to report liveliness of the task
        and to determine if a cancellation is being attempted.</p> </note>
        <important> <p>If the <code>cancelRequested</code> flag returns
        <code>true</code>, a cancellation is being attempted. If the worker can
        cancel the activity, it should respond with
        <a>RespondActivityTaskCanceled</a>. Otherwise, it should ignore the
        cancellation request.</p> </important> <p> <b>Access Control</b> </p>
        <p>You can use IAM policies to control this action's access to Amazon
        SWF resources as follows:</p> <ul> <li> <p>Use a <code>Resource</code>
        element with the domain name to limit the action to only specified
        domains.</p> </li> <li> <p>Use an <code>Action</code> element to allow
        or deny permission to call this action.</p> </li> <li> <p>You cannot use
        an IAM policy to constrain this action's parameters.</p> </li> </ul>
        <p>If the caller doesn't have sufficient permissions to invoke the
        action, or the parameter values fall outside the specified constraints,
        the action fails. The associated event attribute's <code>cause</code>
        parameter is set to <code>OPERATION_NOT_PERMITTED</code>. For details
        and example IAM policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActivityTaskStatus"
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.RecordActivityTaskHeartbeat
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecordActivityTaskHeartbeatInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.RegisterActivityType:
    post:
      operationId: RegisterActivityType
      description: "<p>Registers a new <i>activity type</i> along with its configuration
        settings in the specified domain.</p> <important> <p>A
        <code>TypeAlreadyExists</code> fault is returned if the type already
        exists in the domain. You cannot change any configuration settings of
        the type after its registration, and it must be registered as a new
        version.</p> </important> <p> <b>Access Control</b> </p> <p>You can use
        IAM policies to control this action's access to Amazon SWF resources as
        follows:</p> <ul> <li> <p>Use a <code>Resource</code> element with the
        domain name to limit the action to only specified domains.</p> </li>
        <li> <p>Use an <code>Action</code> element to allow or deny permission
        to call this action.</p> </li> <li> <p>Constrain the following
        parameters by using a <code>Condition</code> element with the
        appropriate keys.</p> <ul> <li> <p> <code>defaultTaskList.name</code>:
        String constraint. The key is <code>swf:defaultTaskList.name</code>.</p>
        </li> <li> <p> <code>name</code>: String constraint. The key is
        <code>swf:name</code>.</p> </li> <li> <p> <code>version</code>: String
        constraint. The key is <code>swf:version</code>.</p> </li> </ul> </li>
        </ul> <p>If the caller doesn't have sufficient permissions to invoke the
        action, or the parameter values fall outside the specified constraints,
        the action fails. The associated event attribute's <code>cause</code>
        parameter is set to <code>OPERATION_NOT_PERMITTED</code>. For details
        and example IAM policies, see <a
        href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-\
        dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a> in
        the <i>Amazon SWF Developer Guide</i>.</p>"
      responses:
        "200":
          description: Success
        "480":
          description: TypeAlreadyExistsFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TypeAlreadyExistsFault"
        "481":
          description: LimitExceededFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "482":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "483":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.RegisterActivityType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterActivityTypeInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.RegisterDomain:
    post:
      operationId: RegisterDomain
      description: <p>Registers a new domain.</p> <p> <b>Access Control</b> </p> <p>You can
        use IAM policies to control this action's access to Amazon SWF resources
        as follows:</p> <ul> <li> <p>You cannot use an IAM policy to control
        domain access for this action. The name of the domain being registered
        is available as the resource of this action.</p> </li> <li> <p>Use an
        <code>Action</code> element to allow or deny permission to call this
        action.</p> </li> <li> <p>You cannot use an IAM policy to constrain this
        action's parameters.</p> </li> </ul> <p>If the caller doesn't have
        sufficient permissions to invoke the action, or the parameter values
        fall outside the specified constraints, the action fails. The associated
        event attribute's <code>cause</code> parameter is set to
        <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: DomainAlreadyExistsFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainAlreadyExistsFault"
        "481":
          description: LimitExceededFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "482":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
        "483":
          description: TooManyTagsFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTagsFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.RegisterDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterDomainInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.RegisterWorkflowType:
    post:
      operationId: RegisterWorkflowType
      description: "<p>Registers a new <i>workflow type</i> and its configuration settings
        in the specified domain.</p> <p>The retention period for the workflow
        history is set by the <a>RegisterDomain</a> action.</p> <important>
        <p>If the type already exists, then a <code>TypeAlreadyExists</code>
        fault is returned. You cannot change the configuration settings of a
        workflow type once it is registered and it must be registered as a new
        version.</p> </important> <p> <b>Access Control</b> </p> <p>You can use
        IAM policies to control this action's access to Amazon SWF resources as
        follows:</p> <ul> <li> <p>Use a <code>Resource</code> element with the
        domain name to limit the action to only specified domains.</p> </li>
        <li> <p>Use an <code>Action</code> element to allow or deny permission
        to call this action.</p> </li> <li> <p>Constrain the following
        parameters by using a <code>Condition</code> element with the
        appropriate keys.</p> <ul> <li> <p> <code>defaultTaskList.name</code>:
        String constraint. The key is <code>swf:defaultTaskList.name</code>.</p>
        </li> <li> <p> <code>name</code>: String constraint. The key is
        <code>swf:name</code>.</p> </li> <li> <p> <code>version</code>: String
        constraint. The key is <code>swf:version</code>.</p> </li> </ul> </li>
        </ul> <p>If the caller doesn't have sufficient permissions to invoke the
        action, or the parameter values fall outside the specified constraints,
        the action fails. The associated event attribute's <code>cause</code>
        parameter is set to <code>OPERATION_NOT_PERMITTED</code>. For details
        and example IAM policies, see <a
        href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-\
        dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a> in
        the <i>Amazon SWF Developer Guide</i>.</p>"
      responses:
        "200":
          description: Success
        "480":
          description: TypeAlreadyExistsFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TypeAlreadyExistsFault"
        "481":
          description: LimitExceededFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "482":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "483":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.RegisterWorkflowType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterWorkflowTypeInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.RequestCancelWorkflowExecution:
    post:
      operationId: RequestCancelWorkflowExecution
      description: <p>Records a <code>WorkflowExecutionCancelRequested</code> event in the
        currently running workflow execution identified by the given domain,
        workflowId, and runId. This logically requests the cancellation of the
        workflow execution as a whole. It is up to the decider to take
        appropriate actions when it receives an execution history with this
        event.</p> <note> <p>If the runId isn't specified, the
        <code>WorkflowExecutionCancelRequested</code> event is recorded in the
        history of the current open workflow execution with the specified
        workflowId in the domain.</p> </note> <note> <p>Because this action
        allows the workflow to properly clean up and gracefully close, it should
        be used instead of <a>TerminateWorkflowExecution</a> when possible.</p>
        </note> <p> <b>Access Control</b> </p> <p>You can use IAM policies to
        control this action's access to Amazon SWF resources as follows:</p>
        <ul> <li> <p>Use a <code>Resource</code> element with the domain name to
        limit the action to only specified domains.</p> </li> <li> <p>Use an
        <code>Action</code> element to allow or deny permission to call this
        action.</p> </li> <li> <p>You cannot use an IAM policy to constrain this
        action's parameters.</p> </li> </ul> <p>If the caller doesn't have
        sufficient permissions to invoke the action, or the parameter values
        fall outside the specified constraints, the action fails. The associated
        event attribute's <code>cause</code> parameter is set to
        <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.RequestCancelWorkflowExecution
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestCancelWorkflowExecutionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.RespondActivityTaskCanceled:
    post:
      operationId: RespondActivityTaskCanceled
      description: <p>Used by workers to tell the service that the <a>ActivityTask</a>
        identified by the <code>taskToken</code> was successfully canceled.
        Additional <code>details</code> can be provided using the
        <code>details</code> argument.</p> <p>These <code>details</code> (if
        provided) appear in the <code>ActivityTaskCanceled</code> event added to
        the workflow history.</p> <important> <p>Only use this operation if the
        <code>canceled</code> flag of a <a>RecordActivityTaskHeartbeat</a>
        request returns <code>true</code> and if the activity can be safely
        undone or abandoned.</p> </important> <p>A task is considered open from
        the time that it is scheduled until it is closed. Therefore a task is
        reported as open while a worker is processing it. A task is closed after
        it has been specified in a call to <a>RespondActivityTaskCompleted</a>,
        RespondActivityTaskCanceled, <a>RespondActivityTaskFailed</a>, or the
        task has <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types">timed
        out</a>.</p> <p> <b>Access Control</b> </p> <p>You can use IAM policies
        to control this action's access to Amazon SWF resources as follows:</p>
        <ul> <li> <p>Use a <code>Resource</code> element with the domain name to
        limit the action to only specified domains.</p> </li> <li> <p>Use an
        <code>Action</code> element to allow or deny permission to call this
        action.</p> </li> <li> <p>You cannot use an IAM policy to constrain this
        action's parameters.</p> </li> </ul> <p>If the caller doesn't have
        sufficient permissions to invoke the action, or the parameter values
        fall outside the specified constraints, the action fails. The associated
        event attribute's <code>cause</code> parameter is set to
        <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.RespondActivityTaskCanceled
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RespondActivityTaskCanceledInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.RespondActivityTaskCompleted:
    post:
      operationId: RespondActivityTaskCompleted
      description: <p>Used by workers to tell the service that the <a>ActivityTask</a>
        identified by the <code>taskToken</code> completed successfully with a
        <code>result</code> (if provided). The <code>result</code> appears in
        the <code>ActivityTaskCompleted</code> event in the workflow
        history.</p> <important> <p>If the requested task doesn't complete
        successfully, use <a>RespondActivityTaskFailed</a> instead. If the
        worker finds that the task is canceled through the <code>canceled</code>
        flag returned by <a>RecordActivityTaskHeartbeat</a>, it should cancel
        the task, clean up and then call <a>RespondActivityTaskCanceled</a>.</p>
        </important> <p>A task is considered open from the time that it is
        scheduled until it is closed. Therefore a task is reported as open while
        a worker is processing it. A task is closed after it has been specified
        in a call to RespondActivityTaskCompleted,
        <a>RespondActivityTaskCanceled</a>, <a>RespondActivityTaskFailed</a>, or
        the task has <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types">timed
        out</a>.</p> <p> <b>Access Control</b> </p> <p>You can use IAM policies
        to control this action's access to Amazon SWF resources as follows:</p>
        <ul> <li> <p>Use a <code>Resource</code> element with the domain name to
        limit the action to only specified domains.</p> </li> <li> <p>Use an
        <code>Action</code> element to allow or deny permission to call this
        action.</p> </li> <li> <p>You cannot use an IAM policy to constrain this
        action's parameters.</p> </li> </ul> <p>If the caller doesn't have
        sufficient permissions to invoke the action, or the parameter values
        fall outside the specified constraints, the action fails. The associated
        event attribute's <code>cause</code> parameter is set to
        <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.RespondActivityTaskCompleted
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RespondActivityTaskCompletedInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.RespondActivityTaskFailed:
    post:
      operationId: RespondActivityTaskFailed
      description: <p>Used by workers to tell the service that the <a>ActivityTask</a>
        identified by the <code>taskToken</code> has failed with
        <code>reason</code> (if specified). The <code>reason</code> and
        <code>details</code> appear in the <code>ActivityTaskFailed</code> event
        added to the workflow history.</p> <p>A task is considered open from the
        time that it is scheduled until it is closed. Therefore a task is
        reported as open while a worker is processing it. A task is closed after
        it has been specified in a call to <a>RespondActivityTaskCompleted</a>,
        <a>RespondActivityTaskCanceled</a>, RespondActivityTaskFailed, or the
        task has <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dg-basic.html#swf-dev-timeout-types">timed
        out</a>.</p> <p> <b>Access Control</b> </p> <p>You can use IAM policies
        to control this action's access to Amazon SWF resources as follows:</p>
        <ul> <li> <p>Use a <code>Resource</code> element with the domain name to
        limit the action to only specified domains.</p> </li> <li> <p>Use an
        <code>Action</code> element to allow or deny permission to call this
        action.</p> </li> <li> <p>You cannot use an IAM policy to constrain this
        action's parameters.</p> </li> </ul> <p>If the caller doesn't have
        sufficient permissions to invoke the action, or the parameter values
        fall outside the specified constraints, the action fails. The associated
        event attribute's <code>cause</code> parameter is set to
        <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.RespondActivityTaskFailed
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RespondActivityTaskFailedInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.RespondDecisionTaskCompleted:
    post:
      operationId: RespondDecisionTaskCompleted
      description: <p>Used by deciders to tell the service that the <a>DecisionTask</a>
        identified by the <code>taskToken</code> has successfully completed. The
        <code>decisions</code> argument specifies the list of decisions made
        while processing the task.</p> <p>A <code>DecisionTaskCompleted</code>
        event is added to the workflow history. The
        <code>executionContext</code> specified is attached to the event in the
        workflow execution history.</p> <p> <b>Access Control</b> </p> <p>If an
        IAM policy grants permission to use
        <code>RespondDecisionTaskCompleted</code>, it can express permissions
        for the list of decisions in the <code>decisions</code> parameter. Each
        of the decisions has one or more parameters, much like a regular API
        call. To allow for policies to be as readable as possible, you can
        express permissions on decisions as if they were actual API calls,
        including applying conditions to some parameters. For more information,
        see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.RespondDecisionTaskCompleted
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RespondDecisionTaskCompletedInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.SignalWorkflowExecution:
    post:
      operationId: SignalWorkflowExecution
      description: <p>Records a <code>WorkflowExecutionSignaled</code> event in the
        workflow execution history and creates a decision task for the workflow
        execution identified by the given domain, workflowId and runId. The
        event is recorded with the specified user defined signalName and input
        (if provided).</p> <note> <p>If a runId isn't specified, then the
        <code>WorkflowExecutionSignaled</code> event is recorded in the history
        of the current open workflow with the matching workflowId in the
        domain.</p> </note> <note> <p>If the specified workflow execution isn't
        open, this method fails with <code>UnknownResource</code>.</p> </note>
        <p> <b>Access Control</b> </p> <p>You can use IAM policies to control
        this action's access to Amazon SWF resources as follows:</p> <ul> <li>
        <p>Use a <code>Resource</code> element with the domain name to limit the
        action to only specified domains.</p> </li> <li> <p>Use an
        <code>Action</code> element to allow or deny permission to call this
        action.</p> </li> <li> <p>You cannot use an IAM policy to constrain this
        action's parameters.</p> </li> </ul> <p>If the caller doesn't have
        sufficient permissions to invoke the action, or the parameter values
        fall outside the specified constraints, the action fails. The associated
        event attribute's <code>cause</code> parameter is set to
        <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.SignalWorkflowExecution
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignalWorkflowExecutionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.StartWorkflowExecution:
    post:
      operationId: StartWorkflowExecution
      description: "<p>Starts an execution of the workflow type in the specified domain
        using the provided <code>workflowId</code> and input data.</p> <p>This
        action returns the newly started workflow execution.</p> <p> <b>Access
        Control</b> </p> <p>You can use IAM policies to control this action's
        access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use a
        <code>Resource</code> element with the domain name to limit the action
        to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>
        element to allow or deny permission to call this action.</p> </li> <li>
        <p>Constrain the following parameters by using a <code>Condition</code>
        element with the appropriate keys.</p> <ul> <li> <p>
        <code>tagList.member.0</code>: The key is
        <code>swf:tagList.member.0</code>.</p> </li> <li> <p>
        <code>tagList.member.1</code>: The key is
        <code>swf:tagList.member.1</code>.</p> </li> <li> <p>
        <code>tagList.member.2</code>: The key is
        <code>swf:tagList.member.2</code>.</p> </li> <li> <p>
        <code>tagList.member.3</code>: The key is
        <code>swf:tagList.member.3</code>.</p> </li> <li> <p>
        <code>tagList.member.4</code>: The key is
        <code>swf:tagList.member.4</code>.</p> </li> <li> <p>
        <code>taskList</code>: String constraint. The key is
        <code>swf:taskList.name</code>.</p> </li> <li> <p>
        <code>workflowType.name</code>: String constraint. The key is
        <code>swf:workflowType.name</code>.</p> </li> <li> <p>
        <code>workflowType.version</code>: String constraint. The key is
        <code>swf:workflowType.version</code>.</p> </li> </ul> </li> </ul> <p>If
        the caller doesn't have sufficient permissions to invoke the action, or
        the parameter values fall outside the specified constraints, the action
        fails. The associated event attribute's <code>cause</code> parameter is
        set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-\
        dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a> in
        the <i>Amazon SWF Developer Guide</i>.</p>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Run"
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: TypeDeprecatedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TypeDeprecatedFault"
        "482":
          description: WorkflowExecutionAlreadyStartedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowExecutionAlreadyStartedFault"
        "483":
          description: LimitExceededFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "484":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
        "485":
          description: DefaultUndefinedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultUndefinedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.StartWorkflowExecution
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartWorkflowExecutionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.TagResource:
    post:
      operationId: TagResource
      description: <p>Add a tag to a Amazon SWF domain.</p> <note> <p>Amazon SWF supports a
        maximum of 50 tags per resource.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: TooManyTagsFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTagsFault"
        "482":
          description: LimitExceededFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "483":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.TagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagResourceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.TerminateWorkflowExecution:
    post:
      operationId: TerminateWorkflowExecution
      description: <p>Records a <code>WorkflowExecutionTerminated</code> event and forces
        closure of the workflow execution identified by the given domain, runId,
        and workflowId. The child policy, registered with the workflow type or
        specified when starting this execution, is applied to any open child
        workflow executions of this workflow execution.</p> <important> <p>If
        the identified workflow execution was in progress, it is terminated
        immediately.</p> </important> <note> <p>If a runId isn't specified, then
        the <code>WorkflowExecutionTerminated</code> event is recorded in the
        history of the current open workflow with the matching workflowId in the
        domain.</p> </note> <note> <p>You should consider using
        <a>RequestCancelWorkflowExecution</a> action instead because it allows
        the workflow to gracefully close while <a>TerminateWorkflowExecution</a>
        doesn't.</p> </note> <p> <b>Access Control</b> </p> <p>You can use IAM
        policies to control this action's access to Amazon SWF resources as
        follows:</p> <ul> <li> <p>Use a <code>Resource</code> element with the
        domain name to limit the action to only specified domains.</p> </li>
        <li> <p>Use an <code>Action</code> element to allow or deny permission
        to call this action.</p> </li> <li> <p>You cannot use an IAM policy to
        constrain this action's parameters.</p> </li> </ul> <p>If the caller
        doesn't have sufficient permissions to invoke the action, or the
        parameter values fall outside the specified constraints, the action
        fails. The associated event attribute's <code>cause</code> parameter is
        set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.TerminateWorkflowExecution
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TerminateWorkflowExecutionInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.UndeprecateActivityType:
    post:
      operationId: UndeprecateActivityType
      description: "<p>Undeprecates a previously deprecated <i>activity type</i>. After an
        activity type has been undeprecated, you can create new tasks of that
        activity type.</p> <note> <p>This operation is eventually consistent.
        The results are best effort and may not exactly reflect recent updates
        and changes.</p> </note> <p> <b>Access Control</b> </p> <p>You can use
        IAM policies to control this action's access to Amazon SWF resources as
        follows:</p> <ul> <li> <p>Use a <code>Resource</code> element with the
        domain name to limit the action to only specified domains.</p> </li>
        <li> <p>Use an <code>Action</code> element to allow or deny permission
        to call this action.</p> </li> <li> <p>Constrain the following
        parameters by using a <code>Condition</code> element with the
        appropriate keys.</p> <ul> <li> <p> <code>activityType.name</code>:
        String constraint. The key is <code>swf:activityType.name</code>.</p>
        </li> <li> <p> <code>activityType.version</code>: String constraint. The
        key is <code>swf:activityType.version</code>.</p> </li> </ul> </li>
        </ul> <p>If the caller doesn't have sufficient permissions to invoke the
        action, or the parameter values fall outside the specified constraints,
        the action fails. The associated event attribute's <code>cause</code>
        parameter is set to <code>OPERATION_NOT_PERMITTED</code>. For details
        and example IAM policies, see <a
        href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-\
        dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a> in
        the <i>Amazon SWF Developer Guide</i>.</p>"
      responses:
        "200":
          description: Success
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: TypeAlreadyExistsFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TypeAlreadyExistsFault"
        "482":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.UndeprecateActivityType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UndeprecateActivityTypeInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.UndeprecateDomain:
    post:
      operationId: UndeprecateDomain
      description: <p>Undeprecates a previously deprecated domain. After a domain has been
        undeprecated it can be used to create new workflow executions or
        register new types.</p> <note> <p>This operation is eventually
        consistent. The results are best effort and may not exactly reflect
        recent updates and changes.</p> </note> <p> <b>Access Control</b> </p>
        <p>You can use IAM policies to control this action's access to Amazon
        SWF resources as follows:</p> <ul> <li> <p>Use a <code>Resource</code>
        element with the domain name to limit the action to only specified
        domains.</p> </li> <li> <p>Use an <code>Action</code> element to allow
        or deny permission to call this action.</p> </li> <li> <p>You cannot use
        an IAM policy to constrain this action's parameters.</p> </li> </ul>
        <p>If the caller doesn't have sufficient permissions to invoke the
        action, or the parameter values fall outside the specified constraints,
        the action fails. The associated event attribute's <code>cause</code>
        parameter is set to <code>OPERATION_NOT_PERMITTED</code>. For details
        and example IAM policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
      responses:
        "200":
          description: Success
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: DomainAlreadyExistsFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainAlreadyExistsFault"
        "482":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.UndeprecateDomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UndeprecateDomainInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.UndeprecateWorkflowType:
    post:
      operationId: UndeprecateWorkflowType
      description: "<p>Undeprecates a previously deprecated <i>workflow type</i>. After a
        workflow type has been undeprecated, you can create new executions of
        that type. </p> <note> <p>This operation is eventually consistent. The
        results are best effort and may not exactly reflect recent updates and
        changes.</p> </note> <p> <b>Access Control</b> </p> <p>You can use IAM
        policies to control this action's access to Amazon SWF resources as
        follows:</p> <ul> <li> <p>Use a <code>Resource</code> element with the
        domain name to limit the action to only specified domains.</p> </li>
        <li> <p>Use an <code>Action</code> element to allow or deny permission
        to call this action.</p> </li> <li> <p>Constrain the following
        parameters by using a <code>Condition</code> element with the
        appropriate keys.</p> <ul> <li> <p> <code>workflowType.name</code>:
        String constraint. The key is <code>swf:workflowType.name</code>.</p>
        </li> <li> <p> <code>workflowType.version</code>: String constraint. The
        key is <code>swf:workflowType.version</code>.</p> </li> </ul> </li>
        </ul> <p>If the caller doesn't have sufficient permissions to invoke the
        action, or the parameter values fall outside the specified constraints,
        the action fails. The associated event attribute's <code>cause</code>
        parameter is set to <code>OPERATION_NOT_PERMITTED</code>. For details
        and example IAM policies, see <a
        href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-\
        dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a> in
        the <i>Amazon SWF Developer Guide</i>.</p>"
      responses:
        "200":
          description: Success
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: TypeAlreadyExistsFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TypeAlreadyExistsFault"
        "482":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.UndeprecateWorkflowType
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UndeprecateWorkflowTypeInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=SimpleWorkflowService.UntagResource:
    post:
      operationId: UntagResource
      description: Remove a tag from a Amazon SWF domain.
      responses:
        "200":
          description: Success
        "480":
          description: UnknownResourceFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnknownResourceFault"
        "481":
          description: LimitExceededFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededFault"
        "482":
          description: OperationNotPermittedFault
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationNotPermittedFault"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - SimpleWorkflowService.UntagResource
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UntagResourceInput"
        required: true
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
servers:
  - url: http://swf.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon SWF multi-region endpoint
  - url: https://swf.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-south-1
          - sa-east-1
        default: us-east-1
    description: The Amazon SWF multi-region endpoint
  - url: http://swf.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon SWF endpoint for China (Beijing) and China (Ningxia)
  - url: https://swf.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon SWF endpoint for China (Beijing) and China (Ningxia)
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      required: false
      schema:
        type: string
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      required: false
      schema:
        type: string
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      required: false
      schema:
        type: string
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      required: false
      schema:
        type: string
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      required: false
      schema:
        type: string
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      required: false
      schema:
        type: string
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      required: false
      schema:
        type: string
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    WorkflowExecutionCount:
      type: object
      required:
        - count
      properties:
        count:
          $ref: "#/components/schemas/Count"
        truncated:
          $ref: "#/components/schemas/Truncated"
      description: "Contains the count of workflow executions returned from
        <a>CountOpenWorkflowExecutions</a> or
        <a>CountClosedWorkflowExecutions</a> "
    CountClosedWorkflowExecutionsInput:
      type: object
      required:
        - domain
      properties:
        domain:
          $ref: "#/components/schemas/DomainName"
        startTimeFilter:
          $ref: "#/components/schemas/ExecutionTimeFilter"
        closeTimeFilter:
          $ref: "#/components/schemas/ExecutionTimeFilter"
        executionFilter:
          $ref: "#/components/schemas/WorkflowExecutionFilter"
        typeFilter:
          $ref: "#/components/schemas/WorkflowTypeFilter"
        tagFilter:
          $ref: "#/components/schemas/TagFilter"
        closeStatusFilter:
          $ref: "#/components/schemas/CloseStatusFilter"
    UnknownResourceFault: {}
    OperationNotPermittedFault: {}
    CountOpenWorkflowExecutionsInput:
      type: object
      required:
        - domain
        - startTimeFilter
      properties:
        domain:
          $ref: "#/components/schemas/DomainName"
        startTimeFilter:
          $ref: "#/components/schemas/ExecutionTimeFilter"
        typeFilter:
          $ref: "#/components/schemas/WorkflowTypeFilter"
        tagFilter:
          $ref: "#/components/schemas/TagFilter"
        executionFilter:
          $ref: "#/components/schemas/WorkflowExecutionFilter"
    PendingTaskCount:
      type: object
      required:
        - count
      properties:
        count:
          $ref: "#/components/schemas/Count"
        truncated:
          $ref: "#/components/schemas/Truncated"
      description: Contains the count of tasks in a task list.
    CountPendingActivityTasksInput:
      type: object
      required:
        - domain
        - taskList
      properties:
        domain:
          $ref: "#/components/schemas/DomainName"
        taskList:
          $ref: "#/components/schemas/TaskList"
    CountPendingDecisionTasksInput:
      type: object
      required:
        - domain
        - taskList
      properties:
        domain:
          $ref: "#/components/schemas/DomainName"
        taskList:
          $ref: "#/components/schemas/TaskList"
    DeprecateActivityTypeInput:
      type: object
      required:
        - domain
        - activityType
      properties:
        domain:
          $ref: "#/components/schemas/DomainName"
        activityType:
          $ref: "#/components/schemas/ActivityType"
    TypeDeprecatedFault: {}
    DeprecateDomainInput:
      type: object
      required:
        - name
      properties:
        name:
          $ref: "#/components/schemas/DomainName"
    DomainDeprecatedFault: {}
    DeprecateWorkflowTypeInput:
      type: object
      required:
        - domain
        - workflowType
      properties:
        domain:
          $ref: "#/components/schemas/DomainName"
        workflowType:
          $ref: "#/components/schemas/WorkflowType"
    ActivityTypeDetail:
      type: object
      required:
        - typeInfo
        - configuration
      properties:
        typeInfo:
          $ref: "#/components/schemas/ActivityTypeInfo"
        configuration:
          $ref: "#/components/schemas/ActivityTypeConfiguration"
      description: Detailed information about an activity type.
    DescribeActivityTypeInput:
      type: object
      required:
        - domain
        - activityType
      properties:
        domain:
          $ref: "#/components/schemas/DomainName"
        activityType:
          $ref: "#/components/schemas/ActivityType"
    DomainDetail:
      type: object
      required:
        - domainInfo
        - configuration
      properties:
        domainInfo:
          $ref: "#/components/schemas/DomainInfo"
        configuration:
          $ref: "#/components/schemas/DomainConfiguration"
      description: Contains details of a domain.
    DescribeDomainInput:
      type: object
      required:
        - name
      properties:
        name:
          $ref: "#/components/schemas/DomainName"
    WorkflowExecutionDetail:
      type: object
      required:
        - executionInfo
        - executionConfiguration
        - openCounts
      properties:
        executionInfo:
          $ref: "#/components/schemas/WorkflowExecutionInfo"
        executionConfiguration:
          $ref: "#/components/schemas/WorkflowExecutionConfiguration"
        openCounts:
          $ref: "#/components/schemas/WorkflowExecutionOpenCounts"
        latestActivityTaskTimestamp:
          $ref: "#/components/schemas/Timestamp"
        latestExecutionContext:
          $ref: "#/components/schemas/Data"
      description: Contains details about a workflow execution.
    DescribeWorkflowExecutionInput:
      type: object
      required:
        - domain
        - execution
      properties:
        domain:
          $ref: "#/components/schemas/DomainName"
        execution:
          $ref: "#/components/schemas/WorkflowExecution"
    WorkflowTypeDetail:
      type: object
      required:
        - typeInfo
        - configuration
      properties:
        typeInfo:
          $ref: "#/components/schemas/WorkflowTypeInfo"
        configuration:
          $ref: "#/components/schemas/WorkflowTypeConfiguration"
      description: Contains details about a workflow type.
    DescribeWorkflowTypeInput:
      type: object
      required:
        - domain
        - workflowType
      properties:
        domain:
          $ref: "#/components/schemas/DomainName"
        workflowType:
          $ref: "#/components/schemas/WorkflowType"
    History:
      type: object
      required:
        - events
      properties:
        events:
          $ref: "#/components/schemas/HistoryEventList"
        nextPageToken:
          $ref: "#/components/schemas/PageToken"
      description: Paginated representation of a workflow history for a workflow execution.
        This is the up to date, complete and authoritative record of the events
        related to all tasks and events in the life of the workflow execution.
    GetWorkflowExecutionHistoryInput:
      type: object
      required:
        - domain
        - execution
      properties:
        domain:
          $ref: "#/components/schemas/DomainName"
        execution:
          $ref: "#/components/schemas/WorkflowExecution"
        nextPageToken:
          $ref: "#/components/schemas/PageToken"
        maximumPageSize:
          $ref: "#/components/schemas/PageSize"
        reverseOrder:
          $ref: "#/components/schemas/ReverseOrder"
    ActivityTypeInfos:
      type: object
      required:
        - typeInfos
      properties:
        typeInfos:
          $ref: "#/components/schemas/ActivityTypeInfoList"
        nextPageToken:
          $ref: "#/components/schemas/PageToken"
      description: Contains a paginated list of activity type information structures.
    ListActivityTypesInput:
      type: object
      required:
        - domain
        - registrationStatus
      properties:
        domain:
          $ref: "#/components/schemas/DomainName"
        name:
          $ref: "#/components/schemas/Name"
        registrationStatus:
          $ref: "#/components/schemas/RegistrationStatus"
        nextPageToken:
          $ref: "#/components/schemas/PageToken"
        maximumPageSize:
          $ref: "#/components/schemas/PageSize"
        reverseOrder:
          $ref: "#/components/schemas/ReverseOrder"
    WorkflowExecutionInfos:
      type: object
      required:
        - executionInfos
      properties:
        executionInfos:
          $ref: "#/components/schemas/WorkflowExecutionInfoList"
        nextPageToken:
          $ref: "#/components/schemas/PageToken"
      description: Contains a paginated list of information about workflow executions.
    ListClosedWorkflowExecutionsInput:
      type: object
      required:
        - domain
      properties:
        domain:
          $ref: "#/components/schemas/DomainName"
        startTimeFilter:
          $ref: "#/components/schemas/ExecutionTimeFilter"
        closeTimeFilter:
          $ref: "#/components/schemas/ExecutionTimeFilter"
        executionFilter:
          $ref: "#/components/schemas/WorkflowExecutionFilter"
        closeStatusFilter:
          $ref: "#/components/schemas/CloseStatusFilter"
        typeFilter:
          $ref: "#/components/schemas/WorkflowTypeFilter"
        tagFilter:
          $ref: "#/components/schemas/TagFilter"
        nextPageToken:
          $ref: "#/components/schemas/PageToken"
        maximumPageSize:
          $ref: "#/components/schemas/PageSize"
        reverseOrder:
          $ref: "#/components/schemas/ReverseOrder"
    DomainInfos:
      type: object
      required:
        - domainInfos
      properties:
        domainInfos:
          $ref: "#/components/schemas/DomainInfoList"
        nextPageToken:
          $ref: "#/components/schemas/PageToken"
      description: Contains a paginated collection of DomainInfo structures.
    ListDomainsInput:
      type: object
      required:
        - registrationStatus
      properties:
        nextPageToken:
          $ref: "#/components/schemas/PageToken"
        registrationStatus:
          $ref: "#/components/schemas/RegistrationStatus"
        maximumPageSize:
          $ref: "#/components/schemas/PageSize"
        reverseOrder:
          $ref: "#/components/schemas/ReverseOrder"
    ListOpenWorkflowExecutionsInput:
      type: object
      required:
        - domain
        - startTimeFilter
      properties:
        domain:
          $ref: "#/components/schemas/DomainName"
        startTimeFilter:
          $ref: "#/components/schemas/ExecutionTimeFilter"
        typeFilter:
          $ref: "#/components/schemas/WorkflowTypeFilter"
        tagFilter:
          $ref: "#/components/schemas/TagFilter"
        nextPageToken:
          $ref: "#/components/schemas/PageToken"
        maximumPageSize:
          $ref: "#/components/schemas/PageSize"
        reverseOrder:
          $ref: "#/components/schemas/ReverseOrder"
        executionFilter:
          $ref: "#/components/schemas/WorkflowExecutionFilter"
    ListTagsForResourceOutput:
      type: object
      properties:
        tags:
          $ref: "#/components/schemas/ResourceTagList"
    ListTagsForResourceInput:
      type: object
      required:
        - resourceArn
      properties:
        resourceArn:
          $ref: "#/components/schemas/Arn"
    LimitExceededFault: {}
    WorkflowTypeInfos:
      type: object
      required:
        - typeInfos
      properties:
        typeInfos:
          $ref: "#/components/schemas/WorkflowTypeInfoList"
        nextPageToken:
          $ref: "#/components/schemas/PageToken"
      description: Contains a paginated list of information structures about workflow types.
    ListWorkflowTypesInput:
      type: object
      required:
        - domain
        - registrationStatus
      properties:
        domain:
          $ref: "#/components/schemas/DomainName"
        name:
          $ref: "#/components/schemas/Name"
        registrationStatus:
          $ref: "#/components/schemas/RegistrationStatus"
        nextPageToken:
          $ref: "#/components/schemas/PageToken"
        maximumPageSize:
          $ref: "#/components/schemas/PageSize"
        reverseOrder:
          $ref: "#/components/schemas/ReverseOrder"
    ActivityTask:
      type: object
      required:
        - taskToken
        - activityId
        - startedEventId
        - workflowExecution
        - activityType
      properties:
        taskToken:
          $ref: "#/components/schemas/TaskToken"
        activityId:
          $ref: "#/components/schemas/ActivityId"
        startedEventId:
          $ref: "#/components/schemas/EventId"
        workflowExecution:
          $ref: "#/components/schemas/WorkflowExecution"
        activityType:
          $ref: "#/components/schemas/ActivityType"
        input:
          $ref: "#/components/schemas/Data"
      description: Unit of work sent to an activity worker.
    PollForActivityTaskInput:
      type: object
      required:
        - domain
        - taskList
      properties:
        domain:
          $ref: "#/components/schemas/DomainName"
        taskList:
          $ref: "#/components/schemas/TaskList"
        identity:
          $ref: "#/components/schemas/Identity"
    DecisionTask:
      type: object
      required:
        - taskToken
        - startedEventId
        - workflowExecution
        - workflowType
        - events
      properties:
        taskToken:
          $ref: "#/components/schemas/TaskToken"
        startedEventId:
          $ref: "#/components/schemas/EventId"
        workflowExecution:
          $ref: "#/components/schemas/WorkflowExecution"
        workflowType:
          $ref: "#/components/schemas/WorkflowType"
        events:
          $ref: "#/components/schemas/HistoryEventList"
        nextPageToken:
          $ref: "#/components/schemas/PageToken"
        previousStartedEventId:
          $ref: "#/components/schemas/EventId"
      description: A structure that represents a decision task. Decision tasks are sent to
        deciders in order for them to make decisions.
    PollForDecisionTaskInput:
      type: object
      required:
        - domain
        - taskList
      properties:
        domain:
          $ref: "#/components/schemas/DomainName"
        taskList:
          $ref: "#/components/schemas/TaskList"
        identity:
          $ref: "#/components/schemas/Identity"
        nextPageToken:
          $ref: "#/components/schemas/PageToken"
        maximumPageSize:
          $ref: "#/components/schemas/PageSize"
        reverseOrder:
          $ref: "#/components/schemas/ReverseOrder"
    ActivityTaskStatus:
      type: object
      required:
        - cancelRequested
      properties:
        cancelRequested:
          $ref: "#/components/schemas/Canceled"
      description: Status information about an activity task.
    RecordActivityTaskHeartbeatInput:
      type: object
      required:
        - taskToken
      properties:
        taskToken:
          $ref: "#/components/schemas/TaskToken"
        details:
          $ref: "#/components/schemas/LimitedData"
    RegisterActivityTypeInput:
      type: object
      required:
        - domain
        - name
        - version
      properties:
        domain:
          $ref: "#/components/schemas/DomainName"
        name:
          $ref: "#/components/schemas/Name"
        version:
          $ref: "#/components/schemas/Version"
        description:
          $ref: "#/components/schemas/Description"
        defaultTaskStartToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        defaultTaskHeartbeatTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        defaultTaskList:
          $ref: "#/components/schemas/TaskList"
        defaultTaskPriority:
          $ref: "#/components/schemas/TaskPriority"
        defaultTaskScheduleToStartTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        defaultTaskScheduleToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
    TypeAlreadyExistsFault: {}
    RegisterDomainInput:
      type: object
      required:
        - name
        - workflowExecutionRetentionPeriodInDays
      properties:
        name:
          $ref: "#/components/schemas/DomainName"
        description:
          $ref: "#/components/schemas/Description"
        workflowExecutionRetentionPeriodInDays:
          $ref: "#/components/schemas/DurationInDays"
        tags:
          $ref: "#/components/schemas/ResourceTagList"
    DomainAlreadyExistsFault: {}
    TooManyTagsFault: {}
    RegisterWorkflowTypeInput:
      type: object
      required:
        - domain
        - name
        - version
      properties:
        domain:
          $ref: "#/components/schemas/DomainName"
        name:
          $ref: "#/components/schemas/Name"
        version:
          $ref: "#/components/schemas/Version"
        description:
          $ref: "#/components/schemas/Description"
        defaultTaskStartToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        defaultExecutionStartToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        defaultTaskList:
          $ref: "#/components/schemas/TaskList"
        defaultTaskPriority:
          $ref: "#/components/schemas/TaskPriority"
        defaultChildPolicy:
          $ref: "#/components/schemas/ChildPolicy"
        defaultLambdaRole:
          $ref: "#/components/schemas/Arn"
    RequestCancelWorkflowExecutionInput:
      type: object
      required:
        - domain
        - workflowId
      properties:
        domain:
          $ref: "#/components/schemas/DomainName"
        workflowId:
          $ref: "#/components/schemas/WorkflowId"
        runId:
          $ref: "#/components/schemas/WorkflowRunIdOptional"
    RespondActivityTaskCanceledInput:
      type: object
      required:
        - taskToken
      properties:
        taskToken:
          $ref: "#/components/schemas/TaskToken"
        details:
          $ref: "#/components/schemas/Data"
    RespondActivityTaskCompletedInput:
      type: object
      required:
        - taskToken
      properties:
        taskToken:
          $ref: "#/components/schemas/TaskToken"
        result:
          $ref: "#/components/schemas/Data"
    RespondActivityTaskFailedInput:
      type: object
      required:
        - taskToken
      properties:
        taskToken:
          $ref: "#/components/schemas/TaskToken"
        reason:
          $ref: "#/components/schemas/FailureReason"
        details:
          $ref: "#/components/schemas/Data"
    RespondDecisionTaskCompletedInput:
      type: object
      required:
        - taskToken
      properties:
        taskToken:
          $ref: "#/components/schemas/TaskToken"
        decisions:
          $ref: "#/components/schemas/DecisionList"
        executionContext:
          $ref: "#/components/schemas/Data"
      description: Input data for a TaskCompleted response to a decision task.
    SignalWorkflowExecutionInput:
      type: object
      required:
        - domain
        - workflowId
        - signalName
      properties:
        domain:
          $ref: "#/components/schemas/DomainName"
        workflowId:
          $ref: "#/components/schemas/WorkflowId"
        runId:
          $ref: "#/components/schemas/WorkflowRunIdOptional"
        signalName:
          $ref: "#/components/schemas/SignalName"
        input:
          $ref: "#/components/schemas/Data"
    Run:
      type: object
      properties:
        runId:
          $ref: "#/components/schemas/WorkflowRunId"
      description: Specifies the <code>runId</code> of a workflow execution.
    StartWorkflowExecutionInput:
      type: object
      required:
        - domain
        - workflowId
        - workflowType
      properties:
        domain:
          $ref: "#/components/schemas/DomainName"
        workflowId:
          $ref: "#/components/schemas/WorkflowId"
        workflowType:
          $ref: "#/components/schemas/WorkflowType"
        taskList:
          $ref: "#/components/schemas/TaskList"
        taskPriority:
          $ref: "#/components/schemas/TaskPriority"
        input:
          $ref: "#/components/schemas/Data"
        executionStartToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        tagList:
          $ref: "#/components/schemas/TagList"
        taskStartToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        childPolicy:
          $ref: "#/components/schemas/ChildPolicy"
        lambdaRole:
          $ref: "#/components/schemas/Arn"
    WorkflowExecutionAlreadyStartedFault: {}
    DefaultUndefinedFault: {}
    TagResourceInput:
      type: object
      required:
        - resourceArn
        - tags
      properties:
        resourceArn:
          $ref: "#/components/schemas/Arn"
        tags:
          $ref: "#/components/schemas/ResourceTagList"
    TerminateWorkflowExecutionInput:
      type: object
      required:
        - domain
        - workflowId
      properties:
        domain:
          $ref: "#/components/schemas/DomainName"
        workflowId:
          $ref: "#/components/schemas/WorkflowId"
        runId:
          $ref: "#/components/schemas/WorkflowRunIdOptional"
        reason:
          $ref: "#/components/schemas/TerminateReason"
        details:
          $ref: "#/components/schemas/Data"
        childPolicy:
          $ref: "#/components/schemas/ChildPolicy"
    UndeprecateActivityTypeInput:
      type: object
      required:
        - domain
        - activityType
      properties:
        domain:
          $ref: "#/components/schemas/DomainName"
        activityType:
          $ref: "#/components/schemas/ActivityType"
    UndeprecateDomainInput:
      type: object
      required:
        - name
      properties:
        name:
          $ref: "#/components/schemas/DomainName"
    UndeprecateWorkflowTypeInput:
      type: object
      required:
        - domain
        - workflowType
      properties:
        domain:
          $ref: "#/components/schemas/DomainName"
        workflowType:
          $ref: "#/components/schemas/WorkflowType"
    UntagResourceInput:
      type: object
      required:
        - resourceArn
        - tagKeys
      properties:
        resourceArn:
          $ref: "#/components/schemas/Arn"
        tagKeys:
          $ref: "#/components/schemas/ResourceTagKeyList"
    ActivityId:
      type: string
      minLength: 1
      maxLength: 256
    TaskToken:
      type: string
      minLength: 1
      maxLength: 1024
    EventId:
      type: integer
    WorkflowExecution:
      type: object
      required:
        - workflowId
        - runId
      properties:
        workflowId:
          $ref: "#/components/schemas/WorkflowId"
        runId:
          $ref: "#/components/schemas/WorkflowRunId"
      description: Represents a workflow execution.
    ActivityType:
      type: object
      required:
        - name
        - version
      properties:
        name:
          $ref: "#/components/schemas/Name"
        version:
          $ref: "#/components/schemas/Version"
      description: Represents an activity type.
    Data:
      type: string
      maxLength: 32768
    ActivityTaskCancelRequestedEventAttributes:
      type: object
      required:
        - decisionTaskCompletedEventId
        - activityId
      properties:
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
        activityId:
          $ref: "#/components/schemas/ActivityId"
      description: Provides the details of the <code>ActivityTaskCancelRequested</code>
        event.
    ActivityTaskCanceledEventAttributes:
      type: object
      required:
        - scheduledEventId
        - startedEventId
      properties:
        details:
          $ref: "#/components/schemas/Data"
        scheduledEventId:
          $ref: "#/components/schemas/EventId"
        startedEventId:
          $ref: "#/components/schemas/EventId"
        latestCancelRequestedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>ActivityTaskCanceled</code> event.
    ActivityTaskCompletedEventAttributes:
      type: object
      required:
        - scheduledEventId
        - startedEventId
      properties:
        result:
          $ref: "#/components/schemas/Data"
        scheduledEventId:
          $ref: "#/components/schemas/EventId"
        startedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>ActivityTaskCompleted</code> event.
    FailureReason:
      type: string
      maxLength: 256
    ActivityTaskFailedEventAttributes:
      type: object
      required:
        - scheduledEventId
        - startedEventId
      properties:
        reason:
          $ref: "#/components/schemas/FailureReason"
        details:
          $ref: "#/components/schemas/Data"
        scheduledEventId:
          $ref: "#/components/schemas/EventId"
        startedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>ActivityTaskFailed</code> event.
    DurationInSecondsOptional:
      type: string
      maxLength: 8
    TaskList:
      type: object
      required:
        - name
      properties:
        name:
          $ref: "#/components/schemas/Name"
      description: Represents a task list.
    TaskPriority:
      type: string
    ActivityTaskScheduledEventAttributes:
      type: object
      required:
        - activityType
        - activityId
        - taskList
        - decisionTaskCompletedEventId
      properties:
        activityType:
          $ref: "#/components/schemas/ActivityType"
        activityId:
          $ref: "#/components/schemas/ActivityId"
        input:
          $ref: "#/components/schemas/Data"
        control:
          $ref: "#/components/schemas/Data"
        scheduleToStartTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        scheduleToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        startToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        taskList:
          $ref: "#/components/schemas/TaskList"
        taskPriority:
          $ref: "#/components/schemas/TaskPriority"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
        heartbeatTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
      description: Provides the details of the <code>ActivityTaskScheduled</code> event.
    Identity:
      type: string
      maxLength: 256
    ActivityTaskStartedEventAttributes:
      type: object
      required:
        - scheduledEventId
      properties:
        identity:
          $ref: "#/components/schemas/Identity"
        scheduledEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>ActivityTaskStarted</code> event.
    Canceled:
      type: boolean
    ActivityTaskTimeoutType:
      type: string
      enum:
        - START_TO_CLOSE
        - SCHEDULE_TO_START
        - SCHEDULE_TO_CLOSE
        - HEARTBEAT
    LimitedData:
      type: string
      maxLength: 2048
    ActivityTaskTimedOutEventAttributes:
      type: object
      required:
        - timeoutType
        - scheduledEventId
        - startedEventId
      properties:
        timeoutType:
          $ref: "#/components/schemas/ActivityTaskTimeoutType"
        scheduledEventId:
          $ref: "#/components/schemas/EventId"
        startedEventId:
          $ref: "#/components/schemas/EventId"
        details:
          $ref: "#/components/schemas/LimitedData"
      description: Provides the details of the <code>ActivityTaskTimedOut</code> event.
    Name:
      type: string
      minLength: 1
      maxLength: 256
    Version:
      type: string
      minLength: 1
      maxLength: 64
    ActivityTypeConfiguration:
      type: object
      properties:
        defaultTaskStartToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        defaultTaskHeartbeatTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        defaultTaskList:
          $ref: "#/components/schemas/TaskList"
        defaultTaskPriority:
          $ref: "#/components/schemas/TaskPriority"
        defaultTaskScheduleToStartTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        defaultTaskScheduleToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
      description: Configuration settings registered with the activity type.
    ActivityTypeInfo:
      type: object
      required:
        - activityType
        - status
        - creationDate
      properties:
        activityType:
          $ref: "#/components/schemas/ActivityType"
        status:
          $ref: "#/components/schemas/RegistrationStatus"
        description:
          $ref: "#/components/schemas/Description"
        creationDate:
          $ref: "#/components/schemas/Timestamp"
        deprecationDate:
          $ref: "#/components/schemas/Timestamp"
      description: Detailed information about an activity type.
    RegistrationStatus:
      type: string
      enum:
        - REGISTERED
        - DEPRECATED
    Description:
      type: string
      maxLength: 1024
    Timestamp:
      type: string
      format: date-time
    ActivityTypeInfoList:
      type: array
      items:
        $ref: "#/components/schemas/ActivityTypeInfo"
    PageToken:
      type: string
      maxLength: 2048
    Arn:
      type: string
      minLength: 1
      maxLength: 1600
    TimerId:
      type: string
      minLength: 1
      maxLength: 256
    CancelTimerDecisionAttributes:
      type: object
      required:
        - timerId
      properties:
        timerId:
          $ref: "#/components/schemas/TimerId"
      description: <p>Provides the details of the <code>CancelTimer</code> decision.</p>
        <p> <b>Access Control</b> </p> <p>You can use IAM policies to control
        this decision's access to Amazon SWF resources as follows:</p> <ul> <li>
        <p>Use a <code>Resource</code> element with the domain name to limit the
        action to only specified domains.</p> </li> <li> <p>Use an
        <code>Action</code> element to allow or deny permission to call this
        action.</p> </li> <li> <p>You cannot use an IAM policy to constrain this
        action's parameters.</p> </li> </ul> <p>If the caller doesn't have
        sufficient permissions to invoke the action, or the parameter values
        fall outside the specified constraints, the action fails. The associated
        event attribute's <code>cause</code> parameter is set to
        <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
    CancelTimerFailedCause:
      type: string
      enum:
        - TIMER_ID_UNKNOWN
        - OPERATION_NOT_PERMITTED
    CancelTimerFailedEventAttributes:
      type: object
      required:
        - timerId
        - cause
        - decisionTaskCompletedEventId
      properties:
        timerId:
          $ref: "#/components/schemas/TimerId"
        cause:
          $ref: "#/components/schemas/CancelTimerFailedCause"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>CancelTimerFailed</code> event.
    CancelWorkflowExecutionDecisionAttributes:
      type: object
      properties:
        details:
          $ref: "#/components/schemas/Data"
      description: <p>Provides the details of the <code>CancelWorkflowExecution</code>
        decision.</p> <p> <b>Access Control</b> </p> <p>You can use IAM policies
        to control this decision's access to Amazon SWF resources as
        follows:</p> <ul> <li> <p>Use a <code>Resource</code> element with the
        domain name to limit the action to only specified domains.</p> </li>
        <li> <p>Use an <code>Action</code> element to allow or deny permission
        to call this action.</p> </li> <li> <p>You cannot use an IAM policy to
        constrain this action's parameters.</p> </li> </ul> <p>If the caller
        doesn't have sufficient permissions to invoke the action, or the
        parameter values fall outside the specified constraints, the action
        fails. The associated event attribute's <code>cause</code> parameter is
        set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
    CancelWorkflowExecutionFailedCause:
      type: string
      enum:
        - UNHANDLED_DECISION
        - OPERATION_NOT_PERMITTED
    CancelWorkflowExecutionFailedEventAttributes:
      type: object
      required:
        - cause
        - decisionTaskCompletedEventId
      properties:
        cause:
          $ref: "#/components/schemas/CancelWorkflowExecutionFailedCause"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>CancelWorkflowExecutionFailed</code>
        event.
    CauseMessage:
      type: string
      maxLength: 1728
    ChildPolicy:
      type: string
      enum:
        - TERMINATE
        - REQUEST_CANCEL
        - ABANDON
    WorkflowType:
      type: object
      required:
        - name
        - version
      properties:
        name:
          $ref: "#/components/schemas/Name"
        version:
          $ref: "#/components/schemas/Version"
      description: Represents a workflow type.
    ChildWorkflowExecutionCanceledEventAttributes:
      type: object
      required:
        - workflowExecution
        - workflowType
        - initiatedEventId
        - startedEventId
      properties:
        workflowExecution:
          $ref: "#/components/schemas/WorkflowExecution"
        workflowType:
          $ref: "#/components/schemas/WorkflowType"
        details:
          $ref: "#/components/schemas/Data"
        initiatedEventId:
          $ref: "#/components/schemas/EventId"
        startedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provide details of the <code>ChildWorkflowExecutionCanceled</code> event.
    ChildWorkflowExecutionCompletedEventAttributes:
      type: object
      required:
        - workflowExecution
        - workflowType
        - initiatedEventId
        - startedEventId
      properties:
        workflowExecution:
          $ref: "#/components/schemas/WorkflowExecution"
        workflowType:
          $ref: "#/components/schemas/WorkflowType"
        result:
          $ref: "#/components/schemas/Data"
        initiatedEventId:
          $ref: "#/components/schemas/EventId"
        startedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>ChildWorkflowExecutionCompleted</code>
        event.
    ChildWorkflowExecutionFailedEventAttributes:
      type: object
      required:
        - workflowExecution
        - workflowType
        - initiatedEventId
        - startedEventId
      properties:
        workflowExecution:
          $ref: "#/components/schemas/WorkflowExecution"
        workflowType:
          $ref: "#/components/schemas/WorkflowType"
        reason:
          $ref: "#/components/schemas/FailureReason"
        details:
          $ref: "#/components/schemas/Data"
        initiatedEventId:
          $ref: "#/components/schemas/EventId"
        startedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>ChildWorkflowExecutionFailed</code>
        event.
    ChildWorkflowExecutionStartedEventAttributes:
      type: object
      required:
        - workflowExecution
        - workflowType
        - initiatedEventId
      properties:
        workflowExecution:
          $ref: "#/components/schemas/WorkflowExecution"
        workflowType:
          $ref: "#/components/schemas/WorkflowType"
        initiatedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>ChildWorkflowExecutionStarted</code>
        event.
    ChildWorkflowExecutionTerminatedEventAttributes:
      type: object
      required:
        - workflowExecution
        - workflowType
        - initiatedEventId
        - startedEventId
      properties:
        workflowExecution:
          $ref: "#/components/schemas/WorkflowExecution"
        workflowType:
          $ref: "#/components/schemas/WorkflowType"
        initiatedEventId:
          $ref: "#/components/schemas/EventId"
        startedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the
        <code>ChildWorkflowExecutionTerminated</code> event.
    WorkflowExecutionTimeoutType:
      type: string
      enum:
        - START_TO_CLOSE
    ChildWorkflowExecutionTimedOutEventAttributes:
      type: object
      required:
        - workflowExecution
        - workflowType
        - timeoutType
        - initiatedEventId
        - startedEventId
      properties:
        workflowExecution:
          $ref: "#/components/schemas/WorkflowExecution"
        workflowType:
          $ref: "#/components/schemas/WorkflowType"
        timeoutType:
          $ref: "#/components/schemas/WorkflowExecutionTimeoutType"
        initiatedEventId:
          $ref: "#/components/schemas/EventId"
        startedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>ChildWorkflowExecutionTimedOut</code>
        event.
    CloseStatus:
      type: string
      enum:
        - COMPLETED
        - FAILED
        - CANCELED
        - TERMINATED
        - CONTINUED_AS_NEW
        - TIMED_OUT
    CloseStatusFilter:
      type: object
      required:
        - status
      properties:
        status:
          $ref: "#/components/schemas/CloseStatus"
      description: Used to filter the closed workflow executions in visibility APIs by
        their close status.
    CompleteWorkflowExecutionDecisionAttributes:
      type: object
      properties:
        result:
          $ref: "#/components/schemas/Data"
      description: <p>Provides the details of the <code>CompleteWorkflowExecution</code>
        decision.</p> <p> <b>Access Control</b> </p> <p>You can use IAM policies
        to control this decision's access to Amazon SWF resources as
        follows:</p> <ul> <li> <p>Use a <code>Resource</code> element with the
        domain name to limit the action to only specified domains.</p> </li>
        <li> <p>Use an <code>Action</code> element to allow or deny permission
        to call this action.</p> </li> <li> <p>You cannot use an IAM policy to
        constrain this action's parameters.</p> </li> </ul> <p>If the caller
        doesn't have sufficient permissions to invoke the action, or the
        parameter values fall outside the specified constraints, the action
        fails. The associated event attribute's <code>cause</code> parameter is
        set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
    CompleteWorkflowExecutionFailedCause:
      type: string
      enum:
        - UNHANDLED_DECISION
        - OPERATION_NOT_PERMITTED
    CompleteWorkflowExecutionFailedEventAttributes:
      type: object
      required:
        - cause
        - decisionTaskCompletedEventId
      properties:
        cause:
          $ref: "#/components/schemas/CompleteWorkflowExecutionFailedCause"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>CompleteWorkflowExecutionFailed</code>
        event.
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
      maxItems: 5
    ContinueAsNewWorkflowExecutionDecisionAttributes:
      type: object
      properties:
        input:
          $ref: "#/components/schemas/Data"
        executionStartToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        taskList:
          $ref: "#/components/schemas/TaskList"
        taskPriority:
          $ref: "#/components/schemas/TaskPriority"
        taskStartToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        childPolicy:
          $ref: "#/components/schemas/ChildPolicy"
        tagList:
          $ref: "#/components/schemas/TagList"
        workflowTypeVersion:
          $ref: "#/components/schemas/Version"
        lambdaRole:
          $ref: "#/components/schemas/Arn"
      description: <p>Provides the details of the
        <code>ContinueAsNewWorkflowExecution</code> decision.</p> <p> <b>Access
        Control</b> </p> <p>You can use IAM policies to control this decision's
        access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use a
        <code>Resource</code> element with the domain name to limit the action
        to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>
        element to allow or deny permission to call this action.</p> </li> <li>
        <p>Constrain the following parameters by using a <code>Condition</code>
        element with the appropriate keys.</p> <ul> <li> <p> <code>tag</code> –
        A tag used to identify the workflow execution</p> </li> <li> <p>
        <code>taskList</code> – String constraint. The key is
        <code>swf:taskList.name</code>.</p> </li> <li> <p>
        <code>workflowType.version</code> – String constraint. The key is
        <code>swf:workflowType.version</code>.</p> </li> </ul> </li> </ul> <p>If
        the caller doesn't have sufficient permissions to invoke the action, or
        the parameter values fall outside the specified constraints, the action
        fails. The associated event attribute's <code>cause</code> parameter is
        set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
    ContinueAsNewWorkflowExecutionFailedCause:
      type: string
      enum:
        - UNHANDLED_DECISION
        - WORKFLOW_TYPE_DEPRECATED
        - WORKFLOW_TYPE_DOES_NOT_EXIST
        - DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED
        - DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED
        - DEFAULT_TASK_LIST_UNDEFINED
        - DEFAULT_CHILD_POLICY_UNDEFINED
        - CONTINUE_AS_NEW_WORKFLOW_EXECUTION_RATE_EXCEEDED
        - OPERATION_NOT_PERMITTED
    ContinueAsNewWorkflowExecutionFailedEventAttributes:
      type: object
      required:
        - cause
        - decisionTaskCompletedEventId
      properties:
        cause:
          $ref: "#/components/schemas/ContinueAsNewWorkflowExecutionFailedCause"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the
        <code>ContinueAsNewWorkflowExecutionFailed</code> event.
    Count:
      type: integer
      minimum: 0
    DomainName:
      type: string
      minLength: 1
      maxLength: 256
    ExecutionTimeFilter:
      type: object
      required:
        - oldestDate
      properties:
        oldestDate:
          $ref: "#/components/schemas/Timestamp"
        latestDate:
          $ref: "#/components/schemas/Timestamp"
      description: 'Used to filter the workflow executions in visibility APIs by various
        time-based rules. Each parameter, if specified, defines a rule that must
        be satisfied by each returned query result. The parameter values are in
        the <a href="https://en.wikipedia.org/wiki/Unix_time">Unix Time
        format</a>. For example: <code>"oldestDate": 1325376070.</code> '
    WorkflowExecutionFilter:
      type: object
      required:
        - workflowId
      properties:
        workflowId:
          $ref: "#/components/schemas/WorkflowId"
      description: Used to filter the workflow executions in visibility APIs by their
        <code>workflowId</code>.
    WorkflowTypeFilter:
      type: object
      required:
        - name
      properties:
        name:
          $ref: "#/components/schemas/Name"
        version:
          $ref: "#/components/schemas/VersionOptional"
      description: Used to filter workflow execution query results by type. Each parameter,
        if specified, defines a rule that must be satisfied by each returned
        result.
    TagFilter:
      type: object
      required:
        - tag
      properties:
        tag:
          $ref: "#/components/schemas/Tag"
      description: Used to filter the workflow executions in visibility APIs based on a tag.
    DecisionType:
      type: string
      enum:
        - ScheduleActivityTask
        - RequestCancelActivityTask
        - CompleteWorkflowExecution
        - FailWorkflowExecution
        - CancelWorkflowExecution
        - ContinueAsNewWorkflowExecution
        - RecordMarker
        - StartTimer
        - CancelTimer
        - SignalExternalWorkflowExecution
        - RequestCancelExternalWorkflowExecution
        - StartChildWorkflowExecution
        - ScheduleLambdaFunction
    ScheduleActivityTaskDecisionAttributes:
      type: object
      required:
        - activityType
        - activityId
      properties:
        activityType:
          $ref: "#/components/schemas/ActivityType"
        activityId:
          $ref: "#/components/schemas/ActivityId"
        control:
          $ref: "#/components/schemas/Data"
        input:
          $ref: "#/components/schemas/Data"
        scheduleToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        taskList:
          $ref: "#/components/schemas/TaskList"
        taskPriority:
          $ref: "#/components/schemas/TaskPriority"
        scheduleToStartTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        startToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        heartbeatTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
      description: <p>Provides the details of the <code>ScheduleActivityTask</code>
        decision.</p> <p> <b>Access Control</b> </p> <p>You can use IAM policies
        to control this decision's access to Amazon SWF resources as
        follows:</p> <ul> <li> <p>Use a <code>Resource</code> element with the
        domain name to limit the action to only specified domains.</p> </li>
        <li> <p>Use an <code>Action</code> element to allow or deny permission
        to call this action.</p> </li> <li> <p>Constrain the following
        parameters by using a <code>Condition</code> element with the
        appropriate keys.</p> <ul> <li> <p> <code>activityType.name</code> –
        String constraint. The key is <code>swf:activityType.name</code>.</p>
        </li> <li> <p> <code>activityType.version</code> – String constraint.
        The key is <code>swf:activityType.version</code>.</p> </li> <li> <p>
        <code>taskList</code> – String constraint. The key is
        <code>swf:taskList.name</code>.</p> </li> </ul> </li> </ul> <p>If the
        caller doesn't have sufficient permissions to invoke the action, or the
        parameter values fall outside the specified constraints, the action
        fails. The associated event attribute's <code>cause</code> parameter is
        set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
    RequestCancelActivityTaskDecisionAttributes:
      type: object
      required:
        - activityId
      properties:
        activityId:
          $ref: "#/components/schemas/ActivityId"
      description: <p>Provides the details of the <code>RequestCancelActivityTask</code>
        decision.</p> <p> <b>Access Control</b> </p> <p>You can use IAM policies
        to control this decision's access to Amazon SWF resources as
        follows:</p> <ul> <li> <p>Use a <code>Resource</code> element with the
        domain name to limit the action to only specified domains.</p> </li>
        <li> <p>Use an <code>Action</code> element to allow or deny permission
        to call this action.</p> </li> <li> <p>You cannot use an IAM policy to
        constrain this action's parameters.</p> </li> </ul> <p>If the caller
        doesn't have sufficient permissions to invoke the action, or the
        parameter values fall outside the specified constraints, the action
        fails. The associated event attribute's <code>cause</code> parameter is
        set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
    FailWorkflowExecutionDecisionAttributes:
      type: object
      properties:
        reason:
          $ref: "#/components/schemas/FailureReason"
        details:
          $ref: "#/components/schemas/Data"
      description: <p>Provides the details of the <code>FailWorkflowExecution</code>
        decision.</p> <p> <b>Access Control</b> </p> <p>You can use IAM policies
        to control this decision's access to Amazon SWF resources as
        follows:</p> <ul> <li> <p>Use a <code>Resource</code> element with the
        domain name to limit the action to only specified domains.</p> </li>
        <li> <p>Use an <code>Action</code> element to allow or deny permission
        to call this action.</p> </li> <li> <p>You cannot use an IAM policy to
        constrain this action's parameters.</p> </li> </ul> <p>If the caller
        doesn't have sufficient permissions to invoke the action, or the
        parameter values fall outside the specified constraints, the action
        fails. The associated event attribute's <code>cause</code> parameter is
        set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
    RecordMarkerDecisionAttributes:
      type: object
      required:
        - markerName
      properties:
        markerName:
          $ref: "#/components/schemas/MarkerName"
        details:
          $ref: "#/components/schemas/Data"
      description: <p>Provides the details of the <code>RecordMarker</code> decision.</p>
        <p> <b>Access Control</b> </p> <p>You can use IAM policies to control
        this decision's access to Amazon SWF resources as follows:</p> <ul> <li>
        <p>Use a <code>Resource</code> element with the domain name to limit the
        action to only specified domains.</p> </li> <li> <p>Use an
        <code>Action</code> element to allow or deny permission to call this
        action.</p> </li> <li> <p>You cannot use an IAM policy to constrain this
        action's parameters.</p> </li> </ul> <p>If the caller doesn't have
        sufficient permissions to invoke the action, or the parameter values
        fall outside the specified constraints, the action fails. The associated
        event attribute's <code>cause</code> parameter is set to
        <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
    StartTimerDecisionAttributes:
      type: object
      required:
        - timerId
        - startToFireTimeout
      properties:
        timerId:
          $ref: "#/components/schemas/TimerId"
        control:
          $ref: "#/components/schemas/Data"
        startToFireTimeout:
          $ref: "#/components/schemas/DurationInSeconds"
      description: <p>Provides the details of the <code>StartTimer</code> decision.</p> <p>
        <b>Access Control</b> </p> <p>You can use IAM policies to control this
        decision's access to Amazon SWF resources as follows:</p> <ul> <li>
        <p>Use a <code>Resource</code> element with the domain name to limit the
        action to only specified domains.</p> </li> <li> <p>Use an
        <code>Action</code> element to allow or deny permission to call this
        action.</p> </li> <li> <p>You cannot use an IAM policy to constrain this
        action's parameters.</p> </li> </ul> <p>If the caller doesn't have
        sufficient permissions to invoke the action, or the parameter values
        fall outside the specified constraints, the action fails. The associated
        event attribute's <code>cause</code> parameter is set to
        <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
    SignalExternalWorkflowExecutionDecisionAttributes:
      type: object
      required:
        - workflowId
        - signalName
      properties:
        workflowId:
          $ref: "#/components/schemas/WorkflowId"
        runId:
          $ref: "#/components/schemas/WorkflowRunIdOptional"
        signalName:
          $ref: "#/components/schemas/SignalName"
        input:
          $ref: "#/components/schemas/Data"
        control:
          $ref: "#/components/schemas/Data"
      description: <p>Provides the details of the
        <code>SignalExternalWorkflowExecution</code> decision.</p> <p> <b>Access
        Control</b> </p> <p>You can use IAM policies to control this decision's
        access to Amazon SWF resources as follows:</p> <ul> <li> <p>Use a
        <code>Resource</code> element with the domain name to limit the action
        to only specified domains.</p> </li> <li> <p>Use an <code>Action</code>
        element to allow or deny permission to call this action.</p> </li> <li>
        <p>You cannot use an IAM policy to constrain this action's
        parameters.</p> </li> </ul> <p>If the caller doesn't have sufficient
        permissions to invoke the action, or the parameter values fall outside
        the specified constraints, the action fails. The associated event
        attribute's <code>cause</code> parameter is set to
        <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
    RequestCancelExternalWorkflowExecutionDecisionAttributes:
      type: object
      required:
        - workflowId
      properties:
        workflowId:
          $ref: "#/components/schemas/WorkflowId"
        runId:
          $ref: "#/components/schemas/WorkflowRunIdOptional"
        control:
          $ref: "#/components/schemas/Data"
      description: <p>Provides the details of the
        <code>RequestCancelExternalWorkflowExecution</code> decision.</p> <p>
        <b>Access Control</b> </p> <p>You can use IAM policies to control this
        decision's access to Amazon SWF resources as follows:</p> <ul> <li>
        <p>Use a <code>Resource</code> element with the domain name to limit the
        action to only specified domains.</p> </li> <li> <p>Use an
        <code>Action</code> element to allow or deny permission to call this
        action.</p> </li> <li> <p>You cannot use an IAM policy to constrain this
        action's parameters.</p> </li> </ul> <p>If the caller doesn't have
        sufficient permissions to invoke the action, or the parameter values
        fall outside the specified constraints, the action fails. The associated
        event attribute's <code>cause</code> parameter is set to
        <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
    StartChildWorkflowExecutionDecisionAttributes:
      type: object
      required:
        - workflowType
        - workflowId
      properties:
        workflowType:
          $ref: "#/components/schemas/WorkflowType"
        workflowId:
          $ref: "#/components/schemas/WorkflowId"
        control:
          $ref: "#/components/schemas/Data"
        input:
          $ref: "#/components/schemas/Data"
        executionStartToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        taskList:
          $ref: "#/components/schemas/TaskList"
        taskPriority:
          $ref: "#/components/schemas/TaskPriority"
        taskStartToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        childPolicy:
          $ref: "#/components/schemas/ChildPolicy"
        tagList:
          $ref: "#/components/schemas/TagList"
        lambdaRole:
          $ref: "#/components/schemas/Arn"
      description: <p>Provides the details of the <code>StartChildWorkflowExecution</code>
        decision.</p> <p> <b>Access Control</b> </p> <p>You can use IAM policies
        to control this decision's access to Amazon SWF resources as
        follows:</p> <ul> <li> <p>Use a <code>Resource</code> element with the
        domain name to limit the action to only specified domains.</p> </li>
        <li> <p>Use an <code>Action</code> element to allow or deny permission
        to call this action.</p> </li> <li> <p>Constrain the following
        parameters by using a <code>Condition</code> element with the
        appropriate keys.</p> <ul> <li> <p> <code>tagList.member.N</code> – The
        key is "swf:tagList.N" where N is the tag number from 0 to 4,
        inclusive.</p> </li> <li> <p> <code>taskList</code> – String constraint.
        The key is <code>swf:taskList.name</code>.</p> </li> <li> <p>
        <code>workflowType.name</code> – String constraint. The key is
        <code>swf:workflowType.name</code>.</p> </li> <li> <p>
        <code>workflowType.version</code> – String constraint. The key is
        <code>swf:workflowType.version</code>.</p> </li> </ul> </li> </ul> <p>If
        the caller doesn't have sufficient permissions to invoke the action, or
        the parameter values fall outside the specified constraints, the action
        fails. The associated event attribute's <code>cause</code> parameter is
        set to <code>OPERATION_NOT_PERMITTED</code>. For details and example IAM
        policies, see <a
        href="https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html">Using
        IAM to Manage Access to Amazon SWF Workflows</a> in the <i>Amazon SWF
        Developer Guide</i>.</p>
    ScheduleLambdaFunctionDecisionAttributes:
      type: object
      required:
        - id
        - name
      properties:
        id:
          $ref: "#/components/schemas/FunctionId"
        name:
          $ref: "#/components/schemas/FunctionName"
        control:
          $ref: "#/components/schemas/Data"
        input:
          $ref: "#/components/schemas/FunctionInput"
        startToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
      description: Decision attributes specified in
        <code>scheduleLambdaFunctionDecisionAttributes</code> within the list of
        decisions <code>decisions</code> passed to
        <a>RespondDecisionTaskCompleted</a>.
    Decision:
      type: object
      required:
        - decisionType
      properties:
        decisionType:
          $ref: "#/components/schemas/DecisionType"
        scheduleActivityTaskDecisionAttributes:
          $ref: "#/components/schemas/ScheduleActivityTaskDecisionAttributes"
        requestCancelActivityTaskDecisionAttributes:
          $ref: "#/components/schemas/RequestCancelActivityTaskDecisionAttributes"
        completeWorkflowExecutionDecisionAttributes:
          $ref: "#/components/schemas/CompleteWorkflowExecutionDecisionAttributes"
        failWorkflowExecutionDecisionAttributes:
          $ref: "#/components/schemas/FailWorkflowExecutionDecisionAttributes"
        cancelWorkflowExecutionDecisionAttributes:
          $ref: "#/components/schemas/CancelWorkflowExecutionDecisionAttributes"
        continueAsNewWorkflowExecutionDecisionAttributes:
          $ref: "#/components/schemas/ContinueAsNewWorkflowExecutionDecisionAttribu\
            tes"
        recordMarkerDecisionAttributes:
          $ref: "#/components/schemas/RecordMarkerDecisionAttributes"
        startTimerDecisionAttributes:
          $ref: "#/components/schemas/StartTimerDecisionAttributes"
        cancelTimerDecisionAttributes:
          $ref: "#/components/schemas/CancelTimerDecisionAttributes"
        signalExternalWorkflowExecutionDecisionAttributes:
          $ref: "#/components/schemas/SignalExternalWorkflowExecutionDecisionAttrib\
            utes"
        requestCancelExternalWorkflowExecutionDecisionAttributes:
          $ref: "#/components/schemas/RequestCancelExternalWorkflowExecutionDecisio\
            nAttributes"
        startChildWorkflowExecutionDecisionAttributes:
          $ref: "#/components/schemas/StartChildWorkflowExecutionDecisionAttributes"
        scheduleLambdaFunctionDecisionAttributes:
          $ref: "#/components/schemas/ScheduleLambdaFunctionDecisionAttributes"
      description: "<p>Specifies a decision made by the decider. A decision can be one of
        these types:</p> <ul> <li> <p> <code>CancelTimer</code> – Cancels a
        previously started timer and records a <code>TimerCanceled</code> event
        in the history.</p> </li> <li> <p> <code>CancelWorkflowExecution</code>
        – Closes the workflow execution and records a
        <code>WorkflowExecutionCanceled</code> event in the history.</p> </li>
        <li> <p> <code>CompleteWorkflowExecution</code> – Closes the workflow
        execution and records a <code>WorkflowExecutionCompleted</code> event in
        the history .</p> </li> <li> <p>
        <code>ContinueAsNewWorkflowExecution</code> – Closes the workflow
        execution and starts a new workflow execution of the same type using the
        same workflow ID and a unique run Id. A
        <code>WorkflowExecutionContinuedAsNew</code> event is recorded in the
        history.</p> </li> <li> <p> <code>FailWorkflowExecution</code> – Closes
        the workflow execution and records a
        <code>WorkflowExecutionFailed</code> event in the history.</p> </li>
        <li> <p> <code>RecordMarker</code> – Records a
        <code>MarkerRecorded</code> event in the history. Markers can be used
        for adding custom information in the history for instance to let
        deciders know that they don't need to look at the history beyond the
        marker event.</p> </li> <li> <p> <code>RequestCancelActivityTask</code>
        – Attempts to cancel a previously scheduled activity task. If the
        activity task was scheduled but has not been assigned to a worker, then
        it is canceled. If the activity task was already assigned to a worker,
        then the worker is informed that cancellation has been requested in the
        response to <a>RecordActivityTaskHeartbeat</a>.</p> </li> <li> <p>
        <code>RequestCancelExternalWorkflowExecution</code> – Requests that a
        request be made to cancel the specified external workflow execution and
        records a <code>RequestCancelExternalWorkflowExecutionInitiated</code>
        event in the history.</p> </li> <li> <p>
        <code>ScheduleActivityTask</code> – Schedules an activity task.</p>
        </li> <li> <p> <code>SignalExternalWorkflowExecution</code> – Requests a
        signal to be delivered to the specified external workflow execution and
        records a <code>SignalExternalWorkflowExecutionInitiated</code> event in
        the history.</p> </li> <li> <p> <code>StartChildWorkflowExecution</code>
        – Requests that a child workflow execution be started and records a
        <code>StartChildWorkflowExecutionInitiated</code> event in the history.
        The child workflow execution is a separate workflow execution with its
        own history.</p> </li> <li> <p> <code>StartTimer</code> – Starts a timer
        for this workflow execution and records a <code>TimerStarted</code>
        event in the history. This timer fires after the specified delay and
        record a <code>TimerFired</code> event.</p> </li> </ul> <p> <b>Access
        Control</b> </p> <p>If you grant permission to use
        <code>RespondDecisionTaskCompleted</code>, you can use IAM policies to
        express permissions for the list of decisions returned by this action as
        if they were members of the API. Treating decisions as a pseudo API
        maintains a uniform conceptual model and helps keep policies readable.
        For details and example IAM policies, see <a
        href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-\
        dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a> in
        the <i>Amazon SWF Developer Guide</i>.</p> <p> <b>Decision Failure</b>
        </p> <p>Decisions can fail for several reasons</p> <ul> <li> <p>The
        ordering of decisions should follow a logical flow. Some decisions might
        not make sense in the current context of the workflow execution and
        therefore fails.</p> </li> <li> <p>A limit on your account was
        reached.</p> </li> <li> <p>The decision lacks sufficient
        permissions.</p> </li> </ul> <p>One of the following events might be
        added to the history to indicate an error. The event attribute's
        <code>cause</code> parameter indicates the cause. If <code>cause</code>
        is set to <code>OPERATION_NOT_PERMITTED</code>, the decision failed
        because it lacked sufficient permissions. For details and example IAM
        policies, see <a
        href=\"https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-\
        dev-iam.html\">Using IAM to Manage Access to Amazon SWF Workflows</a> in
        the <i>Amazon SWF Developer Guide</i>.</p> <ul> <li> <p>
        <code>ScheduleActivityTaskFailed</code> – A
        <code>ScheduleActivityTask</code> decision failed. This could happen if
        the activity type specified in the decision isn't registered, is in a
        deprecated state, or the decision isn't properly configured.</p> </li>
        <li> <p> <code>RequestCancelActivityTaskFailed</code> – A
        <code>RequestCancelActivityTask</code> decision failed. This could
        happen if there is no open activity task with the specified
        activityId.</p> </li> <li> <p> <code>StartTimerFailed</code> – A
        <code>StartTimer</code> decision failed. This could happen if there is
        another open timer with the same timerId.</p> </li> <li> <p>
        <code>CancelTimerFailed</code> – A <code>CancelTimer</code> decision
        failed. This could happen if there is no open timer with the specified
        timerId.</p> </li> <li> <p>
        <code>StartChildWorkflowExecutionFailed</code> – A
        <code>StartChildWorkflowExecution</code> decision failed. This could
        happen if the workflow type specified isn't registered, is deprecated,
        or the decision isn't properly configured.</p> </li> <li> <p>
        <code>SignalExternalWorkflowExecutionFailed</code> – A
        <code>SignalExternalWorkflowExecution</code> decision failed. This could
        happen if the <code>workflowID</code> specified in the decision was
        incorrect.</p> </li> <li> <p>
        <code>RequestCancelExternalWorkflowExecutionFailed</code> – A
        <code>RequestCancelExternalWorkflowExecution</code> decision failed.
        This could happen if the <code>workflowID</code> specified in the
        decision was incorrect.</p> </li> <li> <p>
        <code>CancelWorkflowExecutionFailed</code> – A
        <code>CancelWorkflowExecution</code> decision failed. This could happen
        if there is an unhandled decision task pending in the workflow
        execution.</p> </li> <li> <p>
        <code>CompleteWorkflowExecutionFailed</code> – A
        <code>CompleteWorkflowExecution</code> decision failed. This could
        happen if there is an unhandled decision task pending in the workflow
        execution.</p> </li> <li> <p>
        <code>ContinueAsNewWorkflowExecutionFailed</code> – A
        <code>ContinueAsNewWorkflowExecution</code> decision failed. This could
        happen if there is an unhandled decision task pending in the workflow
        execution or the ContinueAsNewWorkflowExecution decision was not
        configured correctly.</p> </li> <li> <p>
        <code>FailWorkflowExecutionFailed</code> – A
        <code>FailWorkflowExecution</code> decision failed. This could happen if
        there is an unhandled decision task pending in the workflow
        execution.</p> </li> </ul> <p>The preceding error events might occur due
        to an error in the decider logic, which might put the workflow execution
        in an unstable state The cause field in the event structure for the
        error event indicates the cause of the error.</p> <note> <p>A workflow
        execution may be closed by the decider by returning one of the following
        decisions when completing a decision task:
        <code>CompleteWorkflowExecution</code>,
        <code>FailWorkflowExecution</code>, <code>CancelWorkflowExecution</code>
        and <code>ContinueAsNewWorkflowExecution</code>. An
        <code>UnhandledDecision</code> fault is returned if a workflow closing
        decision is specified and a signal or activity event had been added to
        the history while the decision task was being performed by the decider.
        Unlike the above situations which are logic issues, this fault is always
        possible because of race conditions in a distributed system. The right
        action here is to call <a>RespondDecisionTaskCompleted</a> without any
        decisions. This would result in another decision task with these new
        events included in the history. The decider should handle the new events
        and may decide to close the workflow execution.</p> </note> <p> <b>How
        to Code a Decision</b> </p> <p>You code a decision by first setting the
        decision type field to one of the above decision values, and then set
        the corresponding attributes field shown below:</p> <ul> <li> <p> <code>
        <a>ScheduleActivityTaskDecisionAttributes</a> </code> </p> </li> <li>
        <p> <code> <a>RequestCancelActivityTaskDecisionAttributes</a> </code>
        </p> </li> <li> <p> <code>
        <a>CompleteWorkflowExecutionDecisionAttributes</a> </code> </p> </li>
        <li> <p> <code> <a>FailWorkflowExecutionDecisionAttributes</a> </code>
        </p> </li> <li> <p> <code>
        <a>CancelWorkflowExecutionDecisionAttributes</a> </code> </p> </li> <li>
        <p> <code> <a>ContinueAsNewWorkflowExecutionDecisionAttributes</a>
        </code> </p> </li> <li> <p> <code> <a>RecordMarkerDecisionAttributes</a>
        </code> </p> </li> <li> <p> <code> <a>StartTimerDecisionAttributes</a>
        </code> </p> </li> <li> <p> <code> <a>CancelTimerDecisionAttributes</a>
        </code> </p> </li> <li> <p> <code>
        <a>SignalExternalWorkflowExecutionDecisionAttributes</a> </code> </p>
        </li> <li> <p> <code>
        <a>RequestCancelExternalWorkflowExecutionDecisionAttributes</a> </code>
        </p> </li> <li> <p> <code>
        <a>StartChildWorkflowExecutionDecisionAttributes</a> </code> </p> </li>
        </ul>"
    DecisionList:
      type: array
      items:
        $ref: "#/components/schemas/Decision"
    HistoryEventList:
      type: array
      items:
        $ref: "#/components/schemas/HistoryEvent"
    DecisionTaskCompletedEventAttributes:
      type: object
      required:
        - scheduledEventId
        - startedEventId
      properties:
        executionContext:
          $ref: "#/components/schemas/Data"
        scheduledEventId:
          $ref: "#/components/schemas/EventId"
        startedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>DecisionTaskCompleted</code> event.
    DecisionTaskScheduledEventAttributes:
      type: object
      required:
        - taskList
      properties:
        taskList:
          $ref: "#/components/schemas/TaskList"
        taskPriority:
          $ref: "#/components/schemas/TaskPriority"
        startToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
      description: Provides details about the <code>DecisionTaskScheduled</code> event.
    DecisionTaskStartedEventAttributes:
      type: object
      required:
        - scheduledEventId
      properties:
        identity:
          $ref: "#/components/schemas/Identity"
        scheduledEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>DecisionTaskStarted</code> event.
    DecisionTaskTimeoutType:
      type: string
      enum:
        - START_TO_CLOSE
    DecisionTaskTimedOutEventAttributes:
      type: object
      required:
        - timeoutType
        - scheduledEventId
        - startedEventId
      properties:
        timeoutType:
          $ref: "#/components/schemas/DecisionTaskTimeoutType"
        scheduledEventId:
          $ref: "#/components/schemas/EventId"
        startedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>DecisionTaskTimedOut</code> event.
    DurationInDays:
      type: string
      minLength: 1
      maxLength: 8
    DomainConfiguration:
      type: object
      required:
        - workflowExecutionRetentionPeriodInDays
      properties:
        workflowExecutionRetentionPeriodInDays:
          $ref: "#/components/schemas/DurationInDays"
      description: Contains the configuration settings of a domain.
    DomainInfo:
      type: object
      required:
        - name
        - status
      properties:
        name:
          $ref: "#/components/schemas/DomainName"
        status:
          $ref: "#/components/schemas/RegistrationStatus"
        description:
          $ref: "#/components/schemas/Description"
        arn:
          $ref: "#/components/schemas/Arn"
      description: Contains general information about a domain.
    DomainInfoList:
      type: array
      items:
        $ref: "#/components/schemas/DomainInfo"
    DurationInSeconds:
      type: string
      minLength: 1
      maxLength: 8
    EventType:
      type: string
      enum:
        - WorkflowExecutionStarted
        - WorkflowExecutionCancelRequested
        - WorkflowExecutionCompleted
        - CompleteWorkflowExecutionFailed
        - WorkflowExecutionFailed
        - FailWorkflowExecutionFailed
        - WorkflowExecutionTimedOut
        - WorkflowExecutionCanceled
        - CancelWorkflowExecutionFailed
        - WorkflowExecutionContinuedAsNew
        - ContinueAsNewWorkflowExecutionFailed
        - WorkflowExecutionTerminated
        - DecisionTaskScheduled
        - DecisionTaskStarted
        - DecisionTaskCompleted
        - DecisionTaskTimedOut
        - ActivityTaskScheduled
        - ScheduleActivityTaskFailed
        - ActivityTaskStarted
        - ActivityTaskCompleted
        - ActivityTaskFailed
        - ActivityTaskTimedOut
        - ActivityTaskCanceled
        - ActivityTaskCancelRequested
        - RequestCancelActivityTaskFailed
        - WorkflowExecutionSignaled
        - MarkerRecorded
        - RecordMarkerFailed
        - TimerStarted
        - StartTimerFailed
        - TimerFired
        - TimerCanceled
        - CancelTimerFailed
        - StartChildWorkflowExecutionInitiated
        - StartChildWorkflowExecutionFailed
        - ChildWorkflowExecutionStarted
        - ChildWorkflowExecutionCompleted
        - ChildWorkflowExecutionFailed
        - ChildWorkflowExecutionTimedOut
        - ChildWorkflowExecutionCanceled
        - ChildWorkflowExecutionTerminated
        - SignalExternalWorkflowExecutionInitiated
        - SignalExternalWorkflowExecutionFailed
        - ExternalWorkflowExecutionSignaled
        - RequestCancelExternalWorkflowExecutionInitiated
        - RequestCancelExternalWorkflowExecutionFailed
        - ExternalWorkflowExecutionCancelRequested
        - LambdaFunctionScheduled
        - LambdaFunctionStarted
        - LambdaFunctionCompleted
        - LambdaFunctionFailed
        - LambdaFunctionTimedOut
        - ScheduleLambdaFunctionFailed
        - StartLambdaFunctionFailed
    ExecutionStatus:
      type: string
      enum:
        - OPEN
        - CLOSED
    ExternalWorkflowExecutionCancelRequestedEventAttributes:
      type: object
      required:
        - workflowExecution
        - initiatedEventId
      properties:
        workflowExecution:
          $ref: "#/components/schemas/WorkflowExecution"
        initiatedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the
        <code>ExternalWorkflowExecutionCancelRequested</code> event.
    ExternalWorkflowExecutionSignaledEventAttributes:
      type: object
      required:
        - workflowExecution
        - initiatedEventId
      properties:
        workflowExecution:
          $ref: "#/components/schemas/WorkflowExecution"
        initiatedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the
        <code>ExternalWorkflowExecutionSignaled</code> event.
    FailWorkflowExecutionFailedCause:
      type: string
      enum:
        - UNHANDLED_DECISION
        - OPERATION_NOT_PERMITTED
    FailWorkflowExecutionFailedEventAttributes:
      type: object
      required:
        - cause
        - decisionTaskCompletedEventId
      properties:
        cause:
          $ref: "#/components/schemas/FailWorkflowExecutionFailedCause"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>FailWorkflowExecutionFailed</code>
        event.
    FunctionId:
      type: string
      minLength: 1
      maxLength: 256
    FunctionInput:
      type: string
      minLength: 0
      maxLength: 32768
    FunctionName:
      type: string
      minLength: 1
      maxLength: 64
    PageSize:
      type: integer
      minimum: 0
      maximum: 1000
    ReverseOrder:
      type: boolean
    WorkflowExecutionStartedEventAttributes:
      type: object
      required:
        - childPolicy
        - taskList
        - workflowType
      properties:
        input:
          $ref: "#/components/schemas/Data"
        executionStartToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        taskStartToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        childPolicy:
          $ref: "#/components/schemas/ChildPolicy"
        taskList:
          $ref: "#/components/schemas/TaskList"
        taskPriority:
          $ref: "#/components/schemas/TaskPriority"
        workflowType:
          $ref: "#/components/schemas/WorkflowType"
        tagList:
          $ref: "#/components/schemas/TagList"
        continuedExecutionRunId:
          $ref: "#/components/schemas/WorkflowRunIdOptional"
        parentWorkflowExecution:
          $ref: "#/components/schemas/WorkflowExecution"
        parentInitiatedEventId:
          $ref: "#/components/schemas/EventId"
        lambdaRole:
          $ref: "#/components/schemas/Arn"
      description: Provides details of <code>WorkflowExecutionStarted</code> event.
    WorkflowExecutionCompletedEventAttributes:
      type: object
      required:
        - decisionTaskCompletedEventId
      properties:
        result:
          $ref: "#/components/schemas/Data"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>WorkflowExecutionCompleted</code>
        event.
    WorkflowExecutionFailedEventAttributes:
      type: object
      required:
        - decisionTaskCompletedEventId
      properties:
        reason:
          $ref: "#/components/schemas/FailureReason"
        details:
          $ref: "#/components/schemas/Data"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>WorkflowExecutionFailed</code> event.
    WorkflowExecutionTimedOutEventAttributes:
      type: object
      required:
        - timeoutType
        - childPolicy
      properties:
        timeoutType:
          $ref: "#/components/schemas/WorkflowExecutionTimeoutType"
        childPolicy:
          $ref: "#/components/schemas/ChildPolicy"
      description: Provides the details of the <code>WorkflowExecutionTimedOut</code> event.
    WorkflowExecutionCanceledEventAttributes:
      type: object
      required:
        - decisionTaskCompletedEventId
      properties:
        details:
          $ref: "#/components/schemas/Data"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>WorkflowExecutionCanceled</code> event.
    WorkflowExecutionContinuedAsNewEventAttributes:
      type: object
      required:
        - decisionTaskCompletedEventId
        - newExecutionRunId
        - taskList
        - childPolicy
        - workflowType
      properties:
        input:
          $ref: "#/components/schemas/Data"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
        newExecutionRunId:
          $ref: "#/components/schemas/WorkflowRunId"
        executionStartToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        taskList:
          $ref: "#/components/schemas/TaskList"
        taskPriority:
          $ref: "#/components/schemas/TaskPriority"
        taskStartToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        childPolicy:
          $ref: "#/components/schemas/ChildPolicy"
        tagList:
          $ref: "#/components/schemas/TagList"
        workflowType:
          $ref: "#/components/schemas/WorkflowType"
        lambdaRole:
          $ref: "#/components/schemas/Arn"
      description: Provides the details of the <code>WorkflowExecutionContinuedAsNew</code>
        event.
    WorkflowExecutionTerminatedEventAttributes:
      type: object
      required:
        - childPolicy
      properties:
        reason:
          $ref: "#/components/schemas/TerminateReason"
        details:
          $ref: "#/components/schemas/Data"
        childPolicy:
          $ref: "#/components/schemas/ChildPolicy"
        cause:
          $ref: "#/components/schemas/WorkflowExecutionTerminatedCause"
      description: Provides the details of the <code>WorkflowExecutionTerminated</code>
        event.
    WorkflowExecutionCancelRequestedEventAttributes:
      type: object
      properties:
        externalWorkflowExecution:
          $ref: "#/components/schemas/WorkflowExecution"
        externalInitiatedEventId:
          $ref: "#/components/schemas/EventId"
        cause:
          $ref: "#/components/schemas/WorkflowExecutionCancelRequestedCause"
      description: Provides the details of the
        <code>WorkflowExecutionCancelRequested</code> event.
    WorkflowExecutionSignaledEventAttributes:
      type: object
      required:
        - signalName
      properties:
        signalName:
          $ref: "#/components/schemas/SignalName"
        input:
          $ref: "#/components/schemas/Data"
        externalWorkflowExecution:
          $ref: "#/components/schemas/WorkflowExecution"
        externalInitiatedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>WorkflowExecutionSignaled</code> event.
    MarkerRecordedEventAttributes:
      type: object
      required:
        - markerName
        - decisionTaskCompletedEventId
      properties:
        markerName:
          $ref: "#/components/schemas/MarkerName"
        details:
          $ref: "#/components/schemas/Data"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>MarkerRecorded</code> event.
    RecordMarkerFailedEventAttributes:
      type: object
      required:
        - markerName
        - cause
        - decisionTaskCompletedEventId
      properties:
        markerName:
          $ref: "#/components/schemas/MarkerName"
        cause:
          $ref: "#/components/schemas/RecordMarkerFailedCause"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>RecordMarkerFailed</code> event.
    TimerStartedEventAttributes:
      type: object
      required:
        - timerId
        - startToFireTimeout
        - decisionTaskCompletedEventId
      properties:
        timerId:
          $ref: "#/components/schemas/TimerId"
        control:
          $ref: "#/components/schemas/Data"
        startToFireTimeout:
          $ref: "#/components/schemas/DurationInSeconds"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>TimerStarted</code> event.
    TimerFiredEventAttributes:
      type: object
      required:
        - timerId
        - startedEventId
      properties:
        timerId:
          $ref: "#/components/schemas/TimerId"
        startedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>TimerFired</code> event.
    TimerCanceledEventAttributes:
      type: object
      required:
        - timerId
        - startedEventId
        - decisionTaskCompletedEventId
      properties:
        timerId:
          $ref: "#/components/schemas/TimerId"
        startedEventId:
          $ref: "#/components/schemas/EventId"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
      description: " Provides the details of the <code>TimerCanceled</code> event. "
    StartChildWorkflowExecutionInitiatedEventAttributes:
      type: object
      required:
        - workflowId
        - workflowType
        - taskList
        - decisionTaskCompletedEventId
        - childPolicy
      properties:
        workflowId:
          $ref: "#/components/schemas/WorkflowId"
        workflowType:
          $ref: "#/components/schemas/WorkflowType"
        control:
          $ref: "#/components/schemas/Data"
        input:
          $ref: "#/components/schemas/Data"
        executionStartToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        taskList:
          $ref: "#/components/schemas/TaskList"
        taskPriority:
          $ref: "#/components/schemas/TaskPriority"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
        childPolicy:
          $ref: "#/components/schemas/ChildPolicy"
        taskStartToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        tagList:
          $ref: "#/components/schemas/TagList"
        lambdaRole:
          $ref: "#/components/schemas/Arn"
      description: Provides the details of the
        <code>StartChildWorkflowExecutionInitiated</code> event.
    SignalExternalWorkflowExecutionInitiatedEventAttributes:
      type: object
      required:
        - workflowId
        - signalName
        - decisionTaskCompletedEventId
      properties:
        workflowId:
          $ref: "#/components/schemas/WorkflowId"
        runId:
          $ref: "#/components/schemas/WorkflowRunIdOptional"
        signalName:
          $ref: "#/components/schemas/SignalName"
        input:
          $ref: "#/components/schemas/Data"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
        control:
          $ref: "#/components/schemas/Data"
      description: Provides the details of the
        <code>SignalExternalWorkflowExecutionInitiated</code> event.
    SignalExternalWorkflowExecutionFailedEventAttributes:
      type: object
      required:
        - workflowId
        - cause
        - initiatedEventId
        - decisionTaskCompletedEventId
      properties:
        workflowId:
          $ref: "#/components/schemas/WorkflowId"
        runId:
          $ref: "#/components/schemas/WorkflowRunIdOptional"
        cause:
          $ref: "#/components/schemas/SignalExternalWorkflowExecutionFailedCause"
        initiatedEventId:
          $ref: "#/components/schemas/EventId"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
        control:
          $ref: "#/components/schemas/Data"
      description: Provides the details of the
        <code>SignalExternalWorkflowExecutionFailed</code> event.
    RequestCancelExternalWorkflowExecutionInitiatedEventAttributes:
      type: object
      required:
        - workflowId
        - decisionTaskCompletedEventId
      properties:
        workflowId:
          $ref: "#/components/schemas/WorkflowId"
        runId:
          $ref: "#/components/schemas/WorkflowRunIdOptional"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
        control:
          $ref: "#/components/schemas/Data"
      description: Provides the details of the
        <code>RequestCancelExternalWorkflowExecutionInitiated</code> event.
    RequestCancelExternalWorkflowExecutionFailedEventAttributes:
      type: object
      required:
        - workflowId
        - cause
        - initiatedEventId
        - decisionTaskCompletedEventId
      properties:
        workflowId:
          $ref: "#/components/schemas/WorkflowId"
        runId:
          $ref: "#/components/schemas/WorkflowRunIdOptional"
        cause:
          $ref: "#/components/schemas/RequestCancelExternalWorkflowExecutionFailedC\
            ause"
        initiatedEventId:
          $ref: "#/components/schemas/EventId"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
        control:
          $ref: "#/components/schemas/Data"
      description: Provides the details of the
        <code>RequestCancelExternalWorkflowExecutionFailed</code> event.
    ScheduleActivityTaskFailedEventAttributes:
      type: object
      required:
        - activityType
        - activityId
        - cause
        - decisionTaskCompletedEventId
      properties:
        activityType:
          $ref: "#/components/schemas/ActivityType"
        activityId:
          $ref: "#/components/schemas/ActivityId"
        cause:
          $ref: "#/components/schemas/ScheduleActivityTaskFailedCause"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>ScheduleActivityTaskFailed</code>
        event.
    RequestCancelActivityTaskFailedEventAttributes:
      type: object
      required:
        - activityId
        - cause
        - decisionTaskCompletedEventId
      properties:
        activityId:
          $ref: "#/components/schemas/ActivityId"
        cause:
          $ref: "#/components/schemas/RequestCancelActivityTaskFailedCause"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>RequestCancelActivityTaskFailed</code>
        event.
    StartTimerFailedEventAttributes:
      type: object
      required:
        - timerId
        - cause
        - decisionTaskCompletedEventId
      properties:
        timerId:
          $ref: "#/components/schemas/TimerId"
        cause:
          $ref: "#/components/schemas/StartTimerFailedCause"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>StartTimerFailed</code> event.
    StartChildWorkflowExecutionFailedEventAttributes:
      type: object
      required:
        - workflowType
        - cause
        - workflowId
        - initiatedEventId
        - decisionTaskCompletedEventId
      properties:
        workflowType:
          $ref: "#/components/schemas/WorkflowType"
        cause:
          $ref: "#/components/schemas/StartChildWorkflowExecutionFailedCause"
        workflowId:
          $ref: "#/components/schemas/WorkflowId"
        initiatedEventId:
          $ref: "#/components/schemas/EventId"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
        control:
          $ref: "#/components/schemas/Data"
      description: Provides the details of the
        <code>StartChildWorkflowExecutionFailed</code> event.
    LambdaFunctionScheduledEventAttributes:
      type: object
      required:
        - id
        - name
        - decisionTaskCompletedEventId
      properties:
        id:
          $ref: "#/components/schemas/FunctionId"
        name:
          $ref: "#/components/schemas/FunctionName"
        control:
          $ref: "#/components/schemas/Data"
        input:
          $ref: "#/components/schemas/FunctionInput"
        startToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>LambdaFunctionScheduled</code> event.
        It isn't set for other event types.
    LambdaFunctionStartedEventAttributes:
      type: object
      required:
        - scheduledEventId
      properties:
        scheduledEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>LambdaFunctionStarted</code> event. It
        isn't set for other event types.
    LambdaFunctionCompletedEventAttributes:
      type: object
      required:
        - scheduledEventId
        - startedEventId
      properties:
        scheduledEventId:
          $ref: "#/components/schemas/EventId"
        startedEventId:
          $ref: "#/components/schemas/EventId"
        result:
          $ref: "#/components/schemas/Data"
      description: Provides the details of the <code>LambdaFunctionCompleted</code> event.
        It isn't set for other event types.
    LambdaFunctionFailedEventAttributes:
      type: object
      required:
        - scheduledEventId
        - startedEventId
      properties:
        scheduledEventId:
          $ref: "#/components/schemas/EventId"
        startedEventId:
          $ref: "#/components/schemas/EventId"
        reason:
          $ref: "#/components/schemas/FailureReason"
        details:
          $ref: "#/components/schemas/Data"
      description: Provides the details of the <code>LambdaFunctionFailed</code> event. It
        isn't set for other event types.
    LambdaFunctionTimedOutEventAttributes:
      type: object
      required:
        - scheduledEventId
        - startedEventId
      properties:
        scheduledEventId:
          $ref: "#/components/schemas/EventId"
        startedEventId:
          $ref: "#/components/schemas/EventId"
        timeoutType:
          $ref: "#/components/schemas/LambdaFunctionTimeoutType"
      description: Provides details of the <code>LambdaFunctionTimedOut</code> event.
    ScheduleLambdaFunctionFailedEventAttributes:
      type: object
      required:
        - id
        - name
        - cause
        - decisionTaskCompletedEventId
      properties:
        id:
          $ref: "#/components/schemas/FunctionId"
        name:
          $ref: "#/components/schemas/FunctionName"
        cause:
          $ref: "#/components/schemas/ScheduleLambdaFunctionFailedCause"
        decisionTaskCompletedEventId:
          $ref: "#/components/schemas/EventId"
      description: Provides the details of the <code>ScheduleLambdaFunctionFailed</code>
        event. It isn't set for other event types.
    StartLambdaFunctionFailedEventAttributes:
      type: object
      properties:
        scheduledEventId:
          $ref: "#/components/schemas/EventId"
        cause:
          $ref: "#/components/schemas/StartLambdaFunctionFailedCause"
        message:
          $ref: "#/components/schemas/CauseMessage"
      description: Provides the details of the <code>StartLambdaFunctionFailed</code>
        event. It isn't set for other event types.
    HistoryEvent:
      type: object
      required:
        - eventTimestamp
        - eventType
        - eventId
      properties:
        eventTimestamp:
          $ref: "#/components/schemas/Timestamp"
        eventType:
          $ref: "#/components/schemas/EventType"
        eventId:
          $ref: "#/components/schemas/EventId"
        workflowExecutionStartedEventAttributes:
          $ref: "#/components/schemas/WorkflowExecutionStartedEventAttributes"
        workflowExecutionCompletedEventAttributes:
          $ref: "#/components/schemas/WorkflowExecutionCompletedEventAttributes"
        completeWorkflowExecutionFailedEventAttributes:
          $ref: "#/components/schemas/CompleteWorkflowExecutionFailedEventAttributes"
        workflowExecutionFailedEventAttributes:
          $ref: "#/components/schemas/WorkflowExecutionFailedEventAttributes"
        failWorkflowExecutionFailedEventAttributes:
          $ref: "#/components/schemas/FailWorkflowExecutionFailedEventAttributes"
        workflowExecutionTimedOutEventAttributes:
          $ref: "#/components/schemas/WorkflowExecutionTimedOutEventAttributes"
        workflowExecutionCanceledEventAttributes:
          $ref: "#/components/schemas/WorkflowExecutionCanceledEventAttributes"
        cancelWorkflowExecutionFailedEventAttributes:
          $ref: "#/components/schemas/CancelWorkflowExecutionFailedEventAttributes"
        workflowExecutionContinuedAsNewEventAttributes:
          $ref: "#/components/schemas/WorkflowExecutionContinuedAsNewEventAttributes"
        continueAsNewWorkflowExecutionFailedEventAttributes:
          $ref: "#/components/schemas/ContinueAsNewWorkflowExecutionFailedEventAttr\
            ibutes"
        workflowExecutionTerminatedEventAttributes:
          $ref: "#/components/schemas/WorkflowExecutionTerminatedEventAttributes"
        workflowExecutionCancelRequestedEventAttributes:
          $ref: "#/components/schemas/WorkflowExecutionCancelRequestedEventAttribut\
            es"
        decisionTaskScheduledEventAttributes:
          $ref: "#/components/schemas/DecisionTaskScheduledEventAttributes"
        decisionTaskStartedEventAttributes:
          $ref: "#/components/schemas/DecisionTaskStartedEventAttributes"
        decisionTaskCompletedEventAttributes:
          $ref: "#/components/schemas/DecisionTaskCompletedEventAttributes"
        decisionTaskTimedOutEventAttributes:
          $ref: "#/components/schemas/DecisionTaskTimedOutEventAttributes"
        activityTaskScheduledEventAttributes:
          $ref: "#/components/schemas/ActivityTaskScheduledEventAttributes"
        activityTaskStartedEventAttributes:
          $ref: "#/components/schemas/ActivityTaskStartedEventAttributes"
        activityTaskCompletedEventAttributes:
          $ref: "#/components/schemas/ActivityTaskCompletedEventAttributes"
        activityTaskFailedEventAttributes:
          $ref: "#/components/schemas/ActivityTaskFailedEventAttributes"
        activityTaskTimedOutEventAttributes:
          $ref: "#/components/schemas/ActivityTaskTimedOutEventAttributes"
        activityTaskCanceledEventAttributes:
          $ref: "#/components/schemas/ActivityTaskCanceledEventAttributes"
        activityTaskCancelRequestedEventAttributes:
          $ref: "#/components/schemas/ActivityTaskCancelRequestedEventAttributes"
        workflowExecutionSignaledEventAttributes:
          $ref: "#/components/schemas/WorkflowExecutionSignaledEventAttributes"
        markerRecordedEventAttributes:
          $ref: "#/components/schemas/MarkerRecordedEventAttributes"
        recordMarkerFailedEventAttributes:
          $ref: "#/components/schemas/RecordMarkerFailedEventAttributes"
        timerStartedEventAttributes:
          $ref: "#/components/schemas/TimerStartedEventAttributes"
        timerFiredEventAttributes:
          $ref: "#/components/schemas/TimerFiredEventAttributes"
        timerCanceledEventAttributes:
          $ref: "#/components/schemas/TimerCanceledEventAttributes"
        startChildWorkflowExecutionInitiatedEventAttributes:
          $ref: "#/components/schemas/StartChildWorkflowExecutionInitiatedEventAttr\
            ibutes"
        childWorkflowExecutionStartedEventAttributes:
          $ref: "#/components/schemas/ChildWorkflowExecutionStartedEventAttributes"
        childWorkflowExecutionCompletedEventAttributes:
          $ref: "#/components/schemas/ChildWorkflowExecutionCompletedEventAttributes"
        childWorkflowExecutionFailedEventAttributes:
          $ref: "#/components/schemas/ChildWorkflowExecutionFailedEventAttributes"
        childWorkflowExecutionTimedOutEventAttributes:
          $ref: "#/components/schemas/ChildWorkflowExecutionTimedOutEventAttributes"
        childWorkflowExecutionCanceledEventAttributes:
          $ref: "#/components/schemas/ChildWorkflowExecutionCanceledEventAttributes"
        childWorkflowExecutionTerminatedEventAttributes:
          $ref: "#/components/schemas/ChildWorkflowExecutionTerminatedEventAttribut\
            es"
        signalExternalWorkflowExecutionInitiatedEventAttributes:
          $ref: "#/components/schemas/SignalExternalWorkflowExecutionInitiatedEvent\
            Attributes"
        externalWorkflowExecutionSignaledEventAttributes:
          $ref: "#/components/schemas/ExternalWorkflowExecutionSignaledEventAttribu\
            tes"
        signalExternalWorkflowExecutionFailedEventAttributes:
          $ref: "#/components/schemas/SignalExternalWorkflowExecutionFailedEventAtt\
            ributes"
        externalWorkflowExecutionCancelRequestedEventAttributes:
          $ref: "#/components/schemas/ExternalWorkflowExecutionCancelRequestedEvent\
            Attributes"
        requestCancelExternalWorkflowExecutionInitiatedEventAttributes:
          $ref: "#/components/schemas/RequestCancelExternalWorkflowExecutionInitiat\
            edEventAttributes"
        requestCancelExternalWorkflowExecutionFailedEventAttributes:
          $ref: "#/components/schemas/RequestCancelExternalWorkflowExecutionFailedE\
            ventAttributes"
        scheduleActivityTaskFailedEventAttributes:
          $ref: "#/components/schemas/ScheduleActivityTaskFailedEventAttributes"
        requestCancelActivityTaskFailedEventAttributes:
          $ref: "#/components/schemas/RequestCancelActivityTaskFailedEventAttributes"
        startTimerFailedEventAttributes:
          $ref: "#/components/schemas/StartTimerFailedEventAttributes"
        cancelTimerFailedEventAttributes:
          $ref: "#/components/schemas/CancelTimerFailedEventAttributes"
        startChildWorkflowExecutionFailedEventAttributes:
          $ref: "#/components/schemas/StartChildWorkflowExecutionFailedEventAttribu\
            tes"
        lambdaFunctionScheduledEventAttributes:
          $ref: "#/components/schemas/LambdaFunctionScheduledEventAttributes"
        lambdaFunctionStartedEventAttributes:
          $ref: "#/components/schemas/LambdaFunctionStartedEventAttributes"
        lambdaFunctionCompletedEventAttributes:
          $ref: "#/components/schemas/LambdaFunctionCompletedEventAttributes"
        lambdaFunctionFailedEventAttributes:
          $ref: "#/components/schemas/LambdaFunctionFailedEventAttributes"
        lambdaFunctionTimedOutEventAttributes:
          $ref: "#/components/schemas/LambdaFunctionTimedOutEventAttributes"
        scheduleLambdaFunctionFailedEventAttributes:
          $ref: "#/components/schemas/ScheduleLambdaFunctionFailedEventAttributes"
        startLambdaFunctionFailedEventAttributes:
          $ref: "#/components/schemas/StartLambdaFunctionFailedEventAttributes"
      description: <p>Event within a workflow execution. A history event can be one of
        these types:</p> <ul> <li> <p> <code>ActivityTaskCancelRequested</code>
        – A <code>RequestCancelActivityTask</code> decision was received by the
        system.</p> </li> <li> <p> <code>ActivityTaskCanceled</code> – The
        activity task was successfully canceled.</p> </li> <li> <p>
        <code>ActivityTaskCompleted</code> – An activity worker successfully
        completed an activity task by calling
        <a>RespondActivityTaskCompleted</a>.</p> </li> <li> <p>
        <code>ActivityTaskFailed</code> – An activity worker failed an activity
        task by calling <a>RespondActivityTaskFailed</a>.</p> </li> <li> <p>
        <code>ActivityTaskScheduled</code> – An activity task was scheduled for
        execution.</p> </li> <li> <p> <code>ActivityTaskStarted</code> – The
        scheduled activity task was dispatched to a worker.</p> </li> <li> <p>
        <code>ActivityTaskTimedOut</code> – The activity task timed out.</p>
        </li> <li> <p> <code>CancelTimerFailed</code> – Failed to process
        CancelTimer decision. This happens when the decision isn't configured
        properly, for example no timer exists with the specified timer Id.</p>
        </li> <li> <p> <code>CancelWorkflowExecutionFailed</code> – A request to
        cancel a workflow execution failed.</p> </li> <li> <p>
        <code>ChildWorkflowExecutionCanceled</code> – A child workflow
        execution, started by this workflow execution, was canceled and
        closed.</p> </li> <li> <p> <code>ChildWorkflowExecutionCompleted</code>
        – A child workflow execution, started by this workflow execution,
        completed successfully and was closed.</p> </li> <li> <p>
        <code>ChildWorkflowExecutionFailed</code> – A child workflow execution,
        started by this workflow execution, failed to complete successfully and
        was closed.</p> </li> <li> <p>
        <code>ChildWorkflowExecutionStarted</code> – A child workflow execution
        was successfully started.</p> </li> <li> <p>
        <code>ChildWorkflowExecutionTerminated</code> – A child workflow
        execution, started by this workflow execution, was terminated.</p> </li>
        <li> <p> <code>ChildWorkflowExecutionTimedOut</code> – A child workflow
        execution, started by this workflow execution, timed out and was
        closed.</p> </li> <li> <p> <code>CompleteWorkflowExecutionFailed</code>
        – The workflow execution failed to complete.</p> </li> <li> <p>
        <code>ContinueAsNewWorkflowExecutionFailed</code> – The workflow
        execution failed to complete after being continued as a new workflow
        execution.</p> </li> <li> <p> <code>DecisionTaskCompleted</code> – The
        decider successfully completed a decision task by calling
        <a>RespondDecisionTaskCompleted</a>.</p> </li> <li> <p>
        <code>DecisionTaskScheduled</code> – A decision task was scheduled for
        the workflow execution.</p> </li> <li> <p>
        <code>DecisionTaskStarted</code> – The decision task was dispatched to a
        decider.</p> </li> <li> <p> <code>DecisionTaskTimedOut</code> – The
        decision task timed out.</p> </li> <li> <p>
        <code>ExternalWorkflowExecutionCancelRequested</code> – Request to
        cancel an external workflow execution was successfully delivered to the
        target execution.</p> </li> <li> <p>
        <code>ExternalWorkflowExecutionSignaled</code> – A signal, requested by
        this workflow execution, was successfully delivered to the target
        external workflow execution.</p> </li> <li> <p>
        <code>FailWorkflowExecutionFailed</code> – A request to mark a workflow
        execution as failed, itself failed.</p> </li> <li> <p>
        <code>MarkerRecorded</code> – A marker was recorded in the workflow
        history as the result of a <code>RecordMarker</code> decision.</p> </li>
        <li> <p> <code>RecordMarkerFailed</code> – A <code>RecordMarker</code>
        decision was returned as failed.</p> </li> <li> <p>
        <code>RequestCancelActivityTaskFailed</code> – Failed to process
        RequestCancelActivityTask decision. This happens when the decision isn't
        configured properly.</p> </li> <li> <p>
        <code>RequestCancelExternalWorkflowExecutionFailed</code> – Request to
        cancel an external workflow execution failed.</p> </li> <li> <p>
        <code>RequestCancelExternalWorkflowExecutionInitiated</code> – A request
        was made to request the cancellation of an external workflow
        execution.</p> </li> <li> <p> <code>ScheduleActivityTaskFailed</code> –
        Failed to process ScheduleActivityTask decision. This happens when the
        decision isn't configured properly, for example the activity type
        specified isn't registered.</p> </li> <li> <p>
        <code>SignalExternalWorkflowExecutionFailed</code> – The request to
        signal an external workflow execution failed.</p> </li> <li> <p>
        <code>SignalExternalWorkflowExecutionInitiated</code> – A request to
        signal an external workflow was made.</p> </li> <li> <p>
        <code>StartActivityTaskFailed</code> – A scheduled activity task failed
        to start.</p> </li> <li> <p>
        <code>StartChildWorkflowExecutionFailed</code> – Failed to process
        StartChildWorkflowExecution decision. This happens when the decision
        isn't configured properly, for example the workflow type specified isn't
        registered.</p> </li> <li> <p>
        <code>StartChildWorkflowExecutionInitiated</code> – A request was made
        to start a child workflow execution.</p> </li> <li> <p>
        <code>StartTimerFailed</code> – Failed to process StartTimer decision.
        This happens when the decision isn't configured properly, for example a
        timer already exists with the specified timer Id.</p> </li> <li> <p>
        <code>TimerCanceled</code> – A timer, previously started for this
        workflow execution, was successfully canceled.</p> </li> <li> <p>
        <code>TimerFired</code> – A timer, previously started for this workflow
        execution, fired.</p> </li> <li> <p> <code>TimerStarted</code> – A timer
        was started for the workflow execution due to a <code>StartTimer</code>
        decision.</p> </li> <li> <p>
        <code>WorkflowExecutionCancelRequested</code> – A request to cancel this
        workflow execution was made.</p> </li> <li> <p>
        <code>WorkflowExecutionCanceled</code> – The workflow execution was
        successfully canceled and closed.</p> </li> <li> <p>
        <code>WorkflowExecutionCompleted</code> – The workflow execution was
        closed due to successful completion.</p> </li> <li> <p>
        <code>WorkflowExecutionContinuedAsNew</code> – The workflow execution
        was closed and a new execution of the same type was created with the
        same workflowId.</p> </li> <li> <p> <code>WorkflowExecutionFailed</code>
        – The workflow execution closed due to a failure.</p> </li> <li> <p>
        <code>WorkflowExecutionSignaled</code> – An external signal was received
        for the workflow execution.</p> </li> <li> <p>
        <code>WorkflowExecutionStarted</code> – The workflow execution was
        started.</p> </li> <li> <p> <code>WorkflowExecutionTerminated</code> –
        The workflow execution was terminated.</p> </li> <li> <p>
        <code>WorkflowExecutionTimedOut</code> – The workflow execution was
        closed because a time out was exceeded.</p> </li> </ul>
    LambdaFunctionTimeoutType:
      type: string
      enum:
        - START_TO_CLOSE
    ResourceTagList:
      type: array
      items:
        $ref: "#/components/schemas/ResourceTag"
    MarkerName:
      type: string
      minLength: 1
      maxLength: 256
    OpenDecisionTasksCount:
      type: integer
      minimum: 0
      maximum: 1
    Truncated:
      type: boolean
    RecordMarkerFailedCause:
      type: string
      enum:
        - OPERATION_NOT_PERMITTED
    RequestCancelActivityTaskFailedCause:
      type: string
      enum:
        - ACTIVITY_ID_UNKNOWN
        - OPERATION_NOT_PERMITTED
    WorkflowId:
      type: string
      minLength: 1
      maxLength: 256
    WorkflowRunIdOptional:
      type: string
      maxLength: 64
    RequestCancelExternalWorkflowExecutionFailedCause:
      type: string
      enum:
        - UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION
        - REQUEST_CANCEL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED
        - OPERATION_NOT_PERMITTED
    ResourceTagKey:
      type: string
      minLength: 1
      maxLength: 128
    ResourceTagValue:
      type: string
      maxLength: 256
    ResourceTag:
      type: object
      required:
        - key
      properties:
        key:
          $ref: "#/components/schemas/ResourceTagKey"
        value:
          $ref: "#/components/schemas/ResourceTagValue"
      description: "<p>Tags are key-value pairs that can be associated with Amazon SWF
        state machines and activities.</p> <p>Tags may only contain unicode
        letters, digits, whitespace, or these symbols: <code>_ . : / = + -
        @</code>.</p>"
    ResourceTagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/ResourceTagKey"
    WorkflowRunId:
      type: string
      minLength: 1
      maxLength: 64
    ScheduleActivityTaskFailedCause:
      type: string
      enum:
        - ACTIVITY_TYPE_DEPRECATED
        - ACTIVITY_TYPE_DOES_NOT_EXIST
        - ACTIVITY_ID_ALREADY_IN_USE
        - OPEN_ACTIVITIES_LIMIT_EXCEEDED
        - ACTIVITY_CREATION_RATE_EXCEEDED
        - DEFAULT_SCHEDULE_TO_CLOSE_TIMEOUT_UNDEFINED
        - DEFAULT_TASK_LIST_UNDEFINED
        - DEFAULT_SCHEDULE_TO_START_TIMEOUT_UNDEFINED
        - DEFAULT_START_TO_CLOSE_TIMEOUT_UNDEFINED
        - DEFAULT_HEARTBEAT_TIMEOUT_UNDEFINED
        - OPERATION_NOT_PERMITTED
    ScheduleLambdaFunctionFailedCause:
      type: string
      enum:
        - ID_ALREADY_IN_USE
        - OPEN_LAMBDA_FUNCTIONS_LIMIT_EXCEEDED
        - LAMBDA_FUNCTION_CREATION_RATE_EXCEEDED
        - LAMBDA_SERVICE_NOT_AVAILABLE_IN_REGION
    SignalName:
      type: string
      minLength: 1
      maxLength: 256
    SignalExternalWorkflowExecutionFailedCause:
      type: string
      enum:
        - UNKNOWN_EXTERNAL_WORKFLOW_EXECUTION
        - SIGNAL_EXTERNAL_WORKFLOW_EXECUTION_RATE_EXCEEDED
        - OPERATION_NOT_PERMITTED
    StartChildWorkflowExecutionFailedCause:
      type: string
      enum:
        - WORKFLOW_TYPE_DOES_NOT_EXIST
        - WORKFLOW_TYPE_DEPRECATED
        - OPEN_CHILDREN_LIMIT_EXCEEDED
        - OPEN_WORKFLOWS_LIMIT_EXCEEDED
        - CHILD_CREATION_RATE_EXCEEDED
        - WORKFLOW_ALREADY_RUNNING
        - DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED
        - DEFAULT_TASK_LIST_UNDEFINED
        - DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED
        - DEFAULT_CHILD_POLICY_UNDEFINED
        - OPERATION_NOT_PERMITTED
    StartLambdaFunctionFailedCause:
      type: string
      enum:
        - ASSUME_ROLE_FAILED
    StartTimerFailedCause:
      type: string
      enum:
        - TIMER_ID_ALREADY_IN_USE
        - OPEN_TIMERS_LIMIT_EXCEEDED
        - TIMER_CREATION_RATE_EXCEEDED
        - OPERATION_NOT_PERMITTED
    Tag:
      type: string
      minLength: 0
      maxLength: 256
    TerminateReason:
      type: string
      maxLength: 256
    VersionOptional:
      type: string
      maxLength: 64
    WorkflowExecutionCancelRequestedCause:
      type: string
      enum:
        - CHILD_POLICY_APPLIED
    WorkflowExecutionConfiguration:
      type: object
      required:
        - taskStartToCloseTimeout
        - executionStartToCloseTimeout
        - taskList
        - childPolicy
      properties:
        taskStartToCloseTimeout:
          $ref: "#/components/schemas/DurationInSeconds"
        executionStartToCloseTimeout:
          $ref: "#/components/schemas/DurationInSeconds"
        taskList:
          $ref: "#/components/schemas/TaskList"
        taskPriority:
          $ref: "#/components/schemas/TaskPriority"
        childPolicy:
          $ref: "#/components/schemas/ChildPolicy"
        lambdaRole:
          $ref: "#/components/schemas/Arn"
      description: The configuration settings for a workflow execution including timeout
        values, tasklist etc. These configuration settings are determined from
        the defaults specified when registering the workflow type and those
        specified when starting the workflow execution.
    WorkflowExecutionInfo:
      type: object
      required:
        - execution
        - workflowType
        - startTimestamp
        - executionStatus
      properties:
        execution:
          $ref: "#/components/schemas/WorkflowExecution"
        workflowType:
          $ref: "#/components/schemas/WorkflowType"
        startTimestamp:
          $ref: "#/components/schemas/Timestamp"
        closeTimestamp:
          $ref: "#/components/schemas/Timestamp"
        executionStatus:
          $ref: "#/components/schemas/ExecutionStatus"
        closeStatus:
          $ref: "#/components/schemas/CloseStatus"
        parent:
          $ref: "#/components/schemas/WorkflowExecution"
        tagList:
          $ref: "#/components/schemas/TagList"
        cancelRequested:
          $ref: "#/components/schemas/Canceled"
      description: Contains information about a workflow execution.
    WorkflowExecutionOpenCounts:
      type: object
      required:
        - openActivityTasks
        - openDecisionTasks
        - openTimers
        - openChildWorkflowExecutions
      properties:
        openActivityTasks:
          $ref: "#/components/schemas/Count"
        openDecisionTasks:
          $ref: "#/components/schemas/OpenDecisionTasksCount"
        openTimers:
          $ref: "#/components/schemas/Count"
        openChildWorkflowExecutions:
          $ref: "#/components/schemas/Count"
        openLambdaFunctions:
          $ref: "#/components/schemas/Count"
      description: Contains the counts of open tasks, child workflow executions and timers
        for a workflow execution.
    WorkflowExecutionInfoList:
      type: array
      items:
        $ref: "#/components/schemas/WorkflowExecutionInfo"
    WorkflowExecutionTerminatedCause:
      type: string
      enum:
        - CHILD_POLICY_APPLIED
        - EVENT_LIMIT_EXCEEDED
        - OPERATOR_INITIATED
    WorkflowTypeConfiguration:
      type: object
      properties:
        defaultTaskStartToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        defaultExecutionStartToCloseTimeout:
          $ref: "#/components/schemas/DurationInSecondsOptional"
        defaultTaskList:
          $ref: "#/components/schemas/TaskList"
        defaultTaskPriority:
          $ref: "#/components/schemas/TaskPriority"
        defaultChildPolicy:
          $ref: "#/components/schemas/ChildPolicy"
        defaultLambdaRole:
          $ref: "#/components/schemas/Arn"
      description: The configuration settings of a workflow type.
    WorkflowTypeInfo:
      type: object
      required:
        - workflowType
        - status
        - creationDate
      properties:
        workflowType:
          $ref: "#/components/schemas/WorkflowType"
        status:
          $ref: "#/components/schemas/RegistrationStatus"
        description:
          $ref: "#/components/schemas/Description"
        creationDate:
          $ref: "#/components/schemas/Timestamp"
        deprecationDate:
          $ref: "#/components/schemas/Timestamp"
      description: Contains information about a workflow type.
    WorkflowTypeInfoList:
      type: array
      items:
        $ref: "#/components/schemas/WorkflowTypeInfo"
